{
  "description": "sample Github_easy/o76476.json",
  "meta": {
    "full_size": 573,
    "stripped_size": 505,
    "features": [
      "@minmaxItems",
      "@minmaxLength",
      "additionalProperties",
      "items",
      "pattern"
    ],
    "raw_features": [
      "$schema",
      "_boolSchema",
      "minItems",
      "minLength",
      "properties",
      "required",
      "type",
      "type:array",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "title": "create tasks request",
    "description": "create tasks request",
    "type": "object",
    "properties": {
      "docker_image": {
        "type": "string",
        "pattern": "(.+/)?.+:.+"
      },
      "cmd": {
        "type": "array",
        "minItems": 1,
        "items": {
          "type": "string"
        }
      },
      "creds": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "minLength": 1
          },
          "username": {
            "type": "string",
            "minLength": 1
          },
          "password": {
            "type": "string",
            "minLength": 1
          }
        },
        "required": [
          "email",
          "username",
          "password"
        ],
        "additionalProperties": false
      }
    },
    "required": [
      "docker_image",
      "cmd"
    ],
    "additionalProperties": false
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "docker_image": "docker.io/library/python:3.9",
        "cmd": [
          "python",
          "-m",
          "http.server"
        ],
        "creds": {
          "email": "example@example.com",
          "username": "example_user",
          "password": "example_password"
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on minLength keyword",
      "valid": false,
      "rust_error": "\"\" is shorter than 1 character",
      "python_error": "'' should be non-empty\n\nFailed validating 'minLength' in schema['properties']['creds']['properties']['email']:\n    {'type': 'string', 'minLength': 1}\n\nOn instance['creds']['email']:\n    ''",
      "data": {
        "docker_image": "docker.io/library/python:3.9",
        "cmd": [
          "python",
          "-m",
          "http.server"
        ],
        "creds": {
          "email": "",
          "username": "example_user",
          "password": "example_password"
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on pattern keyword",
      "valid": false,
      "rust_error": "\"invalid_image\" does not match \"(.+/)?.+:.+\"",
      "python_error": "'invalid_image' does not match '(.+/)?.+:.+'\n\nFailed validating 'pattern' in schema['properties']['docker_image']:\n    {'type': 'string', 'pattern': '(.+/)?.+:.+'}\n\nOn instance['docker_image']:\n    'invalid_image'",
      "data": {
        "docker_image": "invalid_image",
        "cmd": [
          "python",
          "-m",
          "http.server"
        ],
        "creds": {
          "email": "example@example.com",
          "username": "example_user",
          "password": "example_password"
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on minItems keyword",
      "valid": false,
      "rust_error": "[] has less than 1 item",
      "python_error": "[] should be non-empty\n\nFailed validating 'minItems' in schema['properties']['cmd']:\n    {'type': 'array', 'minItems': 1, 'items': {'type': 'string'}}\n\nOn instance['cmd']:\n    []",
      "data": {
        "docker_image": "docker.io/library/python:3.9",
        "cmd": [],
        "creds": {
          "email": "example@example.com",
          "username": "example_user",
          "password": "example_password"
        }
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"docker.io/library/python\" does not match \"(.+/)?.+:.+\"",
      "python_error": "'docker.io/library/python' does not match '(.+/)?.+:.+'\n\nFailed validating 'pattern' in schema['properties']['docker_image']:\n    {'type': 'string', 'pattern': '(.+/)?.+:.+'}\n\nOn instance['docker_image']:\n    'docker.io/library/python'",
      "data": {
        "docker_image": "docker.io/library/python",
        "cmd": [
          "python",
          "-m",
          "http.server"
        ],
        "creds": {
          "email": "example@example.com",
          "username": "example_user",
          "password": "example_password"
        }
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "docker_image": "docker.io/library/nginx:latest",
        "cmd": [
          "nginx",
          "-g",
          "daemon off;"
        ],
        "creds": {
          "email": "user@example.com",
          "username": "example_user",
          "password": "example_password"
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on minItems keyword",
      "valid": false,
      "rust_error": "[] has less than 1 item",
      "python_error": "[] should be non-empty\n\nFailed validating 'minItems' in schema['properties']['cmd']:\n    {'type': 'array', 'minItems': 1, 'items': {'type': 'string'}}\n\nOn instance['cmd']:\n    []",
      "data": {
        "docker_image": "docker.io/library/nginx:latest",
        "cmd": [],
        "creds": {
          "email": "user@example.com",
          "username": "example_user",
          "password": "example_password"
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on pattern keyword",
      "valid": false,
      "rust_error": "\"invalid\" does not match \"(.+/)?.+:.+\"",
      "python_error": "'invalid' does not match '(.+/)?.+:.+'\n\nFailed validating 'pattern' in schema['properties']['docker_image']:\n    {'type': 'string', 'pattern': '(.+/)?.+:.+'}\n\nOn instance['docker_image']:\n    'invalid'",
      "data": {
        "docker_image": "invalid",
        "cmd": [
          "nginx",
          "-g",
          "daemon off;"
        ],
        "creds": {
          "email": "user@example.com",
          "username": "example_user",
          "password": "example_password"
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on minLength keyword",
      "valid": false,
      "rust_error": "\"\" is shorter than 1 character",
      "python_error": "'' should be non-empty\n\nFailed validating 'minLength' in schema['properties']['creds']['properties']['email']:\n    {'type': 'string', 'minLength': 1}\n\nOn instance['creds']['email']:\n    ''",
      "data": {
        "docker_image": "docker.io/library/nginx:latest",
        "cmd": [
          "nginx",
          "-g",
          "daemon off;"
        ],
        "creds": {
          "email": "",
          "username": "example_user",
          "password": "example_password"
        }
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "[] has less than 1 item",
      "python_error": "[] should be non-empty\n\nFailed validating 'minItems' in schema['properties']['cmd']:\n    {'type': 'array', 'minItems': 1, 'items': {'type': 'string'}}\n\nOn instance['cmd']:\n    []",
      "data": {
        "docker_image": "docker.io/library/nginx:latest",
        "cmd": [],
        "creds": {
          "email": "user@example.com",
          "username": "example_user",
          "password": "example_password"
        }
      }
    }
  ]
}