{
  "description": "sample JsonSchemaStore/fabric.mod.json",
  "meta": {
    "full_size": 8280,
    "stripped_size": 3103,
    "features": [
      "$ref",
      "additionalProperties",
      "additionalProperties:object",
      "const",
      "enum",
      "items",
      "oneOf",
      "pattern",
      "propertyNames"
    ],
    "raw_features": [
      "$id",
      "$schema",
      "definitions",
      "properties",
      "required",
      "type",
      "type:array",
      "type:integer",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$id": "https://json.schemastore.org/fabric.mod.json",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "definitions": {
      "entrypoint": {
        "oneOf": [
          {
            "type": "object",
            "properties": {
              "adapter": {
                "type": "string",
                "description": "The language adapter to use",
                "default": "default"
              },
              "value": {
                "type": "string",
                "description": "The entrypoint function or class"
              }
            },
            "required": [
              "value"
            ]
          },
          {
            "type": "string",
            "description": "The entrypoint function or class"
          }
        ]
      },
      "contactInfo": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "Contact e-mail pertaining to the mod"
          },
          "irc": {
            "type": "string",
            "description": "IRC channel pertaining to the mod. Must be of a valid URL format"
          },
          "homepage": {
            "type": "string",
            "description": "Project or user homepage. Must be a valid HTTP/HTTPS address"
          },
          "issues": {
            "type": "string",
            "description": "Project issue tracker. Must be a valid HTTP/HTTPS address"
          },
          "sources": {
            "type": "string",
            "description": "Project source code repository. Must be a valid URL"
          }
        },
        "additionalProperties": {
          "type": "string",
          "description": "Custom contact or profile informations"
        }
      },
      "environment": {
        "type": "string",
        "enum": [
          "*",
          "client",
          "server"
        ],
        "description": "The environment where this mod will be loaded"
      },
      "nestedJar": {
        "type": "object",
        "properties": {
          "file": {
            "type": "string",
            "description": "A string value pointing to a path from the root of the JAR to a nested JAR which should be loaded alongside the outer mod JAR"
          }
        },
        "required": [
          "file"
        ]
      },
      "person": {
        "oneOf": [
          {
            "type": "string",
            "description": "The name of the person"
          },
          {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "The name of the person"
              },
              "contact": {
                "description": "Contact information for the person",
                "$ref": "#/definitions/contactInfo"
              }
            },
            "required": [
              "name"
            ]
          }
        ]
      },
      "versionRanges": {
        "oneOf": [
          {
            "$ref": "#/definitions/versionRange"
          },
          {
            "type": "array",
            "description": "Multiple version ranges that are combined with an \"OR\" relationship - only one of the ranges needs to match",
            "items": {
              "$ref": "#/definitions/versionRange"
            }
          }
        ]
      },
      "versionRange": {
        "type": "string",
        "description": "A version range that matches versions. The following variants are supported:\n\n- A single asterisk matches any version.\n- Ranges following NPM semver specification including >=, >, =, <, <=, X-ranges (1.x), tilde ranges (fixed minor) and caret ranges (fixed major).\n- Additionally exact string matches will always be performed.",
        "x-intellij-html-description": "<p>A version range or an array of those that match versions. The following variants are supported:</p><ul><li><code>*</code> matches any version.</li><li>Ranges following <a href=\"https://docs.npmjs.com/about-semantic-versioning\">NPM semver specification</a>:<ul><li><code>&gt;=</code>, <code>&gt;</code>, <code>=</code>, <code>&lt;</code> and <code>&lt;</code></li><li>X-ranges to specify variable components, e.g. <code>1.x</code></li><li>tilde ranges that allow patch version changes, e.g. <code>~1.2.3</code></li><li>caret ranges that allow up to minor version changes, e.g. <code>^1.2.3</code></li></ul></li><li>Exact string matches are always performed as well.</li></ul><p>If an array of ranges is used, they're treated as in an \"OR\" relationship - only one of the ranges needs to match.</p>",
        "markdownDescription": "A version range or an array of those that match versions. The following variants are supported:\n\n- `*` matches any version.\n- Ranges following [NPM semver specification](https://docs.npmjs.com/about-semantic-versioning):\n  - `>=`, `>`, `=`, `<` and `<=`\n  - X-ranges to specify variable components, e.g. `1.x`\n  - tilde ranges that allow patch version changes, e.g. `~1.2.3`\n  - caret ranges that allow up to minor version changes, e.g. `^1.2.3`\n- Exact string matches are always performed as well.\n\nIf an array of ranges is used, they're treated as in an \"OR\" relationship - only one of the ranges needs to match."
      }
    },
    "properties": {
      "id": {
        "type": "string",
        "pattern": "^[a-z][a-z0-9-_]{1,63}$",
        "description": "The mod identifier"
      },
      "version": {
        "type": "string",
        "description": "The mod version"
      },
      "schemaVersion": {
        "type": "integer",
        "description": "The version of the fabric.mod.json schema",
        "const": 1
      },
      "environment": {
        "$ref": "#/definitions/environment"
      },
      "entrypoints": {
        "type": "object",
        "properties": {
          "main": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/entrypoint"
            },
            "description": "The entrypoint for all environments (classes must implement ModInitializer)"
          },
          "client": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/entrypoint"
            },
            "description": "The entrypoint for the client environment (classes must implement ClientModInitializer)"
          },
          "server": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/entrypoint"
            },
            "description": "The entrypoint for the server environment (classes must implement DedicatedServerModInitializer)"
          },
          "preLaunch": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/entrypoint"
            },
            "description": "The entrypoint called just before the game instance is created (classes must implement PreLaunchEntrypoint)"
          },
          "fabric-datagen": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/entrypoint"
            },
            "description": "The entrypoint for the data generator environment (classes must implement DataGeneratorEntrypoint)"
          },
          "fabric-gametest": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/entrypoint"
            },
            "description": "The entrypoint for the Game Test environment (classes must implement FabricGameTest)"
          }
        },
        "additionalProperties": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/entrypoint"
          },
          "description": "Custom mod entrypoints"
        },
        "description": "The entrypoints used by this mod"
      },
      "jars": {
        "type": "array",
        "description": "Contains an array of nestedJar objects",
        "items": {
          "$ref": "#/definitions/nestedJar"
        }
      },
      "languageAdapters": {
        "type": "object",
        "description": "A string→string dictionary, connecting namespaces to LanguageAdapter implementations",
        "additionalProperties": {
          "type": "string"
        }
      },
      "mixins": {
        "type": "array",
        "items": {
          "oneOf": [
            {
              "type": "string",
              "description": "Path to mixin file from the root of the JAR"
            },
            {
              "type": "object",
              "properties": {
                "config": {
                  "type": "string",
                  "description": "Path to mixin file from the root of the JAR"
                },
                "environment": {
                  "$ref": "#/definitions/environment"
                }
              }
            }
          ]
        }
      },
      "accessWidener": {
        "type": "string",
        "description": "Path to an access widener definition file"
      },
      "depends": {
        "type": "object",
        "description": "id→versionRange map for dependencies. Failure to meet these causes a hard failure",
        "additionalProperties": {
          "$ref": "#/definitions/versionRanges"
        }
      },
      "recommends": {
        "type": "object",
        "description": "id→versionRange map for dependencies. Failure to meet these causes a soft failure (warning)",
        "additionalProperties": {
          "$ref": "#/definitions/versionRanges"
        }
      },
      "suggests": {
        "type": "object",
        "description": "id→versionRange map for dependencies. Are not matched and are mainly used as metadata",
        "additionalProperties": {
          "$ref": "#/definitions/versionRanges"
        }
      },
      "conflicts": {
        "type": "object",
        "description": "id→versionRange map for dependencies. A successful match causes a soft failure (warning)",
        "additionalProperties": {
          "$ref": "#/definitions/versionRanges"
        }
      },
      "breaks": {
        "type": "object",
        "description": "id→versionRange map for dependencies. A successful match causes a hard failure",
        "additionalProperties": {
          "$ref": "#/definitions/versionRanges"
        }
      },
      "name": {
        "type": "string",
        "description": "Name of the mod"
      },
      "description": {
        "type": "string",
        "description": "Description of the mod"
      },
      "authors": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/person"
        },
        "description": "The direct authorship information"
      },
      "contributors": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/person"
        },
        "description": "Contributors to this mod"
      },
      "contact": {
        "$ref": "#/definitions/contactInfo",
        "description": "Contact information for the mod"
      },
      "license": {
        "oneOf": [
          {
            "type": "string"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "description": "The license the mod uses"
      },
      "icon": {
        "oneOf": [
          {
            "type": "string",
            "description": "The path to a single .PNG file from the root of the JAR"
          },
          {
            "type": "object",
            "description": "A string→string dictionary, where the keys conform to widths of each PNG file, and the values are said files' paths",
            "propertyNames": {
              "pattern": "^[1-9][0-9]*$"
            },
            "additionalProperties": {
              "type": "string",
              "description": "The path to a single .PNG file from the root of the JAR"
            }
          }
        ]
      },
      "custom": {
        "type": "object",
        "description": "A map of namespace:id→value for custom data fields."
      }
    },
    "required": [
      "id",
      "version",
      "schemaVersion"
    ],
    "type": "object"
  },
  "tests": [
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "id": "example-mod",
        "version": "1.0.0",
        "schemaVersion": 1,
        "environment": "*",
        "entrypoints": {
          "main": [
            {
              "adapter": "default",
              "value": "com.example.mod.ExampleMod"
            }
          ]
        },
        "jars": [
          {
            "file": "nested.jar"
          }
        ],
        "languageAdapters": {
          "example": "com.example.mod.ExampleLanguageAdapter"
        },
        "mixins": [
          "mixins/exampleMixin.json"
        ],
        "accessWidener": "accesswidener.example",
        "depends": {
          "fabric-api": "^0.40.0+1.18"
        },
        "recommends": {
          "fabric-loader": "^0.14.0+1.18"
        },
        "suggests": {
          "example-mod-addon": "^1.0.0"
        },
        "conflicts": {
          "incompatible-mod": "^1.0.0"
        },
        "breaks": {
          "broken-mod": "^1.0.0"
        },
        "name": "Example Mod",
        "description": "An example mod for Fabric.",
        "authors": [
          {
            "name": "John Doe",
            "contact": {
              "email": "john.doe@example.com",
              "irc": "irc://irc.example.com/johndoe"
            }
          }
        ],
        "contributors": [
          {
            "name": "Jane Doe"
          }
        ],
        "contact": {
          "email": "example-mod@example.com",
          "irc": "irc://irc.example.com/example-mod",
          "homepage": "https://example.com/mod",
          "issues": "https://example.com/mod/issues",
          "sources": "https://example.com/mod/sources"
        },
        "license": "MIT",
        "icon": {
          "16": "icons/16.png",
          "32": "icons/32.png",
          "64": "icons/64.png"
        },
        "custom": {
          "example:custom-data": "Hello, World!"
        }
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "$schema": "https://json.schemastore.org/fabric.mod.json",
        "id": "example-mod",
        "version": "1.0.0",
        "schemaVersion": 1,
        "environment": "*",
        "entrypoints": {
          "main": [
            {
              "adapter": "default",
              "value": "com.example.mod.ExampleMod"
            }
          ]
        },
        "jars": [
          {
            "file": "nested-jar.jar"
          }
        ],
        "languageAdapters": {
          "example": "com.example.mod.ExampleLanguageAdapter"
        },
        "mixins": [
          "mixins/exampleMixin.json",
          {
            "config": "mixins/exampleMixin.json",
            "environment": "client"
          }
        ],
        "accessWidener": "access-widener.json",
        "depends": {
          "fabric-loader": "^0.14.17",
          "fabric-api": "^0.55.3+1.19.2"
        },
        "recommends": {
          "example-recommended-mod": "^1.0.0"
        },
        "suggests": {
          "example-suggested-mod": "^1.0.0"
        },
        "conflicts": {
          "example-conflicting-mod": "^1.0.0"
        },
        "breaks": {
          "example-breaking-mod": "^1.0.0"
        },
        "name": "Example Mod",
        "description": "An example mod for Fabric.",
        "authors": [
          {
            "name": "John Doe",
            "contact": {
              "email": "john@example.com",
              "irc": "irc://irc.example.com/johndoe"
            }
          }
        ],
        "contributors": [
          {
            "name": "Jane Doe"
          }
        ],
        "contact": {
          "email": "example@example.com",
          "irc": "irc://irc.example.com/example",
          "homepage": "https://example.com",
          "issues": "https://example.com/issues",
          "sources": "https://example.com/sources"
        },
        "license": "MIT",
        "icon": {
          "16": "icons/icon_16.png",
          "32": "icons/icon_32.png",
          "64": "icons/icon_64.png"
        },
        "custom": {
          "example:custom-data": "Hello, World!"
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on propertyNames keyword",
      "valid": false,
      "rust_error": "{\"sixteen\":\"icons/icon_16.png\",\".\":\"icons/icon_32.png\",\"\":\" icons/icon_64.png\"} is not valid under any of the schemas listed in the 'oneOf' keyword",
      "python_error": "{'sixteen': 'icons/icon_16.png', '.': 'icons/icon_32.png', '': ' icons/icon_64.png'} is not valid under any of the given schemas\n\nFailed validating 'oneOf' in schema['properties']['icon']:\n    {'oneOf': [{'type': 'string',\n                'description': 'The path to a single .PNG file from the '\n                               'root of the JAR'},\n               {'type': 'object',\n                'description': 'A string→string dictionary, where the keys '\n                               'conform to widths of each PNG file, and '\n                               \"the values are said files' paths\",\n                'propertyNames': {'pattern': '^[1-9][0-9]*$'},\n                'additionalProperties': {'type': 'string',\n                                         'description': 'The path to a '\n                                                        'single .PNG file '\n                                                        'from the root of '\n                                                        'the JAR'}}]}\n\nOn i.. (115 more)",
      "data": {
        "$schema": "https://json.schemastore.org/fabric.mod.json",
        "id": "example-mod",
        "version": "1.0.0",
        "schemaVersion": 1,
        "environment": "*",
        "entrypoints": {
          "main": [
            {
              "adapter": "default",
              "value": "com.example.mod.ExampleMod"
            }
          ]
        },
        "jars": [
          {
            "file": "nested-jar.jar"
          }
        ],
        "languageAdapters": {
          "example": "com.example.mod.ExampleLanguageAdapter"
        },
        "mixins": [
          "mixins/exampleMixin.json",
          {
            "config": "mixins/exampleMixin.json",
            "environment": "client"
          }
        ],
        "accessWidener": "access-widener.json",
        "depends": {
          "fabric-loader": "^0.14.17",
          "fabric-api": "^0.55.3+1.19.2"
        },
        "recommends": {
          "example-recommended-mod": "^1.0.0"
        },
        "suggests": {
          "example-suggested-mod": "^1.0.0"
        },
        "conflicts": {
          "example-conflicting-mod": "^1.0.0"
        },
        "breaks": {
          "example-breaking-mod": "^1.0.0"
        },
        "name": "Example Mod",
        "description": "An example mod for Fabric.",
        "authors": [
          {
            "name": "John Doe",
            "contact": {
              "email": "john@example.com",
              "irc": "irc://irc.example.com/johndoe"
            }
          }
        ],
        "contributors": [
          {
            "name": "Jane Doe"
          }
        ],
        "contact": {
          "email": "example@example.com",
          "irc": "irc://irc.example.com/example",
          "homepage": "https://example.com",
          "issues": "https://example.com/issues",
          "sources": "https://example.com/sources"
        },
        "license": "MIT",
        "icon": {
          "sixteen": "icons/icon_16.png",
          ".": "icons/icon_32.png",
          "": " icons/icon_64.png"
        },
        "custom": {
          "example:custom-data": "Hello, World!"
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on pattern keyword",
      "valid": false,
      "rust_error": "{\"16\":\"icons/icon_16.png\",\"32\":\"icons/icon_32.png\",\"64\":\"icons/icon_64.png\",\"0\":\"icons/icon_0.png\"} is not valid under any of the schemas listed in the 'oneOf' keyword",
      "python_error": "{'16': 'icons/icon_16.png', '32': 'icons/icon_32.png', '64': 'icons/icon_64.png', '0': 'icons/icon_0.png'} is not valid under any of the given schemas\n\nFailed validating 'oneOf' in schema['properties']['icon']:\n    {'oneOf': [{'type': 'string',\n                'description': 'The path to a single .PNG file from the '\n                               'root of the JAR'},\n               {'type': 'object',\n                'description': 'A string→string dictionary, where the keys '\n                               'conform to widths of each PNG file, and '\n                               \"the values are said files' paths\",\n                'propertyNames': {'pattern': '^[1-9][0-9]*$'},\n                'additionalProperties': {'type': 'string',\n                                         'description': 'The path to a '\n                                                        'single .PNG file '\n                                                        'from the root of '\n                                                     .. (164 more)",
      "data": {
        "$schema": "https://json.schemastore.org/fabric.mod.json",
        "id": "example-mod",
        "version": "1.0.0",
        "schemaVersion": 1,
        "environment": "*",
        "entrypoints": {
          "main": [
            {
              "adapter": "default",
              "value": "com.example.mod.ExampleMod"
            }
          ]
        },
        "jars": [
          {
            "file": "nested-jar.jar"
          }
        ],
        "languageAdapters": {
          "example": "com.example.mod.ExampleLanguageAdapter"
        },
        "mixins": [
          "mixins/exampleMixin.json",
          {
            "config": "mixins/exampleMixin.json",
            "environment": "client"
          }
        ],
        "accessWidener": "access-widener.json",
        "depends": {
          "fabric-loader": "^0.14.17",
          "fabric-api": "^0.55.3+1.19.2"
        },
        "recommends": {
          "example-recommended-mod": "^1.0.0"
        },
        "suggests": {
          "example-suggested-mod": "^1.0.0"
        },
        "conflicts": {
          "example-conflicting-mod": "^1.0.0"
        },
        "breaks": {
          "example-breaking-mod": "^1.0.0"
        },
        "name": "Example Mod",
        "description": "An example mod for Fabric.",
        "authors": [
          {
            "name": "John Doe",
            "contact": {
              "email": "john@example.com",
              "irc": "irc://irc.example.com/johndoe"
            }
          }
        ],
        "contributors": [
          {
            "name": "Jane Doe"
          }
        ],
        "contact": {
          "email": "example@example.com",
          "irc": "irc://irc.example.com/example",
          "homepage": "https://example.com",
          "issues": "https://example.com/issues",
          "sources": "https://example.com/sources"
        },
        "license": "MIT",
        "icon": {
          "16": "icons/icon_16.png",
          "32": "icons/icon_32.png",
          "64": "icons/icon_64.png",
          "0": "icons/icon_0.png"
        },
        "custom": {
          "example:custom-data": "Hello, World!"
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on oneOf keyword",
      "valid": false,
      "rust_error": "{\"name\":123} is not valid under any of the schemas listed in the 'oneOf' keyword",
      "python_error": "123 is not of type 'string'\n\nFailed validating 'type' in schema[1]['properties']['name']:\n    {'type': 'string', 'description': 'The name of the person'}\n\nOn instance['name']:\n    123",
      "data": {
        "$schema": "https://json.schemastore.org/fabric.mod.json",
        "id": "example-mod",
        "version": "1.0.0",
        "schemaVersion": 1,
        "environment": "*",
        "entrypoints": {
          "main": [
            {
              "adapter": "default",
              "value": "com.example.mod.ExampleMod",
              "extra": "extra"
            }
          ]
        },
        "jars": [
          {
            "file": "nested-jar.jar"
          }
        ],
        "languageAdapters": {
          "example": "com.example.mod.ExampleLanguageAdapter"
        },
        "mixins": [
          "mixins/exampleMixin.json",
          {
            "config": "mixins/exampleMixin.json",
            "environment": "client"
          },
          {
            "invalid": "invalid"
          }
        ],
        "accessWidener": "access-widener.json",
        "depends": {
          "fabric-loader": "^0.14.17",
          "fabric-api": "^0.55.3+1.19.2"
        },
        "recommends": {
          "example-recommended-mod": "^1.0.0"
        },
        "suggests": {
          "example-suggested-mod": "^1.0.0"
        },
        "conflicts": {
          "example-conflicting-mod": "^1.0.0"
        },
        "breaks": {
          "example-breaking-mod": "^1.0.0"
        },
        "name": "Example Mod",
        "description": "An example mod for Fabric.",
        "authors": [
          {
            "name": "John Doe",
            "contact": {
              "email": "john@example.com",
              "irc": "irc://irc.example.com/johndoe"
            }
          },
          {
            "name": 123
          }
        ],
        "contributors": [
          {
            "name": "Jane Doe"
          }
        ],
        "contact": {
          "email": "example@example.com",
          "irc": "irc://irc.example.com/example",
          "homepage": "https://example.com",
          "issues": "https://example.com/issues",
          "sources": "https://example.com/sources"
        },
        "license": "MIT",
        "icon": {
          "16": "icons/icon_16.png",
          "32": "icons/icon_32.png",
          "64": "icons/icon_64.png"
        },
        "custom": {
          "example:custom-data": "Hello, World!"
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on additionalProperties keyword with an object schema",
      "valid": false,
      "rust_error": "{} is not of type \"array\"",
      "python_error": "{'key': 'value'} is not valid under any of the given schemas\n\nFailed validating 'oneOf' in schema['properties']['recommends']['additionalProperties']:\n    {'oneOf': [{'$ref': '#/definitions/versionRange'},\n               {'type': 'array',\n                'description': 'Multiple version ranges that are combined '\n                               'with an \"OR\" relationship - only one of '\n                               'the ranges needs to match',\n                'items': {'$ref': '#/definitions/versionRange'}}]}\n\nOn instance['recommends']['invalid']:\n    {'key': 'value'}",
      "data": {
        "$schema": "https://json.schemastore.org/fabric.mod.json",
        "id": "example-mod",
        "version": "1.0.0",
        "schemaVersion": 1,
        "environment": "*",
        "entrypoints": {
          "main": [
            {
              "adapter": "default",
              "value": "com.example.mod.ExampleMod"
            }
          ],
          "invalid": {}
        },
        "jars": [
          {
            "file": "nested-jar.jar"
          }
        ],
        "languageAdapters": {
          "example": "com.example.mod.ExampleLanguageAdapter",
          "invalid": 123
        },
        "mixins": [
          "mixins/exampleMixin.json",
          {
            "config": "mixins/exampleMixin.json",
            "environment": "client"
          }
        ],
        "accessWidener": "access-widener.json",
        "depends": {
          "fabric-loader": "^0.14.17",
          "fabric-api": "^0.55.3+1.19.2",
          "invalid": true
        },
        "recommends": {
          "example-recommended-mod": "^1.0.0",
          "invalid": {
            "key": "value"
          }
        },
        "suggests": {
          "example-suggested-mod": "^1.0.0"
        },
        "conflicts": {
          "example-conflicting-mod": "^1.0.0"
        },
        "breaks": {
          "example-breaking-mod": "^1.0.0"
        },
        "name": "Example Mod",
        "description": "An example mod for Fabric.",
        "authors": [
          {
            "name": "John Doe",
            "contact": {
              "email": "john@example.com",
              "irc": "irc://irc.example.com/johndoe"
            }
          }
        ],
        "contributors": [
          {
            "name": "Jane Doe"
          }
        ],
        "contact": {
          "email": "example@example.com",
          "irc": "irc://irc.example.com/example",
          "homepage": "https://example.com",
          "issues": "https://example.com/issues",
          "sources": "https://example.com/sources"
        },
        "license": "MIT",
        "icon": {
          "16": "icons/icon_16.png",
          "32": "icons/icon_32.png",
          "64": "icons/icon_64.png"
        },
        "custom": {
          "example:custom-data": "Hello, World!"
        }
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"1\" is not of type \"integer\"",
      "python_error": "'1' is not of type 'integer'\n\nFailed validating 'type' in schema['properties']['schemaVersion']:\n    {'type': 'integer',\n     'description': 'The version of the fabric.mod.json schema',\n     'const': 1}\n\nOn instance['schemaVersion']:\n    '1'",
      "data": {
        "$schema": "https://json.schemastore.org/fabric.mod.json",
        "id": "example-mod",
        "version": "1.0.0",
        "schemaVersion": "1",
        "environment": "*",
        "entrypoints": {
          "main": [
            {
              "adapter": 123
            }
          ]
        },
        "jars": [
          {
            "file": 456
          }
        ],
        "languageAdapters": {
          "example": 789
        },
        "mixins": [
          true
        ],
        "accessWidener": true,
        "depends": {
          "fabric-loader": 101112
        },
        "recommends": {
          "example-recommended-mod": 131415
        },
        "suggests": {
          "example-suggested-mod": 161718
        },
        "conflicts": {
          "example-conflicting-mod": 192021
        },
        "breaks": {
          "example-breaking-mod": 222324
        },
        "name": "Example Mod",
        "description": "An example mod for Fabric.",
        "authors": [
          {
            "name": true,
            "contact": true
          }
        ],
        "contributors": [
          {
            "name": 1
          }
        ],
        "contact": {
          "email": true,
          "irc": true,
          "homepage": 1,
          "issues": true,
          "sources": 1
        },
        "license": [
          true
        ],
        "icon": {
          "not-a-number": true
        },
        "custom": {
          "example:custom-data": true
        }
      }
    }
  ]
}