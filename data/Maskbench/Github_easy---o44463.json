{
  "description": "sample Github_easy/o44463.json",
  "meta": {
    "full_size": 492,
    "stripped_size": 438,
    "features": [
      "@minmaxInteger",
      "@minmaxLength",
      "pattern"
    ],
    "raw_features": [
      "$schema",
      "exclusiveMinimum",
      "maxLength",
      "properties",
      "required",
      "type",
      "type:integer",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-06/schema#",
    "title": "Reward",
    "description": "a reward transaction",
    "type": "object",
    "properties": {
      "tx": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{64}$"
          },
          "to": {
            "type": "object",
            "properties": {
              "address": {
                "type": "string"
              },
              "amount": {
                "type": "integer",
                "exclusiveMinimum": 0
              }
            },
            "required": [
              "address",
              "amount"
            ]
          },
          "msg": {
            "type": "string",
            "maxLength": 254
          }
        },
        "required": [
          "id",
          "to",
          "msg"
        ]
      },
      "sign": {
        "type": "string"
      }
    },
    "required": [
      "tx",
      "sign"
    ]
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "tx": {
          "id": "0000000000000000000000000000000000000000000000000000000000000000",
          "to": {
            "address": "example_address",
            "amount": 100
          },
          "msg": "Example message"
        },
        "sign": "example_signature"
      }
    },
    {
      "description": "llama-70b generated negative; focus on pattern keyword",
      "valid": false,
      "rust_error": "\"InvalidId\" does not match \"^[0-9a-f]{64}$\"",
      "python_error": "'InvalidId' does not match '^[0-9a-f]{64}$'\n\nFailed validating 'pattern' in schema['properties']['tx']['properties']['id']:\n    {'type': 'string', 'pattern': '^[0-9a-f]{64}$'}\n\nOn instance['tx']['id']:\n    'InvalidId'",
      "data": {
        "tx": {
          "id": "InvalidId",
          "to": {
            "address": "example_address",
            "amount": 100
          },
          "msg": "Example message"
        },
        "sign": "example_signature"
      }
    },
    {
      "description": "llama-70b generated negative; focus on exclusiveMinimum keyword",
      "valid": false,
      "rust_error": "0 is less than or equal to the minimum of 0",
      "python_error": "0 is less than or equal to the minimum of 0\n\nFailed validating 'exclusiveMinimum' in schema['properties']['tx']['properties']['to']['properties']['amount']:\n    {'type': 'integer', 'exclusiveMinimum': 0}\n\nOn instance['tx']['to']['amount']:\n    0",
      "data": {
        "tx": {
          "id": "0000000000000000000000000000000000000000000000000000000000000000",
          "to": {
            "address": "example_address",
            "amount": 0
          },
          "msg": "Example message"
        },
        "sign": "example_signature"
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"000000000000000000000000000000000000000000000000000000000000000\" does not match \"^[0-9a-f]{64}$\"",
      "python_error": "'000000000000000000000000000000000000000000000000000000000000000' does not match '^[0-9a-f]{64}$'\n\nFailed validating 'pattern' in schema['properties']['tx']['properties']['id']:\n    {'type': 'string', 'pattern': '^[0-9a-f]{64}$'}\n\nOn instance['tx']['id']:\n    '000000000000000000000000000000000000000000000000000000000000000'",
      "data": {
        "tx": {
          "id": "000000000000000000000000000000000000000000000000000000000000000",
          "to": {
            "address": "example_address",
            "amount": 0
          },
          "msg": "Example message"
        },
        "sign": "example_signature"
      }
    },
    {
      "description": "llama-70b generated negative; focus on pattern keyword",
      "valid": false,
      "rust_error": "\"000000000000000000000000000000000000000000000000000000000000000g\" does not match \"^[0-9a-f]{64}$\"",
      "python_error": "'000000000000000000000000000000000000000000000000000000000000000g' does not match '^[0-9a-f]{64}$'\n\nFailed validating 'pattern' in schema['properties']['tx']['properties']['id']:\n    {'type': 'string', 'pattern': '^[0-9a-f]{64}$'}\n\nOn instance['tx']['id']:\n    '000000000000000000000000000000000000000000000000000000000000000g'",
      "data": {
        "tx": {
          "id": "000000000000000000000000000000000000000000000000000000000000000g",
          "to": {
            "address": "example_address",
            "amount": 100
          },
          "msg": "Example message"
        },
        "sign": "example_signature"
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "tx": {
          "id": "0000000000000000000000000000000000000000000000000000000000000000",
          "to": {
            "address": "0x742d35Cc6634C0532925a3b844Bc454e4438f44e",
            "amount": 100
          },
          "msg": "Reward for completing the task"
        },
        "sign": "0x1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef"
      }
    },
    {
      "description": "llama-70b generated negative; focus on pattern keyword",
      "valid": false,
      "rust_error": "\"000000000000000000000000000000000000000000000000000000000000000g\" does not match \"^[0-9a-f]{64}$\"",
      "python_error": "'000000000000000000000000000000000000000000000000000000000000000g' does not match '^[0-9a-f]{64}$'\n\nFailed validating 'pattern' in schema['properties']['tx']['properties']['id']:\n    {'type': 'string', 'pattern': '^[0-9a-f]{64}$'}\n\nOn instance['tx']['id']:\n    '000000000000000000000000000000000000000000000000000000000000000g'",
      "data": {
        "tx": {
          "id": "000000000000000000000000000000000000000000000000000000000000000g",
          "to": {
            "address": "0x742d35Cc6634C0532925a3b844Bc454e4438f44e",
            "amount": 100
          },
          "msg": "Reward for completing the task"
        },
        "sign": "0x1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef"
      }
    },
    {
      "description": "llama-70b generated negative; focus on exclusiveMinimum keyword",
      "valid": false,
      "rust_error": "0 is less than or equal to the minimum of 0",
      "python_error": "0 is less than or equal to the minimum of 0\n\nFailed validating 'exclusiveMinimum' in schema['properties']['tx']['properties']['to']['properties']['amount']:\n    {'type': 'integer', 'exclusiveMinimum': 0}\n\nOn instance['tx']['to']['amount']:\n    0",
      "data": {
        "tx": {
          "id": "0000000000000000000000000000000000000000000000000000000000000000",
          "to": {
            "address": "0x742d35Cc6634C0532925a3b844Bc454e4438f44e",
            "amount": 0
          },
          "msg": "Reward for completing the task"
        },
        "sign": "0x1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef"
      }
    },
    {
      "description": "llama-70b generated negative; focus on maxLength keyword",
      "valid": false,
      "rust_error": "\"Reward for completing the task that is really really long and I am going to make it longer than 254 characters to check if the maxLength constraint in the schema is working properly in the validator and hopefully it will detect this and fail the validation because this message is actually 255 characters lo\" is longer than 254 characters",
      "python_error": "'Reward for completing the task that is really really long and I am going to make it longer than 254 characters to check if the maxLength constraint in the schema is working properly in the validator and hopefully it will detect this and fail the validation because this message is actually 255 characters lo' is too long\n\nFailed validating 'maxLength' in schema['properties']['tx']['properties']['msg']:\n    {'type': 'string', 'maxLength': 254}\n\nOn instance['tx']['msg']:\n    ('Reward for completing the task that is really really long and I am '\n     'going to make it longer than 254 characters to check if the '\n     'maxLength constraint in the schema is working properly in the '\n     'validator and hopefully it will detect this and fail the validation '\n     'because this message is actually 255 characters lo')",
      "data": {
        "tx": {
          "id": "0000000000000000000000000000000000000000000000000000000000000000",
          "to": {
            "address": "0x742d35Cc6634C0532925a3b844Bc454e4438f44e",
            "amount": 100
          },
          "msg": "Reward for completing the task that is really really long and I am going to make it longer than 254 characters to check if the maxLength constraint in the schema is working properly in the validator and hopefully it will detect this and fail the validation because this message is actually 255 characters lo"
        },
        "sign": "0x1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef"
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"000000000000000000000000000000000000000000000000000000000000000\" does not match \"^[0-9a-f]{64}$\"",
      "python_error": "'000000000000000000000000000000000000000000000000000000000000000' does not match '^[0-9a-f]{64}$'\n\nFailed validating 'pattern' in schema['properties']['tx']['properties']['id']:\n    {'type': 'string', 'pattern': '^[0-9a-f]{64}$'}\n\nOn instance['tx']['id']:\n    '000000000000000000000000000000000000000000000000000000000000000'",
      "data": {
        "tx": {
          "id": "000000000000000000000000000000000000000000000000000000000000000",
          "to": {
            "address": "0x742d35Cc6634C0532925a3b844Bc454e4438f44e",
            "amount": 100
          },
          "msg": "Reward for completing the task"
        },
        "sign": "0x1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcde"
      }
    }
  ]
}