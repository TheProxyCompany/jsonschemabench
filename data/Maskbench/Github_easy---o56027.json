{
  "description": "sample Github_easy/o56027.json",
  "meta": {
    "full_size": 2057,
    "stripped_size": 2057,
    "features": [
      "@minmaxInteger",
      "@minmaxLength",
      "@minmaxNumber",
      "anyOf",
      "items"
    ],
    "raw_features": [
      "$schema",
      "maxLength",
      "minimum",
      "properties",
      "required",
      "type",
      "type:array",
      "type:boolean",
      "type:integer",
      "type:null",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "type": "object",
    "properties": {
      "id": {
        "anyOf": [
          {
            "type": "integer",
            "minimum": 0
          },
          {
            "type": "null"
          }
        ]
      },
      "typeCode": {
        "type": "integer"
      },
      "sourceSystem": {
        "type": "string",
        "maxLength": 20
      },
      "sourceIdentifier": {
        "type": "string",
        "maxLength": 50
      },
      "sourceStatus": {
        "anyOf": [
          {
            "type": "string",
            "maxLength": 75
          },
          {
            "type": "null"
          }
        ]
      },
      "persons": {
        "anyOf": [
          {
            "type": "array",
            "items": {
              "$schema": "http://json-schema.org/draft-04/schema#",
              "type": "object",
              "properties": {
                "id": {
                  "anyOf": [
                    {
                      "type": "integer",
                      "minimum": 0
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "projectId": {
                  "anyOf": [
                    {
                      "type": "integer",
                      "minimum": 0
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "sourceSystem": {
                  "anyOf": [
                    {
                      "type": "string",
                      "maxLength": 20
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "sourceIdentifier": {
                  "anyOf": [
                    {
                      "type": "string",
                      "maxLength": 50
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "personId": {
                  "type": "string",
                  "maxLength": 40
                },
                "sourcePersonType": {
                  "type": "string",
                  "maxLength": 20
                },
                "roleCode": {
                  "type": "string",
                  "maxLength": 50
                },
                "active": {
                  "anyOf": [
                    {
                      "type": "boolean"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "new": {
                  "anyOf": [
                    {
                      "type": "boolean"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "dispositionTypeCd": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              },
              "required": [
                "personId",
                "sourcePersonType",
                "roleCode"
              ]
            }
          },
          {
            "type": "null"
          }
        ]
      },
      "sponsors": {
        "anyOf": [
          {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "anyOf": [
                    {
                      "type": "integer",
                      "minimum": 0
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "projectId": {
                  "anyOf": [
                    {
                      "type": "integer",
                      "minimum": 0
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "sourceSystem": {
                  "type": "string",
                  "maxLength": 20
                },
                "sourceIdentifier": {
                  "type": "string",
                  "maxLength": 50
                },
                "sponsorCode": {
                  "anyOf": [
                    {
                      "type": "string",
                      "maxLength": 6
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "sponsorName": {
                  "anyOf": [
                    {
                      "type": "string",
                      "maxLength": 200
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              },
              "required": [
                "sourceSystem",
                "sourceIdentifier"
              ]
            }
          },
          {
            "type": "null"
          }
        ]
      },
      "startDate": {
        "anyOf": [
          {
            "type": "string",
            "minimum": 0
          },
          {
            "type": "null"
          }
        ]
      },
      "endDate": {
        "anyOf": [
          {
            "type": "string",
            "minimum": 0
          },
          {
            "type": "null"
          }
        ]
      },
      "title": {
        "anyOf": [
          {
            "type": "string",
            "maxLength": 2000
          },
          {
            "type": "null"
          }
        ]
      },
      "sponsorCode": {
        "anyOf": [
          {
            "type": "string",
            "maxLength": 6
          },
          {
            "type": "null"
          }
        ]
      },
      "sponsorName": {
        "anyOf": [
          {
            "type": "string",
            "maxLength": 200
          },
          {
            "type": "null"
          }
        ]
      }
    },
    "required": [
      "typeCode",
      "sourceSystem",
      "sourceIdentifier"
    ]
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "id": 1,
        "typeCode": 1,
        "sourceSystem": "Test System",
        "sourceIdentifier": "Test Identifier",
        "sourceStatus": "Active",
        "persons": [
          {
            "id": 1,
            "projectId": 1,
            "sourceSystem": "Test System",
            "sourceIdentifier": "Test Identifier",
            "personId": "Person123",
            "sourcePersonType": "Test Person Type",
            "roleCode": "Test Role Code",
            "active": true,
            "new": false,
            "dispositionTypeCd": 1
          },
          {
            "id": 2,
            "projectId": 2,
            "sourceSystem": "Test System 2",
            "sourceIdentifier": "Test Identifier 2",
            "personId": "Person456",
            "sourcePersonType": "Test Person Type 2",
            "roleCode": "Test Role Code 2",
            "active": false,
            "new": true,
            "dispositionTypeCd": 2
          }
        ],
        "sponsors": [
          {
            "id": 1,
            "projectId": 1,
            "sourceSystem": "Test System",
            "sourceIdentifier": "Test Identifier",
            "sponsorCode": "SP001",
            "sponsorName": "Test Sponsor Name"
          },
          {
            "id": 2,
            "projectId": 2,
            "sourceSystem": "Test System 2",
            "sourceIdentifier": "Test Identifier 2",
            "sponsorCode": "SP002",
            "sponsorName": "Test Sponsor Name 2"
          }
        ],
        "startDate": "2022-01-01",
        "endDate": "2022-12-31",
        "title": "Test Title",
        "sponsorCode": "SP001",
        "sponsorName": "Test Sponsor Name"
      }
    },
    {
      "description": "llama-70b generated negative; focus on maxLength keyword",
      "valid": false,
      "rust_error": "\"Test System that is longer than 20 characters and should be invalid\" is longer than 20 characters",
      "python_error": "'Test Identifier that is longer than 50 characters and should be invalid' is too long\n\nFailed validating 'maxLength' in schema[0]['items']['properties']['sourceIdentifier']:\n    {'type': 'string', 'maxLength': 50}\n\nOn instance[0]['sourceIdentifier']:\n    ('Test Identifier that is longer than 50 characters and should be '\n     'invalid')",
      "data": {
        "id": 1,
        "typeCode": 1,
        "sourceSystem": "Test System that is longer than 20 characters and should be invalid",
        "sourceIdentifier": "Test Identifier that is longer than 50 characters and should be invalid",
        "sourceStatus": "Active status that is longer than 75 characters and should be invalid, this is a very long status",
        "persons": [
          {
            "id": 1,
            "projectId": 1,
            "sourceSystem": "Test System that is longer than 20 characters and should be invalid",
            "sourceIdentifier": "Test Identifier that is longer than 50 characters and should be invalid",
            "personId": "PersonId that is longer than 40 characters and should be invalid, this is a very long person id",
            "sourcePersonType": "Test Person Type that is longer than 20 characters and should be invalid",
            "roleCode": "Test Role Code that is longer than 50 characters and should be invalid",
            "active": true,
            "new": false,
            "dispositionTypeCd": 1
          },
          {
            "id": 2,
            "projectId": 2,
            "sourceSystem": "Test System 2",
            "sourceIdentifier": "Test Identifier 2",
            "personId": "Person456",
            "sourcePersonType": "Test Person Type 2",
            "roleCode": "Test Role Code 2",
            "active": false,
            "new": true,
            "dispositionTypeCd": 2
          }
        ],
        "sponsors": [
          {
            "id": 1,
            "projectId": 1,
            "sourceSystem": "Test System that is longer than 20 characters and should be invalid",
            "sourceIdentifier": "Test Identifier that is longer than 50 characters and should be invalid",
            "sponsorCode": "SP001 that is longer than 6 characters and should be invalid",
            "sponsorName": "Test Sponsor Name that is longer than 200 characters and should be invalid, this is a very long sponsor name"
          },
          {
            "id": 2,
            "projectId": 2,
            "sourceSystem": "Test System 2",
            "sourceIdentifier": "Test Identifier 2",
            "sponsorCode": "SP002",
            "sponsorName": "Test Sponsor Name 2"
          }
        ],
        "startDate": "2022-01-01",
        "endDate": "2022-12-31",
        "title": "Test Title",
        "sponsorCode": "SP001 that is longer than 6 characters and should be invalid",
        "sponsorName": "Test Sponsor Name that is longer than 200 characters and should be invalid, this is a very long sponsor name"
      }
    },
    {
      "description": "llama-70b generated negative; focus on anyOf keyword",
      "valid": false,
      "rust_error": "\"1\" is not valid under any of the schemas listed in the 'anyOf' keyword",
      "python_error": "'2' is not valid under any of the given schemas\n\nFailed validating 'anyOf' in schema[0]['items']['properties']['dispositionTypeCd']:\n    {'anyOf': [{'type': 'integer'}, {'type': 'null'}]}\n\nOn instance[1]['dispositionTypeCd']:\n    '2'",
      "data": {
        "id": "1",
        "typeCode": 1,
        "sourceSystem": "Test System",
        "sourceIdentifier": "Test Identifier",
        "sourceStatus": "Active",
        "persons": [
          {
            "id": 1,
            "projectId": 1,
            "sourceSystem": "Test System",
            "sourceIdentifier": "Test Identifier",
            "personId": "Person123",
            "sourcePersonType": "Test Person Type",
            "roleCode": "Test Role Code",
            "active": true,
            "new": false,
            "dispositionTypeCd": 1
          },
          {
            "id": 2,
            "projectId": 2,
            "sourceSystem": "Test System 2",
            "sourceIdentifier": "Test Identifier 2",
            "personId": "Person456",
            "sourcePersonType": "Test Person Type 2",
            "roleCode": "Test Role Code 2",
            "active": false,
            "new": true,
            "dispositionTypeCd": "2"
          }
        ],
        "sponsors": [
          {
            "id": 1,
            "projectId": 1,
            "sourceSystem": "Test System",
            "sourceIdentifier": "Test Identifier",
            "sponsorCode": "SP001",
            "sponsorName": "Test Sponsor Name"
          },
          {
            "id": 2,
            "projectId": 2,
            "sourceSystem": "Test System 2",
            "sourceIdentifier": "Test Identifier 2",
            "sponsorCode": "SP002",
            "sponsorName": "Test Sponsor Name 2"
          }
        ],
        "startDate": "2022-01-01",
        "endDate": "2022-12-31",
        "title": "Test Title",
        "sponsorCode": "SP001",
        "sponsorName": "Test Sponsor Name"
      }
    },
    {
      "description": "llama-70b generated negative; focus on minimum keyword",
      "valid": false,
      "rust_error": "-1 is not valid under any of the schemas listed in the 'anyOf' keyword",
      "python_error": "-1 is less than the minimum of 0\n\nFailed validating 'minimum' in schema[0]:\n    {'type': 'integer', 'minimum': 0}\n\nOn instance:\n    -1",
      "data": {
        "id": -1,
        "typeCode": 1,
        "sourceSystem": "Test System",
        "sourceIdentifier": "Test Identifier",
        "sourceStatus": "Active",
        "persons": [
          {
            "id": -1,
            "projectId": -1,
            "sourceSystem": "Test System",
            "sourceIdentifier": "Test Identifier",
            "personId": "Person123",
            "sourcePersonType": "Test Person Type",
            "roleCode": "Test Role Code",
            "active": true,
            "new": false,
            "dispositionTypeCd": 1
          },
          {
            "id": 2,
            "projectId": 2,
            "sourceSystem": "Test System 2",
            "sourceIdentifier": "Test Identifier 2",
            "personId": "Person456",
            "sourcePersonType": "Test Person Type 2",
            "roleCode": "Test Role Code 2",
            "active": false,
            "new": true,
            "dispositionTypeCd": 2
          }
        ],
        "sponsors": [
          {
            "id": -1,
            "projectId": -1,
            "sourceSystem": "Test System",
            "sourceIdentifier": "Test Identifier",
            "sponsorCode": "SP001",
            "sponsorName": "Test Sponsor Name"
          },
          {
            "id": 2,
            "projectId": 2,
            "sourceSystem": "Test System 2",
            "sourceIdentifier": "Test Identifier 2",
            "sponsorCode": "SP002",
            "sponsorName": "Test Sponsor Name 2"
          }
        ],
        "startDate": "2022-01-01",
        "endDate": "2022-12-31",
        "title": "Test Title",
        "sponsorCode": "SP001",
        "sponsorName": "Test Sponsor Name"
      }
    },
    {
      "description": "llama-70b generated negative; focus on anyOf keyword",
      "valid": false,
      "rust_error": "[{\"id\":1,\"projectId\":1,\"sourceSystem\":\"Test System\",\"sourceIdentifier\":\"Test Identifier\",\"personId\":\"Person123\",\"sourcePersonType\":\"Test Person Type\",\"roleCode\":\"Test Role Code\",\"active\":true,\"new\":false,\"dispositionTypeCd\":\"1\"},{\"id\":2,\"projectId\":2,\"sourceSystem\":\"Test System 2\",\"sourceIdentifier\":\"Test Identifier 2\",\"personId\":\"Person456\",\"sourcePersonType\":\"Test Person Type 2\",\"roleCode\":\"Test Role Code 2\",\"active\":false,\"new\":true,\"dispositionTypeCd\":2}] is not valid under any of the schemas listed in the 'anyOf' keyword",
      "python_error": "'1' is not valid under any of the given schemas\n\nFailed validating 'anyOf' in schema[0]['items']['properties']['dispositionTypeCd']:\n    {'anyOf': [{'type': 'integer'}, {'type': 'null'}]}\n\nOn instance[0]['dispositionTypeCd']:\n    '1'",
      "data": {
        "id": 1,
        "typeCode": 1,
        "sourceSystem": "Test System",
        "sourceIdentifier": "Test Identifier",
        "sourceStatus": "Active",
        "persons": [
          {
            "id": 1,
            "projectId": 1,
            "sourceSystem": "Test System",
            "sourceIdentifier": "Test Identifier",
            "personId": "Person123",
            "sourcePersonType": "Test Person Type",
            "roleCode": "Test Role Code",
            "active": true,
            "new": false,
            "dispositionTypeCd": "1"
          },
          {
            "id": 2,
            "projectId": 2,
            "sourceSystem": "Test System 2",
            "sourceIdentifier": "Test Identifier 2",
            "personId": "Person456",
            "sourcePersonType": "Test Person Type 2",
            "roleCode": "Test Role Code 2",
            "active": false,
            "new": true,
            "dispositionTypeCd": 2
          }
        ],
        "sponsors": [
          {
            "id": 1,
            "projectId": 1,
            "sourceSystem": "Test System",
            "sourceIdentifier": "Test Identifier",
            "sponsorCode": "SP001",
            "sponsorName": "Test Sponsor Name"
          },
          {
            "id": 2,
            "projectId": 2,
            "sourceSystem": "Test System 2",
            "sourceIdentifier": "Test Identifier 2",
            "sponsorCode": "SP002",
            "sponsorName": "Test Sponsor Name 2"
          }
        ],
        "startDate": "2022-01-01",
        "endDate": "2022-12-31",
        "title": "Test Title",
        "sponsorCode": "SP001",
        "sponsorName": "Test Sponsor Name"
      }
    },
    {
      "description": "llama-70b generated negative; focus on minimum keyword",
      "valid": false,
      "rust_error": "-1 is not valid under any of the schemas listed in the 'anyOf' keyword",
      "python_error": "-1 is less than the minimum of 0\n\nFailed validating 'minimum' in schema[0]:\n    {'type': 'integer', 'minimum': 0}\n\nOn instance:\n    -1",
      "data": {
        "id": -1,
        "typeCode": 1,
        "sourceSystem": "Test System",
        "sourceIdentifier": "Test Identifier",
        "sourceStatus": "Active",
        "persons": [
          {
            "id": -1,
            "projectId": -1,
            "sourceSystem": "Test System",
            "sourceIdentifier": "Test Identifier",
            "personId": "Person123",
            "sourcePersonType": "Test Person Type",
            "roleCode": "Test Role Code",
            "active": true,
            "new": false,
            "dispositionTypeCd": -1
          },
          {
            "id": 2,
            "projectId": 2,
            "sourceSystem": "Test System 2",
            "sourceIdentifier": "Test Identifier 2",
            "personId": "Person456",
            "sourcePersonType": "Test Person Type 2",
            "roleCode": "Test Role Code 2",
            "active": false,
            "new": true,
            "dispositionTypeCd": 2
          }
        ],
        "sponsors": [
          {
            "id": 1,
            "projectId": 1,
            "sourceSystem": "Test System",
            "sourceIdentifier": "Test Identifier",
            "sponsorCode": "SP001",
            "sponsorName": "Test Sponsor Name"
          },
          {
            "id": 2,
            "projectId": 2,
            "sourceSystem": "Test System 2",
            "sourceIdentifier": "Test Identifier 2",
            "sponsorCode": "SP002",
            "sponsorName": "Test Sponsor Name 2"
          }
        ],
        "startDate": "2022-01-01",
        "endDate": "2022-12-31",
        "title": "Test Title",
        "sponsorCode": "SP001",
        "sponsorName": "Test Sponsor Name"
      }
    },
    {
      "description": "llama-70b generated negative; focus on minimum keyword",
      "valid": false,
      "rust_error": "-1 is not valid under any of the schemas listed in the 'anyOf' keyword",
      "python_error": "-1 is less than the minimum of 0\n\nFailed validating 'minimum' in schema[0]:\n    {'type': 'integer', 'minimum': 0}\n\nOn instance:\n    -1",
      "data": {
        "id": -1,
        "typeCode": 1,
        "sourceSystem": "Test System",
        "sourceIdentifier": "Test Identifier",
        "sourceStatus": "Active",
        "persons": [
          {
            "id": 1,
            "projectId": 1,
            "sourceSystem": "Test System",
            "sourceIdentifier": "Test Identifier",
            "personId": "Person123",
            "sourcePersonType": "Test Person Type",
            "roleCode": "Test Role Code",
            "active": true,
            "new": false,
            "dispositionTypeCd": 1
          },
          {
            "id": 2,
            "projectId": 2,
            "sourceSystem": "Test System 2",
            "sourceIdentifier": "Test Identifier 2",
            "personId": "Person456",
            "sourcePersonType": "Test Person Type 2",
            "roleCode": "Test Role Code 2",
            "active": false,
            "new": true,
            "dispositionTypeCd": 2
          }
        ],
        "sponsors": [
          {
            "id": 1,
            "projectId": 1,
            "sourceSystem": "Test System",
            "sourceIdentifier": "Test Identifier",
            "sponsorCode": "SP001",
            "sponsorName": "Test Sponsor Name"
          },
          {
            "id": 2,
            "projectId": 2,
            "sourceSystem": "Test System 2",
            "sourceIdentifier": "Test Identifier 2",
            "sponsorCode": "SP002",
            "sponsorName": "Test Sponsor Name 2"
          }
        ],
        "startDate": "2022-01-01",
        "endDate": "2022-12-31",
        "title": "Test Title",
        "sponsorCode": "SP001",
        "sponsorName": "Test Sponsor Name"
      }
    },
    {
      "description": "llama-70b generated negative; focus on anyOf keyword",
      "valid": false,
      "rust_error": "[{\"id\":1,\"projectId\":1,\"sourceSystem\":\"Test System\",\"sourceIdentifier\":\"Test Identifier\",\"personId\":\"Person123\",\"sourcePersonType\":\"Test Person Type\",\"roleCode\":\"Test Role Code\",\"active\":true,\"new\":false,\"dispositionTypeCd\":1},{\"id\":2,\"projectId\":2,\"sourceSystem\":\"Test System 2\",\"sourceIdentifier\":\"Test Identifier 2\",\"personId\":\"Person456\",\"sourcePersonType\":\"Test Person Type 2\",\"roleCode\":\"Test Role Code 2\",\"active\":false,\"new\":true,\"dispositionTypeCd\":\"string\"}] is not valid under any of the schemas listed in the 'anyOf' keyword",
      "python_error": "'string' is not valid under any of the given schemas\n\nFailed validating 'anyOf' in schema[0]['items']['properties']['dispositionTypeCd']:\n    {'anyOf': [{'type': 'integer'}, {'type': 'null'}]}\n\nOn instance[1]['dispositionTypeCd']:\n    'string'",
      "data": {
        "id": 1,
        "typeCode": 1,
        "sourceSystem": "Test System",
        "sourceIdentifier": "Test Identifier",
        "sourceStatus": "Active",
        "persons": [
          {
            "id": 1,
            "projectId": 1,
            "sourceSystem": "Test System",
            "sourceIdentifier": "Test Identifier",
            "personId": "Person123",
            "sourcePersonType": "Test Person Type",
            "roleCode": "Test Role Code",
            "active": true,
            "new": false,
            "dispositionTypeCd": 1
          },
          {
            "id": 2,
            "projectId": 2,
            "sourceSystem": "Test System 2",
            "sourceIdentifier": "Test Identifier 2",
            "personId": "Person456",
            "sourcePersonType": "Test Person Type 2",
            "roleCode": "Test Role Code 2",
            "active": false,
            "new": true,
            "dispositionTypeCd": "string"
          }
        ],
        "sponsors": [
          {
            "id": 1,
            "projectId": 1,
            "sourceSystem": "Test System",
            "sourceIdentifier": "Test Identifier",
            "sponsorCode": "SP001",
            "sponsorName": "Test Sponsor Name"
          },
          {
            "id": 2,
            "projectId": 2,
            "sourceSystem": "Test System 2",
            "sourceIdentifier": "Test Identifier 2",
            "sponsorCode": "SP002",
            "sponsorName": "Test Sponsor Name 2"
          }
        ],
        "startDate": "2022-01-01",
        "endDate": "2022-12-31",
        "title": "Test Title",
        "sponsorCode": "SP001",
        "sponsorName": "Test Sponsor Name"
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "id": 123,
        "typeCode": 1,
        "sourceSystem": "Test System",
        "sourceIdentifier": "Test Identifier",
        "sourceStatus": "Active",
        "persons": [
          {
            "id": 1,
            "projectId": 1,
            "sourceSystem": "Test System",
            "sourceIdentifier": "Test Identifier",
            "personId": "Person123",
            "sourcePersonType": "Test Person Type",
            "roleCode": "Test Role Code",
            "active": true,
            "new": false,
            "dispositionTypeCd": 1
          },
          {
            "id": 2,
            "projectId": 2,
            "sourceSystem": "Test System 2",
            "sourceIdentifier": "Test Identifier 2",
            "personId": "Person456",
            "sourcePersonType": "Test Person Type 2",
            "roleCode": "Test Role Code 2",
            "active": true,
            "new": false,
            "dispositionTypeCd": 2
          }
        ],
        "sponsors": [
          {
            "id": 1,
            "projectId": 1,
            "sourceSystem": "Test System",
            "sourceIdentifier": "Test Identifier",
            "sponsorCode": "SP001",
            "sponsorName": "Test Sponsor"
          },
          {
            "id": 2,
            "projectId": 2,
            "sourceSystem": "Test System 2",
            "sourceIdentifier": "Test Identifier 2",
            "sponsorCode": "SP002",
            "sponsorName": "Test Sponsor 2"
          }
        ],
        "startDate": "2022-01-01",
        "endDate": "2022-12-31",
        "title": "Test Title",
        "sponsorCode": "SP001",
        "sponsorName": "Test Sponsor"
      }
    },
    {
      "description": "llama-70b generated negative; focus on minimum keyword",
      "valid": false,
      "rust_error": "-1 is not valid under any of the schemas listed in the 'anyOf' keyword",
      "python_error": "-1 is less than the minimum of 0\n\nFailed validating 'minimum' in schema[0]:\n    {'type': 'integer', 'minimum': 0}\n\nOn instance:\n    -1",
      "data": {
        "id": -1,
        "typeCode": 1,
        "sourceSystem": "Test System",
        "sourceIdentifier": "Test Identifier",
        "sourceStatus": "Active",
        "persons": [
          {
            "id": 1,
            "projectId": 1,
            "sourceSystem": "Test System",
            "sourceIdentifier": "Test Identifier",
            "personId": "Person123",
            "sourcePersonType": "Test Person Type",
            "roleCode": "Test Role Code",
            "active": true,
            "new": false,
            "dispositionTypeCd": -1
          },
          {
            "id": 2,
            "projectId": 2,
            "sourceSystem": "Test System 2",
            "sourceIdentifier": "Test Identifier 2",
            "personId": "Person456",
            "sourcePersonType": "Test Person Type 2",
            "roleCode": "Test Role Code 2",
            "active": true,
            "new": false,
            "dispositionTypeCd": 2
          }
        ],
        "sponsors": [
          {
            "id": 1,
            "projectId": 1,
            "sourceSystem": "Test System",
            "sourceIdentifier": "Test Identifier",
            "sponsorCode": "SP001",
            "sponsorName": "Test Sponsor"
          },
          {
            "id": 2,
            "projectId": 2,
            "sourceSystem": "Test System 2",
            "sourceIdentifier": "Test Identifier 2",
            "sponsorCode": "SP002",
            "sponsorName": "Test Sponsor 2"
          }
        ],
        "startDate": "2022-01-01",
        "endDate": "2022-12-31",
        "title": "Test Title",
        "sponsorCode": "SP001",
        "sponsorName": "Test Sponsor"
      }
    },
    {
      "description": "llama-70b generated negative; focus on anyOf keyword",
      "valid": false,
      "rust_error": "[{\"id\":1,\"projectId\":1,\"sourceSystem\":\"Test System\",\"sourceIdentifier\":\"Test Identifier\",\"personId\":\"Person123\",\"sourcePersonType\":\"Test Person Type\",\"roleCode\":\"Test Role Code\",\"active\":true,\"new\":\"Invalid\",\"<--- Modified here. This should be boolean or null.\":\"dispositionTypeCd\"}] is not valid under any of the schemas listed in the 'anyOf' keyword",
      "python_error": "'Invalid' is not valid under any of the given schemas\n\nFailed validating 'anyOf' in schema[0]['items']['properties']['new']:\n    {'anyOf': [{'type': 'boolean'}, {'type': 'null'}]}\n\nOn instance[0]['new']:\n    'Invalid'",
      "data": {
        "id": 123,
        "typeCode": 1,
        "sourceSystem": "Test System",
        "sourceIdentifier": "Test Identifier",
        "sourceStatus": "Active",
        "persons": [
          {
            "id": 1,
            "projectId": 1,
            "sourceSystem": "Test System",
            "sourceIdentifier": "Test Identifier",
            "personId": "Person123",
            "sourcePersonType": "Test Person Type",
            "roleCode": "Test Role Code",
            "active": true,
            "new": "Invalid",
            "<--- Modified here. This should be boolean or null.": "dispositionTypeCd"
          }
        ],
        "sponsors": [],
        "startDate": "2022-01-01",
        "endDate": "2022-12-31",
        "title": "Test Title",
        "sponsorCode": "SP001",
        "sponsorName": "Test Sponsor"
      }
    },
    {
      "description": "llama-70b generated negative; focus on maxLength keyword",
      "valid": false,
      "rust_error": "[{\"id\":1,\"projectId\":1,\"sourceSystem\":\"Test System\",\"sourceIdentifier\":\"Test Identifier\",\"personId\":\"Person123\",\"sourcePersonType\":\"Test Person Type This name is too long and will cause validation error if maxLength is not handled properly\",\"roleCode\":\"Test Role Code\",\"active\":true,\"new\":false,\"dispositionTypeCd\":1}] is not valid under any of the schemas listed in the 'anyOf' keyword",
      "python_error": "'Test Person Type This name is too long and will cause validation error if maxLength is not handled properly' is too long\n\nFailed validating 'maxLength' in schema[0]['items']['properties']['sourcePersonType']:\n    {'type': 'string', 'maxLength': 20}\n\nOn instance[0]['sourcePersonType']:\n    ('Test Person Type This name is too long and will cause validation '\n     'error if maxLength is not handled properly')",
      "data": {
        "id": 123,
        "typeCode": 1,
        "sourceSystem": "Test System",
        "sourceIdentifier": "Test Identifier",
        "sourceStatus": "Active",
        "persons": [
          {
            "id": 1,
            "projectId": 1,
            "sourceSystem": "Test System",
            "sourceIdentifier": "Test Identifier",
            "personId": "Person123",
            "sourcePersonType": "Test Person Type This name is too long and will cause validation error if maxLength is not handled properly",
            "roleCode": "Test Role Code",
            "active": true,
            "new": false,
            "dispositionTypeCd": 1
          }
        ],
        "sponsors": [
          {
            "id": 1,
            "projectId": 1,
            "sourceSystem": "Test System",
            "sourceIdentifier": "Test Identifier",
            "sponsorCode": "SP001",
            "sponsorName": "This sponsor name is way too long and will cause validation error if maxLength is not handled properly, it should be less than 200 characters"
          }
        ],
        "startDate": "2022-01-01",
        "endDate": "2022-12-31",
        "title": "Test Title",
        "sponsorCode": "SP001",
        "sponsorName": "Test Sponsor"
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "-1 is not valid under any of the schemas listed in the 'anyOf' keyword",
      "python_error": "'This sponsor code is longer than 6 characters and will cause the schema validation to fail' is too long\n\nFailed validating 'maxLength' in schema[0]:\n    {'type': 'string', 'maxLength': 6}\n\nOn instance:\n    ('This sponsor code is longer than 6 characters and will cause the '\n     'schema validation to fail')",
      "data": {
        "id": -1,
        "typeCode": 1,
        "sourceSystem": "This is a very long source system that exceeds the 20 character limit and will cause the schema validation to fail",
        "sourceIdentifier": "Test Identifier",
        "sourceStatus": "Active",
        "persons": [
          {
            "id": 1,
            "projectId": 1,
            "sourceSystem": "Test System",
            "sourceIdentifier": "Test Identifier",
            "personId": "This personId is longer than 40 characters and will cause the schema validation to fail",
            "sourcePersonType": "Test Person Type",
            "roleCode": "Test Role Code",
            "active": true,
            "new": false,
            "dispositionTypeCd": 1
          },
          {
            "id": 2,
            "projectId": 2,
            "sourceSystem": "Test System 2",
            "sourceIdentifier": "Test Identifier 2",
            "personId": "Person456",
            "sourcePersonType": "Test Person Type 2",
            "roleCode": "Test Role Code 2",
            "active": true,
            "new": false,
            "dispositionTypeCd": 2
          }
        ],
        "sponsors": [
          {
            "id": 1,
            "projectId": 1,
            "sourceSystem": "Test System",
            "sourceIdentifier": "Test Identifier",
            "sponsorCode": "This sponsor code is longer than 6 characters and will cause the schema validation to fail",
            "sponsorName": "Test Sponsor"
          },
          {
            "id": 2,
            "projectId": 2,
            "sourceSystem": "Test System 2",
            "sourceIdentifier": "Test Identifier 2",
            "sponsorCode": "SP002",
            "sponsorName": "This sponsor name is longer than 200 characters and will cause the schema validation to fail"
          }
        ],
        "startDate": "Invalid date",
        "endDate": "2022-12-31",
        "title": "Test Title",
        "sponsorCode": "SP001",
        "sponsorName": "Test Sponsor"
      }
    }
  ]
}