{
  "description": "sample Github_medium/o90675.json",
  "meta": {
    "full_size": 1494,
    "stripped_size": 443,
    "features": [
      "@minmaxInteger",
      "@minmaxNumber"
    ],
    "raw_features": [
      "minimum",
      "properties",
      "required",
      "type",
      "type:integer",
      "type:number",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "properties": {
      "connect": {
        "properties": {
          "cpus": {
            "default": 2,
            "description": "CPU shares to allocate to each connect worker instance.",
            "minimum": 1,
            "type": "number"
          },
          "heap": {
            "default": 768,
            "description": "JVM heap allocation (in MB) for connect worker task; should be ~256MB less than total memory for the instance.",
            "minimum": 256,
            "type": "number"
          },
          "instances": {
            "default": 1,
            "description": "Number of instances to run.",
            "minimum": 1,
            "type": "integer"
          },
          "kafka-service": {
            "default": "confluent-kafka",
            "description": "Target Apache Kafka by Confluent service to which these tasks will connect. ",
            "type": "string"
          },
          "mem": {
            "default": 1024,
            "description": "Memory (MB) to allocate to each connect worker instance.",
            "minimum": 512,
            "type": "number"
          },
          "name": {
            "default": "replicator",
            "description": "Service name for the Confluent Enterprise Replicator",
            "type": "string"
          },
          "role": {
            "default": "*",
            "description": "Deploy connect worker only on nodes with this role.",
            "type": "string"
          },
          "schema-registry-service": {
            "default": "schema-registry",
            "description": "Schema Registry service to be used by connect workers. The named VIP associated with this service will be used to specify the converter-schema-registry-url's",
            "type": "string"
          },
          "zookeeper-connect": {
            "default": "master.mesos:2181/dcos-service-confluent-kafka",
            "description": "Zookeeper Connect string for service cluster. Format is comma-separated list of <zk-host>:<zkport>/<kservice>",
            "type": "string"
          }
        },
        "required": [
          "cpus",
          "mem",
          "instances",
          "name"
        ],
        "type": "object"
      }
    },
    "type": "object"
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "connect": {
          "cpus": 2,
          "heap": 768,
          "instances": 1,
          "kafka-service": "confluent-kafka",
          "mem": 1024,
          "name": "replicator",
          "role": "*",
          "schema-registry-service": "schema-registry",
          "zookeeper-connect": "master.mesos:2181/dcos-service-confluent-kafka"
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on minimum keyword",
      "valid": false,
      "rust_error": "0 is less than the minimum of 1",
      "python_error": "0 is less than the minimum of 1\n\nFailed validating 'minimum' in schema['properties']['connect']['properties']['cpus']:\n    {'default': 2,\n     'description': 'CPU shares to allocate to each connect worker '\n                    'instance.',\n     'minimum': 1,\n     'type': 'number'}\n\nOn instance['connect']['cpus']:\n    0",
      "data": {
        "connect": {
          "cpus": 0,
          "heap": 768,
          "instances": 1,
          "kafka-service": "confluent-kafka",
          "mem": 1024,
          "name": "replicator",
          "role": "*",
          "schema-registry-service": "schema-registry",
          "zookeeper-connect": "master.mesos:2181/dcos-service-confluent-kafka"
        }
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "connect": {
          "cpus": 2,
          "heap": 768,
          "instances": 1,
          "kafka-service": "confluent-kafka",
          "mem": 1024,
          "name": "replicator",
          "role": "*",
          "schema-registry-service": "schema-registry",
          "zookeeper-connect": "master.mesos:2181/dcos-service-confluent-kafka"
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on minimum keyword",
      "valid": false,
      "rust_error": "0 is less than the minimum of 1",
      "python_error": "0 is less than the minimum of 1\n\nFailed validating 'minimum' in schema['properties']['connect']['properties']['cpus']:\n    {'default': 2,\n     'description': 'CPU shares to allocate to each connect worker '\n                    'instance.',\n     'minimum': 1,\n     'type': 'number'}\n\nOn instance['connect']['cpus']:\n    0",
      "data": {
        "connect": {
          "cpus": 0,
          "heap": 768,
          "instances": 1,
          "kafka-service": "confluent-kafka",
          "mem": 1024,
          "name": "replicator",
          "role": "*",
          "schema-registry-service": "schema-registry",
          "zookeeper-connect": "master.mesos:2181/dcos-service-confluent-kafka"
        }
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "0.5 is less than the minimum of 1",
      "python_error": "0.5 is less than the minimum of 1\n\nFailed validating 'minimum' in schema['properties']['connect']['properties']['cpus']:\n    {'default': 2,\n     'description': 'CPU shares to allocate to each connect worker '\n                    'instance.',\n     'minimum': 1,\n     'type': 'number'}\n\nOn instance['connect']['cpus']:\n    0.5",
      "data": {
        "connect": {
          "cpus": 0.5,
          "heap": 768,
          "instances": 1,
          "kafka-service": "confluent-kafka",
          "mem": 1024,
          "name": "replicator",
          "role": "*",
          "schema-registry-service": "schema-registry",
          "zookeeper-connect": "master.mesos:2181/dcos-service-confluent-kafka"
        }
      }
    }
  ]
}