{
  "description": "sample Github_easy/o44051.json",
  "meta": {
    "full_size": 813,
    "stripped_size": 499,
    "features": [
      "@minmaxInteger",
      "additionalProperties",
      "enum",
      "format",
      "format:uri",
      "pattern"
    ],
    "raw_features": [
      "$schema",
      "_boolSchema",
      "id",
      "maximum",
      "minimum",
      "properties",
      "required",
      "type",
      "type:boolean",
      "type:integer",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "description": "lax ingest+publish request schema",
    "$schema": "http://json-schema.org/draft-04/schema#",
    "id": "https://lax.elifesciences.org/ingest-publish-request-schema.json",
    "type": "object",
    "additionalProperties": false,
    "properties": {
      "action": {
        "enum": [
          "ingest",
          "publish",
          "ingest+publish"
        ]
      },
      "location": {
        "description": "the location of the article to ingest/publish",
        "type": "string",
        "format": "uri",
        "pattern": "^(https|file)://"
      },
      "id": {
        "description": "article identifier",
        "type": "string"
      },
      "version": {
        "type": "integer",
        "minimum": 1,
        "maximum": 9
      },
      "force": {
        "description": "force ingest/publish action. intended for silent corrections. use with caution.",
        "type": "boolean"
      },
      "token": {
        "description": "data to be returned to the sender once action complete",
        "type": "string"
      }
    },
    "required": [
      "action",
      "location",
      "id",
      "version",
      "token"
    ]
  },
  "tests": [
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "action": "ingest+publish",
        "location": "https://example.com/article",
        "id": "article-123",
        "version": 1,
        "token": "example-token"
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "action": "ingest+publish",
        "location": "https://example.com/article",
        "id": "article-123",
        "version": 1,
        "token": "return-data-123"
      }
    },
    {
      "description": "llama-70b generated negative; focus on pattern keyword",
      "valid": false,
      "rust_error": "\"ftp://example.com/article\" does not match \"^(https|file)://\"",
      "python_error": "'ftp://example.com/article' does not match '^(https|file)://'\n\nFailed validating 'pattern' in schema['properties']['location']:\n    {'description': 'the location of the article to ingest/publish',\n     'type': 'string',\n     'format': 'uri',\n     'pattern': '^(https|file)://'}\n\nOn instance['location']:\n    'ftp://example.com/article'",
      "data": {
        "action": "ingest+publish",
        "location": "ftp://example.com/article",
        "id": "article-123",
        "version": 1,
        "token": "return-data-123"
      }
    },
    {
      "description": "llama-70b generated negative; focus on format keyword",
      "valid": false,
      "rust_error": "\"ftps://example.com/article\" does not match \"^(https|file)://\"",
      "python_error": "'ftps://example.com/article' does not match '^(https|file)://'\n\nFailed validating 'pattern' in schema['properties']['location']:\n    {'description': 'the location of the article to ingest/publish',\n     'type': 'string',\n     'format': 'uri',\n     'pattern': '^(https|file)://'}\n\nOn instance['location']:\n    'ftps://example.com/article'",
      "data": {
        "action": "ingest+publish",
        "location": "ftps://example.com/article",
        "id": "article-123",
        "version": 1,
        "token": "return-data-123"
      }
    },
    {
      "description": "llama-70b generated negative; focus on minimum keyword or maximum keyword",
      "valid": false,
      "rust_error": "10 is greater than the maximum of 9",
      "python_error": "10 is greater than the maximum of 9\n\nFailed validating 'maximum' in schema['properties']['version']:\n    {'type': 'integer', 'minimum': 1, 'maximum': 9}\n\nOn instance['version']:\n    10",
      "data": {
        "action": "ingest+publish",
        "location": "https://example.com/article",
        "id": "article-123",
        "version": 10,
        "token": "return-data-123"
      }
    }
  ]
}