{
  "description": "sample Github_easy/o21149.json",
  "meta": {
    "full_size": 744,
    "stripped_size": 661,
    "features": [
      "@minmaxLength",
      "additionalProperties",
      "enum",
      "pattern"
    ],
    "raw_features": [
      "$schema",
      "_boolSchema",
      "maxLength",
      "minLength",
      "properties",
      "required",
      "type",
      "type:boolean",
      "type:integer",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "additionalProperties": false,
    "properties": {
      "emailAddress": {
        "pattern": "^[^@^\\s]+@[^@^\\.^\\s]+(\\.[^@^\\.^\\s]+)+$",
        "type": "string"
      },
      "hashpw": {
        "description": "set to False to skip password hashing",
        "type": "boolean"
      },
      "name": {
        "maxLength": 255,
        "minLength": 1,
        "type": "string"
      },
      "password": {
        "maxLength": 255,
        "minLength": 10,
        "type": "string"
      },
      "phoneNumber": {
        "pattern": "^$|^\\+?([\\d\\s()-]){9,20}$",
        "type": "string"
      },
      "role": {
        "enum": [
          "buyer",
          "supplier",
          "admin",
          "admin-ccs-category",
          "admin-ccs-sourcing",
          "admin-manager",
          "admin-framework-manager",
          "admin-ccs-data-controller"
        ]
      },
      "supplierId": {
        "type": "integer"
      }
    },
    "required": [
      "emailAddress",
      "name",
      "password",
      "role"
    ],
    "title": "API Updater Schema",
    "type": "object"
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "emailAddress": "example@example.com",
        "hashpw": true,
        "name": "John Doe",
        "password": "Password1234567890",
        "phoneNumber": "+44 1234 567890",
        "role": "buyer",
        "supplierId": 12345
      }
    },
    {
      "description": "llama-70b generated negative; focus on minLength keyword or maxLength keyword",
      "valid": false,
      "rust_error": "\"\" is shorter than 1 character",
      "python_error": "'Pass' is too short\n\nFailed validating 'minLength' in schema['properties']['password']:\n    {'maxLength': 255, 'minLength': 10, 'type': 'string'}\n\nOn instance['password']:\n    'Pass'",
      "data": {
        "emailAddress": "example@example.com",
        "hashpw": true,
        "name": "",
        "password": "Pass",
        "phoneNumber": "+44 1234 567890",
        "role": "buyer",
        "supplierId": 12345
      }
    },
    {
      "description": "llama-70b generated negative; focus on pattern keyword",
      "valid": false,
      "rust_error": "\"example@example\" does not match \"^[^@^\\s]+@[^@^\\.^\\s]+(\\.[^@^\\.^\\s]+)+$\"",
      "python_error": "'example@example' does not match '^[^@^\\\\s]+@[^@^\\\\.^\\\\s]+(\\\\.[^@^\\\\.^\\\\s]+)+$'\n\nFailed validating 'pattern' in schema['properties']['emailAddress']:\n    {'pattern': '^[^@^\\\\s]+@[^@^\\\\.^\\\\s]+(\\\\.[^@^\\\\.^\\\\s]+)+$',\n     'type': 'string'}\n\nOn instance['emailAddress']:\n    'example@example'",
      "data": {
        "emailAddress": "example@example",
        "hashpw": true,
        "name": "John Doe",
        "password": "Password1234567890",
        "phoneNumber": "+44 1234 567890",
        "role": "buyer",
        "supplierId": 12345
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"Pass123\" is shorter than 10 characters",
      "python_error": "'Pass123' is too short\n\nFailed validating 'minLength' in schema['properties']['password']:\n    {'maxLength': 255, 'minLength': 10, 'type': 'string'}\n\nOn instance['password']:\n    'Pass123'",
      "data": {
        "emailAddress": "example@example.com",
        "hashpw": true,
        "name": "John Doe",
        "password": "Pass123",
        "phoneNumber": "+44 1234 567890",
        "role": "buyer",
        "supplierId": 12345
      }
    },
    {
      "description": "llama-70b generated negative; focus on minLength keyword or maxLength keyword",
      "valid": false,
      "rust_error": "\"\" is shorter than 1 character",
      "python_error": "'' should be non-empty\n\nFailed validating 'minLength' in schema['properties']['name']:\n    {'maxLength': 255, 'minLength': 1, 'type': 'string'}\n\nOn instance['name']:\n    ''",
      "data": {
        "emailAddress": "example@example.com",
        "hashpw": true,
        "name": "",
        "password": "Password1234567890",
        "phoneNumber": "+44 1234 567890",
        "role": "buyer",
        "supplierId": 12345
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "emailAddress": "example@example.com",
        "hashpw": true,
        "name": "John Doe",
        "password": "Password12345",
        "phoneNumber": "+44 1234 567890",
        "role": "buyer",
        "supplierId": 123
      }
    },
    {
      "description": "llama-70b generated negative; focus on pattern keyword",
      "valid": false,
      "rust_error": "\"example@example\" does not match \"^[^@^\\s]+@[^@^\\.^\\s]+(\\.[^@^\\.^\\s]+)+$\"",
      "python_error": "'example@example' does not match '^[^@^\\\\s]+@[^@^\\\\.^\\\\s]+(\\\\.[^@^\\\\.^\\\\s]+)+$'\n\nFailed validating 'pattern' in schema['properties']['emailAddress']:\n    {'pattern': '^[^@^\\\\s]+@[^@^\\\\.^\\\\s]+(\\\\.[^@^\\\\.^\\\\s]+)+$',\n     'type': 'string'}\n\nOn instance['emailAddress']:\n    'example@example'",
      "data": {
        "emailAddress": "example@example",
        "hashpw": true,
        "name": "John Doe",
        "password": "Password12345",
        "phoneNumber": "+44 1234 567890",
        "role": "buyer",
        "supplierId": 123
      }
    },
    {
      "description": "llama-70b generated negative; focus on minLength keyword or maxLength keyword",
      "valid": false,
      "rust_error": "\"\" is shorter than 1 character",
      "python_error": "'Pass' is too short\n\nFailed validating 'minLength' in schema['properties']['password']:\n    {'maxLength': 255, 'minLength': 10, 'type': 'string'}\n\nOn instance['password']:\n    'Pass'",
      "data": {
        "emailAddress": "example@example.com",
        "hashpw": true,
        "name": "",
        "password": "Pass",
        "phoneNumber": "+44 1234 567890",
        "role": "buyer",
        "supplierId": 123
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"invalid email\" does not match \"^[^@^\\s]+@[^@^\\.^\\s]+(\\.[^@^\\.^\\s]+)+$\"",
      "python_error": "Additional properties are not allowed ('invalidKey' was unexpected)\n\nFailed validating 'additionalProperties' in schema:\n    {'$schema': 'http://json-schema.org/draft-07/schema#',\n     'additionalProperties': False,\n     'properties': {'emailAddress': {'pattern': '^[^@^\\\\s]+@[^@^\\\\.^\\\\s]+(\\\\.[^@^\\\\.^\\\\s]+)+$',\n                                     'type': 'string'},\n                    'hashpw': {'description': 'set to False to skip '\n                                              'password hashing',\n                               'type': 'boolean'},\n                    'name': {'maxLength': 255,\n                             'minLength': 1,\n                             'type': 'string'},\n                    'password': {'maxLength': 255,\n                                 'minLength': 10,\n                                 'type': 'string'},\n                    'phoneNumber': {'pattern': '^$|^\\\\+?([\\\\d\\\\s()-]){9,20}$',\n                                    'type': 'string'},\n                    'role': {'enum': ['buy.. (840 more)",
      "data": {
        "emailAddress": "invalid email",
        "hashpw": true,
        "name": "a",
        "password": "tooshort",
        "phoneNumber": "+44(123-456-7890)",
        "role": "buyer",
        "supplierId": 123,
        "invalidKey": "this is an invalid key"
      }
    }
  ]
}