{
  "description": "sample Github_easy/o58320.json",
  "meta": {
    "full_size": 781,
    "stripped_size": 353,
    "features": [
      "$ref",
      "enum",
      "format",
      "format:uri",
      "items"
    ],
    "raw_features": [
      "$schema",
      "definitions",
      "properties",
      "type",
      "type:array",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "title": "JSON schema for Web Application manifest files (schema extensions)",
    "$schema": "http://json-schema.org/draft-04/schema#",
    "type": "object",
    "properties": {
      "mjs_access_whitelist": {
        "description": "The mjs_access_whitelist member is an array of rules that indicates the type of access the URLs matching the rule should have.",
        "type": "array",
        "items": {
          "$ref": "#/definitions/mjs_access_whitelist_rule"
        }
      }
    },
    "definitions": {
      "mjs_access_whitelist_rule": {
        "type": "object",
        "properties": {
          "url": {
            "description": "A string that represents the URL pattern for which the rule should be applied to.",
            "type": "string",
            "format": "uri"
          },
          "apiAccess": {
            "description": "A string that defines the type of access to the runtime API where the application is running.",
            "enum": [
              "none",
              "all",
              "AllowForWebOnly"
            ]
          }
        }
      }
    }
  },
  "tests": [
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "mjs_access_whitelist": [
          {
            "url": "https://example.com/*",
            "apiAccess": "all"
          },
          {
            "url": "https://api.example.com/*",
            "apiAccess": "AllowForWebOnly"
          },
          {
            "url": "https://restricted.example.com/*",
            "apiAccess": "none"
          }
        ]
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "mjs_access_whitelist": [
          {
            "url": "https://example.com/*",
            "apiAccess": "all"
          },
          {
            "url": "https://api.example.com/*",
            "apiAccess": "AllowForWebOnly"
          },
          {
            "url": "https://www.example.com/*",
            "apiAccess": "none"
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on format keyword",
      "valid": false,
      "rust_error": "\"not a url\" is not a \"uri\"",
      "python_error": "'not a url' is not a 'uri'\n\nFailed validating 'format' in schema['properties']['mjs_access_whitelist']['items']['properties']['url']:\n    {'description': 'A string that represents the URL pattern for which '\n                    'the rule should be applied to.',\n     'type': 'string',\n     'format': 'uri'}\n\nOn instance['mjs_access_whitelist'][0]['url']:\n    'not a url'",
      "data": {
        "mjs_access_whitelist": [
          {
            "url": "not a url",
            "apiAccess": "all"
          },
          {
            "url": "https://api.example.com/*",
            "apiAccess": "AllowForWebOnly"
          },
          {
            "url": "https://www.example.com/*",
            "apiAccess": "none"
          }
        ]
      }
    }
  ]
}