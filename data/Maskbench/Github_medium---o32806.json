{
  "description": "sample Github_medium/o32806.json",
  "meta": {
    "full_size": 1120,
    "stripped_size": 1120,
    "features": [
      "$ref",
      "@minmaxLength",
      "additionalProperties",
      "enum",
      "items",
      "pattern",
      "patternProperties"
    ],
    "raw_features": [
      "$schema",
      "_boolSchema",
      "definitions",
      "minLength",
      "properties",
      "required",
      "type",
      "type:[]",
      "type:array",
      "type:null",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "type": "object",
    "additionalProperties": false,
    "properties": {
      "env": {
        "$ref": "#/definitions/identifier"
      },
      "log_level": {
        "type": "string",
        "enum": [
          "trace",
          "debug",
          "info",
          "warn",
          "error",
          "fatal"
        ]
      },
      "aws": {
        "type": "object",
        "properties": {
          "accountId": {
            "type": [
              "string",
              "null"
            ]
          },
          "profile": {
            "type": [
              "string",
              "null"
            ]
          },
          "region": {
            "type": [
              "string",
              "null"
            ]
          }
        }
      },
      "build": {
        "type": "object",
        "properties": {
          "unbundled": {
            "type": "object",
            "patternProperties": {
              ".+": {
                "type": "string"
              }
            }
          }
        }
      },
      "update": {
        "type": "object",
        "properties": {}
      },
      "registry": {
        "type": [
          "object",
          "null"
        ],
        "required": [
          "command"
        ],
        "properties": {
          "command": {
            "type": "string"
          },
          "argv": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "env": {
            "type": "object",
            "patternProperties": {
              ".+": {
                "type": "string"
              }
            }
          }
        }
      },
      "utils": {
        "type": "object"
      },
      "hooks": {
        "type": "object",
        "properties": {
          "prebuild": {},
          "prebuildrollup": {},
          "prebuildinstall": {},
          "postbuildinstall": {},
          "postbuildrollup": {},
          "postbuild": {},
          "preupdate": {},
          "postupdate": {},
          "prepublish": {},
          "postpublish": {}
        }
      }
    },
    "definitions": {
      "identifier": {
        "type": [
          "string",
          "null"
        ],
        "minLength": 1,
        "pattern": "^[\\w\\d][\\w\\d-]*$"
      }
    }
  },
  "tests": [
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "env": "dev",
        "log_level": "info",
        "aws": {
          "accountId": "123456789012",
          "profile": "default",
          "region": "us-east-1"
        },
        "build": {
          "unbundled": {
            "package1": "version1",
            "package2": "version2"
          }
        },
        "update": {},
        "registry": {
          "command": "npm",
          "argv": [
            "install"
          ],
          "env": {
            "NODE_ENV": "production"
          }
        },
        "utils": {},
        "hooks": {
          "prebuild": {},
          "prebuildrollup": {},
          "prebuildinstall": {},
          "postbuildinstall": {},
          "postbuildrollup": {},
          "postbuild": {},
          "preupdate": {},
          "postupdate": {},
          "prepublish": {},
          "postpublish": {}
        }
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "env": "dev",
        "log_level": "info",
        "aws": {
          "accountId": "123456789012",
          "profile": "default",
          "region": "us-east-1"
        },
        "build": {
          "unbundled": {
            "module1": "path/to/module1",
            "module2": "path/to/module2"
          }
        },
        "update": {},
        "registry": {
          "command": "npm",
          "argv": [
            "install"
          ],
          "env": {
            "NODE_ENV": "production"
          }
        },
        "utils": {},
        "hooks": {
          "prebuild": {},
          "prebuildrollup": {},
          "prebuildinstall": {},
          "postbuildinstall": {},
          "postbuildrollup": {},
          "postbuild": {},
          "preupdate": {},
          "postupdate": {},
          "prepublish": {},
          "postpublish": {}
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on patternProperties keyword",
      "valid": false,
      "rust_error": "123 is not of type \"string\"",
      "python_error": "123 is not of type 'string'\n\nFailed validating 'type' in schema['properties']['registry']['properties']['env']['patternProperties']['.+']:\n    {'type': 'string'}\n\nOn instance['registry']['env']['invalid env']:\n    123",
      "data": {
        "env": "dev",
        "log_level": "info",
        "aws": {
          "accountId": "123456789012",
          "profile": "default",
          "region": "us-east-1"
        },
        "build": {
          "unbundled": {
            "module1": 123
          }
        },
        "update": {},
        "registry": {
          "command": "npm",
          "argv": [
            "install"
          ],
          "env": {
            "NODE_ENV": "production",
            "invalid env": 123
          }
        },
        "utils": {},
        "hooks": {
          "prebuild": {},
          "prebuildrollup": {},
          "prebuildinstall": {},
          "postbuildinstall": {},
          "postbuildrollup": {},
          "postbuild": {},
          "preupdate": {},
          "postupdate": {},
          "prepublish": {},
          "postpublish": {}
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on type keyword with an array of types",
      "valid": false,
      "rust_error": "123 is not of types \"null\", \"string\"",
      "python_error": "123 is not of type 'string', 'null'\n\nFailed validating 'type' in schema['properties']['env']:\n    {'type': ['string', 'null'],\n     'minLength': 1,\n     'pattern': '^[\\\\w\\\\d][\\\\w\\\\d-]*$'}\n\nOn instance['env']:\n    123",
      "data": {
        "env": 123,
        "log_level": "info",
        "aws": {
          "accountId": 123456789012,
          "profile": "default",
          "region": "us-east-1"
        },
        "build": {
          "unbundled": {
            "module1": "path/to/module1",
            "module2": "path/to/module2"
          }
        },
        "update": {},
        "registry": {
          "command": "npm",
          "argv": [
            "install"
          ],
          "env": {
            "NODE_ENV": "production"
          }
        },
        "utils": {},
        "hooks": {
          "prebuild": {},
          "prebuildrollup": {},
          "prebuildinstall": {},
          "postbuildinstall": {},
          "postbuildrollup": {},
          "postbuild": {},
          "preupdate": {},
          "postupdate": {},
          "prepublish": {},
          "postpublish": {}
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on minLength keyword",
      "valid": false,
      "rust_error": "\"\" is shorter than 1 character",
      "python_error": "'' should be non-empty\n\nFailed validating 'minLength' in schema['properties']['env']:\n    {'type': ['string', 'null'],\n     'minLength': 1,\n     'pattern': '^[\\\\w\\\\d][\\\\w\\\\d-]*$'}\n\nOn instance['env']:\n    ''",
      "data": {
        "env": "",
        "log_level": "info",
        "aws": {
          "accountId": "123456789012",
          "profile": "default",
          "region": "us-east-1"
        },
        "build": {
          "unbundled": {
            "module1": "path/to/module1",
            "module2": "path/to/module2"
          }
        },
        "update": {},
        "registry": {
          "command": "npm",
          "argv": [
            "install"
          ],
          "env": {
            "NODE_ENV": "production"
          }
        },
        "utils": {},
        "hooks": {
          "prebuild": {},
          "prebuildrollup": {},
          "prebuildinstall": {},
          "postbuildinstall": {},
          "postbuildrollup": {},
          "postbuild": {},
          "preupdate": {},
          "postupdate": {},
          "prepublish": {},
          "postpublish": {}
        }
      }
    }
  ]
}