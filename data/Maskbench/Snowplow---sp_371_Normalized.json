{
  "description": "sample Snowplow/sp_371_Normalized.json",
  "meta": {
    "full_size": 5708,
    "stripped_size": 2862,
    "features": [
      "@minmaxInteger",
      "@minmaxLength",
      "@siblingKeys",
      "additionalProperties",
      "anyOf",
      "enum",
      "format",
      "format:hostname",
      "format:ipv4",
      "format:ipv6"
    ],
    "raw_features": [
      "_boolSchema",
      "maxLength",
      "maximum",
      "minLength",
      "minimum",
      "properties",
      "required",
      "type",
      "type:[]",
      "type:boolean",
      "type:integer",
      "type:null",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "additionalProperties": false,
    "description": "Snowplow Redshift storage configuration",
    "properties": {
      "compRows": {
        "description": "Number of rows to be used as the sample size for compression analysis",
        "maximum": 1000000000,
        "minimum": 1000,
        "type": "integer"
      },
      "database": {
        "description": "Redshift database name",
        "maxLength": 64,
        "minLength": 1,
        "type": "string"
      },
      "host": {
        "anyOf": [
          {
            "format": "hostname"
          },
          {
            "format": "ipv4"
          },
          {
            "format": "ipv6"
          }
        ],
        "description": "Redshift cluster host ('localhost' for enabled SSH Tunnel)",
        "type": "string"
      },
      "id": {
        "_format": "uuid",
        "description": "Machine-readable unique identificator",
        "type": "string"
      },
      "jdbc": {
        "additionalProperties": false,
        "properties": {
          "BlockingRowsMode": {
            "description": "The number of rows to hold in memory",
            "minimum": 0,
            "type": "integer"
          },
          "DSILogLevel": {
            "description": "Amount of detail included in log file",
            "maximum": 6,
            "minimum": 0,
            "type": "integer"
          },
          "DisableIsValidQuery": {
            "description": "Disable detection JDBC driver no longer holding a valid database connection",
            "type": "boolean"
          },
          "FilterLevel": {
            "description": "The minimum severity level of a message that the client processes",
            "enum": [
              "DEBUG",
              "INFO",
              "NOTICE",
              "WARNING",
              "LOG",
              "ERROR"
            ]
          },
          "TCPKeepAliveMinutes": {
            "description": "The threshold for minutes of inactivity before initiating a TCP keepalive transmission",
            "minimum": 0,
            "type": "integer"
          },
          "loginTimeout": {
            "description": "The number of seconds to wait before timing out when connecting to the server",
            "minimum": 0,
            "type": "integer"
          },
          "loglevel": {
            "description": "The amount of logging information output by the driver",
            "maximum": 2,
            "minimum": 0,
            "type": [
              "integer",
              "null"
            ]
          },
          "socketTimeout": {
            "description": "The number of seconds to wait during socket read operations before timing out",
            "minimum": 0,
            "type": "integer"
          },
          "ssl": {
            "description": "Whether to use an SSL connection",
            "type": "boolean"
          },
          "sslMode": {
            "description": "Determines how to handle server certificate verification",
            "enum": [
              "verify-ca",
              "verify-full"
            ],
            "type": [
              "string",
              "null"
            ]
          },
          "sslRootCert": {
            "description": "The full path of a .pem or .crt file containing the trust root Certificate Authority",
            "maxLength": 1024,
            "type": [
              "string",
              "null"
            ]
          },
          "tcpKeepAlive": {
            "description": "A value that determines whether TCP keepalives are enabled",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "maxError": {
        "description": "Amount of allowed errors before aborting load",
        "maximum": 100000,
        "minimum": 0,
        "type": "integer"
      },
      "name": {
        "description": "Human-readable storage target name, used only for logging",
        "maxLength": 255,
        "type": "string"
      },
      "password": {
        "description": "Redshift password, either plain-text or encrypted key for EC2 Parameter Storage",
        "properties": {
          "ec2ParameterStore": {
            "description": "EC2 Parameter Storage configuration",
            "properties": {
              "parameterName": {
                "description": "EC2 Parameter with encrypted password",
                "maxLength": 2048,
                "type": "string"
              }
            },
            "required": [
              "parameterName"
            ],
            "type": "object"
          }
        },
        "required": [
          "ec2ParameterStore"
        ],
        "type": [
          "string",
          "object"
        ]
      },
      "port": {
        "description": "Redshift database port",
        "maximum": 65535,
        "minimum": 1,
        "type": "integer"
      },
      "processingManifest": {
        "description": "Optional processing manifest to maintain pipeline state",
        "properties": {
          "amazonDynamoDb": {
            "description": "Configuration for processing manifest on top of DynamoDB - single available implementation",
            "properties": {
              "tableName": {
                "description": "DynamoDB table name",
                "maxLength": 255,
                "minLength": 3,
                "type": "string"
              }
            },
            "required": [
              "tableName"
            ],
            "type": "object"
          }
        },
        "required": [
          "amazonDynamoDb"
        ],
        "type": [
          "object",
          "null"
        ]
      },
      "purpose": {
        "description": "Kind of data stored in this instance",
        "enum": [
          "ENRICHED_EVENTS"
        ]
      },
      "roleArn": {
        "description": "IAM Role ARN used to load data from S3",
        "minLength": 20,
        "type": "string"
      },
      "schema": {
        "description": "Redshift database schema (e.g. 'atomic')",
        "maxLength": 128,
        "type": "string"
      },
      "sshTunnel": {
        "description": "Optional SSH Tunnel configuration",
        "properties": {
          "bastion": {
            "description": "Bastion host configuration",
            "properties": {
              "host": {
                "anyOf": [
                  {
                    "format": "hostname"
                  },
                  {
                    "format": "ipv4"
                  },
                  {
                    "format": "ipv6"
                  }
                ],
                "description": "Bastion SSH host",
                "type": "string"
              },
              "key": {
                "description": "SSH-key stored in EC2 Parameter Storage",
                "properties": {
                  "ec2ParameterStore": {
                    "properties": {
                      "parameterName": {
                        "maxLength": 2048,
                        "type": "string"
                      }
                    },
                    "required": [
                      "parameterName"
                    ],
                    "type": "object"
                  }
                },
                "required": [
                  "ec2ParameterStore"
                ],
                "type": [
                  "object",
                  "null"
                ]
              },
              "passphrase": {
                "description": "Plain-text SSH user's passphrase",
                "maxLength": 2048,
                "type": [
                  "string",
                  "null"
                ]
              },
              "port": {
                "description": "Bastion SSH port",
                "maximum": 65535,
                "minimum": 1,
                "type": "integer"
              },
              "user": {
                "description": "SSH user",
                "maxLength": 32,
                "type": "string"
              }
            },
            "required": [
              "host",
              "port",
              "user",
              "passphrase",
              "key"
            ],
            "type": "object"
          },
          "destination": {
            "description": "Database socket inside private network",
            "properties": {
              "host": {
                "anyOf": [
                  {
                    "format": "hostname"
                  },
                  {
                    "format": "ipv4"
                  },
                  {
                    "format": "ipv6"
                  }
                ],
                "description": "Redshift host inside private network (root-level host should be changed to 'localhost')",
                "type": "string"
              },
              "port": {
                "description": "Redshift port inside private network (root-level 'port' should be changed to be identical to 'localPort')",
                "maximum": 65535,
                "minimum": 1,
                "type": "integer"
              }
            },
            "required": [
              "host",
              "port"
            ],
            "type": "object"
          },
          "localPort": {
            "description": "Arbitrary port on node, running Loader (shoul be identical to root-level 'port')",
            "maximum": 65535,
            "minimum": 1,
            "type": "integer"
          }
        },
        "required": [
          "bastion",
          "destination",
          "localPort"
        ],
        "type": [
          "object",
          "null"
        ]
      },
      "username": {
        "description": "Redshift user",
        "maxLength": 128,
        "type": "string"
      }
    },
    "required": [
      "name",
      "id",
      "host",
      "database",
      "port",
      "username",
      "password",
      "schema",
      "sshTunnel",
      "processingManifest",
      "roleArn",
      "maxError",
      "compRows",
      "jdbc",
      "purpose"
    ],
    "self": {
      "format": "jsonschema",
      "name": "redshift_config",
      "vendor": "com.snowplowanalytics.snowplow.storage",
      "version": "3-0-0"
    },
    "type": "object"
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "compRows": 100000,
        "database": "my_database",
        "host": "localhost",
        "id": "123e4567-e89b-12d3-a456-426614174000",
        "jdbc": {
          "BlockingRowsMode": 1000,
          "DSILogLevel": 3,
          "DisableIsValidQuery": false,
          "FilterLevel": "INFO",
          "TCPKeepAliveMinutes": 10,
          "loginTimeout": 30,
          "loglevel": 1,
          "socketTimeout": 60,
          "ssl": true,
          "sslMode": "verify-ca",
          "sslRootCert": "/path/to/cert.pem",
          "tcpKeepAlive": true
        },
        "maxError": 100,
        "name": "My Redshift Storage",
        "password": {
          "ec2ParameterStore": {
            "parameterName": "my_password_parameter"
          }
        },
        "port": 5439,
        "processingManifest": {
          "amazonDynamoDb": {
            "tableName": "my_manifest_table"
          }
        },
        "purpose": "ENRICHED_EVENTS",
        "roleArn": "arn:aws:iam::123456789012:role/my_redshift_role",
        "schema": "atomic",
        "sshTunnel": null,
        "username": "my_redshift_user"
      }
    },
    {
      "description": "llama-70b generated negative; focus on type keyword with an array of types",
      "valid": false,
      "rust_error": "\"string\" is not of types \"integer\", \"null\"",
      "python_error": "'string' is not of type 'integer', 'null'\n\nFailed validating 'type' in schema['properties']['jdbc']['properties']['loglevel']:\n    {'description': 'The amount of logging information output by the '\n                    'driver',\n     'maximum': 2,\n     'minimum': 0,\n     'type': ['integer', 'null']}\n\nOn instance['jdbc']['loglevel']:\n    'string'",
      "data": {
        "compRows": 100000,
        "database": "my_database",
        "host": "localhost",
        "id": "123e4567-e89b-12d3-a456-426614174000",
        "jdbc": {
          "BlockingRowsMode": 1000,
          "DSILogLevel": 3,
          "DisableIsValidQuery": false,
          "FilterLevel": "INFO",
          "TCPKeepAliveMinutes": 10,
          "loginTimeout": 30,
          "loglevel": "string",
          "socketTimeout": 60,
          "ssl": true,
          "sslMode": "verify-ca",
          "sslRootCert": "/path/to/cert.pem",
          "tcpKeepAlive": true
        },
        "maxError": 100,
        "name": "My Redshift Storage",
        "password": "my_password",
        "port": 5439,
        "processingManifest": {
          "amazonDynamoDb": {
            "tableName": "my_manifest_table"
          }
        },
        "purpose": "ENRICHED_EVENTS",
        "roleArn": "arn:aws:iam::123456789012:role/my_redshift_role",
        "schema": "atomic",
        "sshTunnel": null,
        "username": "my_redshift_user"
      }
    },
    {
      "description": "llama-70b generated negative; focus on minLength keyword or maxLength keyword",
      "valid": false,
      "rust_error": "\"\" is shorter than 1 character",
      "python_error": "'' should be non-empty\n\nFailed validating 'minLength' in schema['properties']['database']:\n    {'description': 'Redshift database name',\n     'maxLength': 64,\n     'minLength': 1,\n     'type': 'string'}\n\nOn instance['database']:\n    ''",
      "data": {
        "compRows": 100000,
        "database": "",
        "host": "localhost",
        "id": "123e4567-e89b-12d3-a456-426614174000",
        "jdbc": {
          "BlockingRowsMode": 1000,
          "DSILogLevel": 3,
          "DisableIsValidQuery": false,
          "FilterLevel": "INFO",
          "TCPKeepAliveMinutes": 10,
          "loginTimeout": 30,
          "loglevel": 1,
          "socketTimeout": 60,
          "ssl": true,
          "sslMode": "verify-ca",
          "sslRootCert": "/path/to/cert.pem",
          "tcpKeepAlive": true
        },
        "maxError": 100,
        "name": "My Redshift Storage",
        "password": {
          "ec2ParameterStore": {
            "parameterName": "my_password_parameter"
          }
        },
        "port": 5439,
        "processingManifest": {
          "amazonDynamoDb": {
            "tableName": "a"
          }
        },
        "purpose": "ENRICHED_EVENTS",
        "roleArn": "arn:aws:iam::123456789012:role/my_redshift_role",
        "schema": "atomic",
        "sshTunnel": null,
        "username": "my_redshift_user"
      }
    },
    {
      "description": "llama-70b generated negative; focus on minimum keyword or maximum keyword",
      "valid": false,
      "rust_error": "500 is less than the minimum of 1000",
      "python_error": "500 is less than the minimum of 1000\n\nFailed validating 'minimum' in schema['properties']['compRows']:\n    {'description': 'Number of rows to be used as the sample size for '\n                    'compression analysis',\n     'maximum': 1000000000,\n     'minimum': 1000,\n     'type': 'integer'}\n\nOn instance['compRows']:\n    500",
      "data": {
        "compRows": 500,
        "database": "my_database",
        "host": "localhost",
        "id": "123e4567-e89b-12d3-a456-426614174000",
        "jdbc": {
          "BlockingRowsMode": 1000,
          "DSILogLevel": 3,
          "DisableIsValidQuery": false,
          "FilterLevel": "INFO",
          "TCPKeepAliveMinutes": 10,
          "loginTimeout": 30,
          "loglevel": 1,
          "socketTimeout": 60,
          "ssl": true,
          "sslMode": "verify-ca",
          "sslRootCert": "/path/to/cert.pem",
          "tcpKeepAlive": true
        },
        "maxError": 100,
        "name": "My Redshift Storage",
        "password": {
          "ec2ParameterStore": {
            "parameterName": "my_password_parameter"
          }
        },
        "port": 5439,
        "processingManifest": {
          "amazonDynamoDb": {
            "tableName": "my_manifest_table"
          }
        },
        "purpose": "ENRICHED_EVENTS",
        "roleArn": "arn:aws:iam::123456789012:role/my_redshift_role",
        "schema": "atomic",
        "sshTunnel": null,
        "username": "my_redshift_user"
      }
    },
    {
      "description": "llama-70b generated negative; focus on type keyword with an array of types",
      "valid": false,
      "rust_error": "\"string\" is not of types \"integer\", \"null\"",
      "python_error": "'string' is not of type 'integer', 'null'\n\nFailed validating 'type' in schema['properties']['jdbc']['properties']['loglevel']:\n    {'description': 'The amount of logging information output by the '\n                    'driver',\n     'maximum': 2,\n     'minimum': 0,\n     'type': ['integer', 'null']}\n\nOn instance['jdbc']['loglevel']:\n    'string'",
      "data": {
        "compRows": 100000,
        "database": "my_database",
        "host": "localhost",
        "id": "123e4567-e89b-12d3-a456-426614174000",
        "jdbc": {
          "BlockingRowsMode": 1000,
          "DSILogLevel": 3,
          "DisableIsValidQuery": false,
          "FilterLevel": "INFO",
          "TCPKeepAliveMinutes": 10,
          "loginTimeout": 30,
          "loglevel": "string",
          "sslRootCert": "/path/to/cert.pem",
          "ssl": true,
          "sslMode": "verify-ca",
          "tcpKeepAlive": true,
          "socketTimeout": 60
        },
        "maxError": 100,
        "name": "My Redshift Storage",
        "password": {
          "ec2ParameterStore": {
            "parameterName": "my_password_parameter"
          }
        },
        "port": 5439,
        "processingManifest": {
          "amazonDynamoDb": {
            "tableName": "my_manifest_table"
          }
        },
        "purpose": "ENRICHED_EVENTS",
        "roleArn": "arn:aws:iam::123456789012:role/my_redshift_role",
        "schema": "atomic",
        "sshTunnel": null,
        "username": "my_redshift_user"
      }
    },
    {
      "description": "llama-70b generated negative; focus on anyOf keyword",
      "valid": false,
      "rust_error": "\"id\" is a required property",
      "python_error": "'id' is a required property\n\nFailed validating 'required' in schema:\n    {'additionalProperties': False,\n     'description': 'Snowplow Redshift storage configuration',\n     'properties': {'compRows': {'description': 'Number of rows to be used '\n                                                'as the sample size for '\n                                                'compression analysis',\n                                 'maximum': 1000000000,\n                                 'minimum': 1000,\n                                 'type': 'integer'},\n                    'database': {'description': 'Redshift database name',\n                                 'maxLength': 64,\n                                 'minLength': 1,\n                                 'type': 'string'},\n                    'host': {'anyOf': [{'format': 'hostname'},\n                                       {'format': 'ipv4'},\n                                       {'format': 'ipv6'}],\n                             'description': 'Redshift cluster host .. (32310 more)",
      "data": {
        "compRows": 100000,
        "database": "my_database",
        "host": "256.256.256.256",
        "jdbc": {
          "BlockingRowsMode": 1000,
          "DSILogLevel": 3,
          "DisableIsValidQuery": false,
          "FilterLevel": "INFO",
          "TCPKeepAliveMinutes": 10,
          "loginTimeout": 30,
          "loglevel": 1,
          "socketTimeout": 60,
          "ssl": true,
          "sslMode": "verify-ca",
          "sslRootCert": "/path/to/cert.pem",
          "tcpKeepAlive": true
        },
        "maxError": 100,
        "name": "My Redshift Storage",
        "password": {
          "ec2ParameterStore": {
            "parameterName": "my_password_parameter"
          }
        },
        "port": 5439,
        "processingManifest": {
          "amazonDynamoDb": {
            "tableName": "my_manifest_table"
          }
        },
        "purpose": "ENRICHED_EVENTS",
        "roleArn": "arn:aws:iam::123456789012:role/my_redshift_role",
        "schema": "atomic",
        "sshTunnel": null,
        "username": "my_redshift_user"
      }
    },
    {
      "description": "llama-70b generated negative; focus on minimum keyword or maximum keyword",
      "valid": false,
      "rust_error": "1000000001 is greater than the maximum of 1000000000",
      "python_error": "100001 is greater than the maximum of 100000\n\nFailed validating 'maximum' in schema['properties']['maxError']:\n    {'description': 'Amount of allowed errors before aborting load',\n     'maximum': 100000,\n     'minimum': 0,\n     'type': 'integer'}\n\nOn instance['maxError']:\n    100001",
      "data": {
        "compRows": 1000000001,
        "database": "my_database",
        "host": "localhost",
        "id": "123e4567-e89b-12d3-a456-426614174000",
        "jdbc": {
          "BlockingRowsMode": 1000,
          "DSILogLevel": 7,
          "DisableIsValidQuery": false,
          "FilterLevel": "INFO",
          "TCPKeepAliveMinutes": 10,
          "loginTimeout": 30,
          "loglevel": 3,
          "socketTimeout": 60,
          "ssl": true,
          "sslMode": "verify-ca",
          "sslRootCert": "/path/to/cert.pem",
          "tcpKeepAlive": true
        },
        "maxError": 100001,
        "name": "My Redshift Storage",
        "password": {
          "ec2ParameterStore": {
            "parameterName": "my_password_parameter"
          }
        },
        "port": 5439,
        "processingManifest": {
          "amazonDynamoDb": {
            "tableName": "my_manifest_table"
          }
        },
        "purpose": "ENRICHED_EVENTS",
        "roleArn": "arn:aws:iam::123456789012:role/my_redshift_role",
        "schema": "atomic",
        "sshTunnel": null,
        "username": "my_redshift_user"
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "1000000001 is greater than the maximum of 1000000000",
      "python_error": "Additional properties are not allowed ('extraField' was unexpected)\n\nFailed validating 'additionalProperties' in schema:\n    {'additionalProperties': False,\n     'description': 'Snowplow Redshift storage configuration',\n     'properties': {'compRows': {'description': 'Number of rows to be used '\n                                                'as the sample size for '\n                                                'compression analysis',\n                                 'maximum': 1000000000,\n                                 'minimum': 1000,\n                                 'type': 'integer'},\n                    'database': {'description': 'Redshift database name',\n                                 'maxLength': 64,\n                                 'minLength': 1,\n                                 'type': 'string'},\n                    'host': {'anyOf': [{'format': 'hostname'},\n                                       {'format': 'ipv4'},\n                                       {'format': 'ipv6'}],\n               .. (32444 more)",
      "data": {
        "compRows": 1000000001,
        "database": "my_database",
        "host": "localhost",
        "id": "123e4567-e89b-12d3-a456-426614174000",
        "jdbc": {
          "BlockingRowsMode": 1000,
          "DSILogLevel": 3,
          "DisableIsValidQuery": false,
          "FilterLevel": "INFO",
          "TCPKeepAliveMinutes": 10,
          "loginTimeout": 30,
          "loglevel": 1,
          "socketTimeout": 60,
          "ssl": true,
          "sslMode": "verify-ca",
          "sslRootCert": "/path/to/cert.pem",
          "tcpKeepAlive": true
        },
        "maxError": 100,
        "name": "My Redshift Storage",
        "password": {
          "ec2ParameterStore": {
            "parameterName": "my_password_parameter"
          }
        },
        "port": 5439,
        "processingManifest": {
          "amazonDynamoDb": {
            "tableName": "my_manifest_table"
          }
        },
        "purpose": "ENRICHED_EVENTS",
        "roleArn": "arn:aws:iam::123456789012:role/my_redshift_role",
        "schema": "atomic",
        "sshTunnel": null,
        "username": "my_redshift_user",
        "extraField": "extraValue"
      }
    },
    {
      "description": "llama-70b generated negative; focus on minimum keyword or maximum keyword",
      "valid": false,
      "rust_error": "999 is less than the minimum of 1000",
      "python_error": "999 is less than the minimum of 1000\n\nFailed validating 'minimum' in schema['properties']['compRows']:\n    {'description': 'Number of rows to be used as the sample size for '\n                    'compression analysis',\n     'maximum': 1000000000,\n     'minimum': 1000,\n     'type': 'integer'}\n\nOn instance['compRows']:\n    999",
      "data": {
        "compRows": 999,
        "database": "my_database",
        "host": "localhost",
        "id": "123e4567-e89b-12d3-a456-426614174000",
        "jdbc": {
          "BlockingRowsMode": 1000,
          "DSILogLevel": 3,
          "DisableIsValidQuery": false,
          "FilterLevel": "INFO",
          "TCPKeepAliveMinutes": 10,
          "loginTimeout": 30,
          "loglevel": 1,
          "socketTimeout": 60,
          "ssl": true,
          "sslMode": "verify-ca",
          "sslRootCert": "/path/to/cert.pem",
          "tcpKeepAlive": true
        },
        "maxError": 100,
        "name": "My Redshift Storage",
        "password": {
          "ec2ParameterStore": {
            "parameterName": "my_password_parameter"
          }
        },
        "port": 5439,
        "processingManifest": {
          "amazonDynamoDb": {
            "tableName": "my_manifest_table"
          }
        },
        "purpose": "ENRICHED_EVENTS",
        "roleArn": "arn:aws:iam::123456789012:role/my_redshift_role",
        "schema": "atomic",
        "sshTunnel": null,
        "username": "my_redshift_user"
      }
    },
    {
      "description": "llama-70b generated negative; focus on type keyword with an array of types",
      "valid": false,
      "rust_error": "\"string\" is not of types \"integer\", \"null\"",
      "python_error": "'invalid' is not one of ['verify-ca', 'verify-full']\n\nFailed validating 'enum' in schema['properties']['jdbc']['properties']['sslMode']:\n    {'description': 'Determines how to handle server certificate '\n                    'verification',\n     'enum': ['verify-ca', 'verify-full'],\n     'type': ['string', 'null']}\n\nOn instance['jdbc']['sslMode']:\n    'invalid'",
      "data": {
        "compRows": 100000,
        "database": "my_database",
        "host": "localhost",
        "id": "123e4567-e89b-12d3-a456-426614174000",
        "jdbc": {
          "BlockingRowsMode": 1000,
          "DSILogLevel": 3,
          "DisableIsValidQuery": false,
          "FilterLevel": "INFO",
          "TCPKeepAliveMinutes": 10,
          "loginTimeout": 30,
          "loglevel": "string",
          "sslMode": "invalid",
          "sslRootCert": "/path/to/cert.pem",
          "tcpKeepAlive": true
        },
        "maxError": 100,
        "name": "My Redshift Storage",
        "password": {
          "ec2ParameterStore": {
            "parameterName": "my_password_parameter"
          }
        },
        "port": 5439,
        "processingManifest": {
          "amazonDynamoDb": {
            "tableName": "my_manifest_table"
          }
        },
        "purpose": "ENRICHED_EVENTS",
        "roleArn": "arn:aws:iam::123456789012:role/my_redshift_role",
        "schema": "atomic",
        "sshTunnel": null,
        "username": "my_redshift_user"
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"a\" is shorter than 3 characters",
      "python_error": "'a' is too short\n\nFailed validating 'minLength' in schema['properties']['processingManifest']['properties']['amazonDynamoDb']['properties']['tableName']:\n    {'description': 'DynamoDB table name',\n     'maxLength': 255,\n     'minLength': 3,\n     'type': 'string'}\n\nOn instance['processingManifest']['amazonDynamoDb']['tableName']:\n    'a'",
      "data": {
        "compRows": 100000,
        "database": "my_database",
        "host": "localhost",
        "id": "123e4567-e89b-12d3-a456-426614174000",
        "jdbc": {
          "BlockingRowsMode": 1000,
          "DSILogLevel": 3,
          "DisableIsValidQuery": false,
          "FilterLevel": "INFO",
          "TCPKeepAliveMinutes": 10,
          "loginTimeout": 30,
          "loglevel": 1,
          "socketTimeout": 60,
          "ssl": true,
          "sslMode": "verify-ca",
          "sslRootCert": "/path/to/cert.pem",
          "tcpKeepAlive": true
        },
        "maxError": 100,
        "name": "My Redshift Storage",
        "password": {
          "ec2ParameterStore": {
            "parameterName": "my_password_parameter"
          }
        },
        "port": 5439,
        "processingManifest": {
          "amazonDynamoDb": {
            "tableName": "a"
          }
        },
        "purpose": "ENRICHED_EVENTS",
        "roleArn": "arn:aws:iam::123456789012:role/my_redshift_role",
        "schema": "atomic",
        "sshTunnel": null,
        "username": "my_redshift_user"
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "compRows": 100000,
        "database": "snowplow",
        "host": "localhost",
        "id": "123e4567-e89b-12d3-a456-426614174000",
        "jdbc": {
          "BlockingRowsMode": 1000,
          "DSILogLevel": 3,
          "DisableIsValidQuery": false,
          "FilterLevel": "INFO",
          "TCPKeepAliveMinutes": 10,
          "loginTimeout": 30,
          "loglevel": 1,
          "socketTimeout": 60,
          "ssl": true,
          "sslMode": "verify-ca",
          "sslRootCert": "/path/to/cacert.pem",
          "tcpKeepAlive": true
        },
        "maxError": 1000,
        "name": "Snowplow Redshift Storage",
        "password": {
          "ec2ParameterStore": {
            "parameterName": "snowplow_redshift_password"
          }
        },
        "port": 5439,
        "processingManifest": {
          "amazonDynamoDb": {
            "tableName": "snowplow_processing_manifest"
          }
        },
        "purpose": "ENRICHED_EVENTS",
        "roleArn": "arn:aws:iam::123456789012:role/SnowplowRedshiftLoader",
        "schema": "atomic",
        "sshTunnel": null,
        "username": "snowplow_user"
      }
    },
    {
      "description": "llama-70b generated negative; focus on minLength keyword or maxLength keyword",
      "valid": false,
      "rust_error": "\"a\" is shorter than 3 characters",
      "python_error": "'a' is too short\n\nFailed validating 'minLength' in schema['properties']['processingManifest']['properties']['amazonDynamoDb']['properties']['tableName']:\n    {'description': 'DynamoDB table name',\n     'maxLength': 255,\n     'minLength': 3,\n     'type': 'string'}\n\nOn instance['processingManifest']['amazonDynamoDb']['tableName']:\n    'a'",
      "data": {
        "compRows": 100000,
        "database": "snowplow",
        "host": "localhost",
        "id": "123e4567-e89b-12d3-a456-426614174000",
        "jdbc": {
          "BlockingRowsMode": 1000,
          "DSILogLevel": 3,
          "DisableIsValidQuery": false,
          "FilterLevel": "INFO",
          "TCPKeepAliveMinutes": 10,
          "loginTimeout": 30,
          "loglevel": 1,
          "socketTimeout": 60,
          "ssl": true,
          "sslMode": "verify-ca",
          "sslRootCert": "/path/to/cacert.pem",
          "tcpKeepAlive": true
        },
        "maxError": 1000,
        "name": "",
        "password": {
          "ec2ParameterStore": {
            "parameterName": "snowplow_redshift_password"
          }
        },
        "port": 5439,
        "processingManifest": {
          "amazonDynamoDb": {
            "tableName": "a"
          }
        },
        "purpose": "ENRICHED_EVENTS",
        "roleArn": "arn:aws:iam::123456789012:role/SnowplowRedshiftLoader",
        "schema": "atomic",
        "sshTunnel": null,
        "username": "snowplow_user"
      }
    },
    {
      "description": "llama-70b generated negative; focus on minimum keyword or maximum keyword",
      "valid": false,
      "rust_error": "1000000001 is greater than the maximum of 1000000000",
      "python_error": "-1 is less than the minimum of 0\n\nFailed validating 'minimum' in schema['properties']['maxError']:\n    {'description': 'Amount of allowed errors before aborting load',\n     'maximum': 100000,\n     'minimum': 0,\n     'type': 'integer'}\n\nOn instance['maxError']:\n    -1",
      "data": {
        "compRows": 1000000001,
        "database": "snowplow",
        "host": "localhost",
        "id": "123e4567-e89b-12d3-a456-426614174000",
        "jdbc": {
          "BlockingRowsMode": 10000000000,
          "DSILogLevel": 7,
          "DisableIsValidQuery": false,
          "FilterLevel": "INFO",
          "TCPKeepAliveMinutes": 10,
          "loginTimeout": 30,
          "loglevel": 1,
          "socketTimeout": 60,
          "ssl": true,
          "sslMode": "verify-ca",
          "sslRootCert": "/path/to/cacert.pem",
          "tcpKeepAlive": true
        },
        "maxError": -1,
        "name": "Snowplow Redshift Storage",
        "password": {
          "ec2ParameterStore": {
            "parameterName": "snowplow_redshift_password"
          }
        },
        "port": 5439,
        "processingManifest": {
          "amazonDynamoDb": {
            "tableName": "snowplow_processing_manifest"
          }
        },
        "purpose": "ENRICHED_EVENTS",
        "roleArn": "arn:aws:iam::123456789012:role/SnowplowRedshiftLoader",
        "schema": "atomic",
        "sshTunnel": null,
        "username": "snowplow_user"
      }
    },
    {
      "description": "llama-70b generated negative; focus on type keyword with an array of types",
      "valid": false,
      "rust_error": "\"string\" is not of types \"integer\", \"null\"",
      "python_error": "'string' is not of type 'integer', 'null'\n\nFailed validating 'type' in schema['properties']['jdbc']['properties']['loglevel']:\n    {'description': 'The amount of logging information output by the '\n                    'driver',\n     'maximum': 2,\n     'minimum': 0,\n     'type': ['integer', 'null']}\n\nOn instance['jdbc']['loglevel']:\n    'string'",
      "data": {
        "name": "Snowplow Redshift Storage",
        "id": "123e4567-e89b-12d3-a456-426614174000",
        "host": "localhost",
        "database": "snowplow",
        "port": 5439,
        "username": "snowplow_user",
        "password": "snowplow_password",
        "schema": "atomic",
        "sshTunnel": null,
        "processingManifest": {
          "amazonDynamoDb": {
            "tableName": "snowplow_processing_manifest"
          }
        },
        "roleArn": "arn:aws:iam::123456789012:role/SnowplowRedshiftLoader",
        "maxError": 1000,
        "compRows": 100000,
        "jdbc": {
          "BlockingRowsMode": 1000,
          "DSILogLevel": 3,
          "DisableIsValidQuery": false,
          "FilterLevel": "INFO",
          "TCPKeepAliveMinutes": 10,
          "loginTimeout": 30,
          "loglevel": "string",
          "socketTimeout": 60,
          "ssl": true,
          "sslMode": "verify-ca",
          "sslRootCert": "/path/to/cacert.pem",
          "tcpKeepAlive": true
        },
        "purpose": "ENRICHED_EVENTS"
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "-1 is less than the minimum of 0",
      "python_error": "-1 is less than the minimum of 0\n\nFailed validating 'minimum' in schema['properties']['maxError']:\n    {'description': 'Amount of allowed errors before aborting load',\n     'maximum': 100000,\n     'minimum': 0,\n     'type': 'integer'}\n\nOn instance['maxError']:\n    -1",
      "data": {
        "name": "Snowplow Redshift Storage",
        "id": "123e4567-e89b-12d3-a456-426614174000",
        "host": "localhost",
        "database": "snowplow",
        "port": 5439,
        "username": "snowplow_user",
        "password": {
          "ec2ParameterStore": {
            "parameterName": "snowplow_redshift_password"
          }
        },
        "schema": "atomic",
        "sshTunnel": null,
        "processingManifest": {
          "amazonDynamoDb": {
            "tableName": "snowplow_processing_manifest"
          }
        },
        "roleArn": "arn:aws:iam::123456789012:role/SnowplowRedshiftLoader",
        "maxError": -1,
        "compRows": 999,
        "jdbc": {
          "BlockingRowsMode": 1000,
          "DSILogLevel": 3,
          "DisableIsValidQuery": false,
          "FilterLevel": "INFO",
          "TCPKeepAliveMinutes": 10,
          "loginTimeout": 30,
          "loglevel": 1,
          "socketTimeout": 60,
          "ssl": true,
          "sslMode": "verify-ca",
          "sslRootCert": "/path/to/cacert.pem",
          "tcpKeepAlive": true,
          "extraProperty": "extraValue"
        },
        "purpose": "ENRICHED_EVENTS"
      }
    }
  ]
}