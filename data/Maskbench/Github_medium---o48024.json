{
  "description": "sample Github_medium/o48024.json",
  "meta": {
    "full_size": 943,
    "stripped_size": 943,
    "features": [
      "$ref",
      "@minmaxItems",
      "anyOf",
      "items"
    ],
    "raw_features": [
      "$schema",
      "definitions",
      "minItems",
      "properties",
      "required",
      "type",
      "type:array",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "type": "object",
    "required": [
      "commands"
    ],
    "properties": {
      "constants": {
        "type": "object"
      },
      "commands": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/command"
        },
        "minItems": 1
      }
    },
    "definitions": {
      "command": {
        "type": "object",
        "properties": {
          "command": {
            "type": "string"
          },
          "help": {
            "type": "string"
          },
          "short_help": {
            "type": "string"
          },
          "arguments": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/argument"
            }
          },
          "templates": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/definitions/template"
                },
                {
                  "$ref": "#/definitions/directory"
                }
              ]
            },
            "minItems": 1
          }
        },
        "required": [
          "templates"
        ]
      },
      "argument": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "help": {
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      },
      "template": {
        "type": "object",
        "properties": {
          "source": {
            "type": "string"
          },
          "destination": {
            "type": "string"
          }
        },
        "required": [
          "source",
          "destination"
        ]
      },
      "directory": {
        "type": "object",
        "properties": {
          "directory": {
            "type": "string"
          }
        },
        "required": [
          "directory"
        ]
      }
    }
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "commands": [
          {
            "command": "create",
            "help": "Create a new project",
            "short_help": "Create a new project",
            "arguments": [
              {
                "name": "project_name",
                "help": "The name of the project"
              }
            ],
            "templates": [
              {
                "source": "template/project.txt",
                "destination": "project.txt"
              },
              {
                "directory": "template/project_dir"
              }
            ]
          },
          {
            "command": "delete",
            "help": "Delete a project",
            "short_help": "Delete a project",
            "arguments": [
              {
                "name": "project_name",
                "help": "The name of the project"
              }
            ],
            "templates": [
              {
                "source": "template/delete.txt",
                "destination": "delete.txt"
              }
            ]
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on minItems keyword",
      "valid": false,
      "rust_error": "[] has less than 1 item",
      "python_error": "[] should be non-empty\n\nFailed validating 'minItems' in schema['properties']['commands']:\n    {'type': 'array',\n     'items': {'$ref': '#/definitions/command'},\n     'minItems': 1}\n\nOn instance['commands']:\n    []",
      "data": {
        "commands": []
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "[] has less than 1 item",
      "python_error": "[] should be non-empty\n\nFailed validating 'minItems' in schema['properties']['commands']['items']['properties']['templates']:\n    {'type': 'array',\n     'items': {'anyOf': [{'$ref': '#/definitions/template'},\n                         {'$ref': '#/definitions/directory'}]},\n     'minItems': 1}\n\nOn instance['commands'][1]['templates']:\n    []",
      "data": {
        "commands": [
          {
            "command": "create",
            "help": "Create a new project",
            "short_help": "Create a new project",
            "arguments": [
              {
                "name": "project_name",
                "help": "The name of the project"
              }
            ],
            "templates": [
              {
                "source": "template/project.txt",
                "destination": "project.txt"
              },
              {
                "directory": "template/project_dir"
              }
            ]
          },
          {
            "command": "delete",
            "help": "Delete a project",
            "short_help": "Delete a project",
            "arguments": [
              {
                "name": "project_name",
                "help": "The name of the project"
              }
            ],
            "templates": []
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on minItems keyword",
      "valid": false,
      "rust_error": "[] has less than 1 item",
      "python_error": "[] should be non-empty\n\nFailed validating 'minItems' in schema['properties']['commands']['items']['properties']['templates']:\n    {'type': 'array',\n     'items': {'anyOf': [{'$ref': '#/definitions/template'},\n                         {'$ref': '#/definitions/directory'}]},\n     'minItems': 1}\n\nOn instance['commands'][0]['templates']:\n    []",
      "data": {
        "commands": [
          {
            "command": "create",
            "help": "Create a new project",
            "short_help": "Create a new project",
            "arguments": [
              {
                "name": "project_name",
                "help": "The name of the project"
              }
            ],
            "templates": []
          },
          {
            "command": "delete",
            "help": "Delete a project",
            "short_help": "Delete a project",
            "arguments": [
              {
                "name": "project_name",
                "help": "The name of the project"
              }
            ],
            "templates": [
              {
                "source": "template/delete.txt",
                "destination": "delete.txt"
              }
            ]
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "{} is not valid under any of the schemas listed in the 'anyOf' keyword",
      "python_error": "{} is not valid under any of the given schemas\n\nFailed validating 'anyOf' in schema['properties']['commands']['items']['properties']['templates']['items']:\n    {'anyOf': [{'$ref': '#/definitions/template'},\n               {'$ref': '#/definitions/directory'}]}\n\nOn instance['commands'][0]['templates'][2]:\n    {}",
      "data": {
        "commands": [
          {
            "command": "create",
            "help": "Create a new project",
            "short_help": "Create a new project",
            "arguments": [
              {
                "name": "project_name",
                "help": "The name of the project"
              }
            ],
            "templates": [
              {
                "source": "template/project.txt",
                "destination": "project.txt"
              },
              {
                "directory": "template/project_dir"
              },
              {}
            ]
          },
          {
            "command": "delete",
            "help": "Delete a project",
            "short_help": "Delete a project",
            "arguments": [
              {
                "name": "project_name",
                "help": "The name of the project"
              }
            ],
            "templates": [
              {
                "source": "template/delete.txt",
                "destination": "delete.txt"
              }
            ]
          }
        ]
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "constants": {
          "project_dir": "/path/to/project"
        },
        "commands": [
          {
            "command": "create",
            "help": "Create a new project",
            "short_help": "Create a new project",
            "arguments": [
              {
                "name": "project_name",
                "help": "The name of the project"
              }
            ],
            "templates": [
              {
                "source": "template/project.txt",
                "destination": "project.txt"
              },
              {
                "directory": "template/project_dir"
              }
            ]
          },
          {
            "command": "delete",
            "help": "Delete a project",
            "short_help": "Delete a project",
            "arguments": [
              {
                "name": "project_name",
                "help": "The name of the project"
              }
            ],
            "templates": [
              {
                "source": "template/delete.txt",
                "destination": "delete.txt"
              }
            ]
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on anyOf keyword",
      "valid": false,
      "rust_error": "{\"invalid_property\":\"template/project.txt\"} is not valid under any of the schemas listed in the 'anyOf' keyword",
      "python_error": "{'invalid_property': 'template/project.txt'} is not valid under any of the given schemas\n\nFailed validating 'anyOf' in schema['properties']['commands']['items']['properties']['templates']['items']:\n    {'anyOf': [{'$ref': '#/definitions/template'},\n               {'$ref': '#/definitions/directory'}]}\n\nOn instance['commands'][0]['templates'][0]:\n    {'invalid_property': 'template/project.txt'}",
      "data": {
        "commands": [
          {
            "command": "create",
            "help": "Create a new project",
            "short_help": "Create a new project",
            "arguments": [
              {
                "name": "project_name",
                "help": "The name of the project"
              }
            ],
            "templates": [
              {
                "invalid_property": "template/project.txt"
              }
            ]
          }
        ],
        "constants": {
          "project_dir": "/path/to/project"
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on minItems keyword",
      "valid": false,
      "rust_error": "[] has less than 1 item",
      "python_error": "[] should be non-empty\n\nFailed validating 'minItems' in schema['properties']['commands']['items']['properties']['templates']:\n    {'type': 'array',\n     'items': {'anyOf': [{'$ref': '#/definitions/template'},\n                         {'$ref': '#/definitions/directory'}]},\n     'minItems': 1}\n\nOn instance['commands'][0]['templates']:\n    []",
      "data": {
        "commands": [
          {
            "command": "create",
            "help": "Create a new project",
            "short_help": "Create a new project",
            "arguments": [
              {
                "name": "project_name",
                "help": "The name of the project"
              }
            ],
            "templates": [],
            "directory": "/path/to/project"
          }
        ],
        "constants": {
          "project_dir": "/path/to/project"
        }
      }
    }
  ]
}