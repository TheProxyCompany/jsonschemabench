{
  "description": "sample Github_easy/o58621.json",
  "meta": {
    "full_size": 600,
    "stripped_size": 569,
    "features": [
      "$ref"
    ],
    "raw_features": [
      "$id",
      "$schema",
      "definitions",
      "properties",
      "type",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$id": "https://example.com/restapi/HasNestedDefinitions.json",
    "$schema": "http://json-schema.org/draft-04/schema#",
    "title": "HasNestedDefinitions",
    "type": "object",
    "definitions": {
      "MyObject": {
        "type": "object",
        "definitions": {
          "MyNestedString": {
            "type": "string"
          },
          "MyNestedObject": {
            "type": "object",
            "properties": {
              "nestedThing": {
                "type": "string"
              }
            }
          }
        },
        "properties": {
          "thing": {
            "type": "string"
          }
        }
      }
    },
    "properties": {
      "TheObject": {
        "$ref": "#/definitions/MyObject"
      },
      "TheNestedString": {
        "$ref": "#/definitions/MyObject/definitions/MyNestedString"
      },
      "TheNestedObject": {
        "$ref": "#/definitions/MyObject/definitions/MyNestedObject"
      }
    }
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "TheObject": {
          "thing": "some string"
        },
        "TheNestedString": "another string",
        "TheNestedObject": {
          "nestedThing": "nested string"
        }
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "123 is not of type \"string\"",
      "python_error": "123 is not of type 'string'\n\nFailed validating 'type' in schema['properties']['TheObject']['properties']['thing']:\n    {'type': 'string'}\n\nOn instance['TheObject']['thing']:\n    123",
      "data": {
        "TheObject": {
          "thing": 123
        },
        "TheNestedString": "another string",
        "TheNestedObject": {
          "nestedThing": "nested string"
        }
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "TheObject": {
          "thing": "some string"
        },
        "TheNestedString": "some string",
        "TheNestedObject": {
          "nestedThing": "some string"
        }
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "123 is not of type \"string\"",
      "python_error": "123 is not of type 'string'\n\nFailed validating 'type' in schema['properties']['TheObject']['properties']['thing']:\n    {'type': 'string'}\n\nOn instance['TheObject']['thing']:\n    123",
      "data": {
        "TheObject": {
          "thing": 123
        },
        "TheNestedString": "some string",
        "TheNestedObject": {
          "nestedThing": "some string"
        }
      }
    }
  ]
}