{
  "description": "sample Github_easy/o25974.json",
  "meta": {
    "full_size": 591,
    "stripped_size": 479,
    "features": [
      "$ref"
    ],
    "raw_features": [
      "$schema",
      "definitions",
      "properties",
      "required",
      "type",
      "type:number",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "definitions": {
      "MyAlias": {
        "$ref": "#/definitions/MySubObject",
        "description": "My sub object"
      },
      "MyString": {
        "description": "My string",
        "type": "string"
      },
      "MySubObject": {
        "description": "My sub object",
        "properties": {
          "propA": {
            "type": "number"
          },
          "propB": {
            "type": "number"
          }
        },
        "required": [
          "propA",
          "propB"
        ],
        "type": "object"
      }
    },
    "description": "My Object",
    "properties": {
      "alias": {
        "$ref": "#/definitions/MyAlias"
      },
      "object": {
        "$ref": "#/definitions/MySubObject"
      },
      "primitive": {
        "$ref": "#/definitions/MyString"
      }
    },
    "required": [
      "primitive",
      "object",
      "alias"
    ],
    "type": "object"
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "alias": {
          "propA": 10,
          "propB": 20
        },
        "object": {
          "propA": 30,
          "propB": 40
        },
        "primitive": "Hello, World!"
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"twenty\" is not of type \"number\"",
      "python_error": "'twenty' is not of type 'number'\n\nFailed validating 'type' in schema['properties']['alias']['properties']['propB']:\n    {'type': 'number'}\n\nOn instance['alias']['propB']:\n    'twenty'",
      "data": {
        "alias": {
          "propA": 10,
          "propB": "twenty"
        },
        "object": {
          "propA": 30,
          "propB": 40
        },
        "primitive": "Hello, World!"
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"forty\" is not of type \"number\"",
      "python_error": "'forty' is not of type 'number'\n\nFailed validating 'type' in schema['properties']['object']['properties']['propB']:\n    {'type': 'number'}\n\nOn instance['object']['propB']:\n    'forty'",
      "data": {
        "alias": {
          "propA": 10,
          "propB": 20
        },
        "object": {
          "propA": 30,
          "propB": "forty"
        },
        "primitive": "Hello, World!"
      }
    }
  ]
}