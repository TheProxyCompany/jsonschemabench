{
  "description": "sample Kubernetes/kb_756_Normalized.json",
  "meta": {
    "full_size": 2378,
    "stripped_size": 994,
    "features": [
      "$ref",
      "format",
      "format:int32",
      "items"
    ],
    "raw_features": [
      "definitions",
      "properties",
      "required",
      "type",
      "type:[]",
      "type:array",
      "type:integer",
      "type:null",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "definitions": {
      "https:__kubernetesjsonschema_dev_master__defs_json_defs_io_k8s_api_core_v1_NodeSelectorRequirement": {
        "description": "A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
        "properties": {
          "key": {
            "description": "The label key that the selector applies to.",
            "type": "string"
          },
          "operator": {
            "description": "Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
            "type": "string"
          },
          "values": {
            "description": "An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "required": [
          "key",
          "operator"
        ],
        "type": "object"
      },
      "https:__kubernetesjsonschema_dev_master__defs_json_defs_io_k8s_api_core_v1_NodeSelectorTerm": {
        "description": "A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.",
        "properties": {
          "matchExpressions": {
            "description": "A list of node selector requirements by node's labels.",
            "items": {
              "$ref": "#/definitions/https:__kubernetesjsonschema_dev_master__defs_json_defs_io_k8s_api_core_v1_NodeSelectorRequirement"
            },
            "type": "array"
          },
          "matchFields": {
            "description": "A list of node selector requirements by node's fields.",
            "items": {
              "$ref": "#/definitions/https:__kubernetesjsonschema_dev_master__defs_json_defs_io_k8s_api_core_v1_NodeSelectorRequirement"
            },
            "type": "array"
          }
        },
        "type": "object"
      }
    },
    "description": "An empty preferred scheduling term matches all objects with implicit weight 0 (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).",
    "properties": {
      "preference": {
        "$ref": "#/definitions/https:__kubernetesjsonschema_dev_master__defs_json_defs_io_k8s_api_core_v1_NodeSelectorTerm",
        "description": "A node selector term, associated with the corresponding weight."
      },
      "weight": {
        "description": "Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.",
        "format": "int32",
        "type": [
          "integer",
          "null"
        ]
      }
    },
    "required": [
      "weight",
      "preference"
    ],
    "type": "object"
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "preference": {
          "matchExpressions": [
            {
              "key": "node-type",
              "operator": "In",
              "values": [
                "compute",
                "storage"
              ]
            },
            {
              "key": "node-region",
              "operator": "Exists"
            }
          ]
        },
        "weight": 50
      }
    },
    {
      "description": "llama-70b generated negative; focus on type keyword with an array of types",
      "valid": false,
      "rust_error": "\"fifty\" is not of types \"integer\", \"null\"",
      "python_error": "'fifty' is not of type 'integer', 'null'\n\nFailed validating 'type' in schema['properties']['weight']:\n    {'description': 'Weight associated with matching the corresponding '\n                    'nodeSelectorTerm, in the range 1-100.',\n     'format': 'int32',\n     'type': ['integer', 'null']}\n\nOn instance['weight']:\n    'fifty'",
      "data": {
        "preference": {
          "matchExpressions": [
            {
              "key": "node-type",
              "operator": "In",
              "values": [
                "compute",
                "storage"
              ]
            },
            {
              "key": "node-region",
              "operator": "Exists"
            }
          ]
        },
        "weight": "fifty"
      }
    },
    {
      "description": "llama-70b generated negative; focus on type keyword with an array of types",
      "valid": false,
      "rust_error": "\"abc\" is not of types \"integer\", \"null\"",
      "python_error": "'abc' is not of type 'integer', 'null'\n\nFailed validating 'type' in schema['properties']['weight']:\n    {'description': 'Weight associated with matching the corresponding '\n                    'nodeSelectorTerm, in the range 1-100.',\n     'format': 'int32',\n     'type': ['integer', 'null']}\n\nOn instance['weight']:\n    'abc'",
      "data": {
        "preference": {
          "matchExpressions": [
            {
              "key": "node-type",
              "operator": "In",
              "values": [
                "compute",
                "storage"
              ]
            },
            {
              "key": "node-region",
              "operator": "Exists"
            }
          ]
        },
        "weight": "abc"
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "preference": {
          "matchExpressions": [
            {
              "key": "node-type",
              "operator": "In",
              "values": [
                "compute",
                "storage"
              ]
            },
            {
              "key": "node-region",
              "operator": "Exists"
            }
          ]
        },
        "weight": 10
      }
    }
  ]
}