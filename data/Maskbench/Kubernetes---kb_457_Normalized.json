{
  "description": "sample Kubernetes/kb_457_Normalized.json",
  "meta": {
    "full_size": 1430,
    "stripped_size": 648,
    "features": [
      "$ref",
      "items"
    ],
    "raw_features": [
      "definitions",
      "properties",
      "type",
      "type:array",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "definitions": {
      "https:__kubernetesjsonschema_dev_master__defs_json_defs_io_k8s_api_core_v1_LoadBalancerIngress": {
        "description": "LoadBalancerIngress represents the status of a load-balancer ingress point: traffic intended for the service should be sent to an ingress point.",
        "properties": {
          "hostname": {
            "description": "Hostname is set for load-balancer ingress points that are DNS based (typically AWS load-balancers)",
            "type": "string"
          },
          "ip": {
            "description": "IP is set for load-balancer ingress points that are IP based (typically GCE or OpenStack load-balancers)",
            "type": "string"
          }
        },
        "type": "object"
      },
      "https:__kubernetesjsonschema_dev_master__defs_json_defs_io_k8s_api_core_v1_LoadBalancerStatus": {
        "description": "LoadBalancerStatus represents the status of a load-balancer.",
        "properties": {
          "ingress": {
            "description": "Ingress is a list containing ingress points for the load-balancer. Traffic intended for the service should be sent to these ingress points.",
            "items": {
              "$ref": "#/definitions/https:__kubernetesjsonschema_dev_master__defs_json_defs_io_k8s_api_core_v1_LoadBalancerIngress"
            },
            "type": "array"
          }
        },
        "type": "object"
      }
    },
    "description": "IngressStatus describe the current state of the Ingress.",
    "properties": {
      "loadBalancer": {
        "$ref": "#/definitions/https:__kubernetesjsonschema_dev_master__defs_json_defs_io_k8s_api_core_v1_LoadBalancerStatus",
        "description": "LoadBalancer contains the current status of the load-balancer."
      }
    },
    "type": "object"
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "loadBalancer": {
          "ingress": [
            {
              "hostname": "example.com"
            },
            {
              "ip": "192.168.1.100"
            }
          ]
        }
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "123 is not of type \"string\"",
      "python_error": "123 is not of type 'string'\n\nFailed validating 'type' in schema['properties']['loadBalancer']['properties']['ingress']['items']['properties']['hostname']:\n    {'description': 'Hostname is set for load-balancer ingress points that '\n                    'are DNS based (typically AWS load-balancers)',\n     'type': 'string'}\n\nOn instance['loadBalancer']['ingress'][0]['hostname']:\n    123",
      "data": {
        "loadBalancer": {
          "ingress": [
            {
              "hostname": 123
            },
            {
              "ip": "192.168.1.100"
            }
          ]
        }
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "loadBalancer": {
          "ingress": [
            {
              "hostname": "example.com",
              "ip": "192.168.1.100"
            },
            {
              "ip": "10.0.0.1"
            }
          ]
        }
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "12345 is not of type \"object\"",
      "python_error": "[] is not of type 'object'\n\nFailed validating 'type' in schema['properties']['loadBalancer']['properties']['ingress']['items']:\n    {'description': 'LoadBalancerIngress represents the status of a '\n                    'load-balancer ingress point: traffic intended for the '\n                    'service should be sent to an ingress point.',\n     'properties': {'hostname': {'description': 'Hostname is set for '\n                                                'load-balancer ingress '\n                                                'points that are DNS based '\n                                                '(typically AWS '\n                                                'load-balancers)',\n                                 'type': 'string'},\n                    'ip': {'description': 'IP is set for load-balancer '\n                                          'ingress points that are IP '\n                                          'based (typically GCE or '\n                                          'OpenStack load-bala.. (129 more)",
      "data": {
        "loadBalancer": {
          "ingress": [
            {
              "hostname": "example.com"
            },
            12345,
            null,
            {
              "ip": "10.0.0.1",
              "extra": "field"
            },
            []
          ]
        }
      }
    }
  ]
}