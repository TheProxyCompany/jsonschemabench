{
  "description": "sample Kubernetes/kb_386_Normalized.json",
  "meta": {
    "full_size": 529,
    "stripped_size": 149,
    "features": [],
    "raw_features": [
      "properties",
      "required",
      "type",
      "type:[]",
      "type:null",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "description": "GroupVersion contains the \"group/version\" and \"version\" string of a version. It is made a struct to keep extensibility.",
    "properties": {
      "groupVersion": {
        "description": "groupVersion specifies the API group and version in the form \"group/version\"",
        "type": [
          "string",
          "null"
        ]
      },
      "version": {
        "description": "version specifies the version in the form of \"version\". This is to save the clients the trouble of splitting the GroupVersion.",
        "type": [
          "string",
          "null"
        ]
      }
    },
    "required": [
      "groupVersion",
      "version"
    ],
    "type": "object"
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "groupVersion": "apps/v1",
        "version": "v1"
      }
    },
    {
      "description": "llama-70b generated negative; focus on type keyword with an array of types",
      "valid": false,
      "rust_error": "123 is not of types \"null\", \"string\"",
      "python_error": "123 is not of type 'string', 'null'\n\nFailed validating 'type' in schema['properties']['groupVersion']:\n    {'description': 'groupVersion specifies the API group and version in '\n                    'the form \"group/version\"',\n     'type': ['string', 'null']}\n\nOn instance['groupVersion']:\n    123",
      "data": {
        "groupVersion": 123,
        "version": "v1"
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "1 is not of types \"null\", \"string\"",
      "python_error": "1 is not of type 'string', 'null'\n\nFailed validating 'type' in schema['properties']['version']:\n    {'description': 'version specifies the version in the form of '\n                    '\"version\". This is to save the clients the trouble of '\n                    'splitting the GroupVersion.',\n     'type': ['string', 'null']}\n\nOn instance['version']:\n    1",
      "data": {
        "groupVersion": "apps/v1",
        "version": 1
      }
    },
    {
      "description": "llama-70b generated negative; focus on type keyword with an array of types",
      "valid": false,
      "rust_error": "{} is not of types \"null\", \"string\"",
      "python_error": "{} is not of type 'string', 'null'\n\nFailed validating 'type' in schema['properties']['groupVersion']:\n    {'description': 'groupVersion specifies the API group and version in '\n                    'the form \"group/version\"',\n     'type': ['string', 'null']}\n\nOn instance['groupVersion']:\n    {}",
      "data": {
        "groupVersion": {},
        "version": "v1"
      }
    }
  ]
}