{
  "description": "sample Github_hard/o17944.json",
  "meta": {
    "full_size": 2911,
    "stripped_size": 2651,
    "features": [
      "$ref",
      "additionalProperties",
      "dependencies",
      "format",
      "format:environment",
      "format:ports",
      "items",
      "oneOf",
      "patternProperties"
    ],
    "raw_features": [
      "$schema",
      "_boolSchema",
      "definitions",
      "properties",
      "required",
      "type",
      "type:[]",
      "type:array",
      "type:boolean",
      "type:null",
      "type:number",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "type": "object",
    "patternProperties": {
      "^[a-zA-Z0-9._-]+$": {
        "$ref": "#/definitions/service"
      }
    },
    "definitions": {
      "service": {
        "type": "object",
        "properties": {
          "build": {
            "type": "string"
          },
          "cap_add": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "_uniqueItems": true
          },
          "cap_drop": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "_uniqueItems": true
          },
          "command": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "container_name": {
            "type": "string"
          },
          "cpu_shares": {
            "type": [
              "number",
              "string"
            ]
          },
          "cpuset": {
            "type": "string"
          },
          "devices": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "_uniqueItems": true
          },
          "dns": {
            "$ref": "#/definitions/string_or_list"
          },
          "dns_search": {
            "$ref": "#/definitions/string_or_list"
          },
          "dockerfile": {
            "type": "string"
          },
          "domainname": {
            "type": "string"
          },
          "entrypoint": {
            "$ref": "#/definitions/string_or_list"
          },
          "env_file": {
            "$ref": "#/definitions/string_or_list"
          },
          "environment": {
            "oneOf": [
              {
                "type": "object",
                "patternProperties": {
                  "^[^-]+$": {
                    "type": [
                      "string",
                      "number",
                      "boolean"
                    ],
                    "format": "environment"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "_uniqueItems": true
              }
            ]
          },
          "expose": {
            "type": "array",
            "items": {
              "type": [
                "string",
                "number"
              ]
            },
            "_uniqueItems": true
          },
          "extends": {
            "type": "object",
            "properties": {
              "service": {
                "type": "string"
              },
              "file": {
                "type": "string"
              }
            },
            "required": [
              "service"
            ],
            "additionalProperties": false
          },
          "extra_hosts": {
            "$ref": "#/definitions/list_or_dict"
          },
          "external_links": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "_uniqueItems": true
          },
          "hostname": {
            "type": "string"
          },
          "image": {
            "type": "string"
          },
          "labels": {
            "$ref": "#/definitions/list_or_dict"
          },
          "links": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "_uniqueItems": true
          },
          "log_driver": {
            "type": "string"
          },
          "log_opt": {
            "type": "object"
          },
          "mac_address": {
            "type": "string"
          },
          "mem_limit": {
            "type": [
              "number",
              "string"
            ]
          },
          "memswap_limit": {
            "type": [
              "number",
              "string"
            ]
          },
          "name": {
            "type": "string"
          },
          "net": {
            "type": "string"
          },
          "pid": {
            "type": [
              "string",
              "null"
            ]
          },
          "ports": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "type": "string",
                  "format": "ports"
                },
                {
                  "type": "number",
                  "format": "ports"
                }
              ]
            },
            "_uniqueItems": true
          },
          "privileged": {
            "type": "boolean"
          },
          "read_only": {
            "type": "boolean"
          },
          "restart": {
            "type": "string"
          },
          "security_opt": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "_uniqueItems": true
          },
          "stdin_open": {
            "type": "boolean"
          },
          "tty": {
            "type": "boolean"
          },
          "user": {
            "type": "string"
          },
          "volumes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "_uniqueItems": true
          },
          "volume_driver": {
            "type": "string"
          },
          "volumes_from": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "_uniqueItems": true
          },
          "working_dir": {
            "type": "string"
          }
        },
        "dependencies": {
          "memswap_limit": [
            "mem_limit"
          ]
        },
        "additionalProperties": false
      },
      "string_or_list": {
        "oneOf": [
          {
            "type": "string"
          },
          {
            "$ref": "#/definitions/list_of_strings"
          }
        ]
      },
      "list_of_strings": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "_uniqueItems": true
      },
      "list_or_dict": {
        "oneOf": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "_uniqueItems": true
          },
          {
            "type": "object"
          }
        ]
      }
    },
    "additionalProperties": false
  },
  "tests": [
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "service1": {
          "build": "context",
          "cap_add": [
            "NET_ADMIN"
          ],
          "cap_drop": [
            "SYS_ADMIN"
          ],
          "command": [
            "bash",
            "-c",
            "echo Hello World"
          ],
          "container_name": "my_service",
          "cpu_shares": 100,
          "cpuset": "0-3",
          "devices": [
            "/dev/ttyUSB0:/dev/ttyUSB0"
          ],
          "dns": [
            "8.8.8.8"
          ],
          "dns_search": [
            "example.com"
          ],
          "dockerfile": "Dockerfile",
          "domainname": "example.com",
          "entrypoint": [
            "bash",
            "-c"
          ],
          "env_file": [
            "env_file.env"
          ],
          "environment": {
            "VARIABLE": "value"
          },
          "expose": [
            8080
          ],
          "extends": {
            "service": "service2",
            "file": "docker-compose.yml"
          },
          "extra_hosts": {
            "host1": "192.168.1.100",
            "host2": "192.168.1.101"
          },
          "external_links": [
            "service2"
          ],
          "hostname": "my_service",
          "image": "ubuntu:latest",
          "labels": {
            "label1": "value1",
            "label2": "value2"
          },
          "links": [
            "service2"
          ],
          "log_driver": "json-file",
          "log_opt": {
            "labels": "service1",
            "env": "os,customer"
          },
          "mac_address": "00:11:22:33:44:55",
          "mem_limit": "100m",
          "memswap_limit": "200m",
          "name": "my_service",
          "net": "host",
          "pid": "host",
          "ports": [
            "8080:8080"
          ],
          "privileged": true,
          "read_only": true,
          "restart": "always",
          "security_opt": [
            "label:level:s0"
          ],
          "stdin_open": true,
          "tty": true,
          "user": "user:group",
          "volumes": [
            "/host/path:/container/path"
          ],
          "volume_driver": "local",
          "volumes_from": [
            "service2"
          ],
          "working_dir": "/container/path"
        },
        "service2": {
          "image": "ubuntu:latest"
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on oneOf keyword",
      "valid": false,
      "rust_error": "12 is not valid under any of the schemas listed in the 'oneOf' keyword",
      "python_error": "12 is not valid under any of the given schemas\n\nFailed validating 'oneOf' in schema['patternProperties']['^[a-zA-Z0-9._-]+$']['properties']['environment']:\n    {'oneOf': [{'type': 'object',\n                'patternProperties': {'^[^-]+$': {'type': ['string',\n                                                           'number',\n                                                           'boolean'],\n                                                  'format': 'environment'}},\n                'additionalProperties': False},\n               {'type': 'array',\n                'items': {'type': 'string'},\n                '_uniqueItems': True}]}\n\nOn instance['service1']['environment']:\n    12",
      "data": {
        "service1": {
          "build": "context",
          "cap_add": [
            "NET_ADMIN"
          ],
          "cap_drop": [
            "SYS_ADMIN"
          ],
          "command": 12,
          "container_name": "my_service",
          "cpu_shares": 100,
          "cpuset": "0-3",
          "devices": [
            "/dev/ttyUSB0:/dev/ttyUSB0"
          ],
          "dns": [
            "8.8.8.8"
          ],
          "dns_search": [
            "example.com"
          ],
          "dockerfile": "Dockerfile",
          "domainname": "example.com",
          "entrypoint": [
            "bash",
            "-c"
          ],
          "env_file": [
            "env_file.env"
          ],
          "environment": 12,
          "expose": [
            8080
          ],
          "extends": {
            "service": "service2",
            "file": "docker-compose.yml"
          },
          "extra_hosts": {
            "host1": "192.168.1.100",
            "host2": "192.168.1.101"
          },
          "external_links": [
            "service2"
          ],
          "hostname": "my_service",
          "image": "ubuntu:latest",
          "labels": {
            "label1": "value1",
            "label2": "value2"
          },
          "links": [
            "service2"
          ],
          "log_driver": "json-file",
          "log_opt": {
            "labels": "service1",
            "env": "os,customer"
          },
          "mac_address": "00:11:22:33:44:55",
          "mem_limit": "100m",
          "memswap_limit": "200m",
          "name": "my_service",
          "net": "host",
          "pid": "host",
          "ports": [
            "8080:8080",
            "8080:8080",
            "extra"
          ],
          "privileged": true,
          "read_only": true,
          "restart": "always",
          "security_opt": [
            "label:level:s0"
          ],
          "stdin_open": true,
          "tty": true,
          "user": "user:group",
          "volumes": [
            "/host/path:/container/path"
          ],
          "volume_driver": "local",
          "volumes_from": [
            "service2"
          ],
          "working_dir": "/container/path"
        },
        "service2": {
          "image": "ubuntu:latest"
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on patternProperties keyword",
      "valid": false,
      "rust_error": "Additional properties are not allowed ('!InvalidService' was unexpected)",
      "python_error": "'!InvalidService' does not match any of the regexes: '^[a-zA-Z0-9._-]+$'\n\nFailed validating 'additionalProperties' in schema:\n    {'$schema': 'http://json-schema.org/draft-04/schema#',\n     'type': 'object',\n     'patternProperties': {'^[a-zA-Z0-9._-]+$': {'$ref': '#/definitions/service'}},\n     'definitions': {'service': {'type': 'object',\n                                 'properties': {'build': {'type': 'string'},\n                                                'cap_add': {'type': 'array',\n                                                            'items': {'type': 'string'},\n                                                            '_uniqueItems': True},\n                                                'cap_drop': {'type': 'array',\n                                                             'items': {'type': 'string'},\n                                                             '_uniqueItems': True},\n                                                'command': {'oneOf': [{'type': 'string'},\n             .. (9925 more)",
      "data": {
        "service1": {
          "build": "context",
          "cap_add": [
            "NET_ADMIN"
          ],
          "cap_drop": [
            "SYS_ADMIN"
          ],
          "command": [
            "bash",
            "-c",
            "echo Hello World"
          ],
          "container_name": "my_service",
          "cpu_shares": 100,
          "cpuset": "0-3",
          "devices": [
            "/dev/ttyUSB0:/dev/ttyUSB0"
          ],
          "dns": [
            "8.8.8.8"
          ],
          "dns_search": [
            "example.com"
          ],
          "dockerfile": "Dockerfile",
          "domainname": "example.com",
          "entrypoint": [
            "bash",
            "-c"
          ],
          "env_file": [
            "env_file.env"
          ],
          "environment": {
            "VARIABLE": "value"
          },
          "expose": [
            8080
          ],
          "extends": {
            "service": "service2",
            "file": "docker-compose.yml"
          },
          "extra_hosts": {
            "host1": "192.168.1.100",
            "host2": "192.168.1.101"
          },
          "external_links": [
            "service2"
          ],
          "hostname": "my_service",
          "image": "ubuntu:latest",
          "labels": {
            "label1": "value1",
            "label2": "value2"
          },
          "links": [
            "service2"
          ],
          "log_driver": "json-file",
          "log_opt": {
            "labels": "service1",
            "env": "os,customer"
          },
          "mac_address": "00:11:22:33:44:55",
          "mem_limit": "100m",
          "memswap_limit": "200m",
          "name": "my_service",
          "net": "host",
          "pid": "host",
          "ports": [
            "8080:8080"
          ],
          "privileged": true,
          "read_only": true,
          "restart": "always",
          "security_opt": [
            "label:level:s0"
          ],
          "stdin_open": true,
          "tty": true,
          "user": "user:group",
          "volumes": [
            "/host/path:/container/path"
          ],
          "volume_driver": "local",
          "volumes_from": [
            "service2"
          ],
          "working_dir": "/container/path"
        },
        "service2": {
          "image": "ubuntu:latest"
        },
        "!InvalidService": {
          "image": "ubuntu:latest"
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on dependencies keyword",
      "valid": false,
      "rust_error": "null is not of types \"number\", \"string\"",
      "python_error": "None is not of type 'number', 'string'\n\nFailed validating 'type' in schema['patternProperties']['^[a-zA-Z0-9._-]+$']['properties']['mem_limit']:\n    {'type': ['number', 'string']}\n\nOn instance['service1']['mem_limit']:\n    None",
      "data": {
        "service1": {
          "build": "context",
          "cap_add": [
            "NET_ADMIN"
          ],
          "cap_drop": [
            "SYS_ADMIN"
          ],
          "command": [
            "bash",
            "-c",
            "echo Hello World"
          ],
          "container_name": "my_service",
          "cpu_shares": 100,
          "cpuset": "0-3",
          "devices": [
            "/dev/ttyUSB0:/dev/ttyUSB0"
          ],
          "dns": [
            "8.8.8.8"
          ],
          "dns_search": [
            "example.com"
          ],
          "dockerfile": "Dockerfile",
          "domainname": "example.com",
          "entrypoint": [
            "bash",
            "-c"
          ],
          "env_file": [
            "env_file.env"
          ],
          "environment": {
            "VARIABLE": "value"
          },
          "expose": [
            8080
          ],
          "extends": {
            "service": "service2",
            "file": "docker-compose.yml"
          },
          "extra_hosts": {
            "host1": "192.168.1.100",
            "host2": "192.168.1.101"
          },
          "external_links": [
            "service2"
          ],
          "hostname": "my_service",
          "image": "ubuntu:latest",
          "labels": {
            "label1": "value1",
            "label2": "value2"
          },
          "links": [
            "service2"
          ],
          "log_driver": "json-file",
          "log_opt": {
            "labels": "service1",
            "env": "os,customer"
          },
          "mac_address": "00:11:22:33:44:55",
          "mem_limit": null,
          "memswap_limit": "200m",
          "name": "my_service",
          "net": "host",
          "pid": "host",
          "ports": [
            "8080:8080"
          ],
          "privileged": true,
          "read_only": true,
          "restart": "always",
          "security_opt": [
            "label:level:s0"
          ],
          "stdin_open": true,
          "tty": true,
          "user": "user:group",
          "volumes": [
            "/host/path:/container/path"
          ],
          "volume_driver": "local",
          "volumes_from": [
            "service2"
          ],
          "working_dir": "/container/path"
        },
        "service2": {
          "image": "ubuntu:latest"
        }
      }
    }
  ]
}