{
  "description": "sample Github_medium/o91012.json",
  "meta": {
    "full_size": 1873,
    "stripped_size": 1071,
    "features": [
      "additionalProperties",
      "enum",
      "items",
      "patternProperties"
    ],
    "raw_features": [
      "_boolSchema",
      "definitions",
      "properties",
      "required",
      "type",
      "type:[]",
      "type:array",
      "type:boolean",
      "type:null",
      "type:number",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "additionalProperties": false,
    "definitions": {
      "attribute_base": {
        "additionalProperties": false,
        "properties": {
          "description": {
            "type": "string"
          },
          "format": {
            "type": "string"
          },
          "info": {
            "type": "object"
          },
          "label": {
            "type": "string"
          },
          "missing_value": {
            "title": "Missing value",
            "type": [
              "string",
              "number",
              "null",
              "boolean"
            ]
          },
          "name": {
            "type": "string"
          },
          "order": {
            "enum": [
              "asc",
              "desc"
            ],
            "type": "string"
          }
        },
        "required": [
          "name"
        ],
        "type": "object"
      }
    },
    "properties": {
      "aggregates": {
        "items": {
          "anyof": [
            {
              "type": "string"
            },
            {
              "additionalproperties": false,
              "allof": [
                {
                  "$ref": "#/definitions/attribute_base"
                },
                {
                  "properties": {
                    "expression": {
                      "type": "string"
                    },
                    "formula": {
                      "type": "string"
                    },
                    "function": {
                      "type": "string"
                    },
                    "measure": {
                      "type": "string"
                    },
                    "nonadditive": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          ]
        },
        "type": "array"
      },
      "browser_options": {
        "type": "object"
      },
      "category": {
        "type": "string"
      },
      "description": {
        "type": "string"
      },
      "details": {
        "items": {
          "anyof": [
            {
              "type": "string"
            },
            {
              "additionalproperties": false,
              "allof": [
                {
                  "$ref": "#/definitions/attribute_base"
                },
                {
                  "properties": {
                    "locales": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    }
                  }
                }
              ]
            }
          ]
        },
        "title": "Detail Attributes",
        "type": "array"
      },
      "dimensions": {
        "items": {
          "title": "Dimension name",
          "type": [
            "string",
            "object"
          ]
        },
        "title": "Dimensions",
        "type": "array"
      },
      "fact": {
        "type": "string"
      },
      "hierarchies": {
        "patternProperties": {
          ".*": {
            "items": {
              "title": "Hierarchy",
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "implicit_aggregates": {
        "type": "boolean"
      },
      "info": {
        "type": "object"
      },
      "joins": {
        "type": "array"
      },
      "key": {
        "type": "string"
      },
      "label": {
        "type": "string"
      },
      "mappings": {
        "type": "object"
      },
      "measures": {
        "items": {
          "anyof": [
            {
              "type": "string"
            },
            {
              "additionalproperties": false,
              "allof": [
                {
                  "$ref": "#/definitions/attribute_base"
                },
                {
                  "properties": {
                    "aggregates": {
                      "type": "array"
                    },
                    "expression": {
                      "type": "string"
                    },
                    "nonadditive": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          ]
        },
        "type": "array"
      },
      "name": {
        "type": "string"
      },
      "store": {
        "type": "string"
      }
    },
    "required": [
      "name"
    ],
    "title": "Cube",
    "type": "object"
  },
  "tests": [
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "aggregates": [
          "aggregate1",
          "aggregate2",
          {
            "name": "aggregate3",
            "description": "This is aggregate 3.",
            "label": "Aggregate 3",
            "format": "number",
            "expression": "example_expression",
            "formula": "example_formula",
            "function": "example_function",
            "measure": "example_measure",
            "nonadditive": "none"
          }
        ],
        "browser_options": {},
        "category": "Example Category",
        "description": "This is an example cube.",
        "details": [
          "detail1",
          "detail2",
          {
            "name": "detail3",
            "description": "This is detail 3.",
            "label": "Detail 3",
            "format": "string",
            "locales": [
              "en",
              "fr"
            ]
          }
        ],
        "dimensions": [
          "dimension1",
          "dimension2",
          {
            "name": "dimension3",
            "description": "This is dimension 3.",
            "label": "Dimension 3",
            "format": "string"
          }
        ],
        "fact": "example_fact",
        "hierarchies": {
          "hierarchy1": [
            "level1",
            "level2"
          ],
          "hierarchy2": [
            "level3",
            "level4"
          ]
        },
        "implicit_aggregates": false,
        "info": {},
        "joins": [],
        "key": "example_cube",
        "label": "Example Cube",
        "mappings": {},
        "measures": [
          "measure1",
          "measure2",
          {
            "name": "measure3",
            "description": "This is measure 3.",
            "label": "Measure 3",
            "format": "number",
            "aggregates": [
              "sum",
              "avg"
            ],
            "expression": "example_expression",
            "nonadditive": "none"
          }
        ],
        "name": "Example Cube",
        "store": "example_store"
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "aggregates": [
          "Aggregate 1",
          "Aggregate 2",
          {
            "name": "Aggregate 3",
            "label": "Aggregate 3 Label",
            "description": "Aggregate 3 Description",
            "expression": "Aggregate 3 Expression",
            "formula": "Aggregate 3 Formula",
            "function": "Aggregate 3 Function",
            "measure": "Aggregate 3 Measure",
            "nonadditive": "Aggregate 3 Nonadditive"
          }
        ],
        "browser_options": {},
        "category": "Example Category",
        "description": "This is an example cube",
        "details": [
          "Detail 1",
          "Detail 2",
          {
            "name": "Detail 3",
            "label": "Detail 3 Label",
            "description": "Detail 3 Description",
            "locales": [
              "en",
              "fr"
            ]
          }
        ],
        "dimensions": [
          "Dimension 1",
          "Dimension 2",
          {
            "name": "Dimension 3",
            "label": "Dimension 3 Label",
            "description": "Dimension 3 Description"
          }
        ],
        "fact": "Example Fact",
        "hierarchies": {
          "Hierarchy 1": [
            "Level 1",
            "Level 2"
          ],
          "Hierarchy 2": [
            "Level 3",
            "Level 4"
          ]
        },
        "implicit_aggregates": false,
        "info": {},
        "joins": [],
        "key": "Example Key",
        "label": "Example Label",
        "mappings": {},
        "measures": [
          "Measure 1",
          "Measure 2",
          {
            "name": "Measure 3",
            "label": "Measure 3 Label",
            "description": "Measure 3 Description",
            "aggregates": [
              "sum",
              "avg"
            ],
            "expression": "Measure 3 Expression",
            "nonadditive": "Measure 3 Nonadditive"
          }
        ],
        "name": "Example Cube",
        "store": "Example Store"
      }
    },
    {
      "description": "llama-70b generated negative; focus on patternProperties keyword",
      "valid": false,
      "rust_error": "\"string instead of array\" is not of type \"array\"",
      "python_error": "'string instead of array' is not of type 'array'\n\nFailed validating 'type' in schema['properties']['hierarchies']['patternProperties']['.*']:\n    {'items': {'title': 'Hierarchy', 'type': 'string'}, 'type': 'array'}\n\nOn instance['hierarchies']['Hierarchy 1']:\n    'string instead of array'",
      "data": {
        "name": "Example Cube",
        "category": "Example Category",
        "description": "This is an example cube",
        "fact": "Example Fact",
        "dimensions": [
          "Dimension 1",
          "Dimension 2",
          {
            "name": "Dimension 3",
            "label": "Dimension 3 Label",
            "description": "Dimension 3 Description"
          }
        ],
        "measures": [
          "Measure 1",
          "Measure 2",
          {
            "name": "Measure 3",
            "label": "Measure 3 Label",
            "description": "Measure 3 Description",
            "aggregates": [
              "sum",
              "avg"
            ],
            "expression": "Measure 3 Expression",
            "nonadditive": "Measure 3 Nonadditive"
          }
        ],
        "aggregates": [
          "Aggregate 1",
          "Aggregate 2",
          {
            "name": "Aggregate 3",
            "label": "Aggregate 3 Label",
            "description": "Aggregate 3 Description",
            "expression": "Aggregate 3 Expression",
            "formula": "Aggregate 3 Formula",
            "function": "Aggregate 3 Function",
            "measure": "Aggregate 3 Measure",
            "nonadditive": "Aggregate 3 Nonadditive"
          }
        ],
        "hierarchies": {
          "Hierarchy 1": "string instead of array",
          "Hierarchy 2": [
            "Level 3",
            "Level 4"
          ]
        },
        "joins": [],
        "mappings": {},
        "store": "Example Store",
        "browser_options": {},
        "info": {},
        "key": "Example Key",
        "label": "Example Label",
        "implicit_aggregates": false,
        "details": [
          "Detail 1",
          "Detail 2",
          {
            "name": "Detail 3",
            "label": "Detail 3 Label",
            "description": "Detail 3 Description",
            "locales": [
              "en",
              "fr"
            ]
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on type keyword with an array of types",
      "valid": false,
      "rust_error": "Additional properties are not allowed ('missing_value' was unexpected)",
      "python_error": "Additional properties are not allowed ('missing_value' was unexpected)\n\nFailed validating 'additionalProperties' in schema:\n    {'additionalProperties': False,\n     'definitions': {'attribute_base': {'additionalProperties': False,\n                                        'properties': {'description': {'type': 'string'},\n                                                       'format': {'type': 'string'},\n                                                       'info': {'type': 'object'},\n                                                       'label': {'type': 'string'},\n                                                       'missing_value': {'title': 'Missing '\n                                                                                  'value',\n                                                                         'type': ['string',\n                                                                                  'number',\n                                                                                  '.. (5887 more)",
      "data": {
        "name": "Example Cube",
        "category": "Example Category",
        "description": "This is an example cube",
        "fact": "Example Fact",
        "dimensions": [
          "Dimension 1",
          "Dimension 2",
          {
            "name": "Dimension 3",
            "label": "Dimension 3 Label",
            "description": "Dimension 3 Description"
          }
        ],
        "measures": [
          "Measure 1",
          "Measure 2",
          {
            "name": "Measure 3",
            "label": "Measure 3 Label",
            "description": "Measure 3 Description",
            "aggregates": [
              "sum",
              "avg"
            ],
            "expression": "Measure 3 Expression",
            "nonadditive": "Measure 3 Nonadditive"
          }
        ],
        "aggregates": [
          "Aggregate 1",
          "Aggregate 2",
          {
            "name": "Aggregate 3",
            "label": "Aggregate 3 Label",
            "description": "Aggregate 3 Description",
            "expression": "Aggregate 3 Expression",
            "formula": "Aggregate 3 Formula",
            "function": "Aggregate 3 Function",
            "measure": "Aggregate 3 Measure",
            "nonadditive": "Aggregate 3 Nonadditive"
          }
        ],
        "hierarchies": {
          "Hierarchy 1": [
            "Level 1",
            "Level 2"
          ],
          "Hierarchy 2": [
            "Level 3",
            "Level 4"
          ]
        },
        "joins": [],
        "mappings": {},
        "store": "Example Store",
        "browser_options": {},
        "info": {},
        "key": "Example Key",
        "label": "Example Label",
        "implicit_aggregates": false,
        "details": [
          "Detail 1",
          "Detail 2",
          {
            "name": "Detail 3",
            "label": "Detail 3 Label",
            "description": "Detail 3 Description",
            "locales": [
              "en",
              55
            ]
          }
        ],
        "missing_value": {}
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "123 is not of types \"object\", \"string\"",
      "python_error": "None is not of type 'string', 'object'\n\nFailed validating 'type' in schema['properties']['dimensions']['items']:\n    {'title': 'Dimension name', 'type': ['string', 'object']}\n\nOn instance['dimensions'][4]:\n    None",
      "data": {
        "name": "Example Cube",
        "category": "Example Category",
        "description": "This is an example cube",
        "fact": "Example Fact",
        "dimensions": [
          "Dimension 1",
          "Dimension 2",
          {
            "name": "Dimension 3",
            "label": "Dimension 3 Label",
            "description": "Dimension 3 Description"
          },
          123,
          null
        ],
        "measures": [
          "Measure 1",
          "Measure 2",
          {
            "name": "Measure 3",
            "label": "Measure 3 Label",
            "description": "Measure 3 Description",
            "aggregates": [
              "sum",
              "avg"
            ],
            "expression": "Measure 3 Expression",
            "nonadditive": "Measure 3 Nonadditive"
          }
        ],
        "aggregates": [
          "Aggregate 1",
          "Aggregate 2",
          {
            "name": "Aggregate 3",
            "label": "Aggregate 3 Label",
            "description": "Aggregate 3 Description",
            "expression": "Aggregate 3 Expression",
            "formula": "Aggregate 3 Formula",
            "function": "Aggregate 3 Function",
            "measure": "Aggregate 3 Measure",
            "nonadditive": "Aggregate 3 Nonadditive"
          },
          {
            "name": "Aggregate 4",
            "label": "Aggregate 4 Label",
            "description": "Aggregate 4 Description",
            "expression": "Aggregate 4 Expression",
            "formula": "Aggregate 4 Formula",
            "function": "Aggregate 4 Function",
            "measure": "Aggregate 4 Measure",
            "nonadditive": 123
          }
        ],
        "hierarchies": {
          "Hierarchy 1": [
            "Level 1",
            "Level 2"
          ],
          "Hierarchy 2": [
            "Level 3",
            "Level 4"
          ],
          "Hierarchy 3": []
        },
        "joins": [],
        "mappings": {},
        "store": "Example Store",
        "browser_options": {},
        "info": {},
        "key": "Example Key",
        "label": "Example Label",
        "implicit_aggregates": false,
        "details": [
          "Detail 1",
          "Detail 2",
          {
            "name": "Detail 3",
            "label": "Detail 3 Label",
            "description": "Detail 3 Description",
            "locales": [
              "en",
              "fr"
            ]
          },
          {
            "name": "Detail 4",
            "label": "Detail 4 Label",
            "description": "Detail 4 Description",
            "locales": [
              "en",
              123
            ]
          }
        ]
      }
    }
  ]
}