{
  "description": "sample Github_medium/o71820.json",
  "meta": {
    "full_size": 1857,
    "stripped_size": 1857,
    "features": [
      "$ref",
      "@minmaxInteger",
      "@minmaxItems",
      "@minmaxLength",
      "@siblingKeys",
      "additionalItems",
      "additionalProperties",
      "anyOf",
      "enum",
      "items",
      "oneOf"
    ],
    "raw_features": [
      "_boolSchema",
      "definitions",
      "maximum",
      "minItems",
      "minLength",
      "minimum",
      "properties",
      "required",
      "type",
      "type:array",
      "type:integer",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "additionalProperties": false,
    "definitions": {
      "healthMonitorType": {
        "oneOf": [
          {
            "additionalProperties": false,
            "properties": {
              "name": {
                "minLength": 1,
                "type": "string"
              }
            },
            "required": [
              "name"
            ]
          },
          {
            "additionalProperties": false,
            "properties": {
              "interval": {
                "maximum": 86400,
                "minimum": 1,
                "type": "integer"
              },
              "name": {
                "minLength": 1,
                "type": "string"
              },
              "recv": {
                "minLength": 1,
                "type": "string"
              },
              "send": {
                "minLength": 1,
                "type": "string"
              },
              "timeout": {
                "maximum": 86400,
                "minimum": 1,
                "type": "integer"
              },
              "type": {
                "enum": [
                  "http",
                  "tcp"
                ],
                "type": "string"
              }
            },
            "required": [
              "name",
              "type"
            ]
          }
        ],
        "type": "object"
      },
      "policyType": {
        "minLength": 1,
        "type": "string"
      },
      "poolType": {
        "additionalProperties": false,
        "anyOf": [
          {
            "required": [
              "balance"
            ]
          },
          {
            "required": [
              "healthMonitors"
            ]
          }
        ],
        "properties": {
          "balance": {
            "minLength": 1,
            "type": "string"
          },
          "healthMonitors": {
            "additionalItems": false,
            "items": {
              "$ref": "#/definitions/healthMonitorType"
            },
            "minItems": 1,
            "type": "array"
          }
        },
        "type": "object"
      },
      "profileType": {
        "minLength": 1,
        "type": "string"
      },
      "sslProfileType": {
        "minLength": 1,
        "type": "string"
      },
      "virtualServerType": {
        "additionalProperties": false,
        "anyOf": [
          {
            "required": [
              "profiles"
            ]
          },
          {
            "required": [
              "policies"
            ]
          },
          {
            "required": [
              "sslProfiles"
            ]
          }
        ],
        "properties": {
          "policies": {
            "items": {
              "$ref": "#/definitions/policyType"
            },
            "minItems": 1,
            "type": "array"
          },
          "profiles": {
            "items": {
              "$ref": "#/definitions/profileType"
            },
            "minItems": 1,
            "type": "array"
          },
          "sslProfiles": {
            "items": {
              "$ref": "#/definitions/sslProfileType"
            },
            "minItems": 1,
            "type": "array"
          }
        },
        "type": "object"
      }
    },
    "properties": {
      "plans": {
        "items": {
          "additionalProperties": false,
          "anyOf": [
            {
              "required": [
                "pool"
              ]
            },
            {
              "required": [
                "virtualServer"
              ]
            }
          ],
          "properties": {
            "description": {
              "minLength": 1,
              "type": "string"
            },
            "name": {
              "minLength": 1,
              "type": "string"
            },
            "pool": {
              "$ref": "#/definitions/poolType"
            },
            "virtualServer": {
              "$ref": "#/definitions/virtualServerType"
            }
          },
          "required": [
            "name",
            "description"
          ]
        },
        "minItems": 1,
        "type": "array"
      }
    },
    "required": [
      "plans"
    ],
    "type": "object"
  },
  "tests": [
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "plans": [
          {
            "description": "This is plan 1",
            "name": "Plan 1",
            "pool": {
              "balance": "round-robin",
              "healthMonitors": [
                {
                  "interval": 10,
                  "name": "Monitor 1",
                  "recv": "200 OK",
                  "send": "GET / HTTP/1.1",
                  "timeout": 5,
                  "type": "http"
                }
              ]
            }
          },
          {
            "description": "This is plan 2",
            "name": "Plan 2",
            "virtualServer": {
              "policies": [
                "Policy 1",
                "Policy 2"
              ],
              "profiles": [
                "Profile 1",
                "Profile 2"
              ],
              "sslProfiles": [
                "SSL Profile 1",
                "SSL Profile 2"
              ]
            }
          }
        ]
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "plans": [
          {
            "description": "This is plan 1",
            "name": "Plan 1",
            "pool": {
              "balance": "round-robin",
              "healthMonitors": [
                {
                  "interval": 10,
                  "name": "Monitor 1",
                  "recv": "HTTP/1.1 200 OK",
                  "send": "GET / HTTP/1.1\r\nHost: example.com\r\n\r\n",
                  "timeout": 10,
                  "type": "http"
                }
              ]
            }
          },
          {
            "description": "This is plan 2",
            "name": "Plan 2",
            "virtualServer": {
              "policies": [
                "Policy 1",
                "Policy 2"
              ],
              "profiles": [
                "Profile 1",
                "Profile 2"
              ],
              "sslProfiles": [
                "SSL Profile 1",
                "SSL Profile 2"
              ]
            }
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on oneOf keyword",
      "valid": false,
      "rust_error": "{\"name\":\"Monitor 1\",\"type\":\"http\",\"interval\":10,\"timeout\":10,\"send\":\"GET / HTTP/1.1\\r\\nHost: example.com\\r\\n\\r\\n\",\"recv\":\"HTTP/1.1 200 OK\",\"additionalField\":\"Additional Value\"} is not valid under any of the schemas listed in the 'oneOf' keyword",
      "python_error": "{'name': 'Monitor 1', 'type': 'http', 'interval': 10, 'timeout': 10, 'send': 'GET / HTTP/1.1\\r\\nHost: example.com\\r\\n\\r\\n', 'recv': 'HTTP/1.1 200 OK', 'additionalField': 'Additional Value'} is not valid under any of the given schemas\n\nFailed validating 'oneOf' in schema['properties']['plans']['items']['properties']['pool']['properties']['healthMonitors']['items']:\n    {'oneOf': [{'additionalProperties': False,\n                'properties': {'name': {'minLength': 1, 'type': 'string'}},\n                'required': ['name']},\n               {'additionalProperties': False,\n                'properties': {'interval': {'maximum': 86400,\n                                            'minimum': 1,\n                                            'type': 'integer'},\n                               'name': {'minLength': 1, 'type': 'string'},\n                               'recv': {'minLength': 1, 'type': 'string'},\n                               'send': {'minLength': 1, 'type': 'string'},\n                               'timeout.. (616 more)",
      "data": {
        "plans": [
          {
            "name": "Plan 1",
            "description": "This is plan 1",
            "pool": {
              "balance": "round-robin",
              "healthMonitors": [
                {
                  "name": "Monitor 1",
                  "type": "http",
                  "interval": 10,
                  "timeout": 10,
                  "send": "GET / HTTP/1.1\r\nHost: example.com\r\n\r\n",
                  "recv": "HTTP/1.1 200 OK",
                  "additionalField": "Additional Value"
                }
              ]
            }
          },
          {
            "name": "Plan 2",
            "description": "This is plan 2",
            "virtualServer": {
              "profiles": [
                "Profile 1",
                "Profile 2"
              ],
              "policies": [
                "Policy 1",
                "Policy 2"
              ],
              "sslProfiles": [
                "SSL Profile 1",
                "SSL Profile 2"
              ]
            }
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on minimum keyword or maximum keyword",
      "valid": false,
      "rust_error": "{\"name\":\"Monitor 1\",\"type\":\"http\",\"interval\":0,\"timeout\":86401,\"send\":\"GET / HTTP/1.1\\r\\nHost: example.com\\r\\n\\r\\n\",\"recv\":\"HTTP/1.1 200 OK\"} is not valid under any of the schemas listed in the 'oneOf' keyword",
      "python_error": "0 is less than the minimum of 1\n\nFailed validating 'minimum' in schema[1]['properties']['interval']:\n    {'maximum': 86400, 'minimum': 1, 'type': 'integer'}\n\nOn instance['interval']:\n    0",
      "data": {
        "plans": [
          {
            "name": "Plan 1",
            "description": "This is plan 1",
            "pool": {
              "balance": "round-robin",
              "healthMonitors": [
                {
                  "name": "Monitor 1",
                  "type": "http",
                  "interval": 0,
                  "timeout": 86401,
                  "send": "GET / HTTP/1.1\r\nHost: example.com\r\n\r\n",
                  "recv": "HTTP/1.1 200 OK"
                }
              ]
            }
          },
          {
            "name": "Plan 2",
            "description": "This is plan 2",
            "virtualServer": {
              "profiles": [
                "Profile 1",
                "Profile 2"
              ],
              "policies": [
                "Policy 1",
                "Policy 2"
              ],
              "sslProfiles": [
                "SSL Profile 1",
                "SSL Profile 2"
              ]
            }
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on additionalItems keyword",
      "valid": false,
      "rust_error": "{\"type\":\"http\",\"interval\":10,\"timeout\":10,\"send\":\"GET / HTTP/1.1\\r\\nHost: example.com\\r\\n\\r\\n\",\"recv\":\"HTTP/1.1 200 OK\"} is not valid under any of the schemas listed in the 'oneOf' keyword",
      "python_error": "{'type': 'http', 'interval': 10, 'timeout': 10, 'send': 'GET / HTTP/1.1\\r\\nHost: example.com\\r\\n\\r\\n', 'recv': 'HTTP/1.1 200 OK'} is not valid under any of the given schemas\n\nFailed validating 'oneOf' in schema['properties']['plans']['items']['properties']['pool']['properties']['healthMonitors']['items']:\n    {'oneOf': [{'additionalProperties': False,\n                'properties': {'name': {'minLength': 1, 'type': 'string'}},\n                'required': ['name']},\n               {'additionalProperties': False,\n                'properties': {'interval': {'maximum': 86400,\n                                            'minimum': 1,\n                                            'type': 'integer'},\n                               'name': {'minLength': 1, 'type': 'string'},\n                               'recv': {'minLength': 1, 'type': 'string'},\n                               'send': {'minLength': 1, 'type': 'string'},\n                               'timeout': {'maximum': 86400,\n                                      .. (486 more)",
      "data": {
        "plans": [
          {
            "name": "Plan 1",
            "description": "This is plan 1",
            "pool": {
              "balance": "round-robin",
              "healthMonitors": [
                {
                  "interval": 10,
                  "name": "Monitor 1",
                  "recv": "HTTP/1.1 200 OK",
                  "send": "GET / HTTP/1.1\r\nHost: example.com\r\n\r\n",
                  "timeout": 10,
                  "type": "http"
                },
                {
                  "type": "http",
                  "interval": 10,
                  "timeout": 10,
                  "send": "GET / HTTP/1.1\r\nHost: example.com\r\n\r\n",
                  "recv": "HTTP/1.1 200 OK"
                }
              ]
            }
          },
          {
            "name": "Plan 2",
            "description": "This is plan 2",
            "virtualServer": {
              "profiles": [
                "Profile 1",
                "Profile 2"
              ],
              "policies": [
                "Policy 1",
                "Policy 2"
              ],
              "sslProfiles": [
                "SSL Profile 1",
                "SSL Profile 2"
              ]
            }
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on minItems keyword",
      "valid": false,
      "rust_error": "[] has less than 1 item",
      "python_error": "[] should be non-empty\n\nFailed validating 'minItems' in schema['properties']['plans']['items']['properties']['virtualServer']['properties']['profiles']:\n    {'items': {'$ref': '#/definitions/profileType'},\n     'minItems': 1,\n     'type': 'array'}\n\nOn instance['plans'][1]['virtualServer']['profiles']:\n    []",
      "data": {
        "plans": [
          {
            "name": "Plan 1",
            "description": "This is plan 1",
            "pool": {
              "balance": "round-robin",
              "healthMonitors": []
            }
          },
          {
            "name": "Plan 2",
            "description": "This is plan 2",
            "virtualServer": {
              "profiles": [],
              "policies": [
                "Policy 1",
                "Policy 2"
              ],
              "sslProfiles": [
                "SSL Profile 1",
                "SSL Profile 2"
              ]
            }
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on minLength keyword",
      "valid": false,
      "rust_error": "\"\" is shorter than 1 character",
      "python_error": "'' should be non-empty\n\nFailed validating 'minLength' in schema['properties']['plans']['items']['properties']['name']:\n    {'minLength': 1, 'type': 'string'}\n\nOn instance['plans'][0]['name']:\n    ''",
      "data": {
        "plans": [
          {
            "description": "This is plan 1",
            "name": "",
            "pool": {
              "balance": "round-robin",
              "healthMonitors": [
                {
                  "interval": 10,
                  "name": "Monitor 1",
                  "recv": "HTTP/1.1 200 OK",
                  "send": "GET / HTTP/1.1\r\nHost: example.com\r\n\r\n",
                  "timeout": 10,
                  "type": "http"
                }
              ]
            }
          },
          {
            "description": "This is plan 2",
            "name": "Plan 2",
            "virtualServer": {
              "policies": [
                "Policy 1",
                "Policy 2"
              ],
              "profiles": [
                "Profile 1",
                "Profile 2"
              ],
              "sslProfiles": [
                "SSL Profile 1",
                "SSL Profile 2"
              ]
            }
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"\" is shorter than 1 character",
      "python_error": "'' should be non-empty\n\nFailed validating 'minLength' in schema['properties']['plans']['items']['properties']['name']:\n    {'minLength': 1, 'type': 'string'}\n\nOn instance['plans'][0]['name']:\n    ''",
      "data": {
        "plans": [
          {
            "name": "",
            "description": "This is a test",
            "pool": {
              "balance": "round-robin",
              "healthMonitors": [
                {
                  "name": "Monitor 1",
                  "type": "http",
                  "interval": 0,
                  "timeout": 10,
                  "send": "GET / HTTP/1.1\r\nHost: example.com\r\n\r\n",
                  "recv": "HTTP/1.1 200 OK"
                }
              ]
            }
          },
          {
            "name": "Plan 2",
            "description": "This is plan 2",
            "virtualServer": {
              "profiles": [
                ""
              ],
              "policies": [
                "Policy 1",
                "Policy 2"
              ],
              "sslProfiles": [
                "SSL Profile 1",
                "SSL Profile 2"
              ]
            }
          }
        ]
      }
    }
  ]
}