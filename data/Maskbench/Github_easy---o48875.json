{
  "description": "sample Github_easy/o48875.json",
  "meta": {
    "full_size": 363,
    "stripped_size": 363,
    "features": [
      "$ref",
      "@minmaxLength",
      "enum"
    ],
    "raw_features": [
      "$schema",
      "definitions",
      "id",
      "minLength",
      "properties",
      "required",
      "type",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "id": "http://footown.com/generic/person#",
    "type": "object",
    "required": [
      "firstname",
      "lastname"
    ],
    "properties": {
      "firstname": {
        "$ref": "#/definitions/name"
      },
      "lastname": {
        "$ref": "#/definitions/name"
      },
      "title": {
        "type": "string",
        "enum": [
          "mr",
          "mrs",
          "ms",
          "dr",
          "prof"
        ]
      }
    },
    "definitions": {
      "name": {
        "type": "string",
        "minLength": 1
      }
    }
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "firstname": "John",
        "lastname": "Doe",
        "title": "mr"
      }
    },
    {
      "description": "llama-70b generated negative; focus on minLength keyword",
      "valid": false,
      "rust_error": "\"\" is shorter than 1 character",
      "python_error": "'' should be non-empty\n\nFailed validating 'minLength' in schema['properties']['firstname']:\n    {'type': 'string', 'minLength': 1}\n\nOn instance['firstname']:\n    ''",
      "data": {
        "firstname": "",
        "lastname": "Doe",
        "title": "mr"
      }
    }
  ]
}