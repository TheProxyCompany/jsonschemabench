{
  "description": "sample JsonSchemaStore/esmrc.json",
  "meta": {
    "full_size": 3112,
    "stripped_size": 796,
    "features": [
      "@siblingKeys",
      "additionalProperties",
      "const",
      "items",
      "oneOf",
      "uniqueItems"
    ],
    "raw_features": [
      "$id",
      "$schema",
      "_boolSchema",
      "properties",
      "type",
      "type:array",
      "type:boolean",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$id": "https://json.schemastore.org/esmrc.json",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "additionalProperties": false,
    "properties": {
      "cjs": {
        "description": "A boolean or object for toggling CJS features in ESM",
        "default": true,
        "oneOf": [
          {
            "type": "boolean",
            "default": true
          },
          {
            "type": "object",
            "properties": {
              "cache": {
                "type": "boolean",
                "description": "A boolean for storing ES modules in require.cache",
                "default": true
              },
              "esModule": {
                "type": "boolean",
                "description": "A boolean for __esModule interoperability",
                "default": true
              },
              "extensions": {
                "type": "boolean",
                "description": "A boolean for respecting require.extensions in ESM",
                "default": true
              },
              "mutableNamespace": {
                "type": "boolean",
                "description": "A boolean for importing named exports of CJS modules",
                "$comment": "https://ponyfoo.com/articles/es6-modules-in-depth#import-all-the-things",
                "default": true
              },
              "namedExports": {
                "type": "boolean",
                "description": "A boolean for importing named exports of CJS modules",
                "$comment": "https://ponyfoo.com/articles/es6-modules-in-depth#importing-named-exports",
                "default": true
              },
              "paths": {
                "type": "boolean",
                "description": "A boolean for following CJS path rules in ESM",
                "$comment": "https://github.com/nodejs/node-eps/blob/master/002-es-modules.md#432-removal-of-non-local-dependencies",
                "default": true
              },
              "vars": {
                "type": "boolean",
                "description": "A boolean for __dirname, __filename, and require in ESM",
                "default": true
              },
              "dedefault": {
                "type": "boolean",
                "description": "A boolean for requiring ES modules without the dangling require().default",
                "default": false
              },
              "topLevelReturn": {
                "type": "boolean",
                "description": "A boolean for top-level return support",
                "default": false
              }
            }
          }
        ]
      },
      "mainFields": {
        "type": "array",
        "description": "An array of fields checked when importing a package",
        "default": [
          "main"
        ],
        "uniqueItems": true,
        "items": {
          "type": "string",
          "description": "Fields from package.json"
        }
      },
      "mode": {
        "type": "string",
        "description": "A string describing the mode in which to detect ESM module files",
        "default": "auto",
        "oneOf": [
          {
            "const": "auto",
            "description": "'auto' detect files with import, import.meta, export, 'use module', or .mjs as ESM",
            "$comment": "https://github.com/tc39/proposal-modules-pragma"
          },
          {
            "const": "all",
            "description": "'all' files besides those with 'use script' or .cjs are treated as ESM"
          },
          {
            "const": "strict",
            "description": "'strict to treat only .mjs files as ESM"
          }
        ]
      },
      "await": {
        "type": "boolean",
        "description": "A boolean for top-level await in modules without ESM exports. (Node 10+)",
        "$comment": "https://github.com/tc39/proposal-top-level-await",
        "default": false
      },
      "force": {
        "type": "boolean",
        "description": "A boolean to apply these options to all module loads",
        "default": false
      },
      "wasm": {
        "type": "boolean",
        "description": "A boolean for WebAssembly module support. (Node 8+)",
        "$comment": "https://nodejs.org/api/globals.html#globals_webassembly",
        "default": false
      },
      "cache": {
        "type": "boolean",
        "description": "[dev] A boolean for toggling cache creation or a cache directory path",
        "default": true
      },
      "sourceMap": {
        "type": "boolean",
        "description": "[dev] A boolean for including inline source maps",
        "default": false
      }
    },
    "title": "Configuration files for the esm module/package in Node.js"
  },
  "tests": [
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "cjs": {
          "cache": true,
          "esModule": true,
          "extensions": true,
          "mutableNamespace": true,
          "namedExports": true,
          "paths": true,
          "vars": true,
          "dedefault": false,
          "topLevelReturn": false
        },
        "mainFields": [
          "main",
          "module",
          "browser"
        ],
        "mode": "auto",
        "await": false,
        "force": false,
        "wasm": false,
        "cache": true,
        "sourceMap": false
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "cjs": {
          "cache": true,
          "esModule": true,
          "extensions": true,
          "mutableNamespace": true,
          "namedExports": true,
          "paths": true,
          "vars": true,
          "dedefault": false,
          "topLevelReturn": false
        },
        "mainFields": [
          "main",
          "module",
          "browser"
        ],
        "mode": "auto",
        "await": true,
        "force": false,
        "wasm": true,
        "cache": true,
        "sourceMap": true
      }
    },
    {
      "description": "llama-70b generated negative; focus on uniqueItems keyword",
      "valid": false,
      "rust_error": "[\"main\",\"main\",\"browser\"] has non-unique elements",
      "python_error": "['main', 'main', 'browser'] has non-unique elements\n\nFailed validating 'uniqueItems' in schema['properties']['mainFields']:\n    {'type': 'array',\n     'description': 'An array of fields checked when importing a package',\n     'default': ['main'],\n     'uniqueItems': True,\n     'items': {'type': 'string', 'description': 'Fields from package.json'}}\n\nOn instance['mainFields']:\n    ['main', 'main', 'browser']",
      "data": {
        "cjs": {
          "cache": true,
          "esModule": true,
          "extensions": true,
          "mutableNamespace": true,
          "namedExports": true,
          "paths": true,
          "vars": true,
          "dedefault": false,
          "topLevelReturn": false
        },
        "mainFields": [
          "main",
          "main",
          "browser"
        ],
        "mode": "auto",
        "await": true,
        "force": false,
        "wasm": true,
        "cache": true,
        "sourceMap": true
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "[\"main\",\"module\",\"browser\",\"browser\"] has non-unique elements",
      "python_error": "Additional properties are not allowed ('extraProperty' was unexpected)\n\nFailed validating 'additionalProperties' in schema:\n    {'$id': 'https://json.schemastore.org/esmrc.json',\n     '$schema': 'http://json-schema.org/draft-07/schema#',\n     'additionalProperties': False,\n     'properties': {'cjs': {'description': 'A boolean or object for '\n                                           'toggling CJS features in ESM',\n                            'default': True,\n                            'oneOf': [{'type': 'boolean', 'default': True},\n                                      {'type': 'object',\n                                       'properties': {'cache': {'type': 'boolean',\n                                                                'description': 'A '\n                                                                               'boolean '\n                                                                               'for '\n                                                                               'stor.. (12739 more)",
      "data": {
        "cjs": {
          "cache": true,
          "esModule": true,
          "extensions": true,
          "mutableNamespace": true,
          "namedExports": true,
          "paths": true,
          "vars": true,
          "dedefault": false,
          "topLevelReturn": false,
          "extraProperty": true
        },
        "mainFields": [
          "main",
          "module",
          "browser",
          "browser"
        ],
        "mode": "auto",
        "await": true,
        "force": false,
        "wasm": true,
        "cache": true,
        "sourceMap": true,
        "extraProperty": true
      }
    }
  ]
}