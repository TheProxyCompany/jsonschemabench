{
  "description": "sample Kubernetes/kb_342_Normalized.json",
  "meta": {
    "full_size": 3346,
    "stripped_size": 1394,
    "features": [
      "$ref",
      "additionalProperties",
      "additionalProperties:object",
      "items",
      "oneOf"
    ],
    "raw_features": [
      "definitions",
      "properties",
      "required",
      "type",
      "type:[]",
      "type:array",
      "type:null",
      "type:number",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "definitions": {
      "https:__kubernetesjsonschema_dev_master__defs_json_defs_io_k8s_apimachinery_pkg_api_resource_Quantity": {
        "oneOf": [
          {
            "type": "string"
          },
          {
            "type": "number"
          }
        ]
      },
      "https:__kubernetesjsonschema_dev_master__defs_json_defs_io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelector": {
        "description": "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.",
        "properties": {
          "matchExpressions": {
            "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
            "items": {
              "$ref": "#/definitions/https:__kubernetesjsonschema_dev_master__defs_json_defs_io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelectorRequirement"
            },
            "type": "array"
          },
          "matchLabels": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
            "type": "object"
          }
        },
        "type": "object"
      },
      "https:__kubernetesjsonschema_dev_master__defs_json_defs_io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelectorRequirement": {
        "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
        "properties": {
          "key": {
            "description": "key is the label key that the selector applies to.",
            "type": "string",
            "x-kubernetes-patch-merge-key": "key",
            "x-kubernetes-patch-strategy": "merge"
          },
          "operator": {
            "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
            "type": "string"
          },
          "values": {
            "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "required": [
          "key",
          "operator"
        ],
        "type": "object"
      }
    },
    "description": "ExternalMetricSource indicates how to scale on a metric not associated with any Kubernetes object (for example length of queue in cloud messaging service, or QPS from loadbalancer running outside of cluster). Exactly one \"target\" type should be set.",
    "properties": {
      "metricName": {
        "description": "metricName is the name of the metric in question.",
        "type": [
          "string",
          "null"
        ]
      },
      "metricSelector": {
        "$ref": "#/definitions/https:__kubernetesjsonschema_dev_master__defs_json_defs_io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelector",
        "description": "metricSelector is used to identify a specific time series within a given metric."
      },
      "targetAverageValue": {
        "$ref": "#/definitions/https:__kubernetesjsonschema_dev_master__defs_json_defs_io_k8s_apimachinery_pkg_api_resource_Quantity",
        "description": "targetAverageValue is the target per-pod value of global metric (as a quantity). Mutually exclusive with TargetValue."
      },
      "targetValue": {
        "$ref": "#/definitions/https:__kubernetesjsonschema_dev_master__defs_json_defs_io_k8s_apimachinery_pkg_api_resource_Quantity",
        "description": "targetValue is the target value of the metric (as a quantity). Mutually exclusive with TargetAverageValue."
      }
    },
    "required": [
      "metricName"
    ],
    "type": "object"
  },
  "tests": [
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "metricName": "queue_length",
        "metricSelector": {
          "matchLabels": {
            "metric_type": "queue_length"
          }
        },
        "targetValue": 10
      }
    },
    {
      "description": "llama-70b generated negative; focus on type keyword with an array of types",
      "valid": false,
      "rust_error": "true is not of types \"null\", \"string\"",
      "python_error": "True is not of type 'string', 'null'\n\nFailed validating 'type' in schema['properties']['metricName']:\n    {'description': 'metricName is the name of the metric in question.',\n     'type': ['string', 'null']}\n\nOn instance['metricName']:\n    True",
      "data": {
        "metricName": true,
        "metricSelector": {
          "matchLabels": {
            "metric_type": "queue_length"
          }
        },
        "targetValue": 10
      }
    },
    {
      "description": "llama-70b generated negative; focus on oneOf keyword",
      "valid": false,
      "rust_error": "true is not valid under any of the schemas listed in the 'oneOf' keyword",
      "python_error": "True is not valid under any of the given schemas\n\nFailed validating 'oneOf' in schema['properties']['targetValue']:\n    {'oneOf': [{'type': 'string'}, {'type': 'number'}]}\n\nOn instance['targetValue']:\n    True",
      "data": {
        "metricName": "queue_length",
        "metricSelector": {
          "matchLabels": {
            "metric_type": "queue_length"
          }
        },
        "targetValue": true
      }
    }
  ]
}