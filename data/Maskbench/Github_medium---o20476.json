{
  "description": "sample Github_medium/o20476.json",
  "meta": {
    "full_size": 1748,
    "stripped_size": 604,
    "features": [
      "additionalProperties",
      "enum",
      "items"
    ],
    "raw_features": [
      "$schema",
      "_boolSchema",
      "id",
      "properties",
      "required",
      "type",
      "type:array",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "additionalProperties": false,
    "id": "http://localhost:3000/schemas/authorize-request.json#",
    "properties": {
      "client_id": {
        "description": "The OAuth 2.0 client identifier, obtained at registration.",
        "type": "string"
      },
      "code_challenge": {
        "description": "The code challenge, computed from the code verifier using a transform",
        "type": "string"
      },
      "code_challenge_method": {
        "description": "The code transform, defaults to plain if not specified. The supported methods are S256 (recommended) and plain.",
        "type": "string"
      },
      "nonce": {
        "description": "Opaque value, e.g. a random string, used to associate a client session with an ID Token, and to mitigate replay attacks. Use of this parameter is required in the implicit flow.",
        "type": "string"
      },
      "redirect_uri": {
        "_format": "uri",
        "description": "The redirection URI to which the response will be sent. It must exactly match one of the registered redirection URIs for the client.",
        "type": "string"
      },
      "response_type": {
        "description": "The OAuth 2.0 response type. For clients using the OAuth code flow it should be set to code. For clients using the implicit flow it should be set to id_token or token id_token.",
        "enum": [
          "code",
          "token",
          "id_token"
        ],
        "type": "string"
      },
      "scope": {
        "description": "Space separated list of the requested scope values. Must include at least the openid value.",
        "items": {
          "enum": [
            "openid",
            "profile",
            "email",
            "address",
            "phone"
          ],
          "type": "string"
        },
        "type": "array"
      },
      "state": {
        "description": "Opaque value, e.g. a random string, used to maintain state between the request and the callback. Use of this parameter is not required but highly recommended.",
        "type": "string"
      }
    },
    "required": [
      "response_type",
      "scope",
      "client_id",
      "redirect_uri"
    ],
    "title": "introspect",
    "type": "object"
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "client_id": "example_client_id",
        "code_challenge": "example_code_challenge",
        "code_challenge_method": "S256",
        "nonce": "example_nonce",
        "redirect_uri": "https://example.com/callback",
        "response_type": "code",
        "scope": [
          "openid",
          "profile",
          "email"
        ],
        "state": "example_state"
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "client_id": "client123",
        "code_challenge": "challenge123",
        "code_challenge_method": "S256",
        "nonce": "nonce123",
        "redirect_uri": "https://example.com/callback",
        "response_type": "code",
        "scope": [
          "openid",
          "profile",
          "email"
        ],
        "state": "state123"
      }
    }
  ]
}