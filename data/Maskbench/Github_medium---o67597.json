{
  "description": "sample Github_medium/o67597.json",
  "meta": {
    "full_size": 1001,
    "stripped_size": 322,
    "features": [],
    "raw_features": [
      "$schema",
      "id",
      "properties",
      "type",
      "type:array",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "id": "#/definitions/certificate",
    "title": "Certificate",
    "description": "A representation of an ssl certificate",
    "type": "object",
    "properties": {
      "name": {
        "description": "A name for the certificate for user reference",
        "type": "string"
      },
      "matches": {
        "description": "A list of Url match pattern strings, to identify Urls this certificate can be used for.",
        "type": "array",
        "item": {
          "type": "string",
          "description": "An Url match pattern string"
        }
      },
      "key": {
        "description": "An object containing path to file containing private key, on the file system",
        "type": "object",
        "properties": {
          "src": {
            "description": "The path to file containing key for certificate, on the file system"
          }
        }
      },
      "cert": {
        "description": "An object containing path to file certificate, on the file system",
        "type": "object",
        "properties": {
          "src": {
            "description": "The path to file containing key for certificate, on the file system"
          }
        }
      },
      "passphrase": {
        "description": "The passphrase for the certificate",
        "type": "string"
      }
    }
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "name": "example-certificate",
        "matches": [
          "https://example.com/*",
          "https://*.example.com/*"
        ],
        "key": {
          "src": "/path/to/private/key"
        },
        "cert": {
          "src": "/path/to/certificate"
        },
        "passphrase": "my-secret-passphrase"
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "123 is not of type \"string\"",
      "python_error": "123 is not of type 'string'\n\nFailed validating 'type' in schema['properties']['name']:\n    {'description': 'A name for the certificate for user reference',\n     'type': 'string'}\n\nOn instance['name']:\n    123",
      "data": {
        "name": 123,
        "matches": [
          "https://example.com/*",
          "https://*.example.com/*"
        ],
        "key": {
          "src": "/path/to/private/key"
        },
        "cert": {
          "src": "/path/to/certificate"
        },
        "passphrase": "my-secret-passphrase"
      }
    }
  ]
}