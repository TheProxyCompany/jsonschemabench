{
  "description": "sample Kubernetes/kb_1084_Normalized.json",
  "meta": {
    "full_size": 1167,
    "stripped_size": 486,
    "features": [
      "$ref",
      "items"
    ],
    "raw_features": [
      "definitions",
      "properties",
      "required",
      "type",
      "type:[]",
      "type:array",
      "type:null",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "definitions": {
      "https:__kubernetesjsonschema_dev_master__defs_json_defs_io_k8s_api_core_v1_TopologySelectorLabelRequirement": {
        "description": "A topology selector requirement is a selector that matches given label. This is an alpha feature and may change in the future.",
        "properties": {
          "key": {
            "description": "The label key that the selector applies to.",
            "type": "string"
          },
          "values": {
            "description": "An array of string values. One value must match the label to be selected. Each entry in Values is ORed.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "required": [
          "key",
          "values"
        ],
        "type": "object"
      }
    },
    "description": "A topology selector term represents the result of label queries. A null or empty topology selector term matches no objects. The requirements of them are ANDed. It provides a subset of functionality as NodeSelectorTerm. This is an alpha feature and may change in the future.",
    "properties": {
      "matchLabelExpressions": {
        "description": "A list of topology selector requirements by labels.",
        "items": {
          "$ref": "#/definitions/https:__kubernetesjsonschema_dev_master__defs_json_defs_io_k8s_api_core_v1_TopologySelectorLabelRequirement"
        },
        "type": [
          "array",
          "null"
        ]
      }
    },
    "type": "object"
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "matchLabelExpressions": [
          {
            "key": "kubernetes.io/hostname",
            "values": [
              "node1",
              "node2"
            ]
          },
          {
            "key": "topology.kubernetes.io/zone",
            "values": [
              "zone1",
              "zone2"
            ]
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on type keyword with an array of types",
      "valid": false,
      "rust_error": "\"string\" is not of types \"array\", \"null\"",
      "python_error": "'string' is not of type 'array', 'null'\n\nFailed validating 'type' in schema['properties']['matchLabelExpressions']:\n    {'description': 'A list of topology selector requirements by labels.',\n     'items': {'$ref': '#/definitions/https:__kubernetesjsonschema_dev_master__defs_json_defs_io_k8s_api_core_v1_TopologySelectorLabelRequirement'},\n     'type': ['array', 'null']}\n\nOn instance['matchLabelExpressions']:\n    'string'",
      "data": {
        "matchLabelExpressions": "string"
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "123 is not of type \"string\"",
      "python_error": "123 is not of type 'string'\n\nFailed validating 'type' in schema['properties']['matchLabelExpressions']['items']['properties']['values']['items']:\n    {'type': 'string'}\n\nOn instance['matchLabelExpressions'][1]['values'][0]:\n    123",
      "data": {
        "matchLabelExpressions": [
          {
            "key": "kubernetes.io/hostname",
            "values": [
              "node1",
              "node2"
            ]
          },
          {
            "key": "topology.kubernetes.io/zone",
            "values": [
              123,
              "zone2"
            ]
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "123 is not of type \"string\"",
      "python_error": "123 is not of type 'string'\n\nFailed validating 'type' in schema['properties']['matchLabelExpressions']['items']['properties']['values']['items']:\n    {'type': 'string'}\n\nOn instance['matchLabelExpressions'][0]['values'][1]:\n    123",
      "data": {
        "matchLabelExpressions": [
          {
            "key": "kubernetes.io/hostname",
            "values": [
              "node1",
              123
            ]
          },
          {
            "key": "topology.kubernetes.io/zone",
            "values": [
              "zone1",
              "zone2"
            ]
          }
        ]
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "matchLabelExpressions": [
          {
            "key": "kubernetes.io/hostname",
            "values": [
              "node1",
              "node2"
            ]
          },
          {
            "key": "topology.kubernetes.io/zone",
            "values": [
              "us-east-1a",
              "us-east-1b"
            ]
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "1 is not of type \"string\"",
      "python_error": "1 is not of type 'string'\n\nFailed validating 'type' in schema['properties']['matchLabelExpressions']['items']['properties']['values']['items']:\n    {'type': 'string'}\n\nOn instance['matchLabelExpressions'][1]['values'][0]:\n    1",
      "data": {
        "matchLabelExpressions": [
          {
            "key": "kubernetes.io/hostname",
            "values": [
              "node1",
              "node2"
            ]
          },
          {
            "key": "topology.kubernetes.io/zone",
            "values": [
              1,
              "us-east-1b"
            ]
          }
        ]
      }
    }
  ]
}