{
  "description": "sample Github_medium/o12971.json",
  "meta": {
    "full_size": 870,
    "stripped_size": 477,
    "features": [
      "additionalProperties",
      "additionalProperties:object",
      "enum",
      "items"
    ],
    "raw_features": [
      "$schema",
      "_boolSchema",
      "properties",
      "required",
      "type",
      "type:array",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "title": "Admin Query",
    "description": "Description of an administrator SQL query.",
    "type": "object",
    "additionalProperties": false,
    "required": [
      "description"
    ],
    "properties": {
      "description": {
        "description": "Brief one-line description of the query.",
        "type": "string"
      },
      "resultFormats": {
        "description": "Custom formats for result columns.",
        "type": "object",
        "additionalProperties": {
          "type": "string",
          "enum": [
            "pre"
          ]
        }
      },
      "params": {
        "description": "Parameters for the query.",
        "type": "array",
        "items": {
          "type": "object",
          "additionalProperties": false,
          "required": [
            "name",
            "description"
          ],
          "properties": {
            "name": {
              "description": "Name of the parameter. Must match a $name in the SQL.",
              "type": "string"
            },
            "description": {
              "description": "Brief one-line description of the parameter.",
              "type": "string"
            },
            "default": {
              "description": "Default value.",
              "type": "string"
            }
          }
        }
      }
    }
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "description": "Example administrator SQL query",
        "resultFormats": {
          "column1": "pre",
          "column2": "pre"
        },
        "params": [
          {
            "name": "param1",
            "description": "First parameter",
            "default": "value1"
          },
          {
            "name": "param2",
            "description": "Second parameter"
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on additionalProperties keyword with an object schema",
      "valid": false,
      "rust_error": "\"invalid\" is not one of [\"pre\"]",
      "python_error": "Additional properties are not allowed ('extra' was unexpected)\n\nFailed validating 'additionalProperties' in schema:\n    {'$schema': 'http://json-schema.org/draft-04/schema#',\n     'title': 'Admin Query',\n     'description': 'Description of an administrator SQL query.',\n     'type': 'object',\n     'additionalProperties': False,\n     'required': ['description'],\n     'properties': {'description': {'description': 'Brief one-line '\n                                                   'description of the '\n                                                   'query.',\n                                    'type': 'string'},\n                    'resultFormats': {'description': 'Custom formats for '\n                                                     'result columns.',\n                                      'type': 'object',\n                                      'additionalProperties': {'type': 'string',\n                                                               'enum': ['pre']}},\n                    'params': {'descr.. (2817 more)",
      "data": {
        "description": "Example administrator SQL query",
        "resultFormats": {
          "column1": "pre",
          "column2": "pre",
          "column3": "invalid"
        },
        "params": [
          {
            "name": "param1",
            "description": "First parameter",
            "default": "value1",
            "extra": "extra value"
          },
          {
            "name": "param2",
            "description": "Second parameter"
          }
        ],
        "extra": "extra value"
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"invalid\" is not one of [\"pre\"]",
      "python_error": "'invalid' is not one of ['pre']\n\nFailed validating 'enum' in schema['properties']['resultFormats']['additionalProperties']:\n    {'type': 'string', 'enum': ['pre']}\n\nOn instance['resultFormats']['column2']:\n    'invalid'",
      "data": {
        "description": "Example administrator SQL query",
        "resultFormats": {
          "column1": "pre",
          "column2": "invalid"
        },
        "params": [
          {
            "name": "param1",
            "description": "First parameter",
            "default": "value1"
          },
          {
            "name": "param2",
            "description": "Second parameter"
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on additionalProperties keyword with an object schema",
      "valid": false,
      "rust_error": "123 is not of type \"string\"",
      "python_error": "123 is not of type 'string'\n\nFailed validating 'type' in schema['properties']['resultFormats']['additionalProperties']:\n    {'type': 'string', 'enum': ['pre']}\n\nOn instance['resultFormats']['column3']:\n    123",
      "data": {
        "description": "Example administrator SQL query",
        "resultFormats": {
          "column1": "pre",
          "column2": "pre",
          "column3": 123
        },
        "params": [
          {
            "name": "param1",
            "description": "First parameter",
            "default": "value1"
          },
          {
            "name": "param2",
            "description": "Second parameter"
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"invalid\" is not one of [\"pre\"]",
      "python_error": "'invalid' is not one of ['pre']\n\nFailed validating 'enum' in schema['properties']['resultFormats']['additionalProperties']:\n    {'type': 'string', 'enum': ['pre']}\n\nOn instance['resultFormats']['column2']:\n    'invalid'",
      "data": {
        "description": "Example administrator SQL query",
        "resultFormats": {
          "column1": "pre",
          "column2": "invalid"
        },
        "params": [
          {
            "name": "param1",
            "description": "First parameter",
            "default": "value1"
          },
          {
            "name": "param2",
            "description": "Second parameter",
            "extraProperty": "extraValue"
          }
        ]
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "description": "Example administrator SQL query",
        "resultFormats": {
          "column1": "pre",
          "column2": "pre"
        },
        "params": [
          {
            "name": "param1",
            "description": "First parameter description",
            "default": "default_value1"
          },
          {
            "name": "param2",
            "description": "Second parameter description"
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on additionalProperties keyword with an object schema",
      "valid": false,
      "rust_error": "\"invalidFormat\" is not one of [\"pre\"]",
      "python_error": "'invalidFormat' is not one of ['pre']\n\nFailed validating 'enum' in schema['properties']['resultFormats']['additionalProperties']:\n    {'type': 'string', 'enum': ['pre']}\n\nOn instance['resultFormats']['column3']:\n    'invalidFormat'",
      "data": {
        "description": "Example administrator SQL query",
        "resultFormats": {
          "column1": "pre",
          "column2": "pre",
          "column3": "invalidFormat"
        },
        "params": [
          {
            "name": "param1",
            "description": "First parameter description",
            "default": "default_value1"
          },
          {
            "name": "param2",
            "description": "Second parameter description"
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "123 is not of type \"string\"",
      "python_error": "123 is not of type 'string'\n\nFailed validating 'type' in schema['properties']['params']['items']['properties']['name']:\n    {'description': 'Name of the parameter. Must match a $name in the SQL.',\n     'type': 'string'}\n\nOn instance['params'][0]['name']:\n    123",
      "data": {
        "description": "Example administrator SQL query",
        "resultFormats": {
          "column1": "pre"
        },
        "params": [
          {
            "name": 123,
            "description": "First parameter description",
            "default": "default_value1"
          },
          {
            "name": "param2",
            "description": "Second parameter description"
          }
        ]
      }
    }
  ]
}