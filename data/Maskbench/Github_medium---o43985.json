{
  "description": "sample Github_medium/o43985.json",
  "meta": {
    "full_size": 1591,
    "stripped_size": 1562,
    "features": [
      "additionalProperties",
      "enum",
      "format",
      "format:date-time",
      "items"
    ],
    "raw_features": [
      "$schema",
      "_boolSchema",
      "properties",
      "required",
      "type",
      "type:array",
      "type:integer",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "title": "MeterValuesRequest",
    "type": "object",
    "properties": {
      "connectorId": {
        "type": "integer"
      },
      "transactionId": {
        "type": "integer"
      },
      "meterValue": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "timestamp": {
              "type": "string",
              "format": "date-time"
            },
            "sampledValue": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "value": {
                    "type": "string"
                  },
                  "context": {
                    "type": "string",
                    "enum": [
                      "Interruption.Begin",
                      "Interruption.End",
                      "Sample.Clock",
                      "Sample.Periodic",
                      "Transaction.Begin",
                      "Transaction.End",
                      "Trigger",
                      "Other"
                    ]
                  },
                  "format": {
                    "type": "string",
                    "enum": [
                      "Raw",
                      "SignedData"
                    ]
                  },
                  "measurand": {
                    "type": "string",
                    "enum": [
                      "Energy.Active.Export.Register",
                      "Energy.Active.Import.Register",
                      "Energy.Reactive.Export.Register",
                      "Energy.Reactive.Import.Register",
                      "Energy.Active.Export.Interval",
                      "Energy.Active.Import.Interval",
                      "Energy.Reactive.Export.Interval",
                      "Energy.Reactive.Import.Interval",
                      "Power.Active.Export",
                      "Power.Active.Import",
                      "Power.Offered",
                      "Power.Reactive.Export",
                      "Power.Reactive.Import",
                      "Power.Factor",
                      "Current.Import",
                      "Current.Export",
                      "Current.Offered",
                      "Voltage",
                      "Frequency",
                      "Temperature",
                      "SoC",
                      "RPM"
                    ]
                  },
                  "phase": {
                    "type": "string",
                    "enum": [
                      "L1",
                      "L2",
                      "L3",
                      "N",
                      "L1-N",
                      "L2-N",
                      "L3-N",
                      "L1-L2",
                      "L2-L3",
                      "L3-L1"
                    ]
                  },
                  "location": {
                    "type": "string",
                    "enum": [
                      "Cable",
                      "EV",
                      "Inlet",
                      "Outlet",
                      "Body"
                    ]
                  },
                  "unit": {
                    "type": "string",
                    "enum": [
                      "Wh",
                      "kWh",
                      "varh",
                      "kvarh",
                      "W",
                      "kW",
                      "VA",
                      "kVA",
                      "var",
                      "kvar",
                      "A",
                      "V",
                      "K",
                      "Celcius",
                      "Fahrenheit",
                      "Percent"
                    ]
                  }
                },
                "required": [
                  "value"
                ]
              }
            }
          },
          "required": [
            "timestamp",
            "sampledValue"
          ]
        }
      }
    },
    "additionalProperties": false,
    "required": [
      "connectorId",
      "meterValue"
    ]
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "connectorId": 1,
        "transactionId": 123,
        "meterValue": [
          {
            "timestamp": "2022-01-01T12:00:00Z",
            "sampledValue": [
              {
                "value": "10",
                "context": "Sample.Clock",
                "format": "Raw",
                "measurand": "Energy.Active.Import.Register",
                "phase": "L1",
                "location": "Inlet",
                "unit": "kWh"
              },
              {
                "value": "20",
                "context": "Sample.Clock",
                "format": "Raw",
                "measurand": "Energy.Active.Import.Interval",
                "phase": "L2",
                "location": "Inlet",
                "unit": "kWh"
              }
            ]
          },
          {
            "timestamp": "2022-01-01T12:15:00Z",
            "sampledValue": [
              {
                "value": "15",
                "context": "Sample.Clock",
                "format": "Raw",
                "measurand": "Energy.Active.Import.Register",
                "phase": "L1",
                "location": "Inlet",
                "unit": "kWh"
              },
              {
                "value": "30",
                "context": "Sample.Clock",
                "format": "Raw",
                "measurand": "Energy.Active.Import.Interval",
                "phase": "L2",
                "location": "Inlet",
                "unit": "kWh"
              }
            ]
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on format keyword",
      "valid": false,
      "rust_error": "\"2022-01-01 12:00:00\" is not a \"date-time\"",
      "python_error": "'2022-01-01 12:00:00' is not a 'date-time'\n\nFailed validating 'format' in schema['properties']['meterValue']['items']['properties']['timestamp']:\n    {'type': 'string', 'format': 'date-time'}\n\nOn instance['meterValue'][0]['timestamp']:\n    '2022-01-01 12:00:00'",
      "data": {
        "connectorId": 1,
        "transactionId": 123,
        "meterValue": [
          {
            "timestamp": "2022-01-01 12:00:00",
            "sampledValue": [
              {
                "value": "10",
                "context": "Sample.Clock",
                "format": "Raw",
                "measurand": "Energy.Active.Import.Register",
                "phase": "L1",
                "location": "Inlet",
                "unit": "kWh"
              },
              {
                "value": "20",
                "context": "Sample.Clock",
                "format": "Raw",
                "measurand": "Energy.Active.Import.Interval",
                "phase": "L2",
                "location": "Inlet",
                "unit": "kWh"
              }
            ]
          },
          {
            "timestamp": "2022-01-01T12:15:00Z",
            "sampledValue": [
              {
                "value": "15",
                "context": "Sample.Clock",
                "format": "Raw",
                "measurand": "Energy.Active.Import.Register",
                "phase": "L1",
                "location": "Inlet",
                "unit": "kWh"
              },
              {
                "value": "30",
                "context": "Sample.Clock",
                "format": "Raw",
                "measurand": "Energy.Active.Import.Interval",
                "phase": "L2",
                "location": "Inlet",
                "unit": "kWh"
              }
            ]
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on format keyword",
      "valid": false,
      "rust_error": "\"2022-01-01T12:00:00\" is not a \"date-time\"",
      "python_error": "'2022-01-01T12:00:00' is not a 'date-time'\n\nFailed validating 'format' in schema['properties']['meterValue']['items']['properties']['timestamp']:\n    {'type': 'string', 'format': 'date-time'}\n\nOn instance['meterValue'][0]['timestamp']:\n    '2022-01-01T12:00:00'",
      "data": {
        "connectorId": 1,
        "transactionId": 123,
        "meterValue": [
          {
            "timestamp": "2022-01-01T12:00:00",
            "sampledValue": [
              {
                "value": "10",
                "context": "Sample.Clock",
                "format": "Raw",
                "measurand": "Energy.Active.Import.Register",
                "phase": "L1",
                "location": "Inlet",
                "unit": "kWh"
              },
              {
                "value": "20",
                "context": "Sample.Clock",
                "format": "Raw",
                "measurand": "Energy.Active.Import.Interval",
                "phase": "L2",
                "location": "Inlet",
                "unit": "kWh"
              }
            ]
          },
          {
            "timestamp": "2022-01-01T12:15:00Z",
            "sampledValue": [
              {
                "value": "15",
                "context": "Sample.Clock",
                "format": "Raw",
                "measurand": "Energy.Active.Import.Register",
                "phase": "L1",
                "location": "Inlet",
                "unit": "kWh"
              },
              {
                "value": "30",
                "context": "Sample.Clock",
                "format": "Raw",
                "measurand": "Energy.Active.Import.Interval",
                "phase": "L2",
                "location": "Inlet",
                "unit": "kWh"
              }
            ]
          }
        ]
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "connectorId": 1,
        "transactionId": 12345,
        "meterValue": [
          {
            "timestamp": "2022-01-01T12:00:00Z",
            "sampledValue": [
              {
                "value": "10.0",
                "context": "Sample.Periodic",
                "format": "Raw",
                "measurand": "Energy.Active.Import.Register",
                "phase": "L1",
                "location": "Inlet",
                "unit": "kWh"
              },
              {
                "value": "20.0",
                "context": "Sample.Periodic",
                "format": "Raw",
                "measurand": "Energy.Active.Import.Register",
                "phase": "L2",
                "location": "Inlet",
                "unit": "kWh"
              }
            ]
          },
          {
            "timestamp": "2022-01-01T12:15:00Z",
            "sampledValue": [
              {
                "value": "15.0",
                "context": "Sample.Periodic",
                "format": "Raw",
                "measurand": "Energy.Active.Import.Register",
                "phase": "L1",
                "location": "Inlet",
                "unit": "kWh"
              },
              {
                "value": "25.0",
                "context": "Sample.Periodic",
                "format": "Raw",
                "measurand": "Energy.Active.Import.Register",
                "phase": "L2",
                "location": "Inlet",
                "unit": "kWh"
              }
            ]
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on format keyword",
      "valid": false,
      "rust_error": "\"2022-01-01 12:00:00\" is not a \"date-time\"",
      "python_error": "'2022-01-01 12:00:00' is not a 'date-time'\n\nFailed validating 'format' in schema['properties']['meterValue']['items']['properties']['timestamp']:\n    {'type': 'string', 'format': 'date-time'}\n\nOn instance['meterValue'][0]['timestamp']:\n    '2022-01-01 12:00:00'",
      "data": {
        "connectorId": 1,
        "transactionId": 12345,
        "meterValue": [
          {
            "timestamp": "2022-01-01 12:00:00",
            "sampledValue": [
              {
                "value": "10.0",
                "context": "Sample.Periodic",
                "format": "Raw",
                "measurand": "Energy.Active.Import.Register",
                "phase": "L1",
                "location": "Inlet",
                "unit": "kWh"
              },
              {
                "value": "20.0",
                "context": "Sample.Periodic",
                "format": "Raw",
                "measurand": "Energy.Active.Import.Register",
                "phase": "L2",
                "location": "Inlet",
                "unit": "kWh"
              }
            ]
          }
        ]
      }
    }
  ]
}