{
  "description": "sample Github_medium/o5028.json",
  "meta": {
    "full_size": 1217,
    "stripped_size": 1183,
    "features": [
      "@minmaxLength",
      "additionalProperties",
      "enum"
    ],
    "raw_features": [
      "$schema",
      "_boolSchema",
      "id",
      "maxLength",
      "minLength",
      "properties",
      "required",
      "type",
      "type:number",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "id": "http://elasticbox.net/schemas/user",
    "type": "object",
    "required": [
      "_id",
      "email",
      "firstname",
      "lastname",
      "metadata",
      "role",
      "schema",
      "username"
    ],
    "additionalProperties": false,
    "properties": {
      "_id": {
        "type": "string",
        "minLength": 1,
        "maxLength": 36
      },
      "email": {
        "type": "string",
        "minLength": 1,
        "maxLength": 256
      },
      "email_validated_at": {
        "type": "string"
      },
      "firstname": {
        "type": "string",
        "minLength": 1,
        "maxLength": 256
      },
      "google_id": {
        "type": "string"
      },
      "saml_id": {
        "type": "string"
      },
      "icon": {
        "type": "string",
        "maxLength": 256
      },
      "invite_token": {
        "type": "string"
      },
      "last_login": {
        "type": "string",
        "maxLength": 2048
      },
      "lastname": {
        "type": "string",
        "minLength": 1,
        "maxLength": 256
      },
      "metadata": {
        "type": "object",
        "properties": {
          "creationTimestamp": {
            "type": "number"
          },
          "deletionTimestamp": {
            "type": "number"
          },
          "resourceVersion": {
            "type": "number"
          }
        }
      },
      "password": {
        "type": "object",
        "properties": {
          "hash": {
            "type": "string",
            "maxLength": 256
          },
          "rounds": {
            "enum": [
              20
            ]
          },
          "salt": {
            "type": "string",
            "maxLength": 64
          }
        }
      },
      "role": {
        "type": "string",
        "default": "user",
        "enum": [
          "administrator",
          "user"
        ]
      },
      "schema": {
        "type": "string",
        "enum": [
          "http://elasticbox.net/schemas/user"
        ]
      },
      "username": {
        "type": "string",
        "minLength": 1,
        "maxLength": 256
      }
    },
    "type:": "object"
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "_id": "1234567890",
        "email": "john.doe@example.com",
        "email_validated_at": "2022-01-01T12:00:00.000Z",
        "firstname": "John",
        "lastname": "Doe",
        "metadata": {
          "creationTimestamp": 1643723400,
          "deletionTimestamp": 0,
          "resourceVersion": 1
        },
        "password": {
          "hash": "hashedpassword",
          "rounds": 20,
          "salt": "saltvalue"
        },
        "role": "user",
        "schema": "http://elasticbox.net/schemas/user",
        "username": "johndoe"
      }
    },
    {
      "description": "llama-70b generated negative; focus on minLength keyword or maxLength keyword",
      "valid": false,
      "rust_error": "\"\" is shorter than 1 character",
      "python_error": "'' should be non-empty\n\nFailed validating 'minLength' in schema['properties']['_id']:\n    {'type': 'string', 'minLength': 1, 'maxLength': 36}\n\nOn instance['_id']:\n    ''",
      "data": {
        "_id": "",
        "email": "john.doe@example.com",
        "email_validated_at": "2022-01-01T12:00:00.000Z",
        "firstname": "John",
        "lastname": "Doe",
        "metadata": {
          "creationTimestamp": 1643723400,
          "deletionTimestamp": 0,
          "resourceVersion": 1
        },
        "password": {
          "hash": "hashedpassword",
          "rounds": 20,
          "salt": "saltvalue"
        },
        "role": "user",
        "schema": "http://elasticbox.net/schemas/user",
        "username": "johndoe"
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "Additional properties are not allowed ('extraProperty' was unexpected)",
      "python_error": "Additional properties are not allowed ('extraProperty' was unexpected)\n\nFailed validating 'additionalProperties' in schema:\n    {'$schema': 'http://json-schema.org/draft-04/schema#',\n     'id': 'http://elasticbox.net/schemas/user',\n     'type': 'object',\n     'required': ['_id',\n                  'email',\n                  'firstname',\n                  'lastname',\n                  'metadata',\n                  'role',\n                  'schema',\n                  'username'],\n     'additionalProperties': False,\n     'properties': {'_id': {'type': 'string',\n                            'minLength': 1,\n                            'maxLength': 36},\n                    'email': {'type': 'string',\n                              'minLength': 1,\n                              'maxLength': 256},\n                    'email_validated_at': {'type': 'string'},\n                    'firstname': {'type': 'string',\n                                  'minLength': 1,\n                                  'maxLength': 256},\n         .. (2224 more)",
      "data": {
        "_id": "1234567890",
        "email": "john.doe@example.com",
        "email_validated_at": "2022-01-01T12:00:00.000Z",
        "firstname": "John",
        "lastname": "Doe",
        "metadata": {
          "creationTimestamp": 1643723400,
          "deletionTimestamp": 0,
          "resourceVersion": 1
        },
        "password": {
          "hash": "hashedpassword",
          "rounds": 20,
          "salt": "saltvalue"
        },
        "role": "user",
        "schema": "http://elasticbox.net/schemas/user",
        "username": "johndoe",
        "extraProperty": "extraValue"
      }
    },
    {
      "description": "llama-70b generated negative; focus on minLength keyword or maxLength keyword",
      "valid": false,
      "rust_error": "\"\" is shorter than 1 character",
      "python_error": "'' should be non-empty\n\nFailed validating 'minLength' in schema['properties']['username']:\n    {'type': 'string', 'minLength': 1, 'maxLength': 256}\n\nOn instance['username']:\n    ''",
      "data": {
        "_id": "",
        "email": "john.doe@example.com",
        "email_validated_at": "2022-01-01T12:00:00.000Z",
        "firstname": "",
        "lastname": "",
        "metadata": {
          "creationTimestamp": 1643723400,
          "deletionTimestamp": 0,
          "resourceVersion": 1
        },
        "password": {
          "hash": "hashedpassword",
          "rounds": 20,
          "salt": "saltvalue"
        },
        "role": "user",
        "schema": "http://elasticbox.net/schemas/user",
        "username": ""
      }
    }
  ]
}