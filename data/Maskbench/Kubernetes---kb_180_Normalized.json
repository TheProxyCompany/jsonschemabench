{
  "description": "sample Kubernetes/kb_180_Normalized.json",
  "meta": {
    "full_size": 3496,
    "stripped_size": 1080,
    "features": [
      "$ref",
      "additionalProperties",
      "additionalProperties:object"
    ],
    "raw_features": [
      "definitions",
      "properties",
      "required",
      "type",
      "type:[]",
      "type:boolean",
      "type:null",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "definitions": {
      "https:__kubernetesjsonschema_dev_master__defs_json_defs_io_k8s_api_core_v1_SecretReference": {
        "description": "SecretReference represents a Secret Reference. It has enough information to retrieve secret in any namespace",
        "properties": {
          "name": {
            "description": "Name is unique within a namespace to reference a secret resource.",
            "type": "string"
          },
          "namespace": {
            "description": "Namespace defines the space within which the secret name must be unique.",
            "type": "string"
          }
        },
        "type": "object"
      }
    },
    "description": "Represents storage that is managed by an external CSI volume driver (Beta feature)",
    "properties": {
      "controllerExpandSecretRef": {
        "$ref": "#/definitions/https:__kubernetesjsonschema_dev_master__defs_json_defs_io_k8s_api_core_v1_SecretReference",
        "description": "ControllerExpandSecretRef is a reference to the secret object containing sensitive information to pass to the CSI driver to complete the CSI ControllerExpandVolume call. This is an alpha field and requires enabling ExpandCSIVolumes feature gate. This field is optional, and may be empty if no secret is required. If the secret object contains more than one secret, all secrets are passed."
      },
      "controllerPublishSecretRef": {
        "$ref": "#/definitions/https:__kubernetesjsonschema_dev_master__defs_json_defs_io_k8s_api_core_v1_SecretReference",
        "description": "ControllerPublishSecretRef is a reference to the secret object containing sensitive information to pass to the CSI driver to complete the CSI ControllerPublishVolume and ControllerUnpublishVolume calls. This field is optional, and may be empty if no secret is required. If the secret object contains more than one secret, all secrets are passed."
      },
      "driver": {
        "description": "Driver is the name of the driver to use for this volume. Required.",
        "type": [
          "string",
          "null"
        ]
      },
      "fsType": {
        "description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\".",
        "type": [
          "string",
          "null"
        ]
      },
      "nodePublishSecretRef": {
        "$ref": "#/definitions/https:__kubernetesjsonschema_dev_master__defs_json_defs_io_k8s_api_core_v1_SecretReference",
        "description": "NodePublishSecretRef is a reference to the secret object containing sensitive information to pass to the CSI driver to complete the CSI NodePublishVolume and NodeUnpublishVolume calls. This field is optional, and may be empty if no secret is required. If the secret object contains more than one secret, all secrets are passed."
      },
      "nodeStageSecretRef": {
        "$ref": "#/definitions/https:__kubernetesjsonschema_dev_master__defs_json_defs_io_k8s_api_core_v1_SecretReference",
        "description": "NodeStageSecretRef is a reference to the secret object containing sensitive information to pass to the CSI driver to complete the CSI NodeStageVolume and NodeStageVolume and NodeUnstageVolume calls. This field is optional, and may be empty if no secret is required. If the secret object contains more than one secret, all secrets are passed."
      },
      "readOnly": {
        "description": "Optional: The value to pass to ControllerPublishVolumeRequest. Defaults to false (read/write).",
        "type": [
          "boolean",
          "null"
        ]
      },
      "volumeAttributes": {
        "additionalProperties": {
          "type": [
            "string",
            "null"
          ]
        },
        "description": "Attributes of the volume to publish.",
        "type": [
          "object",
          "null"
        ]
      },
      "volumeHandle": {
        "description": "VolumeHandle is the unique volume name returned by the CSI volume pluginâ€™s CreateVolume to refer to the volume on all subsequent calls. Required.",
        "type": [
          "string",
          "null"
        ]
      }
    },
    "required": [
      "driver",
      "volumeHandle"
    ],
    "type": "object"
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "driver": "my-csi-driver",
        "volumeHandle": "my-volume-handle",
        "controllerExpandSecretRef ": {
          "name": "my-expand-secret",
          "namespace": "my-namespace"
        },
        "controllerPublishSecretRef ": {
          "name": "my-publish-secret",
          "namespace": "my-namespace"
        },
        "fsType ": "ext4",
        "nodePublishSecretRef ": {
          "name": "my-node-publish-secret",
          "namespace": "my-namespace"
        },
        "nodeStageSecretRef ": {
          "name": "my-node-stage-secret",
          "namespace": "my-namespace"
        },
        "readOnly ": false,
        "volumeAttributes ": {
          "key1": "value1",
          "key2": "value2"
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on type keyword with an array of types",
      "valid": false,
      "rust_error": "123 is not of types \"null\", \"string\"",
      "python_error": "'true' is not of type 'boolean', 'null'\n\nFailed validating 'type' in schema['properties']['readOnly']:\n    {'description': 'Optional: The value to pass to '\n                    'ControllerPublishVolumeRequest. Defaults to false '\n                    '(read/write).',\n     'type': ['boolean', 'null']}\n\nOn instance['readOnly']:\n    'true'",
      "data": {
        "driver": 123,
        "volumeHandle": "my-volume-handle",
        "controllerExpandSecretRef": {
          "name": "my-expand-secret",
          "namespace": "my-namespace"
        },
        "controllerPublishSecretRef": {
          "name": "my-publish-secret",
          "namespace": "my-namespace"
        },
        "fsType": 456,
        "nodePublishSecretRef": {
          "name": "my-node-publish-secret",
          "namespace": "my-namespace"
        },
        "nodeStageSecretRef": {
          "name": "my-node-stage-secret",
          "namespace": "my-namespace"
        },
        "readOnly": "true",
        "volumeAttributes": {
          "key1": 789,
          "key2": "value2"
        }
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "123 is not of type \"string\"",
      "python_error": "123 is not of type 'string'\n\nFailed validating 'type' in schema['properties']['controllerExpandSecretRef']['properties']['name']:\n    {'description': 'Name is unique within a namespace to reference a '\n                    'secret resource.',\n     'type': 'string'}\n\nOn instance['controllerExpandSecretRef']['name']:\n    123",
      "data": {
        "driver": "my-csi-driver",
        "volumeHandle": "my-volume-handle",
        "controllerExpandSecretRef": {
          "name": 123,
          "namespace": "my-namespace"
        },
        "controllerPublishSecretRef": {
          "name": "my-publish-secret",
          "namespace": "my-namespace"
        },
        "fsType": "ext4",
        "nodePublishSecretRef": {
          "name": "my-node-publish-secret",
          "namespace": "my-namespace"
        },
        "nodeStageSecretRef": {
          "name": "my-node-stage-secret",
          "namespace": "my-namespace"
        },
        "readOnly": false,
        "volumeAttributes": {
          "key1": "value1",
          "key2": "value2"
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on type keyword with an array of types",
      "valid": false,
      "rust_error": "123 is not of types \"null\", \"string\"",
      "python_error": "'true' is not of type 'boolean', 'null'\n\nFailed validating 'type' in schema['properties']['readOnly']:\n    {'description': 'Optional: The value to pass to '\n                    'ControllerPublishVolumeRequest. Defaults to false '\n                    '(read/write).',\n     'type': ['boolean', 'null']}\n\nOn instance['readOnly']:\n    'true'",
      "data": {
        "driver": 123,
        "volumeHandle": "my-volume-handle",
        "controllerExpandSecretRef": {
          "name": "my-expand-secret",
          "namespace": "my-namespace"
        },
        "controllerPublishSecretRef": {
          "name": "my-publish-secret",
          "namespace": "my-namespace"
        },
        "fsType": 456,
        "nodePublishSecretRef": {
          "name": "my-node-publish-secret",
          "namespace": "my-namespace"
        },
        "nodeStageSecretRef": {
          "name": "my-node-stage-secret",
          "namespace": "my-namespace"
        },
        "readOnly": "true",
        "volumeAttributes": {
          "key1": "value1",
          "key2": "value2"
        }
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "controllerExpandSecretRef": {
          "name": "expand-secret",
          "namespace": "default"
        },
        "controllerPublishSecretRef": {
          "name": "publish-secret",
          "namespace": "default"
        },
        "driver": "csi-driver",
        "fsType": "ext4",
        "nodePublishSecretRef": {
          "name": "node-publish-secret",
          "namespace": "default"
        },
        "nodeStageSecretRef": {
          "name": "node-stage-secret",
          "namespace": "default"
        },
        "readOnly": false,
        "volumeAttributes": {
          "attribute1": "value1",
          "attribute2": "value2"
        },
        "volumeHandle": "volume-handle-123"
      }
    },
    {
      "description": "llama-70b generated negative; focus on type keyword with an array of types",
      "valid": false,
      "rust_error": "123 is not of types \"null\", \"string\"",
      "python_error": "123 is not of type 'string', 'null'\n\nFailed validating 'type' in schema['properties']['driver']:\n    {'description': 'Driver is the name of the driver to use for this '\n                    'volume. Required.',\n     'type': ['string', 'null']}\n\nOn instance['driver']:\n    123",
      "data": {
        "driver": 123,
        "volumeHandle": "volume-handle-123",
        "fsType": "ext4",
        "readOnly": false,
        "volumeAttributes": {
          "attribute1": "value1",
          "attribute2": "value2"
        },
        "controllerExpandSecretRef": {
          "name": "expand-secret",
          "namespace": "default"
        },
        "controllerPublishSecretRef": {
          "name": "publish-secret",
          "namespace": "default"
        },
        "nodePublishSecretRef": {
          "name": "node-publish-secret",
          "namespace": "default"
        },
        "nodeStageSecretRef": {
          "name": "node-stage-secret",
          "namespace": "default"
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on additionalProperties keyword with an object schema",
      "valid": false,
      "rust_error": "123 is not of types \"null\", \"string\"",
      "python_error": "123 is not of type 'string', 'null'\n\nFailed validating 'type' in schema['properties']['volumeAttributes']['additionalProperties']:\n    {'type': ['string', 'null']}\n\nOn instance['volumeAttributes']['attribute3']:\n    123",
      "data": {
        "driver": "csi-driver",
        "volumeHandle": "volume-handle-123",
        "fsType": "ext4",
        "readOnly": false,
        "volumeAttributes": {
          "attribute1": "value1",
          "attribute2": "value2",
          "attribute3": 123
        },
        "controllerExpandSecretRef": {
          "name": "expand-secret",
          "namespace": "default"
        },
        "controllerPublishSecretRef": {
          "name": "publish-secret",
          "namespace": "default"
        },
        "nodePublishSecretRef": {
          "name": "node-publish-secret",
          "namespace": "default"
        },
        "nodeStageSecretRef": {
          "name": "node-stage-secret",
          "namespace": "default"
        },
        "extraKey": "extraValue"
      }
    }
  ]
}