{
  "description": "sample Github_medium/o82481.json",
  "meta": {
    "full_size": 718,
    "stripped_size": 505,
    "features": [
      "additionalProperties",
      "enum",
      "pattern"
    ],
    "raw_features": [
      "$schema",
      "_boolSchema",
      "id",
      "properties",
      "required",
      "type",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "id": "http://schemas.triniti.io/json-schema/gdbots/ncr/mixin/edge/1-0-0.json#",
    "$schema": "http://json-schema.org/draft-04/schema#",
    "type": "object",
    "properties": {
      "from_ref": {
        "type": "string",
        "pattern": "^[\\w\\/\\.:-]+$",
        "pbj": {
          "type": "identifier",
          "rule": "single"
        }
      },
      "to_ref": {
        "type": "string",
        "pattern": "^[\\w\\/\\.:-]+$",
        "pbj": {
          "type": "identifier",
          "rule": "single"
        }
      },
      "multiplicity": {
        "type": "string",
        "default": "multi",
        "enum": [
          "unknown",
          "multi",
          "simple",
          "many2one",
          "one2many",
          "one2one"
        ],
        "pbj": {
          "type": "string-enum",
          "rule": "single",
          "overridable": true
        }
      },
      "created_at": {
        "type": "string",
        "pattern": "^[1-9]{1}[0-9]{12,15}$",
        "pbj": {
          "type": "microtime",
          "rule": "single"
        }
      }
    },
    "required": [
      "from_ref",
      "to_ref"
    ],
    "additionalProperties": true
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "from_ref": "node/12345",
        "to_ref": "node/67890",
        "multiplicity": "one2one",
        "created_at": "1643723900123456"
      }
    },
    {
      "description": "llama-70b generated negative; focus on pattern keyword",
      "valid": false,
      "rust_error": "\"node/12345!\" does not match \"^[\\w\\/\\.:-]+$\"",
      "python_error": "'node/12345!' does not match '^[\\\\w\\\\/\\\\.:-]+$'\n\nFailed validating 'pattern' in schema['properties']['from_ref']:\n    {'type': 'string',\n     'pattern': '^[\\\\w\\\\/\\\\.:-]+$',\n     'pbj': {'type': 'identifier', 'rule': 'single'}}\n\nOn instance['from_ref']:\n    'node/12345!'",
      "data": {
        "from_ref": "node/12345!",
        "to_ref": "node/67890",
        "multiplicity": "one2one",
        "created_at": "1643723900123456"
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"invalid\" is not one of [\"unknown\",\"multi\",\"simple\",\"many2one\",\"one2many\",\"one2one\"]",
      "python_error": "'invalid' is not one of ['unknown', 'multi', 'simple', 'many2one', 'one2many', 'one2one']\n\nFailed validating 'enum' in schema['properties']['multiplicity']:\n    {'type': 'string',\n     'default': 'multi',\n     'enum': ['unknown',\n              'multi',\n              'simple',\n              'many2one',\n              'one2many',\n              'one2one'],\n     'pbj': {'type': 'string-enum', 'rule': 'single', 'overridable': True}}\n\nOn instance['multiplicity']:\n    'invalid'",
      "data": {
        "from_ref": "node/12345",
        "to_ref": "node/67890",
        "multiplicity": "invalid",
        "created_at": "1643723900123456"
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "from_ref": "node1",
        "to_ref": "node2",
        "multiplicity": "one2one",
        "created_at": "1643723400123456"
      }
    },
    {
      "description": "llama-70b generated negative; focus on pattern keyword",
      "valid": false,
      "rust_error": "\"node1!\" does not match \"^[\\w\\/\\.:-]+$\"",
      "python_error": "'node1!' does not match '^[\\\\w\\\\/\\\\.:-]+$'\n\nFailed validating 'pattern' in schema['properties']['from_ref']:\n    {'type': 'string',\n     'pattern': '^[\\\\w\\\\/\\\\.:-]+$',\n     'pbj': {'type': 'identifier', 'rule': 'single'}}\n\nOn instance['from_ref']:\n    'node1!'",
      "data": {
        "from_ref": "node1!",
        "to_ref": "node2",
        "multiplicity": "one2one",
        "created_at": "1643723400123456"
      }
    }
  ]
}