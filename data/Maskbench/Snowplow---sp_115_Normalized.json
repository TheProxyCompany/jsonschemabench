{
  "description": "sample Snowplow/sp_115_Normalized.json",
  "meta": {
    "full_size": 2649,
    "stripped_size": 819,
    "features": [
      "@minmaxLength",
      "additionalProperties"
    ],
    "raw_features": [
      "_boolSchema",
      "maxLength",
      "properties",
      "type",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "additionalProperties": true,
    "description": "Schema for a Mailgun message clicked event",
    "properties": {
      "campaignId": {
        "description": "id of campaign triggering the event.",
        "type": "string"
      },
      "campaignName": {
        "description": "The name of campaign triggering the event.",
        "type": "string"
      },
      "city": {
        "description": "Name of the city the event came from or ‘unknown’ if it couldn’t be determined.",
        "maxLength": 64,
        "type": "string"
      },
      "clientName": {
        "description": "Name of the client software, e.g. ‘Thunderbird’, ‘Chrome’, ‘Firefox’.",
        "maxLength": 64,
        "type": "string"
      },
      "clientOs": {
        "description": "OS family running the client software, e.g. ‘Linux’, ‘Windows’, ‘OSX’.",
        "maxLength": 64,
        "type": "string"
      },
      "clientType": {
        "description": "Type of software the link was opened in, e.g. ‘browser’, ‘mobile browser’, ‘email client’.",
        "maxLength": 64,
        "type": "string"
      },
      "country": {
        "description": "Two-letter country code (as specified by ISO3166) the event came from or ‘unknown’ if it couldn’t be determined.",
        "maxLength": 2,
        "type": "string"
      },
      "deviceType": {
        "description": "Device type the link was clicked on. Can be ‘desktop’, ‘mobile’, ‘tablet’, ‘other’ or ‘unknown’.",
        "maxLength": 64,
        "type": "string"
      },
      "domain": {
        "_format": "hostname",
        "description": "Domain that sent the original message.",
        "maxLength": 256,
        "type": "string"
      },
      "ip": {
        "_format": "ipv4",
        "description": "IP address the event originated from (currently only seems to support ipv4).",
        "type": "string"
      },
      "mailingList": {
        "description": "The address of mailing list the original message was sent to.",
        "type": "string"
      },
      "messageId": {
        "description": "The Id of the message that bounced.",
        "maxLength": 1024,
        "type": "string"
      },
      "recipient": {
        "_format": "email",
        "description": "Recipient who clicked.",
        "maxLength": 256,
        "type": "string"
      },
      "region": {
        "description": "Two-letter or two-digit region code or ‘unknown’ if it couldn’t be determined.",
        "maxLength": 8,
        "type": "string"
      },
      "signature": {
        "description": "String with hexadecimal digits generate by HMAC algorithm (see securing webhooks).",
        "maxLength": 128,
        "type": "string"
      },
      "tag": {
        "description": "Message tag, if it was tagged. See Tagging.",
        "type": "string"
      },
      "token": {
        "description": "Randomly generated string with length 50 (see securing webhooks).",
        "maxLength": 64,
        "type": "string"
      },
      "url": {
        "_format": "uri",
        "description": "The URL that was clicked (size from rfc7230#section-3.1.1).",
        "maxLength": 8192,
        "type": "string"
      },
      "userAgent": {
        "description": "User agent string of the client triggered the event.",
        "maxLength": 1024,
        "type": "string"
      }
    },
    "self": {
      "format": "jsonschema",
      "name": "message_clicked",
      "vendor": "com.mailgun",
      "version": "1-0-0"
    },
    "type": "object"
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "campaignId": "1234567890",
        "campaignName": "Summer Sale",
        "city": "New York",
        "clientName": "Chrome",
        "clientOs": "Windows",
        "clientType": "browser",
        "country": "US",
        "deviceType": "desktop",
        "domain": "example.com",
        "ip": "192.168.1.1",
        "mailingList": "newsletter@example.com",
        "messageId": "<20220101123456789012345678901234567890@example.com>",
        "recipient": "john.doe@example.com",
        "region": "NY",
        "signature": "a1b2c3d4e5f6g7h8i9j0k1l2m3n4o5p6q7r8s9t0",
        "tag": "summer-sale",
        "token": "a1b2c3d4e5f6g7h8i9j0k1l2m3n4o5p6q7r8s9t0u1v2w3x4y5z6",
        "url": "https://example.com/summer-sale",
        "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.110 Safari/537.36"
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"USA\" is longer than 2 characters",
      "python_error": "'USA' is too long\n\nFailed validating 'maxLength' in schema['properties']['country']:\n    {'description': 'Two-letter country code (as specified by ISO3166) the '\n                    'event came from or ‘unknown’ if it couldn’t be '\n                    'determined.',\n     'maxLength': 2,\n     'type': 'string'}\n\nOn instance['country']:\n    'USA'",
      "data": {
        "campaignId": "1234567890",
        "campaignName": "Summer Sale",
        "city": "New York",
        "clientName": "Chrome",
        "clientOs": "Windows",
        "clientType": "browser",
        "country": "USA",
        "deviceType": "desktop",
        "domain": "example.com",
        "ip": "192.168.1.1",
        "mailingList": "newsletter@example.com",
        "messageId": "<20220101123456789012345678901234567890@example.com>",
        "recipient": "john.doe@example.com",
        "region": "New York",
        "signature": "a1b2c3d4e5f6g7h8i9j0k1l2m3n4o5p6q7r8s9t0",
        "tag": "summer-sale",
        "token": "a1b2c3d4e5f6g7h8i9j0k1l2m3n4o5p6q7r8s9t0u1v2w3x4y5z6",
        "url": "https://example.com/summer-sale",
        "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.110 Safari/537.36",
        "USA": "USA"
      }
    },
    {
      "description": "llama-70b generated negative; focus on maxLength keyword",
      "valid": false,
      "rust_error": "\"USA\" is longer than 2 characters",
      "python_error": "'USA' is too long\n\nFailed validating 'maxLength' in schema['properties']['country']:\n    {'description': 'Two-letter country code (as specified by ISO3166) the '\n                    'event came from or ‘unknown’ if it couldn’t be '\n                    'determined.',\n     'maxLength': 2,\n     'type': 'string'}\n\nOn instance['country']:\n    'USA'",
      "data": {
        "campaignId": "1234567890",
        "campaignName": "Summer Sale",
        "city": "New York",
        "clientName": "Chrome",
        "clientOs": "Windows",
        "clientType": "browser",
        "country": "USA",
        "deviceType": "desktop",
        "domain": "example.com",
        "ip": "192.168.1.1",
        "mailingList": "newsletter@example.com",
        "messageId": "<20220101123456789012345678901234567890@example.com>",
        "recipient": "john.doe@example.com",
        "region": "NY",
        "signature": "a1b2c3d4e5f6g7h8i9j0k1l2m3n4o5p6q7r8s9t0",
        "tag": "summer-sale",
        "token": "a1b2c3d4e5f6g7h8i9j0k1l2m3n4o5p6q7r8s9t0u1v2w3x4y5z6",
        "url": "https://example.com/summer-sale",
        "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.110 Safari/537.36"
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "campaignId": "1234567890",
        "campaignName": "Summer Sale",
        "city": "New York",
        "clientName": "Chrome",
        "clientOs": "Windows",
        "clientType": "browser",
        "country": "US",
        "deviceType": "desktop",
        "domain": "example.com",
        "ip": "192.168.1.1",
        "mailingList": "newsletter@example.com",
        "messageId": "20201231235959.1.1234567890@example.com",
        "recipient": "john.doe@example.com",
        "region": "NY",
        "signature": "a1b2c3d4e5f6g7h8i9j0k1l2m3n4o5p6q7r8s9t0",
        "tag": "summer-sale",
        "token": "a1b2c3d4e5f6g7h8i9j0k1l2m3n4o5p6q7r8s9t0u1v2w3x4y5z6",
        "url": "https://example.com/summer-sale",
        "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.169 Safari/537.3",
        "additionalProperty": "additionalValue"
      }
    },
    {
      "description": "llama-70b generated negative; focus on maxLength keyword",
      "valid": false,
      "rust_error": "\"USA\" is longer than 2 characters",
      "python_error": "'USA' is too long\n\nFailed validating 'maxLength' in schema['properties']['country']:\n    {'description': 'Two-letter country code (as specified by ISO3166) the '\n                    'event came from or ‘unknown’ if it couldn’t be '\n                    'determined.',\n     'maxLength': 2,\n     'type': 'string'}\n\nOn instance['country']:\n    'USA'",
      "data": {
        "campaignId": "1234567890",
        "campaignName": "Summer Sale",
        "city": "New York",
        "clientName": "Chrome",
        "clientOs": "Windows",
        "clientType": "browser",
        "country": "USA",
        "deviceType": "desktop",
        "domain": "example.com",
        "ip": "192.168.1.1",
        "mailingList": "newsletter@example.com",
        "messageId": "20201231235959.1.1234567890@example.com",
        "recipient": "john.doe@example.com",
        "region": "NY",
        "signature": "a1b2c3d4e5f6g7h8i9j0k1l2m3n4o5p6q7r8s9t0",
        "tag": "summer-sale",
        "token": "a1b2c3d4e5f6g7h8i9j0k1l2m3n4o5p6q7r8s9t0u1v2w3x4y5z6",
        "url": "https://example.com/summer-sale",
        "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.169 Safari/537.3",
        "additionalProperty": "additionalValue"
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"USA\" is longer than 2 characters",
      "python_error": "'a1b2c3d4e5f6g7h8i9j0k1l2m3n4o5p6q7r8s9t0u1v2w3x4y5z6a1b2c3d4e5f6g7h8i9j0k1l2m3n4o5p6q7r8s9t0' is too long\n\nFailed validating 'maxLength' in schema['properties']['token']:\n    {'description': 'Randomly generated string with length 50 (see '\n                    'securing webhooks).',\n     'maxLength': 64,\n     'type': 'string'}\n\nOn instance['token']:\n    'a1b2c3d4e5f6g7h8i9j0k1l2m3n4o5p6q7r8s9t0u1v2w3x4y5z6a1b2c3d4e5f6g7h8i9j0k1l2m3n4o5p6q7r8s9t0'",
      "data": {
        "campaignId": "1234567890",
        "campaignName": "Summer Sale",
        "city": "New York",
        "clientName": "Chrome",
        "clientOs": "Windows",
        "clientType": "browser",
        "country": "USA",
        "ip": "192.168.1.256",
        "messageId": "20201231235959.1.1234567890@example.com",
        "recipient": "john doe@example.com",
        "signature": "a1b2c3d4e5f6g7h8i9j0k1l2m3n4o5p6q7r8s9t0a1b2c3d4e5f6g7h8i9j0k1l2m3n4o5p6q7r8s9t0",
        "token": "a1b2c3d4e5f6g7h8i9j0k1l2m3n4o5p6q7r8s9t0u1v2w3x4y5z6a1b2c3d4e5f6g7h8i9j0k1l2m3n4o5p6q7r8s9t0",
        "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.169 Safari/537.3a1b2c3d4e5f6g7h8i9j0k1l2m3n4o5p6q7r8s9t0a1b2c3d4e5f6g7h8i9j0k1l2m3n4o5p6q7r8s9t0",
        "maxLength of country is 2": "deviceType",
        "missing value for deviceType": "domain",
        "hostname format requires a valid domain name, not just a string": "example",
        "ipv4 format does not support values above 255": "mailingList",
        "email format not checked here but format of email is not the typical format": "john.doe@example com",
        "email format requires a valid email address": "region",
        "maxLength of region is 8": "NewYorkCity",
        "maxLength of signature is 128": "tag",
        "maxLength of tag is not defined but should not be longer than 64": "a1b2c3d4e5f6g7h8i9j0k1l2m3n4o5p6q7r8s9t0a1b2c3d4e5f6g7h8i9j0k1l2m3n4o5p6q7r8s9t0a1b2c3d4e5f6g7h8i9j0k1l2m3n4o5p6q7r8s9t0",
        "maxLength of token is 64": "url",
        "maxLength of url is 8192": "https://example.com/summer-sale?a1b2c3d4e5f6g7h8i9j0k1l2m3n4o5p6q7r8s9t0a1b2c3d4e5f6g7h8i9j0k1l2m3n4o5p6q7r8s9t0a1b2c3d4e5f6g7h8i9j0k1l2m3n4o5p6q7r8s9t0a1b2c3d4e5f6g7h8i9j0k1l2m3n4o5p6q7r8s9t0a1b2c3d4e5f6g7h8i9j0k1l2m3n4o5p6q7r8s9t0a1b2c3d4e5f6g7h8i9j0k1l2m3n4o5p6q7r8s9t0",
        "maxLength of userAgent is 1024": "additionalProperty",
        "additionalProperty should not cause any error because additionalProperties is true.": "additionalValue"
      }
    }
  ]
}