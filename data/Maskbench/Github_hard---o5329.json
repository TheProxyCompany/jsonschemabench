{
  "description": "sample Github_hard/o5329.json",
  "meta": {
    "full_size": 2123,
    "stripped_size": 2105,
    "features": [
      "additionalProperties",
      "enum",
      "items",
      "pattern"
    ],
    "raw_features": [
      "$schema",
      "_boolSchema",
      "properties",
      "required",
      "type",
      "type:array",
      "type:integer",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "type": "object",
    "properties": {
      "meta": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
          },
          "type": {
            "type": "string",
            "enum": [
              "EiffelActivityFinishedEvent"
            ]
          },
          "version": {
            "type": "string",
            "enum": [
              "1.1.0"
            ],
            "default": "1.1.0"
          },
          "time": {
            "type": "integer"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "source": {
            "type": "object",
            "properties": {
              "domainId": {
                "type": "string"
              },
              "host": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "serializer": {
                "type": "object",
                "properties": {
                  "groupId": {
                    "type": "string"
                  },
                  "artifactId": {
                    "type": "string"
                  },
                  "version": {
                    "type": "string"
                  }
                },
                "required": [
                  "groupId",
                  "artifactId",
                  "version"
                ],
                "additionalProperties": false
              },
              "uri": {
                "type": "string"
              }
            },
            "additionalProperties": false
          },
          "security": {
            "type": "object",
            "properties": {
              "sdm": {
                "type": "object",
                "properties": {
                  "authorIdentity": {
                    "type": "string"
                  },
                  "encryptedDigest": {
                    "type": "string"
                  }
                },
                "required": [
                  "authorIdentity",
                  "encryptedDigest"
                ],
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          }
        },
        "required": [
          "id",
          "type",
          "version",
          "time"
        ],
        "additionalProperties": false
      },
      "data": {
        "type": "object",
        "properties": {
          "outcome": {
            "type": "object",
            "properties": {
              "conclusion": {
                "type": "string",
                "enum": [
                  "SUCCESSFUL",
                  "UNSUCCESSFUL",
                  "FAILED",
                  "ABORTED",
                  "TIMED_OUT",
                  "INCONCLUSIVE"
                ]
              },
              "description": {
                "type": "string"
              }
            },
            "required": [
              "conclusion"
            ]
          },
          "persistentLogs": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "uri": {
                  "type": "string"
                }
              },
              "required": [
                "name",
                "uri"
              ],
              "additionalProperties": false
            }
          },
          "customData": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "key": {
                  "type": "string"
                },
                "value": {}
              },
              "required": [
                "key",
                "value"
              ],
              "additionalProperties": false
            }
          }
        },
        "additionalProperties": false,
        "required": [
          "outcome"
        ]
      },
      "links": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string"
            },
            "target": {
              "type": "string",
              "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
            }
          },
          "required": [
            "type",
            "target"
          ],
          "additionalProperties": false
        }
      }
    },
    "required": [
      "meta",
      "data",
      "links"
    ],
    "additionalProperties": false
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "meta": {
          "id": "123e4567-e89b-12d3-a456-426655440000",
          "type": "EiffelActivityFinishedEvent",
          "version": "1.1.0",
          "time": 1643723900,
          "tags": [
            "tag1",
            "tag2"
          ],
          "source": {
            "domainId": "domain1",
            "host": "host1",
            "name": "name1",
            "serializer": {
              "groupId": "group1",
              "artifactId": "artifact1",
              "version": "version1"
            },
            "uri": "uri1"
          },
          "security": {
            "sdm": {
              "authorIdentity": "author1",
              "encryptedDigest": "digest1"
            }
          }
        },
        "data": {
          "outcome": {
            "conclusion": "SUCCESSFUL",
            "description": "description1"
          },
          "persistentLogs": [
            {
              "name": "log1",
              "uri": "log1uri"
            },
            {
              "name": "log2",
              "uri": "log2uri"
            }
          ],
          "customData": [
            {
              "key": "key1",
              "value": "value1"
            },
            {
              "key": "key2",
              "value": 2
            }
          ]
        },
        "links": [
          {
            "type": "type1",
            "target": "123e4567-e89b-12d3-a456-426655440000"
          },
          {
            "type": "type2",
            "target": "234e5678-e89b-12d3-a456-426655440000"
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on pattern keyword",
      "valid": false,
      "rust_error": "\"123e4567-e89b-12d3-a456-42665544000\" does not match \"^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$\"",
      "python_error": "'123e4567-e89b-12d3-a456-42665544000' does not match '^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$'\n\nFailed validating 'pattern' in schema['properties']['meta']['properties']['id']:\n    {'type': 'string',\n     'pattern': '^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$'}\n\nOn instance['meta']['id']:\n    '123e4567-e89b-12d3-a456-42665544000'",
      "data": {
        "meta": {
          "id": "123e4567-e89b-12d3-a456-42665544000",
          "type": "EiffelActivityFinishedEvent",
          "version": "1.1.0",
          "time": 1643723900,
          "tags": [
            "tag1",
            "tag2"
          ],
          "source": {
            "domainId": "domain1",
            "host": "host1",
            "name": "name1",
            "serializer": {
              "groupId": "group1",
              "artifactId": "artifact1",
              "version": "version1"
            },
            "uri": "uri1"
          },
          "security": {
            "sdm": {
              "authorIdentity": "author1",
              "encryptedDigest": "digest1"
            }
          }
        },
        "data": {
          "outcome": {
            "conclusion": "SUCCESSFUL",
            "description": "description1"
          },
          "persistentLogs": [
            {
              "name": "log1",
              "uri": "log1uri"
            },
            {
              "name": "log2",
              "uri": "log2uri"
            }
          ],
          "customData": [
            {
              "key": "key1",
              "value": "value1"
            },
            {
              "key": "key2",
              "value": 2
            }
          ]
        },
        "links": [
          {
            "type": "type1",
            "target": "123e4567-e89b-12d3-a456-42665544000"
          },
          {
            "type": "type2",
            "target": "234e5678-e89b-12d3-a456-426655440000"
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"INVALID_CONCLUSION\" is not one of [\"SUCCESSFUL\",\"UNSUCCESSFUL\",\"FAILED\",\"ABORTED\",\"TIMED_OUT\",\"INCONCLUSIVE\"]",
      "python_error": "'INVALID_CONCLUSION' is not one of ['SUCCESSFUL', 'UNSUCCESSFUL', 'FAILED', 'ABORTED', 'TIMED_OUT', 'INCONCLUSIVE']\n\nFailed validating 'enum' in schema['properties']['data']['properties']['outcome']['properties']['conclusion']:\n    {'type': 'string',\n     'enum': ['SUCCESSFUL',\n              'UNSUCCESSFUL',\n              'FAILED',\n              'ABORTED',\n              'TIMED_OUT',\n              'INCONCLUSIVE']}\n\nOn instance['data']['outcome']['conclusion']:\n    'INVALID_CONCLUSION'",
      "data": {
        "meta": {
          "id": "123e4567-e89b-12d3-a456-426655440000",
          "type": "EiffelActivityFinishedEvent",
          "version": "1.1.0",
          "time": 1643723900,
          "tags": [
            "tag1",
            "tag2"
          ],
          "source": {
            "domainId": "domain1",
            "host": "host1",
            "name": "name1",
            "serializer": {
              "groupId": "group1",
              "artifactId": "artifact1",
              "version": "version1"
            },
            "uri": "uri1"
          },
          "security": {
            "sdm": {
              "authorIdentity": "author1",
              "encryptedDigest": "digest1"
            }
          }
        },
        "data": {
          "outcome": {
            "conclusion": "INVALID_CONCLUSION",
            "description": "description1"
          },
          "persistentLogs": [
            {
              "name": "log1",
              "uri": "log1uri"
            },
            {
              "name": "log2",
              "uri": "log2uri"
            }
          ],
          "customData": [
            {
              "key": "key1",
              "value": "value1"
            },
            {
              "key": "key2",
              "value": 2
            }
          ]
        },
        "links": [
          {
            "type": "type1",
            "target": "123e4567-e89b-12d3-a456-426655440000"
          },
          {
            "type": "type2",
            "target": "234e5678-e89b-12d3-a456-426655440000"
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "2 is not of type \"string\"",
      "python_error": "'target' is a required property\n\nFailed validating 'required' in schema['properties']['links']['items']:\n    {'type': 'object',\n     'properties': {'type': {'type': 'string'},\n                    'target': {'type': 'string',\n                               'pattern': '^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$'}},\n     'required': ['type', 'target'],\n     'additionalProperties': False}\n\nOn instance['links'][1]:\n    {'type': 'type2'}",
      "data": {
        "meta": {
          "id": "123e4567-e89b-12d3-a456-426655440000",
          "type": "EiffelActivityFinishedEvent",
          "version": "1.1.0",
          "time": 1643723900,
          "tags": [
            "tag1",
            2
          ],
          "source": {
            "domainId": "domain1",
            "host": "host1",
            "name": "name1",
            "serializer": {
              "groupId": "group1",
              "artifactId": "artifact1",
              "version": "version1"
            },
            "uri": "uri1"
          },
          "security": {
            "sdm": {
              "authorIdentity": "author1",
              "encryptedDigest": "digest1"
            }
          }
        },
        "data": {
          "outcome": {
            "conclusion": "SUCCESSFUL",
            "description": "description1"
          },
          "persistentLogs": [
            {
              "name": "log1",
              "uri": "log1uri"
            },
            {
              "name": "log2"
            }
          ],
          "customData": [
            {
              "key": "key1",
              "value": "value1"
            },
            {
              "key": "key2"
            }
          ]
        },
        "links": [
          {
            "type": "type1",
            "target": "123e4567-e89b-12d3-a456-426655440000"
          },
          {
            "type": "type2"
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on pattern keyword",
      "valid": false,
      "rust_error": "\"Invalid-Id\" does not match \"^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$\"",
      "python_error": "'Invalid-Id' does not match '^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$'\n\nFailed validating 'pattern' in schema['properties']['meta']['properties']['id']:\n    {'type': 'string',\n     'pattern': '^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$'}\n\nOn instance['meta']['id']:\n    'Invalid-Id'",
      "data": {
        "meta": {
          "id": "Invalid-Id",
          "type": "EiffelActivityFinishedEvent",
          "version": "1.1.0",
          "time": 1643723900,
          "tags": [
            "tag1",
            "tag2"
          ],
          "source": {
            "domainId": "domain1",
            "host": "host1",
            "name": "name1",
            "serializer": {
              "groupId": "group1",
              "artifactId": "artifact1",
              "version": "version1"
            },
            "uri": "uri1"
          },
          "security": {
            "sdm": {
              "authorIdentity": "author1",
              "encryptedDigest": "digest1"
            }
          }
        },
        "data": {
          "outcome": {
            "conclusion": "SUCCESSFUL",
            "description": "description1"
          },
          "persistentLogs": [
            {
              "name": "log1",
              "uri": "log1uri"
            },
            {
              "name": "log2",
              "uri": "log2uri"
            }
          ],
          "customData": [
            {
              "key": "key1",
              "value": "value1"
            },
            {
              "key": "key2",
              "value": 2
            }
          ]
        },
        "links": [
          {
            "type": "type1",
            "target": "Invalid-Id"
          },
          {
            "type": "type2",
            "target": "234e5678-e89b-12d3-a456-426655440000"
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "Additional properties are not allowed ('extraProperty' was unexpected)",
      "python_error": "Additional properties are not allowed ('extraProperty' was unexpected)\n\nFailed validating 'additionalProperties' in schema['properties']['meta']['properties']['source']:\n    {'type': 'object',\n     'properties': {'domainId': {'type': 'string'},\n                    'host': {'type': 'string'},\n                    'name': {'type': 'string'},\n                    'serializer': {'type': 'object',\n                                   'properties': {'groupId': {'type': 'string'},\n                                                  'artifactId': {'type': 'string'},\n                                                  'version': {'type': 'string'}},\n                                   'required': ['groupId',\n                                                'artifactId',\n                                                'version'],\n                                   'additionalProperties': False},\n                    'uri': {'type': 'string'}},\n     'additionalProperties': False}\n\nOn instance['meta']['source']:\n    {'domainId': 'd.. (240 more)",
      "data": {
        "meta": {
          "id": "123e4567-e89b-12d3-a456-426655440000",
          "type": "EiffelActivityFinishedEvent",
          "version": "1.1.0",
          "time": 1643723900,
          "tags": [
            "tag1",
            "tag2"
          ],
          "source": {
            "domainId": "domain1",
            "host": "host1",
            "name": "name1",
            "serializer": {
              "groupId": "group1",
              "artifactId": "artifact1",
              "version": "version1"
            },
            "uri": "uri1",
            "extraProperty": "extraValue"
          },
          "security": {
            "sdm": {
              "authorIdentity": "author1",
              "encryptedDigest": "digest1"
            }
          }
        },
        "data": {
          "outcome": {
            "conclusion": "SUCCESSFUL",
            "description": "description1"
          },
          "persistentLogs": [
            {
              "name": "log1",
              "uri": "log1uri"
            },
            {
              "name": "log2",
              "uri": "log2uri",
              "extraProperty": "extraValue"
            }
          ],
          "customData": [
            {
              "key": "key1",
              "value": "value1"
            },
            {
              "key": "key2",
              "value": 2,
              "extraProperty": "extraValue"
            }
          ]
        },
        "links": [
          {
            "type": "type1",
            "target": "123e4567-e89b-12d3-a456-426655440000"
          },
          {
            "type": "type2",
            "target": "234e5678-e89b-12d3-a456-42665544000"
          }
        ]
      }
    }
  ]
}