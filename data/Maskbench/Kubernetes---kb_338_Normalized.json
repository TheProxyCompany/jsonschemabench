{
  "description": "sample Kubernetes/kb_338_Normalized.json",
  "meta": {
    "full_size": 583,
    "stripped_size": 103,
    "features": [
      "items"
    ],
    "raw_features": [
      "properties",
      "type",
      "type:[]",
      "type:array",
      "type:null",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "description": "ExecAction describes a \"run in container\" action.",
    "properties": {
      "command": {
        "description": "Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
        "items": {
          "type": [
            "string",
            "null"
          ]
        },
        "type": [
          "array",
          "null"
        ]
      }
    },
    "type": "object"
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "command": [
          "/bin/sh",
          "-c",
          "echo Hello World!"
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on type keyword with an array of types",
      "valid": false,
      "rust_error": "123 is not of types \"null\", \"string\"",
      "python_error": "123 is not of type 'string', 'null'\n\nFailed validating 'type' in schema['properties']['command']['items']:\n    {'type': ['string', 'null']}\n\nOn instance['command'][1]:\n    123",
      "data": {
        "command": [
          "/bin/sh",
          123,
          "echo Hello World!"
        ]
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "123 is not of types \"null\", \"string\"",
      "python_error": "123 is not of type 'string', 'null'\n\nFailed validating 'type' in schema['properties']['command']['items']:\n    {'type': ['string', 'null']}\n\nOn instance['command'][2]:\n    123",
      "data": {
        "command": [
          "/bin/sh",
          "-c",
          123
        ]
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "-1 is not of types \"null\", \"string\"",
      "python_error": "-1 is not of type 'string', 'null'\n\nFailed validating 'type' in schema['properties']['command']['items']:\n    {'type': ['string', 'null']}\n\nOn instance['command'][1]:\n    -1",
      "data": {
        "command": [
          "/bin/sh",
          -1,
          "echo Hello World!"
        ]
      }
    }
  ]
}