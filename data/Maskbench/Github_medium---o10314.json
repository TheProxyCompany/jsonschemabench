{
  "description": "sample Github_medium/o10314.json",
  "meta": {
    "full_size": 1600,
    "stripped_size": 869,
    "features": [
      "$ref",
      "@minmaxLength",
      "@minmaxProperties",
      "items",
      "pattern"
    ],
    "raw_features": [
      "definitions",
      "minLength",
      "minProperties",
      "properties",
      "required",
      "type",
      "type:array",
      "type:boolean",
      "type:integer",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "definitions": {
      "issue": {
        "description": "GitHub issue title and action comments (optional). Title and comments will be based on rule name in case this property is absent.",
        "properties": {
          "comments": {
            "minProperties": 1,
            "properties": {
              "close": {
                "type": "string"
              },
              "create": {
                "type": "string"
              },
              "reopen": {
                "type": "string"
              },
              "update": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "remind": {
            "type": "boolean"
          },
          "reopen": {
            "type": "boolean"
          },
          "title": {
            "type": "string"
          }
        },
        "required": [
          "title"
        ],
        "type": "object"
      }
    },
    "description": "schema for test case. Failing this schema will cause skipping the test case",
    "properties": {
      "diag": {
        "description": "test diagnostics, includes all information necessary to manage the issue",
        "properties": {
          "issue": {
            "$ref": "#/definitions/issue"
          },
          "message": {
            "description": "not used in GitHub issues",
            "type": "string"
          },
          "messages": {
            "description": "these messages will be used as GitHub issue comments",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "repo": {
            "description": "full repository name, including organisation",
            "pattern": "^(?:[A-Za-z0-9]+[-]?)+[A-Za-z0-9]\\/[A-Za-z0-9_-]+$",
            "type\"": "string"
          },
          "rule": {
            "description": "rule name",
            "pattern": "^[A-Za-z](?:[A-Za-z0-9]+[-]?)+[A-Za-z0-9]$",
            "type": "string"
          },
          "severity": {
            "description": "severity can be used as GitHub issue label",
            "type": "string"
          }
        },
        "required": [
          "repo",
          "rule"
        ],
        "type": "object"
      },
      "id": {
        "description": "test sequential number",
        "minLength": 1,
        "type": "integer"
      },
      "name": {
        "description": "test name, should be unique accross all tests",
        "minLength": 1,
        "type": "string"
      },
      "ok": {
        "description": "test result",
        "type": "boolean"
      }
    },
    "required": [
      "ok",
      "id",
      "name",
      "diag"
    ],
    "type": "object"
  },
  "tests": [
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "id": 1,
        "name": "Example Test",
        "ok": false,
        "diag": {
          "repo": "github-user/example-repo",
          "rule": "example-rule",
          "severity": "high",
          "issue": {
            "title": "Example Issue",
            "comments": {
              "close": "Closing the issue",
              "create": "Creating the issue",
              "reopen": "Reopening the issue",
              "update": "Updating the issue"
            },
            "remind": true,
            "reopen": false
          },
          "message": "This is a test message",
          "messages": [
            "This is the first comment",
            "This is the second comment"
          ]
        }
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "id": 1,
        "name": "Test Case 1",
        "ok": false,
        "diag": {
          "repo": "github-user/repository-name",
          "rule": "rule-name-123",
          "severity": "high",
          "issue": {
            "title": "Test Issue Title",
            "comments": {
              "create": "This is a create comment",
              "update": "This is an update comment"
            },
            "remind": true,
            "reopen": false
          },
          "message": "This is a test message",
          "messages": [
            "This is a test message 1",
            "This is a test message 2"
          ]
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on pattern keyword",
      "valid": false,
      "rust_error": "\"123rule-name\" does not match \"^[A-Za-z](?:[A-Za-z0-9]+[-]?)+[A-Za-z0-9]$\"",
      "python_error": "'123rule-name' does not match '^[A-Za-z](?:[A-Za-z0-9]+[-]?)+[A-Za-z0-9]$'\n\nFailed validating 'pattern' in schema['properties']['diag']['properties']['rule']:\n    {'description': 'rule name',\n     'pattern': '^[A-Za-z](?:[A-Za-z0-9]+[-]?)+[A-Za-z0-9]$',\n     'type': 'string'}\n\nOn instance['diag']['rule']:\n    '123rule-name'",
      "data": {
        "id": 1,
        "name": "Test Case 1",
        "ok": false,
        "diag": {
          "repo": "github-user/repository-name",
          "rule": "123rule-name",
          "severity": "high",
          "issue": {
            "title": "Test Issue Title",
            "comments": {
              "create": "This is a create comment",
              "update": "This is an update comment"
            },
            "remind": true,
            "reopen": false
          },
          "message": "This is a test message",
          "messages": [
            "This is a test message 1",
            "This is a test message 2"
          ]
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on minProperties keyword",
      "valid": false,
      "rust_error": "{} has less than 1 property",
      "python_error": "{} should be non-empty\n\nFailed validating 'minProperties' in schema['properties']['diag']['properties']['issue']['properties']['comments']:\n    {'minProperties': 1,\n     'properties': {'close': {'type': 'string'},\n                    'create': {'type': 'string'},\n                    'reopen': {'type': 'string'},\n                    'update': {'type': 'string'}},\n     'type': 'object'}\n\nOn instance['diag']['issue']['comments']:\n    {}",
      "data": {
        "id": 1,
        "name": "Test Case 1",
        "ok": false,
        "diag": {
          "repo": "github-user/repository-name",
          "rule": "rule-name-123",
          "severity": "high",
          "issue": {
            "title": "Test Issue Title",
            "comments": {},
            "remind": true,
            "reopen": false
          },
          "message": "This is a test message",
          "messages": [
            "This is a test message 1",
            "This is a test message 2"
          ]
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on minLength keyword",
      "valid": false,
      "rust_error": "\"\" is shorter than 1 character",
      "python_error": "'' should be non-empty\n\nFailed validating 'minLength' in schema['properties']['name']:\n    {'description': 'test name, should be unique accross all tests',\n     'minLength': 1,\n     'type': 'string'}\n\nOn instance['name']:\n    ''",
      "data": {
        "id": 1,
        "name": "",
        "ok": false,
        "diag": {
          "repo": "github-user/repository-name",
          "rule": "rule-name-123",
          "severity": "high",
          "issue": {
            "title": "Test Issue Title",
            "comments": {
              "create": "This is a create comment",
              "update": "This is an update comment"
            },
            "remind": true,
            "reopen": false
          },
          "message": "This is a test message",
          "messages": [
            "This is a test message 1",
            "This is a test message 2"
          ]
        }
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"\" is shorter than 1 character",
      "python_error": "'' should be non-empty\n\nFailed validating 'minLength' in schema['properties']['name']:\n    {'description': 'test name, should be unique accross all tests',\n     'minLength': 1,\n     'type': 'string'}\n\nOn instance['name']:\n    ''",
      "data": {
        "id": 1,
        "name": "",
        "ok": false,
        "diag": {
          "repo": "github-user/repository-name",
          "rule": "rule-name-123",
          "severity": "high",
          "issue": {
            "title": "Test Issue Title",
            "comments": {
              "create": "This is a create comment",
              "update": "This is an update comment"
            },
            "remind": true,
            "reopen": false
          },
          "message": "This is a test message",
          "messages": [
            "This is a test message 1",
            "This is a test message 2"
          ]
        }
      }
    }
  ]
}