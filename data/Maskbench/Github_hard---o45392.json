{
  "description": "sample Github_hard/o45392.json",
  "meta": {
    "full_size": 4130,
    "stripped_size": 1648,
    "features": [
      "$ref",
      "additionalProperties",
      "enum",
      "items",
      "oneOf"
    ],
    "raw_features": [
      "_boolSchema",
      "definitions",
      "properties",
      "required",
      "type",
      "type:array",
      "type:boolean",
      "type:number",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "additionalProperties": false,
    "definitions": {
      "fileReplacement": {
        "oneOf": [
          {
            "additionalProperties": false,
            "properties": {
              "replaceWith": {
                "type": "string"
              },
              "src": {
                "type": "string"
              }
            },
            "required": [
              "src",
              "replaceWith"
            ],
            "type": "object"
          },
          {
            "additionalProperties": false,
            "properties": {
              "replace": {
                "type": "string"
              },
              "with": {
                "type": "string"
              }
            },
            "required": [
              "replace",
              "with"
            ],
            "type": "object"
          }
        ]
      }
    },
    "properties": {
      "bundleDependencies": {
        "default": "none",
        "description": "Available on server platform only. Which external dependencies to bundle into the module. By default, all of node_modules will be kept as requires.",
        "enum": [
          "none",
          "all"
        ],
        "type": "string"
      },
      "commonChunk": {
        "default": true,
        "description": "Use a separate bundle containing code used across multiple bundles.",
        "type": "boolean"
      },
      "deleteOutputPath": {
        "default": true,
        "description": "delete-output-path",
        "type": "boolean"
      },
      "evalSourceMap": {
        "default": false,
        "description": "Output in-file eval sourcemaps.",
        "type": "boolean"
      },
      "extractLicenses": {
        "default": true,
        "description": "Extract all licenses in a separate file, in the case of production builds only.",
        "type": "boolean"
      },
      "fileReplacements": {
        "default": [],
        "description": "Replace files with other files in the build.",
        "items": {
          "$ref": "#/definitions/fileReplacement"
        },
        "type": "array"
      },
      "forkTypeChecker": {
        "default": true,
        "description": "Run the TypeScript type checker in a forked process.",
        "type": "boolean"
      },
      "i18nFile": {
        "description": "Localization file to use for i18n.",
        "type": "string"
      },
      "i18nFormat": {
        "description": "Format of the localization file specified with --i18n-file.",
        "type": "string"
      },
      "i18nLocale": {
        "description": "Locale to use for i18n.",
        "type": "string"
      },
      "i18nMissingTranslation": {
        "description": "How to handle missing translations for i18n.",
        "type": "string"
      },
      "lazyModules": {
        "default": [],
        "description": "List of additional NgModule files that will be lazy loaded. Lazy router modules with be discovered automatically.",
        "items": {
          "type": "string"
        },
        "type": "array"
      },
      "main": {
        "description": "The name of the main entry-point file.",
        "type": "string"
      },
      "namedChunks": {
        "default": true,
        "description": "Use file name for lazy loaded chunks.",
        "type": "boolean"
      },
      "optimization": {
        "default": false,
        "description": "Defines the optimization level of the build.",
        "type": "boolean"
      },
      "outputHashing": {
        "default": "none",
        "description": "Define the output filename cache-busting hashing mode.",
        "enum": [
          "none",
          "all",
          "media",
          "bundles"
        ],
        "type": "string"
      },
      "outputPath": {
        "description": "Path where output will be placed.",
        "type": "string"
      },
      "poll": {
        "description": "Enable and define the file watching poll time period in milliseconds.",
        "type": "number"
      },
      "preserveSymlinks": {
        "default": false,
        "description": "Do not use the real path when resolving modules.",
        "type": "boolean"
      },
      "progress": {
        "default": true,
        "description": "Log progress to the console while building.",
        "type": "boolean"
      },
      "showCircularDependencies": {
        "default": true,
        "description": "Show circular dependency warnings on builds.",
        "type": "boolean"
      },
      "sourceMap": {
        "default": true,
        "description": "Output sourcemaps.",
        "type": "boolean"
      },
      "statsJson": {
        "default": false,
        "description": "Generates a 'stats.json' file which can be analyzed using tools such as: #webpack-bundle-analyzer' or https: //webpack.github.io/analyse.",
        "type": "boolean"
      },
      "stylePreprocessorOptions": {
        "additionalProperties": false,
        "description": "Options to pass to style preprocessors",
        "properties": {
          "includePaths": {
            "default": [],
            "description": "Paths to include. Paths will be resolved to project root.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "tsConfig": {
        "default": "tsconfig.app.json",
        "description": "The name of the TypeScript configuration file.",
        "type": "string"
      },
      "vendorChunk": {
        "default": true,
        "description": "Use a separate bundle containing only vendor libraries.",
        "type": "boolean"
      },
      "vendorSourceMap": {
        "default": false,
        "description": "Resolve vendor packages sourcemaps.",
        "type": "boolean"
      },
      "verbose": {
        "default": false,
        "description": "Adds more details to output logging.",
        "type": "boolean"
      },
      "watch": {
        "default": false,
        "description": "Run build when files change.",
        "type": "boolean"
      }
    },
    "required": [
      "outputPath",
      "main",
      "tsConfig"
    ],
    "title": "Angular Webpack Architect Builder Schema"
  },
  "tests": [
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "bundleDependencies": "none",
        "commonChunk": true,
        "deleteOutputPath": true,
        "evalSourceMap": false,
        "extractLicenses": true,
        "fileReplacements": [
          {
            "replaceWith": "environments/environment.prod.ts",
            "src": "environments/environment.ts"
          },
          {
            "replace": "environments/environment.ts",
            "with": "environments/environment.prod.ts"
          }
        ],
        "forkTypeChecker": true,
        "i18nFile": "locale.json",
        "i18nFormat": "json",
        "i18nLocale": "en-US",
        "i18nMissingTranslation": "error",
        "lazyModules": [
          "app.module.ts"
        ],
        "main": "main.ts",
        "namedChunks": true,
        "optimization": false,
        "outputHashing": "none",
        "outputPath": "dist",
        "poll": 1000,
        "preserveSymlinks": false,
        "progress": true,
        "showCircularDependencies": true,
        "sourceMap": true,
        "statsJson": false,
        "stylePreprocessorOptions": {
          "includePaths": [
            "node_modules/bootstrap/scss"
          ]
        },
        "tsConfig": "tsconfig.app.json",
        "vendorChunk": true,
        "vendorSourceMap": false,
        "verbose": false,
        "watch": false
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "bundleDependencies": "none",
        "commonChunk": true,
        "deleteOutputPath": true,
        "evalSourceMap": false,
        "extractLicenses": true,
        "fileReplacements": [
          {
            "replaceWith": "src/environments/environment.prod.ts",
            "src": "src/environments/environment.ts"
          },
          {
            "replace": "src/environments/environment.ts",
            "with": "src/environments/environment.prod.ts"
          }
        ],
        "forkTypeChecker": true,
        "i18nFile": "src/locale/messages.xlf",
        "i18nFormat": "xlf",
        "i18nLocale": "en-US",
        "i18nMissingTranslation": "error",
        "lazyModules": [
          "app.module#AppModule"
        ],
        "main": "main.ts",
        "namedChunks": true,
        "optimization": false,
        "outputHashing": "none",
        "outputPath": "dist",
        "poll": 1000,
        "preserveSymlinks": false,
        "progress": true,
        "showCircularDependencies": true,
        "sourceMap": true,
        "statsJson": false,
        "stylePreprocessorOptions": {
          "includePaths": [
            "src/styles"
          ]
        },
        "tsConfig": "tsconfig.app.json",
        "vendorChunk": true,
        "vendorSourceMap": false,
        "verbose": false,
        "watch": false
      }
    },
    {
      "description": "llama-70b generated negative; focus on oneOf keyword",
      "valid": false,
      "rust_error": "{\"src\":\"src/environments/environment.ts\",\"replaceWith\":\"src/environments/environment.prod.ts\",\"replace\":\"src/environments/environment.ts\",\"with\":\"src/environments/environment.prod.ts\"} is not valid under any of the schemas listed in the 'oneOf' keyword",
      "python_error": "{'src': 'src/environments/environment.ts', 'replaceWith': 'src/environments/environment.prod.ts', 'replace': 'src/environments/environment.ts', 'with': 'src/environments/environment.prod.ts'} is not valid under any of the given schemas\n\nFailed validating 'oneOf' in schema['properties']['fileReplacements']['items']:\n    {'oneOf': [{'additionalProperties': False,\n                'properties': {'replaceWith': {'type': 'string'},\n                               'src': {'type': 'string'}},\n                'required': ['src', 'replaceWith'],\n                'type': 'object'},\n               {'additionalProperties': False,\n                'properties': {'replace': {'type': 'string'},\n                               'with': {'type': 'string'}},\n                'required': ['replace', 'with'],\n                'type': 'object'}]}\n\nOn instance['fileReplacements'][0]:\n    {'src': 'src/environments/environment.ts',\n     'replaceWith': 'src/environments/environment.prod.ts',\n     'replace': 'src/environments/environment.ts',\n     'with': 'src/environments/environment.prod.ts'}",
      "data": {
        "outputPath": "dist",
        "main": "main.ts",
        "tsConfig": "tsconfig.app.json",
        "bundleDependencies": "none",
        "commonChunk": true,
        "deleteOutputPath": true,
        "evalSourceMap": false,
        "extractLicenses": true,
        "fileReplacements": [
          {
            "src": "src/environments/environment.ts",
            "replaceWith": "src/environments/environment.prod.ts",
            "replace": "src/environments/environment.ts",
            "with": "src/environments/environment.prod.ts"
          }
        ],
        "forkTypeChecker": true,
        "i18nFile": "src/locale/messages.xlf",
        "i18nFormat": "xlf",
        "i18nLocale": "en-US",
        "i18nMissingTranslation": "error",
        "lazyModules": [
          "app.module#AppModule"
        ],
        "namedChunks": true,
        "optimization": false,
        "outputHashing": "none",
        "poll": 1000,
        "preserveSymlinks": false,
        "progress": true,
        "showCircularDependencies": true,
        "sourceMap": true,
        "statsJson": false,
        "stylePreprocessorOptions": {
          "includePaths": [
            "src/styles"
          ]
        },
        "vendorChunk": true,
        "vendorSourceMap": false,
        "verbose": false,
        "watch": false
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"invalid\" is not one of [\"none\",\"all\"]",
      "python_error": "'invalid' is not one of ['none', 'all', 'media', 'bundles']\n\nFailed validating 'enum' in schema['properties']['outputHashing']:\n    {'default': 'none',\n     'description': 'Define the output filename cache-busting hashing '\n                    'mode.',\n     'enum': ['none', 'all', 'media', 'bundles'],\n     'type': 'string'}\n\nOn instance['outputHashing']:\n    'invalid'",
      "data": {
        "outputPath": "dist",
        "main": "main.ts",
        "tsConfig": "tsconfig.app.json",
        "bundleDependencies": "invalid",
        "commonChunk": true,
        "deleteOutputPath": true,
        "evalSourceMap": false,
        "extractLicenses": true,
        "fileReplacements": [
          {
            "replace": "src/environments/environment.ts",
            "with": "src/environments/environment.prod.ts"
          },
          {
            "replaceWith": "src/environments/environment.prod.ts",
            "src": "src/environments/environment.ts"
          },
          {
            "src": "src/environments/environment.ts",
            "replaceWith": "src/environments/environment.prod.ts",
            "replace": "src/environments/environment.ts",
            "with": "src/environments/environment.prod.ts"
          }
        ],
        "forkTypeChecker": true,
        "i18nFile": "src/locale/messages.xlf",
        "i18nFormat": "xlf",
        "i18nLocale": "en-US",
        "i18nMissingTranslation": "error",
        "lazyModules": [
          "app.module#AppModule",
          123
        ],
        "namedChunks": true,
        "optimization": false,
        "outputHashing": "invalid",
        "poll": 1000,
        "preserveSymlinks": false,
        "progress": true,
        "showCircularDependencies": true,
        "sourceMap": true,
        "statsJson": false,
        "stylePreprocessorOptions": {
          "includePaths": [
            "src/styles",
            123
          ]
        },
        "vendorChunk": true,
        "vendorSourceMap": false,
        "verbose": false,
        "watch": false
      }
    }
  ]
}