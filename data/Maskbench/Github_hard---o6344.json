{
  "description": "sample Github_hard/o6344.json",
  "meta": {
    "full_size": 4194,
    "stripped_size": 2326,
    "features": [
      "$ref",
      "@siblingKeys",
      "additionalProperties",
      "additionalProperties:object",
      "anyOf",
      "items"
    ],
    "raw_features": [
      "_boolSchema",
      "anyOf:trivial",
      "definitions",
      "properties",
      "type",
      "type:array",
      "type:boolean",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "anyOf": [
      {
        "$ref": "#/definitions/SkaffoldConfig"
      }
    ],
    "definitions": {
      "Artifact": {
        "additionalProperties": false,
        "description": "represents items that need should be built, along with the context in which they should be built.",
        "preferredOrder": [
          "imageName",
          "dockerfilePath",
          "workspace",
          "buildArgs"
        ],
        "properties": {
          "buildArgs": {
            "additionalProperties": {
              "type": "string"
            },
            "default": "{}",
            "type": "object"
          },
          "dockerfilePath": {
            "type": "string"
          },
          "imageName": {
            "type": "string"
          },
          "workspace": {
            "type": "string"
          }
        },
        "x-intellij-html-description": "represents items that need should be built, along with the context in which they should be built."
      },
      "BuildConfig": {
        "anyOf": [
          {
            "additionalProperties": false,
            "preferredOrder": [
              "artifacts",
              "tagPolicy"
            ],
            "properties": {
              "artifacts": {
                "items": {
                  "$ref": "#/definitions/Artifact"
                },
                "type": "array"
              },
              "tagPolicy": {
                "type": "string"
              }
            }
          },
          {
            "additionalProperties": false,
            "preferredOrder": [
              "artifacts",
              "tagPolicy",
              "local"
            ],
            "properties": {
              "artifacts": {
                "items": {
                  "$ref": "#/definitions/Artifact"
                },
                "type": "array"
              },
              "local": {
                "$ref": "#/definitions/LocalBuild"
              },
              "tagPolicy": {
                "type": "string"
              }
            }
          },
          {
            "additionalProperties": false,
            "preferredOrder": [
              "artifacts",
              "tagPolicy",
              "googleCloudBuild"
            ],
            "properties": {
              "artifacts": {
                "items": {
                  "$ref": "#/definitions/Artifact"
                },
                "type": "array"
              },
              "googleCloudBuild": {
                "$ref": "#/definitions/GoogleCloudBuild"
              },
              "tagPolicy": {
                "type": "string"
              }
            }
          }
        ],
        "description": "contains all the configuration for the build steps",
        "x-intellij-html-description": "contains all the configuration for the build steps"
      },
      "DeployConfig": {
        "anyOf": [
          {
            "additionalProperties": false,
            "preferredOrder": [
              "name"
            ],
            "properties": {
              "name": {
                "type": "string"
              }
            }
          },
          {
            "additionalProperties": false,
            "preferredOrder": [
              "name",
              "helm"
            ],
            "properties": {
              "helm": {
                "$ref": "#/definitions/HelmDeploy"
              },
              "name": {
                "type": "string"
              }
            }
          },
          {
            "additionalProperties": false,
            "preferredOrder": [
              "name",
              "kubectl"
            ],
            "properties": {
              "kubectl": {
                "$ref": "#/definitions/KubectlDeploy"
              },
              "name": {
                "type": "string"
              }
            }
          }
        ],
        "description": "contains all the configuration needed by the deploy steps",
        "x-intellij-html-description": "contains all the configuration needed by the deploy steps"
      },
      "GoogleCloudBuild": {
        "additionalProperties": false,
        "preferredOrder": [
          "projectId"
        ],
        "properties": {
          "projectId": {
            "type": "string"
          }
        }
      },
      "HelmDeploy": {
        "additionalProperties": false,
        "preferredOrder": [
          "releases"
        ],
        "properties": {
          "releases": {
            "items": {
              "$ref": "#/definitions/HelmRelease"
            },
            "type": "array"
          }
        }
      },
      "HelmRelease": {
        "additionalProperties": false,
        "preferredOrder": [
          "name",
          "chartPath",
          "valuesFilePath",
          "values",
          "namespace",
          "version"
        ],
        "properties": {
          "chartPath": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "namespace": {
            "type": "string"
          },
          "values": {
            "additionalProperties": {
              "type": "string"
            },
            "default": "{}",
            "type": "object"
          },
          "valuesFilePath": {
            "type": "string"
          },
          "version": {
            "type": "string"
          }
        }
      },
      "KubectlDeploy": {
        "additionalProperties": false,
        "description": "contains the configuration needed for deploying with `kubectl apply`",
        "preferredOrder": [
          "manifests"
        ],
        "properties": {
          "manifests": {
            "items": {
              "$ref": "#/definitions/Manifest"
            },
            "type": "array"
          }
        },
        "x-intellij-html-description": "contains the configuration needed for deploying with <code>kubectl apply</code>"
      },
      "LocalBuild": {
        "additionalProperties": false,
        "description": "contains the fields needed to do a build on the local docker daemon and optionally push to a repository.",
        "preferredOrder": [
          "skipPush"
        ],
        "properties": {
          "skipPush": {
            "type": "boolean"
          }
        },
        "x-intellij-html-description": "contains the fields needed to do a build on the local docker daemon and optionally push to a repository."
      },
      "Manifest": {
        "additionalProperties": false,
        "preferredOrder": [
          "paths",
          "parameters"
        ],
        "properties": {
          "parameters": {
            "additionalProperties": {
              "type": "string"
            },
            "default": "{}",
            "type": "object"
          },
          "paths": {
            "default": "[]",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        }
      },
      "SkaffoldConfig": {
        "additionalProperties": false,
        "description": "top level config object that is parsed from a skaffold.yaml",
        "preferredOrder": [
          "apiVersion",
          "kind",
          "build",
          "deploy"
        ],
        "properties": {
          "apiVersion": {
            "type": "string"
          },
          "build": {
            "$ref": "#/definitions/BuildConfig"
          },
          "deploy": {
            "$ref": "#/definitions/DeployConfig"
          },
          "kind": {
            "type": "string"
          }
        },
        "x-intellij-html-description": "top level config object that is parsed from a skaffold.yaml"
      }
    },
    "type": "object"
  },
  "tests": [
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "apiVersion": "skaffold/v2beta26",
        "build": {
          "artifacts": [
            {
              "buildArgs": {
                "arg1": "value1",
                "arg2": "value2"
              },
              "dockerfilePath": "Dockerfile",
              "imageName": "my-image",
              "workspace": "."
            }
          ],
          "tagPolicy": "gitCommit"
        },
        "deploy": {
          "helm": {
            "releases": [
              {
                "chartPath": "path/to/chart",
                "name": "my-release",
                "namespace": "my-namespace",
                "values": {
                  "key1": "value1",
                  "key2": "value2"
                },
                "valuesFilePath": "path/to/values.yaml",
                "version": "1.0.0"
              }
            ]
          },
          "name": "my-deployment"
        },
        "kind": "Config"
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "apiVersion": "skaffold/v2beta26",
        "build": {
          "artifacts": [
            {
              "buildArgs": {
                "GOOS": "linux",
                "GOARCH": "amd64"
              },
              "dockerfilePath": "Dockerfile",
              "imageName": "my-image",
              "workspace": "."
            }
          ],
          "tagPolicy": "gitCommit"
        },
        "deploy": {
          "helm": {
            "releases": [
              {
                "chartPath": "charts/my-chart",
                "name": "my-release",
                "namespace": "default",
                "valuesFilePath": "values.yaml",
                "version": "1.0.0"
              }
            ]
          },
          "name": "my-deployment"
        },
        "kind": "Config"
      }
    },
    {
      "description": "llama-70b generated negative; focus on anyOf keyword",
      "valid": false,
      "rust_error": "{\"apiVersion\":\"skaffold/v2beta26\",\"build\":{\"artifacts\":[{\"buildArgs\":{\"GOOS\":\"linux\",\"GOARCH\":\"amd64\"},\"dockerfilePath\":\"Dockerfile\",\"imageName\":\"my-image\",\"workspace\":\".\"}],\"tagPolicy\":\"gitCommit\",\"googleCloudBuild\":{\"projectId\":\"my-project\"},\"local\":{\"skipPush\":true}},\"deploy\":{\"name\":\"my-deployment\",\"helm\":{\"releases\":[{\"name\":\"my-release\",\"chartPath\":\"charts/my-chart\",\"valuesFilePath\":\"values.yaml\",\"namespace\":\"default\",\"version\":\"1.0.0\"}]}},\"kind\":\"Config\"} is not valid under any of the schemas listed in the 'anyOf' keyword",
      "python_error": "{'artifacts': [{'buildArgs': {'GOOS': 'linux', 'GOARCH': 'amd64'}, 'dockerfilePath': 'Dockerfile', 'imageName': 'my-image', 'workspace': '.'}], 'tagPolicy': 'gitCommit', 'googleCloudBuild': {'projectId': 'my-project'}, 'local': {'skipPush': True}} is not valid under any of the given schemas\n\nFailed validating 'anyOf' in schema[0]['properties']['build']:\n    {'anyOf': [{'additionalProperties': False,\n                'preferredOrder': ['artifacts', 'tagPolicy'],\n                'properties': {'artifacts': {'items': {'$ref': '#/definitions/Artifact'},\n                                             'type': 'array'},\n                               'tagPolicy': {'type': 'string'}}},\n               {'additionalProperties': False,\n                'preferredOrder': ['artifacts', 'tagPolicy', 'local'],\n                'properties': {'artifacts': {'items': {'$ref': '#/definitions/Artifact'},\n                                             'type': 'array'},\n                               'local': {'$ref': '#/definitions/Local.. (1141 more)",
      "data": {
        "apiVersion": "skaffold/v2beta26",
        "build": {
          "artifacts": [
            {
              "buildArgs": {
                "GOOS": "linux",
                "GOARCH": "amd64"
              },
              "dockerfilePath": "Dockerfile",
              "imageName": "my-image",
              "workspace": "."
            }
          ],
          "tagPolicy": "gitCommit",
          "googleCloudBuild": {
            "projectId": "my-project"
          },
          "local": {
            "skipPush": true
          }
        },
        "deploy": {
          "name": "my-deployment",
          "helm": {
            "releases": [
              {
                "name": "my-release",
                "chartPath": "charts/my-chart",
                "valuesFilePath": "values.yaml",
                "namespace": "default",
                "version": "1.0.0"
              }
            ]
          }
        },
        "kind": "Config"
      }
    },
    {
      "description": "llama-70b generated negative; focus on additionalProperties keyword with an object schema",
      "valid": false,
      "rust_error": "{\"apiVersion\":\"skaffold/v2beta26\",\"build\":{\"artifacts\":[{\"buildArgs\":{\"GOOS\":\"linux\",\"GOARCH\":\"amd64\",\"extraArgument\":\"extraValue\"}}],\"tagPolicy\":\"gitCommit\"},\"deploy\":{\"name\":\"my-deployment\",\"helm\":{\"releases\":[{\"name\":\"my-release\",\"chartPath\":\"charts/my-chart\",\"valuesFilePath\":\"values.yaml\",\"namespace\":\"default\",\"version\":\"1.0.0\",\"unknownProperty\":\"unknownValue\"}]}},\"kind\":\"Config\"} is not valid under any of the schemas listed in the 'anyOf' keyword",
      "python_error": "Additional properties are not allowed ('unknownProperty' was unexpected)\n\nFailed validating 'additionalProperties' in schema[1]['properties']['helm']['properties']['releases']['items']:\n    {'additionalProperties': False,\n     'preferredOrder': ['name',\n                        'chartPath',\n                        'valuesFilePath',\n                        'values',\n                        'namespace',\n                        'version'],\n     'properties': {'chartPath': {'type': 'string'},\n                    'name': {'type': 'string'},\n                    'namespace': {'type': 'string'},\n                    'values': {'additionalProperties': {'type': 'string'},\n                               'default': '{}',\n                               'type': 'object'},\n                    'valuesFilePath': {'type': 'string'},\n                    'version': {'type': 'string'}}}\n\nOn instance['helm']['releases'][0]:\n    {'name': 'my-release',\n     'chartPath': 'charts/my-chart',\n     'valuesFilePath': 'values.yaml',\n     'na.. (85 more)",
      "data": {
        "apiVersion": "skaffold/v2beta26",
        "build": {
          "artifacts": [
            {
              "buildArgs": {
                "GOOS": "linux",
                "GOARCH": "amd64",
                "extraArgument": "extraValue"
              }
            }
          ],
          "tagPolicy": "gitCommit"
        },
        "deploy": {
          "name": "my-deployment",
          "helm": {
            "releases": [
              {
                "name": "my-release",
                "chartPath": "charts/my-chart",
                "valuesFilePath": "values.yaml",
                "namespace": "default",
                "version": "1.0.0",
                "unknownProperty": "unknownValue"
              }
            ]
          }
        },
        "kind": "Config"
      }
    }
  ]
}