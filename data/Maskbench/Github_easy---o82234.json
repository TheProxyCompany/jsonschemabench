{
  "description": "sample Github_easy/o82234.json",
  "meta": {
    "full_size": 761,
    "stripped_size": 330,
    "features": [
      "@minmaxNumber",
      "additionalProperties",
      "enum"
    ],
    "raw_features": [
      "$schema",
      "_boolSchema",
      "minimum",
      "properties",
      "required",
      "type",
      "type:number",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "title": "PersistentVolume",
    "description": "This describes a requirement for persistent, read-only or read-write storage that should be available to the containerapp on runtime. The name of this object MUST be 'persistentVolume'",
    "type": "object",
    "properties": {
      "persistentVolume": {
        "type": "object",
        "required": [
          "name",
          "accessMode",
          "size"
        ],
        "properties": {
          "name": {
            "description": "A name associated with the storage requirement.",
            "type": "string",
            "default": "null"
          },
          "accessMode": {
            "description": "Access mode in which the persitent volume will be available",
            "type": "string",
            "enum": [
              "ReadWrite",
              "ReadOnly"
            ]
          },
          "size": {
            "description": "Size of the required storage.",
            "type": "number",
            "minimum": 0
          }
        }
      }
    },
    "additionalProperties": false
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "persistentVolume": {
          "name": "my-persistent-volume",
          "accessMode": "ReadWrite",
          "size": 10
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on minimum keyword",
      "valid": false,
      "rust_error": "-1 is less than the minimum of 0",
      "python_error": "-1 is less than the minimum of 0\n\nFailed validating 'minimum' in schema['properties']['persistentVolume']['properties']['size']:\n    {'description': 'Size of the required storage.',\n     'type': 'number',\n     'minimum': 0}\n\nOn instance['persistentVolume']['size']:\n    -1",
      "data": {
        "persistentVolume": {
          "name": "my-persistent-volume",
          "accessMode": "ReadWrite",
          "size": -1
        }
      }
    }
  ]
}