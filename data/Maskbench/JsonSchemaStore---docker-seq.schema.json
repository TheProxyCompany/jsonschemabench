{
  "description": "sample JsonSchemaStore/docker-seq.schema.json",
  "meta": {
    "full_size": 3443,
    "stripped_size": 1345,
    "features": [
      "$ref",
      "additionalProperties",
      "enum",
      "items"
    ],
    "raw_features": [
      "$id",
      "$schema",
      "_boolSchema",
      "definitions",
      "properties",
      "type",
      "type:array",
      "type:boolean",
      "type:integer",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$id": "https://example.com/product.schema.json",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "docker-seq",
    "description": "The schema for `docker-seq`",
    "type": "object",
    "additionalProperties": false,
    "properties": {
      "image": {
        "type": "string",
        "description": "The docker image name"
      },
      "workdir": {
        "type": "string",
        "description": "Working directory inside the container"
      },
      "user": {
        "type": "string",
        "description": "Username or UID (format: <name|uid>[:<group|gid>])"
      },
      "local_user": {
        "type": "boolean",
        "description": "Disables the `user` option and runs the container with the hosts uid and gid."
      },
      "tty": {
        "type": "boolean",
        "description": "Allocate a pseudo-TTY"
      },
      "interactive": {
        "type": "boolean",
        "description": "Keep STDIN open even if not attached"
      },
      "pull": {
        "type": "string",
        "description": "Pull image before running (\"always\"|\"missing\"|\"never\") (default \"missing\")",
        "enum": [
          "always",
          "missing",
          "never"
        ]
      },
      "rm": {
        "type": "boolean",
        "description": "Automatically remove the container when it exits"
      },
      "init": {
        "type": "boolean",
        "description": "Run an init inside the container that forwards signals and reaps processes"
      },
      "volumes": {
        "type": "array",
        "description": "Bind mount volumes"
      },
      "publish": {
        "type": "array",
        "description": "Publish a container's port(s) to the host"
      },
      "env": {
        "type": "array",
        "description": "Set environment variables"
      },
      "env_file": {
        "type": "array",
        "description": "Read in files of environment variables"
      },
      "cpus": {
        "type": "string",
        "description": "Number of CPUs"
      },
      "memory": {
        "type": "integer",
        "description": "Memory limit in bytes"
      },
      "entrypoint": {
        "type": "string",
        "description": "Overwrite the default ENTRYPOINT of the image"
      },
      "name": {
        "type": "string",
        "description": "Assign a name to the container"
      },
      "privileged": {
        "type": "boolean",
        "description": "Give extended privileges to this container"
      },
      "network": {
        "type": "string"
      },
      "mount": {
        "type": "array",
        "description": "Attach a filesystem mount to the container"
      },
      "read_only": {
        "type": "boolean",
        "description": "Mount the container's root filesystem as read only"
      },
      "platform": {
        "type": "string",
        "description": "Set platform if server is multi-platform capable"
      },
      "runtime": {
        "type": "string",
        "description": "Runtime to use for this container"
      },
      "security_opt": {
        "type": "array",
        "description": "Security Options"
      },
      "ulimit": {
        "type": "string",
        "description": "Ulimit options"
      },
      "volumes_from": {
        "type": "array",
        "description": "Mount volumes from the specified container(s)"
      },
      "background_task": {
        "type": "array",
        "description": "Task with which to keep the container alive while executing commands"
      },
      "docker_exec_shell": {
        "type": "array",
        "description": "Shell in which to execute each sequence step command"
      },
      "sequence": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/Step"
        }
      }
    },
    "definitions": {
      "Step": {
        "type": "object",
        "description": "One step in the command sequence",
        "additionalProperties": false,
        "properties": {
          "workdir": {
            "type": "string",
            "description": "Working directory inside the container"
          },
          "user": {
            "type": "string",
            "description": "Username or UID (format: <name|uid>[:<group|gid>])"
          },
          "local_user": {
            "type": "boolean",
            "description": "Disables the `user` option and executes these commands with the hosts uid and gid."
          },
          "tty": {
            "type": "boolean",
            "description": "Allocate a pseudo-TTY"
          },
          "privileged": {
            "type": "boolean",
            "description": "Give extended privileges to the commands"
          },
          "interactive": {
            "type": "boolean",
            "description": "Keep STDIN open even if not attached"
          },
          "commands": {
            "type": "array",
            "description": "A list of commands to execute within the container"
          }
        }
      }
    }
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "image": "ubuntu:latest",
        "workdir": "/app",
        "user": "1000:1000",
        "tty": true,
        "interactive": true,
        "pull": "always",
        "rm": true,
        "init": true,
        "volumes": [
          "/host/path:/container/path"
        ],
        "publish": [
          "8080:8080"
        ],
        "env": [
          "VARIABLE=value"
        ],
        "env_file": [
          "/path/to/env/file"
        ],
        "cpus": "2",
        "memory": 1073741824,
        "entrypoint": "/bin/bash",
        "name": "my-container",
        "privileged": true,
        "network": "my-network",
        "mount": [
          "/host/path:/container/path:ro"
        ],
        "read_only": true,
        "platform": "linux/amd64",
        "runtime": "runc",
        "security_opt": [
          "label:disable"
        ],
        "ulimit": "nofile=1024:2048",
        "volumes_from": [
          "my-other-container"
        ],
        "background_task": [
          "/bin/sleep 1000"
        ],
        "docker_exec_shell": [
          "/bin/bash -c"
        ],
        "sequence": [
          {
            "workdir": "/app",
            "user": "1000:1000",
            "local_user": false,
            "tty": true,
            "privileged": true,
            "interactive": true,
            "commands": [
              "echo 'Hello World!'",
              "ls -l"
            ]
          },
          {
            "workdir": "/app",
            "user": "1000:1000",
            "local_user": false,
            "tty": true,
            "privileged": true,
            "interactive": true,
            "commands": [
              "echo 'Goodbye World!'",
              "ls -l"
            ]
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "Additional properties are not allowed ('invalid_key' was unexpected)",
      "python_error": "Additional properties are not allowed ('invalid_key' was unexpected)\n\nFailed validating 'additionalProperties' in schema['properties']['sequence']['items']:\n    {'type': 'object',\n     'description': 'One step in the command sequence',\n     'additionalProperties': False,\n     'properties': {'workdir': {'type': 'string',\n                                'description': 'Working directory inside '\n                                               'the container'},\n                    'user': {'type': 'string',\n                             'description': 'Username or UID (format: '\n                                            '<name|uid>[:<group|gid>])'},\n                    'local_user': {'type': 'boolean',\n                                   'description': 'Disables the `user` '\n                                                  'option and executes '\n                                                  'these commands with the '\n                                                  'hosts uid and gid.'},\n                   .. (1070 more)",
      "data": {
        "image": "ubuntu:latest",
        "workdir": "/app",
        "user": "1000:1000",
        "tty": true,
        "interactive": true,
        "pull": "always",
        "rm": true,
        "init": true,
        "volumes": [
          "/host/path:/container/path"
        ],
        "publish": [
          "8080:8080"
        ],
        "env": [
          "VARIABLE=value"
        ],
        "env_file": [
          "/path/to/env/file"
        ],
        "cpus": "2",
        "memory": 1073741824,
        "entrypoint": "/bin/bash",
        "name": "my-container",
        "privileged": true,
        "network": "my-network",
        "mount": [
          "/host/path:/container/path:ro"
        ],
        "read_only": true,
        "platform": "linux/amd64",
        "runtime": "runc",
        "security_opt": [
          "label:disable"
        ],
        "ulimit": "nofile=1024:2048",
        "volumes_from": [
          "my-other-container"
        ],
        "background_task": [
          "/bin/sleep 1000"
        ],
        "docker_exec_shell": [
          "/bin/bash -c"
        ],
        "sequence": [
          {
            "workdir": "/app",
            "user": "1000:1000",
            "local_user": false,
            "tty": true,
            "privileged": true,
            "interactive": true,
            "commands": [
              "echo 'Hello World!'",
              "ls -l"
            ],
            "invalid_key": "invalid_value"
          },
          {
            "workdir": "/app",
            "user": "1000:1000",
            "local_user": false,
            "tty": true,
            "privileged": true,
            "interactive": true,
            "commands": [
              "echo 'Goodbye World!'",
              "ls -l"
            ]
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "Additional properties are not allowed ('extra_key' was unexpected)",
      "python_error": "Additional properties are not allowed ('extra_key' was unexpected)\n\nFailed validating 'additionalProperties' in schema:\n    {'$id': 'https://example.com/product.schema.json',\n     '$schema': 'http://json-schema.org/draft-07/schema#',\n     'title': 'docker-seq',\n     'description': 'The schema for `docker-seq`',\n     'type': 'object',\n     'additionalProperties': False,\n     'properties': {'image': {'type': 'string',\n                              'description': 'The docker image name'},\n                    'workdir': {'type': 'string',\n                                'description': 'Working directory inside '\n                                               'the container'},\n                    'user': {'type': 'string',\n                             'description': 'Username or UID (format: '\n                                            '<name|uid>[:<group|gid>])'},\n                    'local_user': {'type': 'boolean',\n                                   'description': 'Disables the `user` '\n                       .. (11461 more)",
      "data": {
        "image": "ubuntu:latest",
        "workdir": "/app",
        "user": "1000:1000",
        "tty": true,
        "interactive": true,
        "pull": "always",
        "rm": true,
        "init": true,
        "volumes": [
          "/host/path:/container/path"
        ],
        "publish": [
          "8080:8080"
        ],
        "env": [
          "VARIABLE=value"
        ],
        "env_file": [
          "/path/to/env/file"
        ],
        "cpus": "2",
        "memory": 1073741824,
        "entrypoint": "/bin/bash",
        "name": "my-container",
        "privileged": true,
        "network": "my-network",
        "mount": [
          "/host/path:/container/path:ro"
        ],
        "read_only": true,
        "platform": "linux/amd64",
        "runtime": "runc",
        "security_opt": [
          "label:disable"
        ],
        "ulimit": "nofile=1024:2048",
        "volumes_from": [
          "my-other-container"
        ],
        "background_task": [
          "/bin/sleep 1000"
        ],
        "docker_exec_shell": [
          "/bin/bash -c"
        ],
        "sequence": [
          {
            "workdir": "/app",
            "user": "1000:1000",
            "local_user": false,
            "tty": true,
            "privileged": true,
            "interactive": true,
            "commands": [
              "echo 'Hello World!'",
              "ls -l",
              123,
              null
            ]
          },
          {
            "workdir": "/app",
            "user": "1000:1000",
            "local_user": false,
            "tty": true,
            "privileged": true,
            "interactive": true,
            "commands": [
              "echo 'Goodbye World!'",
              "ls -l"
            ]
          }
        ],
        "extra_key": "extra_value"
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "image": "ubuntu:latest",
        "workdir": "/app",
        "user": "1000:1000",
        "tty": true,
        "interactive": true,
        "pull": "always",
        "rm": true,
        "init": true,
        "volumes": [
          "/host/path:/container/path"
        ],
        "publish": [
          "8080:8080"
        ],
        "env": [
          "VARIABLE=value"
        ],
        "env_file": [
          "/path/to/env/file"
        ],
        "cpus": "2",
        "memory": 1073741824,
        "entrypoint": "/bin/bash",
        "name": "my-container",
        "privileged": true,
        "network": "my-network",
        "mount": [
          {
            "type": "bind",
            "source": "/host/path",
            "target": "/container/path"
          }
        ],
        "read_only": true,
        "platform": "linux/amd64",
        "runtime": "runc",
        "security_opt": [
          "label:disable"
        ],
        "ulimit": "nofile=1024:2048",
        "volumes_from": [
          "my-other-container"
        ],
        "background_task": [
          "/bin/sleep 1000"
        ],
        "docker_exec_shell": [
          "/bin/bash -c"
        ],
        "sequence": [
          {
            "workdir": "/app",
            "user": "1000:1000",
            "local_user": false,
            "tty": true,
            "privileged": true,
            "interactive": true,
            "commands": [
              "echo 'Hello World!'",
              "ls -l"
            ]
          },
          {
            "workdir": "/app",
            "user": "1000:1000",
            "local_user": false,
            "tty": true,
            "privileged": true,
            "interactive": true,
            "commands": [
              "echo 'This is another step!'",
              "pwd"
            ]
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "Additional properties are not allowed ('additional_property' was unexpected)",
      "python_error": "Additional properties are not allowed ('additional_property' was unexpected)\n\nFailed validating 'additionalProperties' in schema:\n    {'$id': 'https://example.com/product.schema.json',\n     '$schema': 'http://json-schema.org/draft-07/schema#',\n     'title': 'docker-seq',\n     'description': 'The schema for `docker-seq`',\n     'type': 'object',\n     'additionalProperties': False,\n     'properties': {'image': {'type': 'string',\n                              'description': 'The docker image name'},\n                    'workdir': {'type': 'string',\n                                'description': 'Working directory inside '\n                                               'the container'},\n                    'user': {'type': 'string',\n                             'description': 'Username or UID (format: '\n                                            '<name|uid>[:<group|gid>])'},\n                    'local_user': {'type': 'boolean',\n                                   'description': 'Disables the `user` '\n             .. (11623 more)",
      "data": {
        "image": "ubuntu:latest",
        "workdir": "/app",
        "user": "1000:1000",
        "tty": true,
        "interactive": true,
        "pull": "always",
        "rm": true,
        "init": true,
        "volumes": [
          "/host/path:/container/path"
        ],
        "publish": [
          "8080:8080"
        ],
        "env": [
          "VARIABLE=value"
        ],
        "env_file": [
          "/path/to/env/file"
        ],
        "cpus": "2",
        "memory": 1073741824,
        "entrypoint": "/bin/bash",
        "name": "my-container",
        "privileged": true,
        "network": "my-network",
        "mount": [
          {
            "type": "bind",
            "source": "/host/path",
            "target": "/container/path"
          }
        ],
        "read_only": true,
        "platform": "linux/amd64",
        "runtime": "runc",
        "security_opt": [
          "label:disable"
        ],
        "ulimit": "nofile=1024:2048",
        "volumes_from": [
          "my-other-container"
        ],
        "background_task": [
          "/bin/sleep 1000"
        ],
        "docker_exec_shell": [
          "/bin/bash -c"
        ],
        "sequence": [
          {
            "workdir": "/app",
            "user": "1000:1000",
            "local_user": false,
            "tty": true,
            "privileged": true,
            "interactive": true,
            "commands": [
              "echo 'Hello World!'",
              "ls -l",
              123,
              null
            ]
          },
          {
            "workdir": "/app",
            "user": "1000:1000",
            "local_user": false,
            "tty": true,
            "privileged": true,
            "interactive": true,
            "commands": [
              "echo 'This is another step!'",
              "pwd"
            ]
          }
        ],
        "additional_property": "corner case to test additionalProperties: false"
      }
    }
  ]
}