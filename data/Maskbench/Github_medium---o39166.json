{
  "description": "sample Github_medium/o39166.json",
  "meta": {
    "full_size": 608,
    "stripped_size": 608,
    "features": [
      "format",
      "format:uri",
      "patternProperties"
    ],
    "raw_features": [
      "$schema",
      "properties",
      "type",
      "type:integer",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "type": "object",
    "properties": {
      "users": {
        "type": "string",
        "format": "uri"
      },
      "tracks": {
        "type": "string",
        "format": "uri"
      },
      "groups": {
        "type": "string",
        "format": "uri"
      },
      "sensors": {
        "type": "string",
        "format": "uri"
      },
      "phenomenons": {
        "type": "string",
        "format": "uri"
      },
      "measurements": {
        "type": "string",
        "format": "uri"
      },
      "schema": {
        "type": "string",
        "format": "uri"
      },
      "termsOfUse": {
        "type": "string",
        "format": "uri"
      },
      "privacyStatements:": {
        "type": "string",
        "format": "uri"
      },
      "statistics": {
        "type": "string",
        "format": "uri"
      },
      "counts": {
        "type": "object",
        "patternProperties": {
          ".+": {
            "type": "integer"
          }
        }
      }
    }
  },
  "tests": [
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "users": "https://example.com/users",
        "tracks": "https://example.com/tracks",
        "groups": "https://example.com/groups",
        "sensors": "https://example.com/sensors",
        "phenomenons": "https://example.com/phenomenons",
        "measurements": "https://example.com/measurements",
        "schema": "https://example.com/schema",
        "termsOfUse": "https://example.com/terms-of-use",
        "privacyStatements": "https://example.com/privacy-statements",
        "statistics": "https://example.com/statistics",
        "counts": {
          "users": 100,
          "tracks": 500,
          "groups": 20,
          "sensors": 1000,
          "phenomenons": 50,
          "measurements": 10000
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on patternProperties keyword",
      "valid": false,
      "rust_error": "\"fifty\" is not of type \"integer\"",
      "python_error": "'fifty' is not of type 'integer'\n\nFailed validating 'type' in schema['properties']['counts']['patternProperties']['.+']:\n    {'type': 'integer'}\n\nOn instance['counts']['phenomenons']:\n    'fifty'",
      "data": {
        "users": "https://example.com/users",
        "tracks": "https://example.com/tracks",
        "groups": "https://example.com/groups",
        "sensors": "https://example.com/sensors",
        "phenomenons": "https://example.com/phenomenons",
        "measurements": "https://example.com/measurements",
        "schema": "https://example.com/schema",
        "termsOfUse": "https://example.com/terms-of-use",
        "privacyStatements": "https://example.com/privacy-statements",
        "statistics": "https://example.com/statistics",
        "counts": {
          "users": 100,
          "tracks": 500,
          "groups": 20,
          "sensors": 1000,
          "phenomenons": "fifty"
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on format keyword",
      "valid": false,
      "rust_error": "\"invalid-uri\" is not a \"uri\"",
      "python_error": "'invalid-uri' is not a 'uri'\n\nFailed validating 'format' in schema['properties']['users']:\n    {'type': 'string', 'format': 'uri'}\n\nOn instance['users']:\n    'invalid-uri'",
      "data": {
        "users": "invalid-uri",
        "tracks": "https://example.com/tracks",
        "groups": "https://example.com/groups",
        "sensors": "https://example.com/sensors",
        "phenomenons": "https://example.com/phenomenons",
        "measurements": "https://example.com/measurements",
        "schema": "https://example.com/schema",
        "termsOfUse": "https://example.com/terms-of-use",
        "privacyStatements": "https://example.com/privacy-statements",
        "statistics": "https://example.com/statistics",
        "counts": {
          "users": 100,
          "tracks": 500,
          "groups": 20,
          "sensors": 1000,
          "phenomenons": 50,
          "measurements": 10000
        }
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"twenty\" is not of type \"integer\"",
      "python_error": "'twenty' is not of type 'integer'\n\nFailed validating 'type' in schema['properties']['counts']['patternProperties']['.+']:\n    {'type': 'integer'}\n\nOn instance['counts']['groups']:\n    'twenty'",
      "data": {
        "users": "https://example.com/users",
        "tracks": "https://example.com/tracks",
        "groups": "https://example.com/groups",
        "sensors": "https://example.com/sensors",
        "phenomenons": "https://example.com/phenomenons",
        "measurements": "https://example.com/measurements",
        "schema": "https://example.com/schema",
        "termsOfUse": "https://example.com/terms-of-use",
        "privacyStatements": "https://example.com/privacy-statements",
        "statistics": "https://example.com/statistics",
        "counts": {
          "users": 100,
          "tracks": 500,
          "groups": "twenty",
          "sensors": 1000,
          "phenomenons": 50,
          "measurements": 10000
        }
      }
    }
  ]
}