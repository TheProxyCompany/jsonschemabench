{
  "description": "sample Github_medium/o23087.json",
  "meta": {
    "full_size": 963,
    "stripped_size": 429,
    "features": [
      "@minmaxInteger",
      "@minmaxLength",
      "const"
    ],
    "raw_features": [
      "$id",
      "$schema",
      "maxLength",
      "minimum",
      "properties",
      "required",
      "type",
      "type:boolean",
      "type:integer",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$id": "https://example.com/person.schema.json",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "Person",
    "description": "A few metadata about some person.",
    "type": "object",
    "required": [
      "firstName",
      "lastName"
    ],
    "properties": {
      "type": {
        "type": "string",
        "const": "person"
      },
      "firstName": {
        "type": "string",
        "description": "\nThe person's first name.\n\nThis description can be a long text with markdown content.\n\n  - a list item\n  - another one\n  "
      },
      "lastName": {
        "type": "string",
        "description": "The person's last name."
      },
      "age": {
        "description": "Age in years which must be equal to or greater than zero.",
        "type": "integer",
        "minimum": 0
      },
      "citizen": {
        "description": "Is this person a citizen of this country.",
        "type": "boolean"
      },
      "description": {
        "description": "A longer text for the description.",
        "type": "string",
        "maxLength": 2000
      },
      "homepage": {
        "description": "A long string also, but display is forced on single line",
        "type": "string",
        "maxLength": 2000,
        "x-display": "single-line"
      }
    }
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "type": "person",
        "firstName": "John",
        "lastName": "Doe",
        "age": 30,
        "citizen": true,
        "description": "This is a longer text for the description of John Doe.",
        "homepage": "https://www.example.com/johndoe"
      }
    },
    {
      "description": "llama-70b generated negative; focus on minimum keyword",
      "valid": false,
      "rust_error": "-1 is less than the minimum of 0",
      "python_error": "-1 is less than the minimum of 0\n\nFailed validating 'minimum' in schema['properties']['age']:\n    {'description': 'Age in years which must be equal to or greater than '\n                    'zero.',\n     'type': 'integer',\n     'minimum': 0}\n\nOn instance['age']:\n    -1",
      "data": {
        "type": "person",
        "firstName": "John",
        "lastName": "Doe",
        "age": -1,
        "citizen": true,
        "description": "This is a longer text for the description of John Doe.",
        "homepage": "https://www.example.com/johndoe"
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "type": "person",
        "firstName": "John",
        "lastName": "Doe",
        "age": 30,
        "citizen": true,
        "description": "John Doe is a software engineer with 5 years of experience in developing scalable and efficient applications.",
        "homepage": "https://johndoe.com",
        "$id": "https://example.com/person.schema.json"
      }
    },
    {
      "description": "llama-70b generated negative; focus on minimum keyword",
      "valid": false,
      "rust_error": "-1 is less than the minimum of 0",
      "python_error": "-1 is less than the minimum of 0\n\nFailed validating 'minimum' in schema['properties']['age']:\n    {'description': 'Age in years which must be equal to or greater than '\n                    'zero.',\n     'type': 'integer',\n     'minimum': 0}\n\nOn instance['age']:\n    -1",
      "data": {
        "type": "person",
        "firstName": "John",
        "lastName": "Doe",
        "age": -1,
        "citizen": true,
        "description": "John Doe is a software engineer with 5 years of experience in developing scalable and efficient applications.",
        "homepage": "https://johndoe.com",
        "$id": "https://example.com/person.schema.json"
      }
    }
  ]
}