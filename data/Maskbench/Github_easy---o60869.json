{
  "description": "sample Github_easy/o60869.json",
  "meta": {
    "full_size": 404,
    "stripped_size": 229,
    "features": [
      "additionalProperties"
    ],
    "raw_features": [
      "$schema",
      "_boolSchema",
      "properties",
      "required",
      "type",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "title": "avalon-core:representation-1.0",
    "description": "The inverse of an instance",
    "type": "object",
    "additionalProperties": true,
    "required": [
      "schema",
      "format",
      "path"
    ],
    "properties": {
      "schema": {
        "type": "string"
      },
      "format": {
        "description": "File extension, including '.'",
        "type": "string"
      },
      "path": {
        "description": "Unformatted path to version.",
        "type": "string"
      }
    }
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "schema": "http://example.com/schema",
        "format": ".pdf",
        "path": "/path/to/version"
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "123 is not of type \"string\"",
      "python_error": "123 is not of type 'string'\n\nFailed validating 'type' in schema['properties']['schema']:\n    {'type': 'string'}\n\nOn instance['schema']:\n    123",
      "data": {
        "schema": 123,
        "format": ".pdf",
        "path": "/path/to/version"
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "schema": "https://example.com/schema",
        "format": ".pdf",
        "path": "/versions/1"
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "null is not of type \"string\"",
      "python_error": "None is not of type 'string'\n\nFailed validating 'type' in schema['properties']['path']:\n    {'description': 'Unformatted path to version.', 'type': 'string'}\n\nOn instance['path']:\n    None",
      "data": {
        "schema": "https://example.com/schema",
        "format": ".pdf",
        "path": null
      }
    }
  ]
}