{
  "description": "sample Github_easy/o79498.json",
  "meta": {
    "full_size": 404,
    "stripped_size": 404,
    "features": [
      "additionalProperties",
      "format",
      "format:uri",
      "items"
    ],
    "raw_features": [
      "$schema",
      "_boolSchema",
      "properties",
      "type",
      "type:array",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "type": "object",
    "properties": {
      "entityID": {
        "type": "string"
      },
      "nameID": {
        "type": "string"
      },
      "tas.personal.givenName": {
        "type": "string"
      },
      "tas.personal.familyName": {
        "type": "string"
      },
      "tas.personal.email": {
        "type": "string"
      },
      "tas.personal.image": {
        "type": "string",
        "format": "uri"
      },
      "tas.roles": {
        "type": "array",
        "items": {
          "type": "string"
        }
      }
    },
    "additionalProperties": false
  },
  "tests": [
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "entityID": "example-entity-id",
        "nameID": "example-name-id",
        "tas.personal.givenName": "John",
        "tas.personal.familyName": "Doe",
        "tas.personal.email": "john.doe@example.com",
        "tas.personal.image": "https://example.com/image.jpg",
        "tas.roles": [
          "admin",
          "moderator"
        ]
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "entityID": "example-entity-id",
        "nameID": "example-name-id",
        "tas.personal.givenName": "John",
        "tas.personal.familyName": "Doe",
        "tas.personal.email": "john.doe@example.com",
        "tas.personal.image": "https://example.com/image.jpg",
        "tas.roles": [
          "admin",
          "user"
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on format keyword",
      "valid": false,
      "rust_error": "\" invalid-uri\" is not a \"uri\"",
      "python_error": "' invalid-uri' is not a 'uri'\n\nFailed validating 'format' in schema['properties']['tas.personal.image']:\n    {'type': 'string', 'format': 'uri'}\n\nOn instance['tas.personal.image']:\n    ' invalid-uri'",
      "data": {
        "entityID": "example-entity-id",
        "nameID": "example-name-id",
        "tas.personal.givenName": "John",
        "tas.personal.familyName": "Doe",
        "tas.personal.email": "john.doe@example.com",
        "tas.personal.image": " invalid-uri",
        "tas.roles": [
          "admin",
          "user"
        ]
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "123 is not of type \"string\"",
      "python_error": "123 is not of type 'string'\n\nFailed validating 'type' in schema['properties']['tas.roles']['items']:\n    {'type': 'string'}\n\nOn instance['tas.roles'][1]:\n    123",
      "data": {
        "entityID": "example-entity-id",
        "nameID": "example-name-id",
        "tas.personal.givenName": "John",
        "tas.personal.familyName": "Doe",
        "tas.personal.email": "john.doe@example.com",
        "tas.personal.image": "ftp://example.com/image.jpg",
        "tas.roles": [
          "admin",
          123
        ]
      }
    }
  ]
}