{
  "description": "sample Github_easy/o74410.json",
  "meta": {
    "full_size": 458,
    "stripped_size": 458,
    "features": [
      "@minmaxItems",
      "additionalProperties",
      "items"
    ],
    "raw_features": [
      "$schema",
      "_boolSchema",
      "minItems",
      "properties",
      "required",
      "type",
      "type:array",
      "type:boolean",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "type": "array",
    "items": {
      "type": "object",
      "required": [
        "description",
        "schema",
        "tests"
      ],
      "properties": {
        "description": {
          "type": "string"
        },
        "schema": {},
        "tests": {
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "description",
              "data",
              "valid"
            ],
            "properties": {
              "description": {
                "type": "string"
              },
              "data": {},
              "valid": {
                "type": "boolean"
              }
            },
            "additionalProperties": false
          },
          "minItems": 1
        }
      },
      "additionalProperties": false,
      "minItems": 1
    }
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": [
        {
          "description": "Example schema test",
          "schema": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "age": {
                "type": "integer"
              }
            },
            "required": [
              "name",
              "age"
            ]
          },
          "tests": [
            {
              "description": "Valid data",
              "data": {
                "name": "John Doe",
                "age": 30
              },
              "valid": true
            },
            {
              "description": "Invalid data (missing name)",
              "data": {
                "age": 30
              },
              "valid": false
            },
            {
              "description": "Invalid data (invalid age)",
              "data": {
                "name": "John Doe",
                "age": "thirty"
              },
              "valid": false
            }
          ]
        }
      ]
    },
    {
      "description": "llama-70b generated negative; focus on minItems keyword",
      "valid": false,
      "rust_error": "{\"description\":\"Example schema test\",\"schema\":{\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\"},\"age\":{\"type\":\"integer\"}},\"required\":[\"name\",\"age\"]},\"tests\":[]} is not of type \"array\"",
      "python_error": "{'description': 'Example schema test', 'schema': {'type': 'object', 'properties': {'name': {'type': 'string'}, 'age': {'type': 'integer'}}, 'required': ['name', 'age']}, 'tests': []} is not of type 'array'\n\nFailed validating 'type' in schema:\n    {'$schema': 'http://json-schema.org/draft-04/schema#',\n     'type': 'array',\n     'items': {'type': 'object',\n               'required': ['description', 'schema', 'tests'],\n               'properties': {'description': {'type': 'string'},\n                              'schema': {},\n                              'tests': {'type': 'array',\n                                        'items': {'type': 'object',\n                                                  'required': ['description',\n                                                               'data',\n                                                               'valid'],\n                                                  'properties': {'description': {'type': 'string'},\n                                                .. (614 more)",
      "data": {
        "description": "Example schema test",
        "schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "age": {
              "type": "integer"
            }
          },
          "required": [
            "name",
            "age"
          ]
        },
        "tests": []
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "{\"description\":\"Example schema test\",\"schema\":{\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\"},\"age\":{\"type\":\"integer\"}},\"required\":[\"name\",\"age\"]},\"tests\":[{\"description\":\"Valid data\",\"data\":{\"name\":\"John Doe\",\"age\":30},\"valid\":true,\"extraProperty\":\"Invalid\"},{\"description\":\"Invalid data (missing name)\",\"data\":{\"age\":30},\"valid\":false},{\"description\":\"Invalid data (invalid age)\",\"data\":{\"name\":\"John Doe\",\"age\":\"thirty\"},\"valid\":false}]} is not of type \"array\"",
      "python_error": "{'description': 'Example schema test', 'schema': {'type': 'object', 'properties': {'name': {'type': 'string'}, 'age': {'type': 'integer'}}, 'required': ['name', 'age']}, 'tests': [{'description': 'Valid data', 'data': {'name': 'John Doe', 'age': 30}, 'valid': True, 'extraProperty': 'Invalid'}, {'description': 'Invalid data (missing name)', 'data': {'age': 30}, 'valid': False}, {'description': 'Invalid data (invalid age)', 'data': {'name': 'John Doe', 'age': 'thirty'}, 'valid': False}]} is not of type 'array'\n\nFailed validating 'type' in schema:\n    {'$schema': 'http://json-schema.org/draft-04/schema#',\n     'type': 'array',\n     'items': {'type': 'object',\n               'required': ['description', 'schema', 'tests'],\n               'properties': {'description': {'type': 'string'},\n                              'schema': {},\n                              'tests': {'type': 'array',\n                                        'items': {'type': 'object',\n                                                  'required': .. (1372 more)",
      "data": {
        "description": "Example schema test",
        "schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "age": {
              "type": "integer"
            }
          },
          "required": [
            "name",
            "age"
          ]
        },
        "tests": [
          {
            "description": "Valid data",
            "data": {
              "name": "John Doe",
              "age": 30
            },
            "valid": true,
            "extraProperty": "Invalid"
          },
          {
            "description": "Invalid data (missing name)",
            "data": {
              "age": 30
            },
            "valid": false
          },
          {
            "description": "Invalid data (invalid age)",
            "data": {
              "name": "John Doe",
              "age": "thirty"
            },
            "valid": false
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "{\"description\":\"Example schema test\",\"schema\":{\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\"},\"age\":{\"type\":\"integer\"}},\"required\":[\"name\",\"age\"]},\"tests\":[{\"description\":\"Valid data\",\"data\":{\"name\":\"John Doe\",\"age\":30},\"valid\":true,\"extra\":\"property\"}]} is not of type \"array\"",
      "python_error": "{'description': 'Example schema test', 'schema': {'type': 'object', 'properties': {'name': {'type': 'string'}, 'age': {'type': 'integer'}}, 'required': ['name', 'age']}, 'tests': [{'description': 'Valid data', 'data': {'name': 'John Doe', 'age': 30}, 'valid': True, 'extra': 'property'}]} is not of type 'array'\n\nFailed validating 'type' in schema:\n    {'$schema': 'http://json-schema.org/draft-04/schema#',\n     'type': 'array',\n     'items': {'type': 'object',\n               'required': ['description', 'schema', 'tests'],\n               'properties': {'description': {'type': 'string'},\n                              'schema': {},\n                              'tests': {'type': 'array',\n                                        'items': {'type': 'object',\n                                                  'required': ['description',\n                                                               'data',\n                                                               'valid'],\n                                          .. (874 more)",
      "data": {
        "description": "Example schema test",
        "schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "age": {
              "type": "integer"
            }
          },
          "required": [
            "name",
            "age"
          ]
        },
        "tests": [
          {
            "description": "Valid data",
            "data": {
              "name": "John Doe",
              "age": 30
            },
            "valid": true,
            "extra": "property"
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "{\"description\":\"Example schema test\",\"schema\":{\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\"},\"age\":{\"type\":\"integer\"}},\"required\":[\"name\",\"age\"]},\"tests\":[{\"description\":\"Valid data\",\"data\":{\"name\":\"John Doe\",\"age\":30},\"valid\":true,\"extraProperty\":\"extraValue\"}]} is not of type \"array\"",
      "python_error": "{'description': 'Example schema test', 'schema': {'type': 'object', 'properties': {'name': {'type': 'string'}, 'age': {'type': 'integer'}}, 'required': ['name', 'age']}, 'tests': [{'description': 'Valid data', 'data': {'name': 'John Doe', 'age': 30}, 'valid': True, 'extraProperty': 'extraValue'}]} is not of type 'array'\n\nFailed validating 'type' in schema:\n    {'$schema': 'http://json-schema.org/draft-04/schema#',\n     'type': 'array',\n     'items': {'type': 'object',\n               'required': ['description', 'schema', 'tests'],\n               'properties': {'description': {'type': 'string'},\n                              'schema': {},\n                              'tests': {'type': 'array',\n                                        'items': {'type': 'object',\n                                                  'required': ['description',\n                                                               'data',\n                                                               'valid'],\n                                .. (894 more)",
      "data": {
        "description": "Example schema test",
        "schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "age": {
              "type": "integer"
            }
          },
          "required": [
            "name",
            "age"
          ]
        },
        "tests": [
          {
            "description": "Valid data",
            "data": {
              "name": "John Doe",
              "age": 30
            },
            "valid": true,
            "extraProperty": "extraValue"
          }
        ]
      }
    }
  ]
}