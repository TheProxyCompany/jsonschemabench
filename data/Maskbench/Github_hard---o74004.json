{
  "description": "sample Github_hard/o74004.json",
  "meta": {
    "full_size": 3795,
    "stripped_size": 1662,
    "features": [
      "items",
      "pattern"
    ],
    "raw_features": [
      "$schema",
      "id",
      "properties",
      "required",
      "type",
      "type:array",
      "type:boolean",
      "type:integer",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "description": "JSON Schema for process data of a traffic controller.",
    "id": "http://schlothauer.de/schemas/lsa-process-data.json",
    "properties": {
      "detectorFlanks": {
        "description": "Detector flank occurences for the given timestamp offset. The encoding format for a detector flank is '<ObjNr>(+|-)<FractionalSeconds>'. The +/- part indicates a rising/falling flank. FractionalSeconds is the millisecond part of the given timestamp where flank occured. Example: ['2+100','2-900','4+700'].",
        "items": {
          "properties": {
            "frac": {
              "description": "fractional seconds",
              "type": "integer"
            },
            "name": {
              "description": "Name of the detector (optional).",
              "type": "string"
            },
            "nr": {
              "type": "integer"
            }
          },
          "type": "object"
        },
        "type": "array"
      },
      "domainUUID": {
        "description": "RFC 4122 compliant universally unique identifier (UUID) for identifying the domain of the traffic controller.",
        "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
        "type": "string"
      },
      "permissions": {
        "items": {
          "_format": "permission",
          "type": "string"
        },
        "type": "array",
        "_uniqueItems": true
      },
      "programNr": {
        "description": "Number of the signal program; only if changed",
        "type": "integer"
      },
      "signalChanges": {
        "description": "Signal changes for the given timestamp offset.",
        "items": {
          "properties": {
            "code": {
              "description": "OCIT signal code",
              "type": "integer"
            },
            "name": {
              "description": "Name of the signal group (optional).",
              "type": "string"
            },
            "nr": {
              "type": "integer"
            }
          },
          "required": [
            "nr",
            "code"
          ],
          "type": "object"
        },
        "type": "array"
      },
      "telegrams": {
        "description": "Array with public transport telegrams.",
        "items": {
          "description": "Public transport telegram.",
          "properties": {
            "abw": {
              "description": "Fahrplanabweichung.",
              "type": "integer"
            },
            "amliProperties": {
              "description": "OevAmliTelegramm extension.",
              "properties": {
                "fahrzeit": {
                  "description": "Bei Abmeldung die echte Fahrzeit des OV von Anmeldung bis Abmeldung. Bei Anmeldung die theoretisch (berechnete) Fahrzeit des OV von Anmeldung bis Abmeldung (TWF).",
                  "type": "integer"
                },
                "gewPhase": {
                  "description": "Gewuenschte Phase (UE).",
                  "type": "integer"
                },
                "gruenAnfang": {
                  "description": "Gruenanfang der OV-Signalgruppe (GNA).",
                  "type": "integer"
                },
                "gruenEnde": {
                  "description": "Gruenende der OV-Signalgruppe (GNE).",
                  "type": "integer"
                },
                "laufPhase": {
                  "description": "Laufende Phase (PH).",
                  "type": "integer"
                },
                "modifikation": {
                  "description": "gibt an, ob OEPNV Modifikation durch Zentrale aktiv ist.",
                  "type": "boolean"
                },
                "relKnoten": {
                  "description": "relative UnitNr des beeinflussten Knotens.",
                  "type": "integer"
                },
                "signalplan": {
                  "description": "Laufender Signalplan (SP).",
                  "type": "integer"
                },
                "zeitschalter": {
                  "description": "Zeitschalterwert (TX).",
                  "type": "integer"
                }
              },
              "type": "object"
            },
            "kurs": {
              "type": "integer"
            },
            "linie": {
              "description": "Number of the PT line.",
              "type": "integer"
            },
            "mpNr": {
              "description": "Number of the PT detection point.",
              "type": "integer"
            },
            "prio": {
              "description": "Priority.",
              "type": "integer"
            },
            "richtung": {
              "description": "Manual direction.",
              "type": "integer"
            },
            "route": {
              "type": "integer"
            },
            "zuglaenge": {
              "description": "Vehicle length.",
              "type": "integer"
            }
          },
          "required": [
            "mpNr",
            "linie",
            "kurs",
            "route",
            "prio",
            "zuglaenge",
            "richtung",
            "abw"
          ],
          "type": "object"
        },
        "type": "array"
      },
      "timestamp": {
        "_format": "date-time",
        "description": "RFC 3339 compliant timestamp without fractional seconds. Example: '2017-04-05T12:30:00+01:00'.",
        "type": "string"
      },
      "tx": {
        "description": "Cycle second; starting with 0",
        "type": "integer"
      },
      "unitNr": {
        "description": "Unit number of the traffic controller. The unit number must be unique per domain.",
        "type": "integer"
      },
      "variables": {
        "items": {
          "properties": {
            "name": {
              "description": "Variable name.",
              "type": "string"
            },
            "value": {
              "description": "Variable value.",
              "type": "string"
            }
          },
          "required": [
            "name",
            "value"
          ],
          "type": "object"
        },
        "type": "array"
      }
    },
    "required": [
      "domainUUID",
      "unitNr",
      "timestamp",
      "tx"
    ],
    "type": "object"
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "detectorFlanks": [
          {
            "frac": 100,
            "name": "Detector 1",
            "nr": 2
          },
          {
            "frac": 900,
            "name": "Detector 2",
            "nr": 2
          },
          {
            "frac": 700,
            "name": "Detector 3",
            "nr": 4
          }
        ],
        "domainUUID": "123e4567-e89b-12d3-a456-426655440000",
        "permissions": [
          "permission1",
          "permission2"
        ],
        "programNr": 1,
        "signalChanges": [
          {
            "code": 1,
            "name": "Signal Group 1",
            "nr": 1
          },
          {
            "code": 2,
            "name": "Signal Group 2",
            "nr": 2
          }
        ],
        "telegrams": [
          {
            "abw": 10,
            "amliProperties": {
              "fahrzeit": 100,
              "gewPhase": 1,
              "gruenAnfang": 10,
              "gruenEnde": 20,
              "laufPhase": 1,
              "modifikation": true,
              "relKnoten": 1,
              "signalplan": 1,
              "zeitschalter": 10
            },
            "kurs": 1,
            "linie": 1,
            "mpNr": 1,
            "prio": 1,
            "richtung": 1,
            "route": 1,
            "zuglaenge": 10
          }
        ],
        "timestamp": "2022-01-01T12:00:00+01:00",
        "tx": 0,
        "unitNr": 1,
        "variables": [
          {
            "name": "Variable 1",
            "value": "Value 1"
          },
          {
            "name": "Variable 2",
            "value": "Value 2"
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on pattern keyword",
      "valid": false,
      "rust_error": "\"123e4567-e89b-12d3-a456-42665544000\" does not match \"^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$\"",
      "python_error": "'123e4567-e89b-12d3-a456-42665544000' does not match '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'\n\nFailed validating 'pattern' in schema['properties']['domainUUID']:\n    {'description': 'RFC 4122 compliant universally unique identifier '\n                    '(UUID) for identifying the domain of the traffic '\n                    'controller.',\n     'pattern': '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$',\n     'type': 'string'}\n\nOn instance['domainUUID']:\n    '123e4567-e89b-12d3-a456-42665544000'",
      "data": {
        "detectorFlanks": [
          {
            "frac": 100,
            "name": "Detector 1",
            "nr": 2
          },
          {
            "frac": 900,
            "name": "Detector 2",
            "nr": 2
          },
          {
            "frac": 700,
            "name": "Detector 3",
            "nr": 4
          }
        ],
        "domainUUID": "123e4567-e89b-12d3-a456-42665544000",
        "permissions": [
          "permission1",
          "permission2"
        ],
        "programNr": 1,
        "signalChanges": [
          {
            "code": 1,
            "name": "Signal Group 1",
            "nr": 1
          },
          {
            "code": 2,
            "name": "Signal Group 2",
            "nr": 2
          }
        ],
        "telegrams": [
          {
            "abw": 10,
            "amliProperties": {
              "fahrzeit": 100,
              "gewPhase": 1,
              "gruenAnfang": 10,
              "gruenEnde": 20,
              "laufPhase": 1,
              "modifikation": true,
              "relKnoten": 1,
              "signalplan": 1,
              "zeitschalter": 10
            },
            "kurs": 1,
            "linie": 1,
            "mpNr": 1,
            "prio": 1,
            "richtung": 1,
            "route": 1,
            "zuglaenge": 10
          }
        ],
        "timestamp": "2022-01-01T12:00:00+01:00",
        "tx": 0,
        "unitNr": 1,
        "variables": [
          {
            "name": "Variable 1",
            "value": "Value 1"
          },
          {
            "name": "Variable 2",
            "value": "Value 2"
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"123e4567-e89b-12d3-a456-42665544000\" does not match \"^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$\"",
      "python_error": "'tx' is a required property\n\nFailed validating 'required' in schema:\n    {'$schema': 'http://json-schema.org/draft-04/schema#',\n     'description': 'JSON Schema for process data of a traffic controller.',\n     'id': 'http://schlothauer.de/schemas/lsa-process-data.json',\n     'properties': {'detectorFlanks': {'description': 'Detector flank '\n                                                      'occurences for the '\n                                                      'given timestamp '\n                                                      'offset. The '\n                                                      'encoding format for '\n                                                      'a detector flank is '\n                                                      \"'<ObjNr>(+|-)<FractionalSeconds>'. \"\n                                                      'The +/- part '\n                                                      'indicates a '\n                                                      'rising/falling '\n      .. (19866 more)",
      "data": {
        "detectorFlanks": [
          {
            "frac": 100,
            "name": "Detector 1",
            "nr": 2
          },
          {
            "frac": 900,
            "name": "Detector 2",
            "nr": 2
          },
          {
            "frac": 700,
            "name": "Detector 3",
            "nr": 4
          }
        ],
        "domainUUID": "123e4567-e89b-12d3-a456-42665544000",
        "Invalid UUID, missing last 3 characters": "permissions",
        "programNr": 1,
        "signalChanges": [
          {
            "code": 1,
            "name": "Signal Group 1",
            "nr": 1
          },
          {
            "code": 2,
            "name": "Signal Group 2",
            "nr": 2
          }
        ],
        "telegrams": [
          {
            "abw": 10,
            "amliProperties": {
              "fahrzeit": 100,
              "gewPhase": 1,
              "gruenAnfang": 10,
              "gruenEnde": 20,
              "laufPhase": 1,
              "modifikation": true,
              "relKnoten": 1,
              "signalplan": 1,
              "zeitschalter": 10
            },
            "kurs": 1,
            "linie": 1,
            "mpNr": 1,
            "prio": 1,
            "richtung": 1,
            "route": 1,
            "zuglaenge": 10
          }
        ],
        "timestamp": "2022-01-01T12:00:00+01",
        "Invalid timestamp, missing seconds": "tx",
        "unitNr": 1,
        "variables": [
          {
            "name": "Variable 1",
            "value": "Value 1"
          },
          {
            "name": "Variable 2",
            "value": "Value 2"
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"123e4567-e89b-12d3-a456-42665544000\" does not match \"^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$\"",
      "python_error": "'123e4567-e89b-12d3-a456-42665544000' does not match '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'\n\nFailed validating 'pattern' in schema['properties']['domainUUID']:\n    {'description': 'RFC 4122 compliant universally unique identifier '\n                    '(UUID) for identifying the domain of the traffic '\n                    'controller.',\n     'pattern': '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$',\n     'type': 'string'}\n\nOn instance['domainUUID']:\n    '123e4567-e89b-12d3-a456-42665544000'",
      "data": {
        "detectorFlanks": [
          {
            "frac": 100,
            "name": "Detector 1",
            "nr": 2
          },
          {
            "frac": 900,
            "name": "Detector 2",
            "nr": 2
          },
          {
            "frac": 700,
            "name": "Detector 3",
            "nr": 4
          }
        ],
        "domainUUID": "123e4567-e89b-12d3-a456-42665544000",
        "permissions": [
          "permission1",
          "permission2"
        ],
        "programNr": 1,
        "signalChanges": [
          {
            "code": 1,
            "name": "Signal Group 1",
            "nr": 1
          },
          {
            "code": 2,
            "name": "Signal Group 2",
            "nr": 2
          }
        ],
        "telegrams": [
          {
            "abw": 10,
            "amliProperties": {
              "fahrzeit": 100,
              "gewPhase": 1,
              "gruenAnfang": 10,
              "gruenEnde": 20,
              "laufPhase": 1,
              "modifikation": true,
              "relKnoten": 1,
              "signalplan": 1,
              "zeitschalter": 10
            },
            "kurs": 1,
            "linie": 1,
            "mpNr": 1,
            "prio": 1,
            "richtung": 1,
            "route": 1,
            "zuglaenge": 10
          }
        ],
        "timestamp": "2022-01-01T12:00:00+01",
        "tx": 0,
        "unitNr": 1,
        "variables": [
          {
            "name": "Variable 1",
            "value": "Value 1"
          },
          {
            "name": "Variable 2",
            "value": "Value 2"
          }
        ]
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "detectorFlanks": [
          {
            "frac": 100,
            "name": "Detector 1",
            "nr": 1
          },
          {
            "frac": 200,
            "name": "Detector 2",
            "nr": 2
          }
        ],
        "domainUUID": "123e4567-e89b-12d3-a456-426655440000",
        "permissions": [
          "permission1",
          "permission2"
        ],
        "programNr": 1,
        "signalChanges": [
          {
            "code": 1,
            "name": "Signal Group 1",
            "nr": 1
          },
          {
            "code": 2,
            "name": "Signal Group 2",
            "nr": 2
          }
        ],
        "telegrams": [
          {
            "abw": 1,
            "amliProperties": {
              "fahrzeit": 100,
              "gewPhase": 1,
              "gruenAnfang": 100,
              "gruenEnde": 200,
              "laufPhase": 1,
              "modifikation": true,
              "relKnoten": 1,
              "signalplan": 1,
              "zeitschalter": 100
            },
            "kurs": 1,
            "linie": 1,
            "mpNr": 1,
            "prio": 1,
            "richtung": 1,
            "route": 1,
            "zuglaenge": 10
          }
        ],
        "timestamp": "2022-01-01T12:00:00+01:00",
        "tx": 0,
        "unitNr": 1,
        "variables": [
          {
            "name": "variable1",
            "value": "value1"
          },
          {
            "name": "variable2",
            "value": "value2"
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"InvalidUUID\" does not match \"^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$\"",
      "python_error": "'InvalidUUID' does not match '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'\n\nFailed validating 'pattern' in schema['properties']['domainUUID']:\n    {'description': 'RFC 4122 compliant universally unique identifier '\n                    '(UUID) for identifying the domain of the traffic '\n                    'controller.',\n     'pattern': '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$',\n     'type': 'string'}\n\nOn instance['domainUUID']:\n    'InvalidUUID'",
      "data": {
        "detectorFlanks": [
          {
            "frac": 100,
            "name": "Detector 1",
            "nr": 1
          },
          {
            "frac": 200,
            "name": "Detector 2",
            "nr": 2
          }
        ],
        "domainUUID": "InvalidUUID",
        "permissions": [
          "permission1",
          "permission1"
        ],
        "programNr": 1,
        "signalChanges": [
          {
            "code": 1,
            "name": "Signal Group 1",
            "nr": 1
          },
          {
            "code": 2,
            "nr": 2
          }
        ],
        "telegrams": [
          {
            "abw": 1,
            "amliProperties": {
              "fahrzeit": 100,
              "gewPhase": 1,
              "gruenAnfang": 100,
              "gruenEnde": 200,
              "laufPhase": 1,
              "modifikation": true,
              "relKnoten": 1,
              "signalplan": 1,
              "zeitschalter": 100
            },
            "kurs": 1,
            "linie": 1,
            "mpNr": 1,
            "prio": 1,
            "richtung": 1,
            "route": 1,
            "zuglaenge": 10
          }
        ],
        "timestamp": "InvalidDate",
        "tx": 60,
        "unitNr": 1,
        "variables": [
          {
            "name": "variable1",
            "value": "value1"
          },
          {
            "value": "value2"
          }
        ]
      }
    }
  ]
}