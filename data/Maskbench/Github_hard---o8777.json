{
  "description": "sample Github_hard/o8777.json",
  "meta": {
    "full_size": 3239,
    "stripped_size": 2979,
    "features": [
      "$ref",
      "additionalProperties",
      "dependencies",
      "format",
      "format:environment",
      "format:ports",
      "items",
      "oneOf",
      "patternProperties"
    ],
    "raw_features": [
      "$schema",
      "_boolSchema",
      "definitions",
      "properties",
      "required",
      "type",
      "type:[]",
      "type:array",
      "type:boolean",
      "type:integer",
      "type:null",
      "type:number",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "type": "object",
    "patternProperties": {
      "^[a-zA-Z0-9._-]+$": {
        "$ref": "#/definitions/service"
      }
    },
    "definitions": {
      "service": {
        "type": "object",
        "properties": {
          "build": {
            "type": "string"
          },
          "cap_add": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "_uniqueItems": true
          },
          "cap_drop": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "_uniqueItems": true
          },
          "cgroup_parent": {
            "type": "string"
          },
          "command": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "container_name": {
            "type": "string"
          },
          "cpu_shares": {
            "type": [
              "number",
              "string"
            ]
          },
          "cpuset": {
            "type": "string"
          },
          "devices": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "_uniqueItems": true
          },
          "dns": {
            "$ref": "#/definitions/string_or_list"
          },
          "dns_search": {
            "$ref": "#/definitions/string_or_list"
          },
          "dockerfile": {
            "type": "string"
          },
          "domainname": {
            "type": "string"
          },
          "entrypoint": {
            "$ref": "#/definitions/string_or_list"
          },
          "env_file": {
            "$ref": "#/definitions/string_or_list"
          },
          "environment": {
            "oneOf": [
              {
                "type": "object",
                "patternProperties": {
                  "^[^-]+$": {
                    "type": [
                      "string",
                      "number",
                      "boolean",
                      "null"
                    ],
                    "format": "environment"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "_uniqueItems": true
              }
            ]
          },
          "expose": {
            "type": "array",
            "items": {
              "type": [
                "string",
                "number"
              ]
            },
            "_uniqueItems": true
          },
          "extends": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "service": {
                    "type": "string"
                  },
                  "file": {
                    "type": "string"
                  }
                },
                "required": [
                  "service"
                ],
                "additionalProperties": false
              }
            ]
          },
          "extra_hosts": {
            "$ref": "#/definitions/list_or_dict"
          },
          "external_links": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "_uniqueItems": true
          },
          "hostname": {
            "type": "string"
          },
          "image": {
            "type": "string"
          },
          "ipc": {
            "type": "string"
          },
          "labels": {
            "$ref": "#/definitions/list_or_dict"
          },
          "links": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "_uniqueItems": true
          },
          "log_driver": {
            "type": "string"
          },
          "log_opt": {
            "type": "object"
          },
          "mac_address": {
            "type": "string"
          },
          "mem_limit": {
            "type": [
              "number",
              "string"
            ]
          },
          "memswap_limit": {
            "type": [
              "number",
              "string"
            ]
          },
          "name": {
            "type": "string"
          },
          "net": {
            "type": "string"
          },
          "pid": {
            "type": [
              "string",
              "null"
            ]
          },
          "ports": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "type": "string",
                  "format": "ports"
                },
                {
                  "type": "number",
                  "format": "ports"
                }
              ]
            },
            "_uniqueItems": true
          },
          "privileged": {
            "type": "boolean"
          },
          "read_only": {
            "type": "boolean"
          },
          "restart": {
            "type": "string"
          },
          "security_opt": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "_uniqueItems": true
          },
          "stdin_open": {
            "type": "boolean"
          },
          "tty": {
            "type": "boolean"
          },
          "ulimits": {
            "type": "object",
            "patternProperties": {
              "^[a-z]+$": {
                "oneOf": [
                  {
                    "type": "integer"
                  },
                  {
                    "type": "object",
                    "properties": {
                      "hard": {
                        "type": "integer"
                      },
                      "soft": {
                        "type": "integer"
                      }
                    },
                    "required": [
                      "soft",
                      "hard"
                    ],
                    "additionalProperties": false
                  }
                ]
              }
            }
          },
          "user": {
            "type": "string"
          },
          "volumes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "_uniqueItems": true
          },
          "volume_driver": {
            "type": "string"
          },
          "volumes_from": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "_uniqueItems": true
          },
          "working_dir": {
            "type": "string"
          }
        },
        "dependencies": {
          "memswap_limit": [
            "mem_limit"
          ]
        },
        "additionalProperties": false
      },
      "string_or_list": {
        "oneOf": [
          {
            "type": "string"
          },
          {
            "$ref": "#/definitions/list_of_strings"
          }
        ]
      },
      "list_of_strings": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "_uniqueItems": true
      },
      "list_or_dict": {
        "oneOf": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "_uniqueItems": true
          },
          {
            "type": "object"
          }
        ]
      }
    },
    "additionalProperties": false
  },
  "tests": [
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "service1": {
          "build": "/path/to/build",
          "cap_add": [
            "NET_ADMIN"
          ],
          "cap_drop": [
            "SYS_ADMIN"
          ],
          "cgroup_parent": "parent_group",
          "command": [
            "bash",
            "-c",
            "echo Hello World"
          ],
          "container_name": "my_container",
          "cpu_shares": 1024,
          "cpuset": "0-3",
          "devices": [
            "/dev/ttyUSB0:/dev/ttyUSB0"
          ],
          "dns": [
            "8.8.8.8"
          ],
          "dns_search": [
            "example.com"
          ],
          "dockerfile": "Dockerfile",
          "domainname": "example.com",
          "entrypoint": [
            "bash",
            "-c"
          ],
          "env_file": [
            "env_file.env"
          ],
          "environment": {
            "VARIABLE": "value"
          },
          "expose": [
            8080
          ],
          "extends": {
            "service": "service2",
            "file": "docker-compose.yml"
          },
          "extra_hosts": {
            "host1": "192.168.1.100"
          },
          "external_links": [
            "service2:service2"
          ],
          "hostname": "my_host",
          "image": "nginx:latest",
          "ipc": "host",
          "labels": {
            "label1": "value1"
          },
          "links": [
            "service2"
          ],
          "log_driver": "json-file",
          "log_opt": {
            "labels": "service1",
            "env": "os,customer"
          },
          "mac_address": "00:11:22:33:44:55",
          "mem_limit": "1g",
          "memswap_limit": "2g",
          "name": "my_service",
          "net": "host",
          "pid": "host",
          "ports": [
            "8080:8080"
          ],
          "privileged": true,
          "read_only": true,
          "restart": "always",
          "security_opt": [
            "label:disable"
          ],
          "stdin_open": true,
          "tty": true,
          "ulimits": {
            "nofile": {
              "hard": 1024,
              "soft": 512
            }
          },
          "user": "user1",
          "volumes": [
            "/path/to/host:/path/to/container"
          ],
          "volume_driver": "local",
          "volumes_from": [
            "service2"
          ],
          "working_dir": "/path/to/working/dir"
        },
        "service2": {
          "image": "postgres:latest"
        }
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "service1": {
          "build": "path/to/build",
          "cap_add": [
            "NET_ADMIN"
          ],
          "cap_drop": [
            "MKNOD"
          ],
          "cgroup_parent": "parent_group",
          "command": [
            "bash",
            "-c",
            "echo 'Hello World!'"
          ],
          "container_name": "my_container",
          "cpu_shares": 1024,
          "cpuset": "0-3",
          "devices": [
            "/dev/ttyUSB0:/dev/ttyUSB0"
          ],
          "dns": [
            "8.8.8.8",
            "8.8.4.4"
          ],
          "dns_search": [
            "example.com"
          ],
          "dockerfile": "path/to/dockerfile",
          "domainname": "example.com",
          "entrypoint": [
            "bash"
          ],
          "env_file": [
            "path/to/env/file"
          ],
          "environment": {
            "VARIABLE": "value"
          },
          "expose": [
            "8080"
          ],
          "extends": {
            "service": "service2",
            "file": "path/to/docker-compose.yml"
          },
          "extra_hosts": {
            "host1": "192.168.1.100",
            "host2": "192.168.1.101"
          },
          "external_links": [
            "service2"
          ],
          "hostname": "my_hostname",
          "image": "image_name",
          "ipc": "host",
          "labels": {
            "label1": "value1",
            "label2": "value2"
          },
          "links": [
            "service2"
          ],
          "log_driver": "json-file",
          "log_opt": {
            "labels": "service1",
            "env": "os,customer"
          },
          "mac_address": "00:11:22:33:44:55",
          "mem_limit": "512m",
          "memswap_limit": "1g",
          "name": "my_service",
          "net": "host",
          "pid": "host",
          "ports": [
            "8080:8080"
          ],
          "privileged": true,
          "read_only": true,
          "restart": "always",
          "security_opt": [
            "label:level"
          ],
          "stdin_open": true,
          "tty": true,
          "ulimits": {
            "nofile": {
              "hard": 1024,
              "soft": 1024
            }
          },
          "user": "user:group",
          "volumes": [
            "/path/to/host:/path/to/container"
          ],
          "volume_driver": "driver_name",
          "volumes_from": [
            "service2"
          ],
          "working_dir": "/path/to/working/directory"
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on oneOf keyword",
      "valid": false,
      "rust_error": "[\"bash\",\"-c\",\"echo 'Hello World!'\",12345] is not valid under any of the schemas listed in the 'oneOf' keyword",
      "python_error": "12345 is not of type 'string'\n\nFailed validating 'type' in schema[1]['items']:\n    {'type': 'string'}\n\nOn instance[3]:\n    12345",
      "data": {
        "service1": {
          "build": "path/to/build",
          "cap_add": [
            "NET_ADMIN"
          ],
          "cap_drop": [
            "MKNOD"
          ],
          "cgroup_parent": "parent_group",
          "command": [
            "bash",
            "-c",
            "echo 'Hello World!'",
            12345
          ],
          "container_name": "my_container",
          "cpu_shares": 1024,
          "cpuset": "0-3",
          "devices": [
            "/dev/ttyUSB0:/dev/ttyUSB0"
          ],
          "dns": [
            "8.8.8.8",
            "8.8.4.4"
          ],
          "dns_search": [
            "example.com"
          ],
          "dockerfile": "path/to/dockerfile",
          "domainname": "example.com",
          "entrypoint": [
            "bash"
          ],
          "env_file": [
            "path/to/env/file"
          ],
          "environment": {
            "VARIABLE": "value"
          },
          "expose": [
            "8080"
          ],
          "extends": {
            "service": "service2",
            "file": "path/to/docker-compose.yml"
          },
          "extra_hosts": {
            "host1": "192.168.1.100",
            "host2": "192.168.1.101"
          },
          "external_links": [
            "service2"
          ],
          "hostname": "my_hostname",
          "image": "image_name",
          "ipc": "host",
          "labels": {
            "label1": "value1",
            "label2": "value2"
          },
          "links": [
            "service2"
          ],
          "log_driver": "json-file",
          "log_opt": {
            "labels": "service1",
            "env": "os,customer"
          },
          "mac_address": "00:11:22:33:44:55",
          "mem_limit": "512m",
          "memswap_limit": "1g",
          "name": "my_service",
          "net": "host",
          "pid": "host",
          "ports": [
            "8080:8080"
          ],
          "privileged": true,
          "read_only": true,
          "restart": "always",
          "security_opt": [
            "label:level"
          ],
          "stdin_open": true,
          "tty": true,
          "ulimits": {
            "nofile": {
              "hard": 1024,
              "soft": 1024
            }
          },
          "user": "user:group",
          "volumes": [
            "/path/to/host:/path/to/container"
          ],
          "volume_driver": "driver_name",
          "volumes_from": [
            "service2"
          ],
          "working_dir": "/path/to/working/directory"
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on patternProperties keyword",
      "valid": false,
      "rust_error": "Additional properties are not allowed ('invalid_property' was unexpected)",
      "python_error": "Additional properties are not allowed ('invalid_property' was unexpected)\n\nFailed validating 'additionalProperties' in schema['patternProperties']['^[a-zA-Z0-9._-]+$']:\n    {'type': 'object',\n     'properties': {'build': {'type': 'string'},\n                    'cap_add': {'type': 'array',\n                                'items': {'type': 'string'},\n                                '_uniqueItems': True},\n                    'cap_drop': {'type': 'array',\n                                 'items': {'type': 'string'},\n                                 '_uniqueItems': True},\n                    'cgroup_parent': {'type': 'string'},\n                    'command': {'oneOf': [{'type': 'string'},\n                                          {'type': 'array',\n                                           'items': {'type': 'string'}}]},\n                    'container_name': {'type': 'string'},\n                    'cpu_shares': {'type': ['number', 'string']},\n                    'cpuset': {'type': 'string'},\n                    'd.. (7076 more)",
      "data": {
        "service1": {
          "build": "path/to/build",
          "cap_add": [
            "NET_ADMIN"
          ],
          "cap_drop": [
            "MKNOD"
          ],
          "cgroup_parent": "parent_group",
          "command": [
            "bash",
            "-c",
            "echo 'Hello World!'"
          ],
          "container_name": "my_container",
          "cpu_shares": 1024,
          "cpuset": "0-3",
          "devices": [
            "/dev/ttyUSB0:/dev/ttyUSB0"
          ],
          "dns": [
            "8.8.8.8",
            "8.8.4.4"
          ],
          "dns_search": [
            "example.com"
          ],
          "dockerfile": "path/to/dockerfile",
          "domainname": "example.com",
          "entrypoint": [
            "bash"
          ],
          "env_file": [
            "path/to/env/file"
          ],
          "environment": {
            "VARIABLE": "value"
          },
          "expose": [
            "8080"
          ],
          "extends": {
            "service": "service2",
            "file": "path/to/docker-compose.yml"
          },
          "extra_hosts": {
            "host1": "192.168.1.100",
            "host2": "192.168.1.101"
          },
          "external_links": [
            "service2"
          ],
          "hostname": "my_hostname",
          "image": "image_name",
          "ipc": "host",
          "labels": {
            "label1": "value1",
            "label2": "value2"
          },
          "links": [
            "service2"
          ],
          "log_driver": "json-file",
          "log_opt": {
            "labels": "service1",
            "env": "os,customer"
          },
          "mac_address": "00:11:22:33:44:55",
          "mem_limit": "512m",
          "memswap_limit": "1g",
          "name": "my_service",
          "net": "host",
          "pid": "host",
          "ports": [
            "8080:8080"
          ],
          "privileged": true,
          "read_only": true,
          "restart": "always",
          "security_opt": [
            "label:level"
          ],
          "stdin_open": true,
          "tty": true,
          "ulimits": {
            "nofile": {
              "hard": 1024,
              "soft": 1024
            }
          },
          "user": "user:group",
          "volumes": [
            "/path/to/host:/path/to/container"
          ],
          "volume_driver": "driver_name",
          "volumes_from": [
            "service2"
          ],
          "working_dir": "/path/to/working/directory",
          "invalid_property": "invalid_value"
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on type keyword with an array of types",
      "valid": false,
      "rust_error": "[\"bash\",12345,\"echo 'Hello World!'\"] is not valid under any of the schemas listed in the 'oneOf' keyword",
      "python_error": "12345 is not of type 'string'\n\nFailed validating 'type' in schema[1]['items']:\n    {'type': 'string'}\n\nOn instance[1]:\n    12345",
      "data": {
        "service1": {
          "build": "path/to/build",
          "cap_add": [
            "NET_ADMIN"
          ],
          "cap_drop": [
            "MKNOD"
          ],
          "cgroup_parent": "parent_group",
          "command": [
            "bash",
            12345,
            "echo 'Hello World!'"
          ],
          "container_name": "my_container",
          "cpu_shares": 1024,
          "cpuset": "0-3",
          "devices": [
            "/dev/ttyUSB0:/dev/ttyUSB0"
          ],
          "dns": [
            "8.8.8.8",
            "8.8.4.4"
          ],
          "dns_search": [
            "example.com"
          ],
          "dockerfile": "path/to/dockerfile",
          "domainname": "example.com",
          "entrypoint": [
            "bash"
          ],
          "env_file": [
            "path/to/env/file"
          ],
          "environment": {
            "VARIABLE": "value"
          },
          "expose": [
            "8080"
          ],
          "extends": {
            "service": "service2",
            "file": "path/to/docker-compose.yml"
          },
          "extra_hosts": {
            "host1": "192.168.1.100",
            "host2": "192.168.1.101"
          },
          "external_links": [
            "service2"
          ],
          "hostname": "my_hostname",
          "image": "image_name",
          "ipc": "host",
          "labels": {
            "label1": "value1",
            "label2": "value2"
          },
          "links": [
            "service2"
          ],
          "log_driver": "json-file",
          "log_opt": {
            "labels": "service1",
            "env": "os,customer"
          },
          "mac_address": "00:11:22:33:44:55",
          "mem_limit": "512m",
          "memswap_limit": "1g",
          "name": "my_service",
          "net": "host",
          "pid": "host",
          "ports": [
            "8080:8080"
          ],
          "privileged": true,
          "read_only": true,
          "restart": "always",
          "security_opt": [
            "label:level"
          ],
          "stdin_open": true,
          "tty": true,
          "ulimits": {
            "nofile": {
              "hard": 1024,
              "soft": 1024
            }
          },
          "user": "user:group",
          "volumes": [
            "/path/to/host:/path/to/container"
          ],
          "volume_driver": "driver_name",
          "volumes_from": [
            "service2"
          ],
          "working_dir": "/path/to/working/directory"
        }
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"VARIABLE=value\" is not valid under any of the schemas listed in the 'oneOf' keyword",
      "python_error": "Additional properties are not allowed ('nonconforming' was unexpected)\n\nFailed validating 'additionalProperties' in schema['patternProperties']['^[a-zA-Z0-9._-]+$']:\n    {'type': 'object',\n     'properties': {'build': {'type': 'string'},\n                    'cap_add': {'type': 'array',\n                                'items': {'type': 'string'},\n                                '_uniqueItems': True},\n                    'cap_drop': {'type': 'array',\n                                 'items': {'type': 'string'},\n                                 '_uniqueItems': True},\n                    'cgroup_parent': {'type': 'string'},\n                    'command': {'oneOf': [{'type': 'string'},\n                                          {'type': 'array',\n                                           'items': {'type': 'string'}}]},\n                    'container_name': {'type': 'string'},\n                    'cpu_shares': {'type': ['number', 'string']},\n                    'cpuset': {'type': 'string'},\n                    'devi.. (5392 more)",
      "data": {
        "service1": {
          "build": "path/to/build",
          "cap_add": [
            "NET_ADMIN"
          ],
          "cap_drop": [
            "MKNOD",
            "MKNOD"
          ],
          "cgroup_parent": "parent_group",
          "command": "echo 'Hello World!'",
          "container_name": "my_container",
          "cpu_shares": 1024,
          "cpuset": "0-3",
          "devices": [
            "/dev/ttyUSB0:/dev/ttyUSB0"
          ],
          "dns": [
            "8.8.8.8",
            "8.8.4.4"
          ],
          "dns_search": [
            "example.com"
          ],
          "dockerfile": "path/to/dockerfile",
          "domainname": "example.com",
          "entrypoint": "bash",
          "env_file": [
            "path/to/env/file"
          ],
          "environment": "VARIABLE=value",
          "expose": [
            "8080"
          ],
          "extends": {
            "service": "service2",
            "file": "path/to/docker-compose.yml",
            "extra": "property"
          },
          "extra_hosts": {
            "host1": "192.168.1.100",
            "host2": "192.168.1.101"
          },
          "external_links": [
            "service2"
          ],
          "hostname": "my_hostname",
          "image": "image_name",
          "ipc": "host",
          "labels": {
            "label1": "value1",
            "label2": "value2"
          },
          "links": [
            "service2"
          ],
          "log_driver": "json-file",
          "log_opt": {
            "labels": "service1",
            "env": "os,customer"
          },
          "mac_address": "00:11:22:33:44:55",
          "mem_limit": "512m",
          "memswap_limit": "1g",
          "name": "my_service",
          "net": "host",
          "pid": "host",
          "ports": [
            "8080:8080"
          ],
          "privileged": true,
          "read_only": true,
          "restart": "always",
          "security_opt": [
            "label:level"
          ],
          "stdin_open": true,
          "tty": true,
          "ulimits": {
            "nofile": {
              "hard": 1024,
              "soft": 1024,
              "extra": "property"
            }
          },
          "user": "user:group",
          "volumes": [
            "/path/to/host:/path/to/container"
          ],
          "volume_driver": "driver_name",
          "volumes_from": [
            "service2"
          ],
          "working_dir": "/path/to/working/directory"
        },
        "service2": {
          "nonconforming": "property"
        }
      }
    }
  ]
}