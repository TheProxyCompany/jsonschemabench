{
  "description": "sample Kubernetes/kb_548_Normalized.json",
  "meta": {
    "full_size": 2679,
    "stripped_size": 712,
    "features": [
      "$ref"
    ],
    "raw_features": [
      "definitions",
      "properties",
      "type",
      "type:[]",
      "type:null",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "definitions": {
      "https:__kubernetesjsonschema_dev_master__defs_json_defs_io_k8s_apimachinery_pkg_apis_meta_v1_FieldsV1": {
        "description": "FieldsV1 stores a set of fields in a data structure like a Trie, in JSON format.\n\nEach key is either a '.' representing the field itself, and will always map to an empty set, or a string representing a sub-field or item. The string will follow one of these four formats: 'f:<name>', where <name> is the name of a field in a struct, or key in a map 'v:<value>', where <value> is the exact json formatted value of a list item 'i:<index>', where <index> is position of a item in a list 'k:<keys>', where <keys> is a map of  a list item's key fields to their unique values If a key maps to an empty Fields value, the field that key represents is part of the set.\n\nThe exact format is defined in sigs.k8s.io/structured-merge-diff",
        "type": "object"
      },
      "https:__kubernetesjsonschema_dev_master__defs_json_defs_io_k8s_apimachinery_pkg_apis_meta_v1_Time": {
        "_format": "date-time",
        "description": "Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.",
        "type": "string"
      }
    },
    "description": "ManagedFieldsEntry is a workflow-id, a FieldSet and the group version of the resource that the fieldset applies to.",
    "properties": {
      "apiVersion": {
        "description": "APIVersion defines the version of this resource that this field set applies to. The format is \"group/version\" just like the top-level APIVersion field. It is necessary to track the version of a field set because it cannot be automatically converted.",
        "type": [
          "string",
          "null"
        ]
      },
      "fieldsType": {
        "description": "FieldsType is the discriminator for the different fields format and version. There is currently only one possible value: \"FieldsV1\"",
        "type": [
          "string",
          "null"
        ]
      },
      "fieldsV1": {
        "$ref": "#/definitions/https:__kubernetesjsonschema_dev_master__defs_json_defs_io_k8s_apimachinery_pkg_apis_meta_v1_FieldsV1",
        "description": "FieldsV1 holds the first JSON version format as described in the \"FieldsV1\" type."
      },
      "manager": {
        "description": "Manager is an identifier of the workflow managing these fields.",
        "type": [
          "string",
          "null"
        ]
      },
      "operation": {
        "description": "Operation is the type of operation which lead to this ManagedFieldsEntry being created. The only valid values for this field are 'Apply' and 'Update'.",
        "type": [
          "string",
          "null"
        ]
      },
      "time": {
        "$ref": "#/definitions/https:__kubernetesjsonschema_dev_master__defs_json_defs_io_k8s_apimachinery_pkg_apis_meta_v1_Time",
        "description": "Time is timestamp of when these fields were set. It should always be empty if Operation is 'Apply'"
      }
    },
    "type": "object"
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "apiVersion": "v1",
        "fieldsType": "FieldsV1",
        "fieldsV1": {
          "f:spec": {
            "f:containers": {
              "k:{\"name\":\"nginx\"}": {
                "f:image": {}
              }
            }
          }
        },
        "manager": "kubectl",
        "operation": "Apply",
        "time": "2022-01-01T12:00:00Z"
      }
    },
    {
      "description": "llama-70b generated negative; focus on type keyword with an array of types",
      "valid": false,
      "rust_error": "123 is not of types \"null\", \"string\"",
      "python_error": "123 is not of type 'string', 'null'\n\nFailed validating 'type' in schema['properties']['apiVersion']:\n    {'description': 'APIVersion defines the version of this resource that '\n                    'this field set applies to. The format is '\n                    '\"group/version\" just like the top-level APIVersion '\n                    'field. It is necessary to track the version of a '\n                    'field set because it cannot be automatically '\n                    'converted.',\n     'type': ['string', 'null']}\n\nOn instance['apiVersion']:\n    123",
      "data": {
        "apiVersion": 123,
        "fieldsType": "FieldsV1",
        "fieldsV1": {
          "f:spec": {
            "f:containers": {
              "k:{\"name\":\"nginx\"}": {
                "f:image": {}
              }
            }
          }
        },
        "manager": "kubectl",
        "operation": "Apply",
        "time": "2022-01-01T12:00:00Z"
      }
    }
  ]
}