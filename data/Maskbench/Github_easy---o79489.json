{
  "description": "sample Github_easy/o79489.json",
  "meta": {
    "full_size": 740,
    "stripped_size": 351,
    "features": [
      "$ref",
      "additionalProperties",
      "enum"
    ],
    "raw_features": [
      "$schema",
      "_boolSchema",
      "definitions",
      "properties",
      "required",
      "type",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "definitions": {
      "principalType": {
        "enum": [
          "user",
          "candidate"
        ],
        "description": "a class of principal (typically a human) identifiable by SSO. In theory developer-defined but for now only TAS can create."
      }
    },
    "type": "object",
    "description": "A set of SAML values that uniquely identify this person, consistently across TAS apps, and with any number of potential IdPs",
    "additionalProperties": false,
    "required": [
      "pt",
      "samlKey",
      "nameID",
      "entityID"
    ],
    "properties": {
      "pt": {
        "$ref": "#/definitions/principalType",
        "description": "principal type"
      },
      "samlKey": {
        "type": "string",
        "description": "key of the SAML assertion with the the TAS core SAML database"
      },
      "nameID": {
        "type": "string"
      },
      "entityID": {
        "type": "string"
      }
    }
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "pt": "user",
        "samlKey": "some_saml_key",
        "nameID": "some_name_id",
        "entityID": "some_entity_id"
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"admin\" is not one of [\"user\",\"candidate\"]",
      "python_error": "'admin' is not one of ['user', 'candidate']\n\nFailed validating 'enum' in schema['properties']['pt']:\n    {'enum': ['user', 'candidate'],\n     'description': 'a class of principal (typically a human) identifiable '\n                    'by SSO. In theory developer-defined but for now only '\n                    'TAS can create.'}\n\nOn instance['pt']:\n    'admin'",
      "data": {
        "pt": "admin",
        "samlKey": "some_saml_key",
        "nameID": "some_name_id",
        "entityID": "some_entity_id"
      }
    }
  ]
}