{
  "description": "sample Github_hard/o71568.json",
  "meta": {
    "full_size": 4915,
    "stripped_size": 4849,
    "features": [
      "$ref",
      "@siblingKeys",
      "additionalProperties",
      "anyOf",
      "enum",
      "items"
    ],
    "raw_features": [
      "$schema",
      "_boolSchema",
      "definitions",
      "properties",
      "required",
      "type",
      "type:array",
      "type:boolean",
      "type:number",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "definitions": {
      "MyGame_OtherNameSpace_FromInclude": {
        "type": "string",
        "enum": [
          "IncludeVal"
        ]
      },
      "MyGame_Example_Color": {
        "type": "string",
        "enum": [
          "Red",
          "Green",
          "Blue"
        ]
      },
      "MyGame_Example_Any": {
        "type": "string",
        "enum": [
          "NONE",
          "Monster",
          "TestSimpleTableWithEnum",
          "MyGame_Example2_Monster"
        ]
      },
      "MyGame_OtherNameSpace_Unused": {
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "MyGame_OtherNameSpace_TableB": {
        "type": "object",
        "properties": {
          "a": {
            "$ref": "#/definitions/TableA"
          }
        },
        "additionalProperties": false
      },
      "TableA": {
        "type": "object",
        "properties": {
          "b": {
            "$ref": "#/definitions/MyGame_OtherNameSpace_TableB"
          }
        },
        "additionalProperties": false
      },
      "MyGame_InParentNamespace": {
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "MyGame_Example2_Monster": {
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "MyGame_Example_Test": {
        "type": "object",
        "properties": {
          "a": {
            "type": "number"
          },
          "b": {
            "type": "number"
          }
        },
        "additionalProperties": false
      },
      "MyGame_Example_TestSimpleTableWithEnum": {
        "type": "object",
        "properties": {
          "color": {
            "$ref": "#/definitions/MyGame_Example_Color"
          }
        },
        "additionalProperties": false
      },
      "MyGame_Example_Vec3": {
        "type": "object",
        "properties": {
          "x": {
            "type": "number"
          },
          "y": {
            "type": "number"
          },
          "z": {
            "type": "number"
          },
          "test1": {
            "type": "number"
          },
          "test2": {
            "$ref": "#/definitions/MyGame_Example_Color"
          },
          "test3": {
            "$ref": "#/definitions/MyGame_Example_Test"
          }
        },
        "additionalProperties": false
      },
      "MyGame_Example_Ability": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "distance": {
            "type": "number"
          }
        },
        "additionalProperties": false
      },
      "MyGame_Example_Stat": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "val": {
            "type": "number"
          },
          "count": {
            "type": "number"
          }
        },
        "additionalProperties": false
      },
      "MyGame_Example_Referrable": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          }
        },
        "additionalProperties": false
      },
      "MyGame_Example_Monster": {
        "type": "object",
        "description": " an example documentation comment: monster object",
        "properties": {
          "pos": {
            "$ref": "#/definitions/MyGame_Example_Vec3"
          },
          "mana": {
            "type": "number"
          },
          "hp": {
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "friendly": {
            "type": "boolean"
          },
          "inventory": {
            "type": "array",
            "items": {
              "type": "number"
            }
          },
          "color": {
            "$ref": "#/definitions/MyGame_Example_Color"
          },
          "test_type": {
            "$ref": "#/definitions/MyGame_Example_Any"
          },
          "test": {
            "anyOf": [
              {
                "$ref": "#/definitions/MyGame_Example_Monster"
              },
              {
                "$ref": "#/definitions/MyGame_Example_TestSimpleTableWithEnum"
              },
              {
                "$ref": "#/definitions/MyGame_Example2_Monster"
              }
            ]
          },
          "test4": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/MyGame_Example_Test"
            }
          },
          "testarrayofstring": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "testarrayoftables": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/MyGame_Example_Monster"
            }
          },
          "enemy": {
            "$ref": "#/definitions/MyGame_Example_Monster"
          },
          "testnestedflatbuffer": {
            "type": "array",
            "items": {
              "type": "number"
            }
          },
          "testempty": {
            "$ref": "#/definitions/MyGame_Example_Stat"
          },
          "testbool": {
            "type": "boolean"
          },
          "testhashs32_fnv1": {
            "type": "number"
          },
          "testhashu32_fnv1": {
            "type": "number"
          },
          "testhashs64_fnv1": {
            "type": "number"
          },
          "testhashu64_fnv1": {
            "type": "number"
          },
          "testhashs32_fnv1a": {
            "type": "number"
          },
          "testhashu32_fnv1a": {
            "type": "number"
          },
          "testhashs64_fnv1a": {
            "type": "number"
          },
          "testhashu64_fnv1a": {
            "type": "number"
          },
          "testarrayofbools": {
            "type": "array",
            "items": {
              "type": "boolean"
            }
          },
          "testf": {
            "type": "number"
          },
          "testf2": {
            "type": "number"
          },
          "testf3": {
            "type": "number"
          },
          "testarrayofstring2": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "testarrayofsortedstruct": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/MyGame_Example_Ability"
            }
          },
          "flex": {
            "type": "array",
            "items": {
              "type": "number"
            }
          },
          "test5": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/MyGame_Example_Test"
            }
          },
          "vector_of_longs": {
            "type": "array",
            "items": {
              "type": "number"
            }
          },
          "vector_of_doubles": {
            "type": "array",
            "items": {
              "type": "number"
            }
          },
          "parent_namespace_test": {
            "$ref": "#/definitions/MyGame_InParentNamespace"
          },
          "vector_of_referrables": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/MyGame_Example_Referrable"
            }
          },
          "single_weak_reference": {
            "type": "number"
          },
          "vector_of_weak_references": {
            "type": "array",
            "items": {
              "type": "number"
            }
          },
          "vector_of_strong_referrables": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/MyGame_Example_Referrable"
            }
          },
          "co_owning_reference": {
            "type": "number"
          },
          "vector_of_co_owning_references": {
            "type": "array",
            "items": {
              "type": "number"
            }
          },
          "non_owning_reference": {
            "type": "number"
          },
          "vector_of_non_owning_references": {
            "type": "array",
            "items": {
              "type": "number"
            }
          }
        },
        "required": [
          "name"
        ],
        "additionalProperties": false
      },
      "MyGame_Example_TypeAliases": {
        "type": "object",
        "properties": {
          "i8": {
            "type": "number"
          },
          "u8": {
            "type": "number"
          },
          "i16": {
            "type": "number"
          },
          "u16": {
            "type": "number"
          },
          "i32": {
            "type": "number"
          },
          "u32": {
            "type": "number"
          },
          "i64": {
            "type": "number"
          },
          "u64": {
            "type": "number"
          },
          "f32": {
            "type": "number"
          },
          "f64": {
            "type": "number"
          },
          "v8": {
            "type": "array",
            "items": {
              "type": "number"
            }
          },
          "vf64": {
            "type": "array",
            "items": {
              "type": "number"
            }
          }
        },
        "additionalProperties": false
      }
    },
    "$ref": "#/definitions/MyGame_Example_Monster"
  },
  "tests": [
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "pos": {
          "x": 1.0,
          "y": 2.0,
          "z": 3.0,
          "test1": 4.0,
          "test2": "Red",
          "test3": {
            "a": 5.0,
            "b": 6.0
          }
        },
        "mana": 10.0,
        "hp": 20.0,
        "name": "Monster1",
        "friendly": true,
        "inventory": [
          1,
          2,
          3
        ],
        "color": "Green",
        "test_type": "Monster",
        "test": {
          "color": "Blue"
        },
        "test4": [
          {
            "a": 7.0,
            "b": 8.0
          },
          {
            "a": 9.0,
            "b": 10.0
          }
        ],
        "testarrayofstring": [
          "str1",
          "str2"
        ],
        "testarrayoftables": [
          {
            "pos": {
              "x": 11.0,
              "y": 12.0,
              "z": 13.0,
              "test1": 14.0,
              "test2": "Red",
              "test3": {
                "a": 15.0,
                "b": 16.0
              }
            },
            "mana": 17.0,
            "hp": 18.0,
            "name": "Monster2",
            "friendly": false,
            "inventory": [
              19,
              20,
              21
            ],
            "color": "Green",
            "test_type": "Monster",
            "test": {
              "color": "Blue"
            }
          }
        ],
        "enemy": {
          "pos": {
            "x": 22.0,
            "y": 23.0,
            "z": 24.0,
            "test1": 25.0,
            "test2": "Red",
            "test3": {
              "a": 26.0,
              "b": 27.0
            }
          },
          "mana": 28.0,
          "hp": 29.0,
          "name": "Monster3",
          "friendly": true,
          "inventory": [
            30,
            31,
            32
          ],
          "color": "Green",
          "test_type": "Monster",
          "test": {
            "color": "Blue"
          }
        },
        "testnestedflatbuffer": [
          33,
          34,
          35
        ],
        "testempty": {
          "id": "empty",
          "val": 36.0,
          "count": 37
        },
        "testbool": true,
        "testhashs32_fnv1": 38,
        "testhashu32_fnv1": 39,
        "testhashs64_fnv1": 40,
        "testhashu64_fnv1": 41,
        "testhashs32_fnv1a": 42,
        "testhashu32_fnv1a": 43,
        "testhashs64_fnv1a": 44,
        "testhashu64_fnv1a": 45,
        "testarrayofbools": [
          true,
          false,
          true
        ],
        "testf": 46.0,
        "testf2": 47.0,
        "testf3": 48.0,
        "testarrayofstring2": [
          "str3",
          "str4"
        ],
        "testarrayofsortedstruct": [
          {
            "id": 49,
            "distance": 50.0
          },
          {
            "id": 51,
            "distance": 52.0
          }
        ],
        "flex": [
          53,
          54,
          55
        ],
        "test5": [
          {
            "a": 56.0,
            "b": 57.0
          },
          {
            "a": 58.0,
            "b": 59.0
          }
        ],
        "vector_of_longs": [
          60,
          61,
          62
        ],
        "vector_of_doubles": [
          63.0,
          64.0,
          65.0
        ],
        "parent_namespace_test": {},
        "vector_of_referrables": [
          {
            "id": 66
          },
          {
            "id": 67
          }
        ],
        "single_weak_reference": 68,
        "vector_of_weak_references": [
          69,
          70,
          71
        ],
        "vector_of_strong_referrables": [
          {
            "id": 72
          },
          {
            "id": 73
          }
        ],
        "co_owning_reference": 74,
        "vector_of_co_owning_references": [
          75,
          76,
          77
        ],
        "non_owning_reference": 78,
        "vector_of_non_owning_references": [
          79,
          80,
          81
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on anyOf keyword",
      "valid": false,
      "rust_error": "{\"not_valid\":\"Invalid\"} is not valid under any of the schemas listed in the 'anyOf' keyword",
      "python_error": "{'not_valid': 'Invalid'} is not valid under any of the given schemas\n\nFailed validating 'anyOf' in schema['properties']['test']:\n    {'anyOf': [{'$ref': '#/definitions/MyGame_Example_Monster'},\n               {'$ref': '#/definitions/MyGame_Example_TestSimpleTableWithEnum'},\n               {'$ref': '#/definitions/MyGame_Example2_Monster'}]}\n\nOn instance['test']:\n    {'not_valid': 'Invalid'}",
      "data": {
        "pos": {
          "x": 1.0,
          "y": 2.0,
          "z": 3.0,
          "test1": 4.0,
          "test2": "Red",
          "test3": {
            "a": 5.0,
            "b": 6.0
          }
        },
        "mana": 10.0,
        "hp": 20.0,
        "name": "Monster1",
        "friendly": true,
        "inventory": [
          1,
          2,
          3
        ],
        "color": "Green",
        "test_type": "Monster",
        "test": {
          "not_valid": "Invalid"
        },
        "test4": [
          {
            "a": 7.0,
            "b": 8.0
          },
          {
            "a": 9.0,
            "b": 10.0
          }
        ],
        "testarrayofstring": [
          "str1",
          "str2"
        ],
        "testarrayoftables": [
          {
            "pos": {
              "x": 11.0,
              "y": 12.0,
              "z": 13.0,
              "test1": 14.0,
              "test2": "Red",
              "test3": {
                "a": 15.0,
                "b": 16.0
              }
            },
            "mana": 17.0,
            "hp": 18.0,
            "name": "Monster2",
            "friendly": false,
            "inventory": [
              19,
              20,
              21
            ],
            "color": "Green",
            "test_type": "Monster",
            "test": {
              "color": "Blue"
            }
          }
        ],
        "enemy": {
          "pos": {
            "x": 22.0,
            "y": 23.0,
            "z": 24.0,
            "test1": 25.0,
            "test2": "Red",
            "test3": {
              "a": 26.0,
              "b": 27.0
            }
          },
          "mana": 28.0,
          "hp": 29.0,
          "name": "Monster3",
          "friendly": true,
          "inventory": [
            30,
            31,
            32
          ],
          "color": "Green",
          "test_type": "Monster",
          "test": {
            "color": "Blue"
          }
        },
        "testnestedflatbuffer": [
          33,
          34,
          35
        ],
        "testempty": {
          "id": "empty",
          "val": 36.0,
          "count": 37
        },
        "testbool": true,
        "testhashs32_fnv1": 38,
        "testhashu32_fnv1": 39,
        "testhashs64_fnv1": 40,
        "testhashu64_fnv1": 41,
        "testhashs32_fnv1a": 42,
        "testhashu32_fnv1a": 43,
        "testhashs64_fnv1a": 44,
        "testhashu64_fnv1a": 45,
        "testarrayofbools": [
          true,
          false,
          true
        ],
        "testf": 46.0,
        "testf2": 47.0,
        "testf3": 48.0,
        "testarrayofstring2": [
          "str3",
          "str4"
        ],
        "testarrayofsortedstruct": [
          {
            "id": 49,
            "distance": 50.0
          },
          {
            "id": 51,
            "distance": 52.0
          }
        ],
        "flex": [
          53,
          54,
          55
        ],
        "test5": [
          {
            "a": 56.0,
            "b": 57.0
          },
          {
            "a": 58.0,
            "b": 59.0
          }
        ],
        "vector_of_longs": [
          60,
          61,
          62
        ],
        "vector_of_doubles": [
          63.0,
          64.0,
          65.0
        ],
        "parent_namespace_test": {},
        "vector_of_referrables": [
          {
            "id": 66
          },
          {
            "id": 67
          }
        ],
        "single_weak_reference": 68,
        "vector_of_weak_references": [
          69,
          70,
          71
        ],
        "vector_of_strong_referrables": [
          {
            "id": 72
          },
          {
            "id": 73
          }
        ],
        "co_owning_reference": 74,
        "vector_of_co_owning_references": [
          75,
          76,
          77
        ],
        "non_owning_reference": 78,
        "vector_of_non_owning_references": [
          79,
          80,
          81
        ]
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"Yellow\" is not one of [\"Red\",\"Green\",\"Blue\"]",
      "python_error": "Additional properties are not allowed ('Extra property not allowed', 'Invalid type for non-owning reference', 'Invalid type for weak reference', 'Missing required property', 'extraProp' were unexpected)\n\nFailed validating 'additionalProperties' in schema:\n    {'type': 'object',\n     'description': ' an example documentation comment: monster object',\n     'properties': {'pos': {'$ref': '#/definitions/MyGame_Example_Vec3'},\n                    'mana': {'type': 'number'},\n                    'hp': {'type': 'number'},\n                    'name': {'type': 'string'},\n                    'friendly': {'type': 'boolean'},\n                    'inventory': {'type': 'array',\n                                  'items': {'type': 'number'}},\n                    'color': {'$ref': '#/definitions/MyGame_Example_Color'},\n                    'test_type': {'$ref': '#/definitions/MyGame_Example_Any'},\n                    'test': {'anyOf': [{'$ref': '#/definitions/MyGame_Example_Monster'},\n                                       {'$r.. (5059 more)",
      "data": {
        "pos": {
          "x": 1.0,
          "y": 2.0,
          "z": 3.0,
          "test1": 4.0,
          "test2": "Yellow",
          "Invalid color": "test3"
        },
        "mana": 10.0,
        "hp": 20.0,
        "name": "Monster1",
        "friendly": true,
        "inventory": [
          1,
          2,
          "not a number",
          "Invalid type in array"
        ],
        "color": "Green",
        "test_type": "Monster",
        "test": {
          "color": "Blue"
        },
        "test4": [
          {
            "a": 7.0,
            "b": 8.0
          },
          {
            "a": 9.0,
            "b": 10.0,
            "extraProp": "not allowed",
            "Extra property not allowed": "b"
          },
          "testarrayofstring2"
        ],
        "Missing required property": "vector_of_co_owning_references",
        "single_weak_reference": "not a number",
        "Invalid type for weak reference": "vector_of_strong_referrables",
        "non_owning_reference": "not a number",
        "Invalid type for non-owning reference": "vector_of_non_owning_references",
        "extraProp": "not allowed",
        "Extra property not allowed": "parent_namespace_test",
        "vector_of_longs": [
          60,
          61,
          62,
          "not a number",
          "Invalid type in array"
        ],
        "vector_of_doubles": [
          63.0,
          64.0,
          65.0,
          "not a number",
          "Invalid type in array"
        ]
      }
    }
  ]
}