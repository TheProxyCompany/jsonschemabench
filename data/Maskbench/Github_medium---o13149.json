{
  "description": "sample Github_medium/o13149.json",
  "meta": {
    "full_size": 1456,
    "stripped_size": 445,
    "features": [
      "enum"
    ],
    "raw_features": [
      "$schema",
      "properties",
      "required",
      "type",
      "type:boolean",
      "type:integer",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "type": "object",
    "properties": {
      "file1": {
        "title": "Fichier 1",
        "description": "Selectionner lequel est le `file1` parmis ceux que vous avez selectionne pour le job.",
        "type": "string",
        "enum": [
          "__PIRUS_INPUT_FILES__"
        ]
      },
      "file2": {
        "title": "Fichier 2",
        "description": "Selectionner lequel est le `file2` parmis ceux que vous avez selectionne pour le job.",
        "type": "string",
        "enum": [
          "__PIRUS_INPUT_FILES__"
        ]
      },
      "ref": {
        "title": "Genome de reference",
        "description": "Choisissez votre genome de reference parmis les base de donnees disponible",
        "type": "string",
        "enum": [
          "__PIRUS_DB_REFS__"
        ]
      },
      "confirm": {
        "title": "Vous etes sur ?",
        "description": "En cochant cette case vous vous engagez blablabla.",
        "type": "boolean",
        "default": false
      },
      "witherror": {
        "title": "Crash ?",
        "description": "Cochez cette case si vous souhaitez que le job crash... pour voir comment ca se passe.",
        "type": "boolean",
        "default": false
      },
      "notification_enable": {
        "title": "Notification temps reels ?",
        "description": "Cochez cette case si vous souhaitez que le job mette Ã  jour sa progression en temps reel.",
        "type": "boolean",
        "default": true
      },
      "duration": {
        "title": "Duree du job",
        "description": "Indiquez le nombre de seconde que va durer le job.",
        "type": "integer",
        "default": 100
      },
      "outfilename": {
        "title": "Fichier resultat",
        "description": "Comment souhaitez vous nommer le fichier resultat que generera ce job.",
        "type": "string",
        "default": "result.txt"
      }
    },
    "required": [
      "outfilename"
    ]
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "file1": "__PIRUS_INPUT_FILES__",
        "file2": "__PIRUS_INPUT_FILES__",
        "ref": "__PIRUS_DB_REFS__",
        "confirm": true,
        "witherror": false,
        "notification_enable": true,
        "duration": 100,
        "outfilename": "result.txt"
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "123 is not of type \"string\"",
      "python_error": "123 is not of type 'string'\n\nFailed validating 'type' in schema['properties']['outfilename']:\n    {'title': 'Fichier resultat',\n     'description': 'Comment souhaitez vous nommer le fichier resultat que '\n                    'generera ce job.',\n     'type': 'string',\n     'default': 'result.txt'}\n\nOn instance['outfilename']:\n    123",
      "data": {
        "file1": "__PIRUS_INPUT_FILES__",
        "file2": "__PIRUS_INPUT_FILES__",
        "ref": "__PIRUS_DB_REFS__",
        "confirm": true,
        "witherror": false,
        "notification_enable": true,
        "duration": 100,
        "outfilename": 123
      }
    }
  ]
}