{
  "description": "sample Kubernetes/kb_952_Normalized.json",
  "meta": {
    "full_size": 2574,
    "stripped_size": 876,
    "features": [
      "$ref"
    ],
    "raw_features": [
      "definitions",
      "properties",
      "type",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "definitions": {
      "https:__kubernetesjsonschema_dev_master__defs_json_defs_io_k8s_api_authorization_v1_NonResourceAttributes": {
        "description": "NonResourceAttributes includes the authorization attributes available for non-resource requests to the Authorizer interface",
        "properties": {
          "path": {
            "description": "Path is the URL path of the request",
            "type": "string"
          },
          "verb": {
            "description": "Verb is the standard HTTP verb",
            "type": "string"
          }
        },
        "type": "object"
      },
      "https:__kubernetesjsonschema_dev_master__defs_json_defs_io_k8s_api_authorization_v1_ResourceAttributes": {
        "description": "ResourceAttributes includes the authorization attributes available for resource requests to the Authorizer interface",
        "properties": {
          "group": {
            "description": "Group is the API Group of the Resource.  \"*\" means all.",
            "type": "string"
          },
          "name": {
            "description": "Name is the name of the resource being requested for a \"get\" or deleted for a \"delete\". \"\" (empty) means all.",
            "type": "string"
          },
          "namespace": {
            "description": "Namespace is the namespace of the action being requested.  Currently, there is no distinction between no namespace and all namespaces \"\" (empty) is defaulted for LocalSubjectAccessReviews \"\" (empty) is empty for cluster-scoped resources \"\" (empty) means \"all\" for namespace scoped resources from a SubjectAccessReview or SelfSubjectAccessReview",
            "type": "string"
          },
          "resource": {
            "description": "Resource is one of the existing resource types.  \"*\" means all.",
            "type": "string"
          },
          "subresource": {
            "description": "Subresource is one of the existing resource types.  \"\" means none.",
            "type": "string"
          },
          "verb": {
            "description": "Verb is a kubernetes resource API verb, like: get, list, watch, create, update, delete, proxy.  \"*\" means all.",
            "type": "string"
          },
          "version": {
            "description": "Version is the API Version of the Resource.  \"*\" means all.",
            "type": "string"
          }
        },
        "type": "object"
      }
    },
    "description": "SelfSubjectAccessReviewSpec is a description of the access request.  Exactly one of ResourceAuthorizationAttributes and NonResourceAuthorizationAttributes must be set",
    "properties": {
      "nonResourceAttributes": {
        "$ref": "#/definitions/https:__kubernetesjsonschema_dev_master__defs_json_defs_io_k8s_api_authorization_v1_NonResourceAttributes",
        "description": "NonResourceAttributes describes information for a non-resource access request"
      },
      "resourceAttributes": {
        "$ref": "#/definitions/https:__kubernetesjsonschema_dev_master__defs_json_defs_io_k8s_api_authorization_v1_ResourceAttributes",
        "description": "ResourceAuthorizationAttributes describes information for a resource access request"
      }
    },
    "type": "object"
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "nonResourceAttributes": {
          "path": "/api/v1/namespaces/default/pods",
          "verb": "get"
        }
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "123 is not of type \"string\"",
      "python_error": "123 is not of type 'string'\n\nFailed validating 'type' in schema['properties']['nonResourceAttributes']['properties']['path']:\n    {'description': 'Path is the URL path of the request', 'type': 'string'}\n\nOn instance['nonResourceAttributes']['path']:\n    123",
      "data": {
        "nonResourceAttributes": {
          "path": 123,
          "verb": "get"
        },
        "resourceAttributes": {
          "group": "apps",
          "name": "my-pod",
          "namespace": "default",
          "resource": "pods",
          "subresource": "",
          "verb": "get",
          "version": "v1"
        }
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "null is not of type \"string\"",
      "python_error": "None is not of type 'string'\n\nFailed validating 'type' in schema['properties']['nonResourceAttributes']['properties']['path']:\n    {'description': 'Path is the URL path of the request', 'type': 'string'}\n\nOn instance['nonResourceAttributes']['path']:\n    None",
      "data": {
        "nonResourceAttributes": {
          "path": null,
          "verb": "get"
        }
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "nonResourceAttributes": {
          "path": "/apis/apps/v1/deployments",
          "verb": "get"
        }
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "123 is not of type \"string\"",
      "python_error": "123 is not of type 'string'\n\nFailed validating 'type' in schema['properties']['nonResourceAttributes']['properties']['path']:\n    {'description': 'Path is the URL path of the request', 'type': 'string'}\n\nOn instance['nonResourceAttributes']['path']:\n    123",
      "data": {
        "nonResourceAttributes": {
          "path": 123,
          "verb": "get"
        }
      }
    }
  ]
}