{
  "description": "sample Github_medium/o33966.json",
  "meta": {
    "full_size": 1240,
    "stripped_size": 332,
    "features": [
      "additionalProperties",
      "additionalProperties:object",
      "items"
    ],
    "raw_features": [
      "properties",
      "type",
      "type:array",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "description": "Generates Angular's @Injectable classes to access translation messages from JSON.",
    "properties": {
      "$schema": {
        "type": "string"
      },
      "argumentType": {
        "default": "string",
        "description": "Type for generated arguments. Defaults to 'string', but may be set to more permissive types, such as 'string | number' or even 'any'.",
        "type": "string"
      },
      "defaultLocale": {
        "default": "en",
        "description": "Default locale. The file name of the default locale doesn't include the locale.",
        "type": "string"
      },
      "input": {
        "default": "src/translations",
        "description": "Folder containing the translation JSON files to read from.",
        "type": "string"
      },
      "locales": {
        "default": [
          "en"
        ],
        "description": "A list of locales which can be processed",
        "items": {
          "type": "string"
        },
        "type": "array"
      },
      "mapping": {
        "additionalProperties": {
          "type": "string"
        },
        "description": "A mapping from JSON file (without extension) to the TS class name. Must be in the form: file1=Class1:file2=Class2:...",
        "type": "object"
      },
      "output": {
        "default": "src/app/messages",
        "description": "Folder where the generated TS clases will be placed.",
        "type": "string"
      },
      "separator": {
        "default": ".",
        "description": "File name separator between base name and locale",
        "type": "string"
      }
    },
    "title": "Options for ng-translation-gen",
    "type": "object"
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "$schema": "https://json-schema.org/draft-07/schema#",
        "argumentType": "string | number",
        "defaultLocale": "en-US",
        "input": "src/translations",
        "locales": [
          "en-US",
          "fr-FR",
          "es-ES"
        ],
        "mapping": {
          "home": "HomeMessages",
          "about": "AboutMessages",
          "contact": "ContactMessages"
        },
        "output": "src/app/messages",
        "separator": "_"
      }
    },
    {
      "description": "llama-70b generated negative; focus on additionalProperties keyword with an object schema",
      "valid": false,
      "rust_error": "123 is not of type \"string\"",
      "python_error": "123 is not of type 'string'\n\nFailed validating 'type' in schema['properties']['mapping']['additionalProperties']:\n    {'type': 'string'}\n\nOn instance['mapping']['invalidKey']:\n    123",
      "data": {
        "$schema": "https://json-schema.org/draft-07/schema#",
        "argumentType": "string | number",
        "defaultLocale": "en-US",
        "input": "src/translations",
        "locales": [
          "en-US",
          "fr-FR",
          "es-ES"
        ],
        "mapping": {
          "home": "HomeMessages",
          "about": "AboutMessages",
          "contact": "ContactMessages",
          "invalidKey": 123
        },
        "output": "src/app/messages",
        "separator": "_"
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "123 is not of type \"string\"",
      "python_error": "123 is not of type 'string'\n\nFailed validating 'type' in schema['properties']['argumentType']:\n    {'default': 'string',\n     'description': \"Type for generated arguments. Defaults to 'string', \"\n                    'but may be set to more permissive types, such as '\n                    \"'string | number' or even 'any'.\",\n     'type': 'string'}\n\nOn instance['argumentType']:\n    123",
      "data": {
        "$schema": "https://json-schema.org/draft-07/schema#",
        "argumentType": 123,
        "defaultLocale": "en-US",
        "input": "src/translations",
        "locales": [
          "en-US",
          "fr-FR",
          "es-ES"
        ],
        "mapping": {
          "home": "HomeMessages",
          "about": "AboutMessages",
          "contact": "ContactMessages"
        },
        "output": "src/app/messages",
        "separator": "_"
      }
    },
    {
      "description": "llama-70b generated negative; focus on additionalProperties keyword with an object schema",
      "valid": false,
      "rust_error": "123 is not of type \"string\"",
      "python_error": "123 is not of type 'string'\n\nFailed validating 'type' in schema['properties']['mapping']['additionalProperties']:\n    {'type': 'string'}\n\nOn instance['mapping']['extra']:\n    123",
      "data": {
        "$schema": "https://json-schema.org/draft-07/schema#",
        "argumentType": "string | number",
        "defaultLocale": "en-US",
        "input": "src/translations",
        "locales": [
          "en-US",
          "fr-FR",
          "es-ES"
        ],
        "mapping": {
          "home": "HomeMessages",
          "about": "AboutMessages",
          "contact": "ContactMessages",
          "extra": 123
        },
        "output": "src/app/messages",
        "separator": "_"
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "123 is not of type \"string\"",
      "python_error": "123 is not of type 'string'\n\nFailed validating 'type' in schema['properties']['$schema']:\n    {'type': 'string'}\n\nOn instance['$schema']:\n    123",
      "data": {
        "$schema": 123,
        "argumentType": "string | number",
        "defaultLocale": "en-US",
        "input": "src/translations",
        "locales": [
          "en-US",
          "fr-FR",
          123,
          "es-ES"
        ],
        "mapping": {
          "home": "HomeMessages",
          "about": "AboutMessages",
          "contact": "ContactMessages"
        },
        "output": "src/app/messages",
        "separator": "_"
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "$schema": "https://json-schema.org/draft-07/schema#",
        "argumentType": "string | number",
        "defaultLocale": "fr",
        "input": "src/i18n/translations",
        "locales": [
          "en",
          "fr",
          "es"
        ],
        "mapping": {
          "home": "HomeMessages",
          "about": "AboutMessages"
        },
        "output": "src/app/i18n/messages",
        "separator": "_"
      }
    },
    {
      "description": "llama-70b generated negative; focus on additionalProperties keyword with an object schema",
      "valid": false,
      "rust_error": "123 is not of type \"string\"",
      "python_error": "123 is not of type 'string'\n\nFailed validating 'type' in schema['properties']['mapping']['additionalProperties']:\n    {'type': 'string'}\n\nOn instance['mapping']['invalid']:\n    123",
      "data": {
        "$schema": "https://json-schema.org/draft-07/schema#",
        "argumentType": "string | number",
        "defaultLocale": "fr",
        "input": "src/i18n/translations",
        "locales": [
          "en",
          "fr",
          "es"
        ],
        "mapping": {
          "home": "HomeMessages",
          "about": "AboutMessages",
          "invalid": 123
        },
        "output": "src/app/i18n/messages",
        "separator": "_"
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "123 is not of type \"string\"",
      "python_error": "None is not of type 'string'\n\nFailed validating 'type' in schema['properties']['separator']:\n    {'default': '.',\n     'description': 'File name separator between base name and locale',\n     'type': 'string'}\n\nOn instance['separator']:\n    None",
      "data": {
        "$schema": 123,
        "argumentType": "string | number",
        "defaultLocale": "fr",
        "input": "src/i18n/translations",
        "locales": [
          "en",
          123,
          "es"
        ],
        "mapping": {
          "home": "HomeMessages",
          "about": "AboutMessages",
          "invalid": null
        },
        "output": "src/app/i18n/messages",
        "separator": null
      }
    }
  ]
}