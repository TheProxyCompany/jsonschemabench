{
  "description": "sample Github_easy/o26296.json",
  "meta": {
    "full_size": 470,
    "stripped_size": 430,
    "features": [
      "@minmaxLength",
      "additionalProperties"
    ],
    "raw_features": [
      "$schema",
      "_boolSchema",
      "minLength",
      "properties",
      "required",
      "type",
      "type:array",
      "type:boolean",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "additionalProperties": false,
    "properties": {
      "email": {
        "_format": "email",
        "type": "string"
      },
      "first": {
        "type": "string"
      },
      "last": {
        "type": "string"
      },
      "password": {
        "minLength": 8,
        "type": "string"
      },
      "roles": {
        "type": "array"
      },
      "username": {
        "minLength": 3,
        "type": "string"
      },
      "verification": {
        "type": "string"
      },
      "verified": {
        "type": "boolean"
      }
    },
    "required": [
      "email",
      "first",
      "last",
      "username",
      "verified",
      "roles"
    ],
    "title": "user schema",
    "type": "object"
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "email": "john.doe@example.com",
        "first": "John",
        "last": "Doe",
        "password": "Password123",
        "roles": [
          "admin",
          "user"
        ],
        "username": "johndoe",
        "verification": "123456",
        "verified": true
      }
    },
    {
      "description": "llama-70b generated negative; focus on minLength keyword",
      "valid": false,
      "rust_error": "\"Pass\" is shorter than 8 characters",
      "python_error": "'jo' is too short\n\nFailed validating 'minLength' in schema['properties']['username']:\n    {'minLength': 3, 'type': 'string'}\n\nOn instance['username']:\n    'jo'",
      "data": {
        "email": "john.doe@example.com",
        "first": "John",
        "last": "Doe",
        "password": "Pass",
        "roles": [
          "admin",
          "user"
        ],
        "username": "jo",
        "verification": "123456",
        "verified": true
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"Pass\" is shorter than 8 characters",
      "python_error": "'Pass' is too short\n\nFailed validating 'minLength' in schema['properties']['password']:\n    {'minLength': 8, 'type': 'string'}\n\nOn instance['password']:\n    'Pass'",
      "data": {
        "email": "john.doe@example.com",
        "first": "John",
        "last": "Doe",
        "password": "Pass",
        "roles": [
          "admin",
          "user"
        ],
        "username": "johndoe",
        "verification": "123456",
        "verified": true
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "email": "john.doe@example.com",
        "first": "John",
        "last": "Doe",
        "password": "password123",
        "roles": [
          "admin",
          "user"
        ],
        "username": "johndoe",
        "verification": "123456",
        "verified": true
      }
    },
    {
      "description": "llama-70b generated negative; focus on minLength keyword",
      "valid": false,
      "rust_error": "\"pass\" is shorter than 8 characters",
      "python_error": "'ab' is too short\n\nFailed validating 'minLength' in schema['properties']['username']:\n    {'minLength': 3, 'type': 'string'}\n\nOn instance['username']:\n    'ab'",
      "data": {
        "email": "john.doe@example.com",
        "first": "John",
        "last": "Doe",
        "password": "pass",
        "roles": [
          "admin",
          "user"
        ],
        "username": "ab",
        "verification": "123456",
        "verified": true
      }
    }
  ]
}