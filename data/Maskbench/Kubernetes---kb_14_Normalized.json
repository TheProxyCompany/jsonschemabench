{
  "description": "sample Kubernetes/kb_14_Normalized.json",
  "meta": {
    "full_size": 684,
    "stripped_size": 111,
    "features": [],
    "raw_features": [
      "properties",
      "type",
      "type:[]",
      "type:boolean",
      "type:null",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "description": "AllowedHostPath defines the host volume conditions that will be enabled by a policy for pods to use. It requires the path prefix to be defined.",
    "properties": {
      "pathPrefix": {
        "description": "pathPrefix is the path prefix that the host volume must match. It does not support `*`. Trailing slashes are trimmed when validating the path prefix with a host path.\n\nExamples: `/foo` would allow `/foo`, `/foo/` and `/foo/bar` `/foo` would not allow `/food` or `/etc/foo`",
        "type": [
          "string",
          "null"
        ]
      },
      "readOnly": {
        "description": "when set to true, will allow host volumes matching the pathPrefix only if all volume mounts are readOnly.",
        "type": [
          "boolean",
          "null"
        ]
      }
    },
    "type": "object"
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "pathPrefix": "/example",
        "readOnly": true
      }
    },
    {
      "description": "llama-70b generated negative; focus on type keyword with an array of types",
      "valid": false,
      "rust_error": "123 is not of types \"null\", \"string\"",
      "python_error": "123 is not of type 'string', 'null'\n\nFailed validating 'type' in schema['properties']['pathPrefix']:\n    {'description': 'pathPrefix is the path prefix that the host volume '\n                    'must match. It does not support `*`. Trailing slashes '\n                    'are trimmed when validating the path prefix with a '\n                    'host path.\\n'\n                    '\\n'\n                    'Examples: `/foo` would allow `/foo`, `/foo/` and '\n                    '`/foo/bar` `/foo` would not allow `/food` or '\n                    '`/etc/foo`',\n     'type': ['string', 'null']}\n\nOn instance['pathPrefix']:\n    123",
      "data": {
        "pathPrefix": 123,
        "readOnly": true
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "pathPrefix": "/etc",
        "readOnly": true
      }
    }
  ]
}