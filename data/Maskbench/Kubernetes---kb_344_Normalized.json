{
  "description": "sample Kubernetes/kb_344_Normalized.json",
  "meta": {
    "full_size": 4746,
    "stripped_size": 2017,
    "features": [
      "$ref",
      "additionalProperties",
      "additionalProperties:object",
      "items",
      "oneOf"
    ],
    "raw_features": [
      "definitions",
      "properties",
      "required",
      "type",
      "type:array",
      "type:integer",
      "type:number",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "definitions": {
      "https:__kubernetesjsonschema_dev_master__defs_json_defs_io_k8s_api_autoscaling_v2beta2_MetricIdentifier": {
        "description": "MetricIdentifier defines the name and optionally selector for a metric",
        "properties": {
          "name": {
            "description": "name is the name of the given metric",
            "type": "string"
          },
          "selector": {
            "$ref": "#/definitions/https:__kubernetesjsonschema_dev_master__defs_json_defs_io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelector",
            "description": "selector is the string-encoded form of a standard kubernetes label selector for the given metric When set, it is passed as an additional parameter to the metrics server for more specific metrics scoping. When unset, just the metricName will be used to gather metrics."
          }
        },
        "required": [
          "name"
        ],
        "type": "object"
      },
      "https:__kubernetesjsonschema_dev_master__defs_json_defs_io_k8s_api_autoscaling_v2beta2_MetricTarget": {
        "description": "MetricTarget defines the target value, average value, or average utilization of a specific metric",
        "properties": {
          "averageUtilization": {
            "_format": "int32",
            "description": "averageUtilization is the target value of the average of the resource metric across all relevant pods, represented as a percentage of the requested value of the resource for the pods. Currently only valid for Resource metric source type",
            "type": "integer"
          },
          "averageValue": {
            "$ref": "#/definitions/https:__kubernetesjsonschema_dev_master__defs_json_defs_io_k8s_apimachinery_pkg_api_resource_Quantity",
            "description": "averageValue is the target value of the average of the metric across all relevant pods (as a quantity)"
          },
          "type": {
            "description": "type represents whether the metric type is Utilization, Value, or AverageValue",
            "type": "string"
          },
          "value": {
            "$ref": "#/definitions/https:__kubernetesjsonschema_dev_master__defs_json_defs_io_k8s_apimachinery_pkg_api_resource_Quantity",
            "description": "value is the target value of the metric (as a quantity)."
          }
        },
        "required": [
          "type"
        ],
        "type": "object"
      },
      "https:__kubernetesjsonschema_dev_master__defs_json_defs_io_k8s_apimachinery_pkg_api_resource_Quantity": {
        "oneOf": [
          {
            "type": "string"
          },
          {
            "type": "number"
          }
        ]
      },
      "https:__kubernetesjsonschema_dev_master__defs_json_defs_io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelector": {
        "description": "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.",
        "properties": {
          "matchExpressions": {
            "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
            "items": {
              "$ref": "#/definitions/https:__kubernetesjsonschema_dev_master__defs_json_defs_io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelectorRequirement"
            },
            "type": "array"
          },
          "matchLabels": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
            "type": "object"
          }
        },
        "type": "object"
      },
      "https:__kubernetesjsonschema_dev_master__defs_json_defs_io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelectorRequirement": {
        "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
        "properties": {
          "key": {
            "description": "key is the label key that the selector applies to.",
            "type": "string",
            "x-kubernetes-patch-merge-key": "key",
            "x-kubernetes-patch-strategy": "merge"
          },
          "operator": {
            "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
            "type": "string"
          },
          "values": {
            "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "required": [
          "key",
          "operator"
        ],
        "type": "object"
      }
    },
    "description": "ExternalMetricSource indicates how to scale on a metric not associated with any Kubernetes object (for example length of queue in cloud messaging service, or QPS from loadbalancer running outside of cluster).",
    "properties": {
      "metric": {
        "$ref": "#/definitions/https:__kubernetesjsonschema_dev_master__defs_json_defs_io_k8s_api_autoscaling_v2beta2_MetricIdentifier",
        "description": "metric identifies the target metric by name and selector"
      },
      "target": {
        "$ref": "#/definitions/https:__kubernetesjsonschema_dev_master__defs_json_defs_io_k8s_api_autoscaling_v2beta2_MetricTarget",
        "description": "target specifies the target value for the given metric"
      }
    },
    "required": [
      "metric",
      "target"
    ],
    "type": "object"
  },
  "tests": [
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "metric": {
          "name": "queue_length",
          "selector": {
            "matchLabels": {
              "app": "my_app"
            }
          }
        },
        "target": {
          "type": "Value",
          "value": "10"
        }
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "metric": {
          "name": "queue_length",
          "selector": {
            "matchLabels": {
              "app": "my-app"
            }
          }
        },
        "target": {
          "type": "Value",
          "value": "10"
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on oneOf keyword",
      "valid": false,
      "rust_error": "{\"key\":\"invalid-quantity\"} is not valid under any of the schemas listed in the 'oneOf' keyword",
      "python_error": "{'key': 'invalid-quantity'} is not valid under any of the given schemas\n\nFailed validating 'oneOf' in schema['properties']['target']['properties']['value']:\n    {'oneOf': [{'type': 'string'}, {'type': 'number'}]}\n\nOn instance['target']['value']:\n    {'key': 'invalid-quantity'}",
      "data": {
        "metric": {
          "name": "queue_length",
          "selector": {
            "matchLabels": {
              "app": "my-app"
            }
          }
        },
        "target": {
          "type": "Value",
          "value": {
            "key": "invalid-quantity"
          }
        }
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "12345 is not of type \"string\"",
      "python_error": "12345 is not of type 'string'\n\nFailed validating 'type' in schema['properties']['metric']['properties']['name']:\n    {'description': 'name is the name of the given metric',\n     'type': 'string'}\n\nOn instance['metric']['name']:\n    12345",
      "data": {
        "metric": {
          "name": 12345,
          "selector": {
            "matchLabels": {
              "app": "my-app"
            }
          }
        },
        "target": {
          "type": "Value",
          "value": "10"
        }
      }
    }
  ]
}