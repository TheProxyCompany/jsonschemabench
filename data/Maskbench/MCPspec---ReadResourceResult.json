{
  "description": "sample MCPspec/ReadResourceResult.json",
  "meta": {
    "full_size": 1383,
    "stripped_size": 747,
    "features": [
      "$ref",
      "@siblingKeys",
      "additionalProperties",
      "additionalProperties:object",
      "anyOf",
      "format",
      "format:byte",
      "format:uri",
      "items"
    ],
    "raw_features": [
      "$schema",
      "definitions",
      "properties",
      "required",
      "type",
      "type:array",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$ref": "#/definitions/ReadResourceResult",
    "definitions": {
      "ReadResourceResult": {
        "description": "The server's response to a resources/read request from the client.",
        "properties": {
          "_meta": {
            "additionalProperties": {},
            "description": "This result property is reserved by the protocol to allow clients and servers to attach additional metadata to their responses.",
            "type": "object"
          },
          "contents": {
            "items": {
              "anyOf": [
                {
                  "$ref": "#/definitions/TextResourceContents"
                },
                {
                  "$ref": "#/definitions/BlobResourceContents"
                }
              ]
            },
            "type": "array"
          }
        },
        "required": [
          "contents"
        ],
        "type": "object"
      },
      "TextResourceContents": {
        "properties": {
          "mimeType": {
            "description": "The MIME type of this resource, if known.",
            "type": "string"
          },
          "text": {
            "description": "The text of the item. This must only be set if the item can actually be represented as text (not binary data).",
            "type": "string"
          },
          "uri": {
            "description": "The URI of this resource.",
            "format": "uri",
            "type": "string"
          }
        },
        "required": [
          "text",
          "uri"
        ],
        "type": "object"
      },
      "BlobResourceContents": {
        "properties": {
          "blob": {
            "description": "A base64-encoded string representing the binary data of the item.",
            "format": "byte",
            "type": "string"
          },
          "mimeType": {
            "description": "The MIME type of this resource, if known.",
            "type": "string"
          },
          "uri": {
            "description": "The URI of this resource.",
            "format": "uri",
            "type": "string"
          }
        },
        "required": [
          "blob",
          "uri"
        ],
        "type": "object"
      }
    }
  },
  "tests": [
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "_meta": {},
        "contents": [
          {
            "text": "Example text content.",
            "uri": "https://example.com/text-resource"
          },
          {
            "blob": "SGVsbG8gd29ybGQ=",
            "uri": "https://example.com/blob-resource"
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on format keyword",
      "valid": false,
      "rust_error": "{\"text\":\"Example text content.\",\"uri\":\"not a uri\"} is not valid under any of the schemas listed in the 'anyOf' keyword",
      "python_error": "{'text': 'Example text content.', 'uri': 'not a uri'} is not valid under any of the given schemas\n\nFailed validating 'anyOf' in schema['properties']['contents']['items']:\n    {'anyOf': [{'$ref': '#/definitions/TextResourceContents'},\n               {'$ref': '#/definitions/BlobResourceContents'}]}\n\nOn instance['contents'][0]:\n    {'text': 'Example text content.', 'uri': 'not a uri'}",
      "data": {
        "_meta": {},
        "contents": [
          {
            "text": "Example text content.",
            "uri": "not a uri"
          },
          {
            "blob": "not a base64 encoded string",
            "uri": "https://example.com/blob-resource"
          }
        ]
      }
    }
  ]
}