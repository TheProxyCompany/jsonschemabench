{
  "description": "sample Kubernetes/kb_642_Normalized.json",
  "meta": {
    "full_size": 386,
    "stripped_size": 136,
    "features": [],
    "raw_features": [
      "properties",
      "required",
      "type",
      "type:[]",
      "type:null",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "description": "ObjectFieldSelector selects an APIVersioned field of an object.",
    "properties": {
      "apiVersion": {
        "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
        "type": [
          "string",
          "null"
        ]
      },
      "fieldPath": {
        "description": "Path of the field to select in the specified API version.",
        "type": [
          "string",
          "null"
        ]
      }
    },
    "required": [
      "fieldPath"
    ],
    "type": "object"
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "apiVersion": "v1",
        "fieldPath": "spec.containers[0].name"
      }
    },
    {
      "description": "llama-70b generated negative; focus on type keyword with an array of types",
      "valid": false,
      "rust_error": "123 is not of types \"null\", \"string\"",
      "python_error": "123 is not of type 'string', 'null'\n\nFailed validating 'type' in schema['properties']['apiVersion']:\n    {'description': 'Version of the schema the FieldPath is written in '\n                    'terms of, defaults to \"v1\".',\n     'type': ['string', 'null']}\n\nOn instance['apiVersion']:\n    123",
      "data": {
        "apiVersion": 123,
        "fieldPath": "spec.containers[0].name"
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"fieldPath\" is a required property",
      "python_error": "'fieldPath' is a required property\n\nFailed validating 'required' in schema:\n    {'description': 'ObjectFieldSelector selects an APIVersioned field of '\n                    'an object.',\n     'properties': {'apiVersion': {'description': 'Version of the schema '\n                                                  'the FieldPath is '\n                                                  'written in terms of, '\n                                                  'defaults to \"v1\".',\n                                   'type': ['string', 'null']},\n                    'fieldPath': {'description': 'Path of the field to '\n                                                 'select in the specified '\n                                                 'API version.',\n                                  'type': ['string', 'null']}},\n     'required': ['fieldPath'],\n     'type': 'object'}\n\nOn instance:\n    {'apiVersion': 'v1'}",
      "data": {
        "apiVersion": "v1"
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "123 is not of types \"null\", \"string\"",
      "python_error": "123 is not of type 'string', 'null'\n\nFailed validating 'type' in schema['properties']['fieldPath']:\n    {'description': 'Path of the field to select in the specified API '\n                    'version.',\n     'type': ['string', 'null']}\n\nOn instance['fieldPath']:\n    123",
      "data": {
        "apiVersion": "v1",
        "fieldPath": 123
      }
    },
    {
      "description": "llama-70b generated negative; focus on type keyword with an array of types",
      "valid": false,
      "rust_error": "1 is not of types \"null\", \"string\"",
      "python_error": "1 is not of type 'string', 'null'\n\nFailed validating 'type' in schema['properties']['apiVersion']:\n    {'description': 'Version of the schema the FieldPath is written in '\n                    'terms of, defaults to \"v1\".',\n     'type': ['string', 'null']}\n\nOn instance['apiVersion']:\n    1",
      "data": {
        "apiVersion": 1,
        "fieldPath": "spec.containers[0].name"
      }
    }
  ]
}