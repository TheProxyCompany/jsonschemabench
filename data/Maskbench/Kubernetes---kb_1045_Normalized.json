{
  "description": "sample Kubernetes/kb_1045_Normalized.json",
  "meta": {
    "full_size": 3290,
    "stripped_size": 1151,
    "features": [
      "$ref",
      "additionalProperties",
      "additionalProperties:object",
      "items"
    ],
    "raw_features": [
      "definitions",
      "properties",
      "type",
      "type:[]",
      "type:array",
      "type:null",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "definitions": {
      "https:__kubernetesjsonschema_dev_master__defs_json_defs_io_k8s_api_authorization_v1beta1_NonResourceAttributes": {
        "description": "NonResourceAttributes includes the authorization attributes available for non-resource requests to the Authorizer interface",
        "properties": {
          "path": {
            "description": "Path is the URL path of the request",
            "type": "string"
          },
          "verb": {
            "description": "Verb is the standard HTTP verb",
            "type": "string"
          }
        },
        "type": "object"
      },
      "https:__kubernetesjsonschema_dev_master__defs_json_defs_io_k8s_api_authorization_v1beta1_ResourceAttributes": {
        "description": "ResourceAttributes includes the authorization attributes available for resource requests to the Authorizer interface",
        "properties": {
          "group": {
            "description": "Group is the API Group of the Resource.  \"*\" means all.",
            "type": "string"
          },
          "name": {
            "description": "Name is the name of the resource being requested for a \"get\" or deleted for a \"delete\". \"\" (empty) means all.",
            "type": "string"
          },
          "namespace": {
            "description": "Namespace is the namespace of the action being requested.  Currently, there is no distinction between no namespace and all namespaces \"\" (empty) is defaulted for LocalSubjectAccessReviews \"\" (empty) is empty for cluster-scoped resources \"\" (empty) means \"all\" for namespace scoped resources from a SubjectAccessReview or SelfSubjectAccessReview",
            "type": "string"
          },
          "resource": {
            "description": "Resource is one of the existing resource types.  \"*\" means all.",
            "type": "string"
          },
          "subresource": {
            "description": "Subresource is one of the existing resource types.  \"\" means none.",
            "type": "string"
          },
          "verb": {
            "description": "Verb is a kubernetes resource API verb, like: get, list, watch, create, update, delete, proxy.  \"*\" means all.",
            "type": "string"
          },
          "version": {
            "description": "Version is the API Version of the Resource.  \"*\" means all.",
            "type": "string"
          }
        },
        "type": "object"
      }
    },
    "description": "SubjectAccessReviewSpec is a description of the access request.  Exactly one of ResourceAuthorizationAttributes and NonResourceAuthorizationAttributes must be set",
    "properties": {
      "extra": {
        "additionalProperties": {
          "items": {
            "type": [
              "string",
              "null"
            ]
          },
          "type": [
            "array",
            "null"
          ]
        },
        "description": "Extra corresponds to the user.Info.GetExtra() method from the authenticator.  Since that is input to the authorizer it needs a reflection here.",
        "type": [
          "object",
          "null"
        ]
      },
      "group": {
        "description": "Groups is the groups you're testing for.",
        "items": {
          "type": [
            "string",
            "null"
          ]
        },
        "type": [
          "array",
          "null"
        ]
      },
      "nonResourceAttributes": {
        "$ref": "#/definitions/https:__kubernetesjsonschema_dev_master__defs_json_defs_io_k8s_api_authorization_v1beta1_NonResourceAttributes",
        "description": "NonResourceAttributes describes information for a non-resource access request"
      },
      "resourceAttributes": {
        "$ref": "#/definitions/https:__kubernetesjsonschema_dev_master__defs_json_defs_io_k8s_api_authorization_v1beta1_ResourceAttributes",
        "description": "ResourceAuthorizationAttributes describes information for a resource access request"
      },
      "uid": {
        "description": "UID information about the requesting user.",
        "type": [
          "string",
          "null"
        ]
      },
      "user": {
        "description": "User is the user you're testing for. If you specify \"User\" but not \"Group\", then is it interpreted as \"What if User were not a member of any groups",
        "type": [
          "string",
          "null"
        ]
      }
    },
    "type": "object"
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "extra": {
          "extra-key": [
            "extra-value"
          ]
        },
        "group": [
          "group1",
          "group2"
        ],
        "nonResourceAttributes": {
          "path": "/path/to/resource",
          "verb": "GET"
        },
        "resourceAttributes": {
          "group": "apps",
          "name": "my-deployment",
          "namespace": "default",
          "resource": "deployments",
          "subresource": "",
          "verb": "UPDATE",
          "version": "v1"
        },
        "uid": "12345678-1234-1234-1234-123456789012",
        "user": "john-doe"
      }
    },
    {
      "description": "llama-70b generated negative; focus on additionalProperties keyword with an object schema",
      "valid": false,
      "rust_error": "\"extra-value2\" is not of types \"array\", \"null\"",
      "python_error": "'extra-value2' is not of type 'array', 'null'\n\nFailed validating 'type' in schema['properties']['extra']['additionalProperties']:\n    {'items': {'type': ['string', 'null']}, 'type': ['array', 'null']}\n\nOn instance['extra']['extra-key2']:\n    'extra-value2'",
      "data": {
        "extra": {
          "extra-key": [
            "extra-value"
          ],
          "extra-key2": "extra-value2"
        },
        "group": [
          "group1",
          "group2"
        ],
        "nonResourceAttributes": {
          "path": "/path/to/resource",
          "verb": "GET"
        },
        "resourceAttributes": {
          "group": "apps",
          "name": "my-deployment",
          "namespace": "default",
          "resource": "deployments",
          "subresource": "",
          "verb": "UPDATE",
          "version": "v1"
        },
        "uid": "12345678-1234-1234-1234-123456789012",
        "user": "john-doe"
      }
    },
    {
      "description": "llama-70b generated negative; focus on type keyword with an array of types",
      "valid": false,
      "rust_error": "\"extra-value\" is not of types \"array\", \"null\"",
      "python_error": "'group1' is not of type 'array', 'null'\n\nFailed validating 'type' in schema['properties']['group']:\n    {'description': \"Groups is the groups you're testing for.\",\n     'items': {'type': ['string', 'null']},\n     'type': ['array', 'null']}\n\nOn instance['group']:\n    'group1'",
      "data": {
        "extra": {
          "extra-key": "extra-value"
        },
        "group": "group1",
        "nonResourceAttributes": {
          "path": "/path/to/resource",
          "verb": "GET"
        },
        "resourceAttributes": {
          "group": "apps",
          "name": "my-deployment",
          "namespace": "default",
          "resource": "deployments",
          "subresource": "",
          "verb": "UPDATE",
          "version": "v1"
        },
        "uid": "12345678-1234-1234-1234-123456789012",
        "user": "john-doe"
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "1 is not of type \"string\"",
      "python_error": "1 is not of type 'string'\n\nFailed validating 'type' in schema['properties']['resourceAttributes']['properties']['version']:\n    {'description': 'Version is the API Version of the Resource.  \"*\" '\n                    'means all.',\n     'type': 'string'}\n\nOn instance['resourceAttributes']['version']:\n    1",
      "data": {
        "extra": {
          "extra-key": [
            "extra-value"
          ]
        },
        "group": [
          "group1",
          "group2"
        ],
        "nonResourceAttributes": {
          "path": "/path/to/resource",
          "verb": "GET"
        },
        "resourceAttributes": {
          "group": "apps",
          "name": "my-deployment",
          "namespace": "default",
          "resource": "deployments",
          "subresource": "",
          "verb": "UPDATE",
          "version": 1
        },
        "uid": "12345678-1234-1234-1234-123456789012",
        "user": "john-doe"
      }
    },
    {
      "description": "llama-70b generated negative; focus on type keyword with an array of types",
      "valid": false,
      "rust_error": "\"extra-value\" is not of types \"array\", \"null\"",
      "python_error": "'extra-value' is not of type 'array', 'null'\n\nFailed validating 'type' in schema['properties']['extra']['additionalProperties']:\n    {'items': {'type': ['string', 'null']}, 'type': ['array', 'null']}\n\nOn instance['extra']['extra-key']:\n    'extra-value'",
      "data": {
        "extra": {
          "extra-key": "extra-value"
        },
        "group": [
          "group1",
          "group2"
        ],
        "nonResourceAttributes": {
          "path": "/path/to/resource",
          "verb": "GET"
        },
        "resourceAttributes": {
          "group": "apps",
          "name": "my-deployment",
          "namespace": "default",
          "resource": "deployments",
          "subresource": "",
          "verb": "UPDATE",
          "version": "v1"
        },
        "uid": "12345678-1234-1234-1234-123456789012",
        "user": "john-doe"
      }
    },
    {
      "description": "llama-70b generated negative; focus on type keyword with an array of types",
      "valid": false,
      "rust_error": "123 is not of types \"null\", \"string\"",
      "python_error": "123 is not of type 'string', 'null'\n\nFailed validating 'type' in schema['properties']['extra']['additionalProperties']['items']:\n    {'type': ['string', 'null']}\n\nOn instance['extra']['extra-key'][0]:\n    123",
      "data": {
        "extra": {
          "extra-key": [
            123
          ]
        },
        "group": [
          "group1",
          "group2"
        ],
        "nonResourceAttributes": {
          "path": "/path/to/resource",
          "verb": "GET"
        },
        "resourceAttributes": {
          "group": "apps",
          "name": "my-deployment",
          "namespace": "default",
          "resource": "deployments",
          "subresource": "",
          "verb": "UPDATE",
          "version": "v1"
        },
        "uid": "12345678-1234-1234-1234-123456789012",
        "user": "john-doe"
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "123 is not of type \"string\"",
      "python_error": "123 is not of type 'string'\n\nFailed validating 'type' in schema['properties']['nonResourceAttributes']['properties']['verb']:\n    {'description': 'Verb is the standard HTTP verb', 'type': 'string'}\n\nOn instance['nonResourceAttributes']['verb']:\n    123",
      "data": {
        "extra": {
          "extra-key": [
            "extra-value"
          ]
        },
        "group": [
          "group1",
          "group2"
        ],
        "nonResourceAttributes": {
          "path": "/path/to/resource",
          "verb": 123
        },
        "resourceAttributes": {
          "group": "apps",
          "name": "my-deployment",
          "namespace": "default",
          "resource": "deployments",
          "subresource": "",
          "verb": "UPDATE",
          "version": "v1"
        },
        "uid": "12345678-1234-1234-1234-123456789012",
        "user": "john-doe"
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "extra": {
          "key1": [
            "value1",
            "value2"
          ],
          "key2": [
            "value3"
          ]
        },
        "group": [
          "group1",
          "group2"
        ],
        "nonResourceAttributes": {
          "path": "/path/to/resource",
          "verb": "GET"
        },
        "resourceAttributes": {
          "group": "apps",
          "name": "my-deployment",
          "namespace": "default",
          "resource": "deployments",
          "subresource": "",
          "verb": "UPDATE",
          "version": "v1"
        },
        "uid": "12345678-1234-1234-1234-123456789012",
        "user": "john.doe"
      }
    },
    {
      "description": "llama-70b generated negative; focus on type keyword with an array of types",
      "valid": false,
      "rust_error": "\"value1\" is not of types \"array\", \"null\"",
      "python_error": "'value1' is not of type 'array', 'null'\n\nFailed validating 'type' in schema['properties']['extra']['additionalProperties']:\n    {'items': {'type': ['string', 'null']}, 'type': ['array', 'null']}\n\nOn instance['extra']['key1']:\n    'value1'",
      "data": {
        "extra": {
          "key1": "value1",
          "key2": [
            "value3"
          ]
        },
        "group": [
          "group1",
          "group2"
        ],
        "nonResourceAttributes": {
          "path": "/path/to/resource",
          "verb": "GET"
        },
        "resourceAttributes": {
          "group": "apps",
          "name": "my-deployment",
          "namespace": "default",
          "resource": "deployments",
          "subresource": "",
          "verb": "UPDATE",
          "version": "v1"
        },
        "uid": "12345678-1234-1234-1234-123456789012",
        "user": "john.doe"
      }
    },
    {
      "description": "llama-70b generated negative; focus on additionalProperties keyword with an object schema",
      "valid": false,
      "rust_error": "\"value4\" is not of types \"array\", \"null\"",
      "python_error": "123 is not of type 'array', 'null'\n\nFailed validating 'type' in schema['properties']['extra']['additionalProperties']:\n    {'items': {'type': ['string', 'null']}, 'type': ['array', 'null']}\n\nOn instance['extra']['key4']:\n    123",
      "data": {
        "extra": {
          "key1": [
            "value1",
            "value2"
          ],
          "key2": [
            "value3"
          ],
          "key3": "value4",
          "key4": 123
        },
        "group": [
          "group1",
          "group2"
        ],
        "nonResourceAttributes": {
          "path": "/path/to/resource",
          "verb": "GET"
        },
        "resourceAttributes": {
          "group": "apps",
          "name": "my-deployment",
          "namespace": "default",
          "resource": "deployments",
          "subresource": "",
          "verb": "UPDATE",
          "version": "v1"
        },
        "uid": "12345678-1234-1234-1234-123456789012",
        "user": "john.doe"
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "123 is not of types \"null\", \"string\"",
      "python_error": "456 is not of type 'string'\n\nFailed validating 'type' in schema['properties']['resourceAttributes']['properties']['verb']:\n    {'description': 'Verb is a kubernetes resource API verb, like: get, '\n                    'list, watch, create, update, delete, proxy.  \"*\" '\n                    'means all.',\n     'type': 'string'}\n\nOn instance['resourceAttributes']['verb']:\n    456",
      "data": {
        "extra": {
          "key1": [
            "value1",
            123
          ],
          "key2": [
            "value3"
          ]
        },
        "group": [
          "group1",
          "group2"
        ],
        "nonResourceAttributes": {
          "path": "/path/to/resource",
          "verb": 123
        },
        "resourceAttributes": {
          "group": "apps",
          "name": "my-deployment",
          "namespace": "default",
          "resource": "deployments",
          "subresource": "",
          "verb": 456,
          "version": "v1"
        },
        "uid": "12345678-1234-1234-1234-123456789012",
        "user": "john.doe",
        "unknownKey": "thisIsInvalid"
      }
    }
  ]
}