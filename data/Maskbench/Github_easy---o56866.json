{
  "description": "sample Github_easy/o56866.json",
  "meta": {
    "full_size": 1058,
    "stripped_size": 354,
    "features": [
      "$ref",
      "@siblingKeys",
      "format",
      "format:uri"
    ],
    "raw_features": [
      "$schema",
      "allOf:trivial",
      "definitions",
      "properties",
      "type",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "@type": "OfferItemCondition",
    "@context": "http://schema.org/",
    "description": "Schema.org OfferItemCondition",
    "type": "object",
    "definitions": {
      "Thing": {
        "type": "object",
        "properties": {
          "additionalType": {
            "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.",
            "type": "string",
            "format": "uri"
          },
          "description": {
            "description": "A short description of the item.",
            "type": "string"
          },
          "image": {
            "description": "URL of an image of the item.",
            "type": "string",
            "format": "uri"
          },
          "name": {
            "description": "The name of the item.",
            "type": "string"
          },
          "url": {
            "description": "URL of the item.",
            "type": "string",
            "format": "uri"
          }
        }
      }
    },
    "allOf": [
      {
        "$ref": "#/definitions/Thing"
      }
    ]
  },
  "tests": [
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "@type": "OfferItemCondition",
        "@context": "http://schema.org/",
        "additionalType": "http://schema.org/NewCondition",
        "description": "Brand new item in its original packaging.",
        "image": "https://example.com/image.jpg",
        "name": "Brand New",
        "url": "https://example.com/offer-item-condition"
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "@type": "OfferItemCondition",
        "@context": "http://schema.org/",
        "additionalType": "http://schema.org/NewCondition",
        "description": "Brand new item, never used.",
        "image": "https://example.com/new-condition-image.jpg",
        "name": "New Condition",
        "url": "https://example.com/new-condition"
      }
    },
    {
      "description": "llama-70b generated negative; focus on allOf keyword",
      "valid": false,
      "rust_error": "true is not of type \"string\"",
      "python_error": "True is not of type 'string'\n\nFailed validating 'type' in schema['allOf'][0]['properties']['url']:\n    {'description': 'URL of the item.', 'type': 'string', 'format': 'uri'}\n\nOn instance['url']:\n    True",
      "data": {
        "@type": "OfferItemCondition",
        "@context": "http://schema.org/",
        "additionalType": "http://schema.org/NewCondition",
        "description": "Brand new item, never used.",
        "image": "https://example.com/new-condition-image.jpg",
        "name": "New Condition",
        "url": true
      }
    },
    {
      "description": "llama-70b generated negative; focus on format keyword",
      "valid": false,
      "rust_error": "\"not-a-uri\" is not a \"uri\"",
      "python_error": "'not-a-uri' is not a 'uri'\n\nFailed validating 'format' in schema['allOf'][0]['properties']['url']:\n    {'description': 'URL of the item.', 'type': 'string', 'format': 'uri'}\n\nOn instance['url']:\n    'not-a-uri'",
      "data": {
        "@type": "OfferItemCondition",
        "@context": "http://schema.org/",
        "additionalType": "not-a-uri",
        "description": "Brand new item, never used.",
        "image": "not-a-uri",
        "name": "New Condition",
        "url": "not-a-uri"
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"not a uri\" is not a \"uri\"",
      "python_error": "'not a uri' is not a 'uri'\n\nFailed validating 'format' in schema['allOf'][0]['properties']['url']:\n    {'description': 'URL of the item.', 'type': 'string', 'format': 'uri'}\n\nOn instance['url']:\n    'not a uri'",
      "data": {
        "@type": "OfferItemCondition",
        "@context": "http://schema.org/",
        "additionalType": "not a uri",
        "description": "Brand new item, never used.",
        "image": "https://example.com/new-condition-image.jpg",
        "name": "New Condition",
        "url": "not a uri"
      }
    }
  ]
}