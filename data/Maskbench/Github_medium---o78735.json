{
  "description": "sample Github_medium/o78735.json",
  "meta": {
    "full_size": 1070,
    "stripped_size": 783,
    "features": [
      "additionalProperties",
      "items"
    ],
    "raw_features": [
      "_boolSchema",
      "id",
      "properties",
      "required",
      "type",
      "type:[]",
      "type:array",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "additionalProperties": true,
    "properties": {
      "_id": {
        "id": "/id",
        "type": "string"
      },
      "boats": {
        "_id": "/boats",
        "items": {
          "_id": "/boats/0",
          "additionalProperties": true,
          "properties": {
            "boat_name": {
              "_id": "/boats/0/boat_name",
              "type": "string"
            }
          },
          "type": "object"
        },
        "type": "array"
      },
      "cars": {
        "_id": "/cars",
        "items": {
          "_id": "/cars/0",
          "additionalProperties": true,
          "properties": {
            "car_name": {
              "_id": "/cars/0/car_name",
              "type": "string"
            }
          },
          "type": "object"
        },
        "type": [
          "object",
          "array"
        ]
      },
      "event_name": {
        "_id": "/event_name",
        "type": "string"
      },
      "instanceID": {
        "_id": "/instanceID",
        "type": "string"
      },
      "isComplete": {
        "_id": "/isComplete",
        "type": "string"
      },
      "markedAsCompleteDate": {
        "_id": "/markedAsCompleteDate",
        "type": "string"
      },
      "meta": {
        "_id": "/meta",
        "additionalProperties": true,
        "properties": {
          "instanceID": {
            "_id": "/meta/instanceID",
            "type": "string"
          }
        },
        "type": "object"
      },
      "start_date": {
        "_id": "/start_date",
        "type": "string"
      },
      "submissionDate": {
        "_id": "/submissionDate",
        "type": "string"
      }
    },
    "required": [
      "id",
      "instanceID",
      "submissionDate",
      "isComplete",
      "markedAsCompleteDate",
      "event_name",
      "start_date",
      "boats",
      "cars",
      "meta"
    ],
    "type": "object"
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "_id": "12345",
        "boats": [
          {
            "boat_name": "Sailboat 1"
          },
          {
            "boat_name": "Sailboat 2"
          }
        ],
        "cars": [
          {
            "car_name": "Car 1"
          },
          {
            "car_name": "Car 2"
          }
        ],
        "event_name": "Boat and Car Show",
        "instanceID": "67890",
        "isComplete": "true",
        "markedAsCompleteDate": "2022-01-01",
        "meta": {
          "instanceID": "67890",
          "otherMeta": "other meta data"
        },
        "start_date": "2022-01-01",
        "submissionDate": "2022-01-01",
        "id": "12345"
      }
    },
    {
      "description": "llama-70b generated negative; focus on type keyword with an array of types",
      "valid": false,
      "rust_error": "\"Car 1\" is not of types \"array\", \"object\"",
      "python_error": "'Car 1' is not of type 'object', 'array'\n\nFailed validating 'type' in schema['properties']['cars']:\n    {'_id': '/cars',\n     'items': {'_id': '/cars/0',\n               'additionalProperties': True,\n               'properties': {'car_name': {'_id': '/cars/0/car_name',\n                                           'type': 'string'}},\n               'type': 'object'},\n     'type': ['object', 'array']}\n\nOn instance['cars']:\n    'Car 1'",
      "data": {
        "_id": "12345",
        "boats": [
          {
            "boat_name": "Sailboat 1"
          },
          {
            "boat_name": "Sailboat 2"
          }
        ],
        "cars": "Car 1",
        "event_name": "Boat and Car Show",
        "instanceID": "67890",
        "isComplete": "true",
        "markedAsCompleteDate": "2022-01-01",
        "meta": {
          "instanceID": "67890",
          "otherMeta": "other meta data"
        },
        "start_date": "2022-01-01",
        "submissionDate": "2022-01-01",
        "id": "12345"
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "12345 is not of type \"string\"",
      "python_error": "12345 is not of type 'string'\n\nFailed validating 'type' in schema['properties']['_id']:\n    {'id': '/id', 'type': 'string'}\n\nOn instance['_id']:\n    12345",
      "data": {
        "_id": 12345,
        "boats": [
          {
            "boat_name": "Sailboat 1"
          },
          {
            "boat_name": "Sailboat 2"
          }
        ],
        "cars": [
          {
            "car_name": "Car 1"
          },
          {
            "car_name": "Car 2"
          }
        ],
        "event_name": "Boat and Car Show",
        "instanceID": "67890",
        "isComplete": "true",
        "markedAsCompleteDate": "2022-01-01",
        "meta": {
          "instanceID": "67890",
          "otherMeta": "other meta data"
        },
        "start_date": "2022-01-01",
        "submissionDate": "2022-01-01",
        "id": "12345"
      }
    }
  ]
}