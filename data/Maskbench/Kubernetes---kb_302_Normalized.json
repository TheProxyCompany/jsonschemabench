{
  "description": "sample Kubernetes/kb_302_Normalized.json",
  "meta": {
    "full_size": 983,
    "stripped_size": 217,
    "features": [
      "format",
      "format:int32"
    ],
    "raw_features": [
      "properties",
      "required",
      "type",
      "type:[]",
      "type:integer",
      "type:null",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "description": "EndpointPort is a tuple that describes a single port.",
    "properties": {
      "appProtocol": {
        "description": "The application protocol for this port. This field follows standard Kubernetes label syntax. Un-prefixed names are reserved for IANA standard service names (as per RFC-6335 and http://www.iana.org/assignments/service-names). Non-standard protocols should use prefixed names such as mycompany.com/my-custom-protocol. Field can be enabled with ServiceAppProtocol feature gate.",
        "type": [
          "string",
          "null"
        ]
      },
      "name": {
        "description": "The name of this port.  This must match the 'name' field in the corresponding ServicePort. Must be a DNS_LABEL. Optional only if one port is defined.",
        "type": [
          "string",
          "null"
        ]
      },
      "port": {
        "description": "The port number of the endpoint.",
        "format": "int32",
        "type": [
          "integer",
          "null"
        ]
      },
      "protocol": {
        "description": "The IP protocol for this port. Must be UDP, TCP, or SCTP. Default is TCP.",
        "type": [
          "string",
          "null"
        ]
      }
    },
    "required": [
      "port"
    ],
    "type": "object"
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "appProtocol": "http",
        "name": "http-port",
        "port": 80,
        "protocol": "TCP"
      }
    },
    {
      "description": "llama-70b generated negative; focus on type keyword with an array of types",
      "valid": false,
      "rust_error": "123 is not of types \"null\", \"string\"",
      "python_error": "123 is not of type 'string', 'null'\n\nFailed validating 'type' in schema['properties']['appProtocol']:\n    {'description': 'The application protocol for this port. This field '\n                    'follows standard Kubernetes label syntax. Un-prefixed '\n                    'names are reserved for IANA standard service names '\n                    '(as per RFC-6335 and '\n                    'http://www.iana.org/assignments/service-names). '\n                    'Non-standard protocols should use prefixed names such '\n                    'as mycompany.com/my-custom-protocol. Field can be '\n                    'enabled with ServiceAppProtocol feature gate.',\n     'type': ['string', 'null']}\n\nOn instance['appProtocol']:\n    123",
      "data": {
        "appProtocol": 123,
        "name": "http-port",
        "port": 80,
        "protocol": "TCP"
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"eighty\" is not of types \"integer\", \"null\"",
      "python_error": "'eighty' is not of type 'integer', 'null'\n\nFailed validating 'type' in schema['properties']['port']:\n    {'description': 'The port number of the endpoint.',\n     'format': 'int32',\n     'type': ['integer', 'null']}\n\nOn instance['port']:\n    'eighty'",
      "data": {
        "appProtocol": "http",
        "name": "http-port",
        "port": "eighty",
        "protocol": "TCP"
      }
    },
    {
      "description": "llama-70b generated negative; focus on type keyword with an array of types",
      "valid": false,
      "rust_error": "true is not of types \"null\", \"string\"",
      "python_error": "True is not of type 'string', 'null'\n\nFailed validating 'type' in schema['properties']['appProtocol']:\n    {'description': 'The application protocol for this port. This field '\n                    'follows standard Kubernetes label syntax. Un-prefixed '\n                    'names are reserved for IANA standard service names '\n                    '(as per RFC-6335 and '\n                    'http://www.iana.org/assignments/service-names). '\n                    'Non-standard protocols should use prefixed names such '\n                    'as mycompany.com/my-custom-protocol. Field can be '\n                    'enabled with ServiceAppProtocol feature gate.',\n     'type': ['string', 'null']}\n\nOn instance['appProtocol']:\n    True",
      "data": {
        "appProtocol": true,
        "name": "http-port",
        "port": 80,
        "protocol": "TCP"
      }
    }
  ]
}