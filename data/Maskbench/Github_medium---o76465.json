{
  "description": "sample Github_medium/o76465.json",
  "meta": {
    "full_size": 1581,
    "stripped_size": 1487,
    "features": [
      "$ref",
      "@minmaxInteger",
      "@minmaxItems",
      "@minmaxLength",
      "@siblingKeys",
      "additionalProperties",
      "enum",
      "items",
      "oneOf",
      "pattern",
      "patternProperties"
    ],
    "raw_features": [
      "$schema",
      "_boolSchema",
      "definitions",
      "id",
      "maximum",
      "minItems",
      "minLength",
      "minimum",
      "properties",
      "required",
      "type",
      "type:array",
      "type:integer",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "additionalProperties": false,
    "definitions": {
      "enum": {
        "additionalProperties": false,
        "properties": {
          "enum": {
            "items": {
              "type": "string"
            },
            "minItems": 1,
            "type": "array",
            "_uniqueItems": true
          }
        },
        "required": [
          "enum"
        ],
        "type": "object"
      },
      "pattern": {
        "additionalProperties": false,
        "properties": {
          "pattern": {
            "minLength": 1,
            "type": "string"
          }
        },
        "required": [
          "pattern"
        ],
        "type": "object"
      }
    },
    "description": "Spider Metadata",
    "id": "http://api.cloudfeaster.com/v1.00/spider_metadata",
    "properties": {
      "authenticatingFactors": {
        "additionalProperties": false,
        "patternProperties": {
          "^[A-Za-z0-9_\\-]+$": {
            "$ref": "#/definitions/pattern",
            "type": "object"
          }
        },
        "type": "object"
      },
      "factorDisplayNames": {
        "additionalProperties": false,
        "patternProperties": {
          "^[A-Za-z0-9_\\-]+$": {
            "additionalProperties": false,
            "patternProperties": {
              "^[A-Za-z]{0,2}$": {
                "minLength": 1,
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "factorDisplayOrder": {
        "items": {
          "minLength": 1,
          "type": "string"
        },
        "minItems": 1,
        "type": "array",
        "_uniqueItems": true
      },
      "identifyingFactors": {
        "additionalProperties": false,
        "patternProperties": {
          "^[A-Za-z0-9_\\-]+$": {
            "oneOf": [
              {
                "$ref": "#/definitions/pattern"
              },
              {
                "$ref": "#/definitions/enum"
              }
            ],
            "type": "object"
          }
        },
        "type": "object"
      },
      "maxConcurrentCrawls": {
        "maximum": 25,
        "minimum": 1,
        "type": "integer"
      },
      "maxCrawlTimeInSeconds": {
        "maximum": 300,
        "minimum": 5,
        "type": "integer"
      },
      "paranoiaLevel": {
        "enum": [
          "low",
          "medium",
          "high"
        ],
        "type": "string"
      },
      "ttlInSeconds": {
        "maximum": 86400,
        "minimum": 60,
        "type": "integer"
      },
      "url": {
        "_format": "uri",
        "type": "string"
      }
    },
    "required": [
      "url"
    ],
    "title": "Spider Metadata",
    "type": "object"
  },
  "tests": [
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "authenticatingFactors": {
          "username": {
            "pattern": "^[a-zA-Z0-9]+$"
          },
          "password": {
            "pattern": "^[a-zA-Z0-9]+$"
          }
        },
        "factorDisplayNames": {
          "username": {
            "en": "Username"
          },
          "password": {
            "en": "Password"
          }
        },
        "factorDisplayOrder": [
          "username",
          "password"
        ],
        "identifyingFactors": {
          "username": {
            "pattern": "^[a-zA-Z0-9]+$"
          },
          "email": {
            "enum": [
              "user@example.com",
              "admin@example.com"
            ]
          }
        },
        "maxConcurrentCrawls": 10,
        "maxCrawlTimeInSeconds": 60,
        "paranoiaLevel": "medium",
        "ttlInSeconds": 3600,
        "url": "https://example.com"
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "authenticatingFactors": {
          "username": {
            "pattern": "^[a-zA-Z0-9]+$"
          },
          "password": {
            "pattern": "^[a-zA-Z0-9]+$"
          }
        },
        "factorDisplayNames": {
          "username": {
            "en": "Username"
          },
          "password": {
            "en": "Password"
          }
        },
        "factorDisplayOrder": [
          "username",
          "password"
        ],
        "identifyingFactors": {
          "username": {
            "pattern": "^[a-zA-Z0-9]+$"
          },
          "email": {
            "enum": [
              "user@example.com",
              "user2@example.com"
            ]
          }
        },
        "maxConcurrentCrawls": 10,
        "maxCrawlTimeInSeconds": 60,
        "paranoiaLevel": "medium",
        "ttlInSeconds": 3600,
        "url": "https://example.com"
      }
    },
    {
      "description": "llama-70b generated negative; focus on oneOf keyword",
      "valid": false,
      "rust_error": "{\"pattern\":\"^[a-zA-Z0-9]+$\",\"enum\":[\"user@example.com\",\"user2@example.com\"]} is not valid under any of the schemas listed in the 'oneOf' keyword",
      "python_error": "{'pattern': '^[a-zA-Z0-9]+$', 'enum': ['user@example.com', 'user2@example.com']} is not valid under any of the given schemas\n\nFailed validating 'oneOf' in schema['properties']['identifyingFactors']['patternProperties']['^[A-Za-z0-9_\\\\-]+$']:\n    {'oneOf': [{'$ref': '#/definitions/pattern'},\n               {'$ref': '#/definitions/enum'}],\n     'type': 'object'}\n\nOn instance['identifyingFactors']['username']:\n    {'pattern': '^[a-zA-Z0-9]+$',\n     'enum': ['user@example.com', 'user2@example.com']}",
      "data": {
        "authenticatingFactors": {
          "username": {
            "pattern": "^[a-zA-Z0-9]+$"
          },
          "password": {
            "pattern": "^[a-zA-Z0-9]+$"
          }
        },
        "factorDisplayNames": {
          "username": {
            "en": "Username"
          },
          "password": {
            "en": "Password"
          }
        },
        "factorDisplayOrder": [
          "username",
          "password"
        ],
        "identifyingFactors": {
          "username": {
            "pattern": "^[a-zA-Z0-9]+$",
            "enum": [
              "user@example.com",
              "user2@example.com"
            ]
          },
          "email": {
            "enum": [
              "user@example.com",
              "user2@example.com"
            ]
          }
        },
        "maxConcurrentCrawls": 10,
        "maxCrawlTimeInSeconds": 60,
        "paranoiaLevel": "medium",
        "ttlInSeconds": 3600,
        "url": "https://example.com"
      }
    },
    {
      "description": "llama-70b generated negative; focus on minimum keyword or maximum keyword",
      "valid": false,
      "rust_error": "0 is less than the minimum of 1",
      "python_error": "Additional properties are not allowed ('minItems' was unexpected)\n\nFailed validating 'additionalProperties' in schema:\n    {'$schema': 'http://json-schema.org/draft-04/schema#',\n     'additionalProperties': False,\n     'definitions': {'enum': {'additionalProperties': False,\n                              'properties': {'enum': {'items': {'type': 'string'},\n                                                      'minItems': 1,\n                                                      'type': 'array',\n                                                      '_uniqueItems': True}},\n                              'required': ['enum'],\n                              'type': 'object'},\n                     'pattern': {'additionalProperties': False,\n                                 'properties': {'pattern': {'minLength': 1,\n                                                            'type': 'string'}},\n                                 'required': ['pattern'],\n                                 'type': 'object'}},\n     'descriptio.. (3491 more)",
      "data": {
        "authenticatingFactors": {
          "username": {
            "pattern": "^[a-zA-Z0-9]+$"
          },
          "password": {
            "pattern": "^[a-zA-Z0-9]+$"
          }
        },
        "factorDisplayNames": {
          "username": {
            "en": "Username"
          },
          "password": {
            "en": "Password"
          }
        },
        "factorDisplayOrder": [
          "username",
          "password"
        ],
        "identifyingFactors": {
          "username": {
            "pattern": "^[a-zA-Z0-9]+$"
          },
          "email": {
            "enum": [
              "user@example.com",
              "user2@example.com"
            ]
          }
        },
        "maxConcurrentCrawls": 0,
        "minItems": 30,
        "maxCrawlTimeInSeconds": 1,
        "paranoiaLevel": "medium",
        "ttlInSeconds": 3600,
        "url": "https://example.com"
      }
    },
    {
      "description": "llama-70b generated negative; focus on patternProperties keyword",
      "valid": false,
      "rust_error": "Additional properties are not allowed ('username!' was unexpected)",
      "python_error": "'username!' does not match any of the regexes: '^[A-Za-z0-9_\\\\-]+$'\n\nFailed validating 'additionalProperties' in schema['properties']['authenticatingFactors']:\n    {'additionalProperties': False,\n     'patternProperties': {'^[A-Za-z0-9_\\\\-]+$': {'$ref': '#/definitions/pattern',\n                                                  'type': 'object'}},\n     'type': 'object'}\n\nOn instance['authenticatingFactors']:\n    {'username!': {'pattern': '^[a-zA-Z0-9]+$'}}",
      "data": {
        "authenticatingFactors": {
          "username!": {
            "pattern": "^[a-zA-Z0-9]+$"
          }
        },
        "factorDisplayNames": {
          "username": {
            "en": "Username"
          },
          "password": {
            "en": "Password"
          }
        },
        "factorDisplayOrder": [
          "username",
          "password"
        ],
        "identifyingFactors": {
          "username": {
            "pattern": "^[a-zA-Z0-9]+$"
          },
          "email": {
            "enum": [
              "user@example.com",
              "user2@example.com"
            ]
          }
        },
        "maxConcurrentCrawls": 10,
        "maxCrawlTimeInSeconds": 60,
        "paranoiaLevel": "medium",
        "ttlInSeconds": 3600,
        "url": "https://example.com"
      }
    },
    {
      "description": "llama-70b generated negative; focus on minLength keyword",
      "valid": false,
      "rust_error": "\"\" is shorter than 1 character",
      "python_error": "'' should be non-empty\n\nFailed validating 'minLength' in schema['properties']['factorDisplayNames']['patternProperties']['^[A-Za-z0-9_\\\\-]+$']['patternProperties']['^[A-Za-z]{0,2}$']:\n    {'minLength': 1, 'type': 'string'}\n\nOn instance['factorDisplayNames']['username']['en']:\n    ''",
      "data": {
        "authenticatingFactors": {
          "username": {
            "pattern": "^[a-zA-Z0-9]+$"
          },
          "password": {
            "pattern": "^[a-zA-Z0-9]+$"
          }
        },
        "factorDisplayNames": {
          "username": {
            "en": "",
            "fr": "Nom de l'utilisateur"
          },
          "password": {
            "en": "Password"
          }
        },
        "factorDisplayOrder": [
          "username",
          "password"
        ],
        "identifyingFactors": {
          "username": {
            "pattern": "^[a-zA-Z0-9]+$"
          },
          "email": {
            "enum": [
              "user@example.com",
              "user2@example.com"
            ]
          }
        },
        "maxConcurrentCrawls": 10,
        "maxCrawlTimeInSeconds": 60,
        "paranoiaLevel": "medium",
        "ttlInSeconds": 3600,
        "url": "https://example.com"
      }
    },
    {
      "description": "llama-70b generated negative; focus on minItems keyword",
      "valid": false,
      "rust_error": "[] has less than 1 item",
      "python_error": "[] should be non-empty\n\nFailed validating 'minItems' in schema['properties']['factorDisplayOrder']:\n    {'items': {'minLength': 1, 'type': 'string'},\n     'minItems': 1,\n     'type': 'array',\n     '_uniqueItems': True}\n\nOn instance['factorDisplayOrder']:\n    []",
      "data": {
        "authenticatingFactors": {
          "username": {
            "pattern": "^[a-zA-Z0-9]+$"
          },
          "password": {
            "pattern": "^[a-zA-Z0-9]+$"
          }
        },
        "factorDisplayNames": {
          "username": {
            "en": "Username"
          },
          "password": {
            "en": "Password"
          }
        },
        "factorDisplayOrder": [],
        "identifyingFactors": {
          "username": {
            "pattern": "^[a-zA-Z0-9]+$"
          },
          "email": {
            "enum": [
              "user@example.com",
              "user2@example.com"
            ]
          }
        },
        "maxConcurrentCrawls": 10,
        "maxCrawlTimeInSeconds": 60,
        "paranoiaLevel": "medium",
        "ttlInSeconds": 3600,
        "url": "https://example.com"
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"\" is shorter than 1 character",
      "python_error": "301 is greater than the maximum of 300\n\nFailed validating 'maximum' in schema['properties']['maxCrawlTimeInSeconds']:\n    {'maximum': 300, 'minimum': 5, 'type': 'integer'}\n\nOn instance['maxCrawlTimeInSeconds']:\n    301",
      "data": {
        "authenticatingFactors": {
          "username": {
            "pattern": ""
          },
          "password": {
            "pattern": "^[a-zA-Z0-9]+$"
          }
        },
        "factorDisplayNames": {
          "username": {
            "en": "Username",
            "fr": ""
          },
          "password": {
            "en": "Password"
          }
        },
        "factorDisplayOrder": [
          "username",
          "password",
          "password"
        ],
        "identifyingFactors": {
          "username": {
            "pattern": "^[a-zA-Z0-9]+$"
          },
          "email": {
            "enum": [
              "user@example.com",
              "user2@example.com",
              "user@example.com"
            ]
          }
        },
        "maxConcurrentCrawls": 30,
        "maxCrawlTimeInSeconds": 301,
        "paranoiaLevel": "medium",
        "ttlInSeconds": 3601,
        "url": "https://example.com"
      }
    }
  ]
}