{
  "description": "sample Github_hard/o14495.json",
  "meta": {
    "full_size": 4112,
    "stripped_size": 1529,
    "features": [
      "@minmaxItems",
      "items"
    ],
    "raw_features": [
      "$schema",
      "minItems",
      "properties",
      "required",
      "type",
      "type:array",
      "type:boolean",
      "type:integer",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "title": "Rules",
    "description": "The collection of rules",
    "type": "array",
    "items": {
      "title": "Rule.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Unique identifier given by the server",
          "type": "integer"
        },
        "name": {
          "description": "A name to identify the rule.",
          "type": "string"
        },
        "active": {
          "description": "Enable/Disable a rule. When disabled, the rule is not evaluated on events received.",
          "type": "boolean"
        },
        "organizationId": {
          "description": "The organization for which the rule is configured.",
          "type": "integer"
        },
        "conditions": {
          "description": "List of condition to evaluate against events received.",
          "type": "array",
          "items": {
            "description": "Condition to evaluate, **MUST** define at least one of the three condition criteria: `eventSourceId`, `eventTypeId` or `fn`.",
            "type": "object",
            "properties": {
              "description": {
                "description": "Human friendly text to let the possibility to explain what the condition evaluates.",
                "type": "string"
              },
              "eventSource": {
                "description": "Define the data for an event source",
                "type": "object",
                "properties": {
                  "id": {
                    "description": "The event source to match on event received. If not present, joker `*` will be used.",
                    "type": "integer"
                  },
                  "generatedIdentifier": {
                    "description": "Unique identifier generated by iFLUX server of the event source usable in the events.",
                    "type": "string"
                  }
                },
                "required": [
                  "id",
                  "generatedIdentifier"
                ]
              },
              "eventType": {
                "description": "Define the data for an event type",
                "type": "object",
                "properties": {
                  "id": {
                    "description": "The event type to match on event received. If not present, joker `*` will be used.",
                    "type": "integer"
                  },
                  "type": {
                    "description": "Event type used in the events sent.",
                    "type": "string"
                  }
                },
                "required": [
                  "id",
                  "type"
                ]
              },
              "fn": {
                "description": "Javascript expression to be evaluated. If not present, only `event source` and `event type` will be evaluated.",
                "type": "object",
                "properties": {
                  "expression": {
                    "description": "Javascript expression to let more complex condition matching. **MUST** be a valid javascript expression",
                    "type": "string"
                  },
                  "sampleEvent": {
                    "description": "A valid event that will be evaluated to true with the expression.",
                    "type": "object"
                  }
                },
                "required": [
                  "expression",
                  "sample"
                ]
              }
            }
          },
          "minItems": 1
        },
        "transformations": {
          "description": "List of transformations to apply to an event once the conditions matched.",
          "type": "array",
          "items": {
            "description": "Transformation to apply.",
            "type": "object",
            "properties": {
              "description": {
                "description": "Human friendly text to let the possibility to explain what the transformation does.",
                "type": "string"
              },
              "actionTarget": {
                "description": "Define the data for an action target",
                "type": "object",
                "properties": {
                  "id": {
                    "description": "The action target to send the event transformed.",
                    "type": "integer"
                  },
                  "generatedIdentifier": {
                    "description": "Unique identifier generated by iFLUX server of the action target sent with actions.",
                    "type": "string"
                  }
                },
                "required": [
                  "id",
                  "generatedIdentifier"
                ]
              },
              "actionType": {
                "description": "Define the data for an action type",
                "type": "object",
                "properties": {
                  "id": {
                    "description": "The action type.",
                    "type": "integer"
                  },
                  "type": {
                    "description": "Action type used in the actions sent.",
                    "type": "string"
                  }
                },
                "required": [
                  "id",
                  "type"
                ]
              },
              "fn": {
                "description": "Javascript expression to transform the events. If not present, event is not transformed and passed as it is received.",
                "type": "object",
                "properties": {
                  "expression": {
                    "description": "Javascript expression to let more complex transformation. **MUST** be a valid javascript expression",
                    "type": "string"
                  },
                  "sample": {
                    "description": "A valid sample to validate the transformation expression.",
                    "type": "object",
                    "properties": {
                      "event": {
                        "description": "A valid event for the transformation expression validation.",
                        "type": "object"
                      },
                      "eventSourceTemplateId": {
                        "description": "The event source template to inject to the transformation validation.",
                        "type": "integer"
                      },
                      "eventTypeId": {
                        "description": "The event type to inject to the transformation validation.",
                        "type": "integer"
                      }
                    },
                    "required": [
                      "event"
                    ]
                  }
                },
                "required": [
                  "expression",
                  "sample"
                ]
              }
            },
            "required": [
              "actionTarget",
              "actionType"
            ]
          },
          "minItems": 1
        }
      },
      "required": [
        "id",
        "name",
        "active",
        "organizationId",
        "conditions",
        "transformations"
      ]
    }
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": [
        {
          "id": 1,
          "name": "Rule 1",
          "active": true,
          "organizationId": 1,
          "conditions": [
            {
              "description": "Condition 1",
              "eventSource": {
                "id": 1,
                "generatedIdentifier": "source-1"
              },
              "eventType": {
                "id": 1,
                "type": "type-1"
              },
              "fn": {
                "expression": "event.data.value > 10",
                "sampleEvent": {
                  "data": {
                    "value": 15
                  }
                },
                "sample": {
                  "event": {
                    "data": {
                      "value": 15
                    }
                  },
                  "eventSourceTemplateId": 1,
                  "eventTypeId": 1
                }
              }
            },
            {
              "description": "Condition 2",
              "eventSource": {
                "id": 2,
                "generatedIdentifier": "source-2"
              },
              "eventType": {
                "id": 2,
                "type": "type-2"
              },
              "fn": {
                "expression": "event.data.value < 5",
                "sampleEvent": {
                  "data": {
                    "value": 3
                  }
                },
                "sample": {
                  "event": {
                    "data": {
                      "value": 3
                    }
                  },
                  "eventSourceTemplateId": 2,
                  "eventTypeId": 2
                }
              }
            },
            {
              "transformations": [
                {
                  "description": "Transformation 1",
                  "actionTarget": {
                    "id": 1,
                    "generatedIdentifier": "target-1"
                  },
                  "actionType": {
                    "id": 1,
                    "type": "type-1"
                  },
                  "fn": {
                    "expression": "event.data.value = event.data.value * 2",
                    "sample": {
                      "event": {
                        "data": {
                          "value": 10
                        }
                      },
                      "eventSourceTemplateId": 1,
                      "eventTypeId": 1
                    }
                  }
                }
              ]
            }
          ],
          "transformations": [
            {
              "description": "Transformation 1",
              "actionTarget": {
                "id": 1,
                "generatedIdentifier": "target-1"
              },
              "actionType": {
                "id": 1,
                "type": "type-1"
              },
              "fn": {
                "expression": "event.data.value = event.data.value * 2",
                "sample": {
                  "event": {
                    "data": {
                      "value": 10
                    }
                  },
                  "eventSourceTemplateId": 1,
                  "eventTypeId": 1
                }
              }
            }
          ]
        }
      ]
    },
    {
      "description": "llama-70b generated negative; focus on minItems keyword",
      "valid": false,
      "rust_error": "{\"id\":1,\"name\":\"Rule 1\",\"active\":true,\"organizationId\":1,\"conditions\":[],\"transformations\":[]} is not of type \"array\"",
      "python_error": "{'id': 1, 'name': 'Rule 1', 'active': True, 'organizationId': 1, 'conditions': [], 'transformations': []} is not of type 'array'\n\nFailed validating 'type' in schema:\n    {'$schema': 'http://json-schema.org/draft-04/schema#',\n     'title': 'Rules',\n     'description': 'The collection of rules',\n     'type': 'array',\n     'items': {'title': 'Rule.',\n               'type': 'object',\n               'properties': {'id': {'description': 'Unique identifier '\n                                                    'given by the server',\n                                     'type': 'integer'},\n                              'name': {'description': 'A name to identify '\n                                                      'the rule.',\n                                       'type': 'string'},\n                              'active': {'description': 'Enable/Disable a '\n                                                        'rule. When '\n                                                        'disabled, the '\n                .. (41033 more)",
      "data": {
        "id": 1,
        "name": "Rule 1",
        "active": true,
        "organizationId": 1,
        "conditions": [],
        "transformations": []
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "{\"id\":1,\"name\":\"Rule 1\",\"active\":true,\"organizationId\":1,\"conditions\":[{\"description\":\"Condition 1\",\"eventSource\":{\"id\":1,\"generatedIdentifier\":\"source-1\"},\"eventType\":{\"id\":1,\"type\":\"type-1\"},\"fn\":{\"expression\":\"event.data.value > 10\",\"sampleEvent\":{\"data\":{\"value\":15}},\"sample\":{\"event\":{\"data\":{\"value\":15}},\"eventSourceTemplateId\":1,\"eventTypeId\":1}}},{\"description\":\"Condition 2\",\"eventSource\":{\"id\":2,\"generatedIdentifier\":\"source-2\"},\"eventType\":{\"id\":2,\"type\":\"type-2\"},\"fn\":{\"expression\":\"event.data.value < 5\",\"sampleEvent\":{\"data\":{\"value\":3}},\"sample\":{\"event\":{\"data\":{\"value\":3}},\"eventSourceTemplateId\":2,\"eventTypeId\":2}}},{\"transformations\":[{\"description\":\"Transformation 1\",\"actionTarget\":{\"id\":1,\"generatedIdentifier\":\"target-1\"},\"actionType\":{\"id\":1,\"type\":\"type-1\"},\"fn\":{\"expression\":\"event.data.value = event.data.value * 2\",\"sample\":{\"event\":{\"data\":{\"value\":10}},\"eventSourceTemplateId\":1,\"eventTypeId\":1}}}]}],\"transformations\":[{\"description\":\"Transformation 1\",\"actionTarget\":{\"id\":1,\"generated.. (232 more)",
      "python_error": "{'id': 1, 'name': 'Rule 1', 'active': True, 'organizationId': 1, 'conditions': [{'description': 'Condition 1', 'eventSource': {'id': 1, 'generatedIdentifier': 'source-1'}, 'eventType': {'id': 1, 'type': 'type-1'}, 'fn': {'expression': 'event.data.value > 10', 'sampleEvent': {'data': {'value': 15}}, 'sample': {'event': {'data': {'value': 15}}, 'eventSourceTemplateId': 1, 'eventTypeId': 1}}}, {'description': 'Condition 2', 'eventSource': {'id': 2, 'generatedIdentifier': 'source-2'}, 'eventType': {'id': 2, 'type': 'type-2'}, 'fn': {'expression': 'event.data.value < 5', 'sampleEvent': {'data': {'value': 3}}, 'sample': {'event': {'data': {'value': 3}}, 'eventSourceTemplateId': 2, 'eventTypeId': 2}}}, {'transformations': [{'description': 'Transformation 1', 'actionTarget': {'id': 1, 'generatedIdentifier': 'target-1'}, 'actionType': {'id': 1, 'type': 'type-1'}, 'fn': {'expression': 'event.data.value = event.data.value * 2', 'sample': {'event': {'data': {'value': 10}}, 'eventSourceTemplateId': 1, 'eventTypeId': 1}}}].. (44926 more)",
      "data": {
        "id": 1,
        "name": "Rule 1",
        "active": true,
        "organizationId": 1,
        "conditions": [
          {
            "description": "Condition 1",
            "eventSource": {
              "id": 1,
              "generatedIdentifier": "source-1"
            },
            "eventType": {
              "id": 1,
              "type": "type-1"
            },
            "fn": {
              "expression": "event.data.value > 10",
              "sampleEvent": {
                "data": {
                  "value": 15
                }
              },
              "sample": {
                "event": {
                  "data": {
                    "value": 15
                  }
                },
                "eventSourceTemplateId": 1,
                "eventTypeId": 1
              }
            }
          },
          {
            "description": "Condition 2",
            "eventSource": {
              "id": 2,
              "generatedIdentifier": "source-2"
            },
            "eventType": {
              "id": 2,
              "type": "type-2"
            },
            "fn": {
              "expression": "event.data.value < 5",
              "sampleEvent": {
                "data": {
                  "value": 3
                }
              },
              "sample": {
                "event": {
                  "data": {
                    "value": 3
                  }
                },
                "eventSourceTemplateId": 2,
                "eventTypeId": 2
              }
            }
          },
          {
            "transformations": [
              {
                "description": "Transformation 1",
                "actionTarget": {
                  "id": 1,
                  "generatedIdentifier": "target-1"
                },
                "actionType": {
                  "id": 1,
                  "type": "type-1"
                },
                "fn": {
                  "expression": "event.data.value = event.data.value * 2",
                  "sample": {
                    "event": {
                      "data": {
                        "value": 10
                      }
                    },
                    "eventSourceTemplateId": 1,
                    "eventTypeId": 1
                  }
                }
              }
            ]
          }
        ],
        "transformations": [
          {
            "description": "Transformation 1",
            "actionTarget": {
              "id": 1,
              "generatedIdentifier": "target-1"
            },
            "actionType": {
              "id": 1,
              "type": "type-1"
            },
            "fn": {
              "expression": "event.data.value = event.data.value * 2",
              "sample": {
                "event": {
                  "data": {
                    "value": 10
                  }
                },
                "eventSourceTemplateId": 1,
                "eventTypeId": 1
              }
            }
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on minItems keyword",
      "valid": false,
      "rust_error": "{\"id\":1,\"name\":\"Rule 1\",\"active\":true,\"organizationId\":1,\"conditions\":[],\"transformations\":[{\"description\":\"Transformation 1\",\"actionTarget\":{\"id\":1,\"generatedIdentifier\":\"target-1\"},\"actionType\":{\"id\":1,\"type\":\"type-1\"},\"fn\":{\"expression\":\"event.data.value = event.data.value * 2\",\"sample\":{\"event\":{\"data\":{\"value\":10}},\"eventSourceTemplateId\":1,\"eventTypeId\":1}}}]} is not of type \"array\"",
      "python_error": "{'id': 1, 'name': 'Rule 1', 'active': True, 'organizationId': 1, 'conditions': [], 'transformations': [{'description': 'Transformation 1', 'actionTarget': {'id': 1, 'generatedIdentifier': 'target-1'}, 'actionType': {'id': 1, 'type': 'type-1'}, 'fn': {'expression': 'event.data.value = event.data.value * 2', 'sample': {'event': {'data': {'value': 10}}, 'eventSourceTemplateId': 1, 'eventTypeId': 1}}}]} is not of type 'array'\n\nFailed validating 'type' in schema:\n    {'$schema': 'http://json-schema.org/draft-04/schema#',\n     'title': 'Rules',\n     'description': 'The collection of rules',\n     'type': 'array',\n     'items': {'title': 'Rule.',\n               'type': 'object',\n               'properties': {'id': {'description': 'Unique identifier '\n                                                    'given by the server',\n                                     'type': 'integer'},\n                              'name': {'description': 'A name to identify '\n                                                      'the rule.. (41919 more)",
      "data": {
        "id": 1,
        "name": "Rule 1",
        "active": true,
        "organizationId": 1,
        "conditions": [],
        "transformations": [
          {
            "description": "Transformation 1",
            "actionTarget": {
              "id": 1,
              "generatedIdentifier": "target-1"
            },
            "actionType": {
              "id": 1,
              "type": "type-1"
            },
            "fn": {
              "expression": "event.data.value = event.data.value * 2",
              "sample": {
                "event": {
                  "data": {
                    "value": 10
                  }
                },
                "eventSourceTemplateId": 1,
                "eventTypeId": 1
              }
            }
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "{\"id\":1,\"name\":\"Rule 1\",\"active\":true,\"organizationId\":1,\"conditions\":[{\"description\":\"Condition 1\",\"eventSource\":{\"id\":1,\"generatedIdentifier\":\"source-1\"},\"eventType\":{\"id\":1,\"type\":\"type-1\"},\"fn\":{\"expression\":\"event.data.value > 10\",\"sampleEvent\":{\"data\":{\"value\":15}},\"sample\":{\"event\":{\"data\":{\"value\":15}},\"eventSourceTemplateId\":1,\"eventTypeId\":1}}},{\"description\":\"Condition 2\",\"eventSource\":{\"id\":2,\"generatedIdentifier\":\"source-2\"},\"eventType\":{\"id\":2,\"type\":\"type-2\"},\"fn\":{\"expression\":\"event.data.value < 5\",\"sampleEvent\":{\"data\":{\"value\":3}},\"sample\":{\"event\":{\"data\":{\"value\":3}},\"eventSourceTemplateId\":2,\"eventTypeId\":2}}},{\"description\":\"Condition 3\",\"eventSource\":{\"id\":3,\"generatedIdentifier\":\"source-3\"},\"eventType\":{\"id\":3,\"type\":\"type-3\"}}],\"transformations\":[{\"description\":\"Transformation 1\",\"actionTarget\":{\"id\":1,\"generatedIdentifier\":\"target-1\"},\"actionType\":{\"id\":1,\"type\":\"type-1\"},\"fn\":{\"expression\":\"event.data.value = event.data.value * 2\",\"sample\":{\"event\":{\"data\":{\"value\":10}},\"eventSourc.. (188 more)",
      "python_error": "{'id': 1, 'name': 'Rule 1', 'active': True, 'organizationId': 1, 'conditions': [{'description': 'Condition 1', 'eventSource': {'id': 1, 'generatedIdentifier': 'source-1'}, 'eventType': {'id': 1, 'type': 'type-1'}, 'fn': {'expression': 'event.data.value > 10', 'sampleEvent': {'data': {'value': 15}}, 'sample': {'event': {'data': {'value': 15}}, 'eventSourceTemplateId': 1, 'eventTypeId': 1}}}, {'description': 'Condition 2', 'eventSource': {'id': 2, 'generatedIdentifier': 'source-2'}, 'eventType': {'id': 2, 'type': 'type-2'}, 'fn': {'expression': 'event.data.value < 5', 'sampleEvent': {'data': {'value': 3}}, 'sample': {'event': {'data': {'value': 3}}, 'eventSourceTemplateId': 2, 'eventTypeId': 2}}}, {'description': 'Condition 3', 'eventSource': {'id': 3, 'generatedIdentifier': 'source-3'}, 'eventType': {'id': 3, 'type': 'type-3'}}], 'transformations': [{'description': 'Transformation 1', 'actionTarget': {'id': 1, 'generatedIdentifier': 'target-1'}, 'actionType': {'id': 1, 'type': 'type-1'}, 'fn': {'expression': '.. (44426 more)",
      "data": {
        "id": 1,
        "name": "Rule 1",
        "active": true,
        "organizationId": 1,
        "conditions": [
          {
            "description": "Condition 1",
            "eventSource": {
              "id": 1,
              "generatedIdentifier": "source-1"
            },
            "eventType": {
              "id": 1,
              "type": "type-1"
            },
            "fn": {
              "expression": "event.data.value > 10",
              "sampleEvent": {
                "data": {
                  "value": 15
                }
              },
              "sample": {
                "event": {
                  "data": {
                    "value": 15
                  }
                },
                "eventSourceTemplateId": 1,
                "eventTypeId": 1
              }
            }
          },
          {
            "description": "Condition 2",
            "eventSource": {
              "id": 2,
              "generatedIdentifier": "source-2"
            },
            "eventType": {
              "id": 2,
              "type": "type-2"
            },
            "fn": {
              "expression": "event.data.value < 5",
              "sampleEvent": {
                "data": {
                  "value": 3
                }
              },
              "sample": {
                "event": {
                  "data": {
                    "value": 3
                  }
                },
                "eventSourceTemplateId": 2,
                "eventTypeId": 2
              }
            }
          },
          {
            "description": "Condition 3",
            "eventSource": {
              "id": 3,
              "generatedIdentifier": "source-3"
            },
            "eventType": {
              "id": 3,
              "type": "type-3"
            }
          }
        ],
        "transformations": [
          {
            "description": "Transformation 1",
            "actionTarget": {
              "id": 1,
              "generatedIdentifier": "target-1"
            },
            "actionType": {
              "id": 1,
              "type": "type-1"
            },
            "fn": {
              "expression": "event.data.value = event.data.value * 2",
              "sample": {
                "event": {
                  "data": {
                    "value": 10
                  }
                },
                "eventSourceTemplateId": 1,
                "eventTypeId": 1
              }
            }
          },
          {
            "description": "Transformation 2",
            "actionTarget": {
              "id": 2,
              "generatedIdentifier": "target-2"
            },
            "actionType": {
              "id": 2,
              "type": "type-2"
            }
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "{\"id\":1,\"name\":\"Rule 1\",\"active\":true,\"organizationId\":1,\"conditions\":[{\"description\":\"Condition 1\",\"eventSource\":{\"id\":null,\"generatedIdentifier\":\"source-1\"},\"eventType\":{\"id\":1,\"type\":\"type-1\"},\"fn\":{\"expression\":\"event.data.value > 10\",\"sampleEvent\":{\"data\":{\"value\":15}},\"sample\":{\"event\":{\"data\":{\"value\":15}},\"eventSourceTemplateId\":1,\"eventTypeId\":1}}}],\"transformations\":[{\"description\":\"Transformation 1\",\"actionTarget\":{\"id\":1,\"generatedIdentifier\":\"target-1\"},\"actionType\":{\"id\":1,\"type\":null},\"fn\":{\"expression\":\"event.data.value = event.data.value * 2\",\"sample\":{\"event\":{\"data\":{\"value\":10}},\"eventSourceTemplateId\":1,\"eventTypeId\":1}}}]} is not of type \"array\"",
      "python_error": "{'id': 1, 'name': 'Rule 1', 'active': True, 'organizationId': 1, 'conditions': [{'description': 'Condition 1', 'eventSource': {'id': None, 'generatedIdentifier': 'source-1'}, 'eventType': {'id': 1, 'type': 'type-1'}, 'fn': {'expression': 'event.data.value > 10', 'sampleEvent': {'data': {'value': 15}}, 'sample': {'event': {'data': {'value': 15}}, 'eventSourceTemplateId': 1, 'eventTypeId': 1}}}], 'transformations': [{'description': 'Transformation 1', 'actionTarget': {'id': 1, 'generatedIdentifier': 'target-1'}, 'actionType': {'id': 1, 'type': None}, 'fn': {'expression': 'event.data.value = event.data.value * 2', 'sample': {'event': {'data': {'value': 10}}, 'eventSourceTemplateId': 1, 'eventTypeId': 1}}}]} is not of type 'array'\n\nFailed validating 'type' in schema:\n    {'$schema': 'http://json-schema.org/draft-04/schema#',\n     'title': 'Rules',\n     'description': 'The collection of rules',\n     'type': 'array',\n     'items': {'title': 'Rule.',\n               'type': 'object',\n               'properties': {'id.. (42775 more)",
      "data": {
        "id": 1,
        "name": "Rule 1",
        "active": true,
        "organizationId": 1,
        "conditions": [
          {
            "description": "Condition 1",
            "eventSource": {
              "id": null,
              "generatedIdentifier": "source-1"
            },
            "eventType": {
              "id": 1,
              "type": "type-1"
            },
            "fn": {
              "expression": "event.data.value > 10",
              "sampleEvent": {
                "data": {
                  "value": 15
                }
              },
              "sample": {
                "event": {
                  "data": {
                    "value": 15
                  }
                },
                "eventSourceTemplateId": 1,
                "eventTypeId": 1
              }
            }
          }
        ],
        "transformations": [
          {
            "description": "Transformation 1",
            "actionTarget": {
              "id": 1,
              "generatedIdentifier": "target-1"
            },
            "actionType": {
              "id": 1,
              "type": null
            },
            "fn": {
              "expression": "event.data.value = event.data.value * 2",
              "sample": {
                "event": {
                  "data": {
                    "value": 10
                  }
                },
                "eventSourceTemplateId": 1,
                "eventTypeId": 1
              }
            }
          }
        ]
      }
    }
  ]
}