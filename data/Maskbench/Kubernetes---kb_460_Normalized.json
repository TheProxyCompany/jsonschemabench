{
  "description": "sample Kubernetes/kb_460_Normalized.json",
  "meta": {
    "full_size": 841,
    "stripped_size": 141,
    "features": [
      "items"
    ],
    "raw_features": [
      "properties",
      "type",
      "type:[]",
      "type:array",
      "type:null",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "description": "IngressTLS describes the transport layer security associated with an Ingress.",
    "properties": {
      "hosts": {
        "description": "Hosts are a list of hosts included in the TLS certificate. The values in this list must match the name/s used in the tlsSecret. Defaults to the wildcard host setting for the loadbalancer controller fulfilling this Ingress, if left unspecified.",
        "items": {
          "type": [
            "string",
            "null"
          ]
        },
        "type": [
          "array",
          "null"
        ]
      },
      "secretName": {
        "description": "SecretName is the name of the secret used to terminate SSL traffic on 443. Field is left optional to allow SSL routing based on SNI hostname alone. If the SNI host in a listener conflicts with the \"Host\" header field used by an IngressRule, the SNI host is used for termination and value of the Host header is used for routing.",
        "type": [
          "string",
          "null"
        ]
      }
    },
    "type": "object"
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "hosts": [
          "example.com",
          "sub.example.com"
        ],
        "secretName": "tls-secret"
      }
    },
    {
      "description": "llama-70b generated negative; focus on type keyword with an array of types",
      "valid": false,
      "rust_error": "123 is not of types \"null\", \"string\"",
      "python_error": "123 is not of type 'string', 'null'\n\nFailed validating 'type' in schema['properties']['hosts']['items']:\n    {'type': ['string', 'null']}\n\nOn instance['hosts'][1]:\n    123",
      "data": {
        "hosts": [
          "example.com",
          123,
          "sub.example.com"
        ],
        "secretName": "tls-secret"
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "123 is not of types \"null\", \"string\"",
      "python_error": "123 is not of type 'string', 'null'\n\nFailed validating 'type' in schema['properties']['hosts']['items']:\n    {'type': ['string', 'null']}\n\nOn instance['hosts'][1]:\n    123",
      "data": {
        "hosts": [
          "example.com",
          123
        ],
        "secretName": "tls-secret"
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "hosts": [
          "example.com",
          "sub.example.com"
        ],
        "secretName": "example-tls-secret"
      }
    },
    {
      "description": "llama-70b generated negative; focus on type keyword with an array of types",
      "valid": false,
      "rust_error": "\"example.com\" is not of types \"array\", \"null\"",
      "python_error": "'example.com' is not of type 'array', 'null'\n\nFailed validating 'type' in schema['properties']['hosts']:\n    {'description': 'Hosts are a list of hosts included in the TLS '\n                    'certificate. The values in this list must match the '\n                    'name/s used in the tlsSecret. Defaults to the '\n                    'wildcard host setting for the loadbalancer controller '\n                    'fulfilling this Ingress, if left unspecified.',\n     'items': {'type': ['string', 'null']},\n     'type': ['array', 'null']}\n\nOn instance['hosts']:\n    'example.com'",
      "data": {
        "hosts": "example.com",
        "secretName": "example-tls-secret"
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "12345 is not of types \"null\", \"string\"",
      "python_error": "12345 is not of type 'string', 'null'\n\nFailed validating 'type' in schema['properties']['hosts']['items']:\n    {'type': ['string', 'null']}\n\nOn instance['hosts'][1]:\n    12345",
      "data": {
        "hosts": [
          "example.com",
          12345
        ],
        "secretName": "example-tls-secret"
      }
    }
  ]
}