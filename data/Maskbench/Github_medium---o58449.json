{
  "description": "sample Github_medium/o58449.json",
  "meta": {
    "full_size": 1352,
    "stripped_size": 630,
    "features": [
      "@minmaxLength",
      "@siblingKeys",
      "additionalProperties",
      "anyOf",
      "enum",
      "items",
      "oneOf"
    ],
    "raw_features": [
      "$schema",
      "_boolSchema",
      "_requiredEmpty",
      "minLength",
      "properties",
      "required",
      "type",
      "type:array",
      "type:boolean",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-07/schema",
    "title": "TSlint Target",
    "description": "TSlint target options for Build Facade.",
    "type": "object",
    "properties": {
      "tslintConfig": {
        "type": "string",
        "description": "The name of the TSLint configuration file."
      },
      "tsConfig": {
        "description": "The name of the TypeScript configuration file.",
        "oneOf": [
          {
            "type": "string"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ]
      },
      "fix": {
        "type": "boolean",
        "description": "Fixes linting errors (may overwrite linted files).",
        "default": false
      },
      "typeCheck": {
        "type": "boolean",
        "description": "Controls the type check for linting.",
        "default": false
      },
      "force": {
        "type": "boolean",
        "description": "Succeeds even if there was linting errors.",
        "default": false
      },
      "silent": {
        "type": "boolean",
        "description": "Show output text.",
        "default": false
      },
      "format": {
        "type": "string",
        "description": "Output format (prose, json, stylish, verbose, pmd, msbuild, checkstyle, vso, fileslist).",
        "default": "stylish",
        "anyOf": [
          {
            "enum": [
              "checkstyle",
              "codeFrame",
              "filesList",
              "json",
              "junit",
              "msbuild",
              "pmd",
              "prose",
              "stylish",
              "tap",
              "verbose",
              "vso"
            ]
          },
          {
            "minLength": 1
          }
        ]
      },
      "exclude": {
        "type": "array",
        "description": "Files to exclude from linting.",
        "default": [],
        "items": {
          "type": "string"
        }
      },
      "files": {
        "type": "array",
        "description": "Files to include in linting.",
        "default": [],
        "items": {
          "type": "string"
        }
      }
    },
    "additionalProperties": false,
    "required": []
  },
  "tests": [
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "tslintConfig": "tslint.json",
        "tsConfig": "tsconfig.json",
        "fix": true,
        "typeCheck": true,
        "force": true,
        "silent": true,
        "format": "json",
        "exclude": [
          "node_modules",
          "dist"
        ],
        "files": [
          "src/**/*.ts",
          "src/**/*.tsx"
        ]
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "tslintConfig": "tslint.json",
        "tsConfig": "tsconfig.json",
        "fix": true,
        "typeCheck": true,
        "force": true,
        "silent": false,
        "format": "json",
        "exclude": [
          "node_modules/**",
          "dist/**"
        ],
        "files": [
          "src/**/*.ts",
          "src/**/*.tsx"
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on anyOf keyword",
      "valid": false,
      "rust_error": "\"\" is not valid under any of the schemas listed in the 'anyOf' keyword",
      "python_error": "'' is not valid under any of the given schemas\n\nFailed validating 'anyOf' in schema['properties']['format']:\n    {'type': 'string',\n     'description': 'Output format (prose, json, stylish, verbose, pmd, '\n                    'msbuild, checkstyle, vso, fileslist).',\n     'default': 'stylish',\n     'anyOf': [{'enum': ['checkstyle',\n                         'codeFrame',\n                         'filesList',\n                         'json',\n                         'junit',\n                         'msbuild',\n                         'pmd',\n                         'prose',\n                         'stylish',\n                         'tap',\n                         'verbose',\n                         'vso']},\n               {'minLength': 1}]}\n\nOn instance['format']:\n    ''",
      "data": {
        "tslintConfig": "tslint.json",
        "tsConfig": "tsconfig.json",
        "fix": true,
        "typeCheck": true,
        "force": true,
        "silent": false,
        "format": "",
        "exclude": [
          "node_modules/**",
          "dist/**"
        ],
        "files": [
          "src/**/*.ts",
          "src/**/*.tsx"
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on oneOf keyword",
      "valid": false,
      "rust_error": "{\"type\":\"object\",\"foo\":\"bar\"} is not valid under any of the schemas listed in the 'oneOf' keyword",
      "python_error": "{'type': 'object', 'foo': 'bar'} is not valid under any of the given schemas\n\nFailed validating 'oneOf' in schema['properties']['tsConfig']:\n    {'description': 'The name of the TypeScript configuration file.',\n     'oneOf': [{'type': 'string'},\n               {'type': 'array', 'items': {'type': 'string'}}]}\n\nOn instance['tsConfig']:\n    {'type': 'object', 'foo': 'bar'}",
      "data": {
        "tslintConfig": "tslint.json",
        "tsConfig": {
          "type": "object",
          "foo": "bar"
        },
        "fix": true,
        "typeCheck": true,
        "force": true,
        "silent": false,
        "format": "json",
        "exclude": [
          "node_modules/**",
          "dist/**"
        ],
        "files": [
          "src/**/*.ts",
          "src/**/*.tsx"
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on minLength keyword",
      "valid": false,
      "rust_error": "\"\" is not valid under any of the schemas listed in the 'anyOf' keyword",
      "python_error": "'' is not valid under any of the given schemas\n\nFailed validating 'anyOf' in schema['properties']['format']:\n    {'type': 'string',\n     'description': 'Output format (prose, json, stylish, verbose, pmd, '\n                    'msbuild, checkstyle, vso, fileslist).',\n     'default': 'stylish',\n     'anyOf': [{'enum': ['checkstyle',\n                         'codeFrame',\n                         'filesList',\n                         'json',\n                         'junit',\n                         'msbuild',\n                         'pmd',\n                         'prose',\n                         'stylish',\n                         'tap',\n                         'verbose',\n                         'vso']},\n               {'minLength': 1}]}\n\nOn instance['format']:\n    ''",
      "data": {
        "tslintConfig": "tslint.json",
        "tsConfig": "tsconfig.json",
        "fix": true,
        "typeCheck": true,
        "force": true,
        "silent": false,
        "format": "",
        "exclude": [
          "node_modules/**",
          "dist/**"
        ],
        "files": [
          "src/**/*.ts",
          "src/**/*.tsx"
        ]
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "123 is not of type \"string\"",
      "python_error": "123 is not of type 'string'\n\nFailed validating 'type' in schema['properties']['tslintConfig']:\n    {'type': 'string',\n     'description': 'The name of the TSLint configuration file.'}\n\nOn instance['tslintConfig']:\n    123",
      "data": {
        "tslintConfig": 123,
        "tsConfig": "tsconfig.json",
        "fix": true,
        "typeCheck": true,
        "force": true,
        "silent": false,
        "format": "invalidFormat",
        "exclude": [
          "node_modules/**",
          "dist/**"
        ],
        "files": [
          "src/**/*.ts",
          "src/**/*.tsx"
        ]
      }
    }
  ]
}