{
  "description": "sample Github_medium/o25979.json",
  "meta": {
    "full_size": 615,
    "stripped_size": 480,
    "features": [
      "items"
    ],
    "raw_features": [
      "$schema",
      "properties",
      "required",
      "type",
      "type:array",
      "type:boolean",
      "type:integer",
      "type:number",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "type": "object",
    "properties": {
      "boolean1": {
        "type": "boolean",
        "default": true
      },
      "number1": {
        "type": "number",
        "default": 1
      },
      "integer1": {
        "type": "integer",
        "default": 1
      },
      "integer2": {
        "type": "integer",
        "default": 1
      },
      "string1": {
        "type": "string",
        "default": "defaultValue"
      },
      "array1": {
        "type": "array",
        "items": {},
        "default": null
      },
      "array2": {
        "type": "array",
        "items": {
          "type": "number"
        },
        "default": null
      },
      "object1": {
        "default": null
      },
      "object2": {
        "type": "object",
        "properties": {},
        "default": null
      }
    },
    "required": [
      "boolean1",
      "number1",
      "integer1",
      "integer2",
      "string1",
      "array1",
      "array2",
      "object1",
      "object2"
    ],
    "$schema": "http://json-schema.org/draft-04/schema#"
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "boolean1": true,
        "number1": 1,
        "integer1": 1,
        "integer2": 1,
        "string1": "defaultValue",
        "array1": [],
        "array2": [],
        "object1": {},
        "object2": {}
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"two\" is not of type \"number\"",
      "python_error": "'two' is not of type 'number'\n\nFailed validating 'type' in schema['properties']['array2']['items']:\n    {'type': 'number'}\n\nOn instance['array2'][1]:\n    'two'",
      "data": {
        "boolean1": true,
        "number1": 1,
        "integer1": 1,
        "integer2": 1,
        "string1": "defaultValue",
        "array1": [],
        "array2": [
          1,
          "two"
        ],
        "object1": {},
        "object2": {}
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "null is not of type \"number\"",
      "python_error": "None is not of type 'number'\n\nFailed validating 'type' in schema['properties']['array2']['items']:\n    {'type': 'number'}\n\nOn instance['array2'][0]:\n    None",
      "data": {
        "boolean1": true,
        "number1": 1,
        "integer1": 1,
        "integer2": 1,
        "string1": "defaultValue",
        "array1": [],
        "array2": [
          null
        ],
        "object1": {},
        "object2": {}
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "boolean1": true,
        "number1": 1.5,
        "integer1": 1,
        "integer2": 2,
        "string1": "Hello, World!",
        "array1": [
          "string",
          123,
          true,
          null,
          {
            "key": "value"
          }
        ],
        "array2": [
          1,
          2,
          3,
          4,
          5
        ],
        "object1": {
          "key": "value"
        },
        "object2": {
          "key1": "value1",
          "key2": "value2"
        }
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"4\" is not of type \"number\"",
      "python_error": "'4' is not of type 'number'\n\nFailed validating 'type' in schema['properties']['array2']['items']:\n    {'type': 'number'}\n\nOn instance['array2'][3]:\n    '4'",
      "data": {
        "boolean1": true,
        "number1": 1.5,
        "integer1": 1,
        "integer2": 2,
        "string1": "Hello, World!",
        "array1": [
          "string",
          123,
          true,
          null,
          {
            "key": "value"
          }
        ],
        "array2": [
          1,
          2,
          3,
          "4",
          -1
        ],
        "object1": {
          "key": "value"
        },
        "object2": {
          "key1": "value1",
          "key2": "value2"
        },
        "some_new_key": "value"
      }
    }
  ]
}