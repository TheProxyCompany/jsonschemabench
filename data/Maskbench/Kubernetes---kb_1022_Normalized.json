{
  "description": "sample Kubernetes/kb_1022_Normalized.json",
  "meta": {
    "full_size": 974,
    "stripped_size": 140,
    "features": [],
    "raw_features": [
      "properties",
      "type",
      "type:[]",
      "type:null",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "description": "StatusCause provides more information about an api.Status failure, including cases when multiple errors are encountered.",
    "properties": {
      "field": {
        "description": "The field of the resource that has caused this error, as named by its JSON serialization. May include dot and postfix notation for nested attributes. Arrays are zero-indexed.  Fields may appear more than once in an array of causes due to fields having multiple errors. Optional.\n\nExamples:\n  \"name\" - the field \"name\" on the current resource\n  \"items[0].name\" - the field \"name\" on the first array entry in \"items\"",
        "type": [
          "string",
          "null"
        ]
      },
      "message": {
        "description": "A human-readable description of the cause of the error.  This field may be presented as-is to a reader.",
        "type": [
          "string",
          "null"
        ]
      },
      "reason": {
        "description": "A machine-readable description of the cause of the error. If this value is empty there is no information available.",
        "type": [
          "string",
          "null"
        ]
      }
    },
    "type": "object"
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "field": "items[0].name",
        "message": "The name field is required and must be a string.",
        "reason": "FieldValueRequired"
      }
    },
    {
      "description": "llama-70b generated negative; focus on type keyword with an array of types",
      "valid": false,
      "rust_error": "123 is not of types \"null\", \"string\"",
      "python_error": "123 is not of type 'string', 'null'\n\nFailed validating 'type' in schema['properties']['field']:\n    {'description': 'The field of the resource that has caused this error, '\n                    'as named by its JSON serialization. May include dot '\n                    'and postfix notation for nested attributes. Arrays '\n                    'are zero-indexed.  Fields may appear more than once '\n                    'in an array of causes due to fields having multiple '\n                    'errors. Optional.\\n'\n                    '\\n'\n                    'Examples:\\n'\n                    '  \"name\" - the field \"name\" on the current resource\\n'\n                    '  \"items[0].name\" - the field \"name\" on the first '\n                    'array entry in \"items\"',\n     'type': ['string', 'null']}\n\nOn instance['field']:\n    123",
      "data": {
        "field": 123,
        "message": "The name field is required and must be a string.",
        "reason": "FieldValueRequired"
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "field": "items[0].name",
        "message": "The name field is required.",
        "reason": "FieldValueRequired"
      }
    },
    {
      "description": "llama-70b generated negative; focus on type keyword with an array of types",
      "valid": false,
      "rust_error": "true is not of types \"null\", \"string\"",
      "python_error": "True is not of type 'string', 'null'\n\nFailed validating 'type' in schema['properties']['field']:\n    {'description': 'The field of the resource that has caused this error, '\n                    'as named by its JSON serialization. May include dot '\n                    'and postfix notation for nested attributes. Arrays '\n                    'are zero-indexed.  Fields may appear more than once '\n                    'in an array of causes due to fields having multiple '\n                    'errors. Optional.\\n'\n                    '\\n'\n                    'Examples:\\n'\n                    '  \"name\" - the field \"name\" on the current resource\\n'\n                    '  \"items[0].name\" - the field \"name\" on the first '\n                    'array entry in \"items\"',\n     'type': ['string', 'null']}\n\nOn instance['field']:\n    True",
      "data": {
        "field": true,
        "message": "The name field is required.",
        "reason": "FieldValueRequired"
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "123 is not of types \"null\", \"string\"",
      "python_error": "123 is not of type 'string', 'null'\n\nFailed validating 'type' in schema['properties']['field']:\n    {'description': 'The field of the resource that has caused this error, '\n                    'as named by its JSON serialization. May include dot '\n                    'and postfix notation for nested attributes. Arrays '\n                    'are zero-indexed.  Fields may appear more than once '\n                    'in an array of causes due to fields having multiple '\n                    'errors. Optional.\\n'\n                    '\\n'\n                    'Examples:\\n'\n                    '  \"name\" - the field \"name\" on the current resource\\n'\n                    '  \"items[0].name\" - the field \"name\" on the first '\n                    'array entry in \"items\"',\n     'type': ['string', 'null']}\n\nOn instance['field']:\n    123",
      "data": {
        "field": 123,
        "message": "The name field is required.",
        "reason": "FieldValueRequired"
      }
    }
  ]
}