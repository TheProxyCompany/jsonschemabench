{
  "description": "sample Github_medium/o58052.json",
  "meta": {
    "full_size": 1561,
    "stripped_size": 505,
    "features": [
      "@minmaxInteger",
      "@minmaxNumber"
    ],
    "raw_features": [
      "maximum",
      "minimum",
      "properties",
      "required",
      "type",
      "type:integer",
      "type:number",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "properties": {
      "registry": {
        "properties": {
          "access-control-allow-methods": {
            "default": "",
            "description": "Set value to Jetty Access-Control-Allow-Origin header for specified methods",
            "type": "string"
          },
          "access-control-allow-origin": {
            "default": "",
            "description": "Set value for Jetty Access-Control-Allow-Origin header",
            "type": "string"
          },
          "cpus": {
            "default": 1,
            "description": "CPU shares to allocate to each schema-registry instance.",
            "minimum": 1,
            "type": "number"
          },
          "heap": {
            "default": 256,
            "description": "JVM heap allocation (in MB) for connect worker task; should be no greater than ~64MB less than total memory for the instance.",
            "minimum": 256,
            "type": "number"
          },
          "instances": {
            "default": 1,
            "description": "Number of instances to run (currently limited to 1).",
            "maximum": 1,
            "minimum": 1,
            "type": "integer"
          },
          "kafkastore": {
            "default": "dcos-service-confluent-kafka",
            "description": "Name of the Kafka service hosting the storage for this Schema Registry edition.",
            "type": "string"
          },
          "mem": {
            "default": 512,
            "description": "Memory (MB) to allocate to each schema-registry instance.",
            "minimum": 320,
            "type": "number"
          },
          "name": {
            "default": "schema-registry",
            "description": "Service name for the schema-registry instance(s)",
            "type": "string"
          },
          "role": {
            "default": "*",
            "description": "Deploy schema-registry only on nodes with this role.",
            "type": "string"
          },
          "zookeeper-master": {
            "default": "master.mesos:2181",
            "description": "Zookeeper Connect string for service cluster. Format limited to single target: <zk-host>:<zkport>",
            "type": "string"
          }
        },
        "required": [
          "cpus",
          "mem",
          "instances",
          "name"
        ],
        "type": "object"
      }
    },
    "type": "object"
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "registry": {
          "access-control-allow-methods": "",
          "access-control-allow-origin": "",
          "cpus": 1,
          "heap": 256,
          "instances": 1,
          "kafkastore": "dcos-service-confluent-kafka",
          "mem": 512,
          "name": "schema-registry",
          "role": "*",
          "zookeeper-master": "master.mesos:2181"
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on minimum keyword or maximum keyword",
      "valid": false,
      "rust_error": "0 is less than the minimum of 1",
      "python_error": "0 is less than the minimum of 1\n\nFailed validating 'minimum' in schema['properties']['registry']['properties']['cpus']:\n    {'default': 1,\n     'description': 'CPU shares to allocate to each schema-registry '\n                    'instance.',\n     'minimum': 1,\n     'type': 'number'}\n\nOn instance['registry']['cpus']:\n    0",
      "data": {
        "registry": {
          "access-control-allow-methods": "",
          "access-control-allow-origin": "",
          "cpus": 0,
          "heap": 256,
          "instances": 1,
          "kafkastore": "dcos-service-confluent-kafka",
          "mem": 512,
          "name": "schema-registry",
          "role": "*",
          "zookeeper-master": "master.mesos:2181"
        }
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "registry": {
          "access-control-allow-methods": "",
          "access-control-allow-origin": "",
          "cpus": 2,
          "heap": 512,
          "instances": 1,
          "kafkastore": "dcos-service-confluent-kafka",
          "mem": 1024,
          "name": "schema-registry",
          "role": "*",
          "zookeeper-master": "master.mesos:2181"
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on minimum keyword or maximum keyword",
      "valid": false,
      "rust_error": "0 is less than the minimum of 1",
      "python_error": "319 is less than the minimum of 320\n\nFailed validating 'minimum' in schema['properties']['registry']['properties']['mem']:\n    {'default': 512,\n     'description': 'Memory (MB) to allocate to each schema-registry '\n                    'instance.',\n     'minimum': 320,\n     'type': 'number'}\n\nOn instance['registry']['mem']:\n    319",
      "data": {
        "registry": {
          "access-control-allow-methods": "",
          "access-control-allow-origin": "",
          "cpus": 0,
          "heap": -1,
          "instances": 2,
          "kafkastore": "dcos-service-confluent-kafka",
          "mem": 319,
          "name": "schema-registry",
          "role": "*",
          "zookeeper-master": "master.mesos:2181"
        }
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "-1 is less than the minimum of 1",
      "python_error": "None is not of type 'string'\n\nFailed validating 'type' in schema['properties']['registry']['properties']['zookeeper-master']:\n    {'default': 'master.mesos:2181',\n     'description': 'Zookeeper Connect string for service cluster. Format '\n                    'limited to single target: <zk-host>:<zkport>',\n     'type': 'string'}\n\nOn instance['registry']['zookeeper-master']:\n    None",
      "data": {
        "registry": {
          "access-control-allow-methods": "",
          "access-control-allow-origin": "",
          "cpus": -1,
          "minimum value of cpus should be 1": "heap",
          "removed heap property but it's default is defined in schema, let's focus on another property": "instances",
          "removed instances but it's required property, let's add it with invalid value": "kafkastore",
          "instances": 2,
          "maximum value of instances should be 1": "mem",
          "removed mem but it's required property, let's add it with invalid value": "name",
          "removed name but it's required property, let's add it with invalid value": "role",
          "mem": 319,
          "minimum value of mem should be 320": "zookeeper-master",
          "name": null,
          "name's type should be string": "heap",
          "let's add heap with invalid value": "role",
          "heap": "abc",
          "heap's type should be number": "kafkastore",
          "zookeeper-master": null,
          "zookeeper-master's type should be string": "kafkastore",
          "role": 123,
          "role's type should be string": "kafkastore",
          "kafkastore": 123,
          "kafkastore's type should be string": "cpus"
        }
      }
    }
  ]
}