{
  "description": "sample Github_medium/o7495.json",
  "meta": {
    "full_size": 1422,
    "stripped_size": 763,
    "features": [
      "$ref",
      "enum",
      "items"
    ],
    "raw_features": [
      "$schema",
      "definitions",
      "properties",
      "required",
      "type",
      "type:array",
      "type:boolean",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "definitions": {
      "BindingChange": {
        "properties": {
          "conditions": {
            "description": "An array of function names that will be executed as conditions.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "moveBetweenElementTags": {
            "description": "Move property value between owner's element tags.",
            "type": "boolean"
          },
          "name": {
            "description": "Name of the input/output property to change",
            "type": "string"
          },
          "owner": {
            "$ref": "#/definitions/TemplateElement",
            "description": "Component that emits the output or accepts the input"
          },
          "remove": {
            "description": "Remove directive/component/property",
            "type": "boolean"
          },
          "replaceWith": {
            "description": "Replace original selector/property with new one",
            "type": "string"
          },
          "valueTransform": {
            "description": "A function that transforms the value of an Input",
            "type": "string"
          }
        },
        "required": [
          "name",
          "owner"
        ],
        "type": "object"
      },
      "ElementType": {
        "enum": [
          "component",
          "directive"
        ],
        "type": "string"
      },
      "TemplateElement": {
        "properties": {
          "selector": {
            "description": "Original selector to apply change to",
            "type": "string"
          },
          "type": {
            "$ref": "#/definitions/ElementType",
            "description": "Type of selector the change applies to - either component or directive"
          }
        },
        "required": [
          "selector",
          "type"
        ],
        "type": "object"
      }
    },
    "properties": {
      "changes": {
        "description": "An array of changes to input/output properties",
        "items": {
          "$ref": "#/definitions/BindingChange"
        },
        "type": "array"
      }
    },
    "required": [
      "changes"
    ],
    "type": "object"
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "changes": [
          {
            "name": "inputProperty",
            "owner": {
              "selector": "app-component",
              "type": "component"
            },
            "conditions ": [
              "checkCondition1",
              "checkCondition2"
            ],
            "moveBetweenElementTags ": true,
            "remove ": false,
            "replaceWith ": "",
            "valueTransform ": ""
          },
          {
            "name": "outputProperty",
            "owner": {
              "selector": "app-directive",
              "type": "directive"
            },
            "conditions ": [],
            "moveBetweenElementTags ": false,
            "remove ": true,
            "replaceWith ": "newSelector",
            "valueTransform ": "transformFunction"
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"invalidType\" is not one of [\"component\",\"directive\"]",
      "python_error": "'invalidType' is not one of ['component', 'directive']\n\nFailed validating 'enum' in schema['properties']['changes']['items']['properties']['owner']['properties']['type']:\n    {'enum': ['component', 'directive'], 'type': 'string'}\n\nOn instance['changes'][2]['owner']['type']:\n    'invalidType'",
      "data": {
        "changes": [
          {
            "conditions": [
              "checkCondition1",
              "checkCondition2"
            ],
            "moveBetweenElementTags": true,
            "name": "inputProperty",
            "owner": {
              "selector": "app-component",
              "type": "component"
            },
            "remove": false,
            "replaceWith": "",
            "valueTransform": ""
          },
          {
            "conditions": [],
            "moveBetweenElementTags": false,
            "name": "outputProperty",
            "owner": {
              "selector": "app-directive",
              "type": "directive"
            },
            "remove": true,
            "replaceWith": "newSelector",
            "valueTransform": "transformFunction"
          },
          {
            "name": "invalidProperty",
            "owner": {
              "selector": "app-directive",
              "type": "invalidType"
            },
            "conditions": [],
            "moveBetweenElementTags": false,
            "remove": true,
            "replaceWith": "newSelector",
            "valueTransform": "transformFunction"
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "123 is not of type \"string\"",
      "python_error": "123 is not of type 'string'\n\nFailed validating 'type' in schema['properties']['changes']['items']['properties']['conditions']['items']:\n    {'type': 'string'}\n\nOn instance['changes'][0]['conditions'][1]:\n    123",
      "data": {
        "changes": [
          {
            "name": "inputProperty",
            "owner": {
              "selector": "app-component",
              "type": "component"
            },
            "conditions": [
              "checkCondition1",
              123
            ],
            "moveBetweenElementTags": true,
            "remove": false,
            "replaceWith": "",
            "valueTransform": ""
          },
          {
            "name": "outputProperty",
            "owner": {
              "selector": "app-directive",
              "type": "directive"
            },
            "conditions": [],
            "moveBetweenElementTags": false,
            "remove": true,
            "replaceWith": "newSelector",
            "valueTransform": "transformFunction"
          }
        ]
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "changes": [
          {
            "conditions": [
              "checkCondition1",
              "checkCondition2"
            ],
            "moveBetweenElementTags": true,
            "name": "inputProperty",
            "owner": {
              "selector": "app-component",
              "type": "component"
            },
            "remove": false,
            "replaceWith": "newProperty",
            "valueTransform": "transformFunction"
          },
          {
            "conditions": [
              "checkCondition3"
            ],
            "moveBetweenElementTags": false,
            "name": "outputProperty",
            "owner": {
              "selector": "app-directive",
              "type": "directive"
            },
            "remove": true,
            "replaceWith": "",
            "valueTransform": ""
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"module\" is not one of [\"component\",\"directive\"]",
      "python_error": "123 is not of type 'string'\n\nFailed validating 'type' in schema['properties']['changes']['items']['properties']['conditions']['items']:\n    {'type': 'string'}\n\nOn instance['changes'][1]['conditions'][0]:\n    123",
      "data": {
        "changes": [
          {
            "name": "inputProperty",
            "owner": {
              "selector": "app-component",
              "type": "module"
            },
            "conditions": [
              "checkCondition1",
              "checkCondition2"
            ],
            "moveBetweenElementTags": true,
            "remove": false,
            "replaceWith": "newProperty",
            "valueTransform": "transformFunction"
          },
          {
            "name": "outputProperty",
            "owner": {
              "selector": "app-directive",
              "type": "directive"
            },
            "conditions": [
              123
            ],
            "moveBetweenElementTags": false,
            "remove": true,
            "replaceWith": "",
            "valueTransform": ""
          }
        ]
      }
    }
  ]
}