{
  "description": "sample Github_medium/o90707.json",
  "meta": {
    "full_size": 3845,
    "stripped_size": 863,
    "features": [
      "@minmaxNumber"
    ],
    "raw_features": [
      "minimum",
      "properties",
      "required",
      "type",
      "type:boolean",
      "type:number",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "properties": {
      "networking": {
        "description": "influxdb networking configuration properties",
        "properties": {
          "external_access": {
            "description": "Enable access from outside the cluster through Marathon-LB.\nNOTE: this connection is unencrypted.",
            "properties": {
              "enable": {
                "default": false,
                "description": "Enable or disable creating a VIP for external access through a public node running Marathon-LB.",
                "type": "boolean"
              },
              "external_access_port": {
                "default": 18083,
                "description": "For external access, port number to be used for clear communication in the external Marathon-LB load balancer",
                "type": "number"
              }
            },
            "type": "object"
          },
          "port": {
            "default": 8083,
            "description": "Port number to be used for administration internally to the cluster.",
            "type": "number"
          },
          "port_api": {
            "default": 8086,
            "description": "Port number to be used for api communication internally to the cluster.",
            "type": "number"
          }
        },
        "type": "object"
      },
      "service": {
        "description": "DC/OS service configuration properties",
        "properties": {
          "cpus": {
            "default": 1,
            "description": "CPU shares to allocate to each service instance.",
            "minimum": 1,
            "type": "number"
          },
          "mem": {
            "default": 2048.0,
            "description": "Memory to allocate to each service instance.",
            "minimum": 1024.0,
            "type": "number"
          },
          "name": {
            "default": "influxdb",
            "description": "Name of this service instance",
            "type": "string"
          }
        },
        "required": [
          "cpus",
          "mem"
        ],
        "type": "object"
      },
      "storage": {
        "description": "influxdb storage configuration properties",
        "properties": {
          "host_volume_influxdb": {
            "default": "/tmp",
            "description": "If using non-persistent volumes (local volumes), this sets the location of a volume on the host to be used for the influxdb service to store the contents of the influxdb. The final location will be derived from this value plus the name set in `name` (e.g. `/mnt/host_volume/service_name`). This can be a mounted NFS drive. Note that this path must be the same on all DC/OS agents. NOTE: if you don't change the default /tmp value, YOUR DATA WILL NOT BE SAVED IN ANY WAY.",
            "type": "string"
          },
          "persistence": {
            "description": "Enable persistent storage.",
            "properties": {
              "enable": {
                "default": false,
                "description": "Enable or disable persistent storage.",
                "type": "boolean"
              },
              "external": {
                "description": "External persistent storage properties",
                "properties": {
                  "driver": {
                    "default": "rexray",
                    "description": "Volume driver to use for storage. The default value should be correct for most use cases.",
                    "type": "string"
                  },
                  "enable": {
                    "default": false,
                    "description": "Enable or disable external persistent storage. The `persistence` option must also be selected. Please note that for these to work, your DC/OS cluster MUST have been installed with the right options in `config.yaml`. Also, please note this requires a working  configuration file for the driver (e.g. `rexray.yaml`).",
                    "type": "boolean"
                  },
                  "provider": {
                    "default": "dvdi",
                    "description": "Provider of the external persistent volume. The default value should be correct for most use cases.",
                    "type": "string"
                  },
                  "volume_name_influxdb": {
                    "default": "influxdb",
                    "description": "Name that your volume driver uses to look up your external volume. When your task is staged on an agent, the volume driver queries the storage service for a volume with this name. If one does not exist, it is created implicitly. Otherwise, the existing volume is reused.",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "volume_size_influxdb": {
                "default": 2048,
                "description": "If a new volume is to be created, this controls its size in MBs.",
                "type": "number"
              }
            },
            "type": "object"
          },
          "pre_create_database": {
            "default": true,
            "description": "Check to create one or more databases on the first time the service starts automatically.",
            "type": "boolean"
          },
          "pre_create_database_name": {
            "default": "cadvisor",
            "description": "Use 'db1;db2;db3' to create databases named 'db1', 'db2', and 'db3' on the first time the service starts automatically. Each database name is separated by ; .",
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "networking": {
          "external_access": {
            "enable": true,
            "external_access_port": 18083
          },
          "port": 8083,
          "port_api": 8086
        },
        "service": {
          "cpus": 2,
          "mem": 4096.0,
          "name": "influxdb-service"
        },
        "storage": {
          "host_volume_influxdb": "/mnt/host_volume",
          "persistence": {
            "enable": true,
            "external": {
              "driver": "rexray",
              "enable": true,
              "provider": "dvdi",
              "volume_name_influxdb": "influxdb-volume"
            },
            "volume_size_influxdb": 4096
          },
          "pre_create_database": true,
          "pre_create_database_name": "db1;db2;db3"
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on minimum keyword",
      "valid": false,
      "rust_error": "0 is less than the minimum of 1",
      "python_error": "512.0 is less than the minimum of 1024.0\n\nFailed validating 'minimum' in schema['properties']['service']['properties']['mem']:\n    {'default': 2048.0,\n     'description': 'Memory to allocate to each service instance.',\n     'minimum': 1024.0,\n     'type': 'number'}\n\nOn instance['service']['mem']:\n    512.0",
      "data": {
        "networking": {
          "external_access": {
            "enable": true,
            "external_access_port": 18083
          },
          "port": 8083,
          "port_api": 8086
        },
        "service": {
          "cpus": 0,
          "mem": 512.0,
          "name": "influxdb-service"
        },
        "storage": {
          "host_volume_influxdb": "/mnt/host_volume",
          "persistence": {
            "enable": true,
            "external": {
              "driver": "rexray",
              "enable": true,
              "provider": "dvdi",
              "volume_name_influxdb": "influxdb-volume"
            },
            "volume_size_influxdb": 4096
          },
          "pre_create_database": true,
          "pre_create_database_name": "db1;db2;db3"
        }
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"18083\" is not of type \"number\"",
      "python_error": "'18083' is not of type 'number'\n\nFailed validating 'type' in schema['properties']['networking']['properties']['external_access']['properties']['external_access_port']:\n    {'default': 18083,\n     'description': 'For external access, port number to be used for clear '\n                    'communication in the external Marathon-LB load '\n                    'balancer',\n     'type': 'number'}\n\nOn instance['networking']['external_access']['external_access_port']:\n    '18083'",
      "data": {
        "networking": {
          "external_access": {
            "enable": true,
            "external_access_port": "18083"
          },
          "port": 8083,
          "port_api": 8086
        },
        "service": {
          "cpus": 2,
          "mem": 4096.0,
          "name": "influxdb-service"
        },
        "storage": {
          "host_volume_influxdb": "/mnt/host_volume",
          "persistence": {
            "enable": true,
            "external": {
              "driver": "rexray",
              "enable": true,
              "provider": "dvdi",
              "volume_name_influxdb": "influxdb-volume"
            },
            "volume_size_influxdb": 4096
          },
          "pre_create_database": true,
          "pre_create_database_name": "db1;db2;db3"
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on minimum keyword",
      "valid": false,
      "rust_error": "0 is less than the minimum of 1",
      "python_error": "1023.0 is less than the minimum of 1024.0\n\nFailed validating 'minimum' in schema['properties']['service']['properties']['mem']:\n    {'default': 2048.0,\n     'description': 'Memory to allocate to each service instance.',\n     'minimum': 1024.0,\n     'type': 'number'}\n\nOn instance['service']['mem']:\n    1023.0",
      "data": {
        "networking": {
          "external_access": {
            "enable": true,
            "external_access_port": 18083
          },
          "port": 8083,
          "port_api": 8086
        },
        "service": {
          "cpus": 0,
          "mem": 1023.0,
          "name": "influxdb-service"
        },
        "storage": {
          "host_volume_influxdb": "/mnt/host_volume",
          "persistence": {
            "enable": true,
            "external": {
              "driver": "rexray",
              "enable": true,
              "provider": "dvdi",
              "volume_name_influxdb": "influxdb-volume"
            },
            "volume_size_influxdb": 4096
          },
          "pre_create_database": true,
          "pre_create_database_name": "db1;db2;db3"
        }
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"18083\" is not of type \"number\"",
      "python_error": "0 is less than the minimum of 1\n\nFailed validating 'minimum' in schema['properties']['service']['properties']['cpus']:\n    {'default': 1,\n     'description': 'CPU shares to allocate to each service instance.',\n     'minimum': 1,\n     'type': 'number'}\n\nOn instance['service']['cpus']:\n    0",
      "data": {
        "networking": {
          "external_access": {
            "enable": true,
            "external_access_port": "18083"
          }
        },
        "port": 8083,
        "port_api": 8086,
        "service": {
          "cpus": 0,
          "mem": 4096.0,
          "name": "influxdb-service"
        },
        "storage": {
          "host_volume_influxdb": "/mnt/host_volume",
          "persistence": {
            "enable": true,
            "external": {
              "driver": "rexray",
              "enable": true,
              "provider": "dvdi",
              "volume_name_influxdb": "influxdb-volume"
            },
            "volume_size_influxdb": -1
          },
          "pre_create_database": true,
          "pre_create_database_name": "db1;db2;db3"
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on minimum keyword",
      "valid": false,
      "rust_error": "0 is less than the minimum of 1",
      "python_error": "1023.0 is less than the minimum of 1024.0\n\nFailed validating 'minimum' in schema['properties']['service']['properties']['mem']:\n    {'default': 2048.0,\n     'description': 'Memory to allocate to each service instance.',\n     'minimum': 1024.0,\n     'type': 'number'}\n\nOn instance['service']['mem']:\n    1023.0",
      "data": {
        "networking": {
          "external_access": {
            "enable": true,
            "external_access_port": 18083
          },
          "port": 8083,
          "port_api": 8086
        },
        "service": {
          "cpus": 0,
          "mem": 1023.0,
          "name": "influxdb-service"
        },
        "storage": {
          "host_volume_influxdb": "/mnt/host_volume",
          "persistence": {
            "enable": true,
            "external": {
              "driver": "rexray",
              "enable": true,
              "provider": "dvdi",
              "volume_name_influxdb": "influxdb-volume"
            },
            "volume_size_influxdb": 2048
          },
          "pre_create_database": true,
          "pre_create_database_name": "db1;db2;db3"
        }
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"string\" is not of type \"number\"",
      "python_error": "'string' is not of type 'number'\n\nFailed validating 'type' in schema['properties']['networking']['properties']['external_access']['properties']['external_access_port']:\n    {'default': 18083,\n     'description': 'For external access, port number to be used for clear '\n                    'communication in the external Marathon-LB load '\n                    'balancer',\n     'type': 'number'}\n\nOn instance['networking']['external_access']['external_access_port']:\n    'string'",
      "data": {
        "networking": {
          "external_access": {
            "enable": true,
            "external_access_port": "string"
          }
        },
        "port": -1,
        "port_api": 8086
      }
    }
  ]
}