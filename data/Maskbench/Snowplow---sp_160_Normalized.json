{
  "description": "sample Snowplow/sp_160_Normalized.json",
  "meta": {
    "full_size": 504,
    "stripped_size": 341,
    "features": [
      "@minmaxInteger",
      "@minmaxLength",
      "additionalProperties"
    ],
    "raw_features": [
      "_boolSchema",
      "maxLength",
      "maximum",
      "minimum",
      "properties",
      "type",
      "type:[]",
      "type:integer",
      "type:null",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "additionalProperties": true,
    "description": "Schema for an Optimizely X summary context",
    "properties": {
      "experimentId": {
        "maximum": 9223372036854776000,
        "minimum": 0,
        "type": [
          "integer",
          "null"
        ]
      },
      "variation": {
        "maximum": 9223372036854776000,
        "minimum": 0,
        "type": [
          "integer",
          "null"
        ]
      },
      "variationName": {
        "maxLength": 255,
        "type": [
          "string",
          "null"
        ]
      },
      "visitorId": {
        "maxLength": 100,
        "type": [
          "string",
          "null"
        ]
      }
    },
    "self": {
      "format": "jsonschema",
      "name": "summary",
      "vendor": "com.optimizely.optimizelyx",
      "version": "1-0-0"
    },
    "type": "object"
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "experimentId": 123456789,
        "variation": 1,
        "variationName": "Control Group",
        "visitorId": "visitor123"
      }
    },
    {
      "description": "llama-70b generated negative; focus on maxLength keyword",
      "valid": false,
      "rust_error": "\"Control Group with a very long name that exceeds the maximum allowed length of 255 characters, this is a test to see if the maxLength keyword is properly validated by the schema validator, if the validator does not support maxLength, this should be accepted as a valid instance\" is longer than 255 characters",
      "python_error": "'Control Group with a very long name that exceeds the maximum allowed length of 255 characters, this is a test to see if the maxLength keyword is properly validated by the schema validator, if the validator does not support maxLength, this should be accepted as a valid instance' is too long\n\nFailed validating 'maxLength' in schema['properties']['variationName']:\n    {'maxLength': 255, 'type': ['string', 'null']}\n\nOn instance['variationName']:\n    ('Control Group with a very long name that exceeds the maximum allowed '\n     'length of 255 characters, this is a test to see if the maxLength '\n     'keyword is properly validated by the schema validator, if the '\n     'validator does not support maxLength, this should be accepted as a '\n     'valid instance')",
      "data": {
        "experimentId": 123456789,
        "variation": 1,
        "variationName": "Control Group with a very long name that exceeds the maximum allowed length of 255 characters, this is a test to see if the maxLength keyword is properly validated by the schema validator, if the validator does not support maxLength, this should be accepted as a valid instance",
        "visitorId": "visitor123"
      }
    },
    {
      "description": "llama-70b generated negative; focus on type keyword with an array of types",
      "valid": false,
      "rust_error": "\"123456789\" is not of types \"integer\", \"null\"",
      "python_error": "'123456789' is not of type 'integer', 'null'\n\nFailed validating 'type' in schema['properties']['experimentId']:\n    {'maximum': 9223372036854776000,\n     'minimum': 0,\n     'type': ['integer', 'null']}\n\nOn instance['experimentId']:\n    '123456789'",
      "data": {
        "experimentId": "123456789",
        "variation": 1,
        "variationName": "Control Group",
        "visitorId": "visitor123"
      }
    },
    {
      "description": "llama-70b generated negative; focus on minimum keyword or maximum keyword",
      "valid": false,
      "rust_error": "-1 is less than the minimum of 0",
      "python_error": "-1 is less than the minimum of 0\n\nFailed validating 'minimum' in schema['properties']['experimentId']:\n    {'maximum': 9223372036854776000,\n     'minimum': 0,\n     'type': ['integer', 'null']}\n\nOn instance['experimentId']:\n    -1",
      "data": {
        "experimentId": -1,
        "variation": 1,
        "variationName": "Control Group",
        "visitorId": "visitor123"
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "12345678901234567890 is greater than the maximum of 9223372036854776000",
      "python_error": "12345678901234567890 is greater than the maximum of 9223372036854776000\n\nFailed validating 'maximum' in schema['properties']['experimentId']:\n    {'maximum': 9223372036854776000,\n     'minimum': 0,\n     'type': ['integer', 'null']}\n\nOn instance['experimentId']:\n    12345678901234567890",
      "data": {
        "experimentId": 12345678901234567890,
        "variation": 1,
        "variationName": "Control Group",
        "visitorId": "visitor123"
      }
    },
    {
      "description": "llama-70b generated negative; focus on type keyword with an array of types",
      "valid": false,
      "rust_error": "1.5 is not of types \"integer\", \"null\"",
      "python_error": "1.5 is not of type 'integer', 'null'\n\nFailed validating 'type' in schema['properties']['experimentId']:\n    {'maximum': 9223372036854776000,\n     'minimum': 0,\n     'type': ['integer', 'null']}\n\nOn instance['experimentId']:\n    1.5",
      "data": {
        "experimentId": 1.5,
        "variation": 1,
        "variationName": "Control Group",
        "visitorId": "visitor123"
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "9223372036854776001 is greater than the maximum of 9223372036854776000",
      "python_error": "9223372036854776001 is greater than the maximum of 9223372036854776000\n\nFailed validating 'maximum' in schema['properties']['experimentId']:\n    {'maximum': 9223372036854776000,\n     'minimum': 0,\n     'type': ['integer', 'null']}\n\nOn instance['experimentId']:\n    9223372036854776001",
      "data": {
        "experimentId": 9223372036854776001,
        "variation": 1,
        "variationName": "Control Group",
        "visitorId": "visitor123"
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "experimentId": 123456789,
        "variation": 1,
        "variationName": "Control Group",
        "visitorId": "visitor-12345",
        "additionalProperty": "This is an additional property"
      }
    },
    {
      "description": "llama-70b generated negative; focus on type keyword with an array of types",
      "valid": false,
      "rust_error": "\"123456789\" is not of types \"integer\", \"null\"",
      "python_error": "'123456789' is not of type 'integer', 'null'\n\nFailed validating 'type' in schema['properties']['experimentId']:\n    {'maximum': 9223372036854776000,\n     'minimum': 0,\n     'type': ['integer', 'null']}\n\nOn instance['experimentId']:\n    '123456789'",
      "data": {
        "experimentId": "123456789",
        "variation": 1,
        "variationName": "Control Group",
        "visitorId": "visitor-12345",
        "additionalProperty": "This is an additional property"
      }
    },
    {
      "description": "llama-70b generated negative; focus on minimum keyword or maximum keyword",
      "valid": false,
      "rust_error": "-1 is less than the minimum of 0",
      "python_error": "-1 is less than the minimum of 0\n\nFailed validating 'minimum' in schema['properties']['experimentId']:\n    {'maximum': 9223372036854776000,\n     'minimum': 0,\n     'type': ['integer', 'null']}\n\nOn instance['experimentId']:\n    -1",
      "data": {
        "experimentId": -1,
        "variation": 1,
        "variationName": "Control Group",
        "visitorId": "visitor-12345",
        "additionalProperty": "This is an additional property"
      }
    },
    {
      "description": "llama-70b generated negative; focus on maxLength keyword",
      "valid": false,
      "rust_error": "\"This is a very long visitor ID that violates the maxLength constraint of 100 characters and should cause the validator to fail if it is not implemented correctly because it is longer than the allowed length\" is longer than 100 characters",
      "python_error": "'This is a very long visitor ID that violates the maxLength constraint of 100 characters and should cause the validator to fail if it is not implemented correctly because it is longer than the allowed length' is too long\n\nFailed validating 'maxLength' in schema['properties']['visitorId']:\n    {'maxLength': 100, 'type': ['string', 'null']}\n\nOn instance['visitorId']:\n    ('This is a very long visitor ID that violates the maxLength '\n     'constraint of 100 characters and should cause the validator to fail '\n     'if it is not implemented correctly because it is longer than the '\n     'allowed length')",
      "data": {
        "experimentId": 123456789,
        "variation": 1,
        "variationName": "Control Group",
        "visitorId": "This is a very long visitor ID that violates the maxLength constraint of 100 characters and should cause the validator to fail if it is not implemented correctly because it is longer than the allowed length",
        "additionalProperty": "This is an additional property"
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "9223372036854776001 is greater than the maximum of 9223372036854776000",
      "python_error": "9223372036854776001 is greater than the maximum of 9223372036854776000\n\nFailed validating 'maximum' in schema['properties']['experimentId']:\n    {'maximum': 9223372036854776000,\n     'minimum': 0,\n     'type': ['integer', 'null']}\n\nOn instance['experimentId']:\n    9223372036854776001",
      "data": {
        "experimentId": 9223372036854776001,
        "variation": 1,
        "variationName": "Control Group",
        "visitorId": "visitor-12345",
        "additionalProperty": "This is an additional property"
      }
    }
  ]
}