{
  "description": "sample Github_easy/o81587.json",
  "meta": {
    "full_size": 388,
    "stripped_size": 388,
    "features": [
      "additionalProperties",
      "anyOf",
      "enum"
    ],
    "raw_features": [
      "$schema",
      "_boolSchema",
      "properties",
      "required",
      "type",
      "type:boolean",
      "type:number",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "type": "object",
    "properties": {
      "email": {
        "type": "string"
      },
      "firstName": {
        "type": "string"
      },
      "lastName": {
        "type": "string"
      },
      "postedSlides": {
        "anyOf": [
          {
            "type": "boolean"
          },
          {
            "type": "string",
            "enum": [
              "yes",
              "Yes",
              "no",
              "No"
            ]
          }
        ]
      },
      "rating": {
        "type": "number"
      }
    },
    "additionalProperties": false,
    "required": [
      "email",
      "firstName",
      "lastName",
      "postedSlides",
      "rating"
    ]
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "email": "john.doe@example.com",
        "firstName": "John",
        "lastName": "Doe",
        "postedSlides": "yes",
        "rating": 4.5
      }
    },
    {
      "description": "llama-70b generated negative; focus on anyOf keyword",
      "valid": false,
      "rust_error": "123 is not valid under any of the schemas listed in the 'anyOf' keyword",
      "python_error": "123 is not valid under any of the given schemas\n\nFailed validating 'anyOf' in schema['properties']['postedSlides']:\n    {'anyOf': [{'type': 'boolean'},\n               {'type': 'string', 'enum': ['yes', 'Yes', 'no', 'No']}]}\n\nOn instance['postedSlides']:\n    123",
      "data": {
        "email": "john.doe@example.com",
        "firstName": "John",
        "lastName": "Doe",
        "postedSlides": 123,
        "rating": 4.5
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"maybe\" is not valid under any of the schemas listed in the 'anyOf' keyword",
      "python_error": "'maybe' is not one of ['yes', 'Yes', 'no', 'No']\n\nFailed validating 'enum' in schema[1]:\n    {'type': 'string', 'enum': ['yes', 'Yes', 'no', 'No']}\n\nOn instance:\n    'maybe'",
      "data": {
        "email": "john.doe@example.com",
        "firstName": "John",
        "lastName": "Doe",
        "postedSlides": "maybe",
        "rating": 4.5
      }
    },
    {
      "description": "llama-70b generated negative; focus on anyOf keyword",
      "valid": false,
      "rust_error": "1 is not valid under any of the schemas listed in the 'anyOf' keyword",
      "python_error": "1 is not valid under any of the given schemas\n\nFailed validating 'anyOf' in schema['properties']['postedSlides']:\n    {'anyOf': [{'type': 'boolean'},\n               {'type': 'string', 'enum': ['yes', 'Yes', 'no', 'No']}]}\n\nOn instance['postedSlides']:\n    1",
      "data": {
        "email": "john.doe@example.com",
        "firstName": "John",
        "lastName": "Doe",
        "postedSlides": 1,
        "rating": 4.5
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"yeah\" is not valid under any of the schemas listed in the 'anyOf' keyword",
      "python_error": "Additional properties are not allowed ('additionalProperty' was unexpected)\n\nFailed validating 'additionalProperties' in schema:\n    {'$schema': 'http://json-schema.org/draft-04/schema#',\n     'type': 'object',\n     'properties': {'email': {'type': 'string'},\n                    'firstName': {'type': 'string'},\n                    'lastName': {'type': 'string'},\n                    'postedSlides': {'anyOf': [{'type': 'boolean'},\n                                               {'type': 'string',\n                                                'enum': ['yes',\n                                                         'Yes',\n                                                         'no',\n                                                         'No']}]},\n                    'rating': {'type': 'number'}},\n     'additionalProperties': False,\n     'required': ['email',\n                  'firstName',\n                  'lastName',\n                  'postedSlides',\n                  'rating']}\n\nOn instance:\n    {'email': '.. (157 more)",
      "data": {
        "email": "john.doe@example.com",
        "firstName": "John",
        "lastName": "Doe",
        "postedSlides": "yeah",
        "rating": 4.5,
        "additionalProperty": "extra"
      }
    }
  ]
}