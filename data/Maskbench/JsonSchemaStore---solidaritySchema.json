{
  "description": "sample JsonSchemaStore/solidaritySchema.json",
  "meta": {
    "full_size": 2778,
    "stripped_size": 2284,
    "features": [
      "$ref",
      "@minmaxItems",
      "@siblingKeys",
      "additionalProperties",
      "additionalProperties:object",
      "enum",
      "items",
      "oneOf",
      "uniqueItems"
    ],
    "raw_features": [
      "$schema",
      "_boolSchema",
      "definitions",
      "id",
      "minItems",
      "properties",
      "required",
      "type",
      "type:[]",
      "type:array",
      "type:boolean",
      "type:integer",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "definitions": {
      "cli": {
        "description": "CLI Rule",
        "type": "object",
        "properties": {
          "rule": {
            "enum": [
              "cli"
            ]
          },
          "binary": {
            "type": "string"
          },
          "semver": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "line": {
            "type": [
              "string",
              "integer"
            ]
          },
          "matchIndex": {
            "type": "integer"
          },
          "platform": {
            "enum": [
              "darwin",
              "macos",
              "freebsd",
              "linux",
              "sunos",
              "win32",
              "windows"
            ]
          },
          "error": {
            "type": "string"
          },
          "ci": {
            "type": "boolean"
          }
        },
        "required": [
          "rule",
          "binary"
        ]
      },
      "dir": {
        "description": "Dir Rule",
        "type": "object",
        "properties": {
          "rule": {
            "enum": [
              "dir",
              "directory"
            ]
          },
          "platform": {
            "enum": [
              "darwin",
              "macos",
              "freebsd",
              "linux",
              "sunos",
              "win32",
              "windows"
            ]
          },
          "error": {
            "type": "string"
          },
          "ci": {
            "type": "boolean"
          }
        },
        "required": [
          "rule",
          "location"
        ]
      },
      "file": {
        "description": "File Rule",
        "type": "object",
        "properties": {
          "rule": {
            "enum": [
              "file"
            ]
          },
          "platform": {
            "enum": [
              "darwin",
              "macos",
              "freebsd",
              "linux",
              "sunos",
              "win32",
              "windows"
            ]
          },
          "error": {
            "type": "string"
          },
          "ci": {
            "type": "boolean"
          }
        },
        "required": [
          "rule",
          "location"
        ]
      },
      "env": {
        "description": "ENV Rule",
        "type": "object",
        "properties": {
          "rule": {
            "enum": [
              "env"
            ]
          },
          "platform": {
            "enum": [
              "darwin",
              "macos",
              "freebsd",
              "linux",
              "sunos",
              "win32",
              "windows"
            ]
          },
          "error": {
            "type": "string"
          },
          "ci": {
            "type": "boolean"
          }
        },
        "required": [
          "rule",
          "variable"
        ]
      },
      "shell": {
        "description": "Shell Rule",
        "type": "object",
        "properties": {
          "rule": {
            "enum": [
              "shell"
            ]
          },
          "platform": {
            "enum": [
              "darwin",
              "macos",
              "freebsd",
              "linux",
              "sunos",
              "win32",
              "windows"
            ]
          },
          "error": {
            "type": "string"
          },
          "ci": {
            "type": "boolean"
          },
          "match": {
            "type": "string",
            "description": "A regexp to search the output."
          }
        },
        "required": [
          "rule",
          "match"
        ]
      },
      "custom": {
        "description": "Custom Rule",
        "type": "object",
        "additionalProperties": true,
        "properties": {
          "rule": {
            "enum": [
              "custom"
            ]
          },
          "plugin": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "platform": {
            "enum": [
              "darwin",
              "macos",
              "freebsd",
              "linux",
              "sunos",
              "win32",
              "windows"
            ]
          },
          "error": {
            "type": "string"
          },
          "ci": {
            "type": "boolean"
          },
          "match": {
            "type": "string",
            "description": "A regexp to search the output."
          }
        },
        "required": [
          "rule",
          "plugin",
          "name"
        ]
      }
    },
    "description": "A rule-set and config for the Solidarity JSON checker",
    "id": "https://json.schemastore.org/solidaritySchema.json",
    "properties": {
      "config": {
        "type": "object",
        "properties": {
          "output": {
            "description": "Identify what kind output should happen when a check is called",
            "type": "string",
            "enum": [
              "moderate",
              "verbose",
              "silent"
            ]
          }
        }
      },
      "requirements": {
        "description": "List of requirement rules for your particular environment",
        "type": "object",
        "additionalProperties": {
          "type": "array",
          "items": {
            "type": "object",
            "oneOf": [
              {
                "$ref": "#/definitions/cli"
              },
              {
                "$ref": "#/definitions/dir"
              },
              {
                "$ref": "#/definitions/file"
              },
              {
                "$ref": "#/definitions/env"
              },
              {
                "$ref": "#/definitions/shell"
              },
              {
                "$ref": "#/definitions/custom"
              }
            ]
          },
          "minItems": 1,
          "uniqueItems": true
        }
      }
    },
    "required": [
      "requirements"
    ],
    "title": "Solidarity",
    "type": "object"
  },
  "tests": [
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "config": {
          "output": "verbose"
        },
        "requirements": {
          "cli_rules": [
            {
              "rule": "cli",
              "binary": "node",
              "semver": "^14.17.0",
              "version": "14.17.0",
              "line": 1,
              "matchIndex": 0,
              "platform": "darwin",
              "error": "Node version is not compatible",
              "ci": true
            },
            {
              "rule": "cli",
              "binary": "npm",
              "semver": "^6.14.13",
              "version": "6.14.13",
              "line": 1,
              "matchIndex": 0,
              "platform": "darwin",
              "error": "NPM version is not compatible",
              "ci": true
            }
          ],
          "dir_rules": [
            {
              "rule": "dir",
              "location": "/usr/local/bin",
              "platform": "darwin",
              "error": "Directory not found",
              "ci": true
            }
          ],
          "file_rules": [
            {
              "rule": "file",
              "location": "/etc/hosts",
              "platform": "darwin",
              "error": "File not found",
              "ci": true
            }
          ],
          "env_rules": [
            {
              "rule": "env",
              "variable": "PATH",
              "platform": "darwin",
              "error": "Environment variable not found",
              "ci": true
            }
          ],
          "shell_rules": [
            {
              "rule": "shell",
              "match": "bash",
              "platform": "darwin",
              "error": "Shell not found",
              "ci": true
            }
          ],
          "custom_rules": [
            {
              "rule": "custom",
              "plugin": "my-plugin",
              "name": "my-rule",
              "platform": "darwin",
              "error": "Custom rule failed",
              "ci": true,
              "match": "my-regexp"
            }
          ]
        }
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "config": {
          "output": "verbose"
        },
        "requirements": {
          "rule1": [
            {
              "rule": "cli",
              "binary": "node",
              "semver": "^14.17.0",
              "version": "14.17.0",
              "line": 1,
              "matchIndex": 0,
              "platform": "darwin",
              "error": "Node version is not compatible",
              "ci": true
            }
          ],
          "rule2": [
            {
              "rule": "dir",
              "location": "/path/to/directory",
              "platform": "linux",
              "error": "Directory not found",
              "ci": false
            }
          ],
          "rule3": [
            {
              "rule": "file",
              "location": "/path/to/file.txt",
              "platform": "windows",
              "error": "File not found",
              "ci": true
            }
          ],
          "rule4": [
            {
              "rule": "env",
              "variable": "NODE_ENV",
              "platform": "darwin",
              "error": "Environment variable not set",
              "ci": false
            }
          ],
          "rule5": [
            {
              "rule": "shell",
              "match": ".*success.*",
              "platform": "linux",
              "error": "Shell command failed",
              "ci": true
            }
          ],
          "rule6": [
            {
              "rule": "custom",
              "plugin": "my-plugin",
              "name": "my-rule",
              "platform": "windows",
              "error": "Custom rule failed",
              "ci": false,
              "match": ".*success.*"
            }
          ]
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on type keyword with an array of types",
      "valid": false,
      "rust_error": "{\"rule\":\"cli\",\"binary\":\"node\",\"semver\":\"^14.17.0\",\"version\":\"14.17.0\",\"line\":null,\"matchIndex\":0,\"platform\":\"darwin\",\"error\":\"Node version is not compatible\",\"ci\":true} is not valid under any of the schemas listed in the 'oneOf' keyword",
      "python_error": "None is not of type 'string', 'integer'\n\nFailed validating 'type' in schema[0]['properties']['line']:\n    {'type': ['string', 'integer']}\n\nOn instance['line']:\n    None",
      "data": {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "config": {
          "output": "verbose"
        },
        "requirements": {
          "rule1": [
            {
              "rule": "cli",
              "binary": "node",
              "semver": "^14.17.0",
              "version": "14.17.0",
              "line": null,
              "matchIndex": 0,
              "platform": "darwin",
              "error": "Node version is not compatible",
              "ci": true
            }
          ]
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on uniqueItems keyword",
      "valid": false,
      "rust_error": "[{\"rule\":\"cli\",\"binary\":\"node\",\"semver\":\"^14.17.0\",\"version\":\"14.17.0\",\"line\":1,\"matchIndex\":0,\"platform\":\"darwin\",\"error\":\"Node version is not compatible\",\"ci\":true},{\"rule\":\"cli\",\"binary\":\"node\",\"semver\":\"^14.17.0\",\"version\":\"14.17.0\",\"line\":1,\"matchIndex\":0,\"platform\":\"darwin\",\"error\":\"Node version is not compatible\",\"ci\":true}] has non-unique elements",
      "python_error": "[{'rule': 'cli', 'binary': 'node', 'semver': '^14.17.0', 'version': '14.17.0', 'line': 1, 'matchIndex': 0, 'platform': 'darwin', 'error': 'Node version is not compatible', 'ci': True}, {'rule': 'cli', 'binary': 'node', 'semver': '^14.17.0', 'version': '14.17.0', 'line': 1, 'matchIndex': 0, 'platform': 'darwin', 'error': 'Node version is not compatible', 'ci': True}] has non-unique elements\n\nFailed validating 'uniqueItems' in schema['properties']['requirements']['additionalProperties']:\n    {'type': 'array',\n     'items': {'type': 'object',\n               'oneOf': [{'$ref': '#/definitions/cli'},\n                         {'$ref': '#/definitions/dir'},\n                         {'$ref': '#/definitions/file'},\n                         {'$ref': '#/definitions/env'},\n                         {'$ref': '#/definitions/shell'},\n                         {'$ref': '#/definitions/custom'}]},\n     'minItems': 1,\n     'uniqueItems': True}\n\nOn instance['requirements']['rule1']:\n    [{'rule': 'cli',\n      'binary': 'node',\n    .. (424 more)",
      "data": {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "config": {
          "output": "verbose"
        },
        "requirements": {
          "rule1": [
            {
              "rule": "cli",
              "binary": "node",
              "semver": "^14.17.0",
              "version": "14.17.0",
              "line": 1,
              "matchIndex": 0,
              "platform": "darwin",
              "error": "Node version is not compatible",
              "ci": true
            },
            {
              "rule": "cli",
              "binary": "node",
              "semver": "^14.17.0",
              "version": "14.17.0",
              "line": 1,
              "matchIndex": 0,
              "platform": "darwin",
              "error": "Node version is not compatible",
              "ci": true
            }
          ],
          "rule2": [
            {
              "rule": "dir",
              "location": "/path/to/directory",
              "platform": "linux",
              "error": "Directory not found",
              "ci": false
            }
          ],
          "rule3": [
            {
              "rule": "file",
              "location": "/path/to/file.txt",
              "platform": "windows",
              "error": "File not found",
              "ci": true
            }
          ],
          "rule4": [
            {
              "rule": "env",
              "variable": "NODE_ENV",
              "platform": "darwin",
              "error": "Environment variable not set",
              "ci": false
            }
          ],
          "rule5": [
            {
              "rule": "shell",
              "match": ".*success.*",
              "platform": "linux",
              "error": "Shell command failed",
              "ci": true
            }
          ],
          "rule6": [
            {
              "rule": "custom",
              "plugin": "my-plugin",
              "name": "my-rule",
              "platform": "windows",
              "error": "Custom rule failed",
              "ci": false,
              "match": ".*success.*"
            }
          ]
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on minItems keyword",
      "valid": false,
      "rust_error": "[] has less than 1 item",
      "python_error": "[] should be non-empty\n\nFailed validating 'minItems' in schema['properties']['requirements']['additionalProperties']:\n    {'type': 'array',\n     'items': {'type': 'object',\n               'oneOf': [{'$ref': '#/definitions/cli'},\n                         {'$ref': '#/definitions/dir'},\n                         {'$ref': '#/definitions/file'},\n                         {'$ref': '#/definitions/env'},\n                         {'$ref': '#/definitions/shell'},\n                         {'$ref': '#/definitions/custom'}]},\n     'minItems': 1,\n     'uniqueItems': True}\n\nOn instance['requirements']['rule1']:\n    []",
      "data": {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "config": {
          "output": "verbose"
        },
        "requirements": {
          "rule1": []
        }
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "[{\"rule\":\"cli\",\"binary\":\"node\",\"semver\":\"^14.17.0\",\"version\":\"14.17.0\",\"line\":1,\"matchIndex\":0,\"platform\":\"darwin\",\"error\":\"Node version is not compatible\",\"ci\":true},{\"rule\":\"cli\",\"binary\":\"node\",\"semver\":\"^14.17.0\",\"version\":\"14.17.0\",\"line\":1,\"matchIndex\":0,\"platform\":\"darwin\",\"error\":\"Node version is not compatible\",\"ci\":true}] has non-unique elements",
      "python_error": "[{'rule': 'cli', 'binary': 'node', 'semver': '^14.17.0', 'version': '14.17.0', 'line': 1, 'matchIndex': 0, 'platform': 'darwin', 'error': 'Node version is not compatible', 'ci': True}, {'rule': 'cli', 'binary': 'node', 'semver': '^14.17.0', 'version': '14.17.0', 'line': 1, 'matchIndex': 0, 'platform': 'darwin', 'error': 'Node version is not compatible', 'ci': True}] has non-unique elements\n\nFailed validating 'uniqueItems' in schema['properties']['requirements']['additionalProperties']:\n    {'type': 'array',\n     'items': {'type': 'object',\n               'oneOf': [{'$ref': '#/definitions/cli'},\n                         {'$ref': '#/definitions/dir'},\n                         {'$ref': '#/definitions/file'},\n                         {'$ref': '#/definitions/env'},\n                         {'$ref': '#/definitions/shell'},\n                         {'$ref': '#/definitions/custom'}]},\n     'minItems': 1,\n     'uniqueItems': True}\n\nOn instance['requirements']['rule1']:\n    [{'rule': 'cli',\n      'binary': 'node',\n    .. (424 more)",
      "data": {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "config": {
          "output": "verbose"
        },
        "requirements": {
          "rule1": [
            {
              "rule": "cli",
              "binary": "node",
              "semver": "^14.17.0",
              "version": "14.17.0",
              "line": 1,
              "matchIndex": 0,
              "platform": "darwin",
              "error": "Node version is not compatible",
              "ci": true
            },
            {
              "rule": "cli",
              "binary": "node",
              "semver": "^14.17.0",
              "version": "14.17.0",
              "line": 1,
              "matchIndex": 0,
              "platform": "darwin",
              "error": "Node version is not compatible",
              "ci": true
            }
          ],
          "rule2": [
            {
              "rule": "dir",
              "location": "/path/to/directory",
              "platform": "linux",
              "error": "Directory not found",
              "ci": false
            }
          ],
          "rule3": [
            {
              "rule": "file",
              "location": "/path/to/file.txt",
              "platform": "windows",
              "error": "File not found",
              "ci": true
            }
          ],
          "rule4": [
            {
              "rule": "env",
              "variable": "NODE_ENV",
              "platform": "darwin",
              "error": "Environment variable not set",
              "ci": false
            }
          ],
          "rule5": [
            null
          ],
          "rule6": [
            {
              "rule": "custom",
              "plugin": "my-plugin",
              "name": "my-rule",
              "platform": "windows",
              "error": "Custom rule failed",
              "ci": false
            }
          ]
        }
      }
    }
  ]
}