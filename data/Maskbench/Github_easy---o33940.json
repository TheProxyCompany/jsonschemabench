{
  "description": "sample Github_easy/o33940.json",
  "meta": {
    "full_size": 969,
    "stripped_size": 177,
    "features": [
      "format",
      "format:uri"
    ],
    "raw_features": [
      "$schema",
      "properties",
      "type",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "title": "RecipientProfile schema",
    "description": "A Blockcerts extension allowing inclusion of additional recipient details, including recipient publicKey and name. Inclusion of the recipient publicKey allows the recipient to make a strong claim of ownership over the key, and hence the badge being awarded. In the future, publicKey will be deprecated in favor of a decentralized id (DID) in the `id` field.",
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "reserved for future use as DID"
      },
      "name": {
        "type": "string",
        "description": "Name of recipient, http://schema.org/name"
      },
      "publicKey": {
        "type": "string",
        "format": "uri",
        "description": "In Blockcerts `publicKey` IRIs are typically represented with a `<scheme>:` prefix. For Bitcoin transactions, this would be the recipient public Bitcoin address prefixed with `ecdsa-koblitz-pubkey:`; e.g. `ecdsa-koblitz-pubkey:14RZvYazz9H2DC2skBfpPVxax54g4yabxe`"
      }
    }
  },
  "tests": [
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "id": "did:example:1234567890",
        "name": "John Doe",
        "publicKey": "ecdsa-koblitz-pubkey:14RZvYazz9H2DC2skBfpPVxax54g4yabxe"
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "id": "",
        "name": "John Doe",
        "publicKey": "ecdsa-koblitz-pubkey:14RZvYazz9H2DC2skBfpPVxax54g4yabxe"
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "null is not of type \"string\"",
      "python_error": "None is not of type 'string'\n\nFailed validating 'type' in schema['properties']['id']:\n    {'type': 'string', 'description': 'reserved for future use as DID'}\n\nOn instance['id']:\n    None",
      "data": {
        "id": null,
        "name": "John Doe",
        "publicKey": "ecdsa-koblitz-pubkey:14RZvYazz9H2DC2skBfpPVxax54g4yabxe"
      }
    }
  ]
}