{
  "description": "sample Github_medium/o42456.json",
  "meta": {
    "full_size": 646,
    "stripped_size": 502,
    "features": [
      "@minmaxItems",
      "items"
    ],
    "raw_features": [
      "$schema",
      "minItems",
      "properties",
      "required",
      "type",
      "type:array",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "title": "Dataset definition",
    "description": "Definition of cDAL dataset",
    "type": "object",
    "properties": {
      "datasetName": {
        "description": "Name of dataset",
        "type": "string"
      },
      "models": {
        "type": "array",
        "minItems": 1,
        "_uniqueItems": true,
        "items": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "typeName": {
              "type": "string"
            },
            "tableName": {
              "type": "string"
            },
            "fields": {
              "type": "array",
              "minItems": 1,
              "_uniqueItems": true,
              "items": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "type"
                ]
              }
            }
          },
          "required": [
            "name",
            "fields"
          ]
        }
      }
    },
    "required": [
      "datasetName",
      "models"
    ]
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "datasetName": "Example Dataset",
        "models": [
          {
            "name": "Model 1",
            "typeName": "Example Type",
            "tableName": "example_table",
            "fields": [
              {
                "name": "id",
                "type": "integer"
              },
              {
                "name": "name",
                "type": "string"
              },
              {
                "name": "description",
                "type": "text"
              }
            ]
          },
          {
            "name": "Model 2",
            "typeName": "Another Type",
            "tableName": "another_table",
            "fields": [
              {
                "name": "id",
                "type": "integer"
              },
              {
                "name": "value",
                "type": "float"
              }
            ]
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on minItems keyword",
      "valid": false,
      "rust_error": "[] has less than 1 item",
      "python_error": "[] should be non-empty\n\nFailed validating 'minItems' in schema['properties']['models']:\n    {'type': 'array',\n     'minItems': 1,\n     '_uniqueItems': True,\n     'items': {'type': 'object',\n               'properties': {'name': {'type': 'string'},\n                              'typeName': {'type': 'string'},\n                              'tableName': {'type': 'string'},\n                              'fields': {'type': 'array',\n                                         'minItems': 1,\n                                         '_uniqueItems': True,\n                                         'items': {'type': 'object',\n                                                   'properties': {'name': {'type': 'string'},\n                                                                  'type': {'type': 'string'}},\n                                                   'required': ['name',\n                                                                'type']}}},\n               'required': ['name', 'fields']}}\n\nOn instance['models']:\n    []",
      "data": {
        "datasetName": "Example Dataset",
        "models": []
      }
    },
    {
      "description": "llama-70b generated negative; focus on minItems keyword",
      "valid": false,
      "rust_error": "[] has less than 1 item",
      "python_error": "[] should be non-empty\n\nFailed validating 'minItems' in schema['properties']['models']['items']['properties']['fields']:\n    {'type': 'array',\n     'minItems': 1,\n     '_uniqueItems': True,\n     'items': {'type': 'object',\n               'properties': {'name': {'type': 'string'},\n                              'type': {'type': 'string'}},\n               'required': ['name', 'type']}}\n\nOn instance['models'][1]['fields']:\n    []",
      "data": {
        "datasetName": "Example Dataset",
        "models": [
          {
            "name": "Model 1",
            "typeName": "Example Type",
            "tableName": "example_table",
            "fields": [
              {
                "name": "id",
                "type": "integer"
              },
              {
                "name": "name",
                "type": "string"
              },
              {
                "name": "description",
                "type": "text"
              }
            ]
          },
          {
            "name": "Model 2",
            "typeName": "Another Type",
            "tableName": "another_table",
            "fields": []
          }
        ]
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "datasetName": "Example Dataset",
        "models": [
          {
            "name": "Model 1",
            "typeName": "Example Type",
            "tableName": "example_table",
            "fields": [
              {
                "name": "field1",
                "type": "integer"
              },
              {
                "name": "field2",
                "type": "string"
              }
            ]
          },
          {
            "name": "Model 2",
            "typeName": "Another Type",
            "tableName": "another_table",
            "fields": [
              {
                "name": "field3",
                "type": "boolean"
              },
              {
                "name": "field4",
                "type": "float"
              }
            ]
          }
        ]
      }
    }
  ]
}