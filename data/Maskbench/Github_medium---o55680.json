{
  "description": "sample Github_medium/o55680.json",
  "meta": {
    "full_size": 798,
    "stripped_size": 485,
    "features": [
      "@minmaxLength",
      "additionalProperties",
      "enum",
      "format",
      "format:datetime"
    ],
    "raw_features": [
      "$schema",
      "_boolSchema",
      "id",
      "maxLength",
      "minLength",
      "properties",
      "required",
      "type",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "id": "https://koriym.github.io/Polidog.Todo/todo.json",
    "$schema": "http://json-schema.org/draft-04/schema#",
    "title": "Todo",
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "The unique identifier for a todo."
      },
      "title": {
        "type": "string",
        "description": "The title of the todo",
        "minLength": 1,
        "maxLength": 255
      },
      "status": {
        "type": "string",
        "description": "2 if task has been completed",
        "enum": [
          "1",
          "2"
        ]
      },
      "status_name": {
        "description": "The name of the status",
        "type": "string",
        "maxLength": 255
      },
      "created": {
        "description": "The date and time that the todo was created",
        "type": "string",
        "format": "datetime"
      },
      "updated": {
        "description": "The date and time that the todo was last modified",
        "type": "string",
        "format": "datetime"
      }
    },
    "required": [
      "title",
      "status",
      "created",
      "updated"
    ],
    "additionalProperties": false
  },
  "tests": [
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "id": "todo-123",
        "title": "Buy groceries",
        "status": "1",
        "status_name": "Not completed",
        "created": "2022-01-01T12:00:00Z",
        "updated": "2022-01-01T12:00:00Z"
      }
    },
    {
      "description": "llama-70b generated negative; focus on minLength keyword or maxLength keyword",
      "valid": false,
      "rust_error": "\"\" is shorter than 1 character",
      "python_error": "'' should be non-empty\n\nFailed validating 'minLength' in schema['properties']['title']:\n    {'type': 'string',\n     'description': 'The title of the todo',\n     'minLength': 1,\n     'maxLength': 255}\n\nOn instance['title']:\n    ''",
      "data": {
        "id": "todo-123",
        "title": "",
        "status": "1",
        "status_name": "Not completed",
        "created": "2022-01-01T12:00:00Z",
        "updated": "2022-01-01T12:00:00Z"
      }
    }
  ]
}