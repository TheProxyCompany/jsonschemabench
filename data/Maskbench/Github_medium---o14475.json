{
  "description": "sample Github_medium/o14475.json",
  "meta": {
    "full_size": 1289,
    "stripped_size": 513,
    "features": [],
    "raw_features": [
      "$schema",
      "properties",
      "required",
      "type",
      "type:array",
      "type:boolean",
      "type:integer",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "title": "Event source template",
    "type": "object",
    "description": "Event source templates.",
    "properties": {
      "id": {
        "description": "Unique identifier given by the server",
        "type": "integer"
      },
      "key": {
        "description": "Unique key generated by the server to be used in events.",
        "type": "string"
      },
      "name": {
        "description": "A name to identify the event source template",
        "type": "string"
      },
      "public": {
        "description": "Make the event source template available to everybody.",
        "type": "boolean"
      },
      "organizationId": {
        "description": "The organization that offer the event source template.",
        "type": "integer"
      },
      "configuration": {
        "description": "Providing a schema aims to help the WUI for configuration.",
        "type": "object",
        "properties": {
          "schema": {
            "description": "A valid JSON Schema.",
            "type": "object"
          },
          "url": {
            "description": "The configuration URL.",
            "type": "string"
          },
          "token": {
            "description": "JSON Web Token to be authenticated when contacting the configuration URL.",
            "type": "string"
          }
        },
        "required": [
          "schema",
          "url"
        ]
      },
      "configurationUi": {
        "description": "Provide the configuration for the dynamic UI.",
        "type": "object",
        "properties": {
          "schemaForm": {
            "description": "Valid form schema accordingly to: http://schemaform.io",
            "type": "array"
          }
        }
      }
    },
    "required": [
      "id",
      "key",
      "name",
      "public",
      "organizationId"
    ]
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "id": 1,
        "key": "event-source-template-key",
        "name": "Example Event Source Template",
        "public": true,
        "organizationId": 123,
        "configuration": {
          "schema": {
            "type": "object",
            "properties": {
              "eventSource": {
                "type": "string"
              },
              "eventTarget": {
                "type": "string"
              }
            },
            "required": [
              "eventSource",
              "eventTarget"
            ]
          },
          "url": "https://example.com/configuration",
          "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9"
        },
        "configurationUi": {
          "schemaForm": [
            {
              "key": "eventSource",
              "type": "text",
              "title": "Event Source"
            },
            {
              "key": "eventTarget",
              "type": "text",
              "title": "Event Target"
            }
          ]
        }
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"1\" is not of type \"integer\"",
      "python_error": "'1' is not of type 'integer'\n\nFailed validating 'type' in schema['properties']['id']:\n    {'description': 'Unique identifier given by the server',\n     'type': 'integer'}\n\nOn instance['id']:\n    '1'",
      "data": {
        "id": "1",
        "key": "event-source-template-key",
        "name": "Example Event Source Template",
        "public": true,
        "organizationId": 123,
        "configuration": {
          "schema": {
            "type": "object",
            "properties": {
              "eventSource": {
                "type": "string"
              },
              "eventTarget": {
                "type": "string"
              }
            },
            "required": [
              "eventSource",
              "eventTarget"
            ]
          },
          "url": "https://example.com/configuration",
          "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9"
        },
        "configurationUi": {
          "schemaForm": [
            {
              "key": "eventSource",
              "type": "text",
              "title": "Event Source"
            },
            {
              "key": "eventTarget",
              "type": "text",
              "title": "Event Target"
            }
          ]
        }
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "123 is not of type \"string\"",
      "python_error": "123 is not of type 'string'\n\nFailed validating 'type' in schema['properties']['configuration']['properties']['url']:\n    {'description': 'The configuration URL.', 'type': 'string'}\n\nOn instance['configuration']['url']:\n    123",
      "data": {
        "id": 1,
        "key": "event-source-template-key",
        "name": "Example Event Source Template",
        "public": true,
        "organizationId": 123,
        "configuration": {
          "schema": {
            "type": "object",
            "properties": {
              "eventSource": {
                "type": "string"
              },
              "eventTarget": {
                "type": "string"
              }
            },
            "required": [
              "eventSource",
              "eventTarget"
            ]
          },
          "url": 123,
          "Invalid URL type, should be string": "token",
          "Invalid token type, should be string": "configurationUi",
          "Invalid configurationUi type, should be object": "schemaForm",
          "Invalid schemaForm type, should be array": [
            {
              "key": "eventSource",
              "type": "text",
              "title": "Event Source"
            },
            {
              "key": "eventTarget",
              "type": "text",
              "title": "Event Target"
            }
          ]
        }
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "id": 1,
        "key": "event-source-template-key",
        "name": "Example Event Source Template",
        "public": true,
        "organizationId": 123,
        "configuration": {
          "schema": {
            "type": "object",
            "properties": {
              "eventSource": {
                "type": "string"
              },
              "eventCategory": {
                "type": "string"
              }
            },
            "required": [
              "eventSource",
              "eventCategory"
            ]
          },
          "url": "https://example.com/configuration",
          "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaGFuIjoiMjMwfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
        },
        "configurationUi": {
          "schemaForm": [
            {
              "key": "eventSource",
              "type": "textfield",
              "title": "Event Source"
            },
            {
              "key": "eventCategory",
              "type": "select",
              "title": "Event Category",
              "items": [
                {
                  "value": "category1",
                  "label": "Category 1"
                },
                {
                  "value": "category2",
                  "label": "Category 2"
                }
              ]
            }
          ]
        }
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "12345 is not of type \"string\"",
      "python_error": "12345 is not of type 'string'\n\nFailed validating 'type' in schema['properties']['configuration']['properties']['url']:\n    {'description': 'The configuration URL.', 'type': 'string'}\n\nOn instance['configuration']['url']:\n    12345",
      "data": {
        "id": 1,
        "key": "event-source-template-key",
        "name": "Example Event Source Template",
        "public": true,
        "organizationId": 123,
        "configuration": {
          "schema": {
            "type": "object",
            "properties": {
              "eventSource": {
                "type": "string"
              },
              "eventCategory": {
                "type": "string"
              }
            },
            "required": [
              "eventSource",
              "eventCategory"
            ]
          },
          "url": 12345,
          "<--- modified from string to integer": "token"
        },
        "configurationUi": {
          "schemaForm": [
            {
              "key": "eventSource",
              "type": "textfield",
              "title": "Event Source"
            },
            {
              "key": "eventCategory",
              "type": "select",
              "title": "Event Category",
              "items": [
                {
                  "value": "category1",
                  "label": "Category 1"
                },
                {
                  "value": "category2",
                  "label": "Category 2"
                }
              ]
            }
          ]
        }
      }
    }
  ]
}