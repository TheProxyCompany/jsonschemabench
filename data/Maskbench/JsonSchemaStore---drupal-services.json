{
  "description": "sample JsonSchemaStore/drupal-services.json",
  "meta": {
    "full_size": 2038,
    "stripped_size": 1199,
    "features": [
      "additionalProperties",
      "additionalProperties:object",
      "items",
      "oneOf",
      "uniqueItems"
    ],
    "raw_features": [
      "$id",
      "$schema",
      "_boolSchema",
      "properties",
      "type",
      "type:array",
      "type:boolean",
      "type:integer",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$id": "https://json.schemastore.org/drupal-services.json",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "additionalProperties": false,
    "properties": {
      "parameters": {
        "title": "Service parameters",
        "type": "object"
      },
      "services": {
        "type": "object",
        "additionalProperties": {
          "type": "object",
          "properties": {
            "class": {
              "title": "Service class",
              "type": "string"
            },
            "parent": {
              "title": "Parent service to extend",
              "type": "string"
            },
            "factory": {
              "title": "A factory to create the object",
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "array"
                }
              ]
            },
            "decorates": {
              "title": "Service name to decorate",
              "type": "string"
            },
            "deprecated": {
              "title": "A flag indicating that the service is deprecated",
              "type": "string"
            },
            "lazy": {
              "title": "Lazy service instantiation",
              "type": "boolean"
            },
            "shared": {
              "title": "Shared service",
              "type": "boolean"
            },
            "abstract": {
              "title": "Abstract service",
              "type": "boolean"
            },
            "public": {
              "title": "A flag indication that the service cannot be accessed directly from the container object",
              "type": "boolean"
            },
            "alias": {
              "title": "A shortcut to access some services",
              "type": "string"
            },
            "arguments": {
              "title": "Service arguments",
              "type": "array",
              "uniqueItems": true
            },
            "configurator": {
              "title": "A callable to configure a service after its instantiation",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "tags": {
              "title": "List of tags tell Drupal that your service can be processed in some special way",
              "examples": [
                "event_subscriber",
                "service_collector",
                "theme_negotiator",
                "twig.extension",
                "access_check"
              ],
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "call": {
                    "type": "string"
                  },
                  "alias": {
                    "type": "string"
                  },
                  "required": {
                    "type": "boolean"
                  },
                  "tag": {
                    "type": "string"
                  },
                  "priority": {
                    "type": "integer"
                  },
                  "default_backend": {
                    "type": "string"
                  },
                  "responder": {
                    "type": "boolean"
                  },
                  "format": {
                    "type": "string"
                  },
                  "applies_to": {
                    "type": "string"
                  },
                  "provider_id": {
                    "type": "string"
                  },
                  "needs_incoming_request": {
                    "type": "boolean"
                  },
                  "scheme": {
                    "type": "string"
                  }
                }
              }
            },
            "calls": {
              "title": "Methods to set optional dependencies",
              "type": "array",
              "uniqueItems": true
            }
          }
        }
      }
    },
    "title": "JSON schema for Drupal services file",
    "type": "object"
  },
  "tests": [
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "parameters": {
          "some_parameter": "some_value"
        },
        "services": {
          "my_service": {
            "class": "\\Drupal\\my_module\\MyService",
            "arguments": [
              "@some_service",
              "%some_parameter%"
            ],
            "calls": [
              [
                "setLogger",
                [
                  "@logger"
                ]
              ]
            ],
            "tags": [
              {
                "name": "event_subscriber"
              }
            ]
          },
          "my_other_service": {
            "class": "\\Drupal\\my_module\\MyOtherService",
            "parent": "my_service",
            "lazy": true,
            "shared": false,
            "public": false,
            "alias": "my_alias",
            "configurator": [
              "\\Drupal\\my_module\\MyConfigurator"
            ]
          }
        }
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "parameters": {
          "some_parameter": "some_value"
        },
        "services": {
          "my_service": {
            "class": "Drupal\\MyModule\\MyService",
            "arguments": [
              "@some_service",
              "%some_parameter%"
            ],
            "calls": [
              [
                "setLogger",
                [
                  "@logger"
                ]
              ]
            ],
            "tags": [
              {
                "name": "event_subscriber"
              }
            ]
          },
          "my_service_factory": {
            "class": "Drupal\\MyModule\\MyServiceFactory",
            "factory": [
              "@my_service_factory",
              "create"
            ],
            "arguments": [
              "@some_service",
              "%some_parameter%"
            ]
          },
          "my_service_lazy": {
            "class": "Drupal\\MyModule\\MyService",
            "lazy": true,
            "arguments": [
              "@some_service",
              "%some_parameter%"
            ]
          },
          "my_service_shared": {
            "class": "Drupal\\MyModule\\MyService",
            "shared": false,
            "arguments": [
              "@some_service",
              "%some_parameter%"
            ]
          },
          "my_service_abstract": {
            "class": "Drupal\\MyModule\\MyService",
            "abstract": true,
            "arguments": [
              "@some_service",
              "%some_parameter%"
            ]
          },
          "my_service_public": {
            "class": "Drupal\\MyModule\\MyService",
            "public": false,
            "arguments": [
              "@some_service",
              "%some_parameter%"
            ]
          },
          "my_service_alias": {
            "class": "Drupal\\MyModule\\MyService",
            "alias": "my_service_alias",
            "arguments": [
              "@some_service",
              "%some_parameter%"
            ]
          },
          "my_service_configurator": {
            "class": "Drupal\\MyModule\\MyService",
            "configurator": [
              "@my_service_configurator",
              "configure"
            ],
            "arguments": [
              "@some_service",
              "%some_parameter%"
            ]
          },
          "my_service_tags": {
            "class": "Drupal\\MyModule\\MyService",
            "tags": [
              {
                "name": "event_subscriber",
                "call": "onEvent",
                "alias": "my_service_alias",
                "required": true,
                "tag": "my_service_tag",
                "priority": 10,
                "default_backend": "my_service_default_backend",
                "responder": true,
                "format": "my_service_format",
                "applies_to": "my_service_applies_to",
                "provider_id": "my_service_provider_id",
                "needs_incoming_request": true,
                "scheme": "my_service_scheme"
              }
            ],
            "arguments": [
              "@some_service",
              "%some_parameter%"
            ]
          },
          "my_service_calls": {
            "class": "Drupal\\MyModule\\MyService",
            "calls": [
              [
                "setLogger",
                [
                  "@logger"
                ]
              ],
              [
                "setDatabase",
                [
                  "@database"
                ]
              ]
            ],
            "arguments": [
              "@some_service",
              "%some_parameter%"
            ]
          }
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on oneOf keyword",
      "valid": false,
      "rust_error": "{\"key\":\"value\"} is not valid under any of the schemas listed in the 'oneOf' keyword",
      "python_error": "{'key': 'value'} is not valid under any of the given schemas\n\nFailed validating 'oneOf' in schema['properties']['services']['additionalProperties']['properties']['factory']:\n    {'title': 'A factory to create the object',\n     'oneOf': [{'type': 'string'}, {'type': 'array'}]}\n\nOn instance['services']['my_service']['factory']:\n    {'key': 'value'}",
      "data": {
        "parameters": {
          "some_parameter": "some_value"
        },
        "services": {
          "my_service": {
            "class": "Drupal\\MyModule\\MyService",
            "arguments": [
              "@some_service",
              "%some_parameter%"
            ],
            "calls": [
              [
                "setLogger",
                [
                  "@logger"
                ]
              ]
            ],
            "tags": [
              {
                "name": "event_subscriber"
              }
            ],
            "factory": {
              "key": "value"
            }
          }
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on uniqueItems keyword",
      "valid": false,
      "rust_error": "[\"@some_service\",\"%some_parameter%\",\"%some_parameter%\"] has non-unique elements",
      "python_error": "['@some_service', '%some_parameter%', '%some_parameter%'] has non-unique elements\n\nFailed validating 'uniqueItems' in schema['properties']['services']['additionalProperties']['properties']['arguments']:\n    {'title': 'Service arguments', 'type': 'array', 'uniqueItems': True}\n\nOn instance['services']['my_service']['arguments']:\n    ['@some_service', '%some_parameter%', '%some_parameter%']",
      "data": {
        "parameters": {
          "some_parameter": "some_value"
        },
        "services": {
          "my_service": {
            "class": "Drupal\\MyModule\\MyService",
            "arguments": [
              "@some_service",
              "%some_parameter%",
              "%some_parameter%"
            ],
            "calls": [
              [
                "setLogger",
                [
                  "@logger"
                ]
              ]
            ],
            "tags": [
              {
                "name": "event_subscriber"
              }
            ]
          }
        }
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "123 is not of type \"string\"",
      "python_error": "'not a boolean' is not of type 'boolean'\n\nFailed validating 'type' in schema['properties']['services']['additionalProperties']['properties']['shared']:\n    {'title': 'Shared service', 'type': 'boolean'}\n\nOn instance['services']['my_service_shared']['shared']:\n    'not a boolean'",
      "data": {
        "parameters": {
          "some_parameter": 123
        },
        "services": {
          "my_service": {
            "class": 123,
            "arguments": [
              "@some_service",
              "%some_parameter%"
            ],
            "calls": [
              [
                "setLogger",
                [
                  "@logger"
                ]
              ]
            ],
            "tags": [
              {
                "name": 123
              }
            ]
          },
          "my_service_factory": {
            "class": "Drupal\\MyModule\\MyServiceFactory",
            "factory": "not a string or array",
            "arguments": [
              "@some_service",
              "%some_parameter%"
            ]
          },
          "my_service_lazy": {
            "class": "Drupal\\MyModule\\MyService",
            "lazy": "not a boolean",
            "arguments": [
              "@some_service",
              "%some_parameter%"
            ]
          },
          "my_service_shared": {
            "class": "Drupal\\MyModule\\MyService",
            "shared": "not a boolean",
            "arguments": [
              "@some_service",
              "%some_parameter%"
            ]
          },
          "my_service_abstract": {
            "class": "Drupal\\MyModule\\MyService",
            "abstract": "not a boolean",
            "arguments": [
              "@some_service",
              "%some_parameter%"
            ]
          },
          "my_service_public": {
            "class": "Drupal\\MyModule\\MyService",
            "public": "not a boolean",
            "arguments": [
              "@some_service",
              "%some_parameter%"
            ]
          },
          "my_service_alias": {
            "class": "Drupal\\MyModule\\MyService",
            "alias": 123,
            "arguments": [
              "@some_service",
              "%some_parameter%"
            ]
          },
          "my_service_configurator": {
            "class": "Drupal\\MyModule\\MyService",
            "configurator": "not an array of strings",
            "arguments": [
              "@some_service",
              "%some_parameter%"
            ]
          },
          "my_service_tags": {
            "class": "Drupal\\MyModule\\MyService",
            "tags": [
              {
                "name": "event_subscriber",
                "call": 123,
                "alias": 123,
                "required": "not a boolean",
                "tag": 123,
                "priority": "not an integer",
                "default_backend": 123,
                "responder": "not a boolean",
                "format": 123,
                "applies_to": 123,
                "provider_id": 123,
                "needs_incoming_request": "not a boolean",
                "scheme": 123
              }
            ],
            "arguments": [
              "@some_service",
              "%some_parameter%"
            ]
          },
          "my_service_calls": {
            "class": "Drupal\\MyModule\\MyService",
            "calls": [
              [
                "setLogger",
                [
                  "@logger"
                ]
              ],
              [
                "setDatabase",
                [
                  "@database"
                ]
              ],
              [
                "setDatabase",
                [
                  "@database"
                ]
              ]
            ],
            "arguments": [
              "@some_service",
              "%some_parameter%"
            ]
          }
        }
      }
    }
  ]
}