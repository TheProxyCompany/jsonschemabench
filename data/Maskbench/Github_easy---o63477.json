{
  "description": "sample Github_easy/o63477.json",
  "meta": {
    "full_size": 219,
    "stripped_size": 219,
    "features": [
      "$ref",
      "additionalItems",
      "items"
    ],
    "raw_features": [
      "_boolSchema",
      "definitions",
      "properties",
      "type",
      "type:array",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "definitions": {
      "stringArray": {
        "additionalItems": false,
        "items": {
          "type": "string"
        },
        "type": "array"
      }
    },
    "properties": {
      "ramlTitle": {
        "type": "string"
      },
      "validationViolations": {
        "$ref": "#/definitions/stringArray"
      }
    },
    "type": "object"
  },
  "tests": [
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "ramlTitle": "Example Title",
        "validationViolations": [
          "Error 1",
          "Error 2",
          "Error 3"
        ]
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "ramlTitle": "Example RAML Title",
        "validationViolations": [
          "Error 1: Invalid syntax",
          "Error 2: Missing required field",
          "Error 3: Invalid data type"
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on additionalItems keyword",
      "valid": false,
      "rust_error": "4 is not of type \"string\"",
      "python_error": "4 is not of type 'string'\n\nFailed validating 'type' in schema['properties']['validationViolations']['items']:\n    {'type': 'string'}\n\nOn instance['validationViolations'][3]:\n    4",
      "data": {
        "ramlTitle": "Example RAML Title",
        "validationViolations": [
          "Error 1: Invalid syntax",
          "Error 2: Missing required field",
          "Error 3: Invalid data type",
          4
        ]
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "42 is not of type \"string\"",
      "python_error": "42 is not of type 'string'\n\nFailed validating 'type' in schema['properties']['validationViolations']['items']:\n    {'type': 'string'}\n\nOn instance['validationViolations'][1]:\n    42",
      "data": {
        "ramlTitle": "Example RAML Title",
        "validationViolations": [
          "Error 1: Invalid syntax",
          42,
          "Error 3: Invalid data type"
        ]
      }
    }
  ]
}