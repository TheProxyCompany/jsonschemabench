{
  "description": "sample Github_easy/o65361.json",
  "meta": {
    "full_size": 885,
    "stripped_size": 474,
    "features": [
      "$ref",
      "@siblingKeys"
    ],
    "raw_features": [
      "$schema",
      "allOf:trivial",
      "definitions",
      "id",
      "properties",
      "required",
      "type",
      "type:number",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "id": "http://schemas.opentranslatorstothings.org/opent2t.error#",
    "$schema": "http://json-schema.org/draft-04/schema#",
    "description": "",
    "title": "OpenT2T Error",
    "definitions": {
      "opent2t.error": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "ReadOnly, Gets the name for the error"
          },
          "statusCode": {
            "type": "number",
            "description": "ReadOnly, Gets the status code for the error."
          },
          "message": {
            "type": "string",
            "description": "ReadOnly, Gets the message for the error"
          },
          "innerErrorMessage": {
            "type": "string",
            "description": "ReadOnly, Gets the message for the inner error"
          },
          "innerErrorName": {
            "type": "string",
            "description": "ReadOnly, Gets the name for the inner error"
          },
          "innerErrorStack": {
            "type": "string",
            "description": "ReadOnly, Gets the server call stack for the inner error."
          }
        }
      }
    },
    "type": "object",
    "allOf": [
      {
        "$ref": "#/definitions/opent2t.error"
      }
    ],
    "required": [
      "name",
      "statusCode"
    ]
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "name": "InternalServerError",
        "statusCode": 500,
        "message": "An unexpected error occurred while processing the request.",
        "innerErrorMessage": "Failed to connect to the database.",
        "innerErrorName": "DatabaseConnectionError",
        "innerErrorStack": "   at OpenT2T.ErrorHandling.ErrorHandler.HandleError(Exception exception) in C:\\Source\\OpenT2T\\ErrorHandling\\ErrorHandler.cs:line 23\r\n   at OpenT2T.Data.DatabaseConnector.Connect() in C:\\Source\\OpenT2T\\Data\\DatabaseConnector.cs:line 56"
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"500\" is not of type \"number\"",
      "python_error": "'500' is not of type 'number'\n\nFailed validating 'type' in schema['allOf'][0]['properties']['statusCode']:\n    {'type': 'number',\n     'description': 'ReadOnly, Gets the status code for the error.'}\n\nOn instance['statusCode']:\n    '500'",
      "data": {
        "name": "InternalServerError",
        "statusCode": "500",
        "message": "An unexpected error occurred while processing the request.",
        "innerErrorMessage": "Failed to connect to the database.",
        "innerErrorName": "DatabaseConnectionError",
        "innerErrorStack": "   at OpenT2T.ErrorHandling.ErrorHandler.HandleError(Exception exception) in C:\\Source\\OpenT2T\\ErrorHandling\\ErrorHandler.cs:line 23\r\n   at OpenT2T.Data.DatabaseConnector.Connect() in C:\\Source\\OpenT2T\\Data\\DatabaseConnector.cs:line 56"
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "null is not of type \"string\"",
      "python_error": "None is not of type 'string'\n\nFailed validating 'type' in schema['allOf'][0]['properties']['name']:\n    {'type': 'string',\n     'description': 'ReadOnly, Gets the name for the error'}\n\nOn instance['name']:\n    None",
      "data": {
        "name": null,
        "statusCode": 500,
        "message": "An unexpected error occurred while processing the request.",
        "innerErrorMessage": "Failed to connect to the database.",
        "innerErrorName": "DatabaseConnectionError",
        "innerErrorStack": "   at OpenT2T.ErrorHandling.ErrorHandler.HandleError(Exception exception) in C:\\Source\\OpenT2T\\ErrorHandling\\ErrorHandler.cs:line 23\r\n   at OpenT2T.Data.DatabaseConnector.Connect() in C:\\Source\\OpenT2T\\Data\\DatabaseConnector.cs:line 56"
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "name": "InternalServerError",
        "statusCode": 500,
        "message": "An unexpected error occurred while processing the request.",
        "innerErrorMessage": "Failed to connect to the database.",
        "innerErrorName": "DatabaseConnectionError",
        "innerErrorStack": "   at OpenT2T.ErrorHandling.ErrorHandler.HandleError(Exception exception) in C:\\OpenT2T\\ErrorHandling\\ErrorHandler.cs:line 25\r\n   at OpenT2T.Data.DatabaseConnector.Connect() in C:\\OpenT2T\\Data\\DatabaseConnector.cs:line 15"
      }
    },
    {
      "description": "llama-70b generated negative; focus on allOf keyword",
      "valid": false,
      "rust_error": "\"statusCode\" is a required property",
      "python_error": "'statusCode' is a required property\n\nFailed validating 'required' in schema:\n    {'id': 'http://schemas.opentranslatorstothings.org/opent2t.error#',\n     '$schema': 'http://json-schema.org/draft-04/schema#',\n     'description': '',\n     'title': 'OpenT2T Error',\n     'definitions': {'opent2t.error': {'type': 'object',\n                                       'properties': {'name': {'type': 'string',\n                                                               'description': 'ReadOnly, '\n                                                                              'Gets '\n                                                                              'the '\n                                                                              'name '\n                                                                              'for '\n                                                                              'the '\n                                                                              'error'},\n                 .. (5159 more)",
      "data": {
        "name": "InternalServerError",
        "message": "An unexpected error occurred while processing the request.",
        "innerErrorMessage": "Failed to connect to the database.",
        "innerErrorName": "DatabaseConnectionError",
        "innerErrorStack": "   at OpenT2T.ErrorHandling.ErrorHandler.HandleError(Exception exception) in C:\\OpenT2T\\ErrorHandling\\ErrorHandler.cs:line 25\r\n   at OpenT2T.Data.DatabaseConnector.Connect() in C:\\OpenT2T\\Data\\DatabaseConnector.cs:line 15"
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "null is not of type \"number\"",
      "python_error": "None is not of type 'number'\n\nFailed validating 'type' in schema['allOf'][0]['properties']['statusCode']:\n    {'type': 'number',\n     'description': 'ReadOnly, Gets the status code for the error.'}\n\nOn instance['statusCode']:\n    None",
      "data": {
        "name": "InternalServerError",
        "statusCode": null,
        "message": "An unexpected error occurred while processing the request.",
        "innerErrorMessage": "Failed to connect to the database.",
        "innerErrorName": "DatabaseConnectionError",
        "innerErrorStack": "   at OpenT2T.ErrorHandling.ErrorHandler.HandleError(Exception exception) in C:\\OpenT2T\\ErrorHandling\\ErrorHandler.cs:line 25\r\n   at OpenT2T.Data.DatabaseConnector.Connect() in C:\\OpenT2T\\Data\\DatabaseConnector.cs:line 15"
      }
    }
  ]
}