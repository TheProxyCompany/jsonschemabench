{
  "description": "sample Github_hard/o53606.json",
  "meta": {
    "full_size": 2797,
    "stripped_size": 1244,
    "features": [
      "@minmaxLength",
      "enum"
    ],
    "raw_features": [
      "$schema",
      "minLength",
      "properties",
      "required",
      "type",
      "type:boolean",
      "type:number",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "properties": {
      "birthday": {
        "_format": "date-time",
        "description": "Birthday of the Household Member",
        "minLength": 1,
        "type": "string"
      },
      "createdAt": {
        "_format": "date-time",
        "description": "[Output only] Creation time of the household member",
        "minLength": 1,
        "type": "string"
      },
      "createdBy": {
        "description": "[Output only] Creator of the household member",
        "minLength": 1,
        "type": "string"
      },
      "email": {
        "_format": "email",
        "description": "E-mail address for the Household Member",
        "minLength": 1,
        "type": "string"
      },
      "firstName": {
        "description": "First name of Household Member",
        "minLength": 1,
        "type": "string"
      },
      "gender": {
        "description": "Gender of the Household Member",
        "enum": [
          "Male",
          "Female",
          "Other"
        ],
        "type": "string"
      },
      "householdId": {
        "description": "[Output only] Unique ID of Household",
        "minLength": 1,
        "type": "string"
      },
      "isActive": {
        "default": true,
        "description": "Flag to indicate if a household member is Active",
        "type": "boolean"
      },
      "isArchived": {
        "default": false,
        "description": "Flag to indicate if a household member is Archived",
        "type": "boolean"
      },
      "isDisabled": {
        "default": false,
        "description": "Flag to indicate if a household member is Disabled",
        "type": "boolean"
      },
      "isHispanic": {
        "default": false,
        "description": "Flag to indicate if a household member is Hispanic",
        "type": "boolean"
      },
      "isSpecialNeeds": {
        "default": false,
        "description": "Flag to indicate if a household member is Special Needs",
        "type": "boolean"
      },
      "lastName": {
        "description": "Last name of Household Member",
        "minLength": 1,
        "type": "string"
      },
      "memberId": {
        "description": "[Output only] Unique ID of Household Member",
        "minLength": 1,
        "type": "string"
      },
      "memberType": {
        "description": "Member type of the household member",
        "enum": [
          "headOfHousehold",
          "householdMember"
        ],
        "type": "string"
      },
      "middleName": {
        "description": "Middle name of Household Member",
        "minLength": 1,
        "type": "string"
      },
      "phone": {
        "description": "Phone number for the Household Member",
        "type": "number"
      },
      "providedId": {
        "description": "Optional Unique ID provided by the Household Member",
        "minLength": 1,
        "type": "string"
      },
      "race": {
        "description": "Race of the Household Member",
        "enum": [
          "American Indian or Alaska Native",
          "Asian",
          "Black or African American",
          "Native Hawaiian or Other Pacific Islander",
          "White"
        ],
        "type": "string"
      },
      "updatedAt": {
        "_format": "date-time",
        "description": "[Output only] Last modification time of the household member",
        "minLength": 1,
        "type": "string"
      },
      "updatedBy": {
        "description": "[Output only] User to last modify the household member",
        "minLength": 1,
        "type": "string"
      },
      "validationDate": {
        "_format": "date-time",
        "description": "Validation date of the Household Member",
        "minLength": 1,
        "type": "string"
      },
      "validationType": {
        "description": "Validation type of the Household Member",
        "minLength": 1,
        "type": "string"
      }
    },
    "required": [
      "firstName",
      "lastName",
      "birthday",
      "gender"
    ],
    "title": "User",
    "type": "object"
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "birthday": "1990-01-01T00:00:00Z",
        "createdAt": "2022-01-01T00:00:00Z",
        "createdBy": "John Doe",
        "email": "johndoe@example.com",
        "firstName": "John",
        "gender": "Male",
        "householdId": "1234567890",
        "isActive": true,
        "isArchived": false,
        "isDisabled": false,
        "isHispanic": false,
        "isSpecialNeeds": false,
        "lastName": "Doe",
        "memberId": "1234567890",
        "memberType": "headOfHousehold",
        "middleName": "Michael",
        "phone": 1234567890,
        "providedId": "ABC123",
        "race": "White",
        "updatedAt": "2022-01-01T00:00:00Z",
        "updatedBy": "John Doe",
        "validationDate": "2022-01-01T00:00:00Z",
        "validationType": "Manual"
      }
    },
    {
      "description": "llama-70b generated negative; focus on minLength keyword",
      "valid": false,
      "rust_error": "\"\" is shorter than 1 character",
      "python_error": "'' should be non-empty\n\nFailed validating 'minLength' in schema['properties']['validationType']:\n    {'description': 'Validation type of the Household Member',\n     'minLength': 1,\n     'type': 'string'}\n\nOn instance['validationType']:\n    ''",
      "data": {
        "birthday": "1990-01-01T00:00:00Z",
        "createdAt": "2022-01-01T00:00:00Z",
        "createdBy": "",
        "email": "johndoe@example.com",
        "firstName": "John",
        "gender": "Male",
        "householdId": "1234567890",
        "isActive": true,
        "isArchived": false,
        "isDisabled": false,
        "isHispanic": false,
        "isSpecialNeeds": false,
        "lastName": "Doe",
        "memberId": "1234567890",
        "memberType": "headOfHousehold",
        "middleName": "Michael",
        "phone": 1234567890,
        "providedId": "ABC123",
        "race": "White",
        "updatedAt": "2022-01-01T00:00:00Z",
        "updatedBy": "",
        "validationDate": "2022-01-01T00:00:00Z",
        "validationType": ""
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"OtherGender\" is not one of [\"Male\",\"Female\",\"Other\"]",
      "python_error": "'OtherGender' is not one of ['Male', 'Female', 'Other']\n\nFailed validating 'enum' in schema['properties']['gender']:\n    {'description': 'Gender of the Household Member',\n     'enum': ['Male', 'Female', 'Other'],\n     'type': 'string'}\n\nOn instance['gender']:\n    'OtherGender'",
      "data": {
        "birthday": "1990-01-01T00:00:00Z",
        "createdAt": "2022-01-01T00:00:00Z",
        "createdBy": "John Doe",
        "email": "johndoe@example.com",
        "firstName": "John",
        "gender": "OtherGender",
        "lastName": "Doe",
        "householdId": "1234567890",
        "isActive": true,
        "isArchived": false,
        "isDisabled": false,
        "isHispanic": false,
        "isSpecialNeeds": false,
        "memberId": "1234567890",
        "memberType": "headOfHousehold",
        "middleName": "Michael",
        "phone": 1234567890,
        "providedId": "ABC123",
        "race": "White",
        "updatedAt": "2022-01-01T00:00:00Z",
        "updatedBy": "John Doe",
        "validationDate": "2022-01-01T00:00:00Z",
        "validationType": "Manual"
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"\" is shorter than 1 character",
      "python_error": "'' should be non-empty\n\nFailed validating 'minLength' in schema['properties']['firstName']:\n    {'description': 'First name of Household Member',\n     'minLength': 1,\n     'type': 'string'}\n\nOn instance['firstName']:\n    ''",
      "data": {
        "birthday": "1990-01-01T00:00:00Z",
        "createdAt": "2022-01-01T00:00:00Z",
        "createdBy": "John Doe",
        "email": "johndoe@example.com",
        "firstName": "",
        "gender": "Male",
        "householdId": "1234567890",
        "isActive": true,
        "isArchived": false,
        "isDisabled": false,
        "isHispanic": false,
        "isSpecialNeeds": false,
        "lastName": "Doe",
        "memberId": "1234567890",
        "memberType": "headOfHousehold",
        "middleName": "Michael",
        "phone": 1234567890,
        "providedId": "ABC123",
        "race": "White",
        "updatedAt": "2022-01-01T00:00:00Z",
        "updatedBy": "John Doe",
        "validationDate": "2022-01-01T00:00:00Z",
        "validationType": "Manual"
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "birthday": "1990-01-01T00:00:00Z",
        "createdAt": "2022-01-01T00:00:00Z",
        "createdBy": "John Doe",
        "email": "john.doe@example.com",
        "firstName": "John",
        "gender": "Male",
        "householdId": "1234567890",
        "isActive": true,
        "isArchived": false,
        "isDisabled": false,
        "isHispanic": false,
        "isSpecialNeeds": false,
        "lastName": "Doe",
        "memberId": "9876543210",
        "memberType": "headOfHousehold",
        "middleName": "Michael",
        "phone": 1234567890,
        "providedId": "ABC123",
        "race": "White",
        "updatedAt": "2022-01-01T00:00:00Z",
        "updatedBy": "Jane Doe",
        "validationDate": "2022-01-01T00:00:00Z",
        "validationType": "Manual"
      }
    },
    {
      "description": "llama-70b generated negative; focus on minLength keyword",
      "valid": false,
      "rust_error": "\"\" is shorter than 1 character",
      "python_error": "'' should be non-empty\n\nFailed validating 'minLength' in schema['properties']['firstName']:\n    {'description': 'First name of Household Member',\n     'minLength': 1,\n     'type': 'string'}\n\nOn instance['firstName']:\n    ''",
      "data": {
        "birthday": "1990-01-01T00:00:00Z",
        "createdAt": "2022-01-01T00:00:00Z",
        "createdBy": "John Doe",
        "email": "john.doe@example.com",
        "firstName": "",
        "gender": "Male",
        "householdId": "1234567890",
        "isActive": true,
        "isArchived": false,
        "isDisabled": false,
        "isHispanic": false,
        "isSpecialNeeds": false,
        "lastName": "Doe",
        "memberId": "9876543210",
        "memberType": "headOfHousehold",
        "middleName": "Michael",
        "phone": 1234567890,
        "providedId": "ABC123",
        "race": "White",
        "updatedAt": "2022-01-01T00:00:00Z",
        "updatedBy": "Jane Doe",
        "validationDate": "2022-01-01T00:00:00Z",
        "validationType": "Manual"
      }
    }
  ]
}