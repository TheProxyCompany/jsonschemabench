{
  "description": "sample Github_hard/o75565.json",
  "meta": {
    "full_size": 5404,
    "stripped_size": 2844,
    "features": [
      "$ref",
      "additionalProperties",
      "enum",
      "format",
      "format:date-time",
      "items"
    ],
    "raw_features": [
      "$schema",
      "_boolSchema",
      "definitions",
      "properties",
      "required",
      "type",
      "type:array",
      "type:boolean",
      "type:number",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "type": "object",
    "properties": {
      "shipment": {
        "properties": {
          "additional_services": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "enum": [
                    "advance_notice",
                    "cash_on_delivery",
                    "drop_authorization",
                    "saturday_delivery"
                  ],
                  "description": "key to identify the additional service"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "amount": {
                      "type": "number"
                    },
                    "bank_code": {
                      "type": "string"
                    },
                    "bank_name": {
                      "type": "string"
                    },
                    "bank_account_holder": {
                      "type": "string"
                    },
                    "bank_account_number": {
                      "type": "string"
                    },
                    "reference1": {
                      "type": "string",
                      "description": "Text that should be displayed as the reason for transfer"
                    },
                    "currency": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "language": {
                      "type": "string",
                      "description": "language the customer should be notified in (ISO-639-1 format)"
                    },
                    "sms": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "required": [
              "name"
            ],
            "additionalProperties": false
          },
          "carrier": {
            "type": "string",
            "enum": [
              "dhl",
              "dpag",
              "dpd",
              "gls",
              "go",
              "hermes",
              "iloxx",
              "tnt",
              "ups"
            ],
            "description": "acronym of the carrier you want to use"
          },
          "create_shipping_label": {
            "type": "boolean",
            "description": "determines if a shipping label should be created at the carrier (this means you will be charged when using the production api key)"
          },
          "description": {
            "type": "string",
            "description": "text that describes the contents of the shipment. This parameter is mandatory if you're using UPS and the following conditions are true: from and to countries are not the same; from and/or to countries are not in the EU; from and to countries are in the EU and the shipments service is not standard"
          },
          "from": {
            "$ref": "#/definitions/address",
            "description": "If missing, the default sender address (if defined in your shipcloud account) will be used"
          },
          "label": {
            "$ref": "#/definitions/label",
            "description": "label characteristics"
          },
          "metadata": {
            "type": "object",
            "description": "here you can save additional data that you want to be associated with the shipment. Any combination of key-value pairs is possible",
            "additionalProperties": true
          },
          "notification_email": {
            "type": "string",
            "description": "email address that we should notify once there's an update for this shipment"
          },
          "package": {
            "$ref": "#/definitions/package"
          },
          "pickup": {
            "$ref": "#/definitions/pickup",
            "description": "pickup request for this shipment"
          },
          "reference_number": {
            "type": "string",
            "description": "a reference number (max. 30 characters) that you want this shipment to be identified with. You can use this afterwards to easier find the shipment in the shipcloud.io backoffice"
          },
          "service": {
            "type": "string",
            "enum": [
              "standard",
              "returns",
              "one_day",
              "one_day_early",
              "same_day"
            ],
            "default": "standard",
            "description": "The service that should be used for the shipment. standard: The standard (ground) service for each carrier. returns: Returns service. one_day: express delivery. one_day_early: express delivery until 10am."
          },
          "to": {
            "$ref": "#/definitions/address",
            "description": "the receivers address"
          }
        },
        "required": [
          "carrier",
          "package",
          "service",
          "to"
        ],
        "additionalProperties": false
      }
    },
    "definitions": {
      "address": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "identifier of a previously created address"
          },
          "company": {
            "type": "string"
          },
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "care_of": {
            "type": "string"
          },
          "street": {
            "type": "string"
          },
          "street_no": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "zip_code": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "country": {
            "type": "string",
            "description": "Country as uppercase ISO 3166-1 alpha-2 code"
          },
          "phone": {
            "type": "string",
            "description": "telephone number (mandatory when using UPS and the following terms apply: service is one_day or one_day_early or ship to country is different than ship from country)"
          }
        },
        "required": [
          "last_name",
          "street",
          "street_no",
          "city",
          "zip_code",
          "country"
        ],
        "additionalProperties": false
      },
      "label": {
        "type": "object",
        "properties": {
          "size": {
            "type": "string",
            "enum": [
              "A5",
              "A6"
            ],
            "description": "defines the DIN size that the returned label should have"
          }
        },
        "additionalProperties": false,
        "description": "label specific definitions"
      },
      "package": {
        "type": "object",
        "properties": {
          "width": {
            "type": "number"
          },
          "height": {
            "type": "number"
          },
          "length": {
            "type": "number"
          },
          "weight": {
            "type": "number"
          },
          "declared_value": {
            "type": "object",
            "description": "describing the value of the package contents",
            "properties": {
              "amount": {
                "type": "number"
              },
              "currency": {
                "type": "string"
              }
            }
          },
          "description": {
            "type": "string",
            "description": "text that describes the contents of the package. This parameter is mandatory if you're using UPS with service returns or DHL with service express"
          },
          "type": {
            "type": "string",
            "enum": [
              "books",
              "bulk",
              "letter",
              "parcel",
              "parcel_letter"
            ],
            "description": "defines packages of being of a certain type - if no value is given, parcel will be used"
          }
        },
        "required": [
          "width",
          "height",
          "length",
          "weight"
        ],
        "additionalProperties": false,
        "description": "defines package dimensions"
      },
      "pickup": {
        "type": "object",
        "properties": {
          "pickup_time": {
            "type": "object",
            "properties": {
              "earliest": {
                "type": "string",
                "format": "date-time"
              },
              "latest": {
                "type": "string",
                "format": "date-time"
              }
            },
            "description": "defined time window when the carrier should pickup shipments",
            "required": [
              "earliest",
              "latest"
            ],
            "additionalProperties": false
          },
          "pickup_address": {
            "$ref": "#/definitions/address",
            "description": "address where the shipment should be picked up"
          }
        },
        "required": [
          "pickup_time"
        ],
        "additionalProperties": false
      }
    },
    "additionalProperties": false,
    "required": [
      "shipment"
    ]
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "shipment": {
          "additional_services": [
            {
              "name": "cash_on_delivery",
              "properties": {
                "amount": 10.99,
                "bank_code": "DE89370400404432013000",
                "bank_name": "Deutsche Bank",
                "bank_account_holder": "John Doe",
                "bank_account_number": "32013000",
                "reference1": "Payment for order #1234",
                "currency": "EUR",
                "email": "john.doe@example.com",
                "language": "en",
                "sms": "+49123456789"
              }
            }
          ],
          "carrier": "dhl",
          "create_shipping_label": true,
          "description": "Example shipment",
          "from": {
            "company": "Example Company",
            "first_name": "John",
            "last_name": "Doe",
            "street": "Example Street",
            "street_no": "123",
            "city": "Example City",
            "zip_code": "12345",
            "country": "DE",
            "phone": "+49123456789"
          },
          "label": {
            "size": "A5"
          },
          "metadata": {
            "order_id": "1234",
            "customer_name": "John Doe"
          },
          "notification_email": "john.doe@example.com",
          "package": {
            "width": 10,
            "height": 10,
            "length": 10,
            "weight": 1,
            "declared_value": {
              "amount": 10.99,
              "currency": "EUR"
            },
            "description": "Example package",
            "type": "parcel"
          },
          "pickup": {
            "pickup_time": {
              "earliest": "2024-12-07T08:00:00+01:00",
              "latest": "2024-12-07T18:00:00+01:00"
            },
            "pickup_address": {
              "company": "Example Company",
              "first_name": "John",
              "last_name": "Doe",
              "street": "Example Street",
              "street_no": "123",
              "city": "Example City",
              "zip_code": "12345",
              "country": "DE",
              "phone": "+49123456789"
            }
          },
          "reference_number": "SH1234",
          "service": "standard",
          "to": {
            "company": "Example Company",
            "first_name": "Jane",
            "last_name": "Doe",
            "street": "Example Street",
            "street_no": "123",
            "city": "Example City",
            "zip_code": "12345",
            "country": "DE",
            "phone": "+49123456789"
          }
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on format keyword",
      "valid": false,
      "rust_error": "\"2024-12-07 08:00:00\" is not a \"date-time\"",
      "python_error": "'2024-12-07 18:00:00' is not a 'date-time'\n\nFailed validating 'format' in schema['properties']['shipment']['properties']['pickup']['properties']['pickup_time']['properties']['latest']:\n    {'type': 'string', 'format': 'date-time'}\n\nOn instance['shipment']['pickup']['pickup_time']['latest']:\n    '2024-12-07 18:00:00'",
      "data": {
        "shipment": {
          "additional_services": [
            {
              "name": "cash_on_delivery",
              "properties": {
                "amount": 10.99,
                "bank_code": "DE89370400404432013000",
                "bank_name": "Deutsche Bank",
                "bank_account_holder": "John Doe",
                "bank_account_number": "32013000",
                "reference1": "Payment for order #1234",
                "currency": "EUR",
                "email": "john.doe@example.com",
                "language": "en",
                "sms": "+49123456789"
              }
            }
          ],
          "carrier": "dhl",
          "create_shipping_label": true,
          "description": "Example shipment",
          "from": {
            "company": "Example Company",
            "first_name": "John",
            "last_name": "Doe",
            "street": "Example Street",
            "street_no": "123",
            "city": "Example City",
            "zip_code": "12345",
            "country": "DE",
            "phone": "+49123456789"
          },
          "label": {
            "size": "A5"
          },
          "metadata": {
            "order_id": "1234",
            "customer_name": "John Doe"
          },
          "notification_email": "john.doe@example.com",
          "package": {
            "width": 10,
            "height": 10,
            "length": 10,
            "weight": 1,
            "declared_value": {
              "amount": 10.99,
              "currency": "EUR"
            },
            "description": "Example package",
            "type": "parcel"
          },
          "pickup": {
            "pickup_time": {
              "earliest": "2024-12-07 08:00:00",
              "latest": "2024-12-07 18:00:00"
            },
            "pickup_address": {
              "company": "Example Company",
              "first_name": "John",
              "last_name": "Doe",
              "street": "Example Street",
              "street_no": "123",
              "city": "Example City",
              "zip_code": "12345",
              "country": "DE",
              "phone": "+49123456789"
            }
          },
          "reference_number": "SH1234",
          "service": "standard",
          "to": {
            "company": "Example Company",
            "first_name": "Jane",
            "last_name": "Doe",
            "street": "Example Street",
            "street_no": "123",
            "city": "Example City",
            "zip_code": "12345",
            "country": "DE",
            "phone": "+49123456789"
          }
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on format keyword",
      "valid": false,
      "rust_error": "\"2024-12-07T08:00:00\" is not a \"date-time\"",
      "python_error": "'2024-12-07T18:00:00' is not a 'date-time'\n\nFailed validating 'format' in schema['properties']['shipment']['properties']['pickup']['properties']['pickup_time']['properties']['latest']:\n    {'type': 'string', 'format': 'date-time'}\n\nOn instance['shipment']['pickup']['pickup_time']['latest']:\n    '2024-12-07T18:00:00'",
      "data": {
        "shipment": {
          "additional_services": [
            {
              "name": "cash_on_delivery",
              "properties": {
                "amount": 10.99,
                "bank_code": "DE89370400404432013000",
                "bank_name": "Deutsche Bank",
                "bank_account_holder": "John Doe",
                "bank_account_number": "32013000",
                "reference1": "Payment for order #1234",
                "currency": "EUR",
                "email": "john.doe@example.com",
                "language": "en",
                "sms": "+49123456789"
              }
            }
          ],
          "carrier": "dhl",
          "create_shipping_label": true,
          "description": "Example shipment",
          "from": {
            "company": "Example Company",
            "first_name": "John",
            "last_name": "Doe",
            "street": "Example Street",
            "street_no": "123",
            "city": "Example City",
            "zip_code": "12345",
            "country": "DE",
            "phone": "+49123456789"
          },
          "label": {
            "size": "A5"
          },
          "metadata": {
            "order_id": "1234",
            "customer_name": "John Doe"
          },
          "notification_email": "john.doe@example.com",
          "package": {
            "width": 10,
            "height": 10,
            "length": 10,
            "weight": 1,
            "declared_value": {
              "amount": 10.99,
              "currency": "EUR"
            },
            "description": "Example package",
            "type": "parcel"
          },
          "pickup": {
            "pickup_time": {
              "earliest": "2024-12-07T08:00:00",
              "latest": "2024-12-07T18:00:00"
            },
            "pickup_address": {
              "company": "Example Company",
              "first_name": "John",
              "last_name": "Doe",
              "street": "Example Street",
              "street_no": "123",
              "city": "Example City",
              "zip_code": "12345",
              "country": "DE",
              "phone": "+49123456789"
            }
          },
          "reference_number": "SH1234",
          "service": "standard",
          "to": {
            "company": "Example Company",
            "first_name": "Jane",
            "last_name": "Doe",
            "street": "Example Street",
            "street_no": "123",
            "city": "Example City",
            "zip_code": "12345",
            "country": "DE",
            "phone": "+49123456789"
          }
        }
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "shipment": {
          "additional_services": [
            {
              "name": "advance_notice",
              "properties": {
                "amount": 10.0,
                "bank_code": "12345678",
                "bank_name": "Bank Name",
                "bank_account_holder": "Account Holder",
                "bank_account_number": "1234567890",
                "reference1": "Reference 1",
                "currency": "EUR",
                "email": "example@example.com",
                "language": "en",
                "sms": "+1234567890"
              }
            }
          ],
          "carrier": "dhl",
          "create_shipping_label": true,
          "description": "Test Shipment",
          "from": {
            "company": "Sender Company",
            "first_name": "John",
            "last_name": "Doe",
            "street": "Sender Street",
            "street_no": "123",
            "city": "Sender City",
            "zip_code": "12345",
            "country": "DE",
            "phone": "+1234567890"
          },
          "label": {
            "size": "A5"
          },
          "metadata": {
            "key": "value"
          },
          "notification_email": "example@example.com",
          "package": {
            "width": 10.0,
            "height": 10.0,
            "length": 10.0,
            "weight": 1.0,
            "declared_value": {
              "amount": 100.0,
              "currency": "EUR"
            },
            "description": "Test Package",
            "type": "parcel"
          },
          "pickup": {
            "pickup_time": {
              "earliest": "2024-12-07T09:00:00+01:00",
              "latest": "2024-12-07T17:00:00+01:00"
            },
            "pickup_address": {
              "company": "Pickup Company",
              "first_name": "John",
              "last_name": "Doe",
              "street": "Pickup Street",
              "street_no": "123",
              "city": "Pickup City",
              "zip_code": "12345",
              "country": "DE",
              "phone": "+1234567890"
            }
          },
          "reference_number": "TEST-123",
          "service": "standard",
          "to": {
            "company": "Receiver Company",
            "first_name": "Jane",
            "last_name": "Doe",
            "street": "Receiver Street",
            "street_no": "123",
            "city": "Receiver City",
            "zip_code": "12345",
            "country": "DE",
            "phone": "+1234567890"
          }
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on format keyword",
      "valid": false,
      "rust_error": "\"2024-12-07 09:00:00+01:00\" is not a \"date-time\"",
      "python_error": "'2024-12-07 17:00:00+01:00' is not a 'date-time'\n\nFailed validating 'format' in schema['properties']['shipment']['properties']['pickup']['properties']['pickup_time']['properties']['latest']:\n    {'type': 'string', 'format': 'date-time'}\n\nOn instance['shipment']['pickup']['pickup_time']['latest']:\n    '2024-12-07 17:00:00+01:00'",
      "data": {
        "shipment": {
          "additional_services": [
            {
              "name": "advance_notice",
              "properties": {
                "amount": 10.0,
                "bank_code": "12345678",
                "bank_name": "Bank Name",
                "bank_account_holder": "Account Holder",
                "bank_account_number": "1234567890",
                "reference1": "Reference 1",
                "currency": "EUR",
                "email": "example@example.com",
                "language": "en",
                "sms": "+1234567890"
              }
            }
          ],
          "carrier": "dhl",
          "create_shipping_label": true,
          "description": "Test Shipment",
          "from": {
            "company": "Sender Company",
            "first_name": "John",
            "last_name": "Doe",
            "street": "Sender Street",
            "street_no": "123",
            "city": "Sender City",
            "zip_code": "12345",
            "country": "DE",
            "phone": "Invalid Phone Number"
          },
          "label": {
            "size": "A5"
          },
          "metadata": {
            "key": "value"
          },
          "notification_email": "example@example.com",
          "package": {
            "width": 10.0,
            "height": 10.0,
            "length": 10.0,
            "weight": 1.0,
            "declared_value": {
              "amount": 100.0,
              "currency": "EUR"
            },
            "description": "Test Package",
            "type": "parcel"
          },
          "pickup": {
            "pickup_time": {
              "earliest": "2024-12-07 09:00:00+01:00",
              "latest": "2024-12-07 17:00:00+01:00"
            },
            "pickup_address": {
              "company": "Pickup Company",
              "first_name": "John",
              "last_name": "Doe",
              "street": "Pickup Street",
              "street_no": "123",
              "city": "Pickup City",
              "zip_code": "12345",
              "country": "DE",
              "phone": "+1234567890"
            }
          },
          "reference_number": "TEST-123",
          "service": "standard",
          "to": {
            "company": "Receiver Company",
            "first_name": "Jane",
            "last_name": "Doe",
            "street": "Receiver Street",
            "street_no": "123",
            "city": "Receiver City",
            "zip_code": "12345",
            "country": "DE",
            "phone": "+1234567890"
          }
        }
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"other\" is not one of [\"books\",\"bulk\",\"letter\",\"parcel\",\"parcel_letter\"]",
      "python_error": "'other' is not one of ['standard', 'returns', 'one_day', 'one_day_early', 'same_day']\n\nFailed validating 'enum' in schema['properties']['shipment']['properties']['service']:\n    {'type': 'string',\n     'enum': ['standard',\n              'returns',\n              'one_day',\n              'one_day_early',\n              'same_day'],\n     'default': 'standard',\n     'description': 'The service that should be used for the shipment. '\n                    'standard: The standard (ground) service for each '\n                    'carrier. returns: Returns service. one_day: express '\n                    'delivery. one_day_early: express delivery until 10am.'}\n\nOn instance['shipment']['service']:\n    'other'",
      "data": {
        "shipment": {
          "additional_services": [
            {
              "name": "advance_notice",
              "properties": {
                "amount": 10.0,
                "bank_code": "12345678",
                "bank_name": "Bank Name",
                "bank_account_holder": "Account Holder",
                "bank_account_number": "1234567890",
                "reference1": "Reference 1",
                "currency": "EUR",
                "email": "example@example.com",
                "language": "eng",
                "sms": "+1234567890",
                "extraProperty": "extraValue"
              }
            }
          ],
          "carrier": "dhl",
          "create_shipping_label": true,
          "description": "Test Shipment",
          "from": {
            "company": "Sender Company",
            "first_name": "John",
            "last_name": "Doe",
            "street": "Sender Street",
            "street_no": "123",
            "city": "Sender City",
            "zip_code": "12345",
            "country": "DE",
            "phone": "+1234567890"
          },
          "label": {
            "size": "A5"
          },
          "metadata": {
            "key": "value"
          },
          "notification_email": "example@example.com",
          "package": {
            "width": 10.0,
            "height": 10.0,
            "length": 10.0,
            "weight": 1.0,
            "declared_value": {
              "amount": 100.0,
              "currency": "EUR"
            },
            "description": "Test Package",
            "type": "other"
          },
          "pickup": {
            "pickup_time": {
              "earliest": "2024-12-07T09:00:00+01:00",
              "latest": "2024-12-07T17:00:00+01:00"
            },
            "pickup_address": {
              "company": "Pickup Company",
              "first_name": "John",
              "last_name": "Doe",
              "street": "Pickup Street",
              "street_no": "123",
              "city": "Pickup City",
              "zip_code": "12345",
              "country": "DE",
              "phone": "+1234567890"
            }
          },
          "reference_number": "TEST-123",
          "service": "other",
          "to": {
            "company": "Receiver Company",
            "first_name": "Jane",
            "last_name": "Doe",
            "street": "Receiver Street",
            "street_no": "123",
            "city": "Receiver City",
            "zip_code": "12345",
            "country": "DE",
            "phone": "+1234567890"
          }
        }
      }
    }
  ]
}