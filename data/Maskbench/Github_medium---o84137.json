{
  "description": "sample Github_medium/o84137.json",
  "meta": {
    "full_size": 500,
    "stripped_size": 435,
    "features": [
      "@minmaxLength",
      "enum",
      "items"
    ],
    "raw_features": [
      "minLength",
      "properties",
      "required",
      "type",
      "type:array",
      "type:number",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "description": "The schema is made for RenderTheFuck line chart.",
    "properties": {
      "labels": {
        "items": {
          "type": "string"
        },
        "type": "array"
      },
      "lines": {
        "items": {
          "properties": {
            "data": {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            "name": {
              "type": "string"
            }
          },
          "required": [
            "name",
            "data"
          ],
          "type": "object"
        },
        "type": "array"
      },
      "settings": {
        "properties": {
          "title": {
            "minLength": 1,
            "type": "string"
          }
        },
        "required": [
          "title"
        ],
        "type": "object"
      },
      "wtf": {
        "enum": [
          "line"
        ],
        "type": "string"
      }
    },
    "required": [
      "wtf",
      "settings",
      "lines"
    ],
    "type": "object"
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "labels": [
          "Jan",
          "Feb",
          "Mar",
          "Apr",
          "May"
        ],
        "lines": [
          {
            "data": [
              10,
              20,
              30,
              40,
              50
            ],
            "name": "Line 1"
          },
          {
            "data": [
              5,
              10,
              15,
              20,
              25
            ],
            "name": "Line 2"
          }
        ],
        "settings": {
          "title": "Example Line Chart"
        },
        "wtf": "line"
      }
    },
    {
      "description": "llama-70b generated negative; focus on minLength keyword",
      "valid": false,
      "rust_error": "\"\" is shorter than 1 character",
      "python_error": "'' should be non-empty\n\nFailed validating 'minLength' in schema['properties']['settings']['properties']['title']:\n    {'minLength': 1, 'type': 'string'}\n\nOn instance['settings']['title']:\n    ''",
      "data": {
        "labels": [
          "Jan",
          "Feb",
          "Mar",
          "Apr",
          "May"
        ],
        "lines": [
          {
            "data": [
              10,
              20,
              30,
              40,
              50
            ],
            "name": "Line 1"
          },
          {
            "data": [
              5,
              10,
              15,
              20,
              25
            ],
            "name": "Line 2"
          }
        ],
        "settings": {
          "title": ""
        },
        "wtf": "line"
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"25\" is not of type \"number\"",
      "python_error": "'' should be non-empty\n\nFailed validating 'minLength' in schema['properties']['settings']['properties']['title']:\n    {'minLength': 1, 'type': 'string'}\n\nOn instance['settings']['title']:\n    ''",
      "data": {
        "labels": [
          "Jan",
          "Feb",
          "Mar",
          "Apr",
          "May"
        ],
        "lines": [
          {
            "data": [
              10,
              20,
              30,
              40,
              50
            ],
            "name": "Line 1"
          },
          {
            "data": [
              5,
              10,
              15,
              20,
              "25"
            ],
            "name": "Line 2"
          }
        ],
        "settings": {
          "title": ""
        },
        "wtf": "line"
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "labels": [
          "Jan",
          "Feb",
          "Mar",
          "Apr",
          "May"
        ],
        "lines": [
          {
            "data": [
              10,
              20,
              30,
              40,
              50
            ],
            "name": "Line 1"
          },
          {
            "data": [
              5,
              15,
              25,
              35,
              45
            ],
            "name": "Line 2"
          }
        ],
        "settings": {
          "title": "Example Line Chart"
        },
        "wtf": "line"
      }
    },
    {
      "description": "llama-70b generated negative; focus on minLength keyword",
      "valid": false,
      "rust_error": "\"\" is shorter than 1 character",
      "python_error": "'' should be non-empty\n\nFailed validating 'minLength' in schema['properties']['settings']['properties']['title']:\n    {'minLength': 1, 'type': 'string'}\n\nOn instance['settings']['title']:\n    ''",
      "data": {
        "labels": [
          "Jan",
          "Feb",
          "Mar",
          "Apr",
          "May"
        ],
        "lines": [
          {
            "data": [
              10,
              20,
              30,
              40,
              50
            ],
            "name": "Line 1"
          },
          {
            "data": [
              5,
              15,
              25,
              35,
              45
            ],
            "name": "Line 2"
          }
        ],
        "settings": {
          "title": ""
        },
        "wtf": "line"
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"string\" is not of type \"number\"",
      "python_error": "'' should be non-empty\n\nFailed validating 'minLength' in schema['properties']['settings']['properties']['title']:\n    {'minLength': 1, 'type': 'string'}\n\nOn instance['settings']['title']:\n    ''",
      "data": {
        "labels": [
          "Jan",
          "Feb",
          "Mar",
          "Apr",
          "May"
        ],
        "lines": [
          {
            "data": [
              10,
              20,
              30,
              40,
              50
            ],
            "name": "Line 1"
          },
          {
            "name": "Line 2",
            "data": [
              5,
              15,
              "string",
              35,
              45
            ]
          }
        ],
        "settings": {
          "title": ""
        },
        "wtf": "line"
      }
    }
  ]
}