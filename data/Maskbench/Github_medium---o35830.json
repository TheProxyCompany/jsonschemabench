{
  "description": "sample Github_medium/o35830.json",
  "meta": {
    "full_size": 5034,
    "stripped_size": 2398,
    "features": [
      "$ref",
      "@minmaxNumber",
      "@siblingKeys",
      "additionalProperties",
      "allOf",
      "anyOf",
      "items",
      "oneOf",
      "pattern",
      "patternProperties"
    ],
    "raw_features": [
      "$schema",
      "_boolSchema",
      "definitions",
      "maximum",
      "minimum",
      "properties",
      "required",
      "type",
      "type:array",
      "type:number",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "title": "descent-glovepie map",
    "description": "Describes the mappings for generating a GlovePIE script.",
    "type": "object",
    "properties": {
      "input": {
        "description": "Input prefix that is applied to all inputs.  For instance, if you set this to \"Sixaxis1\" and define a button mapping for \"Square\", then the generated script will use \"Sixaxis1.Square\".  This parameter is optional; if not specified, no prefix is applied to inputs.",
        "type": "string"
      },
      "alias": {
        "description": "Input aliases.  Allows arbitrary GlovePIE code to be used as an input.",
        "type": "object",
        "patternProperties": {
          "^[A-Za-z][A-Za-z0-9]*$": {
            "description": "Alias for an input.",
            "type": "string"
          }
        }
      },
      "shift": {
        "description": "List of inputs that can be used as shift buttons.",
        "type": "array",
        "items": {
          "type": "string",
          "pattern": "^:?[A-Za-z][A-Za-z0-9]*(\\.[A-Za-z][A-Za-z0-9]*)*$"
        },
        "_uniqueItems": true
      },
      "axis": {
        "description": "Mappings for analog inputs to virtual joystick axes.  Each property name is an input, and each value is the output.",
        "type": "object",
        "patternProperties": {
          "^:?[A-Za-z][A-Za-z0-9]*(\\.[A-Za-z][A-Za-z0-9]*)*$": {
            "description": "Mapping of an analog input to an output.  The output may be inverted by putting a dash (-) at the beginning of the value.",
            "type": "string",
            "pattern": "^-?[A-Za-z][A-Za-z0-9]*(\\.[A-Za-z][A-Za-z0-9]*)*$"
          }
        },
        "additionalProperties": false
      },
      "button": {
        "description": "Mappings for digital inputs to virtual joystick buttons, keyboard keys, or keyboard macros.  Each property name is an input.",
        "type": "object",
        "patternProperties": {
          "^:?[A-Za-z][A-Za-z0-9]*(\\.[A-Za-z][A-Za-z0-9]*)*$": {
            "oneOf": [
              {
                "description": "Simple mapping for this digital input.",
                "$ref": "#/definitions/output"
              },
              {
                "description": "Mappings for this digital input.  The property names are the shift button inputs, except \"normal\" which is the unshifted mapping.",
                "type": "object",
                "properties": {
                  "normal": {
                    "description": "Normal, unshifted mapping for this digital input.",
                    "$ref": "#/definitions/output"
                  }
                },
                "patternProperties": {
                  "^[A-Za-z][A-Za-z0-9]*(\\.[A-Za-z][A-Za-z0-9]*)*$": {
                    "description": "Shifted mapping for this digital input.  The property name is the shift button input.",
                    "$ref": "#/definitions/output"
                  }
                }
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "throttle": {
        "description": "Special mapping for using two buttons as a joystick axis and optional virtual button that indicates when both buttons are pressed.",
        "type": "object",
        "properties": {
          "axis": {
            "description": "Virtual joystick axis to use for the analog output.",
            "type": "string",
            "pattern": "^[A-Za-z][A-Za-z0-9]*(\\.[A-Za-z][A-Za-z0-9]*)*$"
          },
          "button": {
            "description": "Virtual joystick button to use for the digital output indicating when both buttons are pressed.",
            "type": "string",
            "pattern": "^[A-Za-z][A-Za-z0-9]*(\\.[A-Za-z][A-Za-z0-9]*)*$"
          },
          "forwardButton": {
            "description": "Virtual joystick button to use for the digital forward output.",
            "type": "string",
            "pattern": "^[A-Za-z][A-Za-z0-9]*(\\.[A-Za-z][A-Za-z0-9]*)*$"
          },
          "reverseButton": {
            "description": "Virtual joystick button to use for the digital reverse output.",
            "type": "string",
            "pattern": "^[A-Za-z][A-Za-z0-9]*(\\.[A-Za-z][A-Za-z0-9]*)*$"
          },
          "forwardDigital": {
            "description": "Digital input indicating when the button used for forward is pressed, if available.",
            "type": "string",
            "pattern": "^:?[A-Za-z][A-Za-z0-9]*(\\.[A-Za-z][A-Za-z0-9]*)*$"
          },
          "forwardAnalog": {
            "description": "Analog input indicating how far the button used for forward is pressed, if available.",
            "type": "string",
            "pattern": "^:?[A-Za-z][A-Za-z0-9]*(\\.[A-Za-z][A-Za-z0-9]*)*$"
          },
          "reverseDigital": {
            "description": "Digital input indicating when the button used for reverse is pressed, if available.",
            "type": "string",
            "pattern": "^:?[A-Za-z][A-Za-z0-9]*(\\.[A-Za-z][A-Za-z0-9]*)*$"
          },
          "reverseAnalog": {
            "description": "Analog input indicating how far the button used for reverse is pressed, if available.",
            "type": "string",
            "pattern": "^:?[A-Za-z][A-Za-z0-9]*(\\.[A-Za-z][A-Za-z0-9]*)*$"
          },
          "analogThreshold": {
            "description": "Threshold beyond which an analog button input is considered pressed for programming logic purposes.  This value is only used if a digital input is not specified for forward or reverse.",
            "type": "number",
            "minimum": 0,
            "minimumExclusive": false,
            "maximum": 1,
            "maximumExclusive": true
          }
        },
        "additionalProperties": false,
        "allOf": [
          {
            "anyOf": [
              {
                "required": [
                  "axis"
                ]
              },
              {
                "required": [
                  "button"
                ]
              },
              {
                "required": [
                  "forwardButton"
                ]
              },
              {
                "required": [
                  "reverseButton"
                ]
              }
            ]
          },
          {
            "anyOf": [
              {
                "required": [
                  "forwardDigital"
                ]
              },
              {
                "required": [
                  "forwardAnalog"
                ]
              }
            ]
          },
          {
            "anyOf": [
              {
                "required": [
                  "reverseDigital"
                ]
              },
              {
                "required": [
                  "reverseAnalog"
                ]
              }
            ]
          }
        ]
      }
    },
    "additionalProperties": false,
    "required": [
      "button"
    ],
    "definitions": {
      "simpleOutput": {
        "description": "Output assignment to a simple button or key.",
        "type": "string",
        "pattern": "^[A-Za-z][A-Za-z0-9]*(\\.[A-Za-z][A-Za-z0-9]*)*$"
      },
      "macroOutput": {
        "description": "Output assignment to a keyboard macro.",
        "type": "string",
        "pattern": "^~[A-Za-z][A-Za-z0-9]*([- ][A-Za-z][A-Za-z0-9]*)*$"
      },
      "output": {
        "oneOf": [
          {
            "$ref": "#/definitions/simpleOutput"
          },
          {
            "$ref": "#/definitions/macroOutput"
          }
        ]
      }
    }
  },
  "tests": [
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "input": "Sixaxis1",
        "alias": {
          "leftStick": "Sixaxis1.LeftStickX,Sixaxis1.LeftStickY"
        },
        "shift": [
          "L3",
          "R3"
        ],
        "axis": {
          "Sixaxis1.LeftStickX": "LeftStickX",
          "Sixaxis1.LeftStickY": "LeftStickY",
          "Sixaxis1.RightStickX": "RightStickX",
          "Sixaxis1.RightStickY": "RightStickY"
        },
        "button": {
          "Square": "Button1",
          "Circle": "Button2",
          "Triangle": "Button3",
          "Cross": "Button4",
          "L1": {
            "normal": "Button5",
            "L3": "Button6"
          },
          "R1": {
            "normal": "Button7",
            "R3": "Button8"
          },
          "L2": {
            "normal": "Button9",
            "L3": "Button10"
          },
          "R2": {
            "normal": "Button11",
            "R3": "Button12"
          },
          "Select": "~Select",
          "Start": "~Start"
        },
        "throttle": {
          "axis": "Throttle",
          "button": "Button13",
          "forwardButton": "Button14",
          "reverseButton": "Button15",
          "forwardDigital": "Sixaxis1.L2",
          "forwardAnalog": "Sixaxis1.L2",
          "reverseDigital": "Sixaxis1.R2",
          "reverseAnalog": "Sixaxis1.R2",
          "analogThreshold": 0.5
        }
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "input": "Sixaxis1",
        "alias": {
          "leftStick": "Sixaxis1.LeftStick",
          "rightStick": "Sixaxis1.RightStick"
        },
        "shift": [
          "Sixaxis1.L1",
          "Sixaxis1.R1"
        ],
        "axis": {
          "Sixaxis1.LeftStick.X": "LeftStick.X",
          "Sixaxis1.LeftStick.Y": "LeftStick.Y",
          "Sixaxis1.RightStick.X": "RightStick.X",
          "Sixaxis1.RightStick.Y": "RightStick.Y"
        },
        "button": {
          "Sixaxis1.Square": "Button1",
          "Sixaxis1.Circle": "Button2",
          "Sixaxis1.Cross": {
            "normal": "Button3",
            "Sixaxis1.L1": "Button4",
            "Sixaxis1.R1": "Button5"
          },
          "Sixaxis1.Triangle": {
            "normal": "Button6",
            "Sixaxis1.L1": "Button7",
            "Sixaxis1.R1": "Button8"
          }
        },
        "throttle": {
          "axis": "Throttle",
          "button": "ThrottleButton",
          "forwardButton": "ThrottleForward",
          "reverseButton": "ThrottleReverse",
          "forwardDigital": "Sixaxis1.R2",
          "reverseDigital": "Sixaxis1.L2",
          "analogThreshold": 0.5
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on pattern keyword",
      "valid": false,
      "rust_error": "\"Invalid Input\" does not match \"^:?[A-Za-z][A-Za-z0-9]*(\\.[A-Za-z][A-Za-z0-9]*)*$\"",
      "python_error": "Additional properties are not allowed ('Invalid Property' was unexpected)\n\nFailed validating 'additionalProperties' in schema['properties']['throttle']:\n    {'description': 'Special mapping for using two buttons as a joystick '\n                    'axis and optional virtual button that indicates when '\n                    'both buttons are pressed.',\n     'type': 'object',\n     'properties': {'axis': {'description': 'Virtual joystick axis to use '\n                                            'for the analog output.',\n                             'type': 'string',\n                             'pattern': '^[A-Za-z][A-Za-z0-9]*(\\\\.[A-Za-z][A-Za-z0-9]*)*$'},\n                    'button': {'description': 'Virtual joystick button to '\n                                              'use for the digital output '\n                                              'indicating when both '\n                                              'buttons are pressed.',\n                               'type': 'string',\n                     .. (5073 more)",
      "data": {
        "input": "Sixaxis1",
        "alias": {
          "leftStick": "Sixaxis1.LeftStick",
          "rightStick": "Sixaxis1.RightStick"
        },
        "shift": [
          "Sixaxis1.L1",
          "Sixaxis1.R1",
          "Invalid Input",
          "Sixaxis1.L1"
        ],
        "axis": {
          "Sixaxis1.LeftStick.X": "LeftStick.X",
          "Sixaxis1.LeftStick.Y": "LeftStick.Y",
          "Sixaxis1.RightStick.X": "RightStick.X",
          "Sixaxis1.RightStick.Y": "RightStick.Y",
          "-Sixaxis1.LeftStick.X": "Invalid Output"
        },
        "button": {
          "Sixaxis1.Square": "Button1",
          "Sixaxis1.Circle": "Button2",
          "Sixaxis1.Cross": {
            "normal": "Button3",
            "Sixaxis1.L1": "Button4",
            "Sixaxis1.R1": "Button5"
          },
          "Sixaxis1.Triangle": {
            "normal": "Button6",
            "Sixaxis1.L1": "Button7",
            "Sixaxis1.R1": "Button8",
            "Invalid Shift Button": "Button9"
          }
        },
        "throttle": {
          "axis": "Throttle",
          "button": "ThrottleButton",
          "forwardButton": "ThrottleForward",
          "reverseButton": "ThrottleReverse",
          "forwardDigital": "Sixaxis1.R2",
          "reverseDigital": "Sixaxis1.L2",
          "Invalid Property": "Invalid Value",
          "analogThreshold": 1.0
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on oneOf keyword",
      "valid": false,
      "rust_error": "\"Invalid Output\" is not valid under any of the schemas listed in the 'oneOf' keyword",
      "python_error": "'Invalid Output' is not valid under any of the given schemas\n\nFailed validating 'oneOf' in schema[0]:\n    {'oneOf': [{'$ref': '#/definitions/simpleOutput'},\n               {'$ref': '#/definitions/macroOutput'}]}\n\nOn instance:\n    'Invalid Output'",
      "data": {
        "input": "Sixaxis1",
        "alias": {
          "leftStick": "Sixaxis1.LeftStick",
          "rightStick": "Sixaxis1.RightStick"
        },
        "shift": [
          "Sixaxis1.L1",
          "Sixaxis1.R1"
        ],
        "axis": {
          "Sixaxis1.LeftStick.X": "LeftStick.X",
          "Sixaxis1.LeftStick.Y": "LeftStick.Y",
          "Sixaxis1.RightStick.X": "RightStick.X",
          "Sixaxis1.RightStick.Y": "RightStick.Y"
        },
        "button": {
          "Sixaxis1.Square": "Button1",
          "Sixaxis1.Circle": "Invalid Output",
          "sixaxis1.Triangle": {
            "normal": "Button3",
            "Sixaxis1.L1": "Button4",
            "Sixaxis1.R1": "Button5"
          },
          "Sixaxis1.Triangle": {
            "normal": "Button6",
            "Sixaxis1.L1": "Button7",
            "Sixaxis1.R1": "Button8"
          }
        },
        "throttle": {
          "axis": "Throttle",
          "button": "ThrottleButton",
          "forwardButton": "ThrottleForward",
          "reverseButton": "ThrottleReverse",
          "forwardDigital": "Sixaxis1.R2",
          "reverseDigital": "Sixaxis1.L2",
          "analogThreshold": 0.5
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on minimum keyword or maximum keyword",
      "valid": false,
      "rust_error": "1.5 is greater than the maximum of 1",
      "python_error": "1.5 is greater than the maximum of 1\n\nFailed validating 'maximum' in schema['properties']['throttle']['properties']['analogThreshold']:\n    {'description': 'Threshold beyond which an analog button input is '\n                    'considered pressed for programming logic purposes.  '\n                    'This value is only used if a digital input is not '\n                    'specified for forward or reverse.',\n     'type': 'number',\n     'minimum': 0,\n     'minimumExclusive': False,\n     'maximum': 1,\n     'maximumExclusive': True}\n\nOn instance['throttle']['analogThreshold']:\n    1.5",
      "data": {
        "input": "Sixaxis1",
        "alias": {
          "leftStick": "Sixaxis1.LeftStick",
          "rightStick": "Sixaxis1.RightStick"
        },
        "shift": [
          "Sixaxis1.L1",
          "Sixaxis1.R1"
        ],
        "axis": {
          "Sixaxis1.LeftStick.X": "LeftStick.X",
          "Sixaxis1.LeftStick.Y": "LeftStick.Y",
          "Sixaxis1.RightStick.X": "RightStick.X",
          "Sixaxis1.RightStick.Y": "RightStick.Y"
        },
        "button": {
          "Sixaxis1.Square": "Button1",
          "Sixaxis1.Circle": "Button2",
          "Sixaxis1.Cross": {
            "normal": "Button3",
            "Sixaxis1.L1": "Button4",
            "Sixaxis1.R1": "Button5"
          },
          "Sixaxis1.Triangle": {
            "normal": "Button6",
            "Sixaxis1.L1": "Button7",
            "Sixaxis1.R1": "Button8"
          }
        },
        "throttle": {
          "axis": "Throttle",
          "button": "ThrottleButton",
          "forwardButton": "ThrottleForward",
          "reverseButton": "ThrottleReverse",
          "forwardDigital": "Sixaxis1.R2",
          "reverseDigital": "Sixaxis1.L2",
          "analogThreshold": 1.5
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on allOf keyword",
      "valid": false,
      "rust_error": "{\"axis\":\"Throttle\"} is not valid under any of the schemas listed in the 'anyOf' keyword",
      "python_error": "{'axis': 'Throttle'} is not valid under any of the given schemas\n\nFailed validating 'anyOf' in schema['properties']['throttle']['allOf'][1]:\n    {'anyOf': [{'required': ['forwardDigital']},\n               {'required': ['forwardAnalog']}]}\n\nOn instance['throttle']:\n    {'axis': 'Throttle'}",
      "data": {
        "input": "Sixaxis1",
        "alias": {
          "leftStick": "Sixaxis1.LeftStick",
          "rightStick": "Sixaxis1.RightStick"
        },
        "shift": [
          "Sixaxis1.L1",
          "Sixaxis1.R1"
        ],
        "axis": {
          "Sixaxis1.LeftStick.X": "LeftStick.X",
          "Sixaxis1.LeftStick.Y": "LeftStick.Y",
          "Sixaxis1.RightStick.X": "RightStick.X",
          "Sixaxis1.RightStick.Y": "RightStick.Y"
        },
        "button": {
          "Sixaxis1.Square": "Button1",
          "Sixaxis1.Circle": "Button2",
          "Sixaxis1.Cross": {
            "normal": "Button3",
            "Sixaxis1.L1": "Button4",
            "Sixaxis1.R1": "Button5"
          },
          "Sixaxis1.Triangle": {
            "normal": "Button6",
            "Sixaxis1.L1": "Button7",
            "Sixaxis1.R1": "Button8"
          }
        },
        "throttle": {
          "axis": "Throttle"
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on anyOf keyword",
      "valid": false,
      "rust_error": "{\"axis\":\"Throttle\",\"button\":\"ThrottleButton\",\"forwardButton\":\"ThrottleForward\",\"reverseButton\":\"ThrottleReverse\",\"forwardDigital\":\"Sixaxis1.R2\",\"analogThreshold\":0.5} is not valid under any of the schemas listed in the 'anyOf' keyword",
      "python_error": "{'axis': 'Throttle', 'button': 'ThrottleButton', 'forwardButton': 'ThrottleForward', 'reverseButton': 'ThrottleReverse', 'forwardDigital': 'Sixaxis1.R2', 'analogThreshold': 0.5} is not valid under any of the given schemas\n\nFailed validating 'anyOf' in schema['properties']['throttle']['allOf'][2]:\n    {'anyOf': [{'required': ['reverseDigital']},\n               {'required': ['reverseAnalog']}]}\n\nOn instance['throttle']:\n    {'axis': 'Throttle',\n     'button': 'ThrottleButton',\n     'forwardButton': 'ThrottleForward',\n     'reverseButton': 'ThrottleReverse',\n     'forwardDigital': 'Sixaxis1.R2',\n     'analogThreshold': 0.5}",
      "data": {
        "input": "Sixaxis1",
        "alias": {
          "leftStick": "Sixaxis1.LeftStick",
          "rightStick": "Sixaxis1.RightStick"
        },
        "shift": [
          "Sixaxis1.L1",
          "Sixaxis1.R1"
        ],
        "axis": {
          "Sixaxis1.LeftStick.X": "LeftStick.X",
          "Sixaxis1.LeftStick.Y": "LeftStick.Y",
          "Sixaxis1.RightStick.X": "RightStick.X",
          "Sixaxis1.RightStick.Y": "RightStick.Y"
        },
        "button": {
          "Sixaxis1.Square": "Button1",
          "Sixaxis1.Circle": "Button2",
          "Sixaxis1.Cross": {
            "normal": "Button3",
            "Sixaxis1.L1": "Button4",
            "Sixaxis1.R1": "Button5"
          },
          "Sixaxis1.Triangle": {
            "normal": "Button6",
            "Sixaxis1.L1": "Button7",
            "Sixaxis1.R1": "Button8"
          }
        },
        "throttle": {
          "axis": "Throttle",
          "button": "ThrottleButton",
          "forwardButton": "ThrottleForward",
          "reverseButton": "ThrottleReverse",
          "forwardDigital": "Sixaxis1.R2",
          "analogThreshold": 0.5
        }
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "1.5 is greater than the maximum of 1",
      "python_error": "1.5 is greater than the maximum of 1\n\nFailed validating 'maximum' in schema['properties']['throttle']['properties']['analogThreshold']:\n    {'description': 'Threshold beyond which an analog button input is '\n                    'considered pressed for programming logic purposes.  '\n                    'This value is only used if a digital input is not '\n                    'specified for forward or reverse.',\n     'type': 'number',\n     'minimum': 0,\n     'minimumExclusive': False,\n     'maximum': 1,\n     'maximumExclusive': True}\n\nOn instance['throttle']['analogThreshold']:\n    1.5",
      "data": {
        "input": "Sixaxis1",
        "alias": {
          "leftStick": "Sixaxis1.LeftStick",
          "rightStick": "Sixaxis1.RightStick"
        },
        "shift": [
          "Sixaxis1.L1",
          "Sixaxis1.R1",
          "Sixaxis1.R1"
        ],
        "axis": {
          "Sixaxis1.LeftStick.X": "LeftStick.X",
          "Sixaxis1.LeftStick.Y": "LeftStick.Y",
          "Sixaxis1.RightStick.X": "RightStick.X",
          "Sixaxis1.RightStick.Y": "RightStick.Y"
        },
        "button": {
          "Sixaxis1.Square": "Button1",
          "Sixaxis1.Circle": "Button2",
          "Sixaxis1.Cross": {
            "normal": "Button3",
            "Sixaxis1.L1": "Button4",
            "Sixaxis1.R1": "Button5"
          },
          "Sixaxis1.Triangle": {
            "normal": "Button6",
            "Sixaxis1.L1": "Button7",
            "Sixaxis1.R1": "Button8",
            "InvalidShift": "Button9"
          }
        },
        "throttle": {
          "axis": "Throttle",
          "button": "ThrottleButton",
          "forwardButton": "ThrottleForward",
          "reverseButton": "ThrottleReverse",
          "forwardDigital": "Sixaxis1.R2",
          "reverseDigital": "Sixaxis1.L2",
          "analogThreshold": 1.5
        }
      }
    }
  ]
}