{
  "description": "sample Github_medium/o63329.json",
  "meta": {
    "full_size": 1247,
    "stripped_size": 344,
    "features": [
      "format",
      "format:path"
    ],
    "raw_features": [
      "_requiredEmpty",
      "properties",
      "required",
      "type",
      "type:boolean",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "properties": {
      "flat": {
        "default": true,
        "description": "Flag to indicate if a dir is created.",
        "type": "boolean"
      },
      "minimal": {
        "default": false,
        "description": "Setup root state management without registering initial reducers.",
        "type": "boolean"
      },
      "module": {
        "alias": "m",
        "default": "",
        "description": "Allows specification of the declaring module.",
        "subtype": "filepath",
        "type": "string",
        "x-prompt": "To which module (path) should the state be registered in?"
      },
      "name": {
        "$default": {
          "$source": "argv",
          "index": 0
        },
        "description": "The name of the state.",
        "type": "string",
        "x-prompt": "What should be the name of the state?"
      },
      "path": {
        "description": "The path to create the component.",
        "format": "path",
        "type": "string",
        "visible": false
      },
      "project": {
        "aliases": [
          "p"
        ],
        "description": "The name of the project.",
        "type": "string"
      },
      "root": {
        "default": false,
        "description": "Flag to setup the root state or feature state.",
        "type": "boolean"
      },
      "skipTests": {
        "default": false,
        "description": "When true, does not create test files.",
        "type": "boolean"
      },
      "stateInterface": {
        "alias": "si",
        "default": "State",
        "description": "Specifies the interface for the state.",
        "type": "string"
      },
      "statePath": {
        "default": "reducers",
        "type": "string"
      }
    },
    "required": [],
    "title": "NgRx State Management Options Schema",
    "type": "object"
  },
  "tests": [
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "flat": true,
        "minimal": false,
        "module": "src/app/modules/my-module",
        "name": "my-state",
        "path": "/src/app/modules/my-module/states",
        "project": "my-project",
        "root": false,
        "skipTests": false,
        "stateInterface": "MyState",
        "statePath": "reducers"
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "flat": true,
        "minimal": false,
        "module": "src/app/modules/my-module",
        "name": "my-state",
        "path": "/src/app/components/my-component",
        "project": "my-project",
        "root": false,
        "skipTests": false,
        "stateInterface": "MyState",
        "statePath": "reducers"
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"maybe\" is not of type \"boolean\"",
      "python_error": "12345 is not of type 'string'\n\nFailed validating 'type' in schema['properties']['stateInterface']:\n    {'alias': 'si',\n     'default': 'State',\n     'description': 'Specifies the interface for the state.',\n     'type': 'string'}\n\nOn instance['stateInterface']:\n    12345",
      "data": {
        "flat": "maybe",
        "minimal": "maybe",
        "module": 12345,
        "name": 12345,
        "path": 12345,
        "project": 12345,
        "root": "maybe",
        "skipTests": "maybe",
        "stateInterface": 12345,
        "statePath": "12345",
        "nonexistentproperty": "error"
      }
    }
  ]
}