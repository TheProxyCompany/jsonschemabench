{
  "description": "sample Github_medium/o28131.json",
  "meta": {
    "full_size": 1463,
    "stripped_size": 567,
    "features": [
      "@minmaxLength",
      "enum"
    ],
    "raw_features": [
      "maxLength",
      "properties",
      "required",
      "type",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "description": "A structured textual way of describing how to find an address, using unformatted strings for the street address.",
    "properties": {
      "city": {
        "description": "City that the address is in.",
        "maxLength": 50,
        "type": "string"
      },
      "country": {
        "description": "The country that the address is in.",
        "maxLength": 50,
        "type": "string"
      },
      "formattedAddressLine1": {
        "description": "A formatted address line that contains a non-fielded street address.",
        "maxLength": 60,
        "type": "string"
      },
      "formattedAddressLine2": {
        "description": "A formatted address line that contains a non-fielded street address, sub-address (e.g. Suite number), etc.",
        "maxLength": 60,
        "type": "string"
      },
      "locality": {
        "description": "A bounded locality within a city, town or shire principally of urban character.",
        "maxLength": 50,
        "type": "string"
      },
      "objectType": {
        "description": "The type of the object, formattedAddress.",
        "enum": [
          "formattedAddress"
        ],
        "type": "string"
      },
      "postcode": {
        "description": "A descriptor for a postal delivery area, used to speed and simplify the delivery of mail.",
        "maxLength": 6,
        "type": "string"
      },
      "postcodeExtension": {
        "description": "The four-digit extension on an American postal code, what comes after the hyphen when specified.",
        "maxLength": 4,
        "type": "string"
      },
      "stateOrProvince": {
        "description": "The state or province that the address is in.",
        "maxLength": 50,
        "type": "string"
      }
    },
    "required": [
      "objectType",
      "formattedAddressLine1",
      "stateOrProvince",
      "postcode",
      "country"
    ],
    "title": "formattedAddress",
    "type": "object"
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "city": "New York",
        "country": "United States",
        "formattedAddressLine1": "123 Main St",
        "formattedAddressLine2": "Suite 456",
        "locality": "Manhattan",
        "objectType": "formattedAddress",
        "postcode": "10001",
        "postcodeExtension": "1234",
        "stateOrProvince": "New York"
      }
    },
    {
      "description": "llama-70b generated negative; focus on maxLength keyword",
      "valid": false,
      "rust_error": "\"United States of America, a country in North America\" is longer than 50 characters",
      "python_error": "'United States of America, a country in North America' is too long\n\nFailed validating 'maxLength' in schema['properties']['country']:\n    {'description': 'The country that the address is in.',\n     'maxLength': 50,\n     'type': 'string'}\n\nOn instance['country']:\n    'United States of America, a country in North America'",
      "data": {
        "city": "New York",
        "country": "United States of America, a country in North America",
        "formattedAddressLine1": "123 Main St",
        "formattedAddressLine2": "Suite 456",
        "locality": "Manhattan",
        "objectType": "formattedAddress",
        "postcode": "10001",
        "postcodeExtension": "1234",
        "stateOrProvince": "New York"
      }
    },
    {
      "description": "llama-70b generated negative; focus on maxLength keyword",
      "valid": false,
      "rust_error": "\"123456789012345678901234567890\" is longer than 6 characters",
      "python_error": "'123456789012345678901234567890' is too long\n\nFailed validating 'maxLength' in schema['properties']['postcode']:\n    {'description': 'A descriptor for a postal delivery area, used to '\n                    'speed and simplify the delivery of mail.',\n     'maxLength': 6,\n     'type': 'string'}\n\nOn instance['postcode']:\n    '123456789012345678901234567890'",
      "data": {
        "city": "New York",
        "country": "United States",
        "formattedAddressLine1": "123 Main St",
        "formattedAddressLine2": "Suite 456",
        "locality": "Manhattan",
        "objectType": "formattedAddress",
        "postcode": "123456789012345678901234567890",
        "postcodeExtension": "1234",
        "stateOrProvince": "New York"
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "city": "New York",
        "country": "United States",
        "formattedAddressLine1": "123 Main St",
        "formattedAddressLine2": "Suite 456",
        "locality": "Manhattan",
        "objectType": "formattedAddress",
        "postcode": "10001",
        "postcodeExtension": "1234",
        "stateOrProvince": "New York"
      }
    },
    {
      "description": "llama-70b generated negative; focus on maxLength keyword",
      "valid": false,
      "rust_error": "\"a very very very very very very very very very very long city name that exceeds the maxLength of 50\" is longer than 50 characters",
      "python_error": "'a very very very very very very very very very very long city name that exceeds the maxLength of 50' is too long\n\nFailed validating 'maxLength' in schema['properties']['city']:\n    {'description': 'City that the address is in.',\n     'maxLength': 50,\n     'type': 'string'}\n\nOn instance['city']:\n    ('a very very very very very very very very very very long city name '\n     'that exceeds the maxLength of 50')",
      "data": {
        "city": "a very very very very very very very very very very long city name that exceeds the maxLength of 50",
        "country": "United States",
        "formattedAddressLine1": "123 Main St",
        "formattedAddressLine2": "Suite 456",
        "locality": "Manhattan",
        "objectType": "formattedAddress",
        "postcode": "10001",
        "postcodeExtension": "1234",
        "stateOrProvince": "New York"
      }
    }
  ]
}