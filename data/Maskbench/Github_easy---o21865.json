{
  "description": "sample Github_easy/o21865.json",
  "meta": {
    "full_size": 604,
    "stripped_size": 415,
    "features": [
      "$ref",
      "items"
    ],
    "raw_features": [
      "$schema",
      "definitions",
      "id",
      "properties",
      "type",
      "type:array",
      "type:boolean",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "id": "http://www.xsd2jsonschema.org/schema/functionalTestSchema.json",
    "$schema": "http://json-schema.org/draft-04/schema#",
    "title": "Xsd2JsonSchema Function Test",
    "description": "Defines the format of Xsd2JsonSchema functional tests",
    "type": "object",
    "properties": {
      "xsdPath": {
        "type": "string"
      },
      "xsdFilename": {
        "type": "string"
      },
      "testInstances": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/TestInstanceType"
        }
      }
    },
    "definitions": {
      "TestInstanceType": {
        "type": "object",
        "properties": {
          "expectedToPass": {
            "type": "boolean"
          },
          "testData": {
            "description": "A JSON test inances.  Any properly formatted JSON is acceptable."
          }
        }
      }
    }
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "xsdPath": "/path/to/xsd",
        "xsdFilename": "example.xsd",
        "testInstances": [
          {
            "expectedToPass": true,
            "testData": {
              "key": "value"
            }
          },
          {
            "expectedToPass": false,
            "testData": {
              "key": "another value"
            }
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"false\" is not of type \"boolean\"",
      "python_error": "'false' is not of type 'boolean'\n\nFailed validating 'type' in schema['properties']['testInstances']['items']['properties']['expectedToPass']:\n    {'type': 'boolean'}\n\nOn instance['testInstances'][1]['expectedToPass']:\n    'false'",
      "data": {
        "xsdPath": "/path/to/xsd",
        "xsdFilename": "example.xsd",
        "testInstances": [
          {
            "expectedToPass": true,
            "testData": {
              "key": "value"
            }
          },
          {
            "expectedToPass": "false",
            "testData": {
              "key": "another value"
            }
          }
        ]
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "xsdPath": "/path/to/xsd",
        "xsdFilename": "example.xsd",
        "testInstances": [
          {
            "expectedToPass": true,
            "testData": {
              "name": "John Doe",
              "age": 30,
              "address": {
                "street": "123 Main St",
                "city": "Anytown",
                "state": "CA",
                "zip": "12345"
              }
            }
          },
          {
            "expectedToPass": false,
            "testData": {
              "name": "Jane Doe",
              "age": "thirty-one"
            }
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"true\" is not of type \"boolean\"",
      "python_error": "'true' is not of type 'boolean'\n\nFailed validating 'type' in schema['properties']['testInstances']['items']['properties']['expectedToPass']:\n    {'type': 'boolean'}\n\nOn instance['testInstances'][0]['expectedToPass']:\n    'true'",
      "data": {
        "xsdPath": "/path/to/xsd",
        "xsdFilename": "example.xsd",
        "testInstances": [
          {
            "expectedToPass": "true",
            "testData": {
              "name": "John Doe",
              "age": 30,
              "address": {
                "street": "123 Main St",
                "city": "Anytown",
                "state": "CA",
                "zip": "12345"
              }
            }
          },
          {
            "expectedToPass": false,
            "testData": {
              "name": "Jane Doe",
              "age": "thirty-one"
            }
          },
          {
            "expectedToPass": true,
            "testData": {}
          }
        ]
      }
    }
  ]
}