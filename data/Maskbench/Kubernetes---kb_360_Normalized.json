{
  "description": "sample Kubernetes/kb_360_Normalized.json",
  "meta": {
    "full_size": 302,
    "stripped_size": 86,
    "features": [],
    "raw_features": [
      "properties",
      "required",
      "type",
      "type:[]",
      "type:null",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "description": "FlowDistinguisherMethod specifies the method of a flow distinguisher.",
    "properties": {
      "type": {
        "description": "`type` is the type of flow distinguisher method The supported types are \"ByUser\" and \"ByNamespace\". Required.",
        "type": [
          "string",
          "null"
        ]
      }
    },
    "required": [
      "type"
    ],
    "type": "object"
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "type": "ByUser"
      }
    },
    {
      "description": "llama-70b generated negative; focus on type keyword with an array of types",
      "valid": false,
      "rust_error": "123 is not of types \"null\", \"string\"",
      "python_error": "123 is not of type 'string', 'null'\n\nFailed validating 'type' in schema['properties']['type']:\n    {'description': '`type` is the type of flow distinguisher method The '\n                    'supported types are \"ByUser\" and \"ByNamespace\". '\n                    'Required.',\n     'type': ['string', 'null']}\n\nOn instance['type']:\n    123",
      "data": {
        "type": 123
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "1 is not of types \"null\", \"string\"",
      "python_error": "1 is not of type 'string', 'null'\n\nFailed validating 'type' in schema['properties']['type']:\n    {'description': '`type` is the type of flow distinguisher method The '\n                    'supported types are \"ByUser\" and \"ByNamespace\". '\n                    'Required.',\n     'type': ['string', 'null']}\n\nOn instance['type']:\n    1",
      "data": {
        "type": 1
      }
    }
  ]
}