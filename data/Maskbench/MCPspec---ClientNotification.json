{
  "description": "sample MCPspec/ClientNotification.json",
  "meta": {
    "full_size": 3643,
    "stripped_size": 1597,
    "features": [
      "$ref",
      "@siblingKeys",
      "additionalProperties",
      "additionalProperties:object",
      "anyOf",
      "const"
    ],
    "raw_features": [
      "$schema",
      "definitions",
      "properties",
      "required",
      "type",
      "type:[]",
      "type:integer",
      "type:number",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$ref": "#/definitions/ClientNotification",
    "definitions": {
      "ClientNotification": {
        "anyOf": [
          {
            "$ref": "#/definitions/CancelledNotification"
          },
          {
            "$ref": "#/definitions/InitializedNotification"
          },
          {
            "$ref": "#/definitions/ProgressNotification"
          },
          {
            "$ref": "#/definitions/RootsListChangedNotification"
          }
        ]
      },
      "CancelledNotification": {
        "description": "This notification can be sent by either side to indicate that it is cancelling a previously-issued request.\n\nThe request SHOULD still be in-flight, but due to communication latency, it is always possible that this notification MAY arrive after the request has already finished.\n\nThis notification indicates that the result will be unused, so any associated processing SHOULD cease.\n\nA client MUST NOT attempt to cancel its `initialize` request.",
        "properties": {
          "method": {
            "const": "notifications/cancelled",
            "type": "string"
          },
          "params": {
            "properties": {
              "reason": {
                "description": "An optional string describing the reason for the cancellation. This MAY be logged or presented to the user.",
                "type": "string"
              },
              "requestId": {
                "$ref": "#/definitions/RequestId",
                "description": "The ID of the request to cancel.\n\nThis MUST correspond to the ID of a request previously issued in the same direction."
              }
            },
            "required": [
              "requestId"
            ],
            "type": "object"
          }
        },
        "required": [
          "method",
          "params"
        ],
        "type": "object"
      },
      "RequestId": {
        "description": "A uniquely identifying ID for a request in JSON-RPC.",
        "type": [
          "string",
          "integer"
        ]
      },
      "InitializedNotification": {
        "description": "This notification is sent from the client to the server after initialization has finished.",
        "properties": {
          "method": {
            "const": "notifications/initialized",
            "type": "string"
          },
          "params": {
            "additionalProperties": {},
            "properties": {
              "_meta": {
                "additionalProperties": {},
                "description": "This parameter name is reserved by MCP to allow clients and servers to attach additional metadata to their notifications.",
                "type": "object"
              }
            },
            "type": "object"
          }
        },
        "required": [
          "method"
        ],
        "type": "object"
      },
      "ProgressNotification": {
        "description": "An out-of-band notification used to inform the receiver of a progress update for a long-running request.",
        "properties": {
          "method": {
            "const": "notifications/progress",
            "type": "string"
          },
          "params": {
            "properties": {
              "progress": {
                "description": "The progress thus far. This should increase every time progress is made, even if the total is unknown.",
                "type": "number"
              },
              "progressToken": {
                "$ref": "#/definitions/ProgressToken",
                "description": "The progress token which was given in the initial request, used to associate this notification with the request that is proceeding."
              },
              "total": {
                "description": "Total number of items to process (or total progress required), if known.",
                "type": "number"
              }
            },
            "required": [
              "progress",
              "progressToken"
            ],
            "type": "object"
          }
        },
        "required": [
          "method",
          "params"
        ],
        "type": "object"
      },
      "ProgressToken": {
        "description": "A progress token, used to associate progress notifications with the original request.",
        "type": [
          "string",
          "integer"
        ]
      },
      "RootsListChangedNotification": {
        "description": "A notification from the client to the server, informing it that the list of roots has changed.\nThis notification should be sent whenever the client adds, removes, or modifies any root.\nThe server should then request an updated list of roots using the ListRootsRequest.",
        "properties": {
          "method": {
            "const": "notifications/roots/list_changed",
            "type": "string"
          },
          "params": {
            "additionalProperties": {},
            "properties": {
              "_meta": {
                "additionalProperties": {},
                "description": "This parameter name is reserved by MCP to allow clients and servers to attach additional metadata to their notifications.",
                "type": "object"
              }
            },
            "type": "object"
          }
        },
        "required": [
          "method"
        ],
        "type": "object"
      }
    }
  },
  "tests": [
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "method": "notifications/cancelled",
        "params": {
          "reason": "Request was cancelled due to a timeout",
          "requestId": "12345"
        }
      }
    }
  ]
}