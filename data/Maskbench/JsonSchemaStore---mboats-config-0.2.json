{
  "description": "sample JsonSchemaStore/mboats-config-0.2.json",
  "meta": {
    "full_size": 4816,
    "stripped_size": 4129,
    "features": [
      "$ref",
      "@minmaxInteger",
      "@siblingKeys",
      "additionalProperties",
      "enum",
      "format",
      "format:uri",
      "pattern"
    ],
    "raw_features": [
      "$id",
      "$schema",
      "_boolSchema",
      "definitions",
      "maximum",
      "minimum",
      "properties",
      "required",
      "type",
      "type:boolean",
      "type:integer",
      "type:null",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$id": "https://json.schemastore.org/mboats-config-0.2.json",
    "$ref": "#/definitions/MBOATS",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "definitions": {
      "MBOATS": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "appId": {
            "type": "string",
            "default": "MBOAPPL",
            "description": "5-7 letter capitalized abbreviated word representing the application",
            "pattern": "^[\\w]{5,7}$"
          },
          "appName": {
            "type": "string",
            "default": "MBO Application",
            "description": "Application Name"
          },
          "pageLoadTimeout": {
            "type": "integer",
            "default": 60000,
            "minimum": 30000,
            "maximum": 120000
          },
          "elementFindTimeout": {
            "type": "integer",
            "default": 8,
            "minimum": 3,
            "maximum": 15
          },
          "soundfx": {
            "type": "boolean",
            "default": false
          },
          "headless": {
            "type": "boolean",
            "default": false
          },
          "invocationCount": {
            "type": "integer",
            "default": 1,
            "minimum": 1,
            "maximum": 5
          },
          "mode": {
            "type": "string",
            "default": "local",
            "enum": [
              "local",
              "remote"
            ],
            "description": "The mode of test execution."
          },
          "runnerParallelism": {
            "type": "string",
            "default": "feature",
            "enum": [
              "feature",
              "scenario"
            ]
          },
          "threadCount": {
            "type": "integer",
            "default": 1,
            "minimum": 1,
            "maximum": 5
          },
          "clients": {
            "type": "string",
            "default": "chrome",
            "enum": [
              "chrome",
              "firefox",
              "edge"
            ]
          },
          "clientParallelism": {
            "type": "string",
            "default": "stacked",
            "enum": [
              "stacked",
              "interleaved"
            ]
          },
          "video": {
            "$ref": "#/definitions/MBOATS/definitions/Video"
          },
          "networkLogs": {
            "$ref": "#/definitions/MBOATS/definitions/NetworkLogs"
          },
          "email": {
            "$ref": "#/definitions/MBOATS/definitions/Email"
          },
          "mongodb": {
            "$ref": "#/definitions/MBOATS/definitions/MongoDB"
          },
          "awss3": {
            "$ref": "#/definitions/MBOATS/definitions/AWSS3"
          },
          "awsec2": {
            "$ref": "#/definitions/MBOATS/definitions/AWSEC2"
          },
          "threadbare": {
            "$ref": "#/definitions/MBOATS/definitions/Threadbare"
          }
        },
        "required": [
          "appId",
          "appName"
        ],
        "title": "MBOATS Framework Properties",
        "definitions": {
          "AWSEC2": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "publicName": {
                "type": "string"
              },
              "serverPort": {
                "type": "integer"
              }
            },
            "required": [
              "publicName",
              "serverPort"
            ],
            "title": "AWS EC2 Configuration"
          },
          "AWSS3": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "enabled": {
                "type": "boolean"
              },
              "accessKeyId": {
                "type": "string"
              },
              "secretAccessKey": {
                "type": "string"
              },
              "region": {
                "type": "string"
              },
              "bucket": {
                "type": "string"
              },
              "identityPoolId": {
                "type": "string"
              }
            },
            "required": [
              "accessKeyId",
              "bucket",
              "enabled",
              "identityPoolId",
              "region",
              "secretAccessKey"
            ],
            "title": "AWS S3 Configuration"
          },
          "CucumberOptions": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "featuresPath": {
                "type": "string"
              },
              "stepdefsPackage": {
                "type": "string"
              },
              "tagExpression": {
                "type": "string"
              }
            },
            "required": [
              "featuresPath",
              "stepdefsPackage",
              "tagExpression"
            ],
            "title": "CucumberOptions"
          },
          "Email": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "auth": {
                "$ref": "#/definitions/MBOATS/definitions/Email/definitions/Auth"
              },
              "invitationLinkRegex": {
                "type": "string"
              },
              "oktaTokenRegex": {
                "type": "string"
              }
            },
            "required": [
              "auth",
              "invitationLinkRegex",
              "oktaTokenRegex"
            ],
            "title": "Email Configuration",
            "definitions": {
              "Auth": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "$clientId": {
                    "type": "string"
                  },
                  "$clientSecret": {
                    "type": "string"
                  },
                  "$refreshToken": {
                    "type": "string"
                  },
                  "$refreshUrl": {
                    "type": "string",
                    "format": "uri"
                  }
                },
                "required": [
                  "$clientId",
                  "$clientSecret",
                  "$refreshToken",
                  "$refreshUrl"
                ],
                "title": "Auth"
              }
            }
          },
          "MongoDB": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "enabled": {
                "type": "boolean"
              },
              "username": {
                "type": "string"
              },
              "password": {
                "type": "string"
              },
              "connectionString": {
                "type": "string"
              },
              "database": {
                "type": "string"
              },
              "collection": {
                "$ref": "#/definitions/MBOATS/definitions/MongoDB/definitions/Collection"
              }
            },
            "required": [
              "collection",
              "connectionString",
              "database",
              "enabled",
              "password",
              "username"
            ],
            "title": "MongoDB Configuration",
            "definitions": {
              "Collection": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "report": {
                    "type": "string"
                  }
                },
                "required": [
                  "report"
                ],
                "title": "Collection"
              }
            }
          },
          "NetworkLogs": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "enabled": {
                "type": "boolean"
              },
              "request": {
                "$ref": "#/definitions/MBOATS/definitions/NetworkLogs/definitions/Request"
              },
              "response": {
                "$ref": "#/definitions/MBOATS/definitions/NetworkLogs/definitions/Request"
              }
            },
            "required": [
              "enabled",
              "request",
              "response"
            ],
            "title": "NetworkLogs",
            "definitions": {
              "Request": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "headers": {
                    "type": "boolean"
                  },
                  "cookies": {
                    "type": "boolean"
                  },
                  "body": {
                    "type": "boolean"
                  }
                },
                "required": [
                  "body",
                  "cookies",
                  "headers"
                ],
                "title": "Request"
              }
            }
          },
          "Threadbare": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "server": {
                "type": "null"
              }
            },
            "required": [
              "server"
            ],
            "title": "Threadbare Configuration"
          },
          "Video": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "enabled": {
                "type": "boolean"
              },
              "location": {
                "type": "string"
              },
              "format": {
                "type": "string"
              },
              "prefix": {
                "type": "string"
              }
            },
            "required": [
              "enabled",
              "format",
              "location",
              "prefix"
            ],
            "title": "Video"
          }
        }
      }
    }
  },
  "tests": [
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "appId": "MBOAPPL",
        "appName": "MBO Application",
        "pageLoadTimeout": 60000,
        "elementFindTimeout": 8,
        "soundfx": false,
        "headless": false,
        "invocationCount": 1,
        "mode": "local",
        "runnerParallelism": "feature",
        "threadCount": 1,
        "clients": "chrome",
        "clientParallelism": "stacked",
        "video": {
          "enabled": true,
          "location": "/path/to/video/location",
          "format": "mp4",
          "prefix": "test-video-"
        },
        "networkLogs": {
          "enabled": true,
          "request": {
            "headers": true,
            "cookies": true,
            "body": true
          },
          "response": {
            "headers": true,
            "cookies": true,
            "body": true
          }
        },
        "email": {
          "auth": {
            "$clientId": "email-client-id",
            "$clientSecret": "email-client-secret",
            "$refreshToken": "email-refresh-token",
            "$refreshUrl": "https://email-refresh-url.com"
          },
          "invitationLinkRegex": "invitation-link-regex",
          "oktaTokenRegex": "okta-token-regex"
        },
        "mongodb": {
          "enabled": true,
          "username": "mongodb-username",
          "password": "mongodb-password",
          "connectionString": "mongodb://localhost:27017",
          "database": "mongodb-database",
          "collection": {
            "report": "mongodb-collection-report"
          }
        },
        "awss3": {
          "enabled": true,
          "accessKeyId": "aws-s3-access-key-id",
          "secretAccessKey": "aws-s3-secret-access-key",
          "region": "aws-s3-region",
          "bucket": "aws-s3-bucket",
          "identityPoolId": "aws-s3-identity-pool-id"
        },
        "awsec2": {
          "publicName": "aws-ec2-public-name",
          "serverPort": 8080
        },
        "threadbare": {
          "server": null
        }
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "appId": "MBOAPPL",
        "appName": "MBO Application",
        "pageLoadTimeout": 60000,
        "elementFindTimeout": 8,
        "soundfx": false,
        "headless": false,
        "invocationCount": 1,
        "mode": "local",
        "runnerParallelism": "feature",
        "threadCount": 1,
        "clients": "chrome",
        "clientParallelism": "stacked",
        "video": {
          "enabled": true,
          "location": "/path/to/video/location",
          "format": "mp4",
          "prefix": "test-video-"
        },
        "networkLogs": {
          "enabled": true,
          "request": {
            "headers": true,
            "cookies": true,
            "body": true
          },
          "response": {
            "headers": true,
            "cookies": true,
            "body": true
          }
        },
        "email": {
          "auth": {
            "$clientId": "email-client-id",
            "$clientSecret": "email-client-secret",
            "$refreshToken": "email-refresh-token",
            "$refreshUrl": "https://email-refresh-url.com"
          },
          "invitationLinkRegex": "invitation-link-regex",
          "oktaTokenRegex": "okta-token-regex"
        },
        "mongodb": {
          "enabled": true,
          "username": "mongodb-username",
          "password": "mongodb-password",
          "connectionString": "mongodb://localhost:27017",
          "database": "test-database",
          "collection": {
            "report": "test-collection"
          }
        },
        "awss3": {
          "enabled": true,
          "accessKeyId": "aws-s3-access-key-id",
          "secretAccessKey": "aws-s3-secret-access-key",
          "region": "us-east-1",
          "bucket": "test-bucket",
          "identityPoolId": "aws-s3-identity-pool-id"
        },
        "awsec2": {
          "publicName": "aws-ec2-public-name",
          "serverPort": 8080
        },
        "threadbare": {
          "server": null
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on pattern keyword",
      "valid": false,
      "rust_error": "\"MB\" does not match \"^[\\w]{5,7}$\"",
      "python_error": "'MB' does not match '^[\\\\w]{5,7}$'\n\nFailed validating 'pattern' in schema['properties']['appId']:\n    {'type': 'string',\n     'default': 'MBOAPPL',\n     'description': '5-7 letter capitalized abbreviated word representing '\n                    'the application',\n     'pattern': '^[\\\\w]{5,7}$'}\n\nOn instance['appId']:\n    'MB'",
      "data": {
        "appId": "MB",
        "appName": "MBO Application",
        "pageLoadTimeout": 60000,
        "elementFindTimeout": 8,
        "soundfx": false,
        "headless": false,
        "invocationCount": 1,
        "mode": "local",
        "runnerParallelism": "feature",
        "threadCount": 1,
        "clients": "chrome",
        "clientParallelism": "stacked",
        "video": {
          "enabled": true,
          "location": "/path/to/video/location",
          "format": "mp4",
          "prefix": "test-video-"
        },
        "networkLogs": {
          "enabled": true,
          "request": {
            "headers": true,
            "cookies": true,
            "body": true
          },
          "response": {
            "headers": true,
            "cookies": true,
            "body": true
          }
        },
        "email": {
          "auth": {
            "$clientId": "email-client-id",
            "$clientSecret": "email-client-secret",
            "$refreshToken": "email-refresh-token",
            "$refreshUrl": "https://email-refresh-url.com"
          },
          "invitationLinkRegex": "invitation-link-regex",
          "oktaTokenRegex": "okta-token-regex"
        },
        "mongodb": {
          "enabled": true,
          "username": "mongodb-username",
          "password": "mongodb-password",
          "connectionString": "mongodb://localhost:27017",
          "database": "test-database",
          "collection": {
            "report": "test-collection"
          }
        },
        "awss3": {
          "enabled": true,
          "accessKeyId": "aws-s3-access-key-id",
          "secretAccessKey": "aws-s3-secret-access-key",
          "region": "us-east-1",
          "bucket": "test-bucket",
          "identityPoolId": "aws-s3-identity-pool-id"
        },
        "awsec2": {
          "publicName": "aws-ec2-public-name",
          "serverPort": 8080
        },
        "threadbare": {
          "server": null
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on format keyword",
      "valid": false,
      "rust_error": "\"not-a-url\" is not a \"uri\"",
      "python_error": "'not-a-url' is not a 'uri'\n\nFailed validating 'format' in schema['properties']['email']['properties']['auth']['properties']['$refreshUrl']:\n    {'type': 'string', 'format': 'uri'}\n\nOn instance['email']['auth']['$refreshUrl']:\n    'not-a-url'",
      "data": {
        "appId": "MBOAPPL",
        "appName": "MBO Application",
        "pageLoadTimeout": 60000,
        "elementFindTimeout": 8,
        "soundfx": false,
        "headless": false,
        "invocationCount": 1,
        "mode": "local",
        "runnerParallelism": "feature",
        "threadCount": 1,
        "clients": "chrome",
        "clientParallelism": "stacked",
        "video": {
          "enabled": true,
          "location": "/path/to/video/location",
          "format": "mp4",
          "prefix": "test-video-"
        },
        "networkLogs": {
          "enabled": true,
          "request": {
            "headers": true,
            "cookies": true,
            "body": true
          },
          "response": {
            "headers": true,
            "cookies": true,
            "body": true
          }
        },
        "email": {
          "auth": {
            "$clientId": "email-client-id",
            "$clientSecret": "email-client-secret",
            "$refreshToken": "email-refresh-token",
            "$refreshUrl": "not-a-url"
          },
          "invitationLinkRegex": "invitation-link-regex",
          "oktaTokenRegex": "okta-token-regex"
        },
        "mongodb": {
          "enabled": true,
          "username": "mongodb-username",
          "password": "mongodb-password",
          "connectionString": "mongodb://localhost:27017",
          "database": "test-database",
          "collection": {
            "report": "test-collection"
          }
        },
        "awss3": {
          "enabled": true,
          "accessKeyId": "aws-s3-access-key-id",
          "secretAccessKey": "aws-s3-secret-access-key",
          "region": "us-east-1",
          "bucket": "test-bucket",
          "identityPoolId": "aws-s3-identity-pool-id"
        },
        "awsec2": {
          "publicName": "aws-ec2-public-name",
          "serverPort": 8080
        },
        "threadbare": {
          "server": null
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on minimum keyword or maximum keyword",
      "valid": false,
      "rust_error": "-1 is less than the minimum of 30000",
      "python_error": "-1 is less than the minimum of 30000\n\nFailed validating 'minimum' in schema['properties']['pageLoadTimeout']:\n    {'type': 'integer',\n     'default': 60000,\n     'minimum': 30000,\n     'maximum': 120000}\n\nOn instance['pageLoadTimeout']:\n    -1",
      "data": {
        "appId": "MBOAPPL",
        "appName": "MBO Application",
        "pageLoadTimeout": -1,
        "elementFindTimeout": 8,
        "soundfx": false,
        "headless": false,
        "invocationCount": 1,
        "mode": "local",
        "runnerParallelism": "feature",
        "threadCount": 1,
        "clients": "chrome",
        "clientParallelism": "stacked",
        "video": {
          "enabled": true,
          "location": "/path/to/video/location",
          "format": "mp4",
          "prefix": "test-video-"
        },
        "networkLogs": {
          "enabled": true,
          "request": {
            "headers": true,
            "cookies": true,
            "body": true
          },
          "response": {
            "headers": true,
            "cookies": true,
            "body": true
          }
        },
        "email": {
          "auth": {
            "$clientId": "email-client-id",
            "$clientSecret": "email-client-secret",
            "$refreshToken": "email-refresh-token",
            "$refreshUrl": "https://email-refresh-url.com"
          },
          "invitationLinkRegex": "invitation-link-regex",
          "oktaTokenRegex": "okta-token-regex"
        },
        "mongodb": {
          "enabled": true,
          "username": "mongodb-username",
          "password": "mongodb-password",
          "connectionString": "mongodb://localhost:27017",
          "database": "test-database",
          "collection": {
            "report": "test-collection"
          }
        },
        "awss3": {
          "enabled": true,
          "accessKeyId": "aws-s3-access-key-id",
          "secretAccessKey": "aws-s3-secret-access-key",
          "region": "us-east-1",
          "bucket": "test-bucket",
          "identityPoolId": "aws-s3-identity-pool-id"
        },
        "awsec2": {
          "publicName": "aws-ec2-public-name",
          "serverPort": 8080
        },
        "threadbare": {
          "server": null
        }
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"body\" is a required property",
      "python_error": "Additional properties are not allowed ('pageLoadTimeout2' was unexpected)\n\nFailed validating 'additionalProperties' in schema:\n    {'type': 'object',\n     'additionalProperties': False,\n     'properties': {'appId': {'type': 'string',\n                              'default': 'MBOAPPL',\n                              'description': '5-7 letter capitalized '\n                                             'abbreviated word '\n                                             'representing the application',\n                              'pattern': '^[\\\\w]{5,7}$'},\n                    'appName': {'type': 'string',\n                                'default': 'MBO Application',\n                                'description': 'Application Name'},\n                    'pageLoadTimeout': {'type': 'integer',\n                                        'default': 60000,\n                                        'minimum': 30000,\n                                        'maximum': 120000},\n                    'elementFindTimeout': {'type': '.. (12230 more)",
      "data": {
        "appId": "MBOAPPL",
        "appName": "MBO Application",
        "pageLoadTimeout": 60000,
        "elementFindTimeout": 8,
        "soundfx": false,
        "headless": false,
        "invocationCount": 1,
        "mode": "local",
        "runnerParallelism": "feature",
        "threadCount": 1,
        "clients": "chrome",
        "clientParallelism": "stacked",
        "video": {
          "enabled": true,
          "location": "/path/to/video/location",
          "format": "mp4",
          "prefix": "test-video-"
        },
        "networkLogs": {
          "enabled": true,
          "request": {
            "headers": true,
            "cookies": true,
            "body": true
          },
          "response": {
            "headers": true,
            "cookies": true
          }
        },
        "email": {
          "auth": {
            "$clientId": "email-client-id",
            "$clientSecret": "email-client-secret",
            "$refreshToken": "email-refresh-token",
            "$refreshUrl": "https://email-refresh-url.com"
          },
          "invitationLinkRegex": "invitation-link-regex",
          "oktaTokenRegex": "okta-token-regex"
        },
        "mongodb": {
          "enabled": true,
          "username": "mongodb-username",
          "password": "mongodb-password",
          "connectionString": "mongodb://localhost:27017",
          "database": "test-database",
          "collection": {
            "report": "test-collection"
          }
        },
        "awss3": {
          "enabled": true,
          "accessKeyId": "aws-s3-access-key-id",
          "secretAccessKey": "aws-s3-secret-access-key",
          "region": "us-east-1",
          "bucket": "test-bucket",
          "identityPoolId": "aws-s3-identity-pool-id"
        },
        "awsec2": {
          "publicName": "aws-ec2-public-name",
          "serverPort": 8080
        },
        "threadbare": {
          "server": {}
        },
        "pageLoadTimeout2": 60000
      }
    }
  ]
}