{
  "description": "sample Github_medium/o90740.json",
  "meta": {
    "full_size": 2515,
    "stripped_size": 779,
    "features": [
      "@minmaxInteger",
      "@minmaxNumber"
    ],
    "raw_features": [
      "minimum",
      "properties",
      "required",
      "type",
      "type:boolean",
      "type:integer",
      "type:number",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "properties": {
      "marathon-lb": {
        "properties": {
          "auto-assign-service-ports": {
            "default": false,
            "description": "Auto assign service ports for tasks which use IP-per-task. See https://github.com/mesosphere/marathon-lb#mesos-with-ip-per-task-support for details.",
            "type": "boolean"
          },
          "bind-http-https": {
            "default": true,
            "description": "Reserve ports 80 and 443 for the LB. Use this if you intend to use virtual hosts.",
            "type": "boolean"
          },
          "cpus": {
            "default": 2,
            "description": "CPU shares to allocate to each marathon-lb instance.",
            "minimum": 1,
            "type": "number"
          },
          "haproxy-group": {
            "default": "external",
            "description": "HAProxy group parameter. Matches with HAPROXY_GROUP in the app labels.",
            "type": "string"
          },
          "haproxy-map": {
            "default": true,
            "description": "Enable HAProxy VHost maps for fast VHost routing.",
            "type": "boolean"
          },
          "haproxy_global_default_options": {
            "default": "redispatch,http-server-close,dontlognull",
            "description": "Default global options for HAProxy.",
            "type": "string"
          },
          "instances": {
            "default": 1,
            "description": "Number of instances to run.",
            "minimum": 1,
            "type": "integer"
          },
          "marathon-uri": {
            "default": "http://marathon.mesos:8080",
            "description": "URI of Marathon instance",
            "type": "string"
          },
          "maximumOverCapacity": {
            "default": 0.2,
            "description": "Maximum over capacity.",
            "minimum": 0,
            "type": "number"
          },
          "mem": {
            "default": 1024.0,
            "description": "Memory (MB) to allocate to each marathon-lb task.",
            "minimum": 256.0,
            "type": "number"
          },
          "minimumHealthCapacity": {
            "default": 0.5,
            "description": "Minimum health capacity.",
            "minimum": 0,
            "type": "number"
          },
          "name": {
            "default": "marathon-lb",
            "description": "Name for this LB instance",
            "type": "string"
          },
          "role": {
            "default": "slave_public",
            "description": "Deploy marathon-lb only on nodes with this role.",
            "type": "string"
          },
          "secret_name": {
            "default": "",
            "description": "Name of the Secret Store credentials to use for DC/OS service authentication. This should be left empty unless service authentication is needed.",
            "type": "string"
          },
          "ssl-cert": {
            "description": "TLS Cert and private key for HTTPS.",
            "type": "string"
          },
          "sysctl-params": {
            "default": "net.ipv4.tcp_tw_reuse=1 net.ipv4.tcp_fin_timeout=30 net.ipv4.tcp_max_syn_backlog=10240 net.ipv4.tcp_max_tw_buckets=400000 net.ipv4.tcp_max_orphans=60000 net.core.somaxconn=10000",
            "description": "sysctl params to set at startup for HAProxy.",
            "type": "string"
          },
          "template-url": {
            "default": "",
            "description": "URL to tarball containing a directory templates/ to customize haproxy config.",
            "type": "string"
          }
        },
        "required": [
          "cpus",
          "mem",
          "haproxy-group",
          "instances",
          "name"
        ],
        "type": "object"
      }
    },
    "type": "object"
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "marathon-lb": {
          "auto-assign-service-ports": false,
          "bind-http-https": true,
          "cpus": 2,
          "haproxy-group": "external",
          "haproxy-map": true,
          "haproxy_global_default_options": "redispatch,http-server-close,dontlognull",
          "instances": 1,
          "marathon-uri": "http://marathon.mesos:8080",
          "maximumOverCapacity": 0.2,
          "mem": 1024.0,
          "minimumHealthCapacity": 0.5,
          "name": "marathon-lb",
          "role": "slave_public",
          "secret_name": "",
          "ssl-cert": "",
          "sysctl-params": "net.ipv4.tcp_tw_reuse=1 net.ipv4.tcp_fin_timeout=30 net.ipv4.tcp_max_syn_backlog=10240 net.ipv4.tcp_max_tw_buckets=400000 net.ipv4.tcp_max_orphans=60000 net.core.somaxconn=10000",
          "template-url": ""
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on minimum keyword",
      "valid": false,
      "rust_error": "0.5 is less than the minimum of 1",
      "python_error": "0.5 is less than the minimum of 1\n\nFailed validating 'minimum' in schema['properties']['marathon-lb']['properties']['cpus']:\n    {'default': 2,\n     'description': 'CPU shares to allocate to each marathon-lb instance.',\n     'minimum': 1,\n     'type': 'number'}\n\nOn instance['marathon-lb']['cpus']:\n    0.5",
      "data": {
        "marathon-lb": {
          "auto-assign-service-ports": false,
          "bind-http-https": true,
          "cpus": 0.5,
          "haproxy-group": "external",
          "haproxy-map": true,
          "haproxy_global_default_options": "redispatch,http-server-close,dontlognull",
          "instances": 1,
          "marathon-uri": "http://marathon.mesos:8080",
          "maximumOverCapacity": 0.2,
          "mem": 1024.0,
          "minimumHealthCapacity": 0.5,
          "name": "marathon-lb",
          "role": "slave_public",
          "secret_name": "",
          "ssl-cert": "",
          "sysctl-params": "net.ipv4.tcp_tw_reuse=1 net.ipv4.tcp_fin_timeout=30 net.ipv4.tcp_max_syn_backlog=10240 net.ipv4.tcp_max_tw_buckets=400000 net.ipv4.tcp_max_orphans=60000 net.core.somaxconn=10000",
          "template-url": ""
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on minimum keyword",
      "valid": false,
      "rust_error": "0 is less than the minimum of 1",
      "python_error": "0 is less than the minimum of 1\n\nFailed validating 'minimum' in schema['properties']['marathon-lb']['properties']['cpus']:\n    {'default': 2,\n     'description': 'CPU shares to allocate to each marathon-lb instance.',\n     'minimum': 1,\n     'type': 'number'}\n\nOn instance['marathon-lb']['cpus']:\n    0",
      "data": {
        "marathon-lb": {
          "auto-assign-service-ports": false,
          "bind-http-https": true,
          "cpus": 0,
          "haproxy-group": "external",
          "haproxy-map": true,
          "haproxy_global_default_options": "redispatch,http-server-close,dontlognull",
          "instances": 1,
          "marathon-uri": "http://marathon.mesos:8080",
          "maximumOverCapacity": 0.2,
          "mem": 1024.0,
          "minimumHealthCapacity": 0.5,
          "name": "marathon-lb",
          "role": "slave_public",
          "secret_name": "",
          "ssl-cert": "",
          "sysctl-params": "net.ipv4.tcp_tw_reuse=1 net.ipv4.tcp_fin_timeout=30 net.ipv4.tcp_max_syn_backlog=10240 net.ipv4.tcp_max_tw_buckets=400000 net.ipv4.tcp_max_orphans=60000 net.core.somaxconn=10000",
          "template-url": ""
        }
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "0 is less than the minimum of 1",
      "python_error": "'mem' is a required property\n\nFailed validating 'required' in schema['properties']['marathon-lb']:\n    {'properties': {'auto-assign-service-ports': {'default': False,\n                                                  'description': 'Auto '\n                                                                 'assign '\n                                                                 'service '\n                                                                 'ports '\n                                                                 'for '\n                                                                 'tasks '\n                                                                 'which '\n                                                                 'use '\n                                                                 'IP-per-task. '\n                                                                 'See '\n                                                                 'https://github.com/mesosphere/marathon-lb#mesos-.. (6728 more)",
      "data": {
        "marathon-lb": {
          "auto-assign-service-ports": false,
          "bind-http-https": true,
          "cpus": 0,
          "minimum value of cpus should be 1": "haproxy-group",
          "missing property": "marathon-lb2"
        }
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "marathon-lb": {
          "auto-assign-service-ports": false,
          "bind-http-https": true,
          "cpus": 2,
          "haproxy-group": "external",
          "haproxy-map": true,
          "haproxy_global_default_options": "redispatch,http-server-close,dontlognull",
          "instances": 1,
          "marathon-uri": "http://marathon.mesos:8080",
          "maximumOverCapacity": 0.2,
          "mem": 1024.0,
          "minimumHealthCapacity": 0.5,
          "name": "marathon-lb",
          "role": "slave_public",
          "secret_name": "",
          "sysctl-params": "net.ipv4.tcp_tw_reuse=1 net.ipv4.tcp_fin_timeout=30 net.ipv4.tcp_max_syn_backlog=10240 net.ipv4.tcp_max_tw_buckets=400000 net.ipv4.tcp_max_orphans=60000 net.core.somaxconn=10000",
          "template-url": ""
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on minimum keyword",
      "valid": false,
      "rust_error": "0 is less than the minimum of 1",
      "python_error": "'haproxy-group' is a required property\n\nFailed validating 'required' in schema['properties']['marathon-lb']:\n    {'properties': {'auto-assign-service-ports': {'default': False,\n                                                  'description': 'Auto '\n                                                                 'assign '\n                                                                 'service '\n                                                                 'ports '\n                                                                 'for '\n                                                                 'tasks '\n                                                                 'which '\n                                                                 'use '\n                                                                 'IP-per-task. '\n                                                                 'See '\n                                                                 'https://github.com/mesosphere/marathon.. (7421 more)",
      "data": {
        "marathon-lb": {
          "auto-assign-service-ports": false,
          "bind-http-https": true,
          "cpus": 0,
          "<--- Change cpus to 0, which is less than the minimum 1 specified in the schema": "haproxy-group",
          "haproxy-map": true,
          "haproxy_global_default_options": "redispatch,http-server-close,dontlognull",
          "instances": 1,
          "marathon-uri": "http://marathon.mesos:8080",
          "maximumOverCapacity": 0.2,
          "mem": 1024.0,
          "minimumHealthCapacity": 0.5,
          "name": "marathon-lb",
          "role": "slave_public",
          "secret_name": "",
          "sysctl-params": "net.ipv4.tcp_tw_reuse=1 net.ipv4.tcp_fin_timeout=30 net.ipv4.tcp_max_syn_backlog=10240 net.ipv4.tcp_max_tw_buckets=400000 net.ipv4.tcp_max_orphans=60000 net.core.somaxconn=10000",
          "template-url": ""
        }
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "0 is less than the minimum of 1",
      "python_error": "'mem' is a required property\n\nFailed validating 'required' in schema['properties']['marathon-lb']:\n    {'properties': {'auto-assign-service-ports': {'default': False,\n                                                  'description': 'Auto '\n                                                                 'assign '\n                                                                 'service '\n                                                                 'ports '\n                                                                 'for '\n                                                                 'tasks '\n                                                                 'which '\n                                                                 'use '\n                                                                 'IP-per-task. '\n                                                                 'See '\n                                                                 'https://github.com/mesosphere/marathon-lb#mesos-.. (9443 more)",
      "data": {
        "marathon-lb": {
          "auto-assign-service-ports": false,
          "bind-http-https": true,
          "cpus": 0,
          "minimum CPU shares must be 1": "haproxy-group",
          "required property missing: 'haproxy-group'": "haproxy-map",
          "required property missing: 'haproxy-map'": "instances",
          "required property missing: 'instances'": "name",
          "required property missing: 'name'": "mem",
          "required property missing: 'mem'": "marathon-uri",
          "required property missing: 'marathon-uri'": "maximumOverCapacity",
          "required property missing: 'maximumOverCapacity'": "minimumHealthCapacity",
          "required property missing: 'minimumHealthCapacity'": "role",
          "required property missing: 'role'": "secret_name",
          "required property missing: 'secret_name'": "sysctl-params",
          "required property missing: 'sysctl-params'": "template-url",
          "required property missing: 'template-url'": "additionalProperties",
          "no additional properties are allowed ('additionalProperties' keyword is absent from the schema, which means additional properties are forbidden)": "test",
          "additional properties are not allowed (would be invalid due to 'additionalProperties' keyword being absent from the schema)": "required property 'cpus' is missing, and is set to '0' (minimum is 1)"
        }
      }
    }
  ]
}