{
  "description": "sample Github_easy/o90920.json",
  "meta": {
    "full_size": 575,
    "stripped_size": 262,
    "features": [
      "@minmaxItems",
      "items"
    ],
    "raw_features": [
      "$schema",
      "minItems",
      "properties",
      "required",
      "type",
      "type:array",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "title": "Task workload",
    "description": "Format of workload that's sending from Gearman Client to Gearman Worker",
    "type": "object",
    "properties": {
      "key": {
        "description": "Request key for sign notifications and data in storage",
        "type": "string"
      },
      "commands": {
        "description": "Array of commands",
        "type": "array",
        "minItems": 1,
        "items": {
          "type": "object",
          "properties": {
            "name": {
              "description": "Name of command",
              "type": "string"
            },
            "params": {
              "description": "Array of command params with key => value pairs",
              "type": "object"
            }
          },
          "required": [
            "name"
          ]
        }
      }
    }
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "key": "example_request_key",
        "commands": [
          {
            "name": "command_1",
            "params": {
              "param_1": "value_1",
              "param_2": "value_2"
            }
          },
          {
            "name": "command_2",
            "params": {
              "param_3": "value_3",
              "param_4": "value_4"
            }
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on minItems keyword",
      "valid": false,
      "rust_error": "[] has less than 1 item",
      "python_error": "[] should be non-empty\n\nFailed validating 'minItems' in schema['properties']['commands']:\n    {'description': 'Array of commands',\n     'type': 'array',\n     'minItems': 1,\n     'items': {'type': 'object',\n               'properties': {'name': {'description': 'Name of command',\n                                       'type': 'string'},\n                              'params': {'description': 'Array of command '\n                                                        'params with key '\n                                                        '=> value pairs',\n                                         'type': 'object'}},\n               'required': ['name']}}\n\nOn instance['commands']:\n    []",
      "data": {
        "key": "example_request_key",
        "commands": []
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"name\" is a required property",
      "python_error": "'name' is a required property\n\nFailed validating 'required' in schema['properties']['commands']['items']:\n    {'type': 'object',\n     'properties': {'name': {'description': 'Name of command',\n                             'type': 'string'},\n                    'params': {'description': 'Array of command params '\n                                              'with key => value pairs',\n                               'type': 'object'}},\n     'required': ['name']}\n\nOn instance['commands'][0]:\n    {'params': {'param_1': 'value_1', 'param_2': 'value_2'}}",
      "data": {
        "key": "example_request_key",
        "commands": [
          {
            "params": {
              "param_1": "value_1",
              "param_2": "value_2"
            }
          },
          {
            "name": "command_2",
            "params": {
              "param_3": "value_3",
              "param_4": "value_4"
            }
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"name\" is a required property",
      "python_error": "'name' is a required property\n\nFailed validating 'required' in schema['properties']['commands']['items']:\n    {'type': 'object',\n     'properties': {'name': {'description': 'Name of command',\n                             'type': 'string'},\n                    'params': {'description': 'Array of command params '\n                                              'with key => value pairs',\n                               'type': 'object'}},\n     'required': ['name']}\n\nOn instance['commands'][1]:\n    {'params': {'param_3': 'value_3', 'param_4': 'value_4'}}",
      "data": {
        "key": "example_request_key",
        "commands": [
          {
            "name": "command_1",
            "params": {
              "param_1": "value_1",
              "param_2": "value_2"
            }
          },
          {
            "params": {
              "param_3": "value_3",
              "param_4": "value_4"
            }
          }
        ]
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "key": "example_request_key",
        "commands": [
          {
            "name": "example_command_1",
            "params": {
              "param1": "value1",
              "param2": "value2"
            }
          },
          {
            "name": "example_command_2",
            "params": {
              "param3": "value3",
              "param4": "value4"
            }
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"name\" is a required property",
      "python_error": "'name' is a required property\n\nFailed validating 'required' in schema['properties']['commands']['items']:\n    {'type': 'object',\n     'properties': {'name': {'description': 'Name of command',\n                             'type': 'string'},\n                    'params': {'description': 'Array of command params '\n                                              'with key => value pairs',\n                               'type': 'object'}},\n     'required': ['name']}\n\nOn instance['commands'][0]:\n    {'params': {'param1': 'value1', 'param2': 'value2'}}",
      "data": {
        "key": "example_request_key",
        "commands": [
          {
            "params": {
              "param1": "value1",
              "param2": "value2"
            }
          }
        ]
      }
    }
  ]
}