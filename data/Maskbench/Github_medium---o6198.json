{
  "description": "sample Github_medium/o6198.json",
  "meta": {
    "full_size": 985,
    "stripped_size": 985,
    "features": [
      "@minmaxLength",
      "additionalProperties",
      "enum",
      "items",
      "pattern"
    ],
    "raw_features": [
      "$schema",
      "_boolSchema",
      "maxLength",
      "minLength",
      "properties",
      "required",
      "type",
      "type:array",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "type": "object",
    "properties": {
      "name": {
        "type": "string",
        "minLength": 1,
        "maxLength": 255
      },
      "deviceName": {
        "type": "string",
        "minLength": 1,
        "maxLength": 255
      },
      "description": {
        "type": "string",
        "maxLength": 32767
      },
      "deviceDescription": {
        "type": "string",
        "maxLength": 32767
      },
      "tags": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "pattern": "^[0-9a-zA-Z_-]{1,255}$"
            },
            "value": {
              "type": "string",
              "minLength": 1,
              "maxLength": 255
            }
          },
          "required": [
            "key",
            "value"
          ],
          "additionalProperties": false
        }
      },
      "attributes": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "pattern": "^[0-9a-zA-Z_-]{1,255}$"
            },
            "dataType": {
              "type": "string",
              "enum": [
                "string",
                "number",
                "gps",
                "boolean"
              ]
            }
          },
          "required": [
            "name",
            "dataType"
          ],
          "additionalProperties": false
        }
      },
      "deviceClass": {
        "type": "string",
        "enum": [
          "standalone",
          "master",
          "owned",
          "floating",
          "virtual"
        ]
      },
      "masterId": {
        "type": "string",
        "pattern": "^[A-Fa-f\\d]{24}$"
      }
    },
    "additionalProperties": false
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "name": "Example Device",
        "deviceName": "Example Device Name",
        "description": "This is an example device.",
        "deviceDescription": "This is an example device description.",
        "tags": [
          {
            "key": "example-tag",
            "value": "Example tag value"
          },
          {
            "key": "another-tag",
            "value": "Another tag value"
          }
        ],
        "attributes": [
          {
            "name": "example-attribute",
            "dataType": "string"
          },
          {
            "name": "another-attribute",
            "dataType": "number"
          }
        ],
        "deviceClass": "standalone",
        "masterId": "1234567890abcdef12345678"
      }
    },
    {
      "description": "llama-70b generated negative; focus on minLength keyword or maxLength keyword",
      "valid": false,
      "rust_error": "\"\" is shorter than 1 character",
      "python_error": "'' should be non-empty\n\nFailed validating 'minLength' in schema['properties']['name']:\n    {'type': 'string', 'minLength': 1, 'maxLength': 255}\n\nOn instance['name']:\n    ''",
      "data": {
        "name": "",
        "deviceName": "Example Device Name",
        "description": "This is an example device.",
        "deviceDescription": "This is an example device description.",
        "tags": [
          {
            "key": "example-tag",
            "value": "Example tag value"
          },
          {
            "key": "another-tag",
            "value": "Another tag value"
          }
        ],
        "attributes": [
          {
            "name": "example-attribute",
            "dataType": "string"
          },
          {
            "name": "another-attribute",
            "dataType": "number"
          }
        ],
        "deviceClass": "standalone",
        "masterId": "1234567890abcdef12345678"
      }
    },
    {
      "description": "llama-70b generated negative; focus on pattern keyword",
      "valid": false,
      "rust_error": "\"example-tag!\" does not match \"^[0-9a-zA-Z_-]{1,255}$\"",
      "python_error": "'1234567890abcdef123456789' does not match '^[A-Fa-f\\\\d]{24}$'\n\nFailed validating 'pattern' in schema['properties']['masterId']:\n    {'type': 'string', 'pattern': '^[A-Fa-f\\\\d]{24}$'}\n\nOn instance['masterId']:\n    '1234567890abcdef123456789'",
      "data": {
        "name": "Example Device",
        "deviceName": "Example Device Name",
        "description": "This is an example device.",
        "deviceDescription": "This is an example device description.",
        "tags": [
          {
            "key": "example-tag!",
            "value": "Example tag value"
          },
          {
            "key": "another-tag",
            "value": "Another tag value"
          }
        ],
        "attributes": [
          {
            "name": "example-attribute",
            "dataType": "string"
          },
          {
            "name": "another-attribute!",
            "dataType": "number"
          }
        ],
        "deviceClass": "standalone",
        "masterId": "1234567890abcdef123456789"
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"invalid-tag!\" does not match \"^[0-9a-zA-Z_-]{1,255}$\"",
      "python_error": "'1234567890abcdef123456789' does not match '^[A-Fa-f\\\\d]{24}$'\n\nFailed validating 'pattern' in schema['properties']['masterId']:\n    {'type': 'string', 'pattern': '^[A-Fa-f\\\\d]{24}$'}\n\nOn instance['masterId']:\n    '1234567890abcdef123456789'",
      "data": {
        "name": "Example Device",
        "deviceName": "Example Device Name",
        "description": "This is an example device.",
        "deviceDescription": "This is an example device description.",
        "tags": [
          {
            "key": "example-tag",
            "value": "Example tag value"
          },
          {
            "key": "another-tag",
            "value": "Another tag value"
          },
          {
            "key": "invalid-tag!",
            "value": "Invalid tag value"
          }
        ],
        "attributes": [
          {
            "name": "example-attribute",
            "dataType": "string"
          },
          {
            "name": "another-attribute",
            "dataType": "number"
          },
          {
            "name": "invalid-attribute",
            "dataType": "invalid"
          }
        ],
        "deviceClass": "standalone",
        "masterId": "1234567890abcdef123456789"
      }
    },
    {
      "description": "llama-70b generated negative; focus on pattern keyword",
      "valid": false,
      "rust_error": "\"example-tag!\" does not match \"^[0-9a-zA-Z_-]{1,255}$\"",
      "python_error": "'example-tag!' does not match '^[0-9a-zA-Z_-]{1,255}$'\n\nFailed validating 'pattern' in schema['properties']['tags']['items']['properties']['key']:\n    {'type': 'string', 'pattern': '^[0-9a-zA-Z_-]{1,255}$'}\n\nOn instance['tags'][0]['key']:\n    'example-tag!'",
      "data": {
        "name": "Example Device",
        "deviceName": "Example Device Name",
        "description": "This is an example device.",
        "deviceDescription": "This is an example device description.",
        "tags": [
          {
            "key": "example-tag!",
            "value": "Example tag value"
          },
          {
            "key": "another-tag",
            "value": "Another tag value"
          }
        ],
        "attributes": [
          {
            "name": "example-attribute",
            "dataType": "string"
          },
          {
            "name": "another-attribute",
            "dataType": "number"
          }
        ],
        "deviceClass": "standalone",
        "masterId": "1234567890abcdef12345678"
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "name": "Device Example",
        "deviceName": "Device Name Example",
        "description": "This is a device example",
        "deviceDescription": "This is a device description example",
        "tags": [
          {
            "key": "example-tag",
            "value": "example-tag-value"
          },
          {
            "key": "another-tag",
            "value": "another-tag-value"
          }
        ],
        "attributes": [
          {
            "name": "example-attribute",
            "dataType": "string"
          },
          {
            "name": "another-attribute",
            "dataType": "number"
          }
        ],
        "deviceClass": "standalone",
        "masterId": "1234567890abcdef12345678"
      }
    },
    {
      "description": "llama-70b generated negative; focus on pattern keyword",
      "valid": false,
      "rust_error": "\"example-tag!\" does not match \"^[0-9a-zA-Z_-]{1,255}$\"",
      "python_error": "'example-tag!' does not match '^[0-9a-zA-Z_-]{1,255}$'\n\nFailed validating 'pattern' in schema['properties']['tags']['items']['properties']['key']:\n    {'type': 'string', 'pattern': '^[0-9a-zA-Z_-]{1,255}$'}\n\nOn instance['tags'][0]['key']:\n    'example-tag!'",
      "data": {
        "name": "Device Example",
        "deviceName": "Device Name Example",
        "description": "This is a device example",
        "deviceDescription": "This is a device description example",
        "tags": [
          {
            "key": "example-tag!",
            "value": "example-tag-value"
          },
          {
            "key": "another-tag",
            "value": "another-tag-value"
          }
        ],
        "attributes": [
          {
            "name": "example-attribute",
            "dataType": "string"
          },
          {
            "name": "another-attribute",
            "dataType": "number"
          }
        ],
        "deviceClass": "standalone",
        "masterId": "1234567890abcdef12345678"
      }
    },
    {
      "description": "llama-70b generated negative; focus on minLength keyword or maxLength keyword",
      "valid": false,
      "rust_error": "\"\" is shorter than 1 character",
      "python_error": "'' should be non-empty\n\nFailed validating 'minLength' in schema['properties']['name']:\n    {'type': 'string', 'minLength': 1, 'maxLength': 255}\n\nOn instance['name']:\n    ''",
      "data": {
        "name": "",
        "deviceName": "Device Name Example",
        "description": "This is a device example",
        "deviceDescription": "This is a device description example",
        "tags": [
          {
            "key": "example-tag",
            "value": "example-tag-value"
          },
          {
            "key": "another-tag",
            "value": "another-tag-value"
          }
        ],
        "attributes": [
          {
            "name": "example-attribute",
            "dataType": "string"
          },
          {
            "name": "another-attribute",
            "dataType": "number"
          }
        ],
        "deviceClass": "standalone",
        "masterId": "1234567890abcdef12345678"
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"\" is shorter than 1 character",
      "python_error": "Additional properties are not allowed ('extra-prop' was unexpected)\n\nFailed validating 'additionalProperties' in schema:\n    {'$schema': 'http://json-schema.org/draft-04/schema#',\n     'type': 'object',\n     'properties': {'name': {'type': 'string',\n                             'minLength': 1,\n                             'maxLength': 255},\n                    'deviceName': {'type': 'string',\n                                   'minLength': 1,\n                                   'maxLength': 255},\n                    'description': {'type': 'string', 'maxLength': 32767},\n                    'deviceDescription': {'type': 'string',\n                                          'maxLength': 32767},\n                    'tags': {'type': 'array',\n                             'items': {'type': 'object',\n                                       'properties': {'key': {'type': 'string',\n                                                              'pattern': '^[0-9a-zA-Z_-]{1,255}$'},\n                                          .. (2409 more)",
      "data": {
        "name": "a",
        "deviceName": "",
        "description": "This is a device example",
        "deviceDescription": "This is a device description example",
        "tags": [
          {
            "key": "example-tag",
            "value": "example-tag-value"
          },
          {
            "key": "!another-tag",
            "value": "another-tag-value"
          }
        ],
        "attributes": [
          {
            "name": "example-attribute",
            "dataType": "string"
          },
          {
            "name": "another-attribute",
            "dataType": "boolean"
          }
        ],
        "deviceClass": "standalone",
        "masterId": "1234567890abcdef123456789",
        "extra-prop": "should fail additionalProperties"
      }
    }
  ]
}