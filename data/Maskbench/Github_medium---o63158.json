{
  "description": "sample Github_medium/o63158.json",
  "meta": {
    "full_size": 1354,
    "stripped_size": 1246,
    "features": [
      "$ref",
      "@siblingKeys",
      "enum",
      "items",
      "oneOf"
    ],
    "raw_features": [
      "definitions",
      "properties",
      "required",
      "type",
      "type:array",
      "type:boolean",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "definitions": {
      "filter": {
        "properties": {
          "column": {
            "type": "string"
          },
          "not": {
            "type": "boolean"
          },
          "operator": {
            "enum": [
              "equals",
              "regex"
            ]
          },
          "value": {
            "type": "string"
          }
        },
        "required": [
          "column",
          "operator",
          "value"
        ],
        "type": "object"
      },
      "linkout": {
        "oneOf": [
          {
            "required": [
              "featuretype"
            ]
          },
          {
            "required": [
              "featuretypePattern"
            ]
          }
        ],
        "properties": {
          "featuretype": {
            "type": "string"
          },
          "featuretypePattern": {
            "type": "string"
          },
          "isLinkingService": {
            "default": false,
            "type": "boolean"
          },
          "text": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        },
        "required": [
          "url"
        ],
        "type": "object"
      }
    },
    "description": "For more info, see https://github.com/ncgr/cmap-js",
    "properties": {
      "#": {
        "type": "string"
      },
      "attribution": {
        "type": "string"
      },
      "header": {
        "type": "string"
      },
      "initialView": {
        "items": {
          "properties": {
            "filters": {
              "items": {
                "$ref": "#/definitions/filter"
              },
              "type": "array"
            },
            "map": {
              "type": "string"
            },
            "source": {
              "type": "string"
            }
          },
          "required": [
            "source",
            "map"
          ],
          "type": "object"
        },
        "type": "array"
      },
      "sources": {
        "items": {
          "properties": {
            "#": {
              "type": "string"
            },
            "data": {
              "type": "object"
            },
            "filters": {
              "items": {
                "$ref": "#/definitions/filter"
              },
              "type": "array"
            },
            "id": {
              "type": "string"
            },
            "linkouts": {
              "items": {
                "$ref": "#/definitions/linkout"
              },
              "type": "array"
            },
            "method": {
              "type": "string"
            },
            "url": {
              "type": "string"
            }
          },
          "required": [
            "url",
            "method",
            "id"
          ],
          "type": "object"
        },
        "type": "array"
      }
    },
    "required": [
      "header",
      "attribution",
      "sources"
    ],
    "title": "cmap-js schema",
    "type": "object"
  },
  "tests": [
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "#": "example",
        "attribution": "Example attribution",
        "header": "Example header",
        "initialView": [
          {
            "filters": [
              {
                "column": "column1",
                "operator": "equals",
                "value": "value1"
              },
              {
                "column": "column2",
                "not": true,
                "operator": "regex",
                "value": "value2"
              }
            ],
            "map": "map1",
            "source": "source1"
          },
          {
            "filters": [
              {
                "column": "column3",
                "operator": "equals",
                "value": "value3"
              }
            ],
            "map": "map2",
            "source": "source2"
          }
        ],
        "sources": [
          {
            "#": "source1",
            "data": {},
            "filters": [
              {
                "column": "column4",
                "operator": "equals",
                "value": "value4"
              }
            ],
            "id": "id1",
            "linkouts": [
              {
                "featuretype": "featuretype1",
                "isLinkingService": true,
                "text": "text1",
                "url": "url1"
              },
              {
                "featuretypePattern": "featuretypePattern1",
                "text": "text2",
                "url": "url2"
              }
            ],
            "method": "method1",
            "url": "url1"
          },
          {
            "#": "source2",
            "data": {},
            "filters": [
              {
                "column": "column5",
                "operator": "equals",
                "value": "value5"
              }
            ],
            "id": "id2",
            "linkouts": [
              {
                "featuretype": "featuretype2",
                "text": "text3",
                "url": "url3"
              }
            ],
            "method": "method2",
            "url": "url2"
          }
        ]
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "#": "Example cmap-js configuration",
        "attribution": "Example attribution",
        "header": "Example header",
        "initialView": [
          {
            "filters": [
              {
                "column": "example_column",
                "operator": "equals",
                "value": "example_value"
              }
            ],
            "map": "example_map",
            "source": "example_source"
          }
        ],
        "sources": [
          {
            "#": "Example source",
            "data": {},
            "filters": [
              {
                "column": "example_column",
                "operator": "regex",
                "value": "example_value"
              }
            ],
            "id": "example_id",
            "linkouts": [
              {
                "featuretype": "example_featuretype",
                "isLinkingService": true,
                "text": "Example linkout text",
                "url": "https://example.com/linkout"
              },
              {
                "featuretypePattern": "example_featuretype_pattern",
                "isLinkingService": false,
                "text": "Example linkout text",
                "url": "https://example.com/linkout"
              }
            ],
            "method": "example_method",
            "url": "https://example.com/source"
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on oneOf keyword",
      "valid": false,
      "rust_error": "{\"featuretype\":\"example_featuretype\",\"featuretypePattern\":\"example_featuretype_pattern\",\"isLinkingService\":true,\"text\":\"Example linkout text\",\"url\":\"https://example.com/linkout\"} is valid under more than one of the schemas listed in the 'oneOf' keyword",
      "python_error": "{'featuretype': 'example_featuretype', 'featuretypePattern': 'example_featuretype_pattern', 'isLinkingService': True, 'text': 'Example linkout text', 'url': 'https://example.com/linkout'} is valid under each of {'required': ['featuretypePattern']}, {'required': ['featuretype']}\n\nFailed validating 'oneOf' in schema['properties']['sources']['items']['properties']['linkouts']['items']:\n    {'oneOf': [{'required': ['featuretype']},\n               {'required': ['featuretypePattern']}],\n     'properties': {'featuretype': {'type': 'string'},\n                    'featuretypePattern': {'type': 'string'},\n                    'isLinkingService': {'default': False,\n                                         'type': 'boolean'},\n                    'text': {'type': 'string'},\n                    'url': {'type': 'string'}},\n     'required': ['url'],\n     'type': 'object'}\n\nOn instance['sources'][0]['linkouts'][0]:\n    {'featuretype': 'example_featuretype',\n     'featuretypePattern': 'example_featuretype_pattern',\n     'isLink.. (98 more)",
      "data": {
        "#": "Example cmap-js configuration",
        "attribution": "Example attribution",
        "header": "Example header",
        "initialView": [
          {
            "filters": [
              {
                "column": "example_column",
                "operator": "equals",
                "value": "example_value"
              }
            ],
            "map": "example_map",
            "source": "example_source"
          }
        ],
        "sources": [
          {
            "#": "Example source",
            "data": {},
            "filters": [
              {
                "column": "example_column",
                "operator": "regex",
                "value": "example_value"
              }
            ],
            "id": "example_id",
            "linkouts": [
              {
                "featuretype": "example_featuretype",
                "featuretypePattern": "example_featuretype_pattern",
                "isLinkingService": true,
                "text": "Example linkout text",
                "url": "https://example.com/linkout"
              }
            ],
            "method": "example_method",
            "url": "https://example.com/source"
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"invalid_operator\" is not one of [\"equals\",\"regex\"]",
      "python_error": "'value' is a required property\n\nFailed validating 'required' in schema['properties']['initialView']['items']['properties']['filters']['items']:\n    {'properties': {'column': {'type': 'string'},\n                    'not': {'type': 'boolean'},\n                    'operator': {'enum': ['equals', 'regex']},\n                    'value': {'type': 'string'}},\n     'required': ['column', 'operator', 'value'],\n     'type': 'object'}\n\nOn instance['initialView'][0]['filters'][0]:\n    {'column': 'example_column',\n     'operator': 'invalid_operator',\n     \"Invalid operator, should be either 'equals' or 'regex'\": 'value',\n     'Missing colon after the property name, added an extra colon later': 'example_value'}",
      "data": {
        "#": "Example cmap-js configuration",
        "attribution": "Example attribution",
        "header": "Example header",
        "initialView": [
          {
            "filters": [
              {
                "column": "example_column",
                "operator": "invalid_operator",
                "Invalid operator, should be either 'equals' or 'regex'": "value",
                "Missing colon after the property name, added an extra colon later": "example_value"
              }
            ],
            "map": "example_map",
            "source": "example_source"
          }
        ],
        "sources": [
          {
            "#": "Example source",
            "data": {},
            "filters": [
              {
                "column": "example_column",
                "operator": "regex",
                "value": 123,
                "Value should be a string, not an integer": "Missing operator"
              }
            ],
            "id": "example_id",
            "linkouts": [
              {
                "featuretype": "example_featuretype",
                "isLinkingService": true,
                "text": "Example linkout text",
                "url": 123,
                "URL should be a string, not an integer": "Missing url"
              }
            ],
            "method": "example_method",
            "url": "https://example.com/source"
          }
        ]
      }
    }
  ]
}