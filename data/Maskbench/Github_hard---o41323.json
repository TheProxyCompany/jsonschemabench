{
  "description": "sample Github_hard/o41323.json",
  "meta": {
    "full_size": 1029,
    "stripped_size": 825,
    "features": [
      "enum"
    ],
    "raw_features": [
      "$schema",
      "properties",
      "required",
      "type",
      "type:boolean",
      "type:integer",
      "type:number",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "title": "Invocation manifest for ME-ICA: Multi-Echo Independent Components Analysis",
    "$schema": "http://json-schema.org/draft-04/schema#",
    "type": "object",
    "properties": {
      "config": {
        "type": "object",
        "properties": {
          "basetime": {
            "default": "0",
            "type": "string"
          },
          "mni": {
            "default": false,
            "type": "boolean"
          },
          "tr": {
            "type": "number"
          },
          "cpus": {
            "default": 2,
            "type": "integer"
          },
          "no_axialize": {
            "default": false,
            "type": "boolean"
          },
          "keep_int": {
            "default": false,
            "type": "boolean"
          },
          "tpattern_gen": {
            "default": false,
            "type": "boolean"
          },
          "native": {
            "default": false,
            "type": "boolean"
          },
          "daw": {
            "default": 10,
            "type": "integer"
          }
        },
        "required": [
          "basetime",
          "mni",
          "cpus",
          "no_axialize",
          "keep_int",
          "tpattern_gen",
          "native",
          "daw"
        ]
      },
      "inputs": {
        "type": "object",
        "properties": {
          "api_key": {
            "type": "object"
          },
          "functional": {
            "type": "object",
            "properties": {
              "type": {
                "enum": [
                  "dicom"
                ]
              }
            }
          },
          "anatomical": {
            "type": "object",
            "properties": {
              "type": {
                "enum": [
                  "nifti"
                ]
              }
            }
          },
          "slice_timing": {
            "type": "object",
            "properties": {
              "type": {
                "enum": [
                  "text"
                ]
              }
            }
          }
        },
        "required": [
          "api_key",
          "functional"
        ]
      }
    },
    "required": [
      "config",
      "inputs"
    ]
  },
  "tests": [
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "config": {
          "basetime": "0",
          "mni": false,
          "tr": 2.0,
          "cpus": 2,
          "no_axialize": false,
          "keep_int": false,
          "tpattern_gen": false,
          "native": false,
          "daw": 10
        },
        "inputs": {
          "api_key": {},
          "functional": {
            "type": "dicom",
            "data": "path/to/dicom/file"
          },
          "anatomical": {
            "type": "nifti",
            "data": "path/to/anatomical/file.nii.gz"
          },
          "slice_timing": {
            "type": "text",
            "data": "path/to/slice/timing/file.txt"
          }
        }
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "config": {
          "basetime": "0",
          "mni": false,
          "tr": 2.0,
          "cpus": 2,
          "no_axialize": false,
          "keep_int": false,
          "tpattern_gen": false,
          "native": false,
          "daw": 10
        },
        "inputs": {
          "api_key": {},
          "functional": {
            "type": "dicom"
          },
          "anatomical": {
            "type": "nifti"
          },
          "slice_timing": {
            "type": "text"
          }
        }
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "null is not of type \"string\"",
      "python_error": "None is not of type 'string'\n\nFailed validating 'type' in schema['properties']['config']['properties']['basetime']:\n    {'default': '0', 'type': 'string'}\n\nOn instance['config']['basetime']:\n    None",
      "data": {
        "config": {
          "basetime": null,
          "mni": false,
          "tr": 2.0,
          "cpus": 2,
          "no_axialize": false,
          "keep_int": false,
          "tpattern_gen": false,
          "native": false,
          "daw": 10
        },
        "inputs": {
          "api_key": {},
          "functional": {
            "type": "dicom"
          },
          "anatomical": {
            "type": "nifti"
          },
          "slice_timing": {
            "type": "text"
          }
        }
      }
    }
  ]
}