{
  "description": "sample Github_medium/o83292.json",
  "meta": {
    "full_size": 1600,
    "stripped_size": 608,
    "features": [
      "enum",
      "items"
    ],
    "raw_features": [
      "properties",
      "required",
      "type",
      "type:array",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "properties": {
      "clientId": {
        "description": "Client ID if workflow is to proxy client",
        "examples": [
          "bar"
        ],
        "type": "string"
      },
      "clientMethod": {
        "description": "Client method if workflow is to proxy client",
        "examples": [
          "Hello"
        ],
        "type": "string"
      },
      "endpointId": {
        "description": "Name of the endpoint",
        "examples": [
          "bar"
        ],
        "type": "string"
      },
      "endpointType": {
        "description": "Endpoint protocol type, either http or tchannel",
        "enum": [
          "http",
          "tchannel"
        ],
        "examples": [
          "http"
        ],
        "type": "string"
      },
      "handleId": {
        "description": "Name of the method",
        "examples": [
          "helloWorld"
        ],
        "type": "string"
      },
      "middlewares": {
        "items": {
          "description": "Middlewares the endpoint method depends on",
          "examples": [
            "example"
          ],
          "type": "string"
        },
        "type": "array"
      },
      "thriftFile": {
        "description": "Path to endpoint thrift file, relative to idl path",
        "examples": [
          "endpoints/bar/bar.thrift"
        ],
        "type": "string"
      },
      "thriftFileSha": {
        "description": "Sha of the thrift file, reserved but currently not used",
        "examples": [
          "{{placeholder}}"
        ],
        "type": "string"
      },
      "thriftMethodName": {
        "description": "Thrift method name, in format of service::method",
        "examples": [
          "Bar::helloWorld"
        ],
        "type": "string"
      },
      "workflowImportPath": {
        "description": "Workflow import path if workflow type is custom",
        "examples": [
          "github.com/uber/zanzibar/examples/example-gateway/endpoints/contacts"
        ],
        "type": "string"
      },
      "workflowType": {
        "description": "Workflow type, either httpClient, tchannelClient or custom",
        "enum": [
          "custom",
          "httpClient",
          "tchannelClient"
        ],
        "examples": [
          "custom"
        ],
        "type": "string"
      }
    },
    "required": [
      "endpointType",
      "endpointId",
      "handleId",
      "thriftFile",
      "thriftFileSha",
      "thriftMethodName",
      "workflowType"
    ],
    "type": "object"
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "clientId": "example-client",
        "clientMethod": "example-method",
        "endpointId": "example-endpoint",
        "endpointType": "http",
        "handleId": "example-handle",
        "middlewares": [
          "middleware-1",
          "middleware-2"
        ],
        "thriftFile": "endpoints/example/example.thrift",
        "thriftFileSha": "1234567890abcdef",
        "thriftMethodName": "Example::exampleMethod",
        "workflowImportPath": "github.com/uber/zanzibar/examples/example-gateway/endpoints/example",
        "workflowType": "custom"
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"ftp\" is not one of [\"http\",\"tchannel\"]",
      "python_error": "'handleId' is a required property\n\nFailed validating 'required' in schema:\n    {'properties': {'clientId': {'description': 'Client ID if workflow is '\n                                                'to proxy client',\n                                 'examples': ['bar'],\n                                 'type': 'string'},\n                    'clientMethod': {'description': 'Client method if '\n                                                    'workflow is to proxy '\n                                                    'client',\n                                     'examples': ['Hello'],\n                                     'type': 'string'},\n                    'endpointId': {'description': 'Name of the endpoint',\n                                   'examples': ['bar'],\n                                   'type': 'string'},\n                    'endpointType': {'description': 'Endpoint protocol '\n                                                    'type, either http or '\n                                         .. (3957 more)",
      "data": {
        "clientId": "example-client",
        "clientMethod": "example-method",
        "endpointId": "example-endpoint",
        "endpointType": "ftp",
        "Invalid endpoint type, should be either 'http' or 'tchannel'": "handleId",
        "Missing value for 'handleId', which is a required field": "example-handle",
        "middlewares": [
          "middleware-1",
          "middleware-2"
        ],
        "thriftFile": "endpoints/example/example.thrift",
        "thriftFileSha": "1234567890abcdef",
        "thriftMethodName": "Example::exampleMethod",
        "workflowImportPath": "github.com/uber/zanzibar/examples/example-gateway/endpoints/example",
        "workflowType": "custom"
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"https\" is not one of [\"http\",\"tchannel\"]",
      "python_error": "'handleId' is a required property\n\nFailed validating 'required' in schema:\n    {'properties': {'clientId': {'description': 'Client ID if workflow is '\n                                                'to proxy client',\n                                 'examples': ['bar'],\n                                 'type': 'string'},\n                    'clientMethod': {'description': 'Client method if '\n                                                    'workflow is to proxy '\n                                                    'client',\n                                     'examples': ['Hello'],\n                                     'type': 'string'},\n                    'endpointId': {'description': 'Name of the endpoint',\n                                   'examples': ['bar'],\n                                   'type': 'string'},\n                    'endpointType': {'description': 'Endpoint protocol '\n                                                    'type, either http or '\n                                         .. (4130 more)",
      "data": {
        "clientId": "example-client",
        "clientMethod": "example-method",
        "endpointId": "example-endpoint",
        "endpointType": "https",
        "Invalid endpoint type, should be either 'http' or 'tchannel'": "handleId",
        "example-handle": "Missing colon after property name",
        "middlewares": [
          "middleware-1",
          2,
          "Invalid type, should be a string"
        ],
        "thriftFile": "endpoints/example/example.thrift",
        "thriftFileSha": "1234567890abcdef",
        "thriftMethodName": "Example::exampleMethod",
        "workflowImportPath": "github.com/uber/zanzibar/examples/example-gateway/endpoints/example",
        "workflowType": "grpc",
        "Invalid workflow type, should be either 'custom', 'httpClient', or 'tchannelClient'": "extraProperty",
        "extraValue": "Extra property not defined in the schema"
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "clientId": "example-client",
        "clientMethod": "Hello",
        "endpointId": "example-endpoint",
        "endpointType": "http",
        "handleId": "helloWorld",
        "middlewares": [
          "example-middleware",
          "another-middleware"
        ],
        "thriftFile": "endpoints/example/example.thrift",
        "thriftFileSha": "1234567890abcdef",
        "thriftMethodName": "Example::helloWorld",
        "workflowImportPath": "github.com/uber/zanzibar/examples/example-gateway/endpoints/example",
        "workflowType": "custom"
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"grpc\" is not one of [\"http\",\"tchannel\"]",
      "python_error": "'grpc' is not one of ['http', 'tchannel']\n\nFailed validating 'enum' in schema['properties']['endpointType']:\n    {'description': 'Endpoint protocol type, either http or tchannel',\n     'enum': ['http', 'tchannel'],\n     'examples': ['http'],\n     'type': 'string'}\n\nOn instance['endpointType']:\n    'grpc'",
      "data": {
        "clientId": "example-client",
        "clientMethod": "Hello",
        "endpointId": "example-endpoint",
        "endpointType": "grpc",
        "grpc": "http",
        "handleId": "helloWorld",
        "middlewares": [
          "example-middleware",
          "another-middleware"
        ],
        "thriftFile": "endpoints/example/example.thrift",
        "thriftFileSha": "1234567890abcdef",
        "thriftMethodName": "Example::helloWorld",
        "workflowImportPath": "github.com/uber/zanzibar/examples/example-gateway/endpoints/example",
        "workflowType": "custom",
        "extraField": "extraValue"
      }
    }
  ]
}