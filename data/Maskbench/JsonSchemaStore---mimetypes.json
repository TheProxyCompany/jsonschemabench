{
  "description": "sample JsonSchemaStore/mimetypes.json",
  "meta": {
    "full_size": 332,
    "stripped_size": 246,
    "features": [
      "additionalProperties",
      "pattern",
      "patternProperties"
    ],
    "raw_features": [
      "$id",
      "$schema",
      "_boolSchema",
      "type",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$id": "https://json.schemastore.org/mimetypes.json",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "additionalProperties": false,
    "patternProperties": {
      "^\\..+$": {
        "description": "A file extension",
        "pattern": "^[a-zA-Z0-9-_.]+/[a-zA-Z0-9-_.]+$",
        "type": "string",
        "examples": [
          "application/json"
        ]
      }
    },
    "title": "Mime types",
    "type": "object"
  },
  "tests": [
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        ".txt": "text/plain",
        ".pdf": "application/pdf",
        ".jpg": "image/jpeg",
        ".mp3": "audio/mpeg"
      }
    },
    {
      "description": "llama-70b generated negative; focus on patternProperties keyword",
      "valid": false,
      "rust_error": "Additional properties are not allowed ('txt' was unexpected)",
      "python_error": "'txt' does not match any of the regexes: '^\\\\..+$'\n\nFailed validating 'additionalProperties' in schema:\n    {'$id': 'https://json.schemastore.org/mimetypes.json',\n     '$schema': 'http://json-schema.org/draft-07/schema#',\n     'additionalProperties': False,\n     'patternProperties': {'^\\\\..+$': {'description': 'A file extension',\n                                       'pattern': '^[a-zA-Z0-9-_.]+/[a-zA-Z0-9-_.]+$',\n                                       'type': 'string',\n                                       'examples': ['application/json']}},\n     'title': 'Mime types',\n     'type': 'object'}\n\nOn instance:\n    {'.txt': 'text/plain',\n     '.pdf': 'application/pdf',\n     '.jpg': 'image/jpeg',\n     '.mp3': 'audio/mpeg',\n     'txt': 'text/plain'}",
      "data": {
        ".txt": "text/plain",
        ".pdf": "application/pdf",
        ".jpg": "image/jpeg",
        ".mp3": "audio/mpeg",
        "txt": "text/plain"
      }
    },
    {
      "description": "llama-70b generated negative; focus on pattern keyword",
      "valid": false,
      "rust_error": "Additional properties are not allowed ('txt' was unexpected)",
      "python_error": "'txt' does not match any of the regexes: '^\\\\..+$'\n\nFailed validating 'additionalProperties' in schema:\n    {'$id': 'https://json.schemastore.org/mimetypes.json',\n     '$schema': 'http://json-schema.org/draft-07/schema#',\n     'additionalProperties': False,\n     'patternProperties': {'^\\\\..+$': {'description': 'A file extension',\n                                       'pattern': '^[a-zA-Z0-9-_.]+/[a-zA-Z0-9-_.]+$',\n                                       'type': 'string',\n                                       'examples': ['application/json']}},\n     'title': 'Mime types',\n     'type': 'object'}\n\nOn instance:\n    {'.txt': 'text/plain',\n     '.pdf': 'application/pdf',\n     '.jpg': 'image/jpeg',\n     '.mp3': 'audio/mpeg',\n     'txt': 'text/plain'}",
      "data": {
        ".txt": "text/plain",
        ".pdf": "application/pdf",
        ".jpg": "image/jpeg",
        ".mp3": "audio/mpeg",
        "txt": "text/plain"
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "Additional properties are not allowed ('invalid-key' was unexpected)",
      "python_error": "'invalid-key' does not match any of the regexes: '^\\\\..+$'\n\nFailed validating 'additionalProperties' in schema:\n    {'$id': 'https://json.schemastore.org/mimetypes.json',\n     '$schema': 'http://json-schema.org/draft-07/schema#',\n     'additionalProperties': False,\n     'patternProperties': {'^\\\\..+$': {'description': 'A file extension',\n                                       'pattern': '^[a-zA-Z0-9-_.]+/[a-zA-Z0-9-_.]+$',\n                                       'type': 'string',\n                                       'examples': ['application/json']}},\n     'title': 'Mime types',\n     'type': 'object'}\n\nOn instance:\n    {'.txt': 'text/plain',\n     '.pdf': 'application/pdf',\n     '.jpg': 'image/jpeg',\n     '.mp3': 'audio/mpeg',\n     'invalid-key': 'text/plain'}",
      "data": {
        ".txt": "text/plain",
        ".pdf": "application/pdf",
        ".jpg": "image/jpeg",
        ".mp3": "audio/mpeg",
        "invalid-key": "text/plain"
      }
    }
  ]
}