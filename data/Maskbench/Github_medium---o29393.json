{
  "description": "sample Github_medium/o29393.json",
  "meta": {
    "full_size": 1161,
    "stripped_size": 1114,
    "features": [
      "@minmaxItems",
      "enum",
      "items",
      "pattern",
      "patternProperties"
    ],
    "raw_features": [
      "minItems",
      "properties",
      "required",
      "type",
      "type:array",
      "type:boolean",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "description": "Schema for Pssimistical config",
    "properties": {
      "inputs": {
        "items": {
          "properties": {
            "path": {
              "type": "string"
            },
            "reader": {
              "type": "string"
            },
            "table": {
              "type": "string"
            }
          },
          "required": [
            "path",
            "table",
            "reader"
          ],
          "type": "object"
        },
        "minItems": 1,
        "type": "array"
      },
      "query": {
        "properties": {
          "outputFile": {
            "type": "string"
          },
          "outputFormat": {
            "type": "string"
          },
          "sql": {
            "type": "string"
          }
        },
        "required": [
          "sql",
          "outputFormat"
        ],
        "type": "object"
      },
      "readers": {
        "patternProperties": {
          "\\w+": {
            "properties": {
              "columnMappings": {
                "type": "object"
              },
              "columns": {
                "items": {
                  "type": "string"
                },
                "minItems": 1,
                "type": "array"
              },
              "readerProperties": {
                "type": "object"
              },
              "type": {
                "type": "string"
              }
            },
            "required": [
              "type",
              "columns"
            ],
            "type": "object"
          }
        },
        "type": "object"
      },
      "tables": {
        "items": {
          "properties": {
            "columns": {
              "items": {
                "properties": {
                  "index": {
                    "type": "boolean"
                  },
                  "name": {
                    "pattern": "^[a-zA-Z_][a-zA-Z0-9_]*$",
                    "type": "string"
                  },
                  "type": {
                    "enum": [
                      "number",
                      "text",
                      "date"
                    ]
                  }
                },
                "required": [
                  "name",
                  "type"
                ],
                "type": "object"
              },
              "minItems": 1,
              "type": "array"
            },
            "name": {
              "pattern": "^[a-zA-Z_][a-zA-Z0-9_]*$",
              "type": "string"
            }
          },
          "required": [
            "name",
            "columns"
          ],
          "type": "object"
        },
        "minItems": 1,
        "type": "array"
      }
    },
    "required": [
      "tables",
      "inputs"
    ],
    "type": "object"
  },
  "tests": [
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "inputs": [
          {
            "path": "/path/to/input1.csv",
            "reader": "csv",
            "table": "table1"
          },
          {
            "path": "/path/to/input2.csv",
            "reader": "csv",
            "table": "table2"
          }
        ],
        "query": {
          "outputFile": "/path/to/output.csv",
          "outputFormat": "csv",
          "sql": "SELECT * FROM table1 JOIN table2 ON table1.id = table2.id"
        },
        "readers": {
          "csv": {
            "columnMappings": {
              "column1": "new_column1",
              "column2": "new_column2",
              "column3": "new_column3"
            },
            "columns": [
              "column1",
              "column2",
              "column3"
            ],
            "readerProperties": {
              "delimiter": ",",
              "quoteChar": "\""
            },
            "type": "csv"
          }
        },
        "tables": [
          {
            "columns": [
              {
                "name": "id",
                "type": "number"
              },
              {
                "name": "name",
                "type": "text"
              },
              {
                "name": "date",
                "type": "date"
              }
            ],
            "name": "table1"
          },
          {
            "columns": [
              {
                "name": "id",
                "type": "number"
              },
              {
                "name": "age",
                "type": "number"
              },
              {
                "name": "city",
                "type": "text"
              }
            ],
            "name": "table2"
          }
        ]
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "inputs": [
          {
            "path": "/path/to/input1.csv",
            "reader": "csv",
            "table": "table1"
          },
          {
            "path": "/path/to/input2.csv",
            "reader": "csv",
            "table": "table2"
          }
        ],
        "query": {
          "outputFile": "/path/to/output.csv",
          "outputFormat": "csv",
          "sql": "SELECT * FROM table1 INNER JOIN table2 ON table1.id = table2.id"
        },
        "readers": {
          "csv": {
            "columnMappings": {
              "id": "id",
              "name": "name",
              "age": "age"
            },
            "columns": [
              "id",
              "name",
              "age"
            ],
            "readerProperties": {
              "delimiter": ","
            },
            "type": "csv"
          }
        },
        "tables": [
          {
            "columns": [
              {
                "index": true,
                "name": "id",
                "type": "number"
              },
              {
                "name": "name",
                "type": "text"
              },
              {
                "name": "age",
                "type": "number"
              }
            ],
            "name": "table1"
          },
          {
            "columns": [
              {
                "index": true,
                "name": "id",
                "type": "number"
              },
              {
                "name": "city",
                "type": "text"
              },
              {
                "name": "country",
                "type": "text"
              }
            ],
            "name": "table2"
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on minItems keyword",
      "valid": false,
      "rust_error": "[] has less than 1 item",
      "python_error": "[] should be non-empty\n\nFailed validating 'minItems' in schema['properties']['inputs']:\n    {'items': {'properties': {'path': {'type': 'string'},\n                              'reader': {'type': 'string'},\n                              'table': {'type': 'string'}},\n               'required': ['path', 'table', 'reader'],\n               'type': 'object'},\n     'minItems': 1,\n     'type': 'array'}\n\nOn instance['inputs']:\n    []",
      "data": {
        "inputs": [],
        "query": {
          "outputFile": "/path/to/output.csv",
          "outputFormat": "csv",
          "sql": "SELECT * FROM table1 INNER JOIN table2 ON table1.id = table2.id"
        },
        "readers": {
          "csv": {
            "columnMappings": {
              "id": "id",
              "name": "name",
              "age": "age"
            },
            "columns": [
              "id",
              "name",
              "age"
            ],
            "readerProperties": {
              "delimiter": ","
            },
            "type": "csv"
          }
        },
        "tables": [
          {
            "columns": [
              {
                "index": true,
                "name": "id",
                "type": "number"
              },
              {
                "name": "name",
                "type": "text"
              },
              {
                "name": "age",
                "type": "number"
              }
            ],
            "name": "table1"
          },
          {
            "columns": [
              {
                "index": true,
                "name": "id",
                "type": "number"
              },
              {
                "name": "city",
                "type": "text"
              },
              {
                "name": "country",
                "type": "text"
              }
            ],
            "name": "table2"
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on pattern keyword",
      "valid": false,
      "rust_error": "\"id!\" does not match \"^[a-zA-Z_][a-zA-Z0-9_]*$\"",
      "python_error": "'id!' does not match '^[a-zA-Z_][a-zA-Z0-9_]*$'\n\nFailed validating 'pattern' in schema['properties']['tables']['items']['properties']['columns']['items']['properties']['name']:\n    {'pattern': '^[a-zA-Z_][a-zA-Z0-9_]*$', 'type': 'string'}\n\nOn instance['tables'][0]['columns'][0]['name']:\n    'id!'",
      "data": {
        "inputs": [
          {
            "path": "/path/to/input1.csv",
            "reader": "csv",
            "table": "table1"
          },
          {
            "path": "/path/to/input2.csv",
            "reader": "csv",
            "table": "table2"
          }
        ],
        "query": {
          "outputFile": "/path/to/output.csv",
          "outputFormat": "csv",
          "sql": "SELECT * FROM table1 INNER JOIN table2 ON table1.id = table2.id"
        },
        "readers": {
          "csv": {
            "columnMappings": {
              "id": "id",
              "name": "name",
              "age": "age"
            },
            "columns": [
              "id",
              "name",
              "age"
            ],
            "readerProperties": {
              "delimiter": ","
            },
            "type": "csv"
          }
        },
        "tables": [
          {
            "columns": [
              {
                "index": true,
                "name": "id!",
                "type": "number"
              },
              {
                "name": "name",
                "type": "text"
              },
              {
                "name": "age",
                "type": "number"
              }
            ],
            "name": "table1"
          },
          {
            "columns": [
              {
                "index": true,
                "name": "id",
                "type": "number"
              },
              {
                "name": "city",
                "type": "text"
              },
              {
                "name": "country",
                "type": "text"
              }
            ],
            "name": "table2"
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"unknown\" is not one of [\"number\",\"text\",\"date\"]",
      "python_error": "'unknown' is not one of ['number', 'text', 'date']\n\nFailed validating 'enum' in schema['properties']['tables']['items']['properties']['columns']['items']['properties']['type']:\n    {'enum': ['number', 'text', 'date']}\n\nOn instance['tables'][1]['columns'][1]['type']:\n    'unknown'",
      "data": {
        "inputs": [
          {
            "path": "/path/to/input1.csv",
            "reader": "csv",
            "table": "table1"
          },
          {
            "path": "/path/to/input2.csv",
            "reader": "csv",
            "table": "table2"
          }
        ],
        "query": {
          "outputFile": "/path/to/output.csv",
          "outputFormat": "csv",
          "sql": "SELECT * FROM table1 INNER JOIN table2 ON table1.id = table2.id"
        },
        "readers": {
          "csv": {
            "columnMappings": {
              "id": "id",
              "name": "name",
              "age": "age"
            },
            "columns": [
              "id",
              "name",
              "age"
            ],
            "readerProperties": {
              "delimiter": ","
            },
            "type": "csv"
          }
        },
        "tables": [
          {
            "columns": [
              {
                "index": true,
                "name": "id",
                "type": "number"
              },
              {
                "name": "name",
                "type": "text"
              },
              {
                "name": "age",
                "type": "number"
              }
            ],
            "name": "table1"
          },
          {
            "name": "table2",
            "columns": [
              {
                "index": true,
                "name": "id",
                "type": "number"
              },
              {
                "name": "city",
                "type": "unknown"
              },
              {
                "name": "country",
                "type": "text"
              }
            ]
          }
        ]
      }
    }
  ]
}