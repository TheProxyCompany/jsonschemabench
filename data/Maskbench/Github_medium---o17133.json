{
  "description": "sample Github_medium/o17133.json",
  "meta": {
    "full_size": 1758,
    "stripped_size": 938,
    "features": [
      "additionalProperties",
      "items"
    ],
    "raw_features": [
      "$schema",
      "_boolSchema",
      "properties",
      "type",
      "type:[]",
      "type:array",
      "type:null",
      "type:number",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "title": "emailObj",
    "description": "Used to content of an email",
    "type": "object",
    "additionalProperties": false,
    "properties": {
      "status": {
        "type": "string",
        "description": "Status ot the email (queued, failed, sent)"
      },
      "hash": {
        "type": [
          "string",
          "null"
        ],
        "description": "Hash used to identify the email"
      },
      "content": {
        "type": "object",
        "description": "Size in bytes of all pictures captured (SUM storedJpgSize and storedRawSize)",
        "properties": {
          "FROM": {
            "type": "object",
            "properties": {
              "name": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "Full text name of the sender"
              },
              "email": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "Email of the sender"
              }
            }
          },
          "TO": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Full text name of the sender"
                },
                "email": {
                  "type": "string",
                  "description": "Email of the sender"
                }
              }
            }
          },
          "CC": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Full text name of the sender"
                },
                "email": {
                  "type": "string",
                  "description": "Email of the sender"
                }
              }
            }
          },
          "BCC": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Full text name of the sender"
                },
                "email": {
                  "type": "string",
                  "description": "Email of the sender"
                }
              }
            }
          },
          "BODY": {
            "type": [
              "string",
              "null"
            ],
            "description": "Body of the email"
          },
          "SUBJECT": {
            "type": [
              "string",
              "null"
            ],
            "description": "Subject of the email"
          },
          "ATTACHMENTS": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "PATH": {
                  "type": "string",
                  "description": "Full text name of the sender"
                },
                "NAME": {
                  "type": "string",
                  "description": "Email of the sender"
                },
                "WIDTH": {
                  "type": "number",
                  "description": "Width of the attachment, height will be calculated automatically"
                }
              }
            }
          }
        }
      },
      "logs": {
        "type": "array",
        "items": {
          "type": "string"
        }
      }
    }
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "status": "sent",
        "hash": "1234567890",
        "content": {
          "FROM": {
            "name": "John Doe",
            "email": "john.doe@example.com"
          },
          "TO": [
            {
              "name": "Jane Doe",
              "email": "jane.doe@example.com"
            },
            {
              "name": "Bob Smith",
              "email": "bob.smith@example.com"
            }
          ],
          "CC": [
            {
              "name": "Alice Johnson",
              "email": "alice.johnson@example.com"
            }
          ],
          "BCC": [
            {
              "name": "Mike Brown",
              "email": "mike.brown@example.com"
            }
          ],
          "BODY": "This is the body of the email.",
          "SUBJECT": "Test Email",
          "ATTACHMENTS": [
            {
              "PATH": "/path/to/attachment1.pdf",
              "NAME": "attachment1.pdf",
              "WIDTH": 800
            },
            {
              "PATH": "/path/to/attachment2.pdf",
              "NAME": "attachment2.pdf",
              "WIDTH": 1024
            }
          ]
        },
        "logs": [
          "Email sent successfully",
          "Attachment 1 uploaded successfully",
          "Attachment 2 uploaded successfully"
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on type keyword with an array of types",
      "valid": false,
      "rust_error": "1234567890 is not of types \"null\", \"string\"",
      "python_error": "1234567890 is not of type 'string', 'null'\n\nFailed validating 'type' in schema['properties']['hash']:\n    {'type': ['string', 'null'],\n     'description': 'Hash used to identify the email'}\n\nOn instance['hash']:\n    1234567890",
      "data": {
        "status": "sent",
        "hash": 1234567890,
        "content": {
          "FROM": {
            "name": "John Doe",
            "email": "john.doe@example.com"
          },
          "TO": [
            {
              "name": "Jane Doe",
              "email": "jane.doe@example.com"
            },
            {
              "name": "Bob Smith",
              "email": "bob.smith@example.com"
            }
          ],
          "CC": [
            {
              "name": "Alice Johnson",
              "email": "alice.johnson@example.com"
            }
          ],
          "BCC": [
            {
              "name": "Mike Brown",
              "email": "mike.brown@example.com"
            }
          ],
          "BODY": "This is the body of the email.",
          "SUBJECT": "Test Email",
          "ATTACHMENTS": [
            {
              "PATH": "/path/to/attachment1.pdf",
              "NAME": "attachment1.pdf",
              "WIDTH": 800
            },
            {
              "PATH": "/path/to/attachment2.pdf",
              "NAME": "attachment2.pdf",
              "WIDTH": 1024
            }
          ]
        },
        "logs": [
          "Email sent successfully",
          "Attachment 1 uploaded successfully",
          "Attachment 2 uploaded successfully"
        ]
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"800\" is not of type \"number\"",
      "python_error": "Additional properties are not allowed ('extraProperty' was unexpected)\n\nFailed validating 'additionalProperties' in schema:\n    {'$schema': 'http://json-schema.org/draft-04/schema#',\n     'title': 'emailObj',\n     'description': 'Used to content of an email',\n     'type': 'object',\n     'additionalProperties': False,\n     'properties': {'status': {'type': 'string',\n                               'description': 'Status ot the email '\n                                              '(queued, failed, sent)'},\n                    'hash': {'type': ['string', 'null'],\n                             'description': 'Hash used to identify the '\n                                            'email'},\n                    'content': {'type': 'object',\n                                'description': 'Size in bytes of all '\n                                               'pictures captured (SUM '\n                                               'storedJpgSize and '\n                                               'storedRawSize)',\n   .. (11184 more)",
      "data": {
        "status": "sent",
        "hash": "1234567890",
        "content": {
          "FROM": {
            "name": "John Doe",
            "email": "john.doe@example.com"
          },
          "TO": [
            {
              "name": "Jane Doe",
              "email": "jane.doe@example.com"
            },
            {
              "name": "Bob Smith",
              "email": "bob.smith@example.com"
            }
          ],
          "CC": [
            {
              "name": "Alice Johnson",
              "email": "alice.johnson@example.com"
            }
          ],
          "BCC": [
            {
              "name": "Mike Brown",
              "email": "mike.brown@example.com"
            }
          ],
          "BODY": "This is the body of the email.",
          "SUBJECT": "Test Email",
          "ATTACHMENTS": [
            {
              "PATH": "/path/to/attachment1.pdf",
              "NAME": "attachment1.pdf",
              "WIDTH": "800",
              "HEIGHT": 1024,
              "FORMAT": "PDF"
            },
            {
              "PATH": "/path/to/attachment2.pdf",
              "NAME": "attachment2.pdf",
              "WIDTH": 1024
            }
          ]
        },
        "logs": [
          "Email sent successfully",
          "Attachment 1 uploaded successfully",
          "Attachment 2 uploaded successfully"
        ],
        "extraProperty": "extraValue"
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"800\" is not of type \"number\"",
      "python_error": "12345 is not of type 'string'\n\nFailed validating 'type' in schema['properties']['logs']['items']:\n    {'type': 'string'}\n\nOn instance['logs'][3]:\n    12345",
      "data": {
        "status": "sent",
        "hash": "1234567890",
        "content": {
          "FROM": {
            "name": "John Doe",
            "email": "john.doe@example.com"
          },
          "TO": [
            {
              "name": "Jane Doe",
              "email": "jane.doe@example.com"
            },
            {
              "name": "Bob Smith",
              "email": "bob.smith@example.com"
            }
          ],
          "CC": [
            {
              "name": "Alice Johnson",
              "email": "alice.johnson@example.com"
            }
          ],
          "BCC": [
            {
              "name": "Mike Brown",
              "email": "mike.brown@example.com"
            }
          ],
          "BODY": "This is the body of the email.",
          "SUBJECT": "Test Email",
          "ATTACHMENTS": [
            {
              "PATH": "/path/to/attachment1.pdf",
              "NAME": "attachment1.pdf",
              "WIDTH": "800"
            },
            "invalidWidthProperty"
          ],
          "invalidProperty": "Invalid property"
        },
        "logs": [
          "Email sent successfully",
          "Attachment 1 uploaded successfully",
          "Attachment 2 uploaded successfully",
          12345
        ]
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "status": "sent",
        "hash": "1234567890",
        "content": {
          "FROM": {
            "name": "John Doe",
            "email": "john.doe@example.com"
          },
          "TO": [
            {
              "name": "Jane Doe",
              "email": "jane.doe@example.com"
            },
            {
              "name": "Bob Smith",
              "email": "bob.smith@example.com"
            }
          ],
          "CC": [
            {
              "name": "Alice Johnson",
              "email": "alice.johnson@example.com"
            }
          ],
          "BCC": [
            {
              "name": "Mike Brown",
              "email": "mike.brown@example.com"
            }
          ],
          "BODY": "This is the body of the email.",
          "SUBJECT": "Test Email",
          "ATTACHMENTS": [
            {
              "PATH": "/path/to/attachment1.pdf",
              "NAME": "attachment1.pdf",
              "WIDTH": 800
            },
            {
              "PATH": "/path/to/attachment2.pdf",
              "NAME": "attachment2.pdf",
              "WIDTH": 600
            }
          ]
        },
        "logs": [
          "Email sent successfully",
          "Attachment 1 uploaded successfully",
          "Attachment 2 uploaded successfully"
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on type keyword with an array of types",
      "valid": false,
      "rust_error": "1234567890 is not of types \"null\", \"string\"",
      "python_error": "1234567890 is not of type 'string', 'null'\n\nFailed validating 'type' in schema['properties']['hash']:\n    {'type': ['string', 'null'],\n     'description': 'Hash used to identify the email'}\n\nOn instance['hash']:\n    1234567890",
      "data": {
        "status": "sent",
        "hash": 1234567890,
        "content": {
          "FROM": {
            "name": "John Doe",
            "email": "john.doe@example.com"
          },
          "TO": [
            {
              "name": "Jane Doe",
              "email": "jane.doe@example.com"
            },
            {
              "name": "Bob Smith",
              "email": "bob.smith@example.com"
            }
          ],
          "CC": [
            {
              "name": "Alice Johnson",
              "email": "alice.johnson@example.com"
            }
          ],
          "BCC": [
            {
              "name": "Mike Brown",
              "email": "mike.brown@example.com"
            }
          ],
          "BODY": "This is the body of the email.",
          "SUBJECT": "Test Email",
          "ATTACHMENTS": [
            {
              "PATH": "/path/to/attachment1.pdf",
              "NAME": "attachment1.pdf",
              "WIDTH": 800
            },
            {
              "PATH": "/path/to/attachment2.pdf",
              "NAME": "attachment2.pdf",
              "WIDTH": 600
            }
          ]
        },
        "logs": [
          "Email sent successfully",
          "Attachment 1 uploaded successfully",
          "Attachment 2 uploaded successfully"
        ]
      }
    }
  ]
}