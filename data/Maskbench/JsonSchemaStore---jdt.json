{
  "description": "sample JsonSchemaStore/jdt.json",
  "meta": {
    "full_size": 1765,
    "stripped_size": 1279,
    "features": [
      "$ref",
      "additionalProperties",
      "additionalProperties:object",
      "anyOf",
      "items"
    ],
    "raw_features": [
      "$schema",
      "definitions",
      "id",
      "properties",
      "type",
      "type:[]",
      "type:array",
      "type:boolean",
      "type:integer",
      "type:null",
      "type:number",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "additionalProperties": {
      "$ref": "#"
    },
    "definitions": {
      "@jdt.path": {
        "type": "string",
        "description": "Use JSONPath syntax to navigate to the node where the transform should be applied."
      },
      "@jdt.value": {
        "type": "string",
        "description": "The transformation value that should be applied."
      }
    },
    "id": "https://json.schemastore.org/jdt.json",
    "properties": {
      "@jdt.rename": {
        "anyOf": [
          {
            "type": "object",
            "description": "Renames nodes",
            "properties": {
              "@jdt.path": {
                "$ref": "#/definitions/@jdt.path"
              },
              "@jdt.value": {
                "$ref": "#/definitions/@jdt.value"
              }
            }
          },
          {
            "type": "array",
            "description": "Renames nodes",
            "items": {
              "properties": {
                "@jdt.path": {
                  "$ref": "#/definitions/@jdt.path"
                },
                "@jdt.value": {
                  "$ref": "#/definitions/@jdt.value"
                }
              }
            }
          }
        ]
      },
      "@jdt.replace": {
        "type": [
          "array",
          "object"
        ],
        "description": "Replaces the current node with the given value. ",
        "properties": {
          "@jdt.path": {
            "$ref": "#/definitions/@jdt.path"
          },
          "@jdt.value": {
            "$ref": "#/definitions/@jdt.value"
          }
        },
        "items": {
          "properties": {
            "@jdt.path": {
              "$ref": "#/definitions/@jdt.path"
            },
            "@jdt.value": {
              "$ref": "#/definitions/@jdt.value"
            }
          }
        }
      },
      "@jdt.remove": {
        "type": [
          "array",
          "boolean",
          "object",
          "string"
        ],
        "description": "Removes the node with the given name from the current level.",
        "properties": {
          "@jdt.path": {
            "$ref": "#/definitions/@jdt.path"
          }
        },
        "items": {
          "type": [
            "boolean",
            "integer",
            "null",
            "number",
            "object",
            "string"
          ]
        }
      },
      "@jdt.merge": {
        "description": "Merges the current node value with the given object.",
        "type": [
          "object",
          "array"
        ],
        "properties": {
          "@jdt.path": {
            "$ref": "#/definitions/@jdt.path"
          },
          "@jdt.value": {
            "$ref": "#/definitions/@jdt.value"
          }
        },
        "items": {
          "properties": {
            "@jdt.path": {
              "$ref": "#/definitions/@jdt.path"
            },
            "@jdt.value": {
              "$ref": "#/definitions/@jdt.value"
            }
          }
        }
      }
    },
    "title": "JSON schema for JSON Document Transforms",
    "type": "object"
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "@jdt.rename": [
          {
            "@jdt.path": "$.name",
            "@jdt.value": "newName"
          },
          {
            "@jdt.path": "$.address.street",
            "@jdt.value": "newStreet"
          }
        ],
        "@jdt.replace": [
          {
            "@jdt.path": "$.age",
            "@jdt.value": "30"
          },
          {
            "@jdt.path": "$. occupation",
            "@jdt.value": "Software Engineer"
          }
        ],
        "@jdt.remove": [
          {
            "@jdt.path": "$.phone"
          },
          {
            "@jdt.path": "$.email"
          }
        ],
        "@jdt.merge": [
          {
            "@jdt.path": "$.address",
            "@jdt.value": "{\"city\": \"New York\", \"state\": \"NY\"}"
          },
          {
            "@jdt.path": "$.interests",
            "@jdt.value": "[\"reading\", \"hiking\", \"coding\"]"
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on additionalProperties keyword with an object schema",
      "valid": false,
      "rust_error": "\"someValue\" is not of type \"object\"",
      "python_error": "'someValue' is not of type 'object'\n\nFailed validating 'type' in schema['additionalProperties']:\n    {'$schema': 'http://json-schema.org/draft-04/schema#',\n     'additionalProperties': {'$ref': '#'},\n     'definitions': {'@jdt.path': {'type': 'string',\n                                   'description': 'Use JSONPath syntax to '\n                                                  'navigate to the node '\n                                                  'where the transform '\n                                                  'should be applied.'},\n                     '@jdt.value': {'type': 'string',\n                                    'description': 'The transformation '\n                                                   'value that should be '\n                                                   'applied.'}},\n     'id': 'https://json.schemastore.org/jdt.json',\n     'properties': {'@jdt.rename': {'anyOf': [{'type': 'object',\n                                               'description': 'Renames '\n                  .. (3232 more)",
      "data": {
        "@jdt.rename": [
          {
            "@jdt.path": "$.name",
            "@jdt.value": "newName"
          },
          {
            "@jdt.path": "$.address.street",
            "@jdt.value": "newStreet"
          }
        ],
        "@jdt.replace": [
          {
            "@jdt.path": "$.age",
            "@jdt.value": "30"
          },
          {
            "@jdt.path": "$. occupation",
            "@jdt.value": "Software Engineer"
          }
        ],
        "@jdt.remove": [
          {
            "@jdt.path": "$.phone"
          },
          {
            "@jdt.path": "$.email"
          }
        ],
        "@jdt.merge": [
          {
            "@jdt.path": "$.address",
            "@jdt.value": "{\"city\": \"New York\", \"state\": \"NY\"}"
          },
          {
            "@jdt.path": "$.interests",
            "@jdt.value": "[\"reading\", \"hiking\", \"coding\"]"
          }
        ],
        "additionalProperty": "someValue"
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "[{\"@jdt.path\":\"$.name\",\"@jdt.value\":\"newName\"},{\"@jdt.path\":\"$.address.street\",\"@jdt.value\":123}] is not valid under any of the schemas listed in the 'anyOf' keyword",
      "python_error": "123 is not of type 'string'\n\nFailed validating 'type' in schema[1]['items']['properties']['@jdt.value']:\n    {'type': 'string',\n     'description': 'The transformation value that should be applied.'}\n\nOn instance[1]['@jdt.value']:\n    123",
      "data": {
        "@jdt.rename": [
          {
            "@jdt.path": "$.name",
            "@jdt.value": "newName"
          },
          {
            "@jdt.path": "$.address.street",
            "@jdt.value": 123
          }
        ],
        "@jdt.replace": [
          {
            "@jdt.path": "$.age",
            "@jdt.value": "30"
          },
          {
            "@jdt.path": "$. occupation",
            "@jdt.value": "Software Engineer"
          }
        ],
        "@jdt.remove": [
          {
            "@jdt.path": "$.phone"
          },
          {
            "@jdt.path": "$.email"
          }
        ],
        "@jdt.merge": [
          {
            "@jdt.path": "$.address",
            "@jdt.value": "{\"city\": \"New York\", \"state\": \"NY\"}"
          },
          {
            "@jdt.path": "$.interests",
            "@jdt.value": "[\"reading\", \"hiking\", \"coding\"]"
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "[{\"@jdt.path\":\"$.name\",\"@jdt.value\":123},{\"@jdt.path\":\"$.address.street\",\"@jdt.value\":\"newStreet\"}] is not valid under any of the schemas listed in the 'anyOf' keyword",
      "python_error": "123 is not of type 'string'\n\nFailed validating 'type' in schema[1]['items']['properties']['@jdt.value']:\n    {'type': 'string',\n     'description': 'The transformation value that should be applied.'}\n\nOn instance[0]['@jdt.value']:\n    123",
      "data": {
        "@jdt.rename": [
          {
            "@jdt.path": "$.name",
            "@jdt.value": 123
          },
          {
            "@jdt.path": "$.address.street",
            "@jdt.value": "newStreet"
          }
        ],
        "@jdt.replace": [
          {
            "@jdt.path": "$.age",
            "@jdt.value": "30"
          },
          {
            "@jdt.path": "$. occupation",
            "@jdt.value": null
          }
        ],
        "@jdt.remove": [
          {
            "@jdt.path": "$.phone"
          },
          {
            "@jdt.path": "$.email"
          },
          123
        ],
        "@jdt.merge": [
          {
            "@jdt.path": "$.address",
            "@jdt.value": "{\"city\": \"New York\", \"state\": \"NY\"}"
          },
          {
            "@jdt.path": "$.interests",
            "@jdt.value": "not an array"
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on type keyword with an array of types",
      "valid": false,
      "rust_error": "[{\"@jdt.path\":\"$.name\",\"@jdt.value\":\"newName\"},{\"@jdt.path\":\"$.address.street\",\"@jdt.value\":null}] is not valid under any of the schemas listed in the 'anyOf' keyword",
      "python_error": "None is not of type 'string'\n\nFailed validating 'type' in schema[1]['items']['properties']['@jdt.value']:\n    {'type': 'string',\n     'description': 'The transformation value that should be applied.'}\n\nOn instance[1]['@jdt.value']:\n    None",
      "data": {
        "@jdt.rename": [
          {
            "@jdt.path": "$.name",
            "@jdt.value": "newName"
          },
          {
            "@jdt.path": "$.address.street",
            "@jdt.value": null
          }
        ],
        "@jdt.replace": [
          {
            "@jdt.path": "$.age",
            "@jdt.value": "30"
          },
          {
            "@jdt.path": "$. occupation",
            "@jdt.value": null
          }
        ],
        "@jdt.remove": [
          {
            "@jdt.path": "$.phone"
          },
          {
            "@jdt.path": "$.email"
          },
          5
        ],
        "@jdt.merge": [
          {
            "@jdt.path": "$.address",
            "@jdt.value": "{\"city\": \"New York\", \"state\": \"NY\"}"
          },
          {
            "@jdt.path": "$.interests",
            "@jdt.value": "[\"reading\", \"hiking\", \"coding\"]"
          },
          null
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on additionalProperties keyword with an object schema",
      "valid": false,
      "rust_error": "\"bar\" is not of type \"object\"",
      "python_error": "'bar' is not of type 'object'\n\nFailed validating 'type' in schema['additionalProperties']['additionalProperties']:\n    {'$schema': 'http://json-schema.org/draft-04/schema#',\n     'additionalProperties': {'$ref': '#'},\n     'definitions': {'@jdt.path': {'type': 'string',\n                                   'description': 'Use JSONPath syntax to '\n                                                  'navigate to the node '\n                                                  'where the transform '\n                                                  'should be applied.'},\n                     '@jdt.value': {'type': 'string',\n                                    'description': 'The transformation '\n                                                   'value that should be '\n                                                   'applied.'}},\n     'id': 'https://json.schemastore.org/jdt.json',\n     'properties': {'@jdt.rename': {'anyOf': [{'type': 'object',\n                                               'description': 'Renames '\n.. (3243 more)",
      "data": {
        "@jdt.rename": [
          {
            "@jdt.path": "$.name",
            "@jdt.value": "newName"
          },
          {
            "@jdt.path": "$.address.street",
            "@jdt.value": "newStreet"
          }
        ],
        "@jdt.replace": [
          {
            "@jdt.path": "$.age",
            "@jdt.value": "30"
          },
          {
            "@jdt.path": "$. occupation",
            "@jdt.value": "Software Engineer"
          }
        ],
        "@jdt.remove": [
          {
            "@jdt.path": "$.phone"
          },
          {
            "@jdt.path": "$.email"
          }
        ],
        "@jdt.merge": [
          {
            "@jdt.path": "$.address",
            "@jdt.value": "{\"city\": \"New York\", \"state\": \"NY\"}"
          },
          {
            "@jdt.path": "$.interests",
            "@jdt.value": "[\"reading\", \"hiking\", \"coding\"]"
          }
        ],
        "additional": {
          "foo": "bar"
        }
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "[{\"@jdt.path\":\"$.name\",\"@jdt.value\":\"newName\"},{\"@jdt.path\":\"$.address.street\",\"@jdt.value\":123}] is not valid under any of the schemas listed in the 'anyOf' keyword",
      "python_error": "123 is not of type 'string'\n\nFailed validating 'type' in schema[1]['items']['properties']['@jdt.value']:\n    {'type': 'string',\n     'description': 'The transformation value that should be applied.'}\n\nOn instance[1]['@jdt.value']:\n    123",
      "data": {
        "@jdt.rename": [
          {
            "@jdt.path": "$.name",
            "@jdt.value": "newName"
          },
          {
            "@jdt.path": "$.address.street",
            "@jdt.value": 123
          }
        ],
        "@jdt.replace": [
          {
            "@jdt.path": "$.age",
            "@jdt.value": "30"
          },
          {
            "@jdt.path": "$. occupation",
            "@jdt.value": 123.456
          }
        ],
        "@jdt.remove": [
          {
            "@jdt.path": "$.phone"
          },
          {
            "@jdt.path": "$.email",
            "extraproperty": "thisisinvalid"
          }
        ],
        "@jdt.merge": [
          {
            "@jdt.path": "$.address",
            "@jdt.value": "{\"city\": \"New York\", \"state\": \"NY\"}"
          },
          {
            "@jdt.path": "$.interests"
          }
        ]
      }
    }
  ]
}