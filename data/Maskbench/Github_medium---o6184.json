{
  "description": "sample Github_medium/o6184.json",
  "meta": {
    "full_size": 1197,
    "stripped_size": 676,
    "features": [
      "@minmaxLength",
      "@siblingKeys",
      "additionalProperties",
      "allOf",
      "items",
      "oneOf"
    ],
    "raw_features": [
      "$schema",
      "_boolSchema",
      "minLength",
      "properties",
      "required",
      "type",
      "type:array",
      "type:number",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "additionalProperties": false,
    "type": "object",
    "properties": {
      "resultPath": {
        "title": "Result Path",
        "description": "JSON path to store the results",
        "minLength": 1,
        "type": "string"
      },
      "deviceTags": {
        "title": "Device Tags",
        "type": "array",
        "items": {
          "title": "Device Tag Pair",
          "type": "object",
          "properties": {
            "key": {
              "type": "string"
            },
            "value": {
              "type": "string"
            }
          },
          "minLength": 1
        }
      },
      "deviceIds": {
        "title": "Device IDs",
        "type": "array",
        "items": {
          "title": "Device ID",
          "type": "string",
          "minLength": 1
        }
      },
      "start": {
        "title": "Start Time",
        "description": "Milliseconds since the epoch start time",
        "type": "number"
      },
      "end": {
        "title": "End Time",
        "description": "Milliseconds since the epoch end time",
        "type": "number"
      },
      "duration": {
        "title": "Duration",
        "description": "Duration of aggregation in milliseconds",
        "type": "number"
      },
      "aggregation": {
        "title": "Aggregation",
        "description": "Valid aggregation function name",
        "type": "string",
        "minLength": 1
      },
      "attributes": {
        "title": "Attributes",
        "description": "Device IDs",
        "type": "array",
        "items": {
          "title": "Device ID",
          "type": "string",
          "minLength": 1
        }
      }
    },
    "allOf": [
      {
        "required": [
          "resultPath",
          "aggregation"
        ]
      },
      {
        "oneOf": [
          {
            "required": [
              "start",
              "end"
            ]
          },
          {
            "required": [
              "duration"
            ]
          }
        ]
      }
    ]
  },
  "tests": [
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "resultPath": "$.results",
        "aggregation": "avg",
        "start": 1643723400000,
        "end": 1643724000000,
        "deviceTags": [
          {
            "key": "location",
            "value": "New York"
          },
          {
            "key": "deviceType",
            "value": "Sensor"
          }
        ],
        "deviceIds": [
          "device-1",
          "device-2"
        ],
        "attributes": [
          "temperature",
          "humidity"
        ]
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "resultPath": "$.result",
        "aggregation": "average",
        "start": 1643723400000,
        "end": 1643724000000,
        "deviceTags": [
          {
            "key": "deviceType",
            "value": "temperatureSensor"
          },
          {
            "key": "location",
            "value": "factoryFloor"
          }
        ],
        "deviceIds": [
          "device-1",
          "device-2",
          "device-3"
        ],
        "attributes": [
          "temperature",
          "humidity"
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on allOf keyword",
      "valid": false,
      "rust_error": "\"aggregation\" is a required property",
      "python_error": "'aggregation' is a required property\n\nFailed validating 'required' in schema['allOf'][0]:\n    {'required': ['resultPath', 'aggregation']}\n\nOn instance:\n    {'resultPath': '$.result',\n     'start': 1643723400000,\n     'end': 1643724000000,\n     'deviceTags': [{'key': 'deviceType', 'value': 'temperatureSensor'},\n                    {'key': 'location', 'value': 'factoryFloor'}],\n     'deviceIds': ['device-1', 'device-2', 'device-3'],\n     'attributes': ['temperature', 'humidity']}",
      "data": {
        "resultPath": "$.result",
        "start": 1643723400000,
        "end": 1643724000000,
        "deviceTags": [
          {
            "key": "deviceType",
            "value": "temperatureSensor"
          },
          {
            "key": "location",
            "value": "factoryFloor"
          }
        ],
        "deviceIds": [
          "device-1",
          "device-2",
          "device-3"
        ],
        "attributes": [
          "temperature",
          "humidity"
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on oneOf keyword",
      "valid": false,
      "rust_error": "{\"resultPath\":\"$.result\",\"aggregation\":\"average\",\"start\":1643723400000,\"end\":1643724000000,\"duration\":600000,\"deviceTags\":[{\"key\":\"deviceType\",\"value\":\"temperatureSensor\"},{\"key\":\"location\",\"value\":\"factoryFloor\"}],\"deviceIds\":[\"device-1\",\"device-2\",\"device-3\"],\"attributes\":[\"temperature\",\"humidity\"]} is valid under more than one of the schemas listed in the 'oneOf' keyword",
      "python_error": "{'resultPath': '$.result', 'aggregation': 'average', 'start': 1643723400000, 'end': 1643724000000, 'duration': 600000, 'deviceTags': [{'key': 'deviceType', 'value': 'temperatureSensor'}, {'key': 'location', 'value': 'factoryFloor'}], 'deviceIds': ['device-1', 'device-2', 'device-3'], 'attributes': ['temperature', 'humidity']} is valid under each of {'required': ['duration']}, {'required': ['start', 'end']}\n\nFailed validating 'oneOf' in schema['allOf'][1]:\n    {'oneOf': [{'required': ['start', 'end']}, {'required': ['duration']}]}\n\nOn instance:\n    {'resultPath': '$.result',\n     'aggregation': 'average',\n     'start': 1643723400000,\n     'end': 1643724000000,\n     'duration': 600000,\n     'deviceTags': [{'key': 'deviceType', 'value': 'temperatureSensor'},\n                    {'key': 'location', 'value': 'factoryFloor'}],\n     'deviceIds': ['device-1', 'device-2', 'device-3'],\n     'attributes': ['temperature', 'humidity']}",
      "data": {
        "resultPath": "$.result",
        "aggregation": "average",
        "start": 1643723400000,
        "end": 1643724000000,
        "duration": 600000,
        "deviceTags": [
          {
            "key": "deviceType",
            "value": "temperatureSensor"
          },
          {
            "key": "location",
            "value": "factoryFloor"
          }
        ],
        "deviceIds": [
          "device-1",
          "device-2",
          "device-3"
        ],
        "attributes": [
          "temperature",
          "humidity"
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on minLength keyword",
      "valid": false,
      "rust_error": "\"\" is shorter than 1 character",
      "python_error": "'' should be non-empty\n\nFailed validating 'minLength' in schema['properties']['resultPath']:\n    {'title': 'Result Path',\n     'description': 'JSON path to store the results',\n     'minLength': 1,\n     'type': 'string'}\n\nOn instance['resultPath']:\n    ''",
      "data": {
        "resultPath": "",
        "aggregation": "average",
        "start": 1643723400000,
        "end": 1643724000000,
        "deviceTags": [
          {
            "key": "deviceType",
            "value": "temperatureSensor"
          },
          {
            "key": "location",
            "value": "factoryFloor"
          }
        ],
        "deviceIds": [
          "device-1",
          "device-2",
          "device-3"
        ],
        "attributes": [
          "temperature",
          "humidity"
        ]
      }
    }
  ]
}