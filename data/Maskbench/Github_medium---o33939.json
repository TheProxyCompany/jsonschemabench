{
  "description": "sample Github_medium/o33939.json",
  "meta": {
    "full_size": 927,
    "stripped_size": 594,
    "features": [
      "$ref",
      "items",
      "oneOf"
    ],
    "raw_features": [
      "$schema",
      "definitions",
      "properties",
      "required",
      "type",
      "type:array",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "title": "MerkleProof2017 schema",
    "description": "An extension that allows an issuer to issue an Open Badge on the blockchain and provide proof of inclusion in a blockchain transaction. This uses the Chainpoint v2.0 specification: https://chainpoint.org/",
    "type": "object",
    "definitions": {
      "JsonLdType": {
        "description": "A type or an array of types defined in a JSON-LD context file.",
        "oneOf": [
          {
            "type": "string"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ]
      }
    },
    "properties": {
      "type": {
        "$ref": "#/definitions/JsonLdType"
      },
      "merkleRoot": {
        "type": "string"
      },
      "targetHash": {
        "type": "string"
      },
      "proof": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "right": {
              "type": "string"
            },
            "left": {
              "type": "string"
            }
          }
        }
      },
      "anchors": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "sourceId": {
              "type": "string"
            },
            "type": {
              "type": "string"
            }
          }
        }
      }
    },
    "required": [
      "type",
      "merkleRoot",
      "targetHash",
      "proof",
      "anchors"
    ]
  },
  "tests": [
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "type": "MerkleProof2017",
        "merkleRoot": "0x1234567890abcdef",
        "targetHash": "0x9876543210fedcba",
        "proof": [
          {
            "right": "0x1111111111111111",
            "left": "0x2222222222222222"
          },
          {
            "right": "0x3333333333333333",
            "left": "0x4444444444444444"
          }
        ],
        "anchors": [
          {
            "sourceId": "https://example.com/anchor1",
            "type": "BTCOpReturn"
          },
          {
            "sourceId": "https://example.com/anchor2",
            "type": "ETHTransaction"
          }
        ]
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "type": "MerkleProof2017",
        "merkleRoot": "0x1234567890abcdef",
        "targetHash": "0x9876543210fedcba",
        "proof": [
          {
            "right": "0x1234567890abcdef",
            "left": "0x9876543210fedcba"
          },
          {
            "right": "0x1111111111111111",
            "left": "0x2222222222222222"
          }
        ],
        "anchors": [
          {
            "sourceId": "https://example.com/anchor1",
            "type": "BTCOpReturn"
          },
          {
            "sourceId": "https://example.com/anchor2",
            "type": "ETHTransaction"
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on oneOf keyword",
      "valid": false,
      "rust_error": "12345 is not valid under any of the schemas listed in the 'oneOf' keyword",
      "python_error": "12345 is not valid under any of the given schemas\n\nFailed validating 'oneOf' in schema['properties']['type']:\n    {'description': 'A type or an array of types defined in a JSON-LD '\n                    'context file.',\n     'oneOf': [{'type': 'string'},\n               {'type': 'array', 'items': {'type': 'string'}}]}\n\nOn instance['type']:\n    12345",
      "data": {
        "type": 12345,
        "merkleRoot": "0x1234567890abcdef",
        "targetHash": "0x9876543210fedcba",
        "proof": [
          {
            "right": "0x1234567890abcdef",
            "left": "0x9876543210fedcba"
          },
          {
            "right": "0x1111111111111111",
            "left": "0x2222222222222222"
          }
        ],
        "anchors": [
          {
            "sourceId": "https://example.com/anchor1",
            "type": "BTCOpReturn"
          },
          {
            "sourceId": "https://example.com/anchor2",
            "type": "ETHTransaction"
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "123 is not of type \"string\"",
      "python_error": "123 is not of type 'string'\n\nFailed validating 'type' in schema['properties']['anchors']['items']['properties']['type']:\n    {'type': 'string'}\n\nOn instance['anchors'][1]['type']:\n    123",
      "data": {
        "type": "MerkleProof2017",
        "merkleRoot": "0x1234567890abcdef",
        "targetHash": "0x9876543210fedcba",
        "proof": [
          {
            "right": "0x1234567890abcdef",
            "left": "0x9876543210fedcba"
          },
          {
            "right": "0x1111111111111111",
            "left": "0x2222222222222222",
            "extraKey": "extraValue"
          }
        ],
        "anchors": [
          {
            "sourceId": "https://example.com/anchor1",
            "type": "BTCOpReturn"
          },
          {
            "sourceId": "https://example.com/anchor2",
            "type": 123
          }
        ]
      }
    }
  ]
}