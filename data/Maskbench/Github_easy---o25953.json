{
  "description": "sample Github_easy/o25953.json",
  "meta": {
    "full_size": 343,
    "stripped_size": 343,
    "features": [
      "$ref"
    ],
    "raw_features": [
      "$schema",
      "definitions",
      "properties",
      "required",
      "type",
      "type:number",
      "type:object"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "type": "object",
    "properties": {
      "subA": {
        "$ref": "#/definitions/MySubObject"
      },
      "subB": {
        "$ref": "#/definitions/MySubObject"
      }
    },
    "required": [
      "subA",
      "subB"
    ],
    "definitions": {
      "MySubObject": {
        "type": "object",
        "properties": {
          "propA": {
            "type": "number"
          },
          "propB": {
            "type": "number"
          }
        },
        "required": [
          "propA",
          "propB"
        ]
      }
    }
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "subA": {
          "propA": 10,
          "propB": 20
        },
        "subB": {
          "propA": 30,
          "propB": 40
        }
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"forty\" is not of type \"number\"",
      "python_error": "'forty' is not of type 'number'\n\nFailed validating 'type' in schema['properties']['subB']['properties']['propB']:\n    {'type': 'number'}\n\nOn instance['subB']['propB']:\n    'forty'",
      "data": {
        "subA": {
          "propA": 10,
          "propB": 20
        },
        "subB": {
          "propA": 30,
          "propB": "forty"
        }
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"propB\" is a required property",
      "python_error": "'propB' is a required property\n\nFailed validating 'required' in schema['properties']['subB']:\n    {'type': 'object',\n     'properties': {'propA': {'type': 'number'},\n                    'propB': {'type': 'number'}},\n     'required': ['propA', 'propB']}\n\nOn instance['subB']:\n    {'propA': 30}",
      "data": {
        "subA": {
          "propA": 10,
          "propB": 20
        },
        "subB": {
          "propA": 30
        }
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "null is not of type \"number\"",
      "python_error": "None is not of type 'number'\n\nFailed validating 'type' in schema['properties']['subA']['properties']['propB']:\n    {'type': 'number'}\n\nOn instance['subA']['propB']:\n    None",
      "data": {
        "subA": {
          "propA": 10,
          "propB": null
        },
        "subB": {
          "propA": 30,
          "propB": 40
        }
      }
    }
  ]
}