{
  "description": "sample JsonSchemaStore/schema-kas.json",
  "meta": {
    "full_size": 2761,
    "stripped_size": 2672,
    "features": [
      "additionalProperties",
      "additionalProperties:object",
      "enum",
      "items",
      "oneOf"
    ],
    "raw_features": [
      "$id",
      "$schema",
      "_boolSchema",
      "properties",
      "required",
      "type",
      "type:[]",
      "type:array",
      "type:boolean",
      "type:integer",
      "type:null",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "$id": "https://github.com/siemens/kas/blob/master/kas/schema-kas.json",
    "title": "kas configuration",
    "description": "kas, a setup tool for bitbake based projects",
    "type": "object",
    "required": [
      "header"
    ],
    "additionalProperties": false,
    "properties": {
      "header": {
        "type": "object",
        "required": [
          "version"
        ],
        "additionalProperties": false,
        "properties": {
          "version": {
            "oneOf": [
              {
                "type": "string",
                "enum": [
                  "0.10"
                ]
              },
              {
                "type": "integer"
              }
            ]
          },
          "includes": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "object",
                  "required": [
                    "repo",
                    "file"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "repo": {
                      "type": "string"
                    },
                    "file": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          }
        }
      },
      "build_system": {
        "type": "string",
        "enum": [
          "openembedded",
          "oe",
          "isar"
        ]
      },
      "defaults": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "repos": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "branch": {
                "type": "string"
              },
              "refspec": {
                "type": "string"
              },
              "patches": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "repo": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "overrides": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "repos": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "commit": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "machine": {
        "type": "string"
      },
      "distro": {
        "type": "string"
      },
      "env": {
        "type": "object",
        "additionalProperties": {
          "type": [
            "string",
            "null"
          ]
        }
      },
      "target": {
        "oneOf": [
          {
            "type": "string"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ]
      },
      "task": {
        "type": "string"
      },
      "repos": {
        "type": "object",
        "additionalProperties": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "name": {
                  "type": "string"
                },
                "url": {
                  "oneOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "type": {
                  "type": "string"
                },
                "commit": {
                  "type": "string"
                },
                "branch": {
                  "type": "string"
                },
                "refspec": {
                  "type": "string"
                },
                "path": {
                  "oneOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "layers": {
                  "type": "object",
                  "additionalProperties": {
                    "oneOf": [
                      {
                        "type": "null"
                      },
                      {
                        "type": "integer"
                      },
                      {
                        "type": "boolean"
                      },
                      {
                        "type": "string"
                      }
                    ]
                  }
                },
                "patches": {
                  "type": "object",
                  "additionalProperties": {
                    "oneOf": [
                      {
                        "type": "object",
                        "additionalProperties": false,
                        "required": [
                          "path"
                        ],
                        "properties": {
                          "repo": {
                            "type": "string"
                          },
                          "path": {
                            "type": "string"
                          }
                        }
                      },
                      {
                        "type": "null"
                      }
                    ]
                  }
                }
              }
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "bblayers_conf_header": {
        "type": "object",
        "additionalProperties": {
          "type": "string"
        }
      },
      "local_conf_header": {
        "type": "object",
        "additionalProperties": {
          "type": "string"
        }
      },
      "proxy_config": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "http_proxy": {
            "type": "string"
          },
          "https_proxy": {
            "type": "string"
          },
          "ftp_proxy": {
            "type": "string"
          },
          "no_proxy": {
            "type": "string"
          }
        }
      },
      "menu_configuration": {
        "type": "object",
        "additionalProperties": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "type": "string"
            },
            {
              "type": "integer"
            }
          ]
        }
      },
      "_source_dir": {
        "type": "string"
      },
      "_source_dir_host": {
        "type": "string"
      }
    }
  },
  "tests": [
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "header": {
          "version": "0.10",
          "includes": [
            "kas-defaults.yml",
            {
              "repo": "https://github.com/siemens/kas",
              "file": "kas-defaults.yml"
            }
          ]
        },
        "build_system": "openembedded",
        "defaults": {
          "repos": {
            "branch": "master",
            "refspec": "master",
            "patches": {
              "repo": "https://github.com/siemens/kas-patches"
            }
          }
        },
        "overrides": {
          "repos": {
            "kas": {
              "commit": "abc123"
            }
          }
        },
        "machine": "qemuarm",
        "distro": "poky",
        "env": {
          "PATH": "/usr/bin:/bin",
          "HOME": "/home/user"
        },
        "target": "core-image-minimal",
        "task": "build",
        "repos": {
          "kas": {
            "name": "kas",
            "url": "https://github.com/siemens/kas.git",
            "type": "git",
            "commit": "abc123",
            "branch": "master",
            "refspec": "master",
            "path": "/home/user/kas",
            "layers": {
              "meta-kas": true,
              "meta-openembedded": true
            },
            "patches": {
              "kas-patch": {
                "repo": "https://github.com/siemens/kas-patches",
                "path": "/home/user/kas-patches"
              }
            }
          }
        },
        "bblayers_conf_header": {
          "BBLAYERS": "/home/user/kas/meta-kas"
        },
        "local_conf_header": {
          "MACHINE": "qemuarm"
        },
        "proxy_config": {
          "http_proxy": "http://proxy:8080",
          "https_proxy": "https://proxy:8080",
          "ftp_proxy": "ftp://proxy:8080",
          "no_proxy": "localhost,127.0.0.1"
        },
        "menu_configuration": {
          "menu": true,
          "timeout": 10
        },
        "_source_dir": "/home/user/kas",
        "_source_dir_host": "/home/user/kas-host"
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "header": {
          "version": "0.10",
          "includes": [
            "https://example.com/include1",
            {
              "repo": "https://example.com/repo1",
              "file": "include2"
            }
          ]
        },
        "build_system": "openembedded",
        "defaults": {
          "repos": {
            "branch": "main",
            "refspec": "+refs/heads/*:refs/remotes/origin/*",
            "patches": {
              "repo": "https://example.com/patches"
            }
          }
        },
        "overrides": {
          "repos": {
            "repo1": {
              "commit": "abc123"
            }
          }
        },
        "machine": "qemuarm",
        "distro": "poky",
        "env": {
          "PATH": "/usr/bin:/bin",
          "HOME": "/home/user"
        },
        "target": "core-image-minimal",
        "task": "build",
        "repos": {
          "repo1": {
            "name": "repo1",
            "url": "https://example.com/repo1",
            "type": "git",
            "commit": "abc123",
            "branch": "main",
            "refspec": "+refs/heads/*:refs/remotes/origin/*",
            "path": "/path/to/repo1",
            "layers": {
              "layer1": true,
              "layer2": false,
              "layer3": 1,
              "layer4": "string"
            },
            "patches": {
              "patch1": {
                "repo": "https://example.com/patches",
                "path": "/path/to/patch1"
              },
              "patch2": null
            }
          }
        },
        "bblayers_conf_header": {
          "BBLAYERS": "/path/to/bblayers"
        },
        "local_conf_header": {
          "CONF_VERSION": "1"
        },
        "proxy_config": {
          "http_proxy": "http://proxy.example.com:8080",
          "https_proxy": "https://proxy.example.com:8080",
          "ftp_proxy": "ftp://proxy.example.com:8080",
          "no_proxy": "localhost, 127.0.0.1"
        },
        "menu_configuration": {
          "menu1": true,
          "menu2": "string",
          "menu3": 1
        },
        "_source_dir": "/path/to/source",
        "_source_dir_host": "/path/to/source/host"
      }
    },
    {
      "description": "llama-70b generated negative; focus on type keyword with an array of types",
      "valid": false,
      "rust_error": "123 is not of types \"null\", \"string\"",
      "python_error": "[1, 2] is not valid under any of the given schemas\n\nFailed validating 'oneOf' in schema[0]['properties']['layers']['additionalProperties']:\n    {'oneOf': [{'type': 'null'},\n               {'type': 'integer'},\n               {'type': 'boolean'},\n               {'type': 'string'}]}\n\nOn instance['layers']['layer5']:\n    [1, 2]",
      "data": {
        "header": {
          "version": "0.10",
          "includes": [
            "https://example.com/include1",
            {
              "repo": "https://example.com/repo1",
              "file": "include2"
            }
          ]
        },
        "build_system": "openembedded",
        "defaults": {
          "repos": {
            "branch": "main",
            "refspec": "+refs/heads/*:refs/remotes/origin/*",
            "patches": {
              "repo": "https://example.com/patches"
            }
          }
        },
        "overrides": {
          "repos": {
            "repo1": {
              "commit": "abc123"
            }
          }
        },
        "machine": "qemuarm",
        "distro": "poky",
        "env": {
          "PATH": "/usr/bin:/bin",
          "HOME": "/home/user",
          "BAD_VALUE": 123
        },
        "target": "core-image-minimal",
        "task": "build",
        "repos": {
          "repo1": {
            "name": "repo1",
            "url": "https://example.com/repo1",
            "type": "git",
            "commit": "abc123",
            "branch": "main",
            "refspec": "+refs/heads/*:refs/remotes/origin/*",
            "path": "/path/to/repo1",
            "layers": {
              "layer1": true,
              "layer2": false,
              "layer3": 1,
              "layer4": "string",
              "layer5": [
                1,
                2
              ]
            },
            "patches": {
              "patch1": {
                "repo": "https://example.com/patches",
                "path": "/path/to/patch1"
              },
              "patch2": null
            }
          }
        },
        "bblayers_conf_header": {
          "BBLAYERS": "/path/to/bblayers"
        },
        "local_conf_header": {
          "CONF_VERSION": "1"
        },
        "proxy_config": {
          "http_proxy": "http://proxy.example.com:8080",
          "https_proxy": "https://proxy.example.com:8080",
          "ftp_proxy": "ftp://proxy.example.com:8080",
          "no_proxy": "localhost, 127.0.0.1"
        },
        "menu_configuration": {
          "menu1": true,
          "menu2": "string",
          "menu3": 1,
          "menu4": {}
        },
        "_source_dir": "/path/to/source",
        "_source_dir_host": "/path/to/source/host"
      }
    },
    {
      "description": "llama-70b generated negative; focus on additionalProperties keyword with an object schema",
      "valid": false,
      "rust_error": "{\"repo\":\"https://example.com/repo1\",\"file\":\"include2\",\"extra\":\"invalid\"} is not valid under any of the schemas listed in the 'oneOf' keyword",
      "python_error": "Additional properties are not allowed ('extra' was unexpected)\n\nFailed validating 'additionalProperties' in schema[1]:\n    {'type': 'object',\n     'required': ['repo', 'file'],\n     'additionalProperties': False,\n     'properties': {'repo': {'type': 'string'}, 'file': {'type': 'string'}}}\n\nOn instance:\n    {'repo': 'https://example.com/repo1',\n     'file': 'include2',\n     'extra': 'invalid'}",
      "data": {
        "header": {
          "version": "0.10",
          "includes": [
            "https://example.com/include1",
            {
              "repo": "https://example.com/repo1",
              "file": "include2",
              "extra": "invalid"
            }
          ]
        },
        "build_system": "openembedded",
        "defaults": {
          "repos": {
            "branch": "main",
            "refspec": "+refs/heads/*:refs/remotes/origin/*",
            "patches": {
              "repo": "https://example.com/patches"
            }
          }
        },
        "overrides": {
          "repos": {
            "repo1": {
              "commit": "abc123"
            }
          }
        },
        "machine": "qemuarm",
        "distro": "poky",
        "env": {
          "PATH": "/usr/bin:/bin",
          "HOME": "/home/user"
        },
        "target": "core-image-minimal",
        "task": "build",
        "repos": {
          "repo1": {
            "name": "repo1",
            "url": "https://example.com/repo1",
            "type": "git",
            "commit": "abc123",
            "branch": "main",
            "refspec": "+refs/heads/*:refs/remotes/origin/*",
            "path": "/path/to/repo1",
            "layers": {
              "layer1": true,
              "layer2": false,
              "layer3": 1,
              "layer4": "string"
            },
            "patches": {
              "patch1": {
                "repo": "https://example.com/patches",
                "path": "/path/to/patch1"
              },
              "patch2": null
            }
          }
        },
        "bblayers_conf_header": {
          "BBLAYERS": "/path/to/bblayers"
        },
        "local_conf_header": {
          "CONF_VERSION": "1"
        },
        "proxy_config": {
          "http_proxy": "http://proxy.example.com:8080",
          "https_proxy": "https://proxy.example.com:8080",
          "ftp_proxy": "ftp://proxy.example.com:8080",
          "no_proxy": "localhost, 127.0.0.1"
        },
        "menu_configuration": {
          "menu1": true,
          "menu2": "string",
          "menu3": 1
        },
        "_source_dir": "/path/to/source",
        "_source_dir_host": "/path/to/source/host"
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "123 is not of types \"null\", \"string\"",
      "python_error": "{} is not valid under any of the given schemas\n\nFailed validating 'oneOf' in schema[0]['properties']['layers']['additionalProperties']:\n    {'oneOf': [{'type': 'null'},\n               {'type': 'integer'},\n               {'type': 'boolean'},\n               {'type': 'string'}]}\n\nOn instance['layers']['BAD_LAYER']:\n    {}",
      "data": {
        "header": {
          "version": 0,
          "includes": [
            "https://example.com/include1",
            {
              "repo": "https://example.com/repo1",
              "file": "include2"
            }
          ]
        },
        "build_system": "openembedded",
        "defaults": {
          "repos": {
            "branch": "main",
            "refspec": "+refs/heads/*:refs/remotes/origin/*",
            "patches": {
              "repo": "https://example.com/patches"
            }
          }
        },
        "overrides": {
          "repos": {
            "repo1": {
              "commit": "abc123"
            }
          }
        },
        "machine": "qemuarm",
        "distro": "poky",
        "env": {
          "PATH": "/usr/bin:/bin",
          "HOME": "/home/user",
          "BAD_ENV": 123
        },
        "target": "core-image-minimal",
        "task": "build",
        "repos": {
          "repo1": {
            "name": "repo1",
            "url": "https://example.com/repo1",
            "type": "git",
            "commit": "abc123",
            "branch": "main",
            "refspec": "+refs/heads/*:refs/remotes/origin/*",
            "path": "/path/to/repo1",
            "layers": {
              "layer1": true,
              "layer2": false,
              "layer3": 1,
              "layer4": "string",
              "BAD_LAYER": {}
            },
            "patches": {
              "patch1": {
                "repo": "https://example.com/patches",
                "path": "/path/to/patch1"
              },
              "patch2": null
            }
          }
        },
        "bblayers_conf_header": {
          "BBLAYERS": "/path/to/bblayers",
          "BAD_HEADER": 123
        },
        "local_conf_header": {
          "CONF_VERSION": "1"
        },
        "proxy_config": {
          "http_proxy": "http://proxy.example.com:8080",
          "https_proxy": "https://proxy.example.com:8080",
          "ftp_proxy": "ftp://proxy.example.com:8080",
          "no_proxy": "localhost, 127.0.0.1"
        },
        "menu_configuration": {
          "menu1": true,
          "menu2": "string",
          "menu3": 1,
          "BAD_MENU": {}
        },
        "_source_dir": "/path/to/source",
        "_source_dir_host": "/path/to/source/host"
      }
    }
  ]
}