{
  "description": "sample Github_hard/o61006.json",
  "meta": {
    "full_size": 2808,
    "stripped_size": 1367,
    "features": [
      "oneOf",
      "patternProperties"
    ],
    "raw_features": [
      "$schema",
      "properties",
      "required",
      "type",
      "type:[]",
      "type:array",
      "type:boolean",
      "type:integer",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "title": "Configuration file schema",
    "type": "object",
    "properties": {
      "httpsCertificatePath": {
        "description": "Path to the certificate",
        "type": "string"
      },
      "databaseFileName": {
        "description": "Path to SQLite database",
        "type": "string"
      },
      "enableHtmlEmail": {
        "description": "Determines if HTML email should be sent",
        "type": "boolean",
        "default": true
      },
      "enableHttp": {
        "description": "Determines if HTTP is enabled",
        "type": "boolean"
      },
      "enableHttps": {
        "description": "Determines if HTTPS is enabled",
        "type": "boolean"
      },
      "httpListenIP": {
        "description": "HTTP listen IP",
        "type": "string"
      },
      "httpsListenIP": {
        "description": "HTTPS listen IP",
        "type": "string"
      },
      "httpListenPort": {
        "description": "HTTP listen port",
        "type": "integer"
      },
      "httpsListenPort": {
        "description": "HTTPS listen port",
        "type": "integer"
      },
      "enableWebInterface": {
        "description": "Determines if sent email history should be accessible for view",
        "type": "boolean"
      },
      "webInterfaceIP": {
        "description": "Web Interface IP",
        "type": "string"
      },
      "webInterfacePort": {
        "description": "Web Interface port",
        "type": "integer"
      },
      "recipientEmails": {
        "description": "Recipient emails",
        "type": [
          "string",
          "array"
        ]
      },
      "smtpOptions": {
        "description": "Nodemailer SMTP options",
        "type": "object",
        "properties": {
          "port": {
            "description": "SMTP Port",
            "type": "integer"
          },
          "host": {
            "description": "SMTP Host",
            "type": "string"
          },
          "tls": {
            "description": "Defines additional node.js TLSSocket options to be passed to the socket constructor",
            "type": "object",
            "properties": {
              "rejectUnauthorized": {
                "description": "If not false, the server certificate is verified against the list of supplied CAs",
                "type": "boolean"
              }
            }
          },
          "auth": {
            "description": "Defines authentication data",
            "type": "object",
            "properties": {
              "user": {
                "description": "User name",
                "type": "string"
              },
              "pass": {
                "description": "The password for the user if normal login is used"
              }
            }
          }
        }
      },
      "formTargets": {
        "description": "Form keys",
        "type": "object",
        "patternProperties": {
          ".*": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "subject": {
                    "type": "string"
                  },
                  "recipient": {
                    "type": [
                      "array",
                      "string"
                    ]
                  }
                }
              },
              {
                "type": "array"
              },
              {
                "type": "string"
              }
            ]
          }
        }
      },
      "fromEmail": {
        "description": "Sender's email",
        "type": "string"
      },
      "subject": {
        "description": "Email subject",
        "type": "string"
      },
      "maxHttpRequestSize": {
        "description": "Maximum HTTP Request Size",
        "type": "string"
      },
      "httpsPrivateKeyPath": {
        "description": "Path to the certificate private key",
        "type": "string"
      },
      "logLevel": {
        "description": "Log level",
        "type": "string"
      },
      "redirectFieldName": {
        "description": "Page to be redirected after the form is submitted.",
        "type": "string"
      },
      "reCaptchaSiteKey": {
        "description": "Recaptcha Site Key.",
        "type": "string"
      },
      "reCaptchaSecret": {
        "description": "Recaptcha Secret Key",
        "type": "string"
      },
      "enableRecaptcha": {
        "description": "Determines if g-recaptcha-response checking should be enabled.",
        "type": "boolean"
      }
    },
    "required": [
      "recipientEmails"
    ]
  },
  "tests": [
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "httpsCertificatePath": "/path/to/certificate.crt",
        "databaseFileName": "/path/to/database.db",
        "enableHtmlEmail": true,
        "enableHttp": true,
        "enableHttps": true,
        "httpListenIP": "0.0.0.0",
        "httpsListenIP": "0.0.0.0",
        "httpListenPort": 80,
        "httpsListenPort": 443,
        "enableWebInterface": true,
        "webInterfaceIP": "0.0.0.0",
        "webInterfacePort": 8080,
        "recipientEmails": [
          "recipient1@example.com",
          "recipient2@example.com"
        ],
        "smtpOptions": {
          "port": 587,
          "host": "smtp.example.com",
          "tls": {
            "rejectUnauthorized": false
          },
          "auth": {
            "user": "smtpuser@example.com",
            "pass": "smtpassword"
          }
        },
        "formTargets": {
          "target1": {
            "subject": "Form 1 Subject",
            "recipient": [
              "recipient1@example.com",
              "recipient2@example.com"
            ]
          },
          "target2": [
            "recipient3@example.com",
            "recipient4@example.com"
          ],
          "target3": "recipient5@example.com"
        },
        "fromEmail": "sender@example.com",
        "subject": "Default Email Subject",
        "maxHttpRequestSize": "10mb",
        "httpsPrivateKeyPath": "/path/to/private/key.key",
        "logLevel": "info",
        "redirectFieldName": "redirect",
        "reCaptchaSiteKey": "site-key",
        "reCaptchaSecret": "secret-key",
        "enableRecaptcha": true
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "httpsCertificatePath": "/path/to/certificate.crt",
        "databaseFileName": "/path/to/database.db",
        "enableHtmlEmail": true,
        "enableHttp": false,
        "enableHttps": true,
        "httpListenIP": "127.0.0.1",
        "httpsListenIP": "127.0.0.1",
        "httpListenPort": 8080,
        "httpsListenPort": 8443,
        "enableWebInterface": true,
        "webInterfaceIP": "127.0.0.1",
        "webInterfacePort": 8081,
        "recipientEmails": [
          "recipient1@example.com",
          "recipient2@example.com"
        ],
        "smtpOptions": {
          "port": 587,
          "host": "smtp.example.com",
          "tls": {
            "rejectUnauthorized": false
          },
          "auth": {
            "user": "smtp_user",
            "pass": "smtp_password"
          }
        },
        "formTargets": {
          "form1": {
            "subject": "Form 1 Subject",
            "recipient": [
              "recipient1@example.com",
              "recipient2@example.com"
            ]
          },
          "form2": [
            "recipient3@example.com",
            "recipient4@example.com"
          ],
          "form3": "recipient5@example.com"
        },
        "fromEmail": "sender@example.com",
        "subject": "Default Email Subject",
        "maxHttpRequestSize": "10mb",
        "httpsPrivateKeyPath": "/path/to/private/key",
        "logLevel": "info",
        "redirectFieldName": "redirect",
        "reCaptchaSiteKey": "your_recaptcha_site_key",
        "reCaptchaSecret": "your_recaptcha_secret",
        "enableRecaptcha": true
      }
    },
    {
      "description": "llama-70b generated negative; focus on type keyword with an array of types",
      "valid": false,
      "rust_error": "123 is not of types \"array\", \"string\"",
      "python_error": "123 is not of type 'string', 'array'\n\nFailed validating 'type' in schema['properties']['recipientEmails']:\n    {'description': 'Recipient emails', 'type': ['string', 'array']}\n\nOn instance['recipientEmails']:\n    123",
      "data": {
        "httpsCertificatePath": "/path/to/certificate.crt",
        "databaseFileName": "/path/to/database.db",
        "enableHtmlEmail": true,
        "enableHttp": false,
        "enableHttps": true,
        "httpListenIP": "127.0.0.1",
        "httpsListenIP": "127.0.0.1",
        "httpListenPort": 8080,
        "httpsListenPort": 8443,
        "enableWebInterface": true,
        "webInterfaceIP": "127.0.0.1",
        "webInterfacePort": 8081,
        "recipientEmails": 123,
        "Modifying recipientEmails to be an integer, as it should either be an array or string.": "smtpOptions",
        "smtpOptions": {
          "port": 587,
          "host": "smtp.example.com",
          "tls": {
            "rejectUnauthorized": false
          },
          "auth": {
            "user": "smtp_user",
            "pass": "smtp_password"
          }
        },
        "formTargets": {
          "form1": {
            "subject": "Form 1 Subject",
            "recipient": [
              "recipient1@example.com",
              "recipient2@example.com"
            ]
          },
          "form2": [
            "recipient3@example.com",
            "recipient4@example.com"
          ],
          "form3": "recipient5@example.com"
        },
        "fromEmail": "sender@example.com",
        "subject": "Default Email Subject",
        "maxHttpRequestSize": "10mb",
        "httpsPrivateKeyPath": "/path/to/private/key",
        "logLevel": "info",
        "redirectFieldName": "redirect",
        "reCaptchaSiteKey": "your_recaptcha_site_key",
        "reCaptchaSecret": "your_recaptcha_secret",
        "enableRecaptcha": true
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"non-numeric string\" is not of type \"integer\"",
      "python_error": "'non-numeric string' is not of type 'integer'\n\nFailed validating 'type' in schema['properties']['httpListenPort']:\n    {'description': 'HTTP listen port', 'type': 'integer'}\n\nOn instance['httpListenPort']:\n    'non-numeric string'",
      "data": {
        "httpsCertificatePath": "/path/to/certificate.crt",
        "databaseFileName": "/path/to/database.db",
        "enableHtmlEmail": true,
        "enableHttp": false,
        "enableHttps": true,
        "httpListenIP": "127.0.0.1",
        "httpsListenIP": "127.0.0.1",
        "httpListenPort": "non-numeric string",
        "invalid: httpListenPort should be integer": "httpsListenPort",
        "enableWebInterface": true,
        "webInterfaceIP": "127.0.0.1",
        "webInterfacePort": 8081,
        "recipientEmails": "single email string",
        "invalid: recipientEmails should be array or string array": {
          "port": "non-numeric string",
          "invalid: port should be integer": "host",
          "tls": {
            "rejectUnauthorized": false
          },
          "auth": {
            "user": "smtp_user",
            "pass": "smtp_password"
          }
        },
        "formTargets": {
          "form1": {
            "subject": "Form 1 Subject",
            "recipient": [
              "recipient1@example.com",
              "recipient2@example.com"
            ]
          },
          "form2": [
            "recipient3@example.com",
            "recipient4@example.com"
          ],
          "form3": "recipient5@example.com"
        },
        "fromEmail": "sender@example.com",
        "subject": "Default Email Subject",
        "maxHttpRequestSize": "invalid string",
        "invalid: maxHttpRequestSize should be a string like 10mb": "httpsPrivateKeyPath",
        "logLevel": "info",
        "redirectFieldName": "redirect",
        "reCaptchaSiteKey": "your_recaptcha_site_key",
        "reCaptchaSecret": "your_recaptcha_secret",
        "enableRecaptcha": true
      }
    }
  ]
}