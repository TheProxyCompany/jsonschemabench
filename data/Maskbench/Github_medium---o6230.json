{
  "description": "sample Github_medium/o6230.json",
  "meta": {
    "full_size": 1535,
    "stripped_size": 1535,
    "features": [
      "$ref",
      "@minmaxLength",
      "format",
      "format:date-time",
      "format:email",
      "pattern"
    ],
    "raw_features": [
      "$schema",
      "definitions",
      "maxLength",
      "minLength",
      "properties",
      "type",
      "type:boolean",
      "type:number",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "type": "object",
    "definitions": {
      "emailVerified": {
        "type": "boolean"
      },
      "firstName": {
        "type": "string",
        "minLength": 1,
        "maxLength": 1024
      },
      "lastName": {
        "type": "string",
        "minLength": 1,
        "maxLength": 1024
      },
      "companyName": {
        "type": "string",
        "maxLength": 1024
      },
      "phoneNumber": {
        "type": "string",
        "maxLength": 1024
      },
      "location": {
        "type": "string",
        "maxLength": 1024
      },
      "url": {
        "type": "string",
        "maxLength": 1024
      },
      "twoFactorAuthEnabled": {
        "type": "boolean"
      },
      "fullName": {
        "type": "string"
      },
      "password": {
        "type": "string",
        "minLength": 8,
        "maxLength": 2048
      },
      "twoFactorCode": {
        "type": "string",
        "maxLength": 2048
      }
    },
    "properties": {
      "id": {
        "type": "string",
        "pattern": "^[A-Fa-f\\d]{24}$"
      },
      "creationDate": {
        "type": "string",
        "format": "date-time"
      },
      "lastUpdated": {
        "type": "string",
        "format": "date-time"
      },
      "passwordLastUpdated": {
        "type": "string",
        "format": "date-time"
      },
      "email": {
        "type": "string",
        "format": "email",
        "maxLength": 1024
      },
      "emailVerified": {
        "$ref": "#/definitions/emailVerified"
      },
      "firstName": {
        "$ref": "#/definitions/firstName"
      },
      "lastName": {
        "$ref": "#/definitions/lastName"
      },
      "companyName": {
        "$ref": "#/definitions/companyName"
      },
      "phoneNumber": {
        "$ref": "#/definitions/phoneNumber"
      },
      "location": {
        "$ref": "#/definitions/location"
      },
      "url": {
        "$ref": "#/definitions/url"
      },
      "twoFactorAuthEnabled": {
        "$ref": "#/definitions/twoFactorAuthEnabled"
      },
      "fullName": {
        "$ref": "#/definitions/fullName"
      },
      "userId": {
        "type": "string",
        "pattern": "^[A-Fa-f\\d]{24}$"
      },
      "summary": {
        "type": "object",
        "properties": {
          "appCount": {
            "type": "number"
          },
          "dashCount": {
            "type": "number"
          },
          "orgCount": {
            "type": "number"
          }
        }
      }
    }
  },
  "tests": [
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "id": "62a2e6f7f7f7f7f7f7f7f7f7",
        "creationDate": "2022-01-01T00:00:00.000Z",
        "lastUpdated": "2022-01-01T00:00:00.000Z",
        "passwordLastUpdated": "2022-01-01T00:00:00.000Z",
        "email": "user@example.com",
        "emailVerified": true,
        "firstName": "John",
        "lastName": "Doe",
        "companyName": "Example Inc.",
        "phoneNumber": "+1 123 456 7890",
        "location": "New York, USA",
        "url": "https://example.com",
        "twoFactorAuthEnabled": false,
        "fullName": "John Doe",
        "userId": "62a2e6f7f7f7f7f7f7f7f7f7",
        "summary": {
          "appCount": 5,
          "dashCount": 3,
          "orgCount": 2
        }
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "id": "5f5f5f5f5f5f5f5f5f5f5f5f",
        "creationDate": "2022-01-01T12:00:00.000Z",
        "lastUpdated": "2022-01-01T12:00:00.000Z",
        "passwordLastUpdated": "2022-01-01T12:00:00.000Z",
        "email": "example@example.com",
        "emailVerified": true,
        "firstName": "John",
        "lastName": "Doe",
        "companyName": "Example Inc.",
        "phoneNumber": "+1234567890",
        "location": "New York",
        "url": "https://example.com",
        "twoFactorAuthEnabled": false,
        "fullName": "John Doe",
        "userId": "5f5f5f5f5f5f5f5f5f5f5f5f",
        "summary": {
          "appCount": 10,
          "dashCount": 5,
          "orgCount": 2
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on pattern keyword",
      "valid": false,
      "rust_error": "\"5f5f5f5f5f5f5f5f5f5f5f5f5\" does not match \"^[A-Fa-f\\d]{24}$\"",
      "python_error": "'5f5f5f5f5f5f5f5f5f5f5f5f5' does not match '^[A-Fa-f\\\\d]{24}$'\n\nFailed validating 'pattern' in schema['properties']['id']:\n    {'type': 'string', 'pattern': '^[A-Fa-f\\\\d]{24}$'}\n\nOn instance['id']:\n    '5f5f5f5f5f5f5f5f5f5f5f5f5'",
      "data": {
        "id": "5f5f5f5f5f5f5f5f5f5f5f5f5",
        "creationDate": "2022-01-01T12:00:00.000Z",
        "lastUpdated": "2022-01-01T12:00:00.000Z",
        "passwordLastUpdated": "2022-01-01T12:00:00.000Z",
        "email": "example@example.com",
        "emailVerified": true,
        "firstName": "John",
        "lastName": "Doe",
        "companyName": "Example Inc.",
        "phoneNumber": "+1234567890",
        "location": "New York",
        "url": "https://example.com",
        "twoFactorAuthEnabled": false,
        "fullName": "John Doe",
        "userId": "5f5f5f5f5f5f5f5f5f5f5f5f",
        "summary": {
          "appCount": 10,
          "dashCount": 5,
          "orgCount": 2
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on format keyword",
      "valid": false,
      "rust_error": "\"2022-01-01T12:00:00\" is not a \"date-time\"",
      "python_error": "'2022-01-01T12:00:00' is not a 'date-time'\n\nFailed validating 'format' in schema['properties']['passwordLastUpdated']:\n    {'type': 'string', 'format': 'date-time'}\n\nOn instance['passwordLastUpdated']:\n    '2022-01-01T12:00:00'",
      "data": {
        "id": "5f5f5f5f5f5f5f5f5f5f5f5f",
        "creationDate": "2022-01-01T12:00:00",
        "lastUpdated": "2022-01-01T12:00:00",
        "passwordLastUpdated": "2022-01-01T12:00:00",
        "email": "InvalidEmail",
        "emailVerified": true,
        "firstName": "John",
        "lastName": "Doe",
        "companyName": "Example Inc.",
        "phoneNumber": "+1234567890",
        "location": "New York",
        "url": "https://example.com",
        "twoFactorAuthEnabled": false,
        "fullName": "John Doe",
        "userId": "5f5f5f5f5f5f5f5f5f5f5f5f",
        "summary": {
          "appCount": 10,
          "dashCount": 5,
          "orgCount": 2
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on minLength keyword or maxLength keyword",
      "valid": false,
      "rust_error": "\"\" is shorter than 1 character",
      "python_error": "'' should be non-empty\n\nFailed validating 'minLength' in schema['properties']['firstName']:\n    {'type': 'string', 'minLength': 1, 'maxLength': 1024}\n\nOn instance['firstName']:\n    ''",
      "data": {
        "id": "5f5f5f5f5f5f5f5f5f5f5f5f",
        "creationDate": "2022-01-01T12:00:00.000Z",
        "lastUpdated": "2022-01-01T12:00:00.000Z",
        "passwordLastUpdated": "2022-01-01T12:00:00.000Z",
        "email": "example@example.com",
        "emailVerified": true,
        "firstName": "",
        "lastName": "Doe",
        "companyName": "Example Inc.",
        "phoneNumber": "+1234567890",
        "location": "New York",
        "url": "https://example.com",
        "twoFactorAuthEnabled": false,
        "fullName": "John Doe",
        "userId": "5f5f5f5f5f5f5f5f5f5f5f5f",
        "summary": {
          "appCount": 10,
          "dashCount": 5,
          "orgCount": 2
        }
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"5f5f5f5f5f5f5f5f5f5f5f5\" does not match \"^[A-Fa-f\\d]{24}$\"",
      "python_error": "'5f5f5f5f5f5f5f5f5f5f5f5' does not match '^[A-Fa-f\\\\d]{24}$'\n\nFailed validating 'pattern' in schema['properties']['id']:\n    {'type': 'string', 'pattern': '^[A-Fa-f\\\\d]{24}$'}\n\nOn instance['id']:\n    '5f5f5f5f5f5f5f5f5f5f5f5'",
      "data": {
        "id": "5f5f5f5f5f5f5f5f5f5f5f5",
        "creationDate": "2022-01-01T12:00:00.000Z",
        "lastUpdated": "2022-01-01T12:00:00.000Z",
        "passwordLastUpdated": "2022-01-01T12:00:00.000Z",
        "email": "example@example.com",
        "emailVerified": true,
        "firstName": "",
        "lastName": "Doe",
        "companyName": "Example Inc.",
        "phoneNumber": "+1234567890",
        "location": "New York",
        "url": "https://example.com",
        "twoFactorAuthEnabled": false,
        "fullName": "John Doe",
        "userId": "5f5f5f5f5f5f5f5f5f5f5f5f",
        "summary": {
          "appCount": 10,
          "dashCount": 5,
          "orgCount": 2
        },
        "password": "1234567"
      }
    }
  ]
}