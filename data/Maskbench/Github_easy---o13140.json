{
  "description": "sample Github_easy/o13140.json",
  "meta": {
    "full_size": 575,
    "stripped_size": 281,
    "features": [
      "$ref",
      "additionalProperties",
      "items"
    ],
    "raw_features": [
      "$schema",
      "_boolSchema",
      "allOf:trivial",
      "definitions",
      "properties",
      "required",
      "type",
      "type:array",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "definitions": {
      "testField": {
        "title": "Module field name",
        "description": "A single module field name",
        "type": "string"
      }
    },
    "title": "Sample schema",
    "description": "Sample schema definition",
    "type": "object",
    "properties": {
      "foo": {
        "title": "Foo value",
        "description": "Some value of foo",
        "type": "string"
      },
      "bars": {
        "title": "Module many-to-many relationships",
        "description": "Configuration of many-to-many relationships",
        "type": "array",
        "items": {
          "allOf": [
            {
              "$ref": "#/definitions/testField"
            }
          ]
        }
      }
    },
    "additionalProperties": false,
    "required": [
      "foo"
    ]
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "foo": "some foo value",
        "bars": [
          "bar1",
          "bar2",
          "bar3"
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on allOf keyword",
      "valid": false,
      "rust_error": "123 is not of type \"string\"",
      "python_error": "123 is not of type 'string'\n\nFailed validating 'type' in schema['properties']['bars']['items']['allOf'][0]:\n    {'title': 'Module field name',\n     'description': 'A single module field name',\n     'type': 'string'}\n\nOn instance['bars'][1]:\n    123",
      "data": {
        "foo": "some foo value",
        "bars": [
          "bar1",
          123,
          "bar3"
        ]
      }
    }
  ]
}