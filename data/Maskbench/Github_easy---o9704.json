{
  "description": "sample Github_easy/o9704.json",
  "meta": {
    "full_size": 581,
    "stripped_size": 274,
    "features": [
      "@minmaxLength"
    ],
    "raw_features": [
      "$schema",
      "maxLength",
      "minLength",
      "properties",
      "required",
      "type",
      "type:integer",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "type": "object",
    "properties": {
      "kind": {
        "type": "string",
        "default": "resp",
        "readonly": "true",
        "description": "Defines that the message is a response"
      },
      "reqId": {
        "type": "string",
        "description": "The ID of the request that originated this response",
        "minLength": 1,
        "maxLength": 64,
        "default": "0"
      },
      "type": {
        "description": "Contains one of the APIs response type names",
        "type": "string"
      },
      "code": {
        "type": "integer",
        "description": "Response code according to the HTTP status codes standard"
      },
      "body": {}
    },
    "required": [
      "kind",
      "reqId",
      "code",
      "type",
      "body"
    ]
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "kind": "resp",
        "reqId": "1234567890",
        "type": "success",
        "code": 200,
        "body": {
          "message": "Request processed successfully"
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on minLength keyword or maxLength keyword",
      "valid": false,
      "rust_error": "\"\" is shorter than 1 character",
      "python_error": "'' should be non-empty\n\nFailed validating 'minLength' in schema['properties']['reqId']:\n    {'type': 'string',\n     'description': 'The ID of the request that originated this response',\n     'minLength': 1,\n     'maxLength': 64,\n     'default': '0'}\n\nOn instance['reqId']:\n    ''",
      "data": {
        "kind": "resp",
        "reqId": "",
        "type": "success",
        "code": 200,
        "body": {
          "message": "Request processed successfully"
        }
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"1234567890123456789012345678901234567890123456789012345678901234567890\" is longer than 64 characters",
      "python_error": "'1234567890123456789012345678901234567890123456789012345678901234567890' is too long\n\nFailed validating 'maxLength' in schema['properties']['reqId']:\n    {'type': 'string',\n     'description': 'The ID of the request that originated this response',\n     'minLength': 1,\n     'maxLength': 64,\n     'default': '0'}\n\nOn instance['reqId']:\n    '1234567890123456789012345678901234567890123456789012345678901234567890'",
      "data": {
        "kind": "resp",
        "reqId": "1234567890123456789012345678901234567890123456789012345678901234567890",
        "type": "success",
        "code": 200,
        "body": {
          "message": "Request processed successfully"
        }
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "kind": "resp",
        "reqId": "12345",
        "type": "success",
        "code": 200,
        "body": {
          "message": "Request processed successfully"
        }
      }
    }
  ]
}