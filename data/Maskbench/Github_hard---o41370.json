{
  "description": "sample Github_hard/o41370.json",
  "meta": {
    "full_size": 1513,
    "stripped_size": 1336,
    "features": [
      "enum"
    ],
    "raw_features": [
      "$schema",
      "properties",
      "required",
      "type",
      "type:boolean",
      "type:integer",
      "type:number",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "required": [
      "config",
      "inputs"
    ],
    "type": "object",
    "properties": {
      "inputs": {
        "required": [
          "segmentation_image"
        ],
        "type": "object",
        "properties": {
          "white_matter_prob_image": {
            "type": "object",
            "properties": {}
          },
          "cortical_thickness": {
            "type": "object",
            "properties": {}
          },
          "gray_matter_prob_image": {
            "type": "object",
            "properties": {}
          },
          "warped_white_matter": {
            "type": "object",
            "properties": {}
          },
          "thickness_prior_image": {
            "type": "object",
            "properties": {}
          },
          "segmentation_image": {
            "type": "object",
            "properties": {}
          }
        }
      },
      "config": {
        "required": [
          "gradient_step",
          "num_threads",
          "white_matter_label",
          "thickness_prior_estimate",
          "gray_matter_label",
          "smoothing_velocity_field",
          "smoothing_variance",
          "max_invert_displacement_field_iters",
          "dimension",
          "number_integration_points"
        ],
        "type": "object",
        "properties": {
          "gradient_step": {
            "default": 0.025,
            "type": "number"
          },
          "num_threads": {
            "default": 1,
            "type": "integer"
          },
          "white_matter_label": {
            "default": 3,
            "type": "integer"
          },
          "args": {
            "type": "string"
          },
          "thickness_prior_estimate": {
            "default": 10,
            "type": "number"
          },
          "gray_matter_label": {
            "default": 2,
            "type": "integer"
          },
          "dimension": {
            "default": 3,
            "enum": [
              3,
              2
            ],
            "type": "integer"
          },
          "number_integration_points": {
            "default": 10,
            "type": "integer"
          },
          "convergence": {
            "type": "string"
          },
          "smoothing_variance": {
            "default": 1,
            "type": "number"
          },
          "max_invert_displacement_field_iters": {
            "default": 20,
            "type": "integer"
          },
          "smoothing_velocity_field": {
            "default": 1.5,
            "type": "number"
          },
          "use_bspline_smoothing": {
            "type": "boolean"
          }
        }
      }
    },
    "title": "Invocation manifest for KellyKapowski"
  },
  "tests": [
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "inputs": {
          "white_matter_prob_image": {},
          "cortical_thickness": {},
          "gray_matter_prob_image": {},
          "warped_white_matter": {},
          "thickness_prior_image": {},
          "segmentation_image": {}
        },
        "config": {
          "gradient_step": 0.025,
          "num_threads": 1,
          "white_matter_label": 3,
          "args": "",
          "thickness_prior_estimate": 10,
          "gray_matter_label": 2,
          "dimension": 3,
          "number_integration_points": 10,
          "convergence": "",
          "smoothing_variance": 1,
          "max_invert_displacement_field_iters": 20,
          "smoothing_velocity_field": 1.5,
          "use_bspline_smoothing": false
        }
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"number_integration_points\" is a required property",
      "python_error": "'number_integration_points' is a required property\n\nFailed validating 'required' in schema['properties']['config']:\n    {'required': ['gradient_step',\n                  'num_threads',\n                  'white_matter_label',\n                  'thickness_prior_estimate',\n                  'gray_matter_label',\n                  'smoothing_velocity_field',\n                  'smoothing_variance',\n                  'max_invert_displacement_field_iters',\n                  'dimension',\n                  'number_integration_points'],\n     'type': 'object',\n     'properties': {'gradient_step': {'default': 0.025, 'type': 'number'},\n                    'num_threads': {'default': 1, 'type': 'integer'},\n                    'white_matter_label': {'default': 3, 'type': 'integer'},\n                    'args': {'type': 'string'},\n                    'thickness_prior_estimate': {'default': 10,\n                                                 'type': 'number'},\n                    'gray_matter_label': {'default': 2, 'type': 'int.. (1293 more)",
      "data": {
        "config": {
          "gradient_step": 0.025,
          "num_threads": 1,
          "white_matter_label": 3,
          "thickness_prior_estimate": 10,
          "gray_matter_label": 2,
          "smoothing_velocity_field": 1.5,
          "smoothing_variance": 1,
          "max_invert_displacement_field_iters": 20,
          "dimension": 4,
          "Invalid dimension value, should be either 3 or 2": "number_integration_points",
          "Missing a required field to make invalid": "args",
          "convergence": "",
          "use_bspline_smoothing": false
        },
        "inputs": {
          "white_matter_prob_image": {},
          "cortical_thickness": {},
          "gray_matter_prob_image": {},
          "warped_white_matter": {},
          "thickness_prior_image": {},
          "segmentation_image": {}
        }
      }
    }
  ]
}