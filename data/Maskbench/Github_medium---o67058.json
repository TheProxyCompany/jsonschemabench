{
  "description": "sample Github_medium/o67058.json",
  "meta": {
    "full_size": 621,
    "stripped_size": 605,
    "features": [
      "additionalProperties",
      "enum"
    ],
    "raw_features": [
      "$schema",
      "_boolSchema",
      "id",
      "properties",
      "required",
      "type",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "id": "https://flynn.io/schema/examples/base#",
    "type": "object",
    "additionalProperties": false,
    "required": [
      "request",
      "response"
    ],
    "properties": {
      "request": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "method",
          "url",
          "headers"
        ],
        "properties": {
          "method": {
            "type": "string",
            "enum": [
              "GET",
              "POST",
              "PUT",
              "DELETE"
            ]
          },
          "url": {
            "type": "string",
            "_format": "uri"
          },
          "headers": {
            "type": "object"
          },
          "params": {
            "type": "object"
          },
          "body": {
            "type": "object"
          }
        }
      },
      "response": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "headers"
        ],
        "properties": {
          "headers": {
            "type": "object"
          },
          "body": {}
        }
      }
    }
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "request": {
          "method": "GET",
          "url": "https://example.com/path",
          "headers": {
            "Content-Type": "application/json",
            "Accept": "application/json"
          },
          "params": {
            "key": "value"
          },
          "body": {
            "key": "value"
          }
        },
        "response": {
          "headers": {
            "Content-Type": "application/json"
          },
          "body": {
            "key": "value"
          }
        }
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"PATCH\" is not one of [\"GET\",\"POST\",\"PUT\",\"DELETE\"]",
      "python_error": "'PATCH' is not one of ['GET', 'POST', 'PUT', 'DELETE']\n\nFailed validating 'enum' in schema['properties']['request']['properties']['method']:\n    {'type': 'string', 'enum': ['GET', 'POST', 'PUT', 'DELETE']}\n\nOn instance['request']['method']:\n    'PATCH'",
      "data": {
        "request": {
          "method": "PATCH",
          "url": "https://example.com/path",
          "headers": {
            "Content-Type": "application/json",
            "Accept": "application/json"
          },
          "params": {
            "key": "value"
          },
          "body": {
            "key": "value"
          }
        },
        "response": {
          "headers": {
            "Content-Type": "application/json"
          },
          "body": {
            "key": "value"
          }
        }
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "request": {
          "method": "GET",
          "url": "https://example.com/path",
          "headers": {
            "Content-Type": "application/json",
            "Accept": "application/json"
          },
          "params": {
            "param1": "value1",
            "param2": "value2"
          },
          "body": {
            "key": "value"
          }
        },
        "response": {
          "headers": {
            "Content-Type": "application/json",
            "Server": "Example Server"
          },
          "body": {
            "key": "value"
          }
        }
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"HEAD\" is not one of [\"GET\",\"POST\",\"PUT\",\"DELETE\"]",
      "python_error": "'url' is a required property\n\nFailed validating 'required' in schema['properties']['request']:\n    {'type': 'object',\n     'additionalProperties': False,\n     'required': ['method', 'url', 'headers'],\n     'properties': {'method': {'type': 'string',\n                               'enum': ['GET', 'POST', 'PUT', 'DELETE']},\n                    'url': {'type': 'string', '_format': 'uri'},\n                    'headers': {'type': 'object'},\n                    'params': {'type': 'object'},\n                    'body': {'type': 'object'}}}\n\nOn instance['request']:\n    {'method': 'HEAD'}",
      "data": {
        "request": {
          "method": "HEAD"
        },
        "response": {
          "headers": {
            "Content-Type": "application/json"
          }
        }
      }
    }
  ]
}