{
  "description": "sample JsonSchemaStore/red_cog.schema.json",
  "meta": {
    "full_size": 2872,
    "stripped_size": 1273,
    "features": [
      "$ref",
      "@minmaxItems",
      "@siblingKeys",
      "additionalProperties",
      "enum",
      "format",
      "format:uri",
      "items",
      "pattern",
      "patternProperties",
      "uniqueItems"
    ],
    "raw_features": [
      "$id",
      "$schema",
      "_boolSchema",
      "definitions",
      "maxItems",
      "minItems",
      "properties",
      "type",
      "type:array",
      "type:boolean",
      "type:integer",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$id": "https://raw.githubusercontent.com/Cog-Creators/Red-DiscordBot/V3/develop/schema/red_cog.schema.json",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "Red-DiscordBot Ð¡og metadata file",
    "type": "object",
    "properties": {
      "author": {
        "type": "array",
        "description": "List of names of authors of the cog",
        "items": {
          "type": "string"
        }
      },
      "description": {
        "type": "string",
        "description": "A long description of the cog or repo. For cogs, this is displayed when a user executes [p]cog info."
      },
      "install_msg": {
        "type": "string",
        "description": "The message that gets displayed when a cog is installed or a repo is added"
      },
      "short": {
        "type": "string",
        "description": "A short description of the cog or repo. For cogs, this info is displayed when a user executes [p]cog list"
      },
      "end_user_data_statement": {
        "type": "string",
        "description": "A statement explaining what end user data the cog is storing. This is displayed when a user executes [p]cog info. If the statement has changed since last update, user will be informed during the update."
      },
      "min_bot_version": {
        "type": "string",
        "description": "Min version number of Red in the format MAJOR.MINOR.MICRO",
        "pattern": "^(0|[1-9][0-9]*)\\.(0|[1-9][0-9]*)\\.(0|[1-9][0-9]*)((a|b|rc)(0|[1-9][0-9]*))?(\\.post(0|[1-9][0-9]*))?(\\.dev(0|[1-9][0-9]*))?$"
      },
      "max_bot_version": {
        "type": "string",
        "description": "Max version number of Red in the format MAJOR.MINOR.MICRO, if min_bot_version is newer than max_bot_version, max_bot_version will be ignored",
        "pattern": "^(0|[1-9][0-9]*)\\.(0|[1-9][0-9]*)\\.(0|[1-9][0-9]*)((a|b|rc)(0|[1-9][0-9]*))?(\\.post(0|[1-9][0-9]*))?(\\.dev(0|[1-9][0-9]*))?$"
      },
      "min_python_version": {
        "type": "array",
        "description": "Min version number of Python in the format [MAJOR, MINOR, PATCH]",
        "minItems": 3,
        "maxItems": 3,
        "items": {
          "type": "integer"
        }
      },
      "hidden": {
        "type": "boolean",
        "description": "Determines if a cog is visible in the cog list for a repo."
      },
      "disabled": {
        "type": "boolean",
        "description": "Determines if a cog is available for install."
      },
      "required_cogs": {
        "type": "object",
        "description": "A dict of required cogs that this cog depends on in the format {cog_name : repo_url}. Downloader will not deal with this functionality but it may be useful for other cogs.",
        "$ref": "#/definitions/required_cog"
      },
      "requirements": {
        "type": "array",
        "description": "List of required libraries that are passed to pip on cog install.",
        "items": {
          "type": "string"
        }
      },
      "tags": {
        "type": "array",
        "description": "A list of strings that are related to the functionality of the cog. Used to aid in searching.",
        "uniqueItems": true,
        "items": {
          "type": "string"
        }
      },
      "type": {
        "type": "string",
        "description": "Optional, defaults to COG. Must be either COG or SHARED_LIBRARY. If SHARED_LIBRARY then hidden will be True.",
        "enum": [
          "COG",
          "SHARED_LIBRARY"
        ]
      }
    },
    "definitions": {
      "required_cog": {
        "type": "object",
        "patternProperties": {
          ".+": {
            "type": "string",
            "format": "uri"
          }
        },
        "additionalProperties": false
      }
    }
  },
  "tests": [
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "$id": "https://example.com/red_cog.schema.json",
        "author": [
          "John Doe",
          "Jane Doe"
        ],
        "description": "This is a long description of the cog or repo.",
        "install_msg": "This is the message that gets displayed when a cog is installed or a repo is added",
        "short": "This is a short description of the cog or repo.",
        "end_user_data_statement": "This cog stores user data for the purpose of providing a better experience.",
        "min_bot_version": "3.4.5",
        "max_bot_version": "3.5.0",
        "min_python_version": [
          3,
          8,
          0
        ],
        "hidden": false,
        "disabled": false,
        "required_cogs": {
          "cog1": "https://example.com/cog1",
          "cog2": "https://example.com/cog2"
        },
        "requirements": [
          "requests",
          "numpy"
        ],
        "tags": [
          "tag1",
          "tag2",
          "tag3"
        ],
        "type": "COG"
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "$id": "https://raw.githubusercontent.com/Cog-Creators/Red-DiscordBot/V3/develop/schema/red_cog.schema.json",
        "author": [
          "John Doe",
          "Jane Doe"
        ],
        "description": "This is a long description of the cog or repo.",
        "install_msg": "This cog has been installed successfully.",
        "short": "A short description of the cog or repo.",
        "end_user_data_statement": "This cog stores user data for analytics purposes.",
        "min_bot_version": "3.4.0",
        "max_bot_version": "3.5.0",
        "min_python_version": [
          3,
          8,
          0
        ],
        "hidden": false,
        "disabled": false,
        "required_cogs": {
          "cog1": "https://github.com/user/repo",
          "cog2": "https://github.com/user/repo2"
        },
        "requirements": [
          "library1",
          "library2"
        ],
        "tags": [
          "tag1",
          "tag2"
        ],
        "type": "COG"
      }
    },
    {
      "description": "llama-70b generated negative; focus on minItems keyword or maxItems keyword",
      "valid": false,
      "rust_error": "[3] has less than 3 items",
      "python_error": "[3] is too short\n\nFailed validating 'minItems' in schema['properties']['min_python_version']:\n    {'type': 'array',\n     'description': 'Min version number of Python in the format [MAJOR, '\n                    'MINOR, PATCH]',\n     'minItems': 3,\n     'maxItems': 3,\n     'items': {'type': 'integer'}}\n\nOn instance['min_python_version']:\n    [3]",
      "data": {
        "$id": "https://raw.githubusercontent.com/Cog-Creators/Red-DiscordBot/V3/develop/schema/red_cog.schema.json",
        "author": [
          "John Doe",
          "Jane Doe"
        ],
        "description": "This is a long description of the cog or repo.",
        "install_msg": "This cog has been installed successfully.",
        "short": "A short description of the cog or repo.",
        "end_user_data_statement": "This cog stores user data for analytics purposes.",
        "min_bot_version": "3.4.0",
        "max_bot_version": "3.5.0",
        "min_python_version": [
          3
        ],
        "hidden": false,
        "disabled": false,
        "required_cogs": {
          "cog1": "https://github.com/user/repo",
          "cog2": "https://github.com/user/repo2"
        },
        "requirements": [
          "library1",
          "library2"
        ],
        "tags": [
          "tag1",
          "tag2"
        ],
        "type": "COG"
      }
    },
    {
      "description": "llama-70b generated negative; focus on format keyword",
      "valid": false,
      "rust_error": "\"not a valid url\" is not a \"uri\"",
      "python_error": "'not a valid url' is not a 'uri'\n\nFailed validating 'format' in schema['properties']['required_cogs']['patternProperties']['.+']:\n    {'type': 'string', 'format': 'uri'}\n\nOn instance['required_cogs']['cog1']:\n    'not a valid url'",
      "data": {
        "$id": "https://raw.githubusercontent.com/Cog-Creators/Red-DiscordBot/V3/develop/schema/red_cog.schema.json",
        "author": [
          "John Doe",
          "Jane Doe"
        ],
        "description": "This is a long description of the cog or repo.",
        "install_msg": "This cog has been installed successfully.",
        "short": "A short description of the cog or repo.",
        "end_user_data_statement": "This cog stores user data for analytics purposes.",
        "min_bot_version": "3.4.0",
        "max_bot_version": "3.5.0",
        "min_python_version": [
          3,
          8,
          0
        ],
        "hidden": false,
        "disabled": false,
        "required_cogs": {
          "cog1": "not a valid url",
          "cog2": "https://github.com/user/repo2"
        },
        "requirements": [
          "library1",
          "library2"
        ],
        "tags": [
          "tag1",
          "tag2"
        ],
        "type": "COG"
      }
    },
    {
      "description": "llama-70b generated negative; focus on uniqueItems keyword",
      "valid": false,
      "rust_error": "[\"tag1\",\"tag1\",\"tag2\"] has non-unique elements",
      "python_error": "['tag1', 'tag1', 'tag2'] has non-unique elements\n\nFailed validating 'uniqueItems' in schema['properties']['tags']:\n    {'type': 'array',\n     'description': 'A list of strings that are related to the '\n                    'functionality of the cog. Used to aid in searching.',\n     'uniqueItems': True,\n     'items': {'type': 'string'}}\n\nOn instance['tags']:\n    ['tag1', 'tag1', 'tag2']",
      "data": {
        "$id": "https://raw.githubusercontent.com/Cog-Creators/Red-DiscordBot/V3/develop/schema/red_cog.schema.json",
        "author": [
          "John Doe",
          "Jane Doe"
        ],
        "description": "This is a long description of the cog or repo.",
        "install_msg": "This cog has been installed successfully.",
        "short": "A short description of the cog or repo.",
        "end_user_data_statement": "This cog stores user data for analytics purposes.",
        "min_bot_version": "3.4.0",
        "max_bot_version": "3.5.0",
        "min_python_version": [
          3,
          8,
          0
        ],
        "hidden": false,
        "disabled": false,
        "required_cogs": {
          "cog1": "https://github.com/user/repo",
          "cog2": "https://github.com/user/repo2"
        },
        "requirements": [
          "library1",
          "library2"
        ],
        "tags": [
          "tag1",
          "tag1",
          "tag2"
        ],
        "type": "COG"
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "123 is not of type \"string\"",
      "python_error": "['tag1', 'tag1'] has non-unique elements\n\nFailed validating 'uniqueItems' in schema['properties']['tags']:\n    {'type': 'array',\n     'description': 'A list of strings that are related to the '\n                    'functionality of the cog. Used to aid in searching.',\n     'uniqueItems': True,\n     'items': {'type': 'string'}}\n\nOn instance['tags']:\n    ['tag1', 'tag1']",
      "data": {
        "$id": "https://raw.githubusercontent.com/Cog-Creators/Red-DiscordBot/V3/develop/schema/red_cog.schema.json",
        "author": [
          "John Doe",
          123
        ],
        "description": "This is a long description of the cog or repo.",
        "install_msg": "This cog has been installed successfully.",
        "short": "A short description of the cog or repo.",
        "end_user_data_statement": "This cog stores user data for analytics purposes.",
        "min_bot_version": "3.4.0",
        "max_bot_version": "3.5.0",
        "min_python_version": [
          3,
          8
        ],
        "hidden": false,
        "disabled": false,
        "required_cogs": {
          "cog1": "not a url"
        },
        "requirements": [
          "library1",
          "library2"
        ],
        "tags": [
          "tag1",
          "tag1"
        ],
        "type": "COG"
      }
    }
  ]
}