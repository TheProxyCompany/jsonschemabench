{
  "description": "sample Kubernetes/kb_673_Normalized.json",
  "meta": {
    "full_size": 732,
    "stripped_size": 135,
    "features": [],
    "raw_features": [
      "properties",
      "required",
      "type",
      "type:[]",
      "type:boolean",
      "type:null",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "description": "PersistentVolumeClaimVolumeSource references the user's PVC in the same namespace. This volume finds the bound PV and mounts that volume for the pod. A PersistentVolumeClaimVolumeSource is, essentially, a wrapper around another type of volume that is owned by someone else (the system).",
    "properties": {
      "claimName": {
        "description": "ClaimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims",
        "type": [
          "string",
          "null"
        ]
      },
      "readOnly": {
        "description": "Will force the ReadOnly setting in VolumeMounts. Default false.",
        "type": [
          "boolean",
          "null"
        ]
      }
    },
    "required": [
      "claimName"
    ],
    "type": "object"
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "claimName": "my-pvc",
        "readOnly": false
      }
    },
    {
      "description": "llama-70b generated negative; focus on type keyword with an array of types",
      "valid": false,
      "rust_error": "123 is not of types \"null\", \"string\"",
      "python_error": "123 is not of type 'string', 'null'\n\nFailed validating 'type' in schema['properties']['claimName']:\n    {'description': 'ClaimName is the name of a PersistentVolumeClaim in '\n                    'the same namespace as the pod using this volume. More '\n                    'info: '\n                    'https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims',\n     'type': ['string', 'null']}\n\nOn instance['claimName']:\n    123",
      "data": {
        "claimName": 123,
        "readOnly": false
      }
    }
  ]
}