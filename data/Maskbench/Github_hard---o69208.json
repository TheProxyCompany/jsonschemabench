{
  "description": "sample Github_hard/o69208.json",
  "meta": {
    "full_size": 10648,
    "stripped_size": 10611,
    "features": [
      "$ref",
      "anyOf",
      "enum",
      "items"
    ],
    "raw_features": [
      "$schema",
      "definitions",
      "properties",
      "required",
      "type",
      "type:array",
      "type:boolean",
      "type:number",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "type": "object",
    "properties": {
      "class": {
        "type": "string",
        "enum": [
          "ExpressionTool"
        ]
      },
      "expression": {
        "$ref": "#/definitions/Expression"
      },
      "id": {
        "type": "string"
      },
      "inputs": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/InputParameter"
        }
      },
      "outputs": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/OutputParameter"
        }
      },
      "requirements": {
        "type": "array",
        "items": {
          "anyOf": [
            {
              "$ref": "#/definitions/DockerRequirement"
            },
            {
              "$ref": "#/definitions/SubworkflowFeatureRequirement"
            },
            {
              "$ref": "#/definitions/CreateFileRequirement"
            },
            {
              "$ref": "#/definitions/EnvVarRequirement"
            },
            {
              "$ref": "#/definitions/ScatterFeatureRequirement"
            },
            {
              "$ref": "#/definitions/SchemaDefRequirement"
            },
            {
              "$ref": "#/definitions/ExpressionEngineRequirement"
            }
          ]
        }
      },
      "hints": {
        "type": "array",
        "items": {}
      },
      "label": {
        "type": "string"
      },
      "description": {
        "type": "string"
      },
      "cwlVersion": {
        "$ref": "#/definitions/CWLVersions",
        "description": "CWL document version"
      },
      "sbg:modifiedBy": {
        "type": "string"
      },
      "sbg:revisionInfo": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/SBGRevision"
        }
      },
      "sbg:revision": {
        "type": "number"
      },
      "sbg:createdBy": {
        "type": "string"
      },
      "sbg:id": {
        "type": "string"
      },
      "sbg:contributors": {
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      "sbg:sbgMaintained": {
        "type": "boolean"
      },
      "sbg:project": {
        "type": "string"
      },
      "sbg:validationErrors": {
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      "sbg:modifiedOn": {
        "type": "number"
      },
      "sbg:revisionNotes": {
        "type": "string"
      },
      "sbg:toolkit": {
        "type": "string"
      },
      "sbg:toolkitVersion": {
        "type": "string"
      },
      "sbg:links": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/SBGLink"
        }
      },
      "sbg:toolAuthor": {
        "type": "string"
      },
      "sbg:license": {
        "type": "string"
      },
      "sbg:categories": {
        "type": "array",
        "items": {
          "type": "string"
        }
      }
    },
    "required": [
      "class",
      "expression",
      "inputs",
      "outputs"
    ],
    "definitions": {
      "Expression": {
        "type": "object",
        "properties": {
          "engine": {
            "type": "string"
          },
          "script": {
            "type": "string"
          },
          "class": {
            "type": "string",
            "enum": [
              "Expression"
            ]
          }
        },
        "required": [
          "engine",
          "script",
          "class"
        ]
      },
      "InputParameter": {
        "type": "object",
        "properties": {
          "type": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "null"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "boolean"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "int"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "long"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "float"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "double"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "bytes"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "string"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "File"
                ]
              },
              {
                "$ref": "#/definitions/InputSchema"
              },
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "type": "string",
                      "enum": [
                        "null"
                      ]
                    },
                    {
                      "type": "string",
                      "enum": [
                        "boolean"
                      ]
                    },
                    {
                      "type": "string",
                      "enum": [
                        "int"
                      ]
                    },
                    {
                      "type": "string",
                      "enum": [
                        "long"
                      ]
                    },
                    {
                      "type": "string",
                      "enum": [
                        "float"
                      ]
                    },
                    {
                      "type": "string",
                      "enum": [
                        "double"
                      ]
                    },
                    {
                      "type": "string",
                      "enum": [
                        "bytes"
                      ]
                    },
                    {
                      "type": "string",
                      "enum": [
                        "string"
                      ]
                    },
                    {
                      "type": "string",
                      "enum": [
                        "File"
                      ]
                    },
                    {
                      "$ref": "#/definitions/InputSchema"
                    },
                    {
                      "type": "string"
                    }
                  ]
                }
              }
            ]
          },
          "id": {
            "type": "string"
          },
          "inputBinding": {
            "$ref": "#/definitions/Binding"
          },
          "label": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "streamable": {
            "type": "boolean"
          },
          "default": {},
          "sbg:fileTypes": {
            "type": "string"
          }
        },
        "required": [
          "id"
        ]
      },
      "InputSchema": {
        "type": "object",
        "properties": {
          "type": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "record"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "array"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "enum"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "map"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "null"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "boolean"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "int"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "long"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "float"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "double"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "bytes"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "string"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "File"
                ]
              },
              {
                "$ref": "#/definitions/InputSchema"
              },
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "type": "string",
                      "enum": [
                        "record"
                      ]
                    },
                    {
                      "type": "string",
                      "enum": [
                        "array"
                      ]
                    },
                    {
                      "type": "string",
                      "enum": [
                        "enum"
                      ]
                    },
                    {
                      "type": "string",
                      "enum": [
                        "map"
                      ]
                    },
                    {
                      "type": "string",
                      "enum": [
                        "null"
                      ]
                    },
                    {
                      "type": "string",
                      "enum": [
                        "boolean"
                      ]
                    },
                    {
                      "type": "string",
                      "enum": [
                        "int"
                      ]
                    },
                    {
                      "type": "string",
                      "enum": [
                        "long"
                      ]
                    },
                    {
                      "type": "string",
                      "enum": [
                        "float"
                      ]
                    },
                    {
                      "type": "string",
                      "enum": [
                        "double"
                      ]
                    },
                    {
                      "type": "string",
                      "enum": [
                        "bytes"
                      ]
                    },
                    {
                      "type": "string",
                      "enum": [
                        "string"
                      ]
                    },
                    {
                      "type": "string",
                      "enum": [
                        "File"
                      ]
                    },
                    {
                      "$ref": "#/definitions/InputSchema"
                    },
                    {
                      "type": "string"
                    }
                  ]
                }
              }
            ]
          },
          "inputBinding": {
            "$ref": "#/definitions/Binding"
          },
          "items": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "null"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "boolean"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "int"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "long"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "float"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "double"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "bytes"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "string"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "File"
                ]
              },
              {
                "$ref": "#/definitions/InputSchema"
              },
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "type": "string",
                      "enum": [
                        "null"
                      ]
                    },
                    {
                      "type": "string",
                      "enum": [
                        "boolean"
                      ]
                    },
                    {
                      "type": "string",
                      "enum": [
                        "int"
                      ]
                    },
                    {
                      "type": "string",
                      "enum": [
                        "long"
                      ]
                    },
                    {
                      "type": "string",
                      "enum": [
                        "float"
                      ]
                    },
                    {
                      "type": "string",
                      "enum": [
                        "double"
                      ]
                    },
                    {
                      "type": "string",
                      "enum": [
                        "bytes"
                      ]
                    },
                    {
                      "type": "string",
                      "enum": [
                        "string"
                      ]
                    },
                    {
                      "type": "string",
                      "enum": [
                        "File"
                      ]
                    },
                    {
                      "$ref": "#/definitions/InputSchema"
                    },
                    {
                      "type": "string"
                    }
                  ]
                }
              }
            ]
          },
          "values": {
            "type": "string"
          },
          "symbols": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "fields": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/InputSchema"
            }
          }
        },
        "required": [
          "type"
        ]
      },
      "Binding": {
        "type": "object",
        "properties": {
          "loadContents": {
            "type": "boolean"
          },
          "secondaryFiles": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/definitions/Expression"
              },
              {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "$ref": "#/definitions/Expression"
                    }
                  ]
                }
              }
            ]
          }
        }
      },
      "OutputParameter": {
        "type": "object",
        "properties": {
          "type": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "null"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "boolean"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "int"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "long"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "float"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "double"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "bytes"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "string"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "File"
                ]
              },
              {
                "$ref": "#/definitions/OutputSchema"
              },
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "type": "string",
                      "enum": [
                        "null"
                      ]
                    },
                    {
                      "type": "string",
                      "enum": [
                        "boolean"
                      ]
                    },
                    {
                      "type": "string",
                      "enum": [
                        "int"
                      ]
                    },
                    {
                      "type": "string",
                      "enum": [
                        "long"
                      ]
                    },
                    {
                      "type": "string",
                      "enum": [
                        "float"
                      ]
                    },
                    {
                      "type": "string",
                      "enum": [
                        "double"
                      ]
                    },
                    {
                      "type": "string",
                      "enum": [
                        "bytes"
                      ]
                    },
                    {
                      "type": "string",
                      "enum": [
                        "string"
                      ]
                    },
                    {
                      "type": "string",
                      "enum": [
                        "File"
                      ]
                    },
                    {
                      "$ref": "#/definitions/OutputSchema"
                    },
                    {
                      "type": "string"
                    }
                  ]
                }
              }
            ]
          },
          "id": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "streamable": {
            "type": "boolean"
          },
          "default": {},
          "sbg:fileTypes": {
            "type": "string"
          }
        },
        "required": [
          "id"
        ]
      },
      "OutputSchema": {
        "type": "object",
        "properties": {
          "type": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "record"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "array"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "enum"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "map"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "null"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "boolean"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "int"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "long"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "float"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "double"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "bytes"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "string"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "File"
                ]
              },
              {
                "$ref": "#/definitions/OutputSchema"
              },
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "type": "string",
                      "enum": [
                        "record"
                      ]
                    },
                    {
                      "type": "string",
                      "enum": [
                        "array"
                      ]
                    },
                    {
                      "type": "string",
                      "enum": [
                        "enum"
                      ]
                    },
                    {
                      "type": "string",
                      "enum": [
                        "map"
                      ]
                    },
                    {
                      "type": "string",
                      "enum": [
                        "null"
                      ]
                    },
                    {
                      "type": "string",
                      "enum": [
                        "boolean"
                      ]
                    },
                    {
                      "type": "string",
                      "enum": [
                        "int"
                      ]
                    },
                    {
                      "type": "string",
                      "enum": [
                        "long"
                      ]
                    },
                    {
                      "type": "string",
                      "enum": [
                        "float"
                      ]
                    },
                    {
                      "type": "string",
                      "enum": [
                        "double"
                      ]
                    },
                    {
                      "type": "string",
                      "enum": [
                        "bytes"
                      ]
                    },
                    {
                      "type": "string",
                      "enum": [
                        "string"
                      ]
                    },
                    {
                      "type": "string",
                      "enum": [
                        "File"
                      ]
                    },
                    {
                      "$ref": "#/definitions/OutputSchema"
                    },
                    {
                      "type": "string"
                    }
                  ]
                }
              }
            ]
          },
          "items": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "null"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "boolean"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "int"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "long"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "float"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "double"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "bytes"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "string"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "File"
                ]
              },
              {
                "$ref": "#/definitions/OutputSchema"
              },
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "type": "string",
                      "enum": [
                        "null"
                      ]
                    },
                    {
                      "type": "string",
                      "enum": [
                        "boolean"
                      ]
                    },
                    {
                      "type": "string",
                      "enum": [
                        "int"
                      ]
                    },
                    {
                      "type": "string",
                      "enum": [
                        "long"
                      ]
                    },
                    {
                      "type": "string",
                      "enum": [
                        "float"
                      ]
                    },
                    {
                      "type": "string",
                      "enum": [
                        "double"
                      ]
                    },
                    {
                      "type": "string",
                      "enum": [
                        "bytes"
                      ]
                    },
                    {
                      "type": "string",
                      "enum": [
                        "string"
                      ]
                    },
                    {
                      "type": "string",
                      "enum": [
                        "File"
                      ]
                    },
                    {
                      "$ref": "#/definitions/OutputSchema"
                    },
                    {
                      "type": "string"
                    }
                  ]
                }
              }
            ]
          },
          "values": {
            "type": "string"
          },
          "symbols": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "fields": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/OutputSchema"
            }
          }
        },
        "required": [
          "type"
        ]
      },
      "DockerRequirement": {
        "type": "object",
        "properties": {
          "class": {
            "type": "string",
            "enum": [
              "DockerRequirement"
            ]
          },
          "dockerPull": {
            "type": "string"
          },
          "dockerLoad": {
            "type": "string"
          },
          "dockerFile": {
            "type": "string"
          },
          "dockerImageId": {
            "type": "string"
          },
          "dockerOutputDirectory": {
            "type": "string"
          }
        },
        "required": [
          "class"
        ]
      },
      "SubworkflowFeatureRequirement": {
        "type": "object",
        "properties": {}
      },
      "CreateFileRequirement": {
        "type": "object",
        "properties": {
          "class": {
            "type": "string",
            "enum": [
              "CreateFileRequirement"
            ]
          },
          "fileDef": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/FileDef"
            }
          }
        },
        "required": [
          "class",
          "fileDef"
        ]
      },
      "FileDef": {
        "type": "object",
        "properties": {
          "filename": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/definitions/Expression"
              }
            ]
          },
          "fileContent": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/definitions/Expression"
              }
            ]
          }
        },
        "required": [
          "filename",
          "fileContent"
        ]
      },
      "EnvVarRequirement": {
        "type": "object",
        "properties": {}
      },
      "ScatterFeatureRequirement": {
        "type": "object",
        "properties": {}
      },
      "SchemaDefRequirement": {
        "type": "object",
        "properties": {}
      },
      "ExpressionEngineRequirement": {
        "type": "object",
        "properties": {
          "class": {
            "type": "string",
            "enum": [
              "ExpressionEngineRequirement"
            ]
          },
          "id": {
            "type": "string"
          },
          "requirements": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/definitions/DockerRequirement"
                },
                {
                  "$ref": "#/definitions/SubworkflowFeatureRequirement"
                },
                {
                  "$ref": "#/definitions/CreateFileRequirement"
                },
                {
                  "$ref": "#/definitions/EnvVarRequirement"
                },
                {
                  "$ref": "#/definitions/ScatterFeatureRequirement"
                },
                {
                  "$ref": "#/definitions/SchemaDefRequirement"
                },
                {
                  "$ref": "#/definitions/ExpressionEngineRequirement"
                }
              ]
            }
          },
          "engineCommand": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "engineConfig": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "class",
          "id"
        ]
      },
      "SBGRevision": {
        "type": "object",
        "properties": {
          "sbg:revision": {
            "type": "number"
          },
          "sbg:modifiedBy": {
            "type": "string"
          },
          "sbg:revisionNotes": {
            "type": "string"
          },
          "sbg:modifiedOn": {
            "type": "number"
          }
        },
        "required": [
          "sbg:revision",
          "sbg:modifiedBy",
          "sbg:revisionNotes",
          "sbg:modifiedOn"
        ]
      },
      "SBGLink": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string"
          },
          "id": {
            "type": "string"
          }
        },
        "required": [
          "label",
          "id"
        ]
      },
      "CWLVersions": {
        "type": "string",
        "enum": [
          "sbg:draft-2"
        ]
      }
    },
    "$schema": "http://json-schema.org/draft-04/schema#"
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "class": "ExpressionTool",
        "expression": {
          "engine": "javascript",
          "script": "return inputs.input1 + inputs.input2;",
          "class": "Expression"
        },
        "id": "tool-id",
        "inputs": [
          {
            "type": "string",
            "id": "input1",
            "inputBinding": {
              "loadContents": true
            },
            "label": "Input 1",
            "description": "First input"
          },
          {
            "type": "string",
            "id": "input2",
            "inputBinding": {
              "loadContents": true
            },
            "label": "Input 2",
            "description": "Second input"
          }
        ],
        "outputs": [
          {
            "type": "string",
            "id": "output1",
            "label": "Output 1",
            "description": "Result of the expression"
          }
        ],
        "requirements": [
          {
            "class": "ExpressionEngineRequirement",
            "id": "expression-engine",
            "requirements": [],
            "engineCommand": [
              "node"
            ],
            "engineConfig": []
          }
        ],
        "hints": [],
        "label": "Example Tool",
        "description": "An example tool that uses an expression to combine two inputs",
        "cwlVersion": "sbg:draft-2",
        "sbg:modifiedBy": "user@example.com",
        "sbg:revisionInfo": [
          {
            "sbg:revision": 1,
            "sbg:modifiedBy": "user@example.com",
            "sbg:revisionNotes": "Initial version",
            "sbg:modifiedOn": 1643723400
          }
        ],
        "sbg:revision": 1,
        "sbg:createdBy": "user@example.com",
        "sbg:id": "tool-id",
        "sbg:contributors": [],
        "sbg:sbgMaintained": false,
        "sbg:project": "example-project",
        "sbg:validationErrors": [],
        "sbg:modifiedOn": 1643723400,
        "sbg:revisionNotes": "Initial version",
        "sbg:toolkit": "example-toolkit",
        "sbg:toolkitVersion": "1.0.0",
        "sbg:links": [
          {
            "label": "Example Link",
            "id": "https://example.com"
          }
        ],
        "sbg:toolAuthor": "John Doe",
        "sbg:license": "MIT",
        "sbg:categories": []
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"InvalidClass\" is not one of [\"ExpressionTool\"]",
      "python_error": "'InvalidClass' is not one of ['ExpressionTool']\n\nFailed validating 'enum' in schema['properties']['class']:\n    {'type': 'string', 'enum': ['ExpressionTool']}\n\nOn instance['class']:\n    'InvalidClass'",
      "data": {
        "class": "InvalidClass",
        "expression": {
          "engine": "javascript",
          "script": "return inputs.input1 + inputs.input2;",
          "class": "Expression"
        },
        "id": "tool-id",
        "inputs": [
          {
            "type": "string",
            "id": "input1",
            "inputBinding": {
              "loadContents": true
            },
            "label": "Input 1",
            "description": "First input"
          },
          {
            "type": "string",
            "id": "input2",
            "inputBinding": {
              "loadContents": true
            },
            "label": "Input 2",
            "description": "Second input"
          }
        ],
        "outputs": [
          {
            "type": "string",
            "id": "output1",
            "label": "Output 1",
            "description": "Result of the expression"
          }
        ],
        "requirements": [
          {
            "class": "ExpressionEngineRequirement",
            "id": "expression-engine",
            "requirements": [],
            "engineCommand": [
              "node"
            ],
            "engineConfig": []
          }
        ],
        "hints": [],
        "label": "Example Tool",
        "description": "An example tool that uses an expression to combine two inputs",
        "cwlVersion": "sbg:draft-2",
        "sbg:modifiedBy": "user@example.com",
        "sbg:revisionInfo": [
          {
            "sbg:revision": 1,
            "sbg:modifiedBy": "user@example.com",
            "sbg:revisionNotes": "Initial version",
            "sbg:modifiedOn": 1643723400
          }
        ],
        "sbg:revision": 1,
        "sbg:createdBy": "user@example.com",
        "sbg:id": "tool-id",
        "sbg:contributors": [],
        "sbg:sbgMaintained": false,
        "sbg:project": "example-project",
        "sbg:validationErrors": [],
        "sbg:modifiedOn": 1643723400,
        "sbg:revisionNotes": "Initial version",
        "sbg:toolkit": "example-toolkit",
        "sbg:toolkitVersion": "1.0.0",
        "sbg:links": [
          {
            "label": "Example Link",
            "id": "https://example.com"
          }
        ],
        "sbg:toolAuthor": "John Doe",
        "sbg:license": "MIT",
        "sbg:categories": []
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"1643723400\" is not of type \"number\"",
      "python_error": "'1643723400' is not of type 'number'\n\nFailed validating 'type' in schema['properties']['sbg:revisionInfo']['items']['properties']['sbg:modifiedOn']:\n    {'type': 'number'}\n\nOn instance['sbg:revisionInfo'][0]['sbg:modifiedOn']:\n    '1643723400'",
      "data": {
        "class": "ExpressionTool",
        "expression": {
          "engine": "javascript",
          "script": "return inputs.input1 + inputs.input2;",
          "class": "Expression"
        },
        "id": "tool-id",
        "inputs": [
          {
            "type": "string",
            "id": "input1",
            "inputBinding": {
              "loadContents": true
            },
            "label": "Input 1",
            "description": "First input"
          },
          {
            "type": "string",
            "id": "input2",
            "inputBinding": {
              "loadContents": true
            },
            "label": "Input 2",
            "description": "Second input"
          }
        ],
        "outputs": [
          {
            "type": "string",
            "id": "output1",
            "label": "Output 1",
            "description": "Result of the expression"
          }
        ],
        "requirements": [
          {
            "id": "expression-engine",
            "class": "ExpressionEngineRequirement",
            "requirements": [],
            "engineCommand": [
              "node"
            ],
            "engineConfig": []
          }
        ],
        "hints": [],
        "label": "Example Tool",
        "description": "An example tool that uses an expression to combine two inputs",
        "cwlVersion": "sbg:draft-2",
        "sbg:modifiedBy": "user@example.com",
        "sbg:revisionInfo": [
          {
            "sbg:revision": 1,
            "sbg:modifiedBy": "user@example.com",
            "sbg:revisionNotes": "Initial version",
            "sbg:modifiedOn": "1643723400",
            "extraField": "extraValue"
          }
        ],
        "sbg:revision": 1,
        "sbg:createdBy": "user@example.com",
        "sbg:id": "tool-id",
        "sbg:contributors": [],
        "sbg:sbgMaintained": false,
        "sbg:project": "example-project",
        "sbg:validationErrors": [],
        "sbg:modifiedOn": 1643723400,
        "sbg:revisionNotes": "Initial version",
        "sbg:toolkit": "example-toolkit",
        "sbg:toolkitVersion": "1.0.0",
        "sbg:links": [
          {
            "label": "Example Link",
            "id": "https://example.com"
          }
        ],
        "sbg:toolAuthor": "John Doe",
        "sbg:license": "MIT",
        "sbg:categories": []
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "class": "ExpressionTool",
        "expression": {
          "engine": "javascript",
          "script": "return inputs.input1 + inputs.input2;",
          "class": "Expression"
        },
        "id": "expression-tool",
        "inputs": [
          {
            "type": "int",
            "id": "input1",
            "inputBinding": {
              "loadContents": true
            },
            "label": "Input 1",
            "description": "First input"
          },
          {
            "type": "int",
            "id": "input2",
            "inputBinding": {
              "loadContents": true
            },
            "label": "Input 2",
            "description": "Second input"
          }
        ],
        "outputs": [
          {
            "type": "int",
            "id": "output",
            "label": "Output",
            "description": "Sum of inputs"
          }
        ],
        "requirements": [
          {
            "class": "ExpressionEngineRequirement",
            "id": "javascript-engine",
            "requirements": [],
            "engineCommand": "node",
            "engineConfig": []
          }
        ],
        "hints": [],
        "label": "Expression Tool",
        "description": "A simple expression tool",
        "cwlVersion": "sbg:draft-2",
        "sbg:modifiedBy": "John Doe",
        "sbg:revisionInfo": [
          {
            "sbg:revision": 1,
            "sbg:modifiedBy": "John Doe",
            "sbg:revisionNotes": "Initial revision",
            "sbg:modifiedOn": 1643723400
          }
        ],
        "sbg:revision": 1,
        "sbg:createdBy": "John Doe",
        "sbg:id": "expression-tool-id",
        "sbg:contributors": [
          "Jane Doe"
        ],
        "sbg:sbgMaintained": true,
        "sbg:project": "My Project",
        "sbg:validationErrors": [],
        "sbg:modifiedOn": 1643723400,
        "sbg:revisionNotes": "Initial revision",
        "sbg:toolkit": "My Toolkit",
        "sbg:toolkitVersion": "1.0.0",
        "sbg:links": [
          {
            "label": "Documentation",
            "id": "https://example.com/docs"
          }
        ],
        "sbg:toolAuthor": "John Doe",
        "sbg:license": "MIT",
        "sbg:categories": [
          "Math"
        ]
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"sbg:draft-1\" is not one of [\"sbg:draft-2\"]",
      "python_error": "'sbg:draft-1' is not one of ['sbg:draft-2']\n\nFailed validating 'enum' in schema['properties']['cwlVersion']:\n    {'type': 'string', 'enum': ['sbg:draft-2']}\n\nOn instance['cwlVersion']:\n    'sbg:draft-1'",
      "data": {
        "class": "ExpressionTool",
        "expression": {
          "engine": "javascript",
          "script": "return inputs.input1 + inputs.input2;",
          "class": "Expression"
        },
        "id": "expression-tool",
        "inputs": [
          {
            "type": "int",
            "id": "input1",
            "inputBinding": {
              "loadContents": true
            },
            "label": "Input 1",
            "description": "First input"
          },
          {
            "type": "int",
            "id": "input2",
            "inputBinding": {
              "loadContents": true
            },
            "label": "Input 2",
            "description": "Second input"
          }
        ],
        "outputs": [
          {
            "type": "int",
            "id": "output",
            "label": "Output",
            "description": "Sum of inputs"
          }
        ],
        "requirements": [
          {
            "id": "javascript-engine",
            "class": "ExpressionEngineRequirement",
            "requirements": [],
            "engineCommand": "node",
            "engineConfig": []
          }
        ],
        "hints": [],
        "label": "Expression Tool",
        "description": "A simple expression tool",
        "cwlVersion": "sbg:draft-1",
        "sbg:modifiedBy": "John Doe",
        "sbg:revisionInfo": [
          {
            "sbg:revision": 1,
            "sbg:modifiedBy": "John Doe",
            "sbg:revisionNotes": "Initial revision",
            "sbg:modifiedOn": 1643723400
          }
        ],
        "sbg:revision": 1,
        "sbg:createdBy": "John Doe",
        "sbg:id": "expression-tool-id",
        "sbg:contributors": [
          "Jane Doe"
        ],
        "sbg:sbgMaintained": true,
        "sbg:project": "My Project",
        "sbg:validationErrors": [],
        "sbg:modifiedOn": 1643723400,
        "sbg:revisionNotes": "Initial revision",
        "sbg:toolkit": "My Toolkit",
        "sbg:toolkitVersion": "1.0.0",
        "sbg:links": [
          {
            "label": "Documentation",
            "id": "https://example.com/docs"
          }
        ],
        "sbg:toolAuthor": "John Doe",
        "sbg:license": "MIT",
        "sbg:categories": [
          "Math"
        ]
      }
    }
  ]
}