{
  "description": "sample Github_medium/o61532.json",
  "meta": {
    "full_size": 2279,
    "stripped_size": 938,
    "features": [
      "$ref",
      "@minmaxProperties",
      "@siblingKeys",
      "additionalProperties",
      "anyOf",
      "const",
      "oneOf",
      "patternProperties"
    ],
    "raw_features": [
      "$schema",
      "_boolSchema",
      "definitions",
      "minProperties",
      "properties",
      "type",
      "type:boolean",
      "type:integer",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "Schema for .mopedrc",
    "definitions": {
      "appConfigDefinition": {
        "type": "object",
        "properties": {
          "dbMigrations": {
            "description": "Relative path to a folder to use for database migrations",
            "type": "string"
          },
          "clientEntryPoint": {
            "description": "Relative path to the entry point for the client.",
            "type": "string"
          },
          "dbOverrides": {
            "description": "Relative path to a file containing types to override database columns.",
            "type": "string"
          },
          "dbSchema": {
            "description": "Relative path to a folder to output a typed database schema to",
            "type": "string"
          },
          "dbURL": {
            "description": "The DATABASE_URL for use in development e.g. postgres://app-name@localhost/app-name",
            "type": "string"
          },
          "disableClient": {
            "default": false,
            "description": "Disable all client side compilation. If you do this you **must** render everything server side.",
            "type": "boolean"
          },
          "htmlTemplate": {
            "description": "Relative path to an html file to use as a template.",
            "type": "string"
          },
          "monorepo": {
            "description": "Mark this repository as having a single app.",
            "const": false
          },
          "port": {
            "description": "Default port to run the app on in development (N.B. backend will default to port + 1)",
            "type": "integer"
          },
          "publicDirectory": {
            "description": "Relative path to a public directory, from which all files will be made publicly available.",
            "type": "string"
          },
          "serverEntryPointDev": {
            "description": "Relative path to the entry point for the server in development.",
            "type": "string"
          },
          "serverEntryPointProd": {
            "description": "Relative path to the entry point for the server in production.",
            "type": "string"
          },
          "serverEntryPoint": {
            "description": "Relative path to the entry point for the server (can be overridden with serverEntryPointDev and serverEntryPointProd).",
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "monoRepoDefinition": {
        "type": "object",
        "properties": {
          "monorepo": {
            "description": "Mark this repository as having multiple apps with different entry points.",
            "const": true
          }
        },
        "patternProperties": {
          "^[a-z0-9\\-]+$": {
            "description": "The options to apply for this named app.",
            "oneOf": [
              {
                "$ref": "#/definitions/appConfigDefinition"
              },
              {
                "const": true
              }
            ]
          }
        },
        "minProperties": 2,
        "additionalProperties": false
      }
    },
    "type": "object",
    "anyOf": [
      {
        "$ref": "#/definitions/appConfigDefinition"
      },
      {
        "$ref": "#/definitions/monoRepoDefinition"
      }
    ]
  },
  "tests": [
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "dbMigrations": "migrations",
        "clientEntryPoint": "client/index.tsx",
        "dbOverrides": "overrides.ts",
        "dbSchema": "schema",
        "dbURL": "postgres://my-app@localhost/my-app",
        "disableClient": false,
        "htmlTemplate": "index.html",
        "monorepo": false,
        "port": 3000,
        "publicDirectory": "public",
        "serverEntryPointDev": "server/dev.ts",
        "serverEntryPointProd": "server/prod.ts",
        "serverEntryPoint": "server/index.ts"
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "dbMigrations": "migrations",
        "clientEntryPoint": "client/index.tsx",
        "dbOverrides": "overrides.ts",
        "dbSchema": "schema",
        "dbURL": "postgres://app-name@localhost/app-name",
        "disableClient": false,
        "htmlTemplate": "index.html",
        "monorepo": false,
        "port": 3000,
        "publicDirectory": "public",
        "serverEntryPointDev": "server/dev.ts",
        "serverEntryPointProd": "server/prod.ts",
        "serverEntryPoint": "server/index.ts"
      }
    },
    {
      "description": "llama-70b generated negative; focus on anyOf keyword",
      "valid": false,
      "rust_error": "{\"dbMigrations\":\"migrations\",\"clientEntryPoint\":\"client/index.tsx\",\"dbOverrides\":\"overrides.ts\",\"dbSchema\":\"schema\",\"dbURL\":\"postgres://app-name@localhost/app-name\",\"disableClient\":false,\"htmlTemplate\":\"index.html\",\"monorepo\":true,\"port\":3000,\"publicDirectory\":\"public\",\"serverEntryPointDev\":\"server/dev.ts\",\"serverEntryPointProd\":\"server/prod.ts\",\"serverEntryPoint\":\"server/index.ts\",\"app1\":{},\"app2\":{},\"anyOf\":\"someValue\"} is not valid under any of the schemas listed in the 'anyOf' keyword",
      "python_error": "False was expected\n\nFailed validating 'const' in schema[0]['properties']['monorepo']:\n    {'description': 'Mark this repository as having a single app.',\n     'const': False}\n\nOn instance['monorepo']:\n    True",
      "data": {
        "dbMigrations": "migrations",
        "clientEntryPoint": "client/index.tsx",
        "dbOverrides": "overrides.ts",
        "dbSchema": "schema",
        "dbURL": "postgres://app-name@localhost/app-name",
        "disableClient": false,
        "htmlTemplate": "index.html",
        "monorepo": true,
        "port": 3000,
        "publicDirectory": "public",
        "serverEntryPointDev": "server/dev.ts",
        "serverEntryPointProd": "server/prod.ts",
        "serverEntryPoint": "server/index.ts",
        "app1": {},
        "app2": {},
        "anyOf": "someValue"
      }
    },
    {
      "description": "llama-70b generated negative; focus on oneOf keyword",
      "valid": false,
      "rust_error": "{\"dbMigrations\":\"migrations\",\"clientEntryPoint\":\"client/index.tsx\",\"dbOverrides\":\"overrides.ts\",\"dbSchema\":\"schema\",\"dbURL\":\"postgres://app-name@localhost/app-name\",\"disableClient\":false,\"htmlTemplate\":\"index.html\",\"monorepo\":false,\"port\":3000,\"publicDirectory\":\"public\",\"serverEntryPointDev\":\"server/dev.ts\",\"serverEntryPointProd\":\"server/prod.ts\",\"serverEntryPoint\":\"server/index.ts\",\"unknown\":\"value\"} is not valid under any of the schemas listed in the 'anyOf' keyword",
      "python_error": "False is not valid under any of the given schemas\n\nFailed validating 'oneOf' in schema[1]['patternProperties']['^[a-z0-9\\\\-]+$']:\n    {'description': 'The options to apply for this named app.',\n     'oneOf': [{'$ref': '#/definitions/appConfigDefinition'},\n               {'const': True}]}\n\nOn instance['monorepo']:\n    False",
      "data": {
        "dbMigrations": "migrations",
        "clientEntryPoint": "client/index.tsx",
        "dbOverrides": "overrides.ts",
        "dbSchema": "schema",
        "dbURL": "postgres://app-name@localhost/app-name",
        "disableClient": false,
        "htmlTemplate": "index.html",
        "monorepo": false,
        "port": 3000,
        "publicDirectory": "public",
        "serverEntryPointDev": "server/dev.ts",
        "serverEntryPointProd": "server/prod.ts",
        "serverEntryPoint": "server/index.ts",
        "unknown": "value"
      }
    }
  ]
}