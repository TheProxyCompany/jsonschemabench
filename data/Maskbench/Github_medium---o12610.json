{
  "description": "sample Github_medium/o12610.json",
  "meta": {
    "full_size": 1303,
    "stripped_size": 509,
    "features": [
      "@minmaxInteger",
      "enum"
    ],
    "raw_features": [
      "$schema",
      "maximum",
      "minimum",
      "properties",
      "type",
      "type:boolean",
      "type:integer",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-06/schema#",
    "description": "Defines a physical Wi-Fi device and its configuration.",
    "type": "object",
    "properties": {
      "channel": {
        "type": "integer",
        "description": "Wi-Fi channel number.",
        "minimum": 1,
        "maximum": 165
      },
      "htmode": {
        "type": "string",
        "enum": [
          null,
          "HT20",
          "HT40+",
          "HT40-",
          "VHT20",
          "VHT40",
          "VHT80"
        ],
        "description": "Enable 802.11n or 802.11ac modes."
      },
      "hwmode": {
        "type": "string",
        "enum": [
          "11b",
          "11g",
          "11a"
        ],
        "description": "Basic operating mode (11b for old hardware, 11g for 2.4 GHz, 11a for 5 GHz)."
      },
      "id": {
        "type": "string",
        "description": "Physical identifier, e.g. pci-wifi-1 or usb-wifi-0."
      },
      "rx_stbc": {
        "type": "integer",
        "description": "Indicates support for receiving frames using STBC.",
        "minimum": 0,
        "maximum": 1
      },
      "short_gi_20": {
        "type": "boolean",
        "description": "Enable short guard interval (higher data rates) in 20 MHz channels, must be supported by device."
      },
      "short_gi_40": {
        "type": "boolean",
        "description": "Enable short guard interval (higher data rates) in 40 MHz channel, must be supported by device."
      },
      "short_gi_80": {
        "type": "boolean",
        "description": "Enable short guard interval (higher data rates) in 80 MHz channel, must be supported by device."
      },
      "tx_stbc": {
        "type": "integer",
        "description": "Indicates support for transmitting frames using STBC.",
        "minimum": 0,
        "maximum": 1
      }
    }
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "channel": 6,
        "htmode": "HT40+",
        "hwmode": "11g",
        "id": "pci-wifi-1",
        "rx_stbc": 1,
        "short_gi_20": true,
        "short_gi_40": true,
        "short_gi_80": true,
        "tx_stbc": 1
      }
    },
    {
      "description": "llama-70b generated negative; focus on minimum keyword or maximum keyword",
      "valid": false,
      "rust_error": "166 is greater than the maximum of 165",
      "python_error": "2 is greater than the maximum of 1\n\nFailed validating 'maximum' in schema['properties']['tx_stbc']:\n    {'type': 'integer',\n     'description': 'Indicates support for transmitting frames using STBC.',\n     'minimum': 0,\n     'maximum': 1}\n\nOn instance['tx_stbc']:\n    2",
      "data": {
        "channel": 166,
        "htmode": "HT40+",
        "hwmode": "11g",
        "id": "pci-wifi-1",
        "rx_stbc": 2,
        "short_gi_20": true,
        "short_gi_40": true,
        "short_gi_80": true,
        "tx_stbc": 2
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "166 is greater than the maximum of 165",
      "python_error": "166 is greater than the maximum of 165\n\nFailed validating 'maximum' in schema['properties']['channel']:\n    {'type': 'integer',\n     'description': 'Wi-Fi channel number.',\n     'minimum': 1,\n     'maximum': 165}\n\nOn instance['channel']:\n    166",
      "data": {
        "channel": 166,
        "htmode": "HT40+",
        "hwmode": "11g",
        "id": "pci-wifi-1",
        "rx_stbc": 1,
        "short_gi_20": true,
        "short_gi_40": true,
        "short_gi_80": true,
        "tx_stbc": 1
      }
    }
  ]
}