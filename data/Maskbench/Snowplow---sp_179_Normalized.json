{
  "description": "sample Snowplow/sp_179_Normalized.json",
  "meta": {
    "full_size": 3546,
    "stripped_size": 912,
    "features": [
      "@minmaxInteger",
      "@minmaxLength",
      "additionalProperties",
      "items"
    ],
    "raw_features": [
      "_boolSchema",
      "maxLength",
      "maximum",
      "minLength",
      "minimum",
      "properties",
      "type",
      "type:[]",
      "type:array",
      "type:integer",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "additionalProperties": true,
    "description": "Schema for a SendGrid bounce event. Property descriptions derived from the SendGrid documentation: https://sendgrid.com/docs/for-developers/tracking-events/event/",
    "properties": {
      "asm_group_id": {
        "description": "The ID of the unsubscribe group the recipient’s email address is included in. ASM IDs correspond to the ID that is returned when you create an unsubscribe group.",
        "maximum": 32767,
        "minimum": 0,
        "type": "integer"
      },
      "category": {
        "description": "Categories are custom tags that you set for the purpose of organizing your emails. Categories can be set as an array or string, and they will be returned as such when posted in your event endpoint.",
        "items": {
          "type": "string"
        },
        "type": [
          "array",
          "string"
        ]
      },
      "cert_error": {
        "description": "No longer found in the SendGrid documentation; possibly deprecated",
        "type": "string"
      },
      "email": {
        "_format": "email",
        "description": "The email address of the recipient",
        "type": "string"
      },
      "ip": {
        "_format": "ipv4",
        "description": "The IP address used to send the email. For open and click events, it is the IP address of the recipient who engaged with the email.",
        "type": "string"
      },
      "marketing_campaign_id": {
        "description": "For emails sent through our Marketing Campaigns feature, we add Marketing Campaigns specific parameters to the Event Webhook. Both marketing_campaign_name and marketing_campaign_id are displayed as unique arguments in the event data.",
        "type": "integer"
      },
      "marketing_campaign_name": {
        "description": "For emails sent through our Marketing Campaigns feature, we add Marketing Campaigns specific parameters to the Event Webhook. Both marketing_campaign_name and marketing_campaign_id are displayed as unique arguments in the event data.",
        "type": "string"
      },
      "marketing_campaign_split_id": {
        "description": "Marketing campaign split id",
        "type": "integer"
      },
      "marketing_campaign_version": {
        "description": "Displayed in the event data for emails sent as part of an A/B Test. The value for marketing_campaign_version are returned as A, B, C, etc.",
        "type": "string"
      },
      "newsletter": {
        "additionalProperties": true,
        "description": "Legacy Marketing Email tool fields",
        "properties": {
          "newsletter_id": {
            "type": "string"
          },
          "newsletter_send_id": {
            "type": "string"
          },
          "newsletter_user_list_id": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "reason": {
        "description": "Any sort of error response returned by the receiving server that describes the reason this event type was triggered",
        "type": "string"
      },
      "sg_event_id": {
        "description": "A unique ID to this event that you can use for deduplication purposes. These IDs are up to 100 characters long and are URL safe.",
        "maxLength": 4096,
        "minLength": 22,
        "type": "string"
      },
      "sg_message_id": {
        "description": "A unique, internal SendGrid ID for the message. The first half of this is pulled from the smtp-id.",
        "type": "string"
      },
      "smtp-id": {
        "description": "A unique ID attached to the message by the originating system",
        "type": "string"
      },
      "status": {
        "description": "Status code string. Corresponds to HTTP status code - for example, a JSON response of 5.0.0 is the same as a 500 error response.",
        "type": "string"
      },
      "timestamp": {
        "_format": "date-time",
        "description": "The timestamp of when the message was sent",
        "type": "string"
      },
      "tls": {
        "description": "Indicates whether TLS encription was used in sending this message. For more information about TLS, see the SendGrid TLS Glossary page.",
        "type": [
          "string",
          "integer"
        ]
      },
      "type": {
        "description": "Type of bounce, eg Bounce/Blocked/Expired",
        "type": "string"
      }
    },
    "self": {
      "format": "jsonschema",
      "name": "bounce",
      "vendor": "com.sendgrid",
      "version": "2-0-0"
    },
    "type": "object"
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "asm_group_id": 123,
        "category": [
          "category1",
          "category2"
        ],
        "cert_error": "cert_error",
        "email": "example@example.com",
        "ip": "192.168.1.1",
        "marketing_campaign_id": 456,
        "marketing_campaign_name": "marketing_campaign_name",
        "marketing_campaign_split_id": 789,
        "marketing_campaign_version": "A",
        "newsletter": {
          "newsletter_id": "newsletter_id",
          "newsletter_send_id": "newsletter_send_id",
          "newsletter_user_list_id": "newsletter_user_list_id"
        },
        "reason": "reason",
        "sg_event_id": "sg_event_id_1234567890",
        "sg_message_id": "sg_message_id_1234567890",
        "smtp-id": "smtp-id_1234567890",
        "status": "5.0.0",
        "timestamp": "2022-01-01T12:00:00Z",
        "tls": "tls",
        "type": "Bounce"
      }
    },
    {
      "description": "llama-70b generated negative; focus on minLength keyword or maxLength keyword",
      "valid": false,
      "rust_error": "\"a\" is shorter than 22 characters",
      "python_error": "'a' is too short\n\nFailed validating 'minLength' in schema['properties']['sg_event_id']:\n    {'description': 'A unique ID to this event that you can use for '\n                    'deduplication purposes. These IDs are up to 100 '\n                    'characters long and are URL safe.',\n     'maxLength': 4096,\n     'minLength': 22,\n     'type': 'string'}\n\nOn instance['sg_event_id']:\n    'a'",
      "data": {
        "asm_group_id": 123,
        "category": [
          "category1",
          "category2"
        ],
        "cert_error": "cert_error",
        "email": "example@example.com",
        "ip": "192.168.1.1",
        "marketing_campaign_id": 456,
        "marketing_campaign_name": "marketing_campaign_name",
        "marketing_campaign_split_id": 789,
        "marketing_campaign_version": "A",
        "newsletter": {
          "newsletter_id": "newsletter_id",
          "newsletter_send_id": "newsletter_send_id",
          "newsletter_user_list_id": "newsletter_user_list_id"
        },
        "reason": "reason",
        "sg_event_id": "a",
        "sg_message_id": "sg_message_id_1234567890",
        "smtp-id": "smtp-id_1234567890",
        "status": "5.0.0",
        "timestamp": "2022-01-01T12:00:00Z",
        "tls": "tls",
        "type": "Bounce"
      }
    },
    {
      "description": "llama-70b generated negative; focus on type keyword with an array of types",
      "valid": false,
      "rust_error": "123 is not of type \"string\"",
      "python_error": "123 is not of type 'string'\n\nFailed validating 'type' in schema['properties']['category']['items']:\n    {'type': 'string'}\n\nOn instance['category'][1]:\n    123",
      "data": {
        "asm_group_id": 123,
        "category": [
          "category1",
          123,
          "category2"
        ],
        "cert_error": "cert_error",
        "email": "example@example.com",
        "ip": "192.168.1.1",
        "marketing_campaign_id": 456,
        "marketing_campaign_name": "marketing_campaign_name",
        "marketing_campaign_split_id": 789,
        "marketing_campaign_version": "A",
        "newsletter": {
          "newsletter_id": "newsletter_id",
          "newsletter_send_id": "newsletter_send_id",
          "newsletter_user_list_id": "newsletter_user_list_id"
        },
        "reason": "reason",
        "sg_event_id": "sg_event_id_1234567890",
        "sg_message_id": "sg_message_id_1234567890",
        "smtp-id": "smtp-id_1234567890",
        "status": "5.0.0",
        "timestamp": "2022-01-01T12:00:00Z",
        "tls": "tls",
        "type": "Bounce"
      }
    },
    {
      "description": "llama-70b generated negative; focus on minimum keyword or maximum keyword",
      "valid": false,
      "rust_error": "-1 is less than the minimum of 0",
      "python_error": "-1 is less than the minimum of 0\n\nFailed validating 'minimum' in schema['properties']['asm_group_id']:\n    {'description': 'The ID of the unsubscribe group the recipient’s email '\n                    'address is included in. ASM IDs correspond to the ID '\n                    'that is returned when you create an unsubscribe '\n                    'group.',\n     'maximum': 32767,\n     'minimum': 0,\n     'type': 'integer'}\n\nOn instance['asm_group_id']:\n    -1",
      "data": {
        "asm_group_id": -1,
        "category": [
          "category1",
          "category2"
        ],
        "cert_error": "cert_error",
        "email": "example@example.com",
        "ip": "192.168.1.1",
        "marketing_campaign_id": 456,
        "marketing_campaign_name": "marketing_campaign_name",
        "marketing_campaign_split_id": 789,
        "marketing_campaign_version": "A",
        "newsletter": {
          "newsletter_id": "newsletter_id",
          "newsletter_send_id": "newsletter_send_id",
          "newsletter_user_list_id": "newsletter_user_list_id"
        },
        "reason": "reason",
        "sg_event_id": "sg_event_id_1234567890",
        "sg_message_id": "sg_message_id_1234567890",
        "smtp-id": "smtp-id_1234567890",
        "status": "5.0.0",
        "timestamp": "2022-01-01T12:00:00Z",
        "tls": "tls",
        "type": "Bounce"
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"sg_event_id_123456789\" is shorter than 22 characters",
      "python_error": "'sg_event_id_123456789' is too short\n\nFailed validating 'minLength' in schema['properties']['sg_event_id']:\n    {'description': 'A unique ID to this event that you can use for '\n                    'deduplication purposes. These IDs are up to 100 '\n                    'characters long and are URL safe.',\n     'maxLength': 4096,\n     'minLength': 22,\n     'type': 'string'}\n\nOn instance['sg_event_id']:\n    'sg_event_id_123456789'",
      "data": {
        "asm_group_id": 123,
        "category": [
          "category1",
          "category2"
        ],
        "cert_error": "cert_error",
        "email": "example@example",
        "ip": "192.168.1.1",
        "marketing_campaign_id": 456,
        "marketing_campaign_name": "marketing_campaign_name",
        "marketing_campaign_split_id": 789,
        "marketing_campaign_version": "A",
        "newsletter": {
          "newsletter_id": "newsletter_id",
          "newsletter_send_id": "newsletter_send_id",
          "newsletter_user_list_id": "newsletter_user_list_id"
        },
        "reason": "reason",
        "sg_event_id": "sg_event_id_123456789",
        "sg_message_id": "sg_message_id_1234567890",
        "smtp-id": "smtp-id_1234567890",
        "status": "5.0.0",
        "timestamp": "2022-01-01T12:00:00Z",
        "tls": "tls",
        "type": "Bounce"
      }
    },
    {
      "description": "llama-70b generated negative; focus on type keyword with an array of types",
      "valid": false,
      "rust_error": "123 is not of types \"array\", \"string\"",
      "python_error": "123 is not of type 'array', 'string'\n\nFailed validating 'type' in schema['properties']['category']:\n    {'description': 'Categories are custom tags that you set for the '\n                    'purpose of organizing your emails. Categories can be '\n                    'set as an array or string, and they will be returned '\n                    'as such when posted in your event endpoint.',\n     'items': {'type': 'string'},\n     'type': ['array', 'string']}\n\nOn instance['category']:\n    123",
      "data": {
        "asm_group_id": 123,
        "category": 123,
        "cert_error": "cert_error",
        "email": "example@example.com",
        "ip": "192.168.1.1",
        "marketing_campaign_id": 456,
        "marketing_campaign_name": "marketing_campaign_name",
        "marketing_campaign_split_id": 789,
        "marketing_campaign_version": "A",
        "newsletter": {
          "newsletter_id": "newsletter_id",
          "newsletter_send_id": "newsletter_send_id",
          "newsletter_user_list_id": "newsletter_user_list_id"
        },
        "reason": "reason",
        "sg_event_id": "sg_event_id_1234567890",
        "sg_message_id": "sg_message_id_1234567890",
        "smtp-id": "smtp-id_1234567890",
        "status": "5.0.0",
        "timestamp": "2022-01-01T12:00:00Z",
        "tls": "tls",
        "type": "Bounce"
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "32768 is greater than the maximum of 32767",
      "python_error": "'sg_event_id_123456789' is too short\n\nFailed validating 'minLength' in schema['properties']['sg_event_id']:\n    {'description': 'A unique ID to this event that you can use for '\n                    'deduplication purposes. These IDs are up to 100 '\n                    'characters long and are URL safe.',\n     'maxLength': 4096,\n     'minLength': 22,\n     'type': 'string'}\n\nOn instance['sg_event_id']:\n    'sg_event_id_123456789'",
      "data": {
        "asm_group_id": 32768,
        "category": [
          "category1",
          123
        ],
        "cert_error": "cert_error",
        "email": "example@example",
        "ip": "256.1.1.1",
        "marketing_campaign_id": 456,
        "marketing_campaign_name": "marketing_campaign_name",
        "marketing_campaign_split_id": 789,
        "marketing_campaign_version": "A",
        "newsletter": {
          "newsletter_id": "newsletter_id",
          "newsletter_send_id": "newsletter_send_id",
          "newsletter_user_list_id": "newsletter_user_list_id"
        },
        "reason": "reason",
        "sg_event_id": "sg_event_id_123456789",
        "sg_message_id": "sg_message_id_1234567890",
        "smtp-id": "smtp-id_1234567890",
        "status": "5.0.0",
        "timestamp": "2022-01-01T12:00:00",
        "tls": "tls",
        "type": "Bounce"
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "32768 is greater than the maximum of 32767",
      "python_error": "'a' is too short\n\nFailed validating 'minLength' in schema['properties']['sg_event_id']:\n    {'description': 'A unique ID to this event that you can use for '\n                    'deduplication purposes. These IDs are up to 100 '\n                    'characters long and are URL safe.',\n     'maxLength': 4096,\n     'minLength': 22,\n     'type': 'string'}\n\nOn instance['sg_event_id']:\n    'a'",
      "data": {
        "asm_group_id": 32768,
        "category": [
          "category1",
          "category2"
        ],
        "cert_error": "cert_error",
        "email": "example@example.com",
        "ip": "192.168.1.1",
        "marketing_campaign_id": 456,
        "marketing_campaign_name": "marketing_campaign_name",
        "marketing_campaign_split_id": 789,
        "marketing_campaign_version": "A",
        "newsletter": {
          "newsletter_id": "newsletter_id",
          "newsletter_send_id": "newsletter_send_id",
          "newsletter_user_list_id": "newsletter_user_list_id"
        },
        "reason": "reason",
        "sg_event_id": "a",
        "sg_message_id": "sg_message_id_1234567890",
        "smtp-id": "smtp-id_1234567890",
        "status": "5.0.0",
        "timestamp": "2022-01-01T12:00:00Z",
        "tls": "tls",
        "type": "Bounce"
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "type": "object",
        "additionalProperties": true,
        "description": "Schema for a SendGrid bounce event. Property descriptions derived from the SendGrid documentation: https://sendgrid.com/docs/for-developers/tracking-events/event/",
        "properties": {
          "asm_group_id": 123,
          "category": [
            "category1",
            "category2"
          ],
          "cert_error": "",
          "email": "example@example.com",
          "ip": "192.168.1.1",
          "marketing_campaign_id": 456,
          "marketing_campaign_name": "Marketing Campaign Name",
          "marketing_campaign_split_id": 789,
          "marketing_campaign_version": "A",
          "newsletter": {
            "newsletter_id": "newsletter_id",
            "newsletter_send_id": "newsletter_send_id",
            "newsletter_user_list_id": "newsletter_user_list_id"
          },
          "reason": "Any sort of error response returned by the receiving server that describes the reason this event type was triggered",
          "sg_event_id": "unique_id_123",
          "sg_message_id": "unique_message_id_123",
          "smtp-id": "smtp_id_123",
          "status": "5.0.0",
          "timestamp": "2022-01-01T12:00:00Z",
          "tls": "tls",
          "type": "Bounce"
        },
        "self": {
          "format": "jsonschema",
          "name": "bounce",
          "vendor": "com.sendgrid",
          "version": "2-0-0"
        }
      }
    }
  ]
}