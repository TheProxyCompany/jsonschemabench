{
  "description": "sample Github_hard/o41399.json",
  "meta": {
    "full_size": 1186,
    "stripped_size": 971,
    "features": [
      "enum"
    ],
    "raw_features": [
      "$schema",
      "id",
      "properties",
      "required",
      "type",
      "type:boolean",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "required": [
      "config",
      "inputs"
    ],
    "type": "object",
    "properties": {
      "inputs": {
        "required": [
          "dcm2niix_input"
        ],
        "type": "object",
        "properties": {
          "dcm2niix_input": {
            "type": "object",
            "properties": {
              "type": {
                "enum": [
                  "dicom",
                  "parrec"
                ]
              }
            }
          }
        }
      },
      "config": {
        "required": [
          "single_file_mode",
          "merge2d",
          "philips_scaling",
          "anonymize_bids",
          "bids_sidecar",
          "text_notes_private",
          "crop",
          "filename",
          "compress_nifti",
          "decompress_dicoms",
          "ignore_derived"
        ],
        "type": "object",
        "properties": {
          "compress_nifti": {
            "default": "y",
            "type": "string",
            "id": "-z"
          },
          "merge2d": {
            "default": "n",
            "type": "string",
            "id": "-m"
          },
          "philips_scaling": {
            "default": "y",
            "type": "string",
            "id": "-p"
          },
          "anonymize_bids": {
            "default": "n",
            "type": "string",
            "id": "-ba"
          },
          "bids_sidecar": {
            "default": "n",
            "type": "string",
            "id": "-b"
          },
          "text_notes_private": {
            "default": "n",
            "type": "string",
            "id": "-t"
          },
          "crop": {
            "default": "n",
            "type": "string",
            "id": "-x"
          },
          "filename": {
            "default": "%f",
            "type": "string",
            "id": "-f"
          },
          "single_file_mode": {
            "default": "n",
            "type": "string",
            "id": "-s"
          },
          "decompress_dicoms": {
            "default": false,
            "type": "boolean"
          },
          "ignore_derived": {
            "default": "n",
            "type": "string",
            "id": "-i"
          }
        }
      }
    },
    "title": "Invocation manifest for DCM2NIIX: v1.0.20170818"
  },
  "tests": [
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "inputs": {
          "dcm2niix_input": {
            "type": "dicom"
          }
        },
        "config": {
          "compress_nifti": "y",
          "merge2d": "n",
          "philips_scaling": "y",
          "anonymize_bids": "n",
          "bids_sidecar": "n",
          "text_notes_private": "n",
          "crop": "n",
          "filename": "%f",
          "single_file_mode": "n",
          "decompress_dicoms": false,
          "ignore_derived": "n"
        }
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"invalid_value\" is not one of [\"dicom\",\"parrec\"]",
      "python_error": "'invalid_value' is not one of ['dicom', 'parrec']\n\nFailed validating 'enum' in schema['properties']['inputs']['properties']['dcm2niix_input']['properties']['type']:\n    {'enum': ['dicom', 'parrec']}\n\nOn instance['inputs']['dcm2niix_input']['type']:\n    'invalid_value'",
      "data": {
        "config": {
          "single_file_mode": "n",
          "merge2d": "n",
          "philips_scaling": "y",
          "anonymize_bids": "n",
          "bids_sidecar": "n",
          "text_notes_private": "n",
          "crop": "n",
          "filename": "%f",
          "compress_nifti": "invalid_value",
          "decompress_dicoms": false,
          "ignore_derived": "n"
        },
        "inputs": {
          "dcm2niix_input": {
            "type": "invalid_value"
          }
        }
      }
    }
  ]
}