{
  "description": "sample Github_hard/o32921.json",
  "meta": {
    "full_size": 4233,
    "stripped_size": 1516,
    "features": [
      "$ref",
      "@minmaxNumber",
      "additionalProperties",
      "additionalProperties:object",
      "enum",
      "items"
    ],
    "raw_features": [
      "$schema",
      "definitions",
      "minimum",
      "properties",
      "required",
      "type",
      "type:array",
      "type:number",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "definitions": {
      "responseType": {
        "description": "Response type, as defined by the Open311/GeoReport2 standard.",
        "type": "string",
        "enum": [
          "realtime",
          "batch",
          "blackbox"
        ]
      },
      "service": {
        "description": "All requests are for a Service.",
        "type": "object",
        "properties": {
          "id": {
            "description": "The id must be unique",
            "type": "number",
            "minimum": 1
          },
          "name": {
            "description": "Title of the Service.",
            "type": "string"
          },
          "responseType": {
            "description": "Response type, as defined by the Open311/GeoReport2 standard.  This overrides anything set at the Provider level.",
            "$ref": "#/definitions/responseType"
          },
          "group": {
            "description": "The group this Service request type belongs to.",
            "type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "group"
        ]
      },
      "emailCfg": {
        "description": "Email configuration: to, from, subject, and template.",
        "type": "object",
        "properties": {
          "to": {
            "description": "Email will be sent to this address(es).",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "from": {
            "description": "Email marked as being sent by this address and sender.",
            "type": "array",
            "items": {
              "description": "The first string is the sender address, the second string is the sender name.",
              "type": "string"
            }
          },
          "subject": {
            "description": "The subject line of the email.",
            "type": "string"
          },
          "template": {
            "description": "The Go template to use to format the email.  This is the path and filename of the template file.",
            "type": "string"
          }
        }
      },
      "provider": {
        "description": "A specific Service Provider interface.",
        "type": "object",
        "properties": {
          "id": {
            "description": "A number uniquely identifying the Service Provider.  This is only used within the Gateway system, and must be unique and unchanging. New values should be placed numerically ABOVE existing values.  Changing the values will confuse any issue ID's that may be stored in a user device.",
            "type": "number",
            "minimum": 1
          },
          "name": {
            "description": "Identifies the Service Provider instance.  This should be unique, as it will be used in error and log messages.",
            "type": "string"
          },
          "url": {
            "description": "The URL of the Service Provider interface.",
            "type": "string"
          },
          "apiVersion": {
            "description": "The API version of the Service Provider interface.  Not currently used.",
            "type": "string"
          },
          "key": {
            "description": "The API key to access the Service Provider interface.",
            "type": "string"
          },
          "responseType": {
            "description": "Response type, as defined by the Open311/GeoReport2 standard.  This sets the default value for the Provider, which can be overridden at the Service level.",
            "$ref": "#/definitions/responseType"
          },
          "email": {
            "description": "The email configuration for this Provider.  Only applies to the Email adapter.",
            "$ref": "#/definitions/emailCfg"
          },
          "services": {
            "description": "The Services of the Provider.",
            "type": "array",
            "items": {
              "$ref": "#/definitions/service"
            }
          }
        },
        "required": [
          "id",
          "name",
          "responseType",
          "services"
        ]
      },
      "serviceArea": {
        "description": "A Service Area, having one or more Service Providers.",
        "type": "object",
        "properties": {
          "name": {
            "description": "Name of the Area.",
            "type": "string"
          },
          "providers": {
            "description": "The list of all Providers for this Area.",
            "type": "array",
            "items": {
              "$ref": "#/definitions/provider"
            }
          }
        },
        "required": [
          "name",
          "providers"
        ]
      }
    },
    "properties": {
      "adapter": {
        "description": "Basic configuration info for the Adapter",
        "type": "object",
        "properties": {
          "name": {
            "description": "Identifies the Adapter to the Engine. This must match the Engine configuration file.",
            "type": "string"
          },
          "type": {
            "description": "The type of Adapter - e.g. 'CitySourced', 'Email', etc.",
            "type": "string"
          },
          "address": {
            "description": "The IP address and port number over which the Adapter will communicate with the Engine.",
            "type": "string"
          }
        },
        "required": [
          "name",
          "type",
          "address"
        ]
      },
      "monitor": {
        "description": "Configuration data for the System Monitor.",
        "type": "object",
        "properties": {
          "address": {
            "description": "IP and port of the system monitor.",
            "type:": "string"
          }
        },
        "required": [
          "address"
        ]
      },
      "serviceGroups": {
        "description": "The list of all top level categories for all Services.  These will be referenced in the serviceAreas.",
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      "serviceAreas": {
        "description": "The list of all geographic areas the Adapter services, including the list of all services for each area.",
        "additionalProperties": {
          "$ref": "#/definitions/serviceArea"
        }
      }
    }
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "adapter": {
          "name": "Example Adapter",
          "type": "Email",
          "address": "127.0.0.1:8080"
        },
        "monitor": {
          "address": "127.0.0.1:8081"
        },
        "serviceGroups": [
          "Group 1",
          "Group 2"
        ],
        "serviceAreas": {
          "Area 1": {
            "name": "Area 1",
            "providers": [
              {
                "id": 1,
                "name": "Provider 1",
                "url": "https://provider1.com",
                "apiVersion": "1.0",
                "key": "provider1_key",
                "responseType": "realtime",
                "email": {
                  "to": [
                    "recipient1@example.com",
                    "recipient2@example.com"
                  ],
                  "from": [
                    "sender@example.com",
                    "Sender Name"
                  ],
                  "subject": "Email Subject",
                  "template": "email_template.html"
                },
                "services": [
                  {
                    "id": 1,
                    "name": "Service 1",
                    "group": "Group 1",
                    "responseType ": "realtime"
                  },
                  {
                    "id": 2,
                    "name": "Service 2",
                    "group": "Group 2",
                    "responseType ": "batch"
                  }
                ]
              },
              {
                "id": 2,
                "name": "Provider 2",
                "url": "https://provider2.com",
                "apiVersion": "2.0",
                "key": "provider2_key",
                "responseType": "blackbox",
                "email": {
                  "to": [
                    "recipient3@example.com",
                    "recipient4@example.com"
                  ],
                  "from": [
                    "sender2@example.com",
                    "Sender Name 2"
                  ],
                  "subject": "Email Subject 2",
                  "template": "email_template2.html"
                },
                "services": [
                  {
                    "id": 3,
                    "name": "Service 3",
                    "group": "Group 1",
                    "responseType ": "realtime"
                  },
                  {
                    "id": 4,
                    "name": "Service 4",
                    "group": "Group 2",
                    "responseType ": "batch"
                  }
                ]
              }
            ]
          },
          "Area 2": {
            "name": "Area 2",
            "providers": [
              {
                "id": 3,
                "name": "Provider 3",
                "url": "https://provider3.com",
                "apiVersion": "3.0",
                "key": "provider3_key",
                "responseType": "realtime",
                "email": {
                  "to": [
                    "recipient5@example.com",
                    "recipient6@example.com"
                  ],
                  "from": [
                    "sender3@example.com",
                    "Sender Name 3"
                  ],
                  "subject": "Email Subject 3",
                  "template": "email_template3.html"
                },
                "services": [
                  {
                    "id": 5,
                    "name": "Service 5",
                    "group": "Group 1",
                    "responseType ": "realtime"
                  },
                  {
                    "id": 6,
                    "name": "Service 6",
                    "group": "Group 2",
                    "responseType ": "batch"
                  }
                ]
              }
            ]
          }
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on additionalProperties keyword with an object schema",
      "valid": false,
      "rust_error": "\"Invalid Value\" is not of type \"object\"",
      "python_error": "'Invalid Value' is not of type 'object'\n\nFailed validating 'type' in schema['properties']['serviceAreas']['additionalProperties']:\n    {'description': 'A Service Area, having one or more Service Providers.',\n     'type': 'object',\n     'properties': {'name': {'description': 'Name of the Area.',\n                             'type': 'string'},\n                    'providers': {'description': 'The list of all '\n                                                 'Providers for this Area.',\n                                  'type': 'array',\n                                  'items': {'$ref': '#/definitions/provider'}}},\n     'required': ['name', 'providers']}\n\nOn instance['serviceAreas']['Invalid Property']:\n    'Invalid Value'",
      "data": {
        "adapter": {
          "name": "Example Adapter",
          "type": "Email",
          "address": "127.0.0.1:8080"
        },
        "monitor": {
          "address": "127.0.0.1:8081"
        },
        "serviceGroups": [
          "Group 1",
          "Group 2"
        ],
        "serviceAreas": {
          "Area 1": {
            "name": "Area 1",
            "providers": [
              {
                "id": 1,
                "name": "Provider 1",
                "url": "https://provider1.com",
                "apiVersion": "1.0",
                "key": "provider1_key",
                "responseType": "realtime",
                "email": {
                  "to": [
                    "recipient1@example.com",
                    "recipient2@example.com"
                  ],
                  "from": [
                    "sender@example.com",
                    "Sender Name"
                  ],
                  "subject": "Email Subject",
                  "template": "email_template.html"
                },
                "services": [
                  {
                    "id": 1,
                    "name": "Service 1",
                    "group": "Group 1",
                    "responseType ": "realtime"
                  },
                  {
                    "id": 2,
                    "name": "Service 2",
                    "group": "Group 2",
                    "responseType ": "batch"
                  }
                ]
              },
              {
                "id": 2,
                "name": "Provider 2",
                "url": "https://provider2.com",
                "apiVersion": "2.0",
                "key": "provider2_key",
                "responseType": "blackbox",
                "email": {
                  "to": [
                    "recipient3@example.com",
                    "recipient4@example.com"
                  ],
                  "from": [
                    "sender2@example.com",
                    "Sender Name 2"
                  ],
                  "subject": "Email Subject 2",
                  "template": "email_template2.html"
                },
                "services": [
                  {
                    "id": 3,
                    "name": "Service 3",
                    "group": "Group 1",
                    "responseType ": "realtime"
                  },
                  {
                    "id": 4,
                    "name": "Service 4",
                    "group": "Group 2",
                    "responseType ": "batch"
                  }
                ]
              }
            ]
          },
          "Area 2": {
            "name": "Area 2",
            "providers": [
              {
                "id": 3,
                "name": "Provider 3",
                "url": "https://provider3.com",
                "apiVersion": "3.0",
                "key": "provider3_key",
                "responseType": "realtime",
                "email": {
                  "to": [
                    "recipient5@example.com",
                    "recipient6@example.com"
                  ],
                  "from": [
                    "sender3@example.com",
                    "Sender Name 3"
                  ],
                  "subject": "Email Subject 3",
                  "template": "email_template3.html"
                },
                "services": [
                  {
                    "id": 5,
                    "name": "Service 5",
                    "group": "Group 1",
                    "responseType ": "realtime"
                  },
                  {
                    "id": 6,
                    "name": "Service 6",
                    "group": "Group 2",
                    "responseType ": "batch"
                  }
                ]
              }
            ]
          },
          "Invalid Property": "Invalid Value"
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on minimum keyword",
      "valid": false,
      "rust_error": "0 is less than the minimum of 1",
      "python_error": "0 is less than the minimum of 1\n\nFailed validating 'minimum' in schema['properties']['serviceAreas']['additionalProperties']['properties']['providers']['items']['properties']['id']:\n    {'description': 'A number uniquely identifying the Service Provider.  '\n                    'This is only used within the Gateway system, and must '\n                    'be unique and unchanging. New values should be placed '\n                    'numerically ABOVE existing values.  Changing the '\n                    \"values will confuse any issue ID's that may be stored \"\n                    'in a user device.',\n     'type': 'number',\n     'minimum': 1}\n\nOn instance['serviceAreas']['Area 1']['providers'][0]['id']:\n    0",
      "data": {
        "adapter": {
          "name": "Example Adapter",
          "type": "Email",
          "address": "127.0.0.1:8080"
        },
        "monitor": {
          "address": "127.0.0.1:8081"
        },
        "serviceGroups": [
          "Group 1",
          "Group 2"
        ],
        "serviceAreas": {
          "Area 1": {
            "name": "Area 1",
            "providers": [
              {
                "id": 0,
                "name": "Provider 1",
                "url": "https://provider1.com",
                "apiVersion": "1.0",
                "key": "provider1_key",
                "responseType": "realtime",
                "email": {
                  "to": [
                    "recipient1@example.com",
                    "recipient2@example.com"
                  ],
                  "from": [
                    "sender@example.com",
                    "Sender Name"
                  ],
                  "subject": "Email Subject",
                  "template": "email_template.html"
                },
                "services": [
                  {
                    "id": 0,
                    "name": "Service 1",
                    "group": "Group 1",
                    "responseType ": "realtime"
                  },
                  {
                    "id": 2,
                    "name": "Service 2",
                    "group": "Group 2",
                    "responseType ": "batch"
                  }
                ]
              },
              {
                "id": 2,
                "name": "Provider 2",
                "url": "https://provider2.com",
                "apiVersion": "2.0",
                "key": "provider2_key",
                "responseType": "blackbox",
                "email": {
                  "to": [
                    "recipient3@example.com",
                    "recipient4@example.com"
                  ],
                  "from": [
                    "sender2@example.com",
                    "Sender Name 2"
                  ],
                  "subject": "Email Subject 2",
                  "template": "email_template2.html"
                },
                "services": [
                  {
                    "id": 3,
                    "name": "Service 3",
                    "group": "Group 1",
                    "responseType ": "realtime"
                  },
                  {
                    "id": 4,
                    "name": "Service 4",
                    "group": "Group 2",
                    "responseType ": "batch"
                  }
                ]
              }
            ]
          },
          "Area 2": {
            "name": "Area 2",
            "providers": [
              {
                "id": 3,
                "name": "Provider 3",
                "url": "https://provider3.com",
                "apiVersion": "3.0",
                "key": "provider3_key",
                "responseType": "realtime",
                "email": {
                  "to": [
                    "recipient5@example.com",
                    "recipient6@example.com"
                  ],
                  "from": [
                    "sender3@example.com",
                    "Sender Name 3"
                  ],
                  "subject": "Email Subject 3",
                  "template": "email_template3.html"
                },
                "services": [
                  {
                    "id": 5,
                    "name": "Service 5",
                    "group": "Group 1",
                    "responseType ": "realtime"
                  },
                  {
                    "id": 6,
                    "name": "Service 6",
                    "group": "Group 2",
                    "responseType ": "batch"
                  }
                ]
              }
            ]
          }
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on minimum keyword",
      "valid": false,
      "rust_error": "0 is less than the minimum of 1",
      "python_error": "0 is less than the minimum of 1\n\nFailed validating 'minimum' in schema['properties']['serviceAreas']['additionalProperties']['properties']['providers']['items']['properties']['id']:\n    {'description': 'A number uniquely identifying the Service Provider.  '\n                    'This is only used within the Gateway system, and must '\n                    'be unique and unchanging. New values should be placed '\n                    'numerically ABOVE existing values.  Changing the '\n                    \"values will confuse any issue ID's that may be stored \"\n                    'in a user device.',\n     'type': 'number',\n     'minimum': 1}\n\nOn instance['serviceAreas']['Area 1']['providers'][0]['id']:\n    0",
      "data": {
        "adapter": {
          "name": "Example Adapter",
          "type": "Email",
          "address": "127.0.0.1:8080"
        },
        "monitor": {
          "address": "127.0.0.1:8081"
        },
        "serviceGroups": [
          "Group 1",
          "Group 2"
        ],
        "serviceAreas": {
          "Area 1": {
            "name": "Area 1",
            "providers": [
              {
                "id": 0,
                "name": "Provider 1",
                "url": "https://provider1.com",
                "apiVersion": "1.0",
                "key": "provider1_key",
                "responseType": "realtime",
                "email": {
                  "to": [
                    "recipient1@example.com",
                    "recipient2@example.com"
                  ],
                  "from": [
                    "sender@example.com",
                    "Sender Name"
                  ],
                  "subject": "Email Subject",
                  "template": "email_template.html"
                },
                "services": [
                  {
                    "id": 1,
                    "name": "Service 1",
                    "group": "Group 1",
                    "responseType": "realtime"
                  },
                  {
                    "id": 2,
                    "name": "Service 2",
                    "group": "Group 2",
                    "responseType": "batch"
                  }
                ]
              },
              {
                "id": 2,
                "name": "Provider 2",
                "url": "https://provider2.com",
                "apiVersion": "2.0",
                "key": "provider2_key",
                "responseType": "blackbox",
                "email": {
                  "to": [
                    "recipient3@example.com",
                    "recipient4@example.com"
                  ],
                  "from": [
                    "sender2@example.com",
                    "Sender Name 2"
                  ],
                  "subject": "Email Subject 2",
                  "template": "email_template2.html"
                },
                "services": [
                  {
                    "id": 3,
                    "name": "Service 3",
                    "group": "Group 1",
                    "responseType": "realtime"
                  },
                  {
                    "id": 4,
                    "name": "Service 4",
                    "group": "Group 2",
                    "responseType": "batch"
                  }
                ]
              }
            ]
          },
          "Area 2": {
            "name": "Area 2",
            "providers": [
              {
                "id": 3,
                "name": "Provider 3",
                "url": "https://provider3.com",
                "apiVersion": "3.0",
                "key": "provider3_key",
                "responseType": "realtime",
                "email": {
                  "to": [
                    "recipient5@example.com",
                    "recipient6@example.com"
                  ],
                  "from": [
                    "sender3@example.com",
                    "Sender Name 3"
                  ],
                  "subject": "Email Subject 3",
                  "template": "email_template3.html"
                },
                "services": [
                  {
                    "id": 5,
                    "name": "Service 5",
                    "group": "Group 1",
                    "responseType": "realtime"
                  },
                  {
                    "id": 6,
                    "name": "Service 6",
                    "group": "Group 2",
                    "responseType": "batch"
                  }
                ]
              }
            ]
          }
        }
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "adapter": {
          "name": "Example Adapter",
          "type": "Email",
          "address": "localhost:8080"
        },
        "monitor": {
          "address": "localhost:8081"
        },
        "serviceGroups": [
          "Group 1",
          "Group 2"
        ],
        "serviceAreas": {
          "Area 1": {
            "name": "Area 1",
            "providers": [
              {
                "id": 1,
                "name": "Provider 1",
                "url": "https://example.com/provider1",
                "apiVersion": "v1",
                "key": "secret_key",
                "responseType": "realtime",
                "email": {
                  "to": [
                    "recipient@example.com"
                  ],
                  "from": [
                    "sender@example.com",
                    "Sender Name"
                  ],
                  "subject": "Email Subject",
                  "template": "email_template.txt"
                },
                "services": [
                  {
                    "id": 1,
                    "name": "Service 1",
                    "responseType": "realtime",
                    "group": "Group 1"
                  },
                  {
                    "id": 2,
                    "name": "Service 2",
                    "responseType": "batch",
                    "group": "Group 2"
                  }
                ]
              }
            ]
          },
          "Area 2": {
            "name": "Area 2",
            "providers": [
              {
                "id": 2,
                "name": "Provider 2",
                "url": "https://example.com/provider2",
                "apiVersion": "v2",
                "key": "secret_key2",
                "responseType": "blackbox",
                "email": {
                  "to": [
                    "recipient2@example.com"
                  ],
                  "from": [
                    "sender2@example.com",
                    "Sender Name 2"
                  ],
                  "subject": "Email Subject 2",
                  "template": "email_template2.txt"
                },
                "services": [
                  {
                    "id": 3,
                    "name": "Service 3",
                    "responseType": "realtime",
                    "group": "Group 1"
                  },
                  {
                    "id": 4,
                    "name": "Service 4",
                    "responseType": "batch",
                    "group": "Group 2"
                  }
                ]
              }
            ]
          }
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on minimum keyword",
      "valid": false,
      "rust_error": "0 is less than the minimum of 1",
      "python_error": "0 is less than the minimum of 1\n\nFailed validating 'minimum' in schema['properties']['serviceAreas']['additionalProperties']['properties']['providers']['items']['properties']['id']:\n    {'description': 'A number uniquely identifying the Service Provider.  '\n                    'This is only used within the Gateway system, and must '\n                    'be unique and unchanging. New values should be placed '\n                    'numerically ABOVE existing values.  Changing the '\n                    \"values will confuse any issue ID's that may be stored \"\n                    'in a user device.',\n     'type': 'number',\n     'minimum': 1}\n\nOn instance['serviceAreas']['Area 1']['providers'][0]['id']:\n    0",
      "data": {
        "adapter": {
          "name": "Example Adapter",
          "type": "Email",
          "address": "localhost:8080"
        },
        "monitor": {
          "address": "localhost:8081"
        },
        "serviceGroups": [
          "Group 1",
          "Group 2"
        ],
        "serviceAreas": {
          "Area 1": {
            "name": "Area 1",
            "providers": [
              {
                "id": 0,
                "minimum": 1,
                "name": "Provider 1",
                "url": "https://example.com/provider1",
                "apiVersion": "v1",
                "key": "secret_key",
                "responseType": "realtime",
                "email": {
                  "to": [
                    "recipient@example.com"
                  ],
                  "from": [
                    "sender@example.com",
                    "Sender Name"
                  ],
                  "subject": "Email Subject",
                  "template": "email_template.txt"
                },
                "services": [
                  {
                    "id": 1,
                    "name": "Service 1",
                    "responseType": "realtime",
                    "group": "Group 1"
                  },
                  {
                    "id": 2,
                    "name": "Service 2",
                    "responseType": "batch",
                    "group": "Group 2"
                  }
                ]
              }
            ]
          },
          "Area 2": {
            "name": "Area 2",
            "providers": [
              {
                "id": 2,
                "name": "Provider 2",
                "url": "https://example.com/provider2",
                "apiVersion": "v2",
                "key": "secret_key2",
                "responseType": "blackbox",
                "email": {
                  "to": [
                    "recipient2@example.com"
                  ],
                  "from": [
                    "sender2@example.com",
                    "Sender Name 2"
                  ],
                  "subject": "Email Subject 2",
                  "template": "email_template2.txt"
                },
                "services": [
                  {
                    "id": 3,
                    "name": "Service 3",
                    "responseType": "realtime",
                    "group": "Group 1"
                  },
                  {
                    "id": 4,
                    "name": "Service 4",
                    "responseType": "batch",
                    "group": "Group 2"
                  }
                ]
              }
            ]
          }
        }
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "0 is less than the minimum of 1",
      "python_error": "'invalid_response_type' is not one of ['realtime', 'batch', 'blackbox']\n\nFailed validating 'enum' in schema['properties']['serviceAreas']['additionalProperties']['properties']['providers']['items']['properties']['responseType']:\n    {'description': 'Response type, as defined by the Open311/GeoReport2 '\n                    'standard.',\n     'type': 'string',\n     'enum': ['realtime', 'batch', 'blackbox']}\n\nOn instance['serviceAreas']['Area 2']['providers'][0]['responseType']:\n    'invalid_response_type'",
      "data": {
        "adapter": {
          "name": "Example Adapter",
          "type": "Email",
          "address": "localhost:8080"
        },
        "monitor": {
          "address": "localhost:8081"
        },
        "serviceGroups": [
          "Group 1",
          ""
        ],
        "serviceAreas": {
          "Area 1": {
            "name": "Area 1",
            "providers": [
              {
                "id": 0,
                "name": "Provider 1",
                "url": "https://example.com/provider1",
                "apiVersion": "v1",
                "key": "secret_key",
                "responseType": "realtime",
                "email": {
                  "to": [
                    "recipient@example.com"
                  ],
                  "from": [
                    "sender@example.com",
                    "Sender Name"
                  ],
                  "subject": "Email Subject",
                  "template": "email_template.txt"
                },
                "services": [
                  {
                    "id": 1,
                    "name": "Service 1",
                    "responseType": "realtime",
                    "group": "Invalid Group"
                  }
                ]
              }
            ]
          },
          "Area 2": {
            "name": "Area 2",
            "providers": [
              {
                "id": 2,
                "name": "Provider 2",
                "url": "https://example.com/provider2",
                "apiVersion": "v2",
                "key": "secret_key2",
                "responseType": "invalid_response_type",
                "email": {
                  "to": [
                    "recipient2@example.com"
                  ],
                  "from": [
                    "sender2@example.com",
                    "Sender Name 2"
                  ],
                  "subject": "Email Subject 2",
                  "template": "email_template2.txt"
                },
                "services": [
                  {
                    "id": 3,
                    "name": "",
                    "responseType": "realtime",
                    "group": "Group 1"
                  }
                ]
              }
            ]
          }
        }
      }
    }
  ]
}