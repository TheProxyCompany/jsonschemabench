{
  "description": "sample Github_medium/o41328.json",
  "meta": {
    "full_size": 547,
    "stripped_size": 418,
    "features": [
      "enum"
    ],
    "raw_features": [
      "$schema",
      "properties",
      "required",
      "type",
      "type:boolean",
      "type:object"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "required": [
      "config",
      "inputs"
    ],
    "type": "object",
    "properties": {
      "inputs": {
        "required": [
          "anatomical"
        ],
        "type": "object",
        "properties": {
          "anatomical": {
            "type": "object",
            "properties": {
              "type": {
                "enum": [
                  "nifti",
                  "mgh",
                  "dicom"
                ]
              }
            }
          }
        }
      },
      "config": {
        "required": [
          "output_mgh",
          "output_nifti"
        ],
        "type": "object",
        "properties": {
          "output_mgh": {
            "default": false,
            "type": "boolean"
          },
          "output_nifti": {
            "default": true,
            "type": "boolean"
          }
        }
      }
    },
    "title": "Invocation manifest for FreeSurfer: MBIRN Defacer for structural MRI (mri-deface v1.22)"
  },
  "tests": [
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "inputs": {
          "anatomical": {
            "type": "nifti"
          }
        },
        "config": {
          "output_mgh": false,
          "output_nifti": true
        }
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "inputs": {
          "anatomical": {
            "type": "nifti"
          }
        },
        "config": {
          "output_mgh": true,
          "output_nifti": true
        }
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"invalid_type\" is not one of [\"nifti\",\"mgh\",\"dicom\"]",
      "python_error": "'output_mgh' is a required property\n\nFailed validating 'required' in schema['properties']['config']:\n    {'required': ['output_mgh', 'output_nifti'],\n     'type': 'object',\n     'properties': {'output_mgh': {'default': False, 'type': 'boolean'},\n                    'output_nifti': {'default': True, 'type': 'boolean'}}}\n\nOn instance['config']:\n    {'output_nifti': True}",
      "data": {
        "config": {
          "output_nifti": true
        },
        "inputs": {
          "anatomical": {
            "type": "invalid_type"
          }
        }
      }
    }
  ]
}