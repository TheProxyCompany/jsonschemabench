{
  "description": "sample Github_medium/o46761.json",
  "meta": {
    "full_size": 1595,
    "stripped_size": 1595,
    "features": [
      "$ref",
      "@minmaxInteger",
      "@minmaxLength",
      "@minmaxProperties",
      "additionalProperties",
      "additionalProperties:object",
      "anyOf",
      "enum",
      "format",
      "format:hostname",
      "format:ipv4",
      "format:ipv6"
    ],
    "raw_features": [
      "$schema",
      "definitions",
      "maxLength",
      "maximum",
      "minLength",
      "minProperties",
      "minimum",
      "properties",
      "required",
      "type",
      "type:boolean",
      "type:integer",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-04/schema",
    "definitions": {
      "crawlers": {
        "type": "object",
        "properties": {
          "twitter": {
            "type": "object",
            "properties": {
              "enabled": {
                "type": "boolean"
              }
            },
            "required": [
              "enabled"
            ]
          },
          "facebook": {
            "type": "object",
            "properties": {
              "enabled": {
                "type": "boolean"
              }
            },
            "required": [
              "enabled"
            ]
          }
        },
        "minProperties": 1
      },
      "db": {
        "type": "object",
        "properties": {
          "db_name": {
            "type": "string"
          },
          "db_tables": {
            "type": "object",
            "properties": {},
            "additionalProperties": {
              "type": "object",
              "properties": {},
              "additionalProperties": {
                "type": "string",
                "enum": [
                  "BIT",
                  "BOOL",
                  "TINYINT",
                  "SMALLINT",
                  "MEDIUMINT",
                  "INT",
                  "BIGINT",
                  "FLOAT",
                  "DOUBLE",
                  "DECIMAL",
                  "CHAR",
                  "VARCHAR",
                  "TINYTEXT",
                  "TEXT",
                  "MEDIUMTEXT",
                  "LONGTEXT",
                  "BINARY",
                  "VARBINARY",
                  "TINYBLOB",
                  "BLOB",
                  "MEDIUMBLOB",
                  "LONGBLOB",
                  "ENUM",
                  "SET",
                  "DATE",
                  "TIME",
                  "DATETIME",
                  "YEAR",
                  "TIMESTAMP",
                  "JSON"
                ]
              },
              "minProperties": 1
            }
          }
        },
        "required": [
          "db_name",
          "db_tables"
        ]
      },
      "dbs": {
        "type": "object",
        "properties": {
          "dbs_addr": {
            "anyOf": [
              {
                "type": "string",
                "format": "hostname"
              },
              {
                "type": "string",
                "format": "ipv6"
              },
              {
                "type": "string",
                "format": "ipv4"
              }
            ]
          },
          "dbs_port": {
            "type": "integer",
            "minimum": 0,
            "maximum": 65535
          },
          "dbs_login": {
            "type": "string",
            "minLength": 1,
            "maxLength": 32
          },
          "dbs_pass": {
            "type": "string",
            "minLength": 0
          },
          "dbs_unicode": {
            "type": "boolean"
          },
          "dbs_charset": {
            "type": "string",
            "enum": [
              "utf8",
              "utf16"
            ]
          }
        },
        "required": [
          "dbs_addr",
          "dbs_port",
          "dbs_login",
          "dbs_pass",
          "dbs_unicode",
          "dbs_charset"
        ]
      }
    },
    "type": "object",
    "properties": {
      "ntm-config": {
        "type": "object",
        "properties": {
          "crawlers": {
            "$ref": "#/definitions/crawlers"
          },
          "db": {
            "$ref": "#/definitions/db"
          },
          "dbs": {
            "$ref": "#/definitions/dbs"
          }
        },
        "required": [
          "crawlers",
          "db",
          "dbs"
        ]
      }
    }
  },
  "tests": [
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "ntm-config": {
          "crawlers": {
            "twitter": {
              "enabled": true
            },
            "facebook": {
              "enabled": false
            }
          },
          "db": {
            "db_name": "my_database",
            "db_tables": {
              "users": {
                "id": "INT",
                "name": "VARCHAR",
                "email": "VARCHAR"
              },
              "posts": {
                "id": "INT",
                "title": "VARCHAR",
                "content": "TEXT"
              }
            }
          },
          "dbs": {
            "dbs_addr": "localhost",
            "dbs_port": 3306,
            "dbs_login": "my_user",
            "dbs_pass": "my_password",
            "dbs_unicode": true,
            "dbs_charset": "utf8"
          }
        }
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "ntm-config": {
          "crawlers": {
            "twitter": {
              "enabled": true
            },
            "facebook": {
              "enabled": false
            }
          },
          "db": {
            "db_name": "my_database",
            "db_tables": {
              "users": {
                "id": "INT",
                "name": "VARCHAR",
                "email": "VARCHAR"
              },
              "posts": {
                "id": "INT",
                "title": "VARCHAR",
                "content": "TEXT"
              }
            }
          },
          "dbs": {
            "dbs_addr": "localhost",
            "dbs_port": 3306,
            "dbs_login": "myuser",
            "dbs_pass": "mypassword",
            "dbs_unicode": true,
            "dbs_charset": "utf8"
          }
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on minLength keyword or maxLength keyword",
      "valid": false,
      "rust_error": "\"\" is shorter than 1 character",
      "python_error": "'' should be non-empty\n\nFailed validating 'minLength' in schema['properties']['ntm-config']['properties']['dbs']['properties']['dbs_login']:\n    {'type': 'string', 'minLength': 1, 'maxLength': 32}\n\nOn instance['ntm-config']['dbs']['dbs_login']:\n    ''",
      "data": {
        "ntm-config": {
          "crawlers": {
            "twitter": {
              "enabled": true
            },
            "facebook": {
              "enabled": false
            }
          },
          "db": {
            "db_name": "my_database",
            "db_tables": {
              "users": {
                "id": "INT",
                "name": "VARCHAR",
                "email": "VARCHAR"
              },
              "posts": {
                "id": "INT",
                "title": "VARCHAR",
                "content": "TEXT"
              }
            }
          },
          "dbs": {
            "dbs_addr": "localhost",
            "dbs_port": 3306,
            "dbs_login": "",
            "dbs_pass": "",
            "dbs_unicode": true,
            "dbs_charset": "utf8"
          }
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on minimum keyword or maximum keyword",
      "valid": false,
      "rust_error": "65536 is greater than the maximum of 65535",
      "python_error": "65536 is greater than the maximum of 65535\n\nFailed validating 'maximum' in schema['properties']['ntm-config']['properties']['dbs']['properties']['dbs_port']:\n    {'type': 'integer', 'minimum': 0, 'maximum': 65535}\n\nOn instance['ntm-config']['dbs']['dbs_port']:\n    65536",
      "data": {
        "ntm-config": {
          "crawlers": {
            "twitter": {
              "enabled": true
            }
          },
          "db": {
            "db_name": "my_database",
            "db_tables": {
              "users": {
                "id": "INT",
                "name": "VARCHAR",
                "email": "VARCHAR"
              },
              "posts": {
                "id": "INT",
                "title": "VARCHAR",
                "content": "TEXT"
              }
            }
          },
          "dbs": {
            "dbs_addr": "localhost",
            "dbs_port": 65536,
            "dbs_login": "myuser",
            "dbs_pass": "mypassword",
            "dbs_unicode": true,
            "dbs_charset": "utf8"
          }
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on additionalProperties keyword with an object schema",
      "valid": false,
      "rust_error": "{\"wrong\":\"property\"} is not of type \"string\"",
      "python_error": "{'wrong': 'property'} is not of type 'string'\n\nFailed validating 'type' in schema['properties']['ntm-config']['properties']['db']['properties']['db_tables']['additionalProperties']['additionalProperties']:\n    {'type': 'string',\n     'enum': ['BIT',\n              'BOOL',\n              'TINYINT',\n              'SMALLINT',\n              'MEDIUMINT',\n              'INT',\n              'BIGINT',\n              'FLOAT',\n              'DOUBLE',\n              'DECIMAL',\n              'CHAR',\n              'VARCHAR',\n              'TINYTEXT',\n              'TEXT',\n              'MEDIUMTEXT',\n              'LONGTEXT',\n              'BINARY',\n              'VARBINARY',\n              'TINYBLOB',\n              'BLOB',\n              'MEDIUMBLOB',\n              'LONGBLOB',\n              'ENUM',\n              'SET',\n              'DATE',\n              'TIME',\n              'DATETIME',\n              'YEAR',\n              'TIMESTAMP',\n              'JSON']}\n\nOn instance['ntm-config']['db']['db_tables']['users']['extra']:\n    {'wrong': 'property'}",
      "data": {
        "ntm-config": {
          "crawlers": {
            "twitter": {
              "enabled": true
            },
            "facebook": {
              "enabled": false
            }
          },
          "db": {
            "db_name": "my_database",
            "db_tables": {
              "users": {
                "id": "INT",
                "name": "VARCHAR",
                "email": "VARCHAR",
                "extra": {
                  "wrong": "property"
                }
              },
              "posts": {
                "id": "INT",
                "title": "VARCHAR",
                "content": "TEXT"
              }
            }
          },
          "dbs": {
            "dbs_addr": "localhost",
            "dbs_port": 3306,
            "dbs_login": "myuser",
            "dbs_pass": "mypassword",
            "dbs_unicode": true,
            "dbs_charset": "utf8"
          }
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on minProperties keyword",
      "valid": false,
      "rust_error": "{} has less than 1 property",
      "python_error": "{} should be non-empty\n\nFailed validating 'minProperties' in schema['properties']['ntm-config']['properties']['crawlers']:\n    {'type': 'object',\n     'properties': {'twitter': {'type': 'object',\n                                'properties': {'enabled': {'type': 'boolean'}},\n                                'required': ['enabled']},\n                    'facebook': {'type': 'object',\n                                 'properties': {'enabled': {'type': 'boolean'}},\n                                 'required': ['enabled']}},\n     'minProperties': 1}\n\nOn instance['ntm-config']['crawlers']:\n    {}",
      "data": {
        "ntm-config": {
          "crawlers": {},
          "db": {
            "db_name": "my_database",
            "db_tables": {
              "users": {
                "id": "INT",
                "name": "VARCHAR",
                "email": "VARCHAR"
              },
              "posts": {
                "id": "INT",
                "title": "VARCHAR",
                "content": "TEXT"
              }
            }
          },
          "dbs": {
            "dbs_addr": "localhost",
            "dbs_port": 3306,
            "dbs_login": "myuser",
            "dbs_pass": "mypassword",
            "dbs_unicode": true,
            "dbs_charset": "utf8"
          }
        }
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "65536 is greater than the maximum of 65535",
      "python_error": "65536 is greater than the maximum of 65535\n\nFailed validating 'maximum' in schema['properties']['ntm-config']['properties']['dbs']['properties']['dbs_port']:\n    {'type': 'integer', 'minimum': 0, 'maximum': 65535}\n\nOn instance['ntm-config']['dbs']['dbs_port']:\n    65536",
      "data": {
        "ntm-config": {
          "crawlers": {
            "twitter": {
              "enabled": true
            }
          },
          "db": {
            "db_name": "my_database",
            "db_tables": {
              "users": {
                "id": "INT",
                "name": "VARCHAR",
                "email": "VARCHAR"
              },
              "posts": {
                "id": "INT",
                "title": "VARCHAR",
                "content": "BIGINT"
              }
            }
          },
          "dbs": {
            "dbs_addr": "256.256.256.256",
            "dbs_port": 65536,
            "dbs_login": "a",
            "dbs_pass": "",
            "dbs_unicode": true,
            "dbs_charset": "utf32"
          }
        }
      }
    }
  ]
}