{
  "description": "sample Snowplow/sp_222_Normalized.json",
  "meta": {
    "full_size": 3696,
    "stripped_size": 1484,
    "features": [
      "@minmaxInteger",
      "@minmaxItems",
      "@minmaxLength",
      "additionalProperties",
      "enum",
      "items"
    ],
    "raw_features": [
      "_boolSchema",
      "maxLength",
      "maximum",
      "minItems",
      "minimum",
      "properties",
      "required",
      "type",
      "type:[]",
      "type:array",
      "type:boolean",
      "type:integer",
      "type:null",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "additionalProperties": false,
    "description": "Schema for a local or remote push notification",
    "properties": {
      "action": {
        "description": "The action associated with the notification.",
        "maxLength": 1024,
        "type": [
          "string",
          "null"
        ]
      },
      "attachments": {
        "description": "Attachments added to the notification (they can be part of the 'data' field).",
        "items": {
          "additionalProperties": false,
          "description": "Attachment.",
          "properties": {
            "identifier": {
              "description": "The identifier of the attachment.",
              "maxLength": 1024,
              "type": "string"
            },
            "type": {
              "description": "The type of attachment.",
              "maxLength": 1024,
              "type": "string"
            },
            "url": {
              "_format": "uri",
              "description": "The url of the attachment.",
              "maxLength": 1024,
              "type": "string"
            }
          },
          "required": [
            "identifier",
            "url",
            "type"
          ],
          "type": "object"
        },
        "type": [
          "array",
          "null"
        ]
      },
      "body": {
        "description": "The notification's body.",
        "maxLength": 4096,
        "type": "string"
      },
      "bodyLocArgs": {
        "description": "Variable string values to be used in place of the format specifiers in bodyLocArgs to use to localize the body text to the user's current localization.",
        "items": {
          "description": "Item of bodyLocArgs.",
          "maxLength": 1024,
          "type": [
            "string",
            "null"
          ]
        },
        "minItems": 1,
        "type": [
          "array",
          "null"
        ]
      },
      "bodyLocKey": {
        "description": "The key to the body string in the app's string resources to use to localize the body text to the user's current localization.",
        "maxLength": 1024,
        "type": [
          "string",
          "null"
        ]
      },
      "category": {
        "description": "The category associated to the notification.",
        "maxLength": 1024,
        "type": [
          "string",
          "null"
        ]
      },
      "contentAvailable": {
        "description": "Indicates whether the application is notified of the delivery of the notification. When true the app is woken up (iOS only).",
        "type": [
          "boolean",
          "null"
        ]
      },
      "group": {
        "description": "The group which this notification is part of.",
        "maxLength": 1024,
        "type": [
          "string",
          "null"
        ]
      },
      "icon": {
        "description": "The icon associated to the notification (Android only).",
        "maxLength": 1024,
        "type": [
          "string",
          "null"
        ]
      },
      "notificationCount": {
        "description": "The number of items this notification represents. It's the badge number on iOS.",
        "maximum": 10000,
        "minimum": 0,
        "type": [
          "integer",
          "null"
        ]
      },
      "notificationTimestamp": {
        "_format": "date-time",
        "description": "The time when the event of the notification occurred.",
        "type": [
          "string",
          "null"
        ]
      },
      "sound": {
        "description": "The sound played when the device receives the notification.",
        "maxLength": 1024,
        "type": [
          "string",
          "null"
        ]
      },
      "subtitle": {
        "description": "The notification's subtitle (iOS only).",
        "maxLength": 1024,
        "type": [
          "string",
          "null"
        ]
      },
      "tag": {
        "description": "An identifier similar to 'group' but usable for different purposes (Android only).",
        "maxLength": 1024,
        "type": [
          "string",
          "null"
        ]
      },
      "threadIdentifier": {
        "description": "An identifier similar to 'group' but usable for different purposes (iOS only).",
        "maxLength": 1024,
        "type": [
          "string",
          "null"
        ]
      },
      "title": {
        "description": "The notification's title.",
        "maxLength": 1024,
        "type": "string"
      },
      "titleLocArgs": {
        "description": "Variable string values to be used in place of the format specifiers in titleLocArgs to use to localize the title text to the user's current localization.",
        "items": {
          "description": "Item of titleLocArgs.",
          "maxLength": 1024,
          "type": [
            "string",
            "null"
          ]
        },
        "minItems": 1,
        "type": [
          "array",
          "null"
        ]
      },
      "titleLocKey": {
        "description": "The key to the title string in the app's string resources to use to localize the title text to the user's current localization.",
        "maxLength": 1024,
        "type": [
          "string",
          "null"
        ]
      },
      "trigger": {
        "description": "The trigger that raised the notification message.",
        "enum": [
          "push",
          "location",
          "calendar",
          "timeInterval",
          "other"
        ],
        "type": "string"
      }
    },
    "required": [
      "title",
      "body",
      "trigger"
    ],
    "self": {
      "format": "jsonschema",
      "name": "message_notification",
      "vendor": "com.snowplowanalytics.mobile",
      "version": "1-0-0"
    },
    "type": "object"
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "action": "Open App",
        "attachments": [
          {
            "identifier": "image1",
            "type": "image/jpeg",
            "url": "https://example.com/image1.jpg"
          },
          {
            "identifier": "video1",
            "type": "video/mp4",
            "url": "https://example.com/video1.mp4"
          }
        ],
        "body": "This is a sample notification body.",
        "bodyLocArgs": [
          "John Doe",
          "New York"
        ],
        "bodyLocKey": "hello_world",
        "category": "social",
        "contentAvailable": true,
        "group": "friends",
        "icon": "ic_launcher",
        "notificationCount": 5,
        "notificationTimestamp": "2022-01-01T12:00:00Z",
        "sound": "default",
        "subtitle": "This is a sample subtitle.",
        "tag": "tag1",
        "threadIdentifier": "thread1",
        "title": "Sample Notification Title",
        "titleLocArgs": [
          "John Doe",
          "New York"
        ],
        "titleLocKey": "hello_world",
        "trigger": "push"
      }
    },
    {
      "description": "llama-70b generated negative; focus on minItems keyword",
      "valid": false,
      "rust_error": "[] has less than 1 item",
      "python_error": "[] should be non-empty\n\nFailed validating 'minItems' in schema['properties']['titleLocArgs']:\n    {'description': 'Variable string values to be used in place of the '\n                    'format specifiers in titleLocArgs to use to localize '\n                    \"the title text to the user's current localization.\",\n     'items': {'description': 'Item of titleLocArgs.',\n               'maxLength': 1024,\n               'type': ['string', 'null']},\n     'minItems': 1,\n     'type': ['array', 'null']}\n\nOn instance['titleLocArgs']:\n    []",
      "data": {
        "action": "Open App",
        "attachments": [
          {
            "identifier": "image1",
            "type": "image/jpeg",
            "url": "https://example.com/image1.jpg"
          },
          {
            "identifier": "video1",
            "type": "video/mp4",
            "url": "https://example.com/video1.mp4"
          }
        ],
        "body": "This is a sample notification body.",
        "bodyLocArgs": [],
        "bodyLocKey": "hello_world",
        "category": "social",
        "contentAvailable": true,
        "group": "friends",
        "icon": "ic_launcher",
        "notificationCount": 5,
        "notificationTimestamp": "2022-01-01T12:00:00Z",
        "sound": "default",
        "subtitle": "This is a sample subtitle.",
        "tag": "tag1",
        "threadIdentifier": "thread1",
        "title": "Sample Notification Title",
        "titleLocArgs": [],
        "titleLocKey": "hello_world",
        "trigger": "push"
      }
    },
    {
      "description": "llama-70b generated negative; focus on type keyword with an array of types",
      "valid": false,
      "rust_error": "123 is not of types \"null\", \"string\"",
      "python_error": "123 is not of type 'string', 'null'\n\nFailed validating 'type' in schema['properties']['action']:\n    {'description': 'The action associated with the notification.',\n     'maxLength': 1024,\n     'type': ['string', 'null']}\n\nOn instance['action']:\n    123",
      "data": {
        "action": 123,
        "attachments": [
          {
            "identifier": "image1",
            "type": "image/jpeg",
            "url": "https://example.com/image1.jpg"
          },
          {
            "identifier": "video1",
            "type": "video/mp4",
            "url": "https://example.com/video1.mp4"
          }
        ],
        "body": "This is a sample notification body.",
        "bodyLocArgs": [
          "John Doe",
          "New York"
        ],
        "bodyLocKey": "hello_world",
        "category": "social",
        "contentAvailable": true,
        "group": "friends",
        "icon": "ic_launcher",
        "notificationCount": 5,
        "notificationTimestamp": "2022-01-01T12:00:00Z",
        "sound": "default",
        "subtitle": "This is a sample subtitle.",
        "tag": "tag1",
        "threadIdentifier": "thread1",
        "title": "Sample Notification Title",
        "titleLocArgs": [
          "John Doe",
          "New York"
        ],
        "titleLocKey": "hello_world",
        "trigger": "push"
      }
    },
    {
      "description": "llama-70b generated negative; focus on minimum keyword or maximum keyword",
      "valid": false,
      "rust_error": "[] has less than 1 item",
      "python_error": "10001 is greater than the maximum of 10000\n\nFailed validating 'maximum' in schema['properties']['notificationCount']:\n    {'description': 'The number of items this notification represents. '\n                    \"It's the badge number on iOS.\",\n     'maximum': 10000,\n     'minimum': 0,\n     'type': ['integer', 'null']}\n\nOn instance['notificationCount']:\n    10001",
      "data": {
        "action": "Open App",
        "attachments": [
          {
            "identifier": "image1",
            "type": "image/jpeg",
            "url": "https://example.com/image1.jpg"
          },
          {
            "identifier": "video1",
            "type": "video/mp4",
            "url": "https://example.com/video1.mp4"
          }
        ],
        "body": "This is a sample notification body.",
        "bodyLocArgs": [],
        "bodyLocKey": "hello_world",
        "category": "social",
        "contentAvailable": true,
        "group": "friends",
        "icon": "ic_launcher",
        "notificationCount": 10001,
        "notificationTimestamp": "2022-01-01T12:00:00Z",
        "sound": "default",
        "subtitle": "This is a sample subtitle.",
        "tag": "tag1",
        "threadIdentifier": "thread1",
        "title": "Sample Notification Title",
        "titleLocArgs": [
          "John Doe",
          "New York"
        ],
        "titleLocKey": "hello_world",
        "trigger": "push"
      }
    },
    {
      "description": "llama-70b generated negative; focus on minItems keyword",
      "valid": false,
      "rust_error": "[] has less than 1 item",
      "python_error": "[] should be non-empty\n\nFailed validating 'minItems' in schema['properties']['bodyLocArgs']:\n    {'description': 'Variable string values to be used in place of the '\n                    'format specifiers in bodyLocArgs to use to localize '\n                    \"the body text to the user's current localization.\",\n     'items': {'description': 'Item of bodyLocArgs.',\n               'maxLength': 1024,\n               'type': ['string', 'null']},\n     'minItems': 1,\n     'type': ['array', 'null']}\n\nOn instance['bodyLocArgs']:\n    []",
      "data": {
        "action": "Open App",
        "attachments": [
          {
            "identifier": "image1",
            "type": "image/jpeg",
            "url": "https://example.com/image1.jpg"
          },
          {
            "identifier": "video1",
            "type": "video/mp4",
            "url": "https://example.com/video1.mp4"
          }
        ],
        "body": "This is a sample notification body.",
        "bodyLocArgs": [],
        "bodyLocKey": "hello_world",
        "category": "social",
        "contentAvailable": true,
        "group": "friends",
        "icon": "ic_launcher",
        "notificationCount": 5,
        "notificationTimestamp": "2022-01-01T12:00:00Z",
        "sound": "default",
        "subtitle": "This is a sample subtitle.",
        "tag": "tag1",
        "threadIdentifier": "thread1",
        "title": "Sample Notification Title",
        "titleLocArgs": [
          "John Doe",
          "New York"
        ],
        "titleLocKey": "hello_world",
        "trigger": "push"
      }
    },
    {
      "description": "llama-70b generated negative; focus on minimum keyword or maximum keyword",
      "valid": false,
      "rust_error": "10001 is greater than the maximum of 10000",
      "python_error": "Additional properties are not allowed ('Extra property added', 'Maximum value exceeded' were unexpected)\n\nFailed validating 'additionalProperties' in schema:\n    {'additionalProperties': False,\n     'description': 'Schema for a local or remote push notification',\n     'properties': {'action': {'description': 'The action associated with '\n                                              'the notification.',\n                               'maxLength': 1024,\n                               'type': ['string', 'null']},\n                    'attachments': {'description': 'Attachments added to '\n                                                   'the notification (they '\n                                                   'can be part of the '\n                                                   \"'data' field).\",\n                                    'items': {'additionalProperties': False,\n                                              'description': 'Attachment.',\n                                              'properties': .. (11580 more)",
      "data": {
        "action": "Open App",
        "attachments": [
          {
            "identifier": "image1",
            "type": "image/jpeg",
            "url": "https://example.com/image1.jpg"
          },
          {
            "identifier": "video1",
            "type": "video/mp4",
            "url": "https://example.com/video1.mp4"
          }
        ],
        "body": "This is a sample notification body.",
        "bodyLocArgs": [
          "John Doe",
          "New York"
        ],
        "bodyLocKey": "hello_world",
        "category": "social",
        "contentAvailable": true,
        "group": "friends",
        "icon": "ic_launcher",
        "notificationCount": 10001,
        "Maximum value exceeded": "notificationTimestamp",
        "Extra property added": "2022-01-01T12:00:00Z",
        "sound": "default",
        "subtitle": "This is a sample subtitle.",
        "tag": "tag1",
        "threadIdentifier": "thread1",
        "title": "Sample Notification Title",
        "titleLocArgs": [
          "John Doe",
          "New York"
        ],
        "titleLocKey": "hello_world",
        "trigger": "push"
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "action": "Open App",
        "attachments": [
          {
            "identifier": "image1",
            "type": "image/jpeg",
            "url": "https://example.com/image1.jpg"
          },
          {
            "identifier": "video1",
            "type": "video/mp4",
            "url": "https://example.com/video1.mp4"
          }
        ],
        "body": "This is a sample notification body.",
        "bodyLocArgs": [
          "John Doe",
          "New York"
        ],
        "bodyLocKey": "notification.body",
        "category": "social",
        "contentAvailable": true,
        "group": "group1",
        "icon": "icon1",
        "notificationCount": 5,
        "notificationTimestamp": "2022-01-01T12:00:00Z",
        "sound": "default",
        "subtitle": "This is a sample notification subtitle.",
        "tag": "tag1",
        "threadIdentifier": "thread1",
        "title": "Sample Notification Title",
        "titleLocArgs": [
          "John Doe",
          "New York"
        ],
        "titleLocKey": "notification.title",
        "trigger": "push"
      }
    },
    {
      "description": "llama-70b generated negative; focus on minItems keyword",
      "valid": false,
      "rust_error": "[] has less than 1 item",
      "python_error": "[] should be non-empty\n\nFailed validating 'minItems' in schema['properties']['bodyLocArgs']:\n    {'description': 'Variable string values to be used in place of the '\n                    'format specifiers in bodyLocArgs to use to localize '\n                    \"the body text to the user's current localization.\",\n     'items': {'description': 'Item of bodyLocArgs.',\n               'maxLength': 1024,\n               'type': ['string', 'null']},\n     'minItems': 1,\n     'type': ['array', 'null']}\n\nOn instance['bodyLocArgs']:\n    []",
      "data": {
        "action": "Open App",
        "attachments": [
          {
            "identifier": "image1",
            "type": "image/jpeg",
            "url": "https://example.com/image1.jpg"
          },
          {
            "identifier": "video1",
            "type": "video/mp4",
            "url": "https://example.com/video1.mp4"
          }
        ],
        "body": "This is a sample notification body.",
        "bodyLocArgs": [],
        "bodyLocKey": "notification.body",
        "category": "social",
        "contentAvailable": true,
        "group": "group1",
        "icon": "icon1",
        "notificationCount": 5,
        "notificationTimestamp": "2022-01-01T12:00:00Z",
        "sound": "default",
        "subtitle": "This is a sample notification subtitle.",
        "tag": "tag1",
        "threadIdentifier": "thread1",
        "title": "Sample Notification Title",
        "titleLocArgs": [
          "John Doe",
          "New York"
        ],
        "titleLocKey": "notification.title",
        "trigger": "push"
      }
    },
    {
      "description": "llama-70b generated negative; focus on type keyword with an array of types",
      "valid": false,
      "rust_error": "123 is not of types \"null\", \"string\"",
      "python_error": "123 is not of type 'string', 'null'\n\nFailed validating 'type' in schema['properties']['action']:\n    {'description': 'The action associated with the notification.',\n     'maxLength': 1024,\n     'type': ['string', 'null']}\n\nOn instance['action']:\n    123",
      "data": {
        "action": 123,
        "attachments": [
          {
            "identifier": "image1",
            "type": "image/jpeg",
            "url": "https://example.com/image1.jpg"
          },
          {
            "identifier": "video1",
            "type": "video/mp4",
            "url": "https://example.com/video1.mp4"
          }
        ],
        "body": "This is a sample notification body.",
        "bodyLocArgs": [
          "John Doe",
          "New York"
        ],
        "bodyLocKey": "notification.body",
        "category": "social",
        "contentAvailable": true,
        "group": "group1",
        "icon": "icon1",
        "notificationCount": 5,
        "notificationTimestamp": "2022-01-01T12:00:00Z",
        "sound": "default",
        "subtitle": "This is a sample notification subtitle.",
        "tag": "tag1",
        "threadIdentifier": "thread1",
        "title": "Sample Notification Title",
        "titleLocArgs": [
          "John Doe",
          "New York"
        ],
        "titleLocKey": "notification.title",
        "trigger": "push"
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "Additional properties are not allowed ('extraField' was unexpected)",
      "python_error": "'Invalid Trigger' is not one of ['push', 'location', 'calendar', 'timeInterval', 'other']\n\nFailed validating 'enum' in schema['properties']['trigger']:\n    {'description': 'The trigger that raised the notification message.',\n     'enum': ['push', 'location', 'calendar', 'timeInterval', 'other'],\n     'type': 'string'}\n\nOn instance['trigger']:\n    'Invalid Trigger'",
      "data": {
        "action": "Open App",
        "attachments": [
          {
            "identifier": "image1",
            "type": "image/jpeg",
            "url": "https://example.com/image1.jpg",
            "extraField": "Invalid field"
          },
          {
            "identifier": "video1",
            "type": "video/mp4",
            "url": "https://example.com/video1.mp4"
          }
        ],
        "body": "This is a sample notification body.",
        "bodyLocArgs": [
          "John Doe",
          12345
        ],
        "bodyLocKey": "notification.body",
        "category": "social",
        "contentAvailable": true,
        "group": "group1",
        "icon": "icon1",
        "notificationCount": null,
        "notificationTimestamp": "Invalid Date",
        "sound": "default",
        "subtitle": "This is a sample notification subtitle.",
        "tag": "tag1",
        "threadIdentifier": "thread1",
        "title": "",
        "titleLocArgs": [
          "John Doe",
          "New York"
        ],
        "titleLocKey": "notification.title",
        "trigger": "Invalid Trigger"
      }
    }
  ]
}