{
  "description": "sample Kubernetes/kb_471_Normalized.json",
  "meta": {
    "full_size": 764,
    "stripped_size": 156,
    "features": [
      "items"
    ],
    "raw_features": [
      "properties",
      "required",
      "type",
      "type:[]",
      "type:array",
      "type:null",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "description": "DEPRECATED 1.9 - This group version of IPBlock is deprecated by networking/v1/IPBlock. IPBlock describes a particular CIDR (Ex. \"192.168.1.1/24\") that is allowed to the pods matched by a NetworkPolicySpec's podSelector. The except entry describes CIDRs that should not be included within this rule.",
    "properties": {
      "cidr": {
        "description": "CIDR is a string representing the IP Block Valid examples are \"192.168.1.1/24\"",
        "type": [
          "string",
          "null"
        ]
      },
      "except": {
        "description": "Except is a slice of CIDRs that should not be included within an IP Block Valid examples are \"192.168.1.1/24\" Except values will be rejected if they are outside the CIDR range",
        "items": {
          "type": [
            "string",
            "null"
          ]
        },
        "type": [
          "array",
          "null"
        ]
      }
    },
    "required": [
      "cidr"
    ],
    "type": "object"
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "cidr": "192.168.1.1/24",
        "except": [
          "192.168.1.10/32",
          "192.168.1.20/32"
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on type keyword with an array of types",
      "valid": false,
      "rust_error": "123 is not of types \"null\", \"string\"",
      "python_error": "123 is not of type 'string', 'null'\n\nFailed validating 'type' in schema['properties']['cidr']:\n    {'description': 'CIDR is a string representing the IP Block Valid '\n                    'examples are \"192.168.1.1/24\"',\n     'type': ['string', 'null']}\n\nOn instance['cidr']:\n    123",
      "data": {
        "cidr": 123,
        "except": [
          "192.168.1.10/32",
          "192.168.1.20/32"
        ]
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "cidr": "192.168.1.1/24",
        "except": [
          "192.168.1.1/32",
          "192.168.1.2/32"
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on type keyword with an array of types",
      "valid": false,
      "rust_error": "1234 is not of types \"null\", \"string\"",
      "python_error": "1234 is not of type 'string', 'null'\n\nFailed validating 'type' in schema['properties']['cidr']:\n    {'description': 'CIDR is a string representing the IP Block Valid '\n                    'examples are \"192.168.1.1/24\"',\n     'type': ['string', 'null']}\n\nOn instance['cidr']:\n    1234",
      "data": {
        "cidr": 1234,
        "except": [
          "192.168.1.1/32",
          "192.168.1.2/32"
        ]
      }
    }
  ]
}