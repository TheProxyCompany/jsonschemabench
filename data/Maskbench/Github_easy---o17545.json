{
  "description": "sample Github_easy/o17545.json",
  "meta": {
    "full_size": 409,
    "stripped_size": 284,
    "features": [
      "@minmaxLength",
      "const"
    ],
    "raw_features": [
      "$schema",
      "maxLength",
      "minLength",
      "properties",
      "required",
      "type",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$async": true,
    "$schema": "http://json-schema.org/draft-06/schema#",
    "description": "SignUpForm from Tiamat",
    "properties": {
      "confirmPassword": {
        "const": {
          "$data": "1/password"
        }
      },
      "email": {
        "_format": "email",
        "emailExists": false,
        "maxLength": 30,
        "minLength": 4,
        "type": "string"
      },
      "password": {
        "maxLength": 50,
        "minLegth": 4,
        "type": "string"
      }
    },
    "required": [
      "email",
      "password",
      "confirmPassword"
    ],
    "title": "SignUpForm",
    "type": "object"
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "confirmPassword": {
          "$data": "1/password"
        },
        "email": "test@example.com",
        "password": "test@example.com"
      }
    },
    {
      "description": "llama-70b generated negative; focus on minLength keyword or maxLength keyword",
      "valid": false,
      "rust_error": "\"a\" is shorter than 4 characters",
      "python_error": "'a' is too short\n\nFailed validating 'minLength' in schema['properties']['email']:\n    {'_format': 'email',\n     'emailExists': False,\n     'maxLength': 30,\n     'minLength': 4,\n     'type': 'string'}\n\nOn instance['email']:\n    'a'",
      "data": {
        "confirmPassword": {
          "$data": "1/password"
        },
        "email": "a",
        "password": "test@example.com"
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "{\"$data\":\"1/password\"} was expected",
      "python_error": "{'$data': '1/password'} was expected\n\nFailed validating 'const' in schema['properties']['confirmPassword']:\n    {'const': {'$data': '1/password'}}\n\nOn instance['confirmPassword']:\n    {'$data': '1/wrongPassword'}",
      "data": {
        "confirmPassword": {
          "$data": "1/wrongPassword"
        },
        "email": "test@example.com",
        "password": "test@example.com"
      }
    },
    {
      "description": "llama-70b generated negative; focus on minLength keyword or maxLength keyword",
      "valid": false,
      "rust_error": "\"t\" is shorter than 4 characters",
      "python_error": "'t' is too short\n\nFailed validating 'minLength' in schema['properties']['email']:\n    {'_format': 'email',\n     'emailExists': False,\n     'maxLength': 30,\n     'minLength': 4,\n     'type': 'string'}\n\nOn instance['email']:\n    't'",
      "data": {
        "confirmPassword": {
          "$data": "1/password"
        },
        "email": "t",
        "password": "test@example.com"
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "{\"$data\":\"1/password\"} was expected",
      "python_error": "'a' is too short\n\nFailed validating 'minLength' in schema['properties']['email']:\n    {'_format': 'email',\n     'emailExists': False,\n     'maxLength': 30,\n     'minLength': 4,\n     'type': 'string'}\n\nOn instance['email']:\n    'a'",
      "data": {
        "confirmPassword": {
          "$data": "2/invalid"
        },
        "email": "a",
        "password": "test@example.com"
      }
    }
  ]
}