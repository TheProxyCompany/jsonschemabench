{
  "description": "sample Github_easy/o19033.json",
  "meta": {
    "full_size": 550,
    "stripped_size": 242,
    "features": [
      "@minmaxLength",
      "additionalProperties",
      "enum"
    ],
    "raw_features": [
      "_boolSchema",
      "minLength",
      "properties",
      "required",
      "type",
      "type:number",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "additionalProperties": true,
    "description": "Number and type of units",
    "example": "../examples/measure.json",
    "properties": {
      "type": {
        "description": "The type of measurement.",
        "enum": [
          "distance",
          "length",
          "angle",
          "measure",
          "scale"
        ],
        "translation": {}
      },
      "unitOfMeasure": {
        "description": "The type of units to associated with the value.",
        "minLength": 1,
        "translation": {},
        "type": "string"
      },
      "value": {
        "description": "The number of units in the measurement.",
        "translation": {},
        "type": "number"
      }
    },
    "required": [
      "type",
      "value",
      "unitOfMeasure"
    ],
    "title": "measure",
    "type": "object"
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "type": "distance",
        "unitOfMeasure": "meters",
        "value": 10.5
      }
    },
    {
      "description": "llama-70b generated negative; focus on minLength keyword",
      "valid": false,
      "rust_error": "\"\" is shorter than 1 character",
      "python_error": "'' should be non-empty\n\nFailed validating 'minLength' in schema['properties']['unitOfMeasure']:\n    {'description': 'The type of units to associated with the value.',\n     'minLength': 1,\n     'translation': {},\n     'type': 'string'}\n\nOn instance['unitOfMeasure']:\n    ''",
      "data": {
        "type": "distance",
        "unitOfMeasure": "",
        "value": 10.5
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "type": "distance",
        "unitOfMeasure": "meters",
        "value": 10.5
      }
    },
    {
      "description": "llama-70b generated negative; focus on minLength keyword",
      "valid": false,
      "rust_error": "\"\" is shorter than 1 character",
      "python_error": "'' should be non-empty\n\nFailed validating 'minLength' in schema['properties']['unitOfMeasure']:\n    {'description': 'The type of units to associated with the value.',\n     'minLength': 1,\n     'translation': {},\n     'type': 'string'}\n\nOn instance['unitOfMeasure']:\n    ''",
      "data": {
        "type": "distance",
        "unitOfMeasure": "",
        "value": 10.5
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"\" is shorter than 1 character",
      "python_error": "'' should be non-empty\n\nFailed validating 'minLength' in schema['properties']['unitOfMeasure']:\n    {'description': 'The type of units to associated with the value.',\n     'minLength': 1,\n     'translation': {},\n     'type': 'string'}\n\nOn instance['unitOfMeasure']:\n    ''",
      "data": {
        "type": "distance",
        "unitOfMeasure": "",
        "value": 0
      }
    }
  ]
}