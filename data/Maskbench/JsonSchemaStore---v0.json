{
  "description": "sample JsonSchemaStore/v0.json",
  "meta": {
    "full_size": 2043,
    "stripped_size": 674,
    "features": [
      "@siblingKeys",
      "additionalProperties",
      "additionalProperties:object",
      "anyOf",
      "const",
      "items",
      "oneOf"
    ],
    "raw_features": [
      "$id",
      "$schema",
      "properties",
      "type",
      "type:array",
      "type:boolean",
      "type:number",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "https://dprint.dev/schemas/v0.json",
    "title": "dprint configuration file",
    "description": "Schema for a dprint configuration file.",
    "type": "object",
    "properties": {
      "$schema": {
        "description": "The JSON schema reference. Normally you shouldn't bother to provide this as the dprint vscode editor extension will handle constructing the schema for you based on the plugins provided.",
        "type": "string"
      },
      "incremental": {
        "description": "Whether to format files only when they change.",
        "type": "boolean",
        "default": true
      },
      "extends": {
        "description": "Configurations to extend.",
        "anyOf": [
          {
            "description": "A file path or url to a configuration file to extend.",
            "type": "string"
          },
          {
            "description": "A collection of file paths and/or urls to configuration files to extend.",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ]
      },
      "lineWidth": {
        "description": "The width of a line the printer will try to stay under. Note that the printer may exceed this width in certain cases.",
        "type": "number"
      },
      "indentWidth": {
        "description": "The number of characters for an indent.",
        "type": "number"
      },
      "useTabs": {
        "description": "Whether to use tabs (true) or spaces (false) for indentation.",
        "type": "boolean"
      },
      "newLineKind": {
        "description": "The kind of newline to use.",
        "type": "string",
        "oneOf": [
          {
            "const": "auto",
            "description": "For each file, uses the newline kind found at the end of the last line."
          },
          {
            "const": "crlf",
            "description": "Uses carriage return, line feed."
          },
          {
            "const": "lf",
            "description": "Uses line feed."
          },
          {
            "const": "system",
            "description": "Uses the system standard (ex. crlf on Windows)."
          }
        ]
      },
      "includes": {
        "description": "Array of patterns (globs) to use to find files to format.",
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      "excludes": {
        "description": "Array of patterns (globs) to exclude files or directories to format.",
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      "plugins": {
        "description": "Array of plugin URLs to format files.",
        "type": "array",
        "items": {
          "type": "string"
        }
      }
    },
    "additionalProperties": {
      "description": "Plugin configuration.",
      "type": "object"
    }
  },
  "tests": [
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "incremental": false,
        "extends": "https://example.com/dprint-config.json",
        "lineWidth": 120,
        "indentWidth": 4,
        "useTabs": false,
        "newLineKind": "lf",
        "includes": [
          "**/*.js",
          "**/*.ts"
        ],
        "excludes": [
          "node_modules/**",
          "**/*.min.js"
        ],
        "plugins": [
          "https://plugins.dprint.dev/typescript/v0.json"
        ],
        "typescript": {
          "printWidth": 100
        }
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "incremental": false,
        "extends": [
          "https://example.com/config1.json",
          "https://example.com/config2.json"
        ],
        "lineWidth": 120,
        "indentWidth": 4,
        "useTabs": false,
        "newLineKind": "lf",
        "includes": [
          "**/*.js",
          "**/*.ts"
        ],
        "excludes": [
          "node_modules/**",
          "dist/**"
        ],
        "plugins": [
          "https://plugins.dprint.dev/typescript-0.0.0.json",
          "https://plugins.dprint.dev/javascript-0.0.0.json"
        ],
        "typescript": {
          "printWidth": 100
        },
        "javascript": {
          "printWidth": 100
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on anyOf keyword",
      "valid": false,
      "rust_error": "{\"url\":\"https://example.com/config1.json\",\"version\":\"1.0.0\"} is not valid under any of the schemas listed in the 'anyOf' keyword",
      "python_error": "{'url': 'https://example.com/config1.json', 'version': '1.0.0'} is not valid under any of the given schemas\n\nFailed validating 'anyOf' in schema['properties']['extends']:\n    {'description': 'Configurations to extend.',\n     'anyOf': [{'description': 'A file path or url to a configuration file '\n                               'to extend.',\n                'type': 'string'},\n               {'description': 'A collection of file paths and/or urls to '\n                               'configuration files to extend.',\n                'type': 'array',\n                'items': {'type': 'string'}}]}\n\nOn instance['extends']:\n    {'url': 'https://example.com/config1.json', 'version': '1.0.0'}",
      "data": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "incremental": false,
        "extends": {
          "url": "https://example.com/config1.json",
          "version": "1.0.0"
        },
        "lineWidth": 120,
        "indentWidth": 4,
        "useTabs": false,
        "newLineKind": "lf",
        "includes": [
          "**/*.js",
          "**/*.ts"
        ],
        "excludes": [
          "node_modules/**",
          "dist/**"
        ],
        "plugins": [
          "https://plugins.dprint.dev/typescript-0.0.0.json",
          "https://plugins.dprint.dev/javascript-0.0.0.json"
        ],
        "typescript": {
          "printWidth": 100
        },
        "javascript": {
          "printWidth": 100
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on oneOf keyword",
      "valid": false,
      "rust_error": "\"unknown\" is not valid under any of the schemas listed in the 'oneOf' keyword",
      "python_error": "'unknown' is not valid under any of the given schemas\n\nFailed validating 'oneOf' in schema['properties']['newLineKind']:\n    {'description': 'The kind of newline to use.',\n     'type': 'string',\n     'oneOf': [{'const': 'auto',\n                'description': 'For each file, uses the newline kind found '\n                               'at the end of the last line.'},\n               {'const': 'crlf',\n                'description': 'Uses carriage return, line feed.'},\n               {'const': 'lf', 'description': 'Uses line feed.'},\n               {'const': 'system',\n                'description': 'Uses the system standard (ex. crlf on '\n                               'Windows).'}]}\n\nOn instance['newLineKind']:\n    'unknown'",
      "data": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "incremental": false,
        "extends": [
          "https://example.com/config1.json",
          "https://example.com/config2.json"
        ],
        "lineWidth": 120,
        "indentWidth": 4,
        "useTabs": false,
        "newLineKind": "unknown",
        "invalid value, not one of 'auto', 'crlf', 'lf', or 'system'": "includes",
        "excludes": [
          "node_modules/**",
          "dist/**"
        ],
        "plugins": [
          "https://plugins.dprint.dev/typescript-0.0.0.json",
          "https://plugins.dprint.dev/javascript-0.0.0.json"
        ],
        "typescript": {
          "printWidth": 100
        },
        "javascript": {
          "printWidth": 100
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on additionalProperties keyword with an object schema",
      "valid": false,
      "rust_error": "[\"this is not a valid value for additionalProperties\"] is not of type \"object\"",
      "python_error": "['this is not a valid value for additionalProperties'] is not of type 'object'\n\nFailed validating 'type' in schema['additionalProperties']:\n    {'description': 'Plugin configuration.', 'type': 'object'}\n\nOn instance['anotherUnknownPlugin']:\n    ['this is not a valid value for additionalProperties']",
      "data": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "incremental": false,
        "extends": [
          "https://example.com/config1.json",
          "https://example.com/config2.json"
        ],
        "lineWidth": 120,
        "indentWidth": 4,
        "useTabs": false,
        "newLineKind": "lf",
        "includes": [
          "**/*.js",
          "**/*.ts"
        ],
        "excludes": [
          "node_modules/**",
          "dist/**"
        ],
        "plugins": [
          "https://plugins.dprint.dev/typescript-0.0.0.json",
          "https://plugins.dprint.dev/javascript-0.0.0.json"
        ],
        "typescript": {
          "printWidth": 100
        },
        "javascript": {
          "printWidth": 100
        },
        "unknownPlugin": {
          "unknownProperty": 1,
          "anotherUnknownProperty": "some value"
        },
        "anotherUnknownPlugin": [
          "this is not a valid value for additionalProperties"
        ]
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"false\" is not of type \"boolean\"",
      "python_error": "'true' is not of type 'boolean'\n\nFailed validating 'type' in schema['properties']['useTabs']:\n    {'description': 'Whether to use tabs (true) or spaces (false) for '\n                    'indentation.',\n     'type': 'boolean'}\n\nOn instance['useTabs']:\n    'true'",
      "data": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "incremental": "false",
        "extends": "https://example.com/config1.json",
        "lineWidth": "120",
        "indentWidth": null,
        "useTabs": "true",
        "newLineKind": "linux",
        "includes": "**/*.js",
        "excludes": "node_modules/**",
        "plugins": "https://plugins.dprint.dev/typescript-0.0.0.json",
        "typescript": {
          "printWidth": "100"
        },
        "javascript": "100"
      }
    }
  ]
}