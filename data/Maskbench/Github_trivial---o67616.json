{
  "description": "sample Github_trivial/o67616.json",
  "meta": {
    "full_size": 1097,
    "stripped_size": 353,
    "features": [
      "@minmaxInteger",
      "@minmaxLength",
      "@siblingKeys",
      "oneOf"
    ],
    "raw_features": [
      "$schema",
      "id",
      "maxLength",
      "minimum",
      "properties",
      "required",
      "type",
      "type:integer",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "id": "#/definitions/version",
    "title": "Collection Version",
    "description": "Postman allows you to version your collections as they grow, and this field holds the version number. While optional, it is recommended that you use this field to its fullest extent!",
    "oneOf": [
      {
        "type": "object",
        "properties": {
          "major": {
            "description": "Increment this number if you make changes to the collection that changes its behaviour. E.g: Removing or adding new test scripts. (partly or completely).",
            "minimum": 0,
            "type": "integer"
          },
          "minor": {
            "description": "You should increment this number if you make changes that will not break anything that uses the collection. E.g: removing a folder.",
            "minimum": 0,
            "type": "integer"
          },
          "patch": {
            "description": "Ideally, minor changes to a collection should result in the increment of this number.",
            "minimum": 0,
            "type": "integer"
          },
          "identifier": {
            "description": "A human friendly identifier to make sense of the version numbers. E.g: 'beta-3'",
            "type": "string",
            "maxLength": 10
          },
          "meta": {}
        },
        "required": [
          "major",
          "minor",
          "patch"
        ]
      },
      {
        "type": "string"
      }
    ]
  },
  "tests": [
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "major": 1,
        "minor": 2,
        "patch": 3,
        "identifier": "beta-1",
        "meta": {}
      }
    },
    {
      "description": "llama-70b generated negative; focus on minimum keyword",
      "valid": false,
      "rust_error": "{\"major\":-1,\"minor\":2,\"patch\":3,\"identifier\":\"beta-1\",\"meta\":{}} is not valid under any of the schemas listed in the 'oneOf' keyword",
      "python_error": "-1 is less than the minimum of 0\n\nFailed validating 'minimum' in schema[0]['properties']['major']:\n    {'description': 'Increment this number if you make changes to the '\n                    'collection that changes its behaviour. E.g: Removing '\n                    'or adding new test scripts. (partly or completely).',\n     'minimum': 0,\n     'type': 'integer'}\n\nOn instance['major']:\n    -1",
      "data": {
        "major": -1,
        "minor": 2,
        "patch": 3,
        "identifier": "beta-1",
        "meta": {}
      }
    },
    {
      "description": "llama-70b generated negative; focus on maxLength keyword",
      "valid": false,
      "rust_error": "{\"major\":1,\"minor\":2,\"patch\":3,\"identifier\":\"thisisalongidentifier\",\"meta\":{}} is not valid under any of the schemas listed in the 'oneOf' keyword",
      "python_error": "'thisisalongidentifier' is too long\n\nFailed validating 'maxLength' in schema[0]['properties']['identifier']:\n    {'description': 'A human friendly identifier to make sense of the '\n                    \"version numbers. E.g: 'beta-3'\",\n     'type': 'string',\n     'maxLength': 10}\n\nOn instance['identifier']:\n    'thisisalongidentifier'",
      "data": {
        "major": 1,
        "minor": 2,
        "patch": 3,
        "identifier": "thisisalongidentifier",
        "meta": {}
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "{\"major\":-1,\"minor\":2,\"patch\":3,\"identifier\":\"beta-1\",\"meta\":{}} is not valid under any of the schemas listed in the 'oneOf' keyword",
      "python_error": "-1 is less than the minimum of 0\n\nFailed validating 'minimum' in schema[0]['properties']['major']:\n    {'description': 'Increment this number if you make changes to the '\n                    'collection that changes its behaviour. E.g: Removing '\n                    'or adding new test scripts. (partly or completely).',\n     'minimum': 0,\n     'type': 'integer'}\n\nOn instance['major']:\n    -1",
      "data": {
        "major": -1,
        "minor": 2,
        "patch": 3,
        "identifier": "beta-1",
        "meta": {}
      }
    }
  ]
}