{
  "description": "sample Github_medium/o68822.json",
  "meta": {
    "full_size": 1914,
    "stripped_size": 1256,
    "features": [
      "$ref",
      "@minmaxItems",
      "items"
    ],
    "raw_features": [
      "definitions",
      "maxItems",
      "minItems",
      "properties",
      "required",
      "type",
      "type:[]",
      "type:array",
      "type:boolean",
      "type:integer",
      "type:null",
      "type:number",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "definitions": {
      "Instance": {
        "properties": {
          "data": {
            "properties": {
              "compatibleInstances": {
                "description": "Array of compatible plug-ins",
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "family": {
                "description": "Family of instance",
                "type": "string"
              }
            },
            "required": [
              "family"
            ],
            "type": "object"
          },
          "name": {
            "description": "Name of instance",
            "type": "string"
          }
        },
        "required": [
          "name",
          "data"
        ],
        "type": "object"
      },
      "Plugin": {
        "properties": {
          "data": {
            "properties": {
              "canProcessContext": {
                "description": "Whether or not the plug-in has implemented Context processing",
                "type": "boolean"
              },
              "canProcessInstance": {
                "description": "Whether or not the plug-in has implemented Instance processing",
                "type": "boolean"
              },
              "canRepairContext": {
                "description": "Whether or not the plug-in has implemented Instance repair",
                "type": "boolean"
              },
              "canRepairInstance": {
                "description": "Whether or not the plug-in has implemented Instance repair",
                "type": "boolean"
              },
              "compatibleInstances": {
                "description": "Array of compatible instances",
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "doc": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "families": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "hasCompatible": {
                "type": "boolean"
              },
              "hasRepair": {
                "type": "boolean"
              },
              "module": {
                "type": "string"
              },
              "optional": {
                "type": "boolean"
              },
              "order": {
                "type": "number"
              },
              "type": {
                "type": "string"
              },
              "version": {
                "items": {
                  "type": "integer"
                },
                "maxItems": 3,
                "minItems": 3,
                "type": "array"
              }
            },
            "required": [
              "families"
            ],
            "type": "object"
          },
          "name": {
            "description": "",
            "type": "string"
          }
        },
        "required": [
          "name",
          "data"
        ],
        "type": "object"
      }
    },
    "description": "Current state of host",
    "properties": {
      "context": {
        "description": "Context",
        "properties": {
          "children": {
            "description": "Instances",
            "items": {
              "$ref": "#/definitions/Instance"
            },
            "type": "array"
          },
          "data": {
            "description": "Data of context",
            "type": "object"
          }
        },
        "type": "object"
      },
      "plugins": {
        "description": "Collection of plug-ins",
        "items": {
          "$ref": "#/definitions/Plugin"
        },
        "type": "array"
      }
    },
    "required": [
      "context",
      "plugins"
    ],
    "title": "State",
    "type": "object"
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "context": {
          "children": [
            {
              "data": {
                "compatibleInstances": [
                  "instance1",
                  "instance2"
                ],
                "family": "family1"
              },
              "name": "instance1"
            },
            {
              "data": {
                "compatibleInstances": [
                  "instance3",
                  "instance4"
                ],
                "family": "family2"
              },
              "name": "instance2"
            }
          ],
          "data": {}
        },
        "plugins": [
          {
            "data": {
              "canProcessContext": true,
              "canProcessInstance": true,
              "canRepairContext": false,
              "canRepairInstance": false,
              "compatibleInstances": [
                "instance1",
                "instance2"
              ],
              "doc": "This is a plugin",
              "families": [
                "family1",
                "family2"
              ],
              "hasCompatible": true,
              "hasRepair": false,
              "module": "module1",
              "optional": false,
              "order": 1,
              "type": "type1",
              "version": [
                1,
                2,
                3
              ]
            },
            "name": "plugin1"
          },
          {
            "data": {
              "canProcessContext": false,
              "canProcessInstance": false,
              "canRepairContext": true,
              "canRepairInstance": true,
              "compatibleInstances": [
                "instance3",
                "instance4"
              ],
              "doc": null,
              "families": [
                "family3",
                "family4"
              ],
              "hasCompatible": false,
              "hasRepair": true,
              "module": "module2",
              "optional": true,
              "order": 2,
              "type": "type2",
              "version": [
                4,
                5,
                6
              ]
            },
            "name": "plugin2"
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on minItems keyword or maxItems keyword",
      "valid": false,
      "rust_error": "[1,2] has less than 3 items",
      "python_error": "[4, 5, 6, 7] is too long\n\nFailed validating 'maxItems' in schema['properties']['plugins']['items']['properties']['data']['properties']['version']:\n    {'items': {'type': 'integer'},\n     'maxItems': 3,\n     'minItems': 3,\n     'type': 'array'}\n\nOn instance['plugins'][1]['data']['version']:\n    [4, 5, 6, 7]",
      "data": {
        "context": {
          "children": [
            {
              "data": {
                "compatibleInstances": [
                  "instance1",
                  "instance2"
                ],
                "family": "family1"
              },
              "name": "instance1"
            },
            {
              "data": {
                "compatibleInstances": [
                  "instance3",
                  "instance4"
                ],
                "family": "family2"
              },
              "name": "instance2"
            }
          ],
          "data": {}
        },
        "plugins": [
          {
            "data": {
              "canProcessContext": true,
              "canProcessInstance": true,
              "canRepairContext": false,
              "canRepairInstance": false,
              "compatibleInstances": [
                "instance1",
                "instance2"
              ],
              "doc": "This is a plugin",
              "families": [
                "family1",
                "family2"
              ],
              "hasCompatible": true,
              "hasRepair": false,
              "module": "module1",
              "optional": false,
              "order": 1,
              "type": "type1",
              "version": [
                1,
                2
              ]
            },
            "name": "plugin1"
          },
          {
            "data": {
              "canProcessContext": false,
              "canProcessInstance": false,
              "canRepairContext": true,
              "canRepairInstance": true,
              "compatibleInstances": [
                "instance3",
                "instance4"
              ],
              "doc": null,
              "families": [
                "family3",
                "family4"
              ],
              "hasCompatible": false,
              "hasRepair": true,
              "module": "module2",
              "optional": true,
              "order": 2,
              "type": "type2",
              "version": [
                4,
                5,
                6,
                7
              ]
            },
            "name": "plugin2"
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on type keyword with an array of types",
      "valid": false,
      "rust_error": "123 is not of types \"null\", \"string\"",
      "python_error": "123 is not of type 'string', 'null'\n\nFailed validating 'type' in schema['properties']['plugins']['items']['properties']['data']['properties']['doc']:\n    {'type': ['string', 'null']}\n\nOn instance['plugins'][0]['data']['doc']:\n    123",
      "data": {
        "context": {
          "children": [
            {
              "data": {
                "compatibleInstances": [
                  "instance1",
                  "instance2"
                ],
                "family": "family1"
              },
              "name": "instance1"
            },
            {
              "data": {
                "compatibleInstances": [
                  "instance3",
                  "instance4"
                ],
                "family": "family2"
              },
              "name": "instance2"
            }
          ],
          "data": {}
        },
        "plugins": [
          {
            "data": {
              "canProcessContext": true,
              "canProcessInstance": true,
              "canRepairContext": false,
              "canRepairInstance": false,
              "compatibleInstances": [
                "instance1",
                "instance2"
              ],
              "doc": 123,
              "families": [
                "family1",
                "family2"
              ],
              "hasCompatible": true,
              "hasRepair": false,
              "module": "module1",
              "optional": false,
              "order": 1,
              "type": "type1",
              "version": [
                1,
                2,
                3
              ]
            },
            "name": "plugin1"
          },
          {
            "data": {
              "canProcessContext": false,
              "canProcessInstance": false,
              "canRepairContext": true,
              "canRepairInstance": true,
              "compatibleInstances": [
                "instance3",
                "instance4"
              ],
              "doc": null,
              "families": [
                "family3",
                "family4"
              ],
              "hasCompatible": false,
              "hasRepair": true,
              "module": "module2",
              "optional": true,
              "order": 2,
              "type": "type2",
              "version": [
                4,
                5,
                6
              ]
            },
            "name": "plugin2"
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"family\" is a required property",
      "python_error": "[4, 5] is too short\n\nFailed validating 'minItems' in schema['properties']['plugins']['items']['properties']['data']['properties']['version']:\n    {'items': {'type': 'integer'},\n     'maxItems': 3,\n     'minItems': 3,\n     'type': 'array'}\n\nOn instance['plugins'][1]['data']['version']:\n    [4, 5]",
      "data": {
        "context": {
          "children": [
            {
              "data": {
                "compatibleInstances": [
                  "instance1",
                  "instance2"
                ],
                "family": "family1"
              },
              "name": "instance1"
            },
            {
              "data": {
                "compatibleInstances": [
                  "instance3",
                  "instance4"
                ]
              },
              "name": "instance2"
            }
          ],
          "data": {}
        },
        "plugins": [
          {
            "data": {
              "canProcessContext": true,
              "canProcessInstance": true,
              "canRepairContext": false,
              "canRepairInstance": false,
              "compatibleInstances": [
                "instance1",
                "instance2"
              ],
              "doc": "This is a plugin",
              "families": [
                "family1",
                "family2"
              ],
              "hasCompatible": true,
              "hasRepair": false,
              "module": "module1",
              "optional": false,
              "order": 1,
              "type": "type1",
              "version": [
                1,
                2,
                3
              ]
            },
            "name": "plugin1"
          },
          {
            "data": {
              "canProcessContext": false,
              "canProcessInstance": false,
              "canRepairContext": true,
              "canRepairInstance": true,
              "compatibleInstances": [
                "instance3",
                "instance4"
              ],
              "doc": null,
              "families": [
                "family3",
                "family4"
              ],
              "hasCompatible": false,
              "hasRepair": true,
              "module": "module2",
              "optional": true,
              "order": 2,
              "type": "type2",
              "version": [
                4,
                5
              ]
            },
            "name": "plugin2"
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"family\" is a required property",
      "python_error": "[4, 5, 6, 7] is too long\n\nFailed validating 'maxItems' in schema['properties']['plugins']['items']['properties']['data']['properties']['version']:\n    {'items': {'type': 'integer'},\n     'maxItems': 3,\n     'minItems': 3,\n     'type': 'array'}\n\nOn instance['plugins'][1]['data']['version']:\n    [4, 5, 6, 7]",
      "data": {
        "context": {
          "children": [
            {
              "data": {
                "compatibleInstances": [
                  "instance1",
                  "instance2"
                ],
                "family": "family1"
              },
              "name": "instance1"
            },
            {
              "data": {
                "compatibleInstances": [
                  "instance3",
                  "instance4"
                ]
              },
              "name": "instance2"
            }
          ],
          "data": {}
        },
        "plugins": [
          {
            "data": {
              "canProcessContext": true,
              "canProcessInstance": true,
              "canRepairContext": false,
              "canRepairInstance": false,
              "compatibleInstances": [
                "instance1",
                "instance2"
              ],
              "doc": "This is a plugin",
              "families": [
                "family1",
                "family2"
              ],
              "hasCompatible": true,
              "hasRepair": false,
              "module": "module1",
              "optional": false,
              "order": 1,
              "type": "type1",
              "version": [
                1,
                2
              ]
            },
            "name": "plugin1"
          },
          {
            "data": {
              "canProcessContext": false,
              "canProcessInstance": false,
              "canRepairContext": true,
              "canRepairInstance": true,
              "compatibleInstances": [
                "instance3",
                "instance4"
              ],
              "doc": null,
              "families": [
                "family3",
                "family4"
              ],
              "hasCompatible": false,
              "hasRepair": true,
              "module": "module2",
              "optional": true,
              "order": 2,
              "type": "type2",
              "version": [
                4,
                5,
                6,
                7
              ]
            },
            "name": "plugin2"
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on type keyword with an array of types",
      "valid": false,
      "rust_error": "123 is not of type \"string\"",
      "python_error": "123 is not of type 'string', 'null'\n\nFailed validating 'type' in schema['properties']['plugins']['items']['properties']['data']['properties']['doc']:\n    {'type': ['string', 'null']}\n\nOn instance['plugins'][0]['data']['doc']:\n    123",
      "data": {
        "context": {
          "children": [
            {
              "data": {
                "compatibleInstances": [
                  "instance1",
                  "instance2"
                ],
                "family": 123
              },
              "name": "instance1"
            },
            {
              "data": {
                "compatibleInstances": [
                  "instance3",
                  "instance4"
                ],
                "family": "family2"
              },
              "name": "instance2"
            }
          ],
          "data": {}
        },
        "plugins": [
          {
            "data": {
              "canProcessContext": true,
              "canProcessInstance": true,
              "canRepairContext": false,
              "canRepairInstance": false,
              "compatibleInstances": [
                "instance1",
                "instance2"
              ],
              "doc": 123,
              "families": [
                "family1",
                "family2"
              ],
              "hasCompatible": true,
              "hasRepair": false,
              "module": "module1",
              "optional": false,
              "order": 1,
              "type": "type1",
              "version": [
                1,
                2,
                3
              ]
            },
            "name": "plugin1"
          },
          {
            "data": {
              "canProcessContext": false,
              "canProcessInstance": false,
              "canRepairContext": true,
              "canRepairInstance": true,
              "compatibleInstances": [
                "instance3",
                "instance4"
              ],
              "doc": "This is a plugin",
              "families": [
                "family3",
                "family4"
              ],
              "hasCompatible": false,
              "hasRepair": true,
              "module": "module2",
              "optional": true,
              "order": 2,
              "type": "type2",
              "version": [
                "4",
                "5",
                "6"
              ]
            },
            "name": "plugin2"
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "12345 is not of type \"string\"",
      "python_error": "[4, 5] is too short\n\nFailed validating 'minItems' in schema['properties']['plugins']['items']['properties']['data']['properties']['version']:\n    {'items': {'type': 'integer'},\n     'maxItems': 3,\n     'minItems': 3,\n     'type': 'array'}\n\nOn instance['plugins'][1]['data']['version']:\n    [4, 5]",
      "data": {
        "context": {
          "children": [
            {
              "data": {
                "compatibleInstances": [
                  "instance1",
                  "instance2"
                ],
                "family": "family1"
              },
              "name": 12345
            },
            {
              "data": {
                "compatibleInstances": [
                  "instance3",
                  "instance4"
                ],
                "family": "family2"
              },
              "name": "instance2"
            }
          ],
          "data": {}
        },
        "plugins": [
          {
            "data": {
              "canProcessContext": true,
              "canProcessInstance": true,
              "canRepairContext": false,
              "canRepairInstance": false,
              "compatibleInstances": [
                "instance1",
                "instance2"
              ],
              "doc": "This is a plugin",
              "families": [
                "family1",
                "family2"
              ],
              "hasCompatible": true,
              "hasRepair": false,
              "module": "module1",
              "optional": false,
              "order": 1,
              "type": "type1",
              "version": [
                1,
                "2",
                3
              ]
            },
            "name": "plugin1"
          },
          {
            "data": {
              "canProcessContext": false,
              "canProcessInstance": false,
              "canRepairContext": true,
              "canRepairInstance": true,
              "compatibleInstances": [
                "instance3",
                "instance4"
              ],
              "doc": null,
              "families": [
                "family3",
                "family4"
              ],
              "hasCompatible": false,
              "hasRepair": true,
              "module": "module2",
              "optional": true,
              "order": 2,
              "type": "type2",
              "version": [
                4,
                5
              ]
            },
            "name": "plugin2"
          }
        ]
      }
    }
  ]
}