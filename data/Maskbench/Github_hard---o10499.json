{
  "description": "sample Github_hard/o10499.json",
  "meta": {
    "full_size": 6771,
    "stripped_size": 4208,
    "features": [
      "$ref",
      "@siblingKeys",
      "additionalProperties",
      "anyOf",
      "enum",
      "items",
      "pattern"
    ],
    "raw_features": [
      "$schema",
      "_boolSchema",
      "definitions",
      "id",
      "properties",
      "required",
      "type",
      "type:[]",
      "type:array",
      "type:boolean",
      "type:number",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-04/schema",
    "id": "https://raw.githubusercontent.com/Microsoft/azure-pipelines-task-lib/master/tasks.schema.json",
    "title": "Azure DevOps Tasks schema",
    "type": "object",
    "additionalProperties": false,
    "properties": {
      "id": {
        "type": "string",
        "description": "A unique guid for this task",
        "pattern": "^[A-Fa-f0-9]{8}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{12}$"
      },
      "name": {
        "type": "string",
        "description": "Name with no spaces",
        "pattern": "^[A-Za-z0-9\\-]+$"
      },
      "friendlyName": {
        "type": "string",
        "description": "Descriptive name (spaces allowed). Must be <= 40 chars"
      },
      "description": {
        "type": "string",
        "description": "Detailed description of what your task does"
      },
      "helpUrl": {
        "type": "string"
      },
      "helpMarkDown": {
        "type": "string"
      },
      "author": {
        "type": "string"
      },
      "preview": {
        "type": "boolean"
      },
      "deprecated": {
        "type": "boolean",
        "description": "Task is deprecated only when the latest version is marked as deprecated. Deprecated tasks appear at the end of searches under a section that is collapsed by default."
      },
      "showEnvironmentVariables": {
        "type": "boolean",
        "description": "Toggles showing the environment variable editor in the task editor UI. Allows passing environment variables to script based tasks."
      },
      "runsOn": {
        "type": "array",
        "items": {
          "type": "string",
          "enum": [
            "Agent",
            "MachineGroup",
            "Server"
          ]
        }
      },
      "visibility": {
        "type": "array",
        "items": {
          "type": "string",
          "enum": [
            "Build",
            "Release"
          ]
        }
      },
      "category": {
        "type": "string",
        "description": "Where the task appears in Azure DevOps. Use the 'Azure *' categories for Azure DevOps and Azure DevOps Server 2019. Use the other categories for Team Foundation Server 2018 and below.",
        "enum": [
          "Build",
          "Utility",
          "Test",
          "Package",
          "Deploy",
          "Azure Repos",
          "Azure Boards",
          "Azure Pipelines",
          "Azure Test Plans",
          "Azure Artifacts"
        ]
      },
      "groups": {
        "type": "array",
        "description": "Describes groups that task properties may be logically grouped by in the UI.",
        "items": {
          "type": "object",
          "additionalProperties": false,
          "required": [
            "name",
            "displayName"
          ],
          "properties": {
            "name": {
              "type": "string"
            },
            "displayName": {
              "type": "string"
            },
            "isExpanded": {
              "type": "boolean"
            },
            "visibleRule": {
              "type": "string",
              "description": "Allow's you to define a rule which dictates when the group will be visible to a user, for example \"variableName = value\""
            }
          }
        }
      },
      "demands": {
        "type": "array",
        "description": "Allows you to define a list of demands that a build agent requires to run this build task.",
        "items": {
          "type": "string"
        }
      },
      "minimumAgentVersion": {
        "type": "string",
        "pattern": "^\\d+\\.\\d+(\\.\\d+)?$"
      },
      "version": {
        "type": "object",
        "additionalProperties": false,
        "description": "Always update this when you release your task, so that the agents utilize the latest code.",
        "required": [
          "Major",
          "Minor",
          "Patch"
        ],
        "properties": {
          "Major": {
            "type": "number"
          },
          "Minor": {
            "type": "number"
          },
          "Patch": {
            "type": "number"
          }
        }
      },
      "instanceNameFormat": {
        "type": "string",
        "description": "This is how the task will be displayed within the build step list - you can use variable values by using $(variablename)"
      },
      "inputs": {
        "type": "array",
        "items": {
          "type": "object",
          "additionalProperties": false,
          "required": [
            "name",
            "label",
            "type"
          ],
          "properties": {
            "name": {
              "type": "string",
              "description": "The variable name to use to store the user-supplied value",
              "pattern": "^[A-Za-z][A-Za-z0-9]*$"
            },
            "label": {
              "type": "string",
              "description": "The text displayed to the user for the input label"
            },
            "type": {
              "type": "string",
              "description": "The type that dictates the control rendered to the user.",
              "anyOf": [
                {
                  "enum": [
                    "boolean",
                    "filePath",
                    "multiLine",
                    "pickList",
                    "radio",
                    "secureFile",
                    "string"
                  ]
                },
                {
                  "type": "string",
                  "pattern": "^connectedService\\:.+$"
                }
              ]
            },
            "defaultValue": {
              "type": [
                "string",
                "boolean"
              ],
              "description": "The default value to apply to this input."
            },
            "required": {
              "type": "boolean",
              "description": "Whether the input is a required field (default is false).",
              "default": false
            },
            "helpMarkDown": {
              "type": "string",
              "description": "Help to be displayed when hovering over the help icon for the input. To display URLs use the format [Text To Display](http://Url)"
            },
            "groupName": {
              "type": "string",
              "description": "Setting this to the name of a group defined in 'groups' will place the input into that group."
            },
            "visibleRule": {
              "type": "string",
              "description": "Allow's you to define a rule which dictates when the input will be visible to a user, for example \"variableName = value\""
            },
            "properties": {
              "type": "object",
              "properties": {
                "EditableOptions": {
                  "type": "string",
                  "enum": [
                    "True",
                    "False"
                  ]
                }
              }
            },
            "options": {
              "type": "object",
              "additionalProperties": true
            }
          }
        }
      },
      "dataSourceBindings": {
        "type": "array",
        "items": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "target": {
              "type": "string"
            },
            "endpointId": {
              "type": "string"
            },
            "dataSourceName": {
              "type": "string"
            },
            "parameters": {
              "type": "object"
            },
            "resultTemplate": {
              "type": "string"
            },
            "endpointUrl": {
              "type": "string"
            },
            "resultSelector": {
              "type": "string"
            }
          }
        }
      },
      "sourceDefinitions": {
        "type": "array",
        "items": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "target": {
              "type": "string"
            },
            "endpoint": {
              "type": "string"
            },
            "selector": {
              "type": "string"
            },
            "keySelector": {
              "type": "string"
            },
            "authKey": {
              "type": "string"
            }
          }
        }
      },
      "prejobexecution": {
        "type": "object",
        "additionalProperties": false,
        "description": "Execution options for this task (on Pre-Job stage)",
        "properties": {
          "Node10": {
            "$ref": "#/definitions/executionObject"
          },
          "Node": {
            "$ref": "#/definitions/executionObject"
          },
          "PowerShell3": {
            "$ref": "#/definitions/executionObject"
          },
          "PowerShell": {
            "$ref": "#/definitions/executionObject"
          }
        }
      },
      "execution": {
        "type": "object",
        "additionalProperties": false,
        "description": "Execution options for this task",
        "properties": {
          "Node10": {
            "$ref": "#/definitions/executionObject"
          },
          "Node": {
            "$ref": "#/definitions/executionObject"
          },
          "PowerShell3": {
            "$ref": "#/definitions/executionObject"
          },
          "PowerShell": {
            "$ref": "#/definitions/executionObject"
          }
        }
      },
      "postjobexecution": {
        "type": "object",
        "additionalProperties": false,
        "description": "Execution options for this task (on Post-Job stage)",
        "properties": {
          "Node10": {
            "$ref": "#/definitions/executionObject"
          },
          "Node": {
            "$ref": "#/definitions/executionObject"
          },
          "PowerShell3": {
            "$ref": "#/definitions/executionObject"
          },
          "PowerShell": {
            "$ref": "#/definitions/executionObject"
          }
        }
      },
      "messages": {
        "type": "object"
      },
      "OutputVariables": {
        "type": "array",
        "description": "Describes output variables of task.",
        "items": {
          "type": "object",
          "additionalProperties": false,
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "type": "string",
              "description": "The variable name",
              "pattern": "^[A-Za-z][A-Za-z0-9]*$"
            },
            "description": {
              "type": "string",
              "description": "Detailed description of the variable"
            }
          }
        }
      },
      "$schema": {
        "type": "string"
      }
    },
    "definitions": {
      "executionObject": {
        "type": "object",
        "additionalProperties": true,
        "properties": {
          "target": {
            "type": "string",
            "description": "The target file to be executed. You can use variables here in brackets e.g. $(currentDirectory)\filename.ps1"
          },
          "platforms": {
            "type": "array",
            "items": {
              "enum": [
                "windows"
              ]
            }
          }
        }
      }
    }
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "$schema": "http://json-schema.org/draft-04/schema#"
      }
    },
    {
      "description": "llama-70b generated negative; focus on anyOf keyword",
      "valid": false,
      "rust_error": "\"invalidType\" is not valid under any of the schemas listed in the 'anyOf' keyword",
      "python_error": "'invalidType' does not match '^connectedService\\\\:.+$'\n\nFailed validating 'pattern' in schema[1]:\n    {'type': 'string', 'pattern': '^connectedService\\\\:.+$'}\n\nOn instance:\n    'invalidType'",
      "data": {
        "inputs": [
          {
            "name": "test",
            "label": "test",
            "type": "invalidType"
          }
        ],
        "$schema": "http://json-schema.org/draft-04/schema#"
      }
    },
    {
      "description": "llama-70b generated negative; focus on type keyword with an array of types",
      "valid": false,
      "rust_error": "123 is not of types \"boolean\", \"string\"",
      "python_error": "123 is not of type 'string', 'boolean'\n\nFailed validating 'type' in schema['properties']['inputs']['items']['properties']['defaultValue']:\n    {'type': ['string', 'boolean'],\n     'description': 'The default value to apply to this input.'}\n\nOn instance['inputs'][0]['defaultValue']:\n    123",
      "data": {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "inputs": [
          {
            "name": "test",
            "label": "test",
            "type": "boolean",
            "defaultValue": 123
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on pattern keyword",
      "valid": false,
      "rust_error": "\"1234567890\" does not match \"^[A-Fa-f0-9]{8}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{12}$\"",
      "python_error": "'Invalid Name!' does not match '^[A-Za-z0-9\\\\-]+$'\n\nFailed validating 'pattern' in schema['properties']['name']:\n    {'type': 'string',\n     'description': 'Name with no spaces',\n     'pattern': '^[A-Za-z0-9\\\\-]+$'}\n\nOn instance['name']:\n    'Invalid Name!'",
      "data": {
        "id": "1234567890",
        "name": "Invalid Name!",
        "friendlyName": "Friendly Name",
        "description": "Detailed description of what your task does",
        "helpUrl": "https://example.com/help",
        "helpMarkDown": "Help markdown",
        "author": "Author Name",
        "preview": false,
        "deprecated": false,
        "showEnvironmentVariables": false,
        "runsOn": [
          "Agent"
        ],
        "visibility": [
          "Build"
        ],
        "category": "Build",
        "groups": [
          {
            "name": "Group1",
            "displayName": "Group 1",
            "isExpanded": true
          }
        ],
        "demands": [
          "demand1"
        ],
        "minimumAgentVersion": "1.2.3",
        "version": {
          "Major": 1,
          "Minor": 2,
          "Patch": 3
        },
        "instanceNameFormat": "Instance name format",
        "inputs": [
          {
            "name": "input1",
            "label": "Input 1",
            "type": "string"
          }
        ],
        "dataSourceBindings": [
          {
            "target": "target1",
            "endpointId": "endpoint1",
            "dataSourceName": "dataSource1"
          }
        ],
        "sourceDefinitions": [
          {
            "target": "target1",
            "endpoint": "endpoint1",
            "selector": "selector1"
          }
        ],
        "prejobexecution": {
          "Node10": {
            "target": "target1"
          }
        },
        "execution": {
          "Node10": {
            "target": "target1"
          }
        },
        "postjobexecution": {
          "Node10": {
            "target": "target1"
          }
        },
        "messages": {
          "message1": "Message 1"
        },
        "OutputVariables": [
          {
            "name": "output1",
            "description": "Output 1"
          }
        ],
        "$schema": "http://json-schema.org/draft-04/schema#"
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "Additional properties are not allowed ('additionalProperty' was unexpected)",
      "python_error": "Additional properties are not allowed ('additionalProperty' was unexpected)\n\nFailed validating 'additionalProperties' in schema:\n    {'$schema': 'http://json-schema.org/draft-04/schema',\n     'id': 'https://raw.githubusercontent.com/Microsoft/azure-pipelines-task-lib/master/tasks.schema.json',\n     'title': 'Azure DevOps Tasks schema',\n     'type': 'object',\n     'additionalProperties': False,\n     'properties': {'id': {'type': 'string',\n                           'description': 'A unique guid for this task',\n                           'pattern': '^[A-Fa-f0-9]{8}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{12}$'},\n                    'name': {'type': 'string',\n                             'description': 'Name with no spaces',\n                             'pattern': '^[A-Za-z0-9\\\\-]+$'},\n                    'friendlyName': {'type': 'string',\n                                     'description': 'Descriptive name '\n                                                    '(spaces allowed). '\n             .. (29870 more)",
      "data": {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "additionalProperty": "value"
      }
    },
    {
      "description": "llama-70b generated negative; focus on pattern keyword",
      "valid": false,
      "rust_error": "\"1234567890\" does not match \"^[A-Fa-f0-9]{8}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{12}$\"",
      "python_error": "'1234567890' does not match '^[A-Fa-f0-9]{8}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{12}$'\n\nFailed validating 'pattern' in schema['properties']['id']:\n    {'type': 'string',\n     'description': 'A unique guid for this task',\n     'pattern': '^[A-Fa-f0-9]{8}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{12}$'}\n\nOn instance['id']:\n    '1234567890'",
      "data": {
        "id": "1234567890",
        "$schema": "http://json-schema.org/draft-04/schema#"
      }
    },
    {
      "description": "llama-70b generated negative; focus on type keyword with an array of types",
      "valid": false,
      "rust_error": "\"1\" is not of type \"number\"",
      "python_error": "'three' is not of type 'number'\n\nFailed validating 'type' in schema['properties']['version']['properties']['Patch']:\n    {'type': 'number'}\n\nOn instance['version']['Patch']:\n    'three'",
      "data": {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "version": {
          "Major": "1",
          "Minor": "2",
          "Patch": "three"
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on anyOf keyword",
      "valid": false,
      "rust_error": "\"invalidType\" is not valid under any of the schemas listed in the 'anyOf' keyword",
      "python_error": "'invalidType' does not match '^connectedService\\\\:.+$'\n\nFailed validating 'pattern' in schema[1]:\n    {'type': 'string', 'pattern': '^connectedService\\\\:.+$'}\n\nOn instance:\n    'invalidType'",
      "data": {
        "inputs": [
          {
            "name": "test",
            "label": "Test",
            "type": "invalidType"
          }
        ],
        "$schema": "http://json-schema.org/draft-04/schema#"
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"1234567890-1234-1234-1234-123456789012\" does not match \"^[A-Fa-f0-9]{8}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{12}$\"",
      "python_error": "'My Task' does not match '^[A-Za-z0-9\\\\-]+$'\n\nFailed validating 'pattern' in schema['properties']['name']:\n    {'type': 'string',\n     'description': 'Name with no spaces',\n     'pattern': '^[A-Za-z0-9\\\\-]+$'}\n\nOn instance['name']:\n    'My Task'",
      "data": {
        "id": "1234567890-1234-1234-1234-123456789012",
        "name": "My Task",
        "friendlyName": "This is a friendly name",
        "description": "This is a description",
        "helpUrl": "https://example.com",
        "helpMarkDown": "This is help markdown",
        "author": "John Doe",
        "preview": true,
        "deprecated": false,
        "showEnvironmentVariables": true,
        "runsOn": [
          "Agent"
        ],
        "visibility": [
          "Build"
        ],
        "category": "Build",
        "groups": [
          {
            "name": "group1",
            "displayName": "Group 1",
            "isExpanded": true
          }
        ],
        "demands": [
          "demand1"
        ],
        "minimumAgentVersion": "1.0.0",
        "version": {
          "Major": 1,
          "Minor": 0,
          "Patch": 0
        },
        "instanceNameFormat": "Task $(variableName)",
        "inputs": [
          {
            "name": "input1",
            "label": "Input 1",
            "type": "string",
            "defaultValue": "default value",
            "required": true,
            "helpMarkDown": "This is help markdown for input 1",
            "groupName": "group1",
            "visibleRule": "variableName = value"
          }
        ],
        "dataSourceBindings": [
          {
            "target": "target1",
            "endpointId": "endpointId1",
            "dataSourceName": "dataSourceName1",
            "parameters": {},
            "resultTemplate": "resultTemplate1",
            "endpointUrl": "endpointUrl1",
            "resultSelector": "resultSelector1"
          }
        ],
        "sourceDefinitions": [
          {
            "target": "target1",
            "endpoint": "endpoint1",
            "selector": "selector1",
            "keySelector": "keySelector1",
            "authKey": "authKey1"
          }
        ],
        "prejobexecution": {
          "Node10": {
            "target": "$(currentDirectory)\\filename.ps1",
            "platforms": [
              "windows"
            ]
          }
        },
        "execution": {
          "Node10": {
            "target": "$(currentDirectory)\\filename.ps1",
            "platforms": [
              "windows"
            ]
          }
        },
        "postjobexecution": {
          "Node10": {
            "target": "$(currentDirectory)\\filename.ps1",
            "platforms": [
              "windows"
            ]
          }
        },
        "messages": {},
        "OutputVariables": [
          {
            "name": "outputVariable1",
            "description": "This is a description of output variable 1"
          }
        ],
        "$schema": "http://json-schema.org/draft-04/schema#"
      }
    },
    {
      "description": "llama-70b generated negative; focus on pattern keyword",
      "valid": false,
      "rust_error": "\"Invalid-Id-Format\" does not match \"^[A-Fa-f0-9]{8}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{12}$\"",
      "python_error": "'Invalid Name With Spaces' does not match '^[A-Za-z0-9\\\\-]+$'\n\nFailed validating 'pattern' in schema['properties']['name']:\n    {'type': 'string',\n     'description': 'Name with no spaces',\n     'pattern': '^[A-Za-z0-9\\\\-]+$'}\n\nOn instance['name']:\n    'Invalid Name With Spaces'",
      "data": {
        "id": "Invalid-Id-Format",
        "name": "Invalid Name With Spaces",
        "friendlyName": "A very long friendly name that is more than 40 characters long and will cause the schema to fail",
        "description": "Detailed description of what your task does",
        "helpUrl": "https://helpurl.com",
        "helpMarkDown": "# Help Markdown",
        "author": "Author Name",
        "preview": true,
        "deprecated": true,
        "showEnvironmentVariables": false,
        "runsOn": [
          "InvalidOption"
        ],
        "visibility": [
          "InvalidOption"
        ],
        "category": "InvalidCategory",
        "groups": [
          {
            "name": "GroupName",
            "displayName": "Display Name",
            "isExpanded": true
          }
        ],
        "demands": [
          "InvalidDemand"
        ],
        "minimumAgentVersion": "InvalidVersionFormat",
        "version": {
          "Major": 1,
          "Minor": 2,
          "Patch": 3
        },
        "instanceNameFormat": "Instance Name Format",
        "inputs": [
          {
            "name": "Invalid-Input-Name",
            "label": "Input Label",
            "type": "string"
          }
        ],
        "dataSourceBindings": [],
        "sourceDefinitions": [],
        "prejobexecution": {
          "Node10": {
            "target": "Target File",
            "platforms": [
              "windows"
            ]
          }
        },
        "execution": {
          "PowerShell": {
            "target": "Target File",
            "platforms": [
              "windows"
            ]
          }
        },
        "postjobexecution": {
          "PowerShell3": {
            "target": "Target File",
            "platforms": [
              "windows"
            ]
          }
        },
        "messages": {},
        "OutputVariables": [
          {
            "name": "Invalid-Output-Variable-Name",
            "description": "Output Variable Description"
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on type keyword with an array of types",
      "valid": false,
      "rust_error": "[\"boolean\",1] is not of type \"string\"",
      "python_error": "['boolean', 1] is not of type 'string'\n\nFailed validating 'type' in schema['properties']['inputs']['items']['properties']['type']:\n    {'type': 'string',\n     'description': 'The type that dictates the control rendered to the '\n                    'user.',\n     'anyOf': [{'enum': ['boolean',\n                         'filePath',\n                         'multiLine',\n                         'pickList',\n                         'radio',\n                         'secureFile',\n                         'string']},\n               {'type': 'string', 'pattern': '^connectedService\\\\:.+$'}]}\n\nOn instance['inputs'][0]['type']:\n    ['boolean', 1]",
      "data": {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "inputs": [
          {
            "name": "test",
            "label": "test",
            "type": [
              "boolean",
              1
            ]
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "123 is not of type \"string\"",
      "python_error": "123 is not of type 'string'\n\nFailed validating 'type' in schema['properties']['id']:\n    {'type': 'string',\n     'description': 'A unique guid for this task',\n     'pattern': '^[A-Fa-f0-9]{8}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{12}$'}\n\nOn instance['id']:\n    123",
      "data": {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "id": 123
      }
    }
  ]
}