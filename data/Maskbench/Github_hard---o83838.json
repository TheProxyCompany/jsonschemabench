{
  "description": "sample Github_hard/o83838.json",
  "meta": {
    "full_size": 8323,
    "stripped_size": 8002,
    "features": [
      "$ref",
      "@minmaxInteger",
      "@siblingKeys",
      "additionalProperties",
      "anyOf",
      "dependencies",
      "enum",
      "format",
      "format:expose",
      "format:ports",
      "items",
      "oneOf",
      "patternProperties"
    ],
    "raw_features": [
      "_boolSchema",
      "definitions",
      "id",
      "maximum",
      "minimum",
      "properties",
      "required",
      "type",
      "type:[]",
      "type:array",
      "type:boolean",
      "type:integer",
      "type:null",
      "type:number",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "additionalProperties": false,
    "definitions": {
      "blkio_limit": {
        "additionalProperties": false,
        "properties": {
          "path": {
            "type": "string"
          },
          "rate": {
            "type": [
              "integer",
              "string"
            ]
          }
        },
        "type": "object"
      },
      "blkio_weight": {
        "additionalProperties": false,
        "properties": {
          "path": {
            "type": "string"
          },
          "weight": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "constraints": {
        "service": {
          "anyOf": [
            {
              "required": [
                "build"
              ]
            },
            {
              "required": [
                "image"
              ]
            }
          ],
          "id": "#/definitions/constraints/service",
          "properties": {
            "build": {
              "required": [
                "context"
              ]
            }
          }
        }
      },
      "healthcheck": {
        "additionalProperties": false,
        "id": "#/definitions/healthcheck",
        "properties": {
          "disable": {
            "type": "boolean"
          },
          "interval": {
            "type": "string"
          },
          "retries": {
            "type": "number"
          },
          "test": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              }
            ]
          },
          "timeout": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ipam_config": {
        "additionalProperties": false,
        "id": "#/definitions/ipam_config",
        "properties": {
          "aux_addresses": {
            "additionalProperties": false,
            "patternProperties": {
              "^.+$": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "gateway": {
            "type": "string"
          },
          "ip_range": {
            "type": "string"
          },
          "subnet": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "labels": {
        "oneOf": [
          {
            "additionalProperties": false,
            "patternProperties": {
              ".+": {
                "type": "string"
              }
            },
            "type": "object"
          },
          {
            "items": {
              "type": "string"
            },
            "type": "array",
            "_uniqueItems": true
          }
        ]
      },
      "list_of_strings": {
        "items": {
          "type": "string"
        },
        "type": "array",
        "_uniqueItems": true
      },
      "list_or_dict": {
        "oneOf": [
          {
            "additionalProperties": false,
            "patternProperties": {
              ".+": {
                "type": [
                  "string",
                  "number",
                  "null"
                ]
              }
            },
            "type": "object"
          },
          {
            "items": {
              "type": "string"
            },
            "type": "array",
            "_uniqueItems": true
          }
        ]
      },
      "network": {
        "additionalProperties": false,
        "id": "#/definitions/network",
        "properties": {
          "driver": {
            "type": "string"
          },
          "driver_opts": {
            "patternProperties": {
              "^.+$": {
                "type": [
                  "string",
                  "number"
                ]
              }
            },
            "type": "object"
          },
          "enable_ipv6": {
            "type": "boolean"
          },
          "external": {
            "additionalProperties": false,
            "properties": {
              "name": {
                "type": "string"
              }
            },
            "type": [
              "boolean",
              "object"
            ]
          },
          "internal": {
            "type": "boolean"
          },
          "ipam": {
            "additionalProperties": false,
            "properties": {
              "config": {
                "items": {
                  "$ref": "#/definitions/ipam_config"
                },
                "type": "array"
              },
              "driver": {
                "type": "string"
              },
              "options": {
                "additionalProperties": false,
                "patternProperties": {
                  "^.+$": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "labels": {
            "$ref": "#/definitions/labels"
          },
          "name": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "service": {
        "additionalProperties": false,
        "dependencies": {
          "memswap_limit": [
            "mem_limit"
          ]
        },
        "id": "#/definitions/service",
        "properties": {
          "blkio_config": {
            "additionalProperties": false,
            "properties": {
              "device_read_bps": {
                "items": {
                  "$ref": "#/definitions/blkio_limit"
                },
                "type": "array"
              },
              "device_read_iops": {
                "items": {
                  "$ref": "#/definitions/blkio_limit"
                },
                "type": "array"
              },
              "device_write_bps": {
                "items": {
                  "$ref": "#/definitions/blkio_limit"
                },
                "type": "array"
              },
              "device_write_iops": {
                "items": {
                  "$ref": "#/definitions/blkio_limit"
                },
                "type": "array"
              },
              "weight": {
                "type": "integer"
              },
              "weight_device": {
                "items": {
                  "$ref": "#/definitions/blkio_weight"
                },
                "type": "array"
              }
            },
            "type": "object"
          },
          "build": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "additionalProperties": false,
                "properties": {
                  "args": {
                    "$ref": "#/definitions/list_or_dict"
                  },
                  "context": {
                    "type": "string"
                  },
                  "dockerfile": {
                    "type": "string"
                  },
                  "isolation": {
                    "type": "string"
                  },
                  "labels": {
                    "$ref": "#/definitions/labels"
                  }
                },
                "type": "object"
              }
            ]
          },
          "cap_add": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "_uniqueItems": true
          },
          "cap_drop": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "_uniqueItems": true
          },
          "cgroup_parent": {
            "type": "string"
          },
          "command": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              }
            ]
          },
          "container_name": {
            "type": "string"
          },
          "cpu_period": {
            "type": [
              "number",
              "string"
            ]
          },
          "cpu_quota": {
            "type": [
              "number",
              "string"
            ]
          },
          "cpu_shares": {
            "type": [
              "number",
              "string"
            ]
          },
          "cpuset": {
            "type": "string"
          },
          "depends_on": {
            "oneOf": [
              {
                "$ref": "#/definitions/list_of_strings"
              },
              {
                "additionalProperties": false,
                "patternProperties": {
                  "^[a-zA-Z0-9._-]+$": {
                    "additionalProperties": false,
                    "properties": {
                      "condition": {
                        "enum": [
                          "service_started",
                          "service_healthy"
                        ],
                        "type": "string"
                      }
                    },
                    "required": [
                      "condition"
                    ],
                    "type": "object"
                  }
                },
                "type": "object"
              }
            ]
          },
          "devices": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "_uniqueItems": true
          },
          "dns": {
            "$ref": "#/definitions/string_or_list"
          },
          "dns_opt": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "_uniqueItems": true
          },
          "dns_search": {
            "$ref": "#/definitions/string_or_list"
          },
          "domainname": {
            "type": "string"
          },
          "entrypoint": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              }
            ]
          },
          "env_file": {
            "$ref": "#/definitions/string_or_list"
          },
          "environment": {
            "$ref": "#/definitions/list_or_dict"
          },
          "expose": {
            "items": {
              "format": "expose",
              "type": [
                "string",
                "number"
              ]
            },
            "type": "array",
            "_uniqueItems": true
          },
          "extends": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "additionalProperties": false,
                "properties": {
                  "file": {
                    "type": "string"
                  },
                  "service": {
                    "type": "string"
                  }
                },
                "required": [
                  "service"
                ],
                "type": "object"
              }
            ]
          },
          "external_links": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "_uniqueItems": true
          },
          "extra_hosts": {
            "$ref": "#/definitions/list_or_dict"
          },
          "group_add": {
            "items": {
              "type": [
                "string",
                "number"
              ]
            },
            "type": "array",
            "_uniqueItems": true
          },
          "healthcheck": {
            "$ref": "#/definitions/healthcheck"
          },
          "hostname": {
            "type": "string"
          },
          "image": {
            "type": "string"
          },
          "ipc": {
            "type": "string"
          },
          "isolation": {
            "type": "string"
          },
          "labels": {
            "$ref": "#/definitions/labels"
          },
          "links": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "_uniqueItems": true
          },
          "logging": {
            "additionalProperties": false,
            "properties": {
              "driver": {
                "type": "string"
              },
              "options": {
                "type": "object"
              }
            },
            "type": "object"
          },
          "mac_address": {
            "type": "string"
          },
          "mem_limit": {
            "type": [
              "number",
              "string"
            ]
          },
          "mem_reservation": {
            "type": [
              "string",
              "integer"
            ]
          },
          "mem_swappiness": {
            "type": "integer"
          },
          "memswap_limit": {
            "type": [
              "number",
              "string"
            ]
          },
          "network_mode": {
            "type": "string"
          },
          "networks": {
            "oneOf": [
              {
                "$ref": "#/definitions/list_of_strings"
              },
              {
                "additionalProperties": false,
                "patternProperties": {
                  "^[a-zA-Z0-9._-]+$": {
                    "oneOf": [
                      {
                        "additionalProperties": false,
                        "properties": {
                          "aliases": {
                            "$ref": "#/definitions/list_of_strings"
                          },
                          "ipv4_address": {
                            "type": "string"
                          },
                          "ipv6_address": {
                            "type": "string"
                          },
                          "link_local_ips": {
                            "$ref": "#/definitions/list_of_strings"
                          },
                          "priority": {
                            "type": "number"
                          }
                        },
                        "type": "object"
                      },
                      {
                        "type": "null"
                      }
                    ]
                  }
                },
                "type": "object"
              }
            ]
          },
          "oom_kill_disable": {
            "type": "boolean"
          },
          "oom_score_adj": {
            "maximum": 1000,
            "minimum": -1000,
            "type": "integer"
          },
          "pid": {
            "type": [
              "string",
              "null"
            ]
          },
          "pids_limit": {
            "type": [
              "number",
              "string"
            ]
          },
          "ports": {
            "items": {
              "format": "ports",
              "type": [
                "string",
                "number"
              ]
            },
            "type": "array",
            "_uniqueItems": true
          },
          "privileged": {
            "type": "boolean"
          },
          "read_only": {
            "type": "boolean"
          },
          "restart": {
            "type": "string"
          },
          "security_opt": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "_uniqueItems": true
          },
          "shm_size": {
            "type": [
              "number",
              "string"
            ]
          },
          "stdin_open": {
            "type": "boolean"
          },
          "stop_grace_period": {
            "_format": "duration",
            "type": "string"
          },
          "stop_signal": {
            "type": "string"
          },
          "storage_opt": {
            "type": "object"
          },
          "sysctls": {
            "$ref": "#/definitions/list_or_dict"
          },
          "tmpfs": {
            "$ref": "#/definitions/string_or_list"
          },
          "tty": {
            "type": "boolean"
          },
          "ulimits": {
            "patternProperties": {
              "^[a-z]+$": {
                "oneOf": [
                  {
                    "type": "integer"
                  },
                  {
                    "additionalProperties": false,
                    "properties": {
                      "hard": {
                        "type": "integer"
                      },
                      "soft": {
                        "type": "integer"
                      }
                    },
                    "required": [
                      "soft",
                      "hard"
                    ],
                    "type": "object"
                  }
                ]
              }
            },
            "type": "object"
          },
          "user": {
            "type": "string"
          },
          "userns_mode": {
            "type": "string"
          },
          "volume_driver": {
            "type": "string"
          },
          "volumes": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "_uniqueItems": true
          },
          "volumes_from": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "_uniqueItems": true
          },
          "working_dir": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "string_or_list": {
        "oneOf": [
          {
            "type": "string"
          },
          {
            "$ref": "#/definitions/list_of_strings"
          }
        ]
      },
      "volume": {
        "additionalProperties": false,
        "id": "#/definitions/volume",
        "properties": {
          "driver": {
            "type": "string"
          },
          "driver_opts": {
            "patternProperties": {
              "^.+$": {
                "type": [
                  "string",
                  "number"
                ]
              }
            },
            "type": "object"
          },
          "external": {
            "additionalProperties": false,
            "properties": {
              "name": {
                "type": "string"
              }
            },
            "type": [
              "boolean",
              "object"
            ]
          },
          "labels": {
            "$ref": "#/definitions/labels"
          },
          "name": {
            "type": "string"
          }
        },
        "type": [
          "object",
          "null"
        ]
      }
    },
    "patternProperties": {
      "^x-": {}
    },
    "properties": {
      "networks": {
        "id": "#/properties/networks",
        "patternProperties": {
          "^[a-zA-Z0-9._-]+$": {
            "$ref": "#/definitions/network"
          }
        },
        "type": "object"
      },
      "services": {
        "additionalProperties": false,
        "id": "#/properties/services",
        "patternProperties": {
          "^[a-zA-Z0-9._-]+$": {
            "$ref": "#/definitions/service"
          }
        },
        "type": "object"
      },
      "version": {
        "type": "string"
      },
      "volumes": {
        "additionalProperties": false,
        "id": "#/properties/volumes",
        "patternProperties": {
          "^[a-zA-Z0-9._-]+$": {
            "$ref": "#/definitions/volume"
          }
        },
        "type": "object"
      }
    },
    "type": "object"
  },
  "tests": [
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "version": "3.8",
        "services": {
          "web": {
            "image": "nginx:latest",
            "ports": [
              "80:80"
            ],
            "depends_on": [
              "db"
            ],
            "environment": {
              "DB_HOST": "db"
            }
          },
          "db": {
            "image": "postgres:latest",
            "environment": {
              "POSTGRES_USER": "user",
              "POSTGRES_PASSWORD": "password"
            }
          }
        },
        "networks": {
          "default": {
            "driver": "bridge"
          }
        },
        "volumes": {
          "db-data": {
            "driver": "local"
          }
        }
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "version": "3",
        "services": {
          "web": {
            "image": "nginx:latest",
            "ports": [
              "80:80"
            ],
            "depends_on": [
              "db"
            ],
            "environment": [
              "DB_HOST=db"
            ],
            "networks": [
              "app-network"
            ]
          },
          "db": {
            "image": "postgres:latest",
            "volumes": [
              "db-data:/var/lib/postgresql/data"
            ],
            "environment": [
              "POSTGRES_USER=user",
              "POSTGRES_PASSWORD=password"
            ],
            "networks": [
              "app-network"
            ]
          }
        },
        "networks": {
          "app-network": {
            "driver": "bridge"
          }
        },
        "volumes": {
          "db-data": {}
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on oneOf keyword",
      "valid": false,
      "rust_error": "{\"db\":{\"condition\":\"service_done\",\"timeout\":\"10s\"}} is not valid under any of the schemas listed in the 'oneOf' keyword",
      "python_error": "'service_done' is not one of ['service_started', 'service_healthy']\n\nFailed validating 'enum' in schema[1]['patternProperties']['^[a-zA-Z0-9._-]+$']['properties']['condition']:\n    {'enum': ['service_started', 'service_healthy'], 'type': 'string'}\n\nOn instance['db']['condition']:\n    'service_done'",
      "data": {
        "version": "3",
        "services": {
          "web": {
            "image": "nginx:latest",
            "ports": [
              "80:80"
            ],
            "depends_on": {
              "db": {
                "condition": "service_done",
                "timeout": "10s"
              }
            },
            "environment": [
              "DB_HOST=db"
            ],
            "networks": [
              "app-network"
            ]
          },
          "db": {
            "image": "postgres:latest",
            "volumes": [
              "db-data:/var/lib/postgresql/data"
            ],
            "environment": [
              "POSTGRES_USER=user",
              "POSTGRES_PASSWORD=password"
            ],
            "networks": [
              "app-network"
            ]
          }
        },
        "networks": {
          "app-network": {
            "driver": "bridge"
          }
        },
        "volumes": {
          "db-data": {}
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on minimum keyword or maximum keyword",
      "valid": false,
      "rust_error": "1001 is greater than the maximum of 1000",
      "python_error": "1001 is greater than the maximum of 1000\n\nFailed validating 'maximum' in schema['properties']['services']['patternProperties']['^[a-zA-Z0-9._-]+$']['properties']['oom_score_adj']:\n    {'maximum': 1000, 'minimum': -1000, 'type': 'integer'}\n\nOn instance['services']['web']['oom_score_adj']:\n    1001",
      "data": {
        "version": "3",
        "services": {
          "web": {
            "image": "nginx:latest",
            "ports": [
              "80:80"
            ],
            "depends_on": [
              "db"
            ],
            "environment": [
              "DB_HOST=db"
            ],
            "networks": [
              "app-network"
            ],
            "oom_score_adj": 1001
          },
          "db": {
            "image": "postgres:latest",
            "volumes": [
              "db-data:/var/lib/postgresql/data"
            ],
            "environment": [
              "POSTGRES_USER=user",
              "POSTGRES_PASSWORD=password"
            ],
            "networks": [
              "app-network"
            ]
          }
        },
        "networks": {
          "app-network": {
            "driver": "bridge"
          }
        },
        "volumes": {
          "db-data": {}
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on patternProperties keyword",
      "valid": false,
      "rust_error": "Additional properties are not allowed (' invalid_service_name!@#$' was unexpected)",
      "python_error": "' invalid_service_name!@#$' does not match any of the regexes: '^[a-zA-Z0-9._-]+$'\n\nFailed validating 'additionalProperties' in schema['properties']['services']:\n    {'additionalProperties': False,\n     'id': '#/properties/services',\n     'patternProperties': {'^[a-zA-Z0-9._-]+$': {'$ref': '#/definitions/service'}},\n     'type': 'object'}\n\nOn instance['services']:\n    {'web': {'image': 'nginx:latest',\n             'ports': ['80:80'],\n             'depends_on': ['db'],\n             'environment': ['DB_HOST=db'],\n             'networks': ['app-network']},\n     'db': {'image': 'postgres:latest',\n            'volumes': ['db-data:/var/lib/postgresql/data'],\n            'environment': ['POSTGRES_USER=user',\n                            'POSTGRES_PASSWORD=password'],\n            'networks': ['app-network']},\n     ' invalid_service_name!@#$': {'image': 'postgres:latest',\n                                   'volumes': ['db-data:/var/lib/postgresql/data'],\n                                   'environment': ['POSTGRES_USER.. (154 more)",
      "data": {
        "version": "3",
        "services": {
          "web": {
            "image": "nginx:latest",
            "ports": [
              "80:80"
            ],
            "depends_on": [
              "db"
            ],
            "environment": [
              "DB_HOST=db"
            ],
            "networks": [
              "app-network"
            ]
          },
          "db": {
            "image": "postgres:latest",
            "volumes": [
              "db-data:/var/lib/postgresql/data"
            ],
            "environment": [
              "POSTGRES_USER=user",
              "POSTGRES_PASSWORD=password"
            ],
            "networks": [
              "app-network"
            ]
          },
          " invalid_service_name!@#$": {
            "image": "postgres:latest",
            "volumes": [
              "db-data:/var/lib/postgresql/data"
            ],
            "environment": [
              "POSTGRES_USER=user",
              "POSTGRES_PASSWORD=password"
            ],
            "networks": [
              "app-network"
            ]
          }
        },
        "networks": {
          "app-network": {
            "driver": "bridge"
          }
        },
        "volumes": {
          "db-data": {}
        }
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"80:80\" is not of type \"array\"",
      "python_error": "'80:80' is not of type 'array'\n\nFailed validating 'type' in schema['properties']['services']['patternProperties']['^[a-zA-Z0-9._-]+$']['properties']['ports']:\n    {'items': {'format': 'ports', 'type': ['string', 'number']},\n     'type': 'array',\n     '_uniqueItems': True}\n\nOn instance['services']['db']['ports']:\n    '80:80'",
      "data": {
        "version": "3",
        "services": {
          "web": {
            "image": "nginx:latest",
            "ports": [
              "80"
            ],
            "depends_on": [
              "db"
            ],
            "environment": [
              "DB_HOST=db"
            ],
            "networks": [
              "app-network"
            ]
          },
          "db": {
            "build": {
              "context": "invalid"
            },
            "ports": "80:80",
            "volumes": [
              "db-data:/var/lib/postgresql/data"
            ],
            "environment": [
              "POSTGRES_USER=user",
              "POSTGRES_PASSWORD=password"
            ],
            "networks": [
              "app-network"
            ]
          }
        },
        "networks": {
          "app-network": {
            "driver": "bridge"
          }
        },
        "volumes": {
          "db-data": {}
        }
      }
    }
  ]
}