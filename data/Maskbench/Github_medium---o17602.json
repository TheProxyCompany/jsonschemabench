{
  "description": "sample Github_medium/o17602.json",
  "meta": {
    "full_size": 1220,
    "stripped_size": 975,
    "features": [
      "@minmaxNumber",
      "pattern"
    ],
    "raw_features": [
      "$schema",
      "minimum",
      "properties",
      "required",
      "type",
      "type:number",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "properties": {
      "booleanAnnotationDefaultValue": {
        "hide": true,
        "type": "string"
      },
      "booleanAnnotationWithFalse": {
        "hide": false,
        "type": "string"
      },
      "booleanAnnotationWithTrue": {
        "hide": true,
        "type": "string"
      },
      "dateTime": {
        "_format": "date-time",
        "type": "string"
      },
      "email": {
        "_format": "email",
        "type": "string"
      },
      "examples": {
        "examples": [
          "foo",
          1
        ],
        "type": "string"
      },
      "hostname": {
        "_format": "hostname",
        "type": "string"
      },
      "ipv4": {
        "_format": "ipv4",
        "type": "string"
      },
      "ipv6": {
        "_format": "ipv6",
        "type": "string"
      },
      "jsonPointer": {
        "_format": "json-pointer",
        "type": "string"
      },
      "oneCharacter": {
        "minimum": 5,
        "type": "number"
      },
      "regexPattern": {
        "pattern": "^[a-zA-Z0-9]{4}-abc_123$",
        "type": "string"
      },
      "regexPatternWithWhitespace": {
        "pattern": "^[a-zA-Z0-9]{4}-abc_123$",
        "type": "string"
      },
      "uri": {
        "_format": "uri",
        "type": "string"
      },
      "uriReference": {
        "_format": "uri-reference",
        "type": "string"
      },
      "uriTemplate": {
        "_format": "uri-template",
        "type": "string"
      }
    },
    "required": [
      "booleanAnnotationDefaultValue",
      "booleanAnnotationWithFalse",
      "booleanAnnotationWithTrue",
      "dateTime",
      "email",
      "examples",
      "hostname",
      "ipv4",
      "ipv6",
      "jsonPointer",
      "oneCharacter",
      "regexPattern",
      "regexPatternWithWhitespace",
      "uri",
      "uriReference",
      "uriTemplate"
    ],
    "type": "object"
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "booleanAnnotationDefaultValue": "string",
        "booleanAnnotationWithFalse": "string",
        "booleanAnnotationWithTrue": "string",
        "dateTime": "2022-01-01T00:00:00Z",
        "email": "example@example.com",
        "examples": "foo",
        "hostname": "example.com",
        "ipv4": "192.168.1.1",
        "ipv6": "2001:0db8:85a3:0000:0000:8a2e:0370:7334",
        "jsonPointer": "/path/to/resource",
        "oneCharacter": 5,
        "regexPattern": "1234-abc_123",
        "regexPatternWithWhitespace": "1234-abc_123",
        "uri": "https://example.com",
        "uriReference": "https://example.com/path/to/resource",
        "uriTemplate": "https://example.com/{path}"
      }
    },
    {
      "description": "llama-70b generated negative; focus on pattern keyword",
      "valid": false,
      "rust_error": "\"123-abc_123\" does not match \"^[a-zA-Z0-9]{4}-abc_123$\"",
      "python_error": "'123-abc_123' does not match '^[a-zA-Z0-9]{4}-abc_123$'\n\nFailed validating 'pattern' in schema['properties']['regexPattern']:\n    {'pattern': '^[a-zA-Z0-9]{4}-abc_123$', 'type': 'string'}\n\nOn instance['regexPattern']:\n    '123-abc_123'",
      "data": {
        "booleanAnnotationDefaultValue": "string",
        "booleanAnnotationWithFalse": "string",
        "booleanAnnotationWithTrue": "string",
        "dateTime": "2022-01-01T00:00:00Z",
        "email": "example@example.com",
        "examples": "foo",
        "hostname": "example.com",
        "ipv4": "192.168.1.1",
        "ipv6": "2001:0db8:85a3:0000:0000:8a2e:0370:7334",
        "jsonPointer": "/path/to/resource",
        "oneCharacter": 5,
        "regexPattern": "123-abc_123",
        "regexPatternWithWhitespace": "1234-abc_123",
        "uri": "https://example.com",
        "uriReference": "https://example.com/path/to/resource",
        "uriTemplate": "https://example.com/{path}"
      }
    },
    {
      "description": "llama-70b generated negative; focus on minimum keyword",
      "valid": false,
      "rust_error": "4 is less than the minimum of 5",
      "python_error": "4 is less than the minimum of 5\n\nFailed validating 'minimum' in schema['properties']['oneCharacter']:\n    {'minimum': 5, 'type': 'number'}\n\nOn instance['oneCharacter']:\n    4",
      "data": {
        "booleanAnnotationDefaultValue": "string",
        "booleanAnnotationWithFalse": "string",
        "booleanAnnotationWithTrue": "string",
        "dateTime": "2022-01-01T00:00:00Z",
        "email": "example@example.com",
        "examples": "foo",
        "hostname": "example.com",
        "ipv4": "192.168.1.1",
        "ipv6": "2001:0db8:85a3:0000:0000:8a2e:0370:7334",
        "jsonPointer": "/path/to/resource",
        "oneCharacter": 4,
        "regexPattern": "1234-abc_123",
        "regexPatternWithWhitespace": "1234-abc_123",
        "uri": "https://example.com",
        "uriReference": "https://example.com/path/to/resource",
        "uriTemplate": "https://example.com/{path}"
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "4 is less than the minimum of 5",
      "python_error": "'email' is a required property\n\nFailed validating 'required' in schema:\n    {'$schema': 'http://json-schema.org/draft-07/schema#',\n     'properties': {'booleanAnnotationDefaultValue': {'hide': True,\n                                                      'type': 'string'},\n                    'booleanAnnotationWithFalse': {'hide': False,\n                                                   'type': 'string'},\n                    'booleanAnnotationWithTrue': {'hide': True,\n                                                  'type': 'string'},\n                    'dateTime': {'_format': 'date-time', 'type': 'string'},\n                    'email': {'_format': 'email', 'type': 'string'},\n                    'examples': {'examples': ['foo', 1], 'type': 'string'},\n                    'hostname': {'_format': 'hostname', 'type': 'string'},\n                    'ipv4': {'_format': 'ipv4', 'type': 'string'},\n                    'ipv6': {'_format': 'ipv6', 'type': 'string'},\n                    'jsonPointer': {'_format': 'json-.. (2006 more)",
      "data": {
        "booleanAnnotationDefaultValue": "string",
        "booleanAnnotationWithFalse": "string",
        "booleanAnnotationWithTrue": "string",
        "dateTime": "2022-01-01T00:00:00",
        "Invalid date-time format": "email",
        "examples": "foo",
        "hostname": "example.com",
        "ipv4": "192.168.1.1",
        "ipv6": "2001:0db8:85a3:0000:0000:8a2e:0370:7334",
        "jsonPointer": "/path/to/resource",
        "oneCharacter": 4,
        "Value is less than the minimum of 5": "regexPattern",
        "regexPatternWithWhitespace": "1234-abc_123",
        "uri": "https://example.com",
        "uriReference": "https://example.com/path/to/resource",
        "uriTemplate": "https://example.com/{path}"
      }
    },
    {
      "description": "llama-70b generated negative; focus on pattern keyword",
      "valid": false,
      "rust_error": "\"1234-abc_12\" does not match \"^[a-zA-Z0-9]{4}-abc_123$\"",
      "python_error": "'1234-abc_12' does not match '^[a-zA-Z0-9]{4}-abc_123$'\n\nFailed validating 'pattern' in schema['properties']['regexPattern']:\n    {'pattern': '^[a-zA-Z0-9]{4}-abc_123$', 'type': 'string'}\n\nOn instance['regexPattern']:\n    '1234-abc_12'",
      "data": {
        "booleanAnnotationDefaultValue": "string",
        "booleanAnnotationWithFalse": "string",
        "booleanAnnotationWithTrue": "string",
        "dateTime": "2022-01-01T00:00:00Z",
        "email": "example@example.com",
        "examples": "foo",
        "hostname": "example.com",
        "ipv4": "192.168.1.1",
        "ipv6": "2001:0db8:85a3:0000:0000:8a2e:0370:7334",
        "jsonPointer": "/path/to/resource",
        "oneCharacter": 5,
        "regexPattern": "1234-abc_12",
        "regexPatternWithWhitespace": "1234-abc_123",
        "uri": "https://example.com",
        "uriReference": "https://example.com/path/to/resource",
        "uriTemplate": "https://example.com/{path}"
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "4 is less than the minimum of 5",
      "python_error": "'email' is a required property\n\nFailed validating 'required' in schema:\n    {'$schema': 'http://json-schema.org/draft-07/schema#',\n     'properties': {'booleanAnnotationDefaultValue': {'hide': True,\n                                                      'type': 'string'},\n                    'booleanAnnotationWithFalse': {'hide': False,\n                                                   'type': 'string'},\n                    'booleanAnnotationWithTrue': {'hide': True,\n                                                  'type': 'string'},\n                    'dateTime': {'_format': 'date-time', 'type': 'string'},\n                    'email': {'_format': 'email', 'type': 'string'},\n                    'examples': {'examples': ['foo', 1], 'type': 'string'},\n                    'hostname': {'_format': 'hostname', 'type': 'string'},\n                    'ipv4': {'_format': 'ipv4', 'type': 'string'},\n                    'ipv6': {'_format': 'ipv6', 'type': 'string'},\n                    'jsonPointer': {'_format': 'json-.. (2020 more)",
      "data": {
        "booleanAnnotationDefaultValue": "string",
        "booleanAnnotationWithFalse": "string",
        "booleanAnnotationWithTrue": "string",
        "dateTime": "2022-01-01T00:00:00",
        "Invalid date-time format, missing 'Z' at the end": "email",
        "examples": "foo",
        "hostname": "example.com",
        "ipv4": "192.168.1.1",
        "ipv6": "2001:0db8:85a3:0000:0000:8a2e:0370:7334",
        "jsonPointer": "/path/to/resource",
        "oneCharacter": 4,
        "Minimum value should be 5": "regexPattern",
        "regexPatternWithWhitespace": "1234-abc_123",
        "uri": "https://example.com",
        "uriReference": "https://example.com/path/to/resource",
        "uriTemplate": "https://example.com/{path}"
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "booleanAnnotationDefaultValue": "default",
        "booleanAnnotationWithFalse": "false",
        "booleanAnnotationWithTrue": "true",
        "dateTime": "2022-01-01T12:00:00Z",
        "email": "example@example.com",
        "examples": "foo",
        "hostname": "example.com",
        "ipv4": "192.168.1.1",
        "ipv6": "2001:0db8:85a3:0000:0000:8a2e:0370:7334",
        "jsonPointer": "/path/to/resource",
        "oneCharacter": 5,
        "regexPattern": "1234-abc_123",
        "regexPatternWithWhitespace": "1234-abc_123",
        "uri": "https://example.com",
        "uriReference": "https://example.com/path/to/resource",
        "uriTemplate": "https://example.com/{path}"
      }
    },
    {
      "description": "llama-70b generated negative; focus on minimum keyword",
      "valid": false,
      "rust_error": "4 is less than the minimum of 5",
      "python_error": "4 is less than the minimum of 5\n\nFailed validating 'minimum' in schema['properties']['oneCharacter']:\n    {'minimum': 5, 'type': 'number'}\n\nOn instance['oneCharacter']:\n    4",
      "data": {
        "booleanAnnotationDefaultValue": "default",
        "booleanAnnotationWithFalse": "false",
        "booleanAnnotationWithTrue": "true",
        "dateTime": "2022-01-01T12:00:00Z",
        "email": "example@example.com",
        "examples": "foo",
        "hostname": "example.com",
        "ipv4": "192.168.1.1",
        "ipv6": "2001:0db8:85a3:0000:0000:8a2e:0370:7334",
        "jsonPointer": "/path/to/resource",
        "oneCharacter": 4,
        "regexPattern": "1234-abc_123",
        "regexPatternWithWhitespace": "1234-abc_123",
        "uri": "https://example.com",
        "uriReference": "https://example.com/path/to/resource",
        "uriTemplate": "https://example.com/{path}"
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "4 is less than the minimum of 5",
      "python_error": "'  1234-abc_123' does not match '^[a-zA-Z0-9]{4}-abc_123$'\n\nFailed validating 'pattern' in schema['properties']['regexPatternWithWhitespace']:\n    {'pattern': '^[a-zA-Z0-9]{4}-abc_123$', 'type': 'string'}\n\nOn instance['regexPatternWithWhitespace']:\n    '  1234-abc_123'",
      "data": {
        "booleanAnnotationDefaultValue": "default",
        "booleanAnnotationWithFalse": "false",
        "booleanAnnotationWithTrue": "true",
        "dateTime": "2022-01-01T12:00:00",
        "email": "example",
        "examples": "foo",
        "hostname": "example.com",
        "ipv4": "192.168.1.256",
        "ipv6": "2001:0db8:85a3:0000:0000:8a2e:0370:733g",
        "jsonPointer": "/path/to/resource",
        "oneCharacter": 4,
        "regexPattern": "123-abc_123",
        "regexPatternWithWhitespace": "  1234-abc_123",
        "uri": "https://",
        "uriReference": "https://",
        "uriTemplate": "https://example.com/{"
      }
    }
  ]
}