{
  "description": "sample Github_medium/o12605.json",
  "meta": {
    "full_size": 1209,
    "stripped_size": 520,
    "features": [
      "@minmaxInteger",
      "items",
      "pattern"
    ],
    "raw_features": [
      "$schema",
      "minimum",
      "properties",
      "required",
      "type",
      "type:array",
      "type:integer",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-06/schema#",
    "description": "ParaDrop chute VLAN interface configuration",
    "type": "object",
    "properties": {
      "type": {
        "type": "string",
        "description": "Network type, must be vlan",
        "pattern": "wifi"
      },
      "intfName": {
        "type": "string",
        "description": "Name of the network interface inside the chute",
        "pattern": "[a-z][a-z0-9]*"
      },
      "vlan_id": {
        "type": "integer",
        "description": "VLAN tag for traffic to and from the chute",
        "minimum": 1,
        "maxmimum": 4094
      },
      "dhcp": {
        "description": "DHCP server configuration",
        "type": "object",
        "properties": {
          "leasetime": {
            "type": "string",
            "description": "Duration of client leases, e.g. 2h"
          },
          "limit": {
            "type": "integer",
            "description": "Size of address range beginning at start value.",
            "minimum": 1
          },
          "start": {
            "type": "integer",
            "description": "Starting offset for address assignment.",
            "minimum": 0
          },
          "relay": {
            "type": "string",
            "description": "Address of a DHCP server if this server will be acting as a relay agent (experimental)"
          }
        }
      },
      "ipv4_network": {
        "type": "string",
        "description": "Request specific IP network in slash notation"
      },
      "dns": {
        "type": "array",
        "description": "List of DNS servers to advertise to connected clients",
        "items": {
          "type": "string"
        }
      }
    },
    "required": [
      "type",
      "intfName",
      "vlan_id"
    ]
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "type": "wifi",
        "intfName": "eth0",
        "vlan_id": 100,
        "dhcp": {
          "leasetime": "2h",
          "limit": 100,
          "start": 10
        },
        "ipv4_network": "192.168.1.0/24",
        "dns": [
          "8.8.8.8",
          "8.8.4.4"
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on pattern keyword",
      "valid": false,
      "rust_error": "\"vlan\" does not match \"wifi\"",
      "python_error": "'vlan' does not match 'wifi'\n\nFailed validating 'pattern' in schema['properties']['type']:\n    {'type': 'string',\n     'description': 'Network type, must be vlan',\n     'pattern': 'wifi'}\n\nOn instance['type']:\n    'vlan'",
      "data": {
        "type": "vlan",
        "intfName": "123abc",
        "vlan_id": 100,
        "dhcp": {
          "leasetime": "2h",
          "limit": 100,
          "start": 10
        },
        "ipv4_network": "192.168.1.0/24",
        "dns": [
          "8.8.8.8",
          "8.8.4.4"
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on minimum keyword",
      "valid": false,
      "rust_error": "0 is less than the minimum of 1",
      "python_error": "0 is less than the minimum of 1\n\nFailed validating 'minimum' in schema['properties']['vlan_id']:\n    {'type': 'integer',\n     'description': 'VLAN tag for traffic to and from the chute',\n     'minimum': 1,\n     'maxmimum': 4094}\n\nOn instance['vlan_id']:\n    0",
      "data": {
        "type": "wifi",
        "intfName": "eth0",
        "vlan_id": 0,
        "dhcp": {
          "leasetime": "2h",
          "limit": 0,
          "start": -1
        },
        "ipv4_network": "192.168.1.0/24",
        "dns": [
          "8.8.8.8",
          "8.8.4.4"
        ]
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "12345 is not of type \"string\"",
      "python_error": "12345 is not of type 'string'\n\nFailed validating 'type' in schema['properties']['dns']['items']:\n    {'type': 'string'}\n\nOn instance['dns'][2]:\n    12345",
      "data": {
        "type": "wifi",
        "intfName": "eth0",
        "vlan_id": 100,
        "dhcp": {
          "leasetime": "2h",
          "limit": 100,
          "start": 10
        },
        "ipv4_network": "192.168.1.0/24",
        "dns": [
          "8.8.8.8",
          "8.8.4.4",
          12345
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on pattern keyword",
      "valid": false,
      "rust_error": "\"Wifi\" does not match \"wifi\"",
      "python_error": "'Wifi' does not match 'wifi'\n\nFailed validating 'pattern' in schema['properties']['type']:\n    {'type': 'string',\n     'description': 'Network type, must be vlan',\n     'pattern': 'wifi'}\n\nOn instance['type']:\n    'Wifi'",
      "data": {
        "type": "Wifi",
        "intfName": "eth0",
        "vlan_id": 100,
        "dhcp": {
          "leasetime": "2h",
          "limit": 100,
          "start": 10
        },
        "ipv4_network": "192.168.1.0/24",
        "dns": [
          "8.8.8.8",
          "8.8.4.4"
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on minimum keyword",
      "valid": false,
      "rust_error": "0 is less than the minimum of 1",
      "python_error": "0 is less than the minimum of 1\n\nFailed validating 'minimum' in schema['properties']['vlan_id']:\n    {'type': 'integer',\n     'description': 'VLAN tag for traffic to and from the chute',\n     'minimum': 1,\n     'maxmimum': 4094}\n\nOn instance['vlan_id']:\n    0",
      "data": {
        "type": "wifi",
        "intfName": "eth0",
        "vlan_id": 0,
        "dhcp": {
          "leasetime": "2h",
          "limit": 100,
          "start": 10
        },
        "ipv4_network": "192.168.1.0/24",
        "dns": [
          "8.8.8.8",
          "8.8.4.4"
        ]
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "type": "wifi",
        "intfName": "vlan0",
        "vlan_id": 100,
        "dhcp": {
          "leasetime": "2h",
          "limit": 100,
          "start": 10,
          "relay": "192.168.1.1"
        },
        "ipv4_network": "10.0.0.0/24",
        "dns": [
          "8.8.8.8",
          "8.8.4.4"
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on minimum keyword",
      "valid": false,
      "rust_error": "0 is less than the minimum of 1",
      "python_error": "0 is less than the minimum of 1\n\nFailed validating 'minimum' in schema['properties']['vlan_id']:\n    {'type': 'integer',\n     'description': 'VLAN tag for traffic to and from the chute',\n     'minimum': 1,\n     'maxmimum': 4094}\n\nOn instance['vlan_id']:\n    0",
      "data": {
        "type": "wifi",
        "intfName": "vlan0",
        "vlan_id": 0,
        "dhcp": {
          "leasetime": "2h",
          "limit": 100,
          "start": 10,
          "relay": "192.168.1.1"
        },
        "ipv4_network": "10.0.0.0/24",
        "dns": [
          "8.8.8.8",
          "8.8.4.4"
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on pattern keyword",
      "valid": false,
      "rust_error": "\"WIFI\" does not match \"wifi\"",
      "python_error": "'WIFI' does not match 'wifi'\n\nFailed validating 'pattern' in schema['properties']['type']:\n    {'type': 'string',\n     'description': 'Network type, must be vlan',\n     'pattern': 'wifi'}\n\nOn instance['type']:\n    'WIFI'",
      "data": {
        "type": "WIFI",
        "intfName": "vlan0",
        "vlan_id": 100,
        "dhcp": {
          "leasetime": "2h",
          "limit": 100,
          "start": 10,
          "relay": "192.168.1.1"
        },
        "ipv4_network": "10.0.0.0/24",
        "dns": [
          "8.8.8.8",
          "8.8.4.4"
        ]
      }
    }
  ]
}