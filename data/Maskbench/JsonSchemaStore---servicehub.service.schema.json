{
  "description": "sample JsonSchemaStore/servicehub.service.schema.json",
  "meta": {
    "full_size": 2428,
    "stripped_size": 785,
    "features": [
      "@siblingKeys",
      "additionalProperties",
      "oneOf",
      "pattern"
    ],
    "raw_features": [
      "$schema",
      "_boolSchema",
      "id",
      "properties",
      "required",
      "type",
      "type:boolean",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "id": "https://json.schemastore.org/servicehub.service.schema.json",
    "properties": {
      "host": {
        "type": "string",
        "description": "The name of the host that should activate the service."
      },
      "hostId": {
        "type": "string",
        "pattern": "^[^ ]*$",
        "description": "A non-empty value will cause this service to be activated on a dedicated host with this ID. All services with the same host / hostId combination will run in the same host process such that they may share global data. If unspecified or empty, a service will share its host process with other services that require the same host and also leave this field empty. If specified, the value must not have spaces in it."
      },
      "hostGroupAllowed": {
        "type": "boolean",
        "description": "A value of 'true' will allow a client to specify a host group when requesting this service."
      },
      "entryPoint": {
        "type": "object",
        "description": "Host-specific parameters that describe how to activate this service.",
        "oneOf": [
          {
            "type": "object",
            "required": [
              "assemblyPath",
              "fullClassName"
            ],
            "properties": {
              "assemblyPath": {
                "type": "string",
                "description": "The path to the assembly that carries the service entrypoint class, relative to this file."
              },
              "fullClassName": {
                "type": "string",
                "description": "The full name of the class to instantiate (that accepts a Stream in its constructor) when a new client requests this service."
              },
              "appBasePath": {
                "type": "string",
                "description": "The path that the AppDomain hosting the service should be configured to consider the ApplicationBase, relative to this file."
              },
              "configPath": {
                "type": "string",
                "description": "The config file used to initialize the service's AppDomain. It may be omitted if the config file has the same name (+.config) as the service assembly, and resides in the same directory. It is also possible to have the service without the config file."
              }
            },
            "additionalProperties": false
          },
          {
            "type": "object",
            "required": [
              "scriptPath",
              "constructorFunction"
            ],
            "properties": {
              "scriptPath": {
                "type": "string",
                "description": "The path to the .js file to 'require', relative to this file."
              },
              "constructorFunction": {
                "type": "string",
                "description": "The name of the constructor function to use (that accepts a stream) when a new client requests this service."
              }
            },
            "additionalProperties": false
          }
        ]
      },
      "versionRange": {
        "type": "string",
        "description": "Defines the version of the service."
      }
    },
    "required": [
      "host",
      "entryPoint"
    ],
    "title": "Microsoft ServiceHub Service",
    "type": "object"
  },
  "tests": [
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "host": "localhost",
        "hostId": "my-service-host",
        "hostGroupAllowed": true,
        "entryPoint": {
          "assemblyPath": "MyService.dll",
          "fullClassName": "MyService.MyServiceClass",
          "appBasePath": "MyService",
          "configPath": "MyService.dll.config"
        },
        "versionRange": "[1.0.0, 2.0.0)"
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "host": "localhost",
        "hostId": "my-service-host",
        "hostGroupAllowed": true,
        "entryPoint": {
          "assemblyPath": "MyService.dll",
          "fullClassName": "MyService.Service",
          "appBasePath": "MyService",
          "configPath": "MyService.dll.config"
        },
        "versionRange": "[1.0.0, 2.0.0)"
      }
    },
    {
      "description": "llama-70b generated negative; focus on pattern keyword",
      "valid": false,
      "rust_error": "\"my service host\" does not match \"^[^ ]*$\"",
      "python_error": "'my service host' does not match '^[^ ]*$'\n\nFailed validating 'pattern' in schema['properties']['hostId']:\n    {'type': 'string',\n     'pattern': '^[^ ]*$',\n     'description': 'A non-empty value will cause this service to be '\n                    'activated on a dedicated host with this ID. All '\n                    'services with the same host / hostId combination will '\n                    'run in the same host process such that they may share '\n                    'global data. If unspecified or empty, a service will '\n                    'share its host process with other services that '\n                    'require the same host and also leave this field '\n                    'empty. If specified, the value must not have spaces '\n                    'in it.'}\n\nOn instance['hostId']:\n    'my service host'",
      "data": {
        "host": "localhost",
        "hostId": "my service host",
        "hostGroupAllowed": true,
        "entryPoint": {
          "assemblyPath": "MyService.dll",
          "fullClassName": "MyService.Service",
          "appBasePath": "MyService",
          "configPath": "MyService.dll.config"
        },
        "versionRange": "[1.0.0, 2.0.0)"
      }
    },
    {
      "description": "llama-70b generated negative; focus on oneOf keyword",
      "valid": false,
      "rust_error": "{\"scriptPath\":\"MyService.js\",\"constructorFunction\":\"MyService\",\"fullClassName\":\"MyService.Service\"} is not valid under any of the schemas listed in the 'oneOf' keyword",
      "python_error": "{'scriptPath': 'MyService.js', 'constructorFunction': 'MyService', 'fullClassName': 'MyService.Service'} is not valid under any of the given schemas\n\nFailed validating 'oneOf' in schema['properties']['entryPoint']:\n    {'type': 'object',\n     'description': 'Host-specific parameters that describe how to '\n                    'activate this service.',\n     'oneOf': [{'type': 'object',\n                'required': ['assemblyPath', 'fullClassName'],\n                'properties': {'assemblyPath': {'type': 'string',\n                                                'description': 'The path '\n                                                               'to the '\n                                                               'assembly '\n                                                               'that '\n                                                               'carries '\n                                                               'the '\n                                                               'servic.. (6956 more)",
      "data": {
        "host": "localhost",
        "hostId": "my-service-host",
        "hostGroupAllowed": true,
        "entryPoint": {
          "scriptPath": "MyService.js",
          "constructorFunction": "MyService",
          "fullClassName": "MyService.Service"
        },
        "versionRange": "[1.0.0, 2.0.0)"
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"my-service-host with spaces\" does not match \"^[^ ]*$\"",
      "python_error": "'my-service-host with spaces' does not match '^[^ ]*$'\n\nFailed validating 'pattern' in schema['properties']['hostId']:\n    {'type': 'string',\n     'pattern': '^[^ ]*$',\n     'description': 'A non-empty value will cause this service to be '\n                    'activated on a dedicated host with this ID. All '\n                    'services with the same host / hostId combination will '\n                    'run in the same host process such that they may share '\n                    'global data. If unspecified or empty, a service will '\n                    'share its host process with other services that '\n                    'require the same host and also leave this field '\n                    'empty. If specified, the value must not have spaces '\n                    'in it.'}\n\nOn instance['hostId']:\n    'my-service-host with spaces'",
      "data": {
        "host": "localhost",
        "hostId": "my-service-host with spaces",
        "hostGroupAllowed": true,
        "entryPoint": {
          "assemblyPath": "MyService.dll",
          "fullClassName": "MyService.Service",
          "appBasePath": "MyService",
          "configPath": "MyService.dll.config"
        },
        "versionRange": "[1.0.0, 2.0.0)"
      }
    }
  ]
}