{
  "description": "sample Github_medium/o10617.json",
  "meta": {
    "full_size": 2185,
    "stripped_size": 692,
    "features": [
      "additionalProperties",
      "anyOf",
      "format",
      "format:uri",
      "items"
    ],
    "raw_features": [
      "$schema",
      "_boolSchema",
      "properties",
      "required",
      "type",
      "type:array",
      "type:boolean",
      "type:number",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "title": "JSON schema for JasmineNodeTestAdapter configuration files (JasmineNodeTestAdapter.json)",
    "type": "object",
    "additionalProperties": false,
    "properties": {
      "$schema": {
        "type": "string",
        "format": "uri"
      },
      "Name": {
        "description": "The name of the test container.",
        "type": "string"
      },
      "BasePath": {
        "description": "The base path to use to resolve file paths. Defaults to the directory in which JasmineNodeTestAdapter.json resides.",
        "type": "string"
      },
      "Helpers": {
        "description": "Non-source, non-spec helper files. Loaded before any specs. Wildcards can be used - see [glob](https://www.npmjs.com/package/glob).",
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      "Specs": {
        "description": "Files containing Jasmine specs. Wildcards can be used - see [glob](https://www.npmjs.com/package/glob).",
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      "Watch": {
        "description": "A test run is triggered if any file specified in `Helpers` or `Specs` change. Add any files in `Watch` that should also trigger a test run when they change. These will typically be the source files. Wildcards can be used - see [glob](https://www.npmjs.com/package/glob).",
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      "BatchInterval": {
        "description": "When the test adapter is watching files for changes, it will wait `BatchInterval` ms before running tests. Default value is 250.",
        "type": "number"
      },
      "Traits": {
        "description": "Traits to attach to each test.",
        "type": "array",
        "items": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "object",
              "properties": {
                "Name": {
                  "type": "string"
                },
                "Value": {
                  "type": "string"
                }
              },
              "required": [
                "Name"
              ]
            }
          ]
        }
      },
      "Extensions": {
        "description": "Path to a node.js module implementing extensions.",
        "type": "string"
      },
      "Disabled": {
        "description": "Set to true, if the test adapter should be disabled for this configuration file.",
        "type": "boolean"
      },
      "LogToFile": {
        "description": "Set to true, if you want the adapter to write log statements to a log file (named JasmineNodeTestAdapter.log).",
        "type": "boolean"
      },
      "LogDirectory": {
        "description": "Where the log file should be saved (if LogToFile is true). If this property is not specified the directory in which JasmineNodeTestAdapter.json resides is used.",
        "type": "string"
      }
    }
  },
  "tests": [
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "Name": "Example Test Container",
        "BasePath": "/path/to/test/container",
        "Helpers": [
          "/path/to/helpers/helper1.js",
          "/path/to/helpers/helper2.js"
        ],
        "Specs": [
          "/path/to/specs/spec1.js",
          "/path/to/specs/spec2.js"
        ],
        "Watch": [
          "/path/to/source/source1.js",
          "/path/to/source/source2.js"
        ],
        "BatchInterval": 500,
        "Traits": [
          "trait1",
          {
            "Name": "trait2",
            "Value": "value2"
          }
        ],
        "Extensions": "/path/to/extensions/extension.js",
        "Disabled": false,
        "LogToFile": true,
        "LogDirectory": "/path/to/log/directory"
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "Name": "Example Test Container",
        "BasePath": "/path/to/base/directory",
        "Helpers": [
          "helpers/*.js",
          "more_helpers/*.js"
        ],
        "Specs": [
          "specs/*.spec.js",
          "more_specs/*.spec.js"
        ],
        "Watch": [
          "src/*.js",
          "more_src/*.js"
        ],
        "BatchInterval": 500,
        "Traits": [
          "trait1",
          {
            "Name": "trait2",
            "Value": "value2"
          }
        ],
        "Extensions": "/path/to/extensions.js",
        "Disabled": false,
        "LogToFile": true,
        "LogDirectory": "/path/to/log/directory"
      }
    },
    {
      "description": "llama-70b generated negative; focus on anyOf keyword",
      "valid": false,
      "rust_error": "{\"Name\":\"trait2\",\"Value\":123} is not valid under any of the schemas listed in the 'anyOf' keyword",
      "python_error": "456 is not valid under any of the given schemas\n\nFailed validating 'anyOf' in schema['properties']['Traits']['items']:\n    {'anyOf': [{'type': 'string'},\n               {'type': 'object',\n                'properties': {'Name': {'type': 'string'},\n                               'Value': {'type': 'string'}},\n                'required': ['Name']}]}\n\nOn instance['Traits'][2]:\n    456",
      "data": {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "Name": "Example Test Container",
        "BasePath": "/path/to/base/directory",
        "Helpers": [
          "helpers/*.js",
          "more_helpers/*.js"
        ],
        "Specs": [
          "specs/*.spec.js",
          "more_specs/*.spec.js"
        ],
        "Watch": [
          "src/*.js",
          "more_src/*.js"
        ],
        "BatchInterval": 500,
        "Traits": [
          "trait1",
          {
            "Name": "trait2",
            "Value": 123
          },
          456
        ],
        "Extensions": "/path/to/extensions.js",
        "Disabled": false,
        "LogToFile": true,
        "LogDirectory": "/path/to/log/directory"
      }
    },
    {
      "description": "llama-70b generated negative; focus on format keyword",
      "valid": false,
      "rust_error": "\"invalid-uri\" is not a \"uri\"",
      "python_error": "'invalid-uri' is not a 'uri'\n\nFailed validating 'format' in schema['properties']['$schema']:\n    {'type': 'string', 'format': 'uri'}\n\nOn instance['$schema']:\n    'invalid-uri'",
      "data": {
        "$schema": "invalid-uri",
        "Name": "Example Test Container",
        "BasePath": "/path/to/base/directory",
        "Helpers": [
          "helpers/*.js",
          "more_helpers/*.js"
        ],
        "Specs": [
          "specs/*.spec.js",
          "more_specs/*.spec.js"
        ],
        "Watch": [
          "src/*.js",
          "more_src/*.js"
        ],
        "BatchInterval": 500,
        "Traits": [
          "trait1",
          {
            "Name": "trait2",
            "Value": "value2"
          }
        ],
        "Extensions": "/path/to/extensions.js",
        "Disabled": false,
        "LogToFile": true,
        "LogDirectory": "/path/to/log/directory"
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "{\"Name\":\"trait2\",\"Value\":123} is not valid under any of the schemas listed in the 'anyOf' keyword",
      "python_error": "Additional properties are not allowed ('ExtraProperty' was unexpected)\n\nFailed validating 'additionalProperties' in schema:\n    {'$schema': 'http://json-schema.org/draft-04/schema#',\n     'title': 'JSON schema for JasmineNodeTestAdapter configuration files '\n              '(JasmineNodeTestAdapter.json)',\n     'type': 'object',\n     'additionalProperties': False,\n     'properties': {'$schema': {'type': 'string', 'format': 'uri'},\n                    'Name': {'description': 'The name of the test '\n                                            'container.',\n                             'type': 'string'},\n                    'BasePath': {'description': 'The base path to use to '\n                                                'resolve file paths. '\n                                                'Defaults to the directory '\n                                                'in which '\n                                                'JasmineNodeTestAdapter.json '\n                                                'reside.. (5349 more)",
      "data": {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "Name": "Example Test Container",
        "BasePath": "/path/to/base/directory",
        "Helpers": [
          "helpers/*.js",
          "more_helpers/*.js"
        ],
        "Specs": [
          "specs/*.spec.js",
          "more_specs/*.spec.js"
        ],
        "Watch": [
          "src/*.js",
          "more_src/*.js"
        ],
        "BatchInterval": 500,
        "Traits": [
          "trait1",
          {
            "Name": "trait2",
            "Value": 123
          }
        ],
        "Extensions": "/path/to/extensions.js",
        "Disabled": false,
        "LogToFile": true,
        "LogDirectory": "/path/to/log/directory",
        "ExtraProperty": "/path/to/extra"
      }
    }
  ]
}