{
  "description": "sample Github_easy/o9964.json",
  "meta": {
    "full_size": 300,
    "stripped_size": 300,
    "features": [
      "@minmaxLength",
      "additionalProperties",
      "pattern"
    ],
    "raw_features": [
      "$schema",
      "_boolSchema",
      "maxLength",
      "minLength",
      "properties",
      "required",
      "type",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "type": "object",
    "properties": {
      "key": {
        "type": "string"
      },
      "payload": {},
      "meta": {},
      "flowVersion": {
        "type": "string",
        "minLength": 1,
        "maxLength": 255
      },
      "deviceId": {
        "type": "string",
        "pattern": "^[A-Fa-f\\d]{24}$"
      }
    },
    "required": [
      "key"
    ],
    "additionalProperties": false
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "key": "example_key",
        "payload": {},
        "meta": {},
        "flowVersion": "1.0.0",
        "deviceId": "1234567890abcdef12345678"
      }
    },
    {
      "description": "llama-70b generated negative; focus on minLength keyword or maxLength keyword",
      "valid": false,
      "rust_error": "\"\" is shorter than 1 character",
      "python_error": "'' should be non-empty\n\nFailed validating 'minLength' in schema['properties']['flowVersion']:\n    {'type': 'string', 'minLength': 1, 'maxLength': 255}\n\nOn instance['flowVersion']:\n    ''",
      "data": {
        "key": "example_key",
        "payload": {},
        "meta": {},
        "flowVersion": "",
        "deviceId": "1234567890abcdef12345678"
      }
    },
    {
      "description": "llama-70b generated negative; focus on pattern keyword",
      "valid": false,
      "rust_error": "\"1234567890abcdef123456789\" does not match \"^[A-Fa-f\\d]{24}$\"",
      "python_error": "'1234567890abcdef123456789' does not match '^[A-Fa-f\\\\d]{24}$'\n\nFailed validating 'pattern' in schema['properties']['deviceId']:\n    {'type': 'string', 'pattern': '^[A-Fa-f\\\\d]{24}$'}\n\nOn instance['deviceId']:\n    '1234567890abcdef123456789'",
      "data": {
        "key": "example_key",
        "payload": {},
        "meta": {},
        "flowVersion": "1.0.0",
        "deviceId": "1234567890abcdef123456789"
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"\" is shorter than 1 character",
      "python_error": "Additional properties are not allowed ('extraKey' was unexpected)\n\nFailed validating 'additionalProperties' in schema:\n    {'$schema': 'http://json-schema.org/draft-04/schema#',\n     'type': 'object',\n     'properties': {'key': {'type': 'string'},\n                    'payload': {},\n                    'meta': {},\n                    'flowVersion': {'type': 'string',\n                                    'minLength': 1,\n                                    'maxLength': 255},\n                    'deviceId': {'type': 'string',\n                                 'pattern': '^[A-Fa-f\\\\d]{24}$'}},\n     'required': ['key'],\n     'additionalProperties': False}\n\nOn instance:\n    {'key': 'example_key',\n     'payload': {},\n     'meta': {},\n     'flowVersion': '',\n     'deviceId': '1234567890abcdef12345678',\n     'extraKey': 'extraValue'}",
      "data": {
        "key": "example_key",
        "payload": {},
        "meta": {},
        "flowVersion": "",
        "deviceId": "1234567890abcdef12345678",
        "extraKey": "extraValue"
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"\" is shorter than 1 character",
      "python_error": "Additional properties are not allowed ('additionalProperty' was unexpected)\n\nFailed validating 'additionalProperties' in schema:\n    {'$schema': 'http://json-schema.org/draft-04/schema#',\n     'type': 'object',\n     'properties': {'key': {'type': 'string'},\n                    'payload': {},\n                    'meta': {},\n                    'flowVersion': {'type': 'string',\n                                    'minLength': 1,\n                                    'maxLength': 255},\n                    'deviceId': {'type': 'string',\n                                 'pattern': '^[A-Fa-f\\\\d]{24}$'}},\n     'required': ['key'],\n     'additionalProperties': False}\n\nOn instance:\n    {'key': 'example_key',\n     'payload': {},\n     'meta': {},\n     'flowVersion': '',\n     'deviceId': '1234567890abcdef12345678',\n     'additionalProperty': 'value'}",
      "data": {
        "key": "example_key",
        "payload": {},
        "meta": {},
        "flowVersion": "",
        "deviceId": "1234567890abcdef12345678",
        "additionalProperty": "value"
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"\" is shorter than 1 character",
      "python_error": "Additional properties are not allowed ('additionalProperty' was unexpected)\n\nFailed validating 'additionalProperties' in schema:\n    {'$schema': 'http://json-schema.org/draft-04/schema#',\n     'type': 'object',\n     'properties': {'key': {'type': 'string'},\n                    'payload': {},\n                    'meta': {},\n                    'flowVersion': {'type': 'string',\n                                    'minLength': 1,\n                                    'maxLength': 255},\n                    'deviceId': {'type': 'string',\n                                 'pattern': '^[A-Fa-f\\\\d]{24}$'}},\n     'required': ['key'],\n     'additionalProperties': False}\n\nOn instance:\n    {'key': '',\n     'payload': {},\n     'meta': {},\n     'flowVersion': '',\n     'deviceId': '1234567890abcdef12345678',\n     'additionalProperty': {}}",
      "data": {
        "key": "",
        "payload": {},
        "meta": {},
        "flowVersion": "",
        "deviceId": "1234567890abcdef12345678",
        "additionalProperty": {}
      }
    }
  ]
}