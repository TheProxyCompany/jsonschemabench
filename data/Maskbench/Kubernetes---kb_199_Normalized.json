{
  "description": "sample Kubernetes/kb_199_Normalized.json",
  "meta": {
    "full_size": 1547,
    "stripped_size": 355,
    "features": [
      "items"
    ],
    "raw_features": [
      "properties",
      "required",
      "type",
      "type:[]",
      "type:array",
      "type:null",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "description": "CustomResourceDefinitionNames indicates the names to serve this CustomResourceDefinition",
    "properties": {
      "categories": {
        "description": "categories is a list of grouped resources this custom resource belongs to (e.g. 'all'). This is published in API discovery documents, and used by clients to support invocations like `kubectl get all`.",
        "items": {
          "type": [
            "string",
            "null"
          ]
        },
        "type": [
          "array",
          "null"
        ]
      },
      "kind": {
        "description": "kind is the serialized kind of the resource. It is normally CamelCase and singular. Custom resource instances will use this value as the `kind` attribute in API calls.",
        "type": [
          "string",
          "null"
        ]
      },
      "listKind": {
        "description": "listKind is the serialized kind of the list for this resource. Defaults to \"`kind`List\".",
        "type": [
          "string",
          "null"
        ]
      },
      "plural": {
        "description": "plural is the plural name of the resource to serve. The custom resources are served under `/apis/<group>/<version>/.../<plural>`. Must match the name of the CustomResourceDefinition (in the form `<names.plural>.<group>`). Must be all lowercase.",
        "type": [
          "string",
          "null"
        ]
      },
      "shortNames": {
        "description": "shortNames are short names for the resource, exposed in API discovery documents, and used by clients to support invocations like `kubectl get <shortname>`. It must be all lowercase.",
        "items": {
          "type": [
            "string",
            "null"
          ]
        },
        "type": [
          "array",
          "null"
        ]
      },
      "singular": {
        "description": "singular is the singular name of the resource. It must be all lowercase. Defaults to lowercased `kind`.",
        "type": [
          "string",
          "null"
        ]
      }
    },
    "required": [
      "plural",
      "kind"
    ],
    "type": "object"
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "kind": "MyResource",
        "plural": "myresources",
        "listKind ": "MyResourceList",
        "singular ": "myresource",
        "shortNames ": [
          "mr"
        ],
        "categories ": [
          "all"
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on type keyword with an array of types",
      "valid": false,
      "rust_error": "123 is not of types \"null\", \"string\"",
      "python_error": "123 is not of type 'string', 'null'\n\nFailed validating 'type' in schema['properties']['kind']:\n    {'description': 'kind is the serialized kind of the resource. It is '\n                    'normally CamelCase and singular. Custom resource '\n                    'instances will use this value as the `kind` attribute '\n                    'in API calls.',\n     'type': ['string', 'null']}\n\nOn instance['kind']:\n    123",
      "data": {
        "kind": 123,
        "plural": "myresources",
        "listKind": "MyResourceList",
        "singular": "myresource",
        "shortNames": [
          "mr"
        ],
        "categories": [
          "all"
        ]
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "categories": [
          "all",
          "example"
        ],
        "kind": "ExampleResource",
        "listKind": "ExampleResourceList",
        "plural": "exampleresources",
        "shortNames": [
          "ex",
          "example"
        ],
        "singular": "exampleresource"
      }
    },
    {
      "description": "llama-70b generated negative; focus on type keyword with an array of types",
      "valid": false,
      "rust_error": "1 is not of types \"null\", \"string\"",
      "python_error": "1 is not of type 'string', 'null'\n\nFailed validating 'type' in schema['properties']['categories']['items']:\n    {'type': ['string', 'null']}\n\nOn instance['categories'][0]:\n    1",
      "data": {
        "categories": [
          1,
          "example"
        ],
        "kind": "ExampleResource",
        "listKind": "ExampleResourceList",
        "plural": "exampleresources",
        "shortNames": [
          "ex",
          "example"
        ],
        "singular": "exampleresource"
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "123 is not of types \"null\", \"string\"",
      "python_error": "456 is not of type 'string', 'null'\n\nFailed validating 'type' in schema['properties']['shortNames']['items']:\n    {'type': ['string', 'null']}\n\nOn instance['shortNames'][1]:\n    456",
      "data": {
        "categories": [
          "all",
          123
        ],
        "kind": "ExampleResource",
        "listKind": "ExampleResourceList",
        "plural": "exampleresources",
        "shortNames": [
          "ex",
          456
        ],
        "singular": "ExampleResource"
      }
    }
  ]
}