{
  "description": "sample Github_medium/o81600.json",
  "meta": {
    "full_size": 1354,
    "stripped_size": 1354,
    "features": [
      "additionalProperties",
      "enum",
      "pattern"
    ],
    "raw_features": [
      "$schema",
      "_boolSchema",
      "properties",
      "required",
      "type",
      "type:integer",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "additionalProperties": false,
    "properties": {
      "order": {
        "additionalProperties": false,
        "properties": {
          "customerName": {
            "type": "string"
          },
          "date": {
            "pattern": "^([0][1-9]|[1][0-2])-([0][0-9]|[1][0-9]|[2][0-9]|[3][0-1])-20\\d{2}$",
            "type": "string"
          },
          "drink": {
            "additionalProperties": false,
            "properties": {
              "drinkType": {
                "enum": [
                  "Latte",
                  "Espresso",
                  "Cappuccino",
                  "Chai",
                  "Tea",
                  "Steamer",
                  "Hot Chocolate"
                ],
                "type": "string"
              },
              "flavor": {
                "enum": [
                  "Carmel",
                  "Chocolate",
                  "Hazelnut",
                  "Vanilla",
                  "Peppermint",
                  "White Chocolate"
                ],
                "type": "string"
              },
              "milk": {
                "enum": [
                  "Non-Fat",
                  "Whole",
                  "Breve",
                  "Soy",
                  "Almond"
                ],
                "type": "string"
              },
              "size": {
                "enum": [
                  "Small",
                  "Medium",
                  "Large",
                  "Extra-Large",
                  "Bucket"
                ],
                "type": "string"
              }
            },
            "required": [
              "drinkType",
              "size",
              "milk"
            ],
            "type": "object"
          },
          "espressoConCard": {
            "pattern": "^[A-Fa-f0-9]{8}-([A-Fa-f0-9]{4}-){3}[A-Fa-f0-9]{12}$",
            "type": "string"
          },
          "muffin": {
            "enum": [
              "Blueberry",
              "Double Berry Crumb",
              "Carrot Cake",
              "Chocolate Chip",
              "Double Chocolate Chip",
              "Cherry Cheesecake",
              "Cinnamon Cheesecake",
              "Chocolate Cheesecake",
              "Banana Nut"
            ],
            "type": "string"
          },
          "orderId": {
            "type": "integer"
          },
          "time": {
            "pattern": "^([0-2][0-3]|[0-1][0-9])(:[0-5][0-9]){2}$",
            "type": "string"
          },
          "totalPrice": {
            "type": "integer"
          }
        },
        "required": [
          "orderId",
          "customerName",
          "date",
          "time",
          "espressoConCard",
          "totalPrice"
        ],
        "type": "object"
      }
    },
    "required": [
      "order"
    ],
    "type": "object"
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "order": {
          "customerName": "John Doe",
          "date": "12-31-2022",
          "drink": {
            "drinkType": "Latte",
            "flavor": "Vanilla",
            "milk": "Whole",
            "size": "Medium"
          },
          "espressoConCard": "12345678-1234-1234-1234-123456789012",
          "muffin": "Blueberry",
          "orderId": 1,
          "time": "12:00:00",
          "totalPrice": 10
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on pattern keyword",
      "valid": false,
      "rust_error": "\"32-31-2022\" does not match \"^([0][1-9]|[1][0-2])-([0][0-9]|[1][0-9]|[2][0-9]|[3][0-1])-20\\d{2}$\"",
      "python_error": "Additional properties are not allowed ('Invalid card number, should be in the format XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX', 'espressoConCard' were unexpected)\n\nFailed validating 'additionalProperties' in schema:\n    {'$schema': 'http://json-schema.org/draft-04/schema#',\n     'additionalProperties': False,\n     'properties': {'order': {'additionalProperties': False,\n                              'properties': {'customerName': {'type': 'string'},\n                                             'date': {'pattern': '^([0][1-9]|[1][0-2])-([0][0-9]|[1][0-9]|[2][0-9]|[3][0-1])-20\\\\d{2}$',\n                                                      'type': 'string'},\n                                             'drink': {'additionalProperties': False,\n                                                       'properties': {'drinkType': {'enum': ['Latte',\n                                                                                             'Espresso',\n                                                                        .. (5788 more)",
      "data": {
        "order": {
          "customerName": "John Doe",
          "date": "32-31-2022",
          "Invalid date, should be in the format MM-DD-YYYY": "drink"
        },
        "espressoConCard": "12345678123412341234123456789012",
        "Invalid card number, should be in the format XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX": "muffin"
      }
    },
    {
      "description": "llama-70b generated negative; focus on pattern keyword",
      "valid": false,
      "rust_error": "\"13-31-2022\" does not match \"^([0][1-9]|[1][0-2])-([0][0-9]|[1][0-9]|[2][0-9]|[3][0-1])-20\\d{2}$\"",
      "python_error": "'13-31-2022' does not match '^([0][1-9]|[1][0-2])-([0][0-9]|[1][0-9]|[2][0-9]|[3][0-1])-20\\\\d{2}$'\n\nFailed validating 'pattern' in schema['properties']['order']['properties']['date']:\n    {'pattern': '^([0][1-9]|[1][0-2])-([0][0-9]|[1][0-9]|[2][0-9]|[3][0-1])-20\\\\d{2}$',\n     'type': 'string'}\n\nOn instance['order']['date']:\n    '13-31-2022'",
      "data": {
        "order": {
          "customerName": "John Doe",
          "date": "13-31-2022",
          "drink": {
            "drinkType": "Latte",
            "flavor": "Vanilla",
            "milk": "Whole",
            "size": "Medium"
          },
          "espressoConCard": "12345678-1234-1234-1234-123456789012",
          "muffin": "Blueberry",
          "orderId": 1,
          "time": "12:00:00",
          "totalPrice": 10
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on pattern keyword",
      "valid": false,
      "rust_error": "\"32-31-2022\" does not match \"^([0][1-9]|[1][0-2])-([0][0-9]|[1][0-9]|[2][0-9]|[3][0-1])-20\\d{2}$\"",
      "python_error": "'32-31-2022' does not match '^([0][1-9]|[1][0-2])-([0][0-9]|[1][0-9]|[2][0-9]|[3][0-1])-20\\\\d{2}$'\n\nFailed validating 'pattern' in schema['properties']['order']['properties']['date']:\n    {'pattern': '^([0][1-9]|[1][0-2])-([0][0-9]|[1][0-9]|[2][0-9]|[3][0-1])-20\\\\d{2}$',\n     'type': 'string'}\n\nOn instance['order']['date']:\n    '32-31-2022'",
      "data": {
        "order": {
          "customerName": "John Doe",
          "date": "32-31-2022",
          "drink": {
            "drinkType": "Latte",
            "flavor": "Vanilla",
            "milk": "Whole",
            "size": "Medium"
          },
          "espressoConCard": "12345678-1234-1234-1234-123456789012",
          "muffin": "Blueberry",
          "orderId": 1,
          "time": "12:00:00",
          "totalPrice": 10
        }
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"32-12-2022\" does not match \"^([0][1-9]|[1][0-2])-([0][0-9]|[1][0-9]|[2][0-9]|[3][0-1])-20\\d{2}$\"",
      "python_error": "'25:00:00' does not match '^([0-2][0-3]|[0-1][0-9])(:[0-5][0-9]){2}$'\n\nFailed validating 'pattern' in schema['properties']['order']['properties']['time']:\n    {'pattern': '^([0-2][0-3]|[0-1][0-9])(:[0-5][0-9]){2}$',\n     'type': 'string'}\n\nOn instance['order']['time']:\n    '25:00:00'",
      "data": {
        "order": {
          "customerName": "John Doe",
          "date": "32-12-2022",
          "drink": {
            "drinkType": "Latte",
            "flavor": "Vanilla",
            "milk": "Whole",
            "size": "Medium"
          },
          "espressoConCard": "12345678-1234-1234-1234-12345678901",
          "muffin": "Blueberry",
          "orderId": 1,
          "time": "25:00:00",
          "totalPrice": 10
        }
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "order": {
          "customerName": "John Doe",
          "date": "12-31-2022",
          "drink": {
            "drinkType": "Latte",
            "milk": "Whole",
            "size": "Medium"
          },
          "espressoConCard": "12345678-1234-1234-1234-123456789012",
          "muffin": "Blueberry",
          "orderId": 123,
          "time": "12:00:00",
          "totalPrice": 10
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on pattern keyword",
      "valid": false,
      "rust_error": "\"99-31-2022\" does not match \"^([0][1-9]|[1][0-2])-([0][0-9]|[1][0-9]|[2][0-9]|[3][0-1])-20\\d{2}$\"",
      "python_error": "Additional properties are not allowed ('Invalid length, UUID format', 'Invalid month' were unexpected)\n\nFailed validating 'additionalProperties' in schema['properties']['order']:\n    {'additionalProperties': False,\n     'properties': {'customerName': {'type': 'string'},\n                    'date': {'pattern': '^([0][1-9]|[1][0-2])-([0][0-9]|[1][0-9]|[2][0-9]|[3][0-1])-20\\\\d{2}$',\n                             'type': 'string'},\n                    'drink': {'additionalProperties': False,\n                              'properties': {'drinkType': {'enum': ['Latte',\n                                                                    'Espresso',\n                                                                    'Cappuccino',\n                                                                    'Chai',\n                                                                    'Tea',\n                                                                    'Steamer',\n                                                               .. (3361 more)",
      "data": {
        "order": {
          "orderId": 123,
          "customerName": "John Doe",
          "date": "99-31-2022",
          "Invalid month": "12:00:00",
          "espressoConCard": "12345678123412341234123456789012",
          "Invalid length, UUID format": "10",
          "drink": {
            "drinkType": "Latte",
            "milk": "Whole",
            "size": "Extra-Large"
          },
          "muffin": "Blueberry"
        }
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"00-00-2022\" does not match \"^([0][1-9]|[1][0-2])-([0][0-9]|[1][0-9]|[2][0-9]|[3][0-1])-20\\d{2}$\"",
      "python_error": "'00-00-2022' does not match '^([0][1-9]|[1][0-2])-([0][0-9]|[1][0-9]|[2][0-9]|[3][0-1])-20\\\\d{2}$'\n\nFailed validating 'pattern' in schema['properties']['order']['properties']['date']:\n    {'pattern': '^([0][1-9]|[1][0-2])-([0][0-9]|[1][0-9]|[2][0-9]|[3][0-1])-20\\\\d{2}$',\n     'type': 'string'}\n\nOn instance['order']['date']:\n    '00-00-2022'",
      "data": {
        "order": {
          "customerName": "John Doe",
          "date": "00-00-2022",
          "drink": {
            "drinkType": "Latte",
            "milk": "Whole",
            "size": "Medium"
          },
          "espressoConCard": "12345678-1234-1234-1234-123456789012",
          "muffin": "Blueberry",
          "orderId": 123,
          "time": "12:00:00",
          "totalPrice": 10
        }
      }
    }
  ]
}