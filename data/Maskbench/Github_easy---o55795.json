{
  "description": "sample Github_easy/o55795.json",
  "meta": {
    "full_size": 605,
    "stripped_size": 281,
    "features": [
      "additionalProperties",
      "enum"
    ],
    "raw_features": [
      "$schema",
      "_boolSchema",
      "properties",
      "required",
      "type",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "description": "Response data for SAS communications",
    "type": "object",
    "required": [
      "responseCode"
    ],
    "properties": {
      "responseCode": {
        "enum": [
          0,
          100,
          101,
          102,
          103,
          104,
          105,
          200,
          201,
          202,
          300,
          400,
          401,
          500,
          501,
          502
        ],
        "description": "An integer indicating the type of the response. 0 means success (no error)"
      },
      "responseMessage": {
        "type": "string",
        "description": "A detailed human-readable string describing the response."
      },
      "responseData": {
        "description": "Additional response-dependent structured data containing more information about an error.",
        "additionalProperties": true
      }
    }
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "responseCode": 0,
        "responseMessage": "Operation successful",
        "responseData": {
          "additionalInfo": "No errors encountered"
        }
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "999 is not one of [0,100,101,102,103,104,105,200,201,202,300,400,401,500,501,502]",
      "python_error": "999 is not one of [0, 100, 101, 102, 103, 104, 105, 200, 201, 202, 300, 400, 401, 500, 501, 502]\n\nFailed validating 'enum' in schema['properties']['responseCode']:\n    {'enum': [0,\n              100,\n              101,\n              102,\n              103,\n              104,\n              105,\n              200,\n              201,\n              202,\n              300,\n              400,\n              401,\n              500,\n              501,\n              502],\n     'description': 'An integer indicating the type of the response. 0 '\n                    'means success (no error)'}\n\nOn instance['responseCode']:\n    999",
      "data": {
        "responseCode": 999,
        "responseMessage": "Operation successful",
        "responseData": {
          "additionalInfo": "No errors encountered"
        }
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "responseCode": 0,
        "responseMessage": "Operation completed successfully",
        "responseData": {
          "additionalInfo": "No errors encountered"
        }
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "999 is not one of [0,100,101,102,103,104,105,200,201,202,300,400,401,500,501,502]",
      "python_error": "999 is not one of [0, 100, 101, 102, 103, 104, 105, 200, 201, 202, 300, 400, 401, 500, 501, 502]\n\nFailed validating 'enum' in schema['properties']['responseCode']:\n    {'enum': [0,\n              100,\n              101,\n              102,\n              103,\n              104,\n              105,\n              200,\n              201,\n              202,\n              300,\n              400,\n              401,\n              500,\n              501,\n              502],\n     'description': 'An integer indicating the type of the response. 0 '\n                    'means success (no error)'}\n\nOn instance['responseCode']:\n    999",
      "data": {
        "responseCode": 999,
        "responseMessage": "Operation completed successfully",
        "responseData": {
          "additionalInfo": "No errors encountered"
        }
      }
    }
  ]
}