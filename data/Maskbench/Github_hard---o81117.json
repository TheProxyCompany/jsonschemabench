{
  "description": "sample Github_hard/o81117.json",
  "meta": {
    "full_size": 13589,
    "stripped_size": 2913,
    "features": [
      "$ref",
      "@minmaxInteger",
      "additionalProperties",
      "format",
      "format:email",
      "format:int64"
    ],
    "raw_features": [
      "_boolSchema",
      "definitions",
      "minimum",
      "properties",
      "required",
      "type",
      "type:integer",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "definitions": {
      "AddAccountsDataPayload": {
        "example": {
          "email": "example@gmail.com",
          "name": "山田 太郎"
        },
        "properties": {
          "email": {
            "description": "email",
            "example": "example@gmail.com",
            "format": "email",
            "type": "string"
          },
          "name": {
            "description": "名前",
            "example": "山田 太郎",
            "type": "string"
          }
        },
        "required": [
          "name",
          "email"
        ],
        "title": "AddAccountsDataPayload",
        "type": "object"
      },
      "AddAccountsPayload": {
        "example": {
          "email": "example@gmail.com",
          "name": "山田 太郎"
        },
        "properties": {
          "email": {
            "description": "email",
            "example": "example@gmail.com",
            "format": "email",
            "type": "string"
          },
          "name": {
            "description": "名前",
            "example": "山田 太郎",
            "type": "string"
          }
        },
        "required": [
          "name",
          "email"
        ],
        "title": "AddAccountsPayload",
        "type": "object"
      },
      "AddBottlesDataPayload": {
        "example": {
          "account_id": 1,
          "name": "赤ワインなにか",
          "quantity": 0
        },
        "properties": {
          "account_id": {
            "description": "アカウントID",
            "example": 1,
            "format": "int64",
            "type": "integer"
          },
          "name": {
            "default": "",
            "description": "ボトル名",
            "example": "赤ワインなにか",
            "type": "string"
          },
          "quantity": {
            "description": "数量",
            "example": 0,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "account_id",
          "name",
          "quantity"
        ],
        "title": "AddBottlesDataPayload",
        "type": "object"
      },
      "AddBottlesPayload": {
        "example": {
          "account_id": 1,
          "name": "赤ワインなにか",
          "quantity": 0
        },
        "properties": {
          "account_id": {
            "description": "アカウントID",
            "example": 1,
            "format": "int64",
            "type": "integer"
          },
          "name": {
            "default": "",
            "description": "ボトル名",
            "example": "赤ワインなにか",
            "type": "string"
          },
          "quantity": {
            "description": "数量",
            "example": 0,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "account_id",
          "name",
          "quantity"
        ],
        "title": "AddBottlesPayload",
        "type": "object"
      },
      "UpdateAccountsDataPayload": {
        "example": {
          "email": "maiya@stoltenberg.info",
          "name": "Enim et."
        },
        "properties": {
          "email": {
            "default": "",
            "description": "email",
            "example": "maiya@stoltenberg.info",
            "format": "email",
            "type": "string"
          },
          "name": {
            "default": "",
            "description": "名前",
            "example": "Enim et.",
            "type": "string"
          }
        },
        "title": "UpdateAccountsDataPayload",
        "type": "object"
      },
      "UpdateAccountsPayload": {
        "example": {
          "email": "claire.kiehn@ward.net",
          "name": "Eum illum nemo."
        },
        "properties": {
          "email": {
            "default": "",
            "description": "email",
            "example": "claire.kiehn@ward.net",
            "format": "email",
            "type": "string"
          },
          "name": {
            "default": "",
            "description": "名前",
            "example": "Eum illum nemo.",
            "type": "string"
          }
        },
        "title": "UpdateAccountsPayload",
        "type": "object"
      },
      "UpdateBottlesDataPayload": {
        "example": {
          "name": "赤ワインなにか",
          "quantity": 10
        },
        "properties": {
          "name": {
            "default": "",
            "description": "ボトル名",
            "example": "赤ワインなにか",
            "type": "string"
          },
          "quantity": {
            "default": 0,
            "description": "数量",
            "example": 10,
            "minimum": 0,
            "type": "integer"
          }
        },
        "title": "UpdateBottlesDataPayload",
        "type": "object"
      },
      "UpdateBottlesPayload": {
        "example": {
          "name": "赤ワインなにか",
          "quantity": 0
        },
        "properties": {
          "name": {
            "default": "",
            "description": "ボトル名",
            "example": "赤ワインなにか",
            "type": "string"
          },
          "quantity": {
            "default": 0,
            "description": "数量",
            "example": 0,
            "minimum": 0,
            "type": "integer"
          }
        },
        "title": "UpdateBottlesPayload",
        "type": "object"
      },
      "accounts": {
        "links": [
          {
            "href": "/api/v1/accounts/",
            "mediaType": "application/vnd.goa.error",
            "method": "POST",
            "rel": "add",
            "schema": {
              "$ref": "#/definitions/AddAccountsPayload",
              "description": "add payload"
            },
            "targetSchema": {
              "$ref": "#/definitions/error"
            },
            "title": "add"
          },
          {
            "href": "/api/v1/accounts/{id}",
            "mediaType": "application/vnd.goa.error",
            "method": "DELETE",
            "rel": "delete",
            "targetSchema": {
              "$ref": "#/definitions/error"
            },
            "title": "delete"
          },
          {
            "href": "/api/v1/accounts/",
            "mediaType": "application/vnd.goa.error",
            "method": "GET",
            "rel": "list",
            "targetSchema": {
              "$ref": "#/definitions/error"
            },
            "title": "list"
          },
          {
            "href": "/api/v1/accounts/{id}",
            "mediaType": "application/vnd.goa.error",
            "method": "GET",
            "rel": "self",
            "targetSchema": {
              "$ref": "#/definitions/error"
            },
            "title": "show"
          },
          {
            "href": "/api/v1/accounts/{id}",
            "mediaType": "application/vnd.goa.error",
            "method": "PUT",
            "rel": "update",
            "schema": {
              "$ref": "#/definitions/UpdateAccountsPayload",
              "description": "update payload"
            },
            "targetSchema": {
              "$ref": "#/definitions/error"
            },
            "title": "update"
          }
        ],
        "title": "accounts",
        "type": "object"
      },
      "accounts_data": {
        "links": [
          {
            "href": "/api/v1/accounts_data/",
            "mediaType": "application/vnd.goa.error",
            "method": "POST",
            "rel": "add",
            "schema": {
              "$ref": "#/definitions/AddAccountsDataPayload",
              "description": "add payload"
            },
            "targetSchema": {
              "$ref": "#/definitions/error"
            },
            "title": "add"
          },
          {
            "href": "/api/v1/accounts_data/{id}",
            "mediaType": "application/vnd.goa.error",
            "method": "DELETE",
            "rel": "delete",
            "targetSchema": {
              "$ref": "#/definitions/error"
            },
            "title": "delete"
          },
          {
            "href": "/api/v1/accounts_data/",
            "mediaType": "application/vnd.goa.error",
            "method": "GET",
            "rel": "list",
            "targetSchema": {
              "$ref": "#/definitions/error"
            },
            "title": "list"
          },
          {
            "href": "/api/v1/accounts_data/{id}",
            "mediaType": "application/vnd.goa.error",
            "method": "GET",
            "rel": "self",
            "targetSchema": {
              "$ref": "#/definitions/error"
            },
            "title": "show"
          },
          {
            "href": "/api/v1/accounts_data/{id}",
            "mediaType": "application/vnd.goa.error",
            "method": "PUT",
            "rel": "update",
            "schema": {
              "$ref": "#/definitions/UpdateAccountsDataPayload",
              "description": "update payload"
            },
            "targetSchema": {
              "$ref": "#/definitions/error"
            },
            "title": "update"
          }
        ],
        "title": "accounts_data",
        "type": "object"
      },
      "actions": {
        "links": [
          {
            "href": "/api/v1/actions/hello",
            "mediaType": "application/vnd.goa.error",
            "method": "GET",
            "rel": "hello",
            "targetSchema": {
              "$ref": "#/definitions/error"
            },
            "title": "hello"
          },
          {
            "href": "/api/v1/actions/{id}",
            "mediaType": "application/vnd.goa.error",
            "method": "GET",
            "rel": "id",
            "targetSchema": {
              "$ref": "#/definitions/error"
            },
            "title": "id"
          },
          {
            "href": "/api/v1/actions/ping",
            "mediaType": "application/vnd.goa.error",
            "method": "GET",
            "rel": "ping",
            "targetSchema": {
              "$ref": "#/definitions/error"
            },
            "title": "ping"
          }
        ],
        "title": "actions",
        "type": "object"
      },
      "bottles": {
        "links": [
          {
            "href": "/api/v1/bottles/",
            "mediaType": "application/vnd.goa.error",
            "method": "POST",
            "rel": "add",
            "schema": {
              "$ref": "#/definitions/AddBottlesPayload",
              "description": "add payload"
            },
            "targetSchema": {
              "$ref": "#/definitions/error"
            },
            "title": "add"
          },
          {
            "href": "/api/v1/bottles/{id}",
            "mediaType": "application/vnd.goa.error",
            "method": "DELETE",
            "rel": "delete",
            "targetSchema": {
              "$ref": "#/definitions/error"
            },
            "title": "delete"
          },
          {
            "href": "/api/v1/bottles/",
            "mediaType": "application/vnd.goa.error",
            "method": "GET",
            "rel": "list",
            "targetSchema": {
              "$ref": "#/definitions/error"
            },
            "title": "list"
          },
          {
            "href": "/api/v1/bottles/relation",
            "mediaType": "application/vnd.goa.error",
            "method": "GET",
            "rel": "listRelation",
            "targetSchema": {
              "$ref": "#/definitions/error"
            },
            "title": "listRelation"
          },
          {
            "href": "/api/v1/bottles/{id}",
            "mediaType": "application/vnd.goa.error",
            "method": "GET",
            "rel": "self",
            "targetSchema": {
              "$ref": "#/definitions/error"
            },
            "title": "show"
          },
          {
            "href": "/api/v1/bottles/{id}",
            "mediaType": "application/vnd.goa.error",
            "method": "PUT",
            "rel": "update",
            "schema": {
              "$ref": "#/definitions/UpdateBottlesPayload",
              "description": "update payload"
            },
            "targetSchema": {
              "$ref": "#/definitions/error"
            },
            "title": "update"
          }
        ],
        "title": "bottles",
        "type": "object"
      },
      "bottles_data": {
        "links": [
          {
            "href": "/api/v1/bottles_data/",
            "mediaType": "application/vnd.goa.error",
            "method": "POST",
            "rel": "add",
            "schema": {
              "$ref": "#/definitions/AddBottlesDataPayload",
              "description": "add payload"
            },
            "targetSchema": {
              "$ref": "#/definitions/error"
            },
            "title": "add"
          },
          {
            "href": "/api/v1/bottles_data/{id}",
            "mediaType": "application/vnd.goa.error",
            "method": "DELETE",
            "rel": "delete",
            "targetSchema": {
              "$ref": "#/definitions/error"
            },
            "title": "delete"
          },
          {
            "href": "/api/v1/bottles_data/",
            "mediaType": "application/vnd.goa.error",
            "method": "GET",
            "rel": "list",
            "targetSchema": {
              "$ref": "#/definitions/error"
            },
            "title": "list"
          },
          {
            "href": "/api/v1/bottles_data/{id}",
            "mediaType": "application/vnd.goa.error",
            "method": "GET",
            "rel": "self",
            "targetSchema": {
              "$ref": "#/definitions/error"
            },
            "title": "show"
          },
          {
            "href": "/api/v1/bottles_data/{id}",
            "mediaType": "application/vnd.goa.error",
            "method": "PUT",
            "rel": "update",
            "schema": {
              "$ref": "#/definitions/UpdateBottlesDataPayload",
              "description": "update payload"
            },
            "targetSchema": {
              "$ref": "#/definitions/error"
            },
            "title": "update"
          }
        ],
        "title": "bottles_data",
        "type": "object"
      },
      "error": {
        "description": "Error response media type (default view)",
        "example": {
          "code": "invalid_value",
          "detail": "Value of ID must be an integer",
          "id": "3F1FKVRR",
          "meta": {
            "timestamp": 1458609066
          },
          "status": "400"
        },
        "media": {
          "type": "application/vnd.goa.error; view=default"
        },
        "properties": {
          "code": {
            "description": "an application-specific error code, expressed as a string value.",
            "example": "invalid_value",
            "type": "string"
          },
          "detail": {
            "description": "a human-readable explanation specific to this occurrence of the problem.",
            "example": "Value of ID must be an integer",
            "type": "string"
          },
          "id": {
            "description": "a unique identifier for this particular occurrence of the problem.",
            "example": "3F1FKVRR",
            "type": "string"
          },
          "meta": {
            "additionalProperties": true,
            "description": "a meta object containing non-standard meta-information about the error.",
            "example": {
              "timestamp": 1458609066
            },
            "type": "object"
          },
          "status": {
            "description": "the HTTP status code applicable to this problem, expressed as a string value.",
            "example": "400",
            "type": "string"
          }
        },
        "title": "Mediatype identifier: application/vnd.goa.error; view=default",
        "type": "object"
      },
      "js": {
        "title": "js",
        "type": "object"
      },
      "method": {
        "links": [
          {
            "href": "/api/v1/method/users/{id}/follow/{type}",
            "mediaType": "application/vnd.goa.error",
            "method": "GET",
            "rel": "etc",
            "targetSchema": {
              "$ref": "#/definitions/error"
            },
            "title": "etc"
          },
          {
            "href": "/api/v1/method/users/follow",
            "mediaType": "application/vnd.goa.error",
            "method": "PUT",
            "rel": "follow",
            "targetSchema": {
              "$ref": "#/definitions/error"
            },
            "title": "follow"
          },
          {
            "href": "/api/v1/method/users/follow",
            "mediaType": "application/vnd.goa.error",
            "method": "DELETE",
            "rel": "follow",
            "targetSchema": {
              "$ref": "#/definitions/error"
            },
            "title": "follow"
          },
          {
            "href": "/api/v1/method/list",
            "mediaType": "application/vnd.goa.error",
            "method": "GET",
            "rel": "list",
            "targetSchema": {
              "$ref": "#/definitions/error"
            },
            "title": "list"
          },
          {
            "href": "/api/v1/method/list/new",
            "mediaType": "application/vnd.goa.error",
            "method": "GET",
            "rel": "list",
            "targetSchema": {
              "$ref": "#/definitions/error"
            },
            "title": "list"
          },
          {
            "href": "/api/v1/method/list/topic",
            "mediaType": "application/vnd.goa.error",
            "method": "GET",
            "rel": "list",
            "targetSchema": {
              "$ref": "#/definitions/error"
            },
            "title": "list"
          },
          {
            "href": "/api/v1/method/get",
            "mediaType": "application/vnd.goa.error",
            "method": "GET",
            "rel": "method",
            "targetSchema": {
              "$ref": "#/definitions/error"
            },
            "title": "method"
          },
          {
            "href": "/api/v1/method/post",
            "mediaType": "application/vnd.goa.error",
            "method": "POST",
            "rel": "method",
            "targetSchema": {
              "$ref": "#/definitions/error"
            },
            "title": "method"
          },
          {
            "href": "/api/v1/method/delete",
            "mediaType": "application/vnd.goa.error",
            "method": "DELETE",
            "rel": "method",
            "targetSchema": {
              "$ref": "#/definitions/error"
            },
            "title": "method"
          },
          {
            "href": "/api/v1/method/put",
            "mediaType": "application/vnd.goa.error",
            "method": "PUT",
            "rel": "method",
            "targetSchema": {
              "$ref": "#/definitions/error"
            },
            "title": "method"
          }
        ],
        "title": "method",
        "type": "object"
      },
      "response": {
        "links": [
          {
            "href": "/api/v1/response/users/array",
            "mediaType": "application/vnd.goa.error",
            "method": "GET",
            "rel": "array",
            "targetSchema": {
              "$ref": "#/definitions/error"
            },
            "title": "array"
          },
          {
            "href": "/api/v1/response/users/hash",
            "mediaType": "application/vnd.goa.error",
            "method": "GET",
            "rel": "hash",
            "targetSchema": {
              "$ref": "#/definitions/error"
            },
            "title": "hash"
          },
          {
            "href": "/api/v1/response/users",
            "mediaType": "application/vnd.goa.error",
            "method": "GET",
            "rel": "list",
            "targetSchema": {
              "$ref": "#/definitions/error"
            },
            "title": "list"
          },
          {
            "href": "/api/v1/response/users/nested",
            "method": "GET",
            "rel": "nested",
            "title": "nested"
          },
          {
            "href": "/api/v1/response/users/{id}",
            "mediaType": "application/vnd.goa.error",
            "method": "GET",
            "rel": "self",
            "targetSchema": {
              "$ref": "#/definitions/error"
            },
            "title": "show"
          }
        ],
        "title": "response",
        "type": "object"
      },
      "security": {
        "links": [
          {
            "href": "/api/v1/securiy/",
            "mediaType": "application/vnd.goa.error",
            "method": "GET",
            "rel": "security",
            "targetSchema": {
              "$ref": "#/definitions/error"
            },
            "title": "security"
          }
        ],
        "title": "security",
        "type": "object"
      },
      "swagger": {
        "title": "swagger",
        "type": "object"
      },
      "validation": {
        "links": [
          {
            "href": "/api/v1/validation/",
            "mediaType": "application/vnd.goa.error",
            "method": "GET",
            "rel": "validation",
            "targetSchema": {
              "$ref": "#/definitions/error"
            },
            "title": "validation"
          }
        ],
        "title": "validation",
        "type": "object"
      }
    },
    "description": "goaのサンプルです",
    "links": [
      {
        "href": "http://localhost:8080",
        "rel": "self"
      },
      {
        "href": "/schema",
        "method": "GET",
        "rel": "self",
        "targetSchema": {
          "$schema": "http://json-schema.org/draft-04/schema",
          "additionalProperties": true
        }
      }
    ],
    "properties": {
      "AddAccountsDataPayload": {
        "$ref": "#/definitions/AddAccountsDataPayload"
      },
      "AddAccountsPayload": {
        "$ref": "#/definitions/AddAccountsPayload"
      },
      "AddBottlesDataPayload": {
        "$ref": "#/definitions/AddBottlesDataPayload"
      },
      "AddBottlesPayload": {
        "$ref": "#/definitions/AddBottlesPayload"
      },
      "UpdateAccountsDataPayload": {
        "$ref": "#/definitions/UpdateAccountsDataPayload"
      },
      "UpdateAccountsPayload": {
        "$ref": "#/definitions/UpdateAccountsPayload"
      },
      "UpdateBottlesDataPayload": {
        "$ref": "#/definitions/UpdateBottlesDataPayload"
      },
      "UpdateBottlesPayload": {
        "$ref": "#/definitions/UpdateBottlesPayload"
      },
      "accounts": {
        "$ref": "#/definitions/accounts"
      },
      "accounts_data": {
        "$ref": "#/definitions/accounts_data"
      },
      "actions": {
        "$ref": "#/definitions/actions"
      },
      "bottles": {
        "$ref": "#/definitions/bottles"
      },
      "bottles_data": {
        "$ref": "#/definitions/bottles_data"
      },
      "error": {
        "$ref": "#/definitions/error"
      },
      "js": {
        "$ref": "#/definitions/js"
      },
      "method": {
        "$ref": "#/definitions/method"
      },
      "response": {
        "$ref": "#/definitions/response"
      },
      "security": {
        "$ref": "#/definitions/security"
      },
      "swagger": {
        "$ref": "#/definitions/swagger"
      },
      "validation": {
        "$ref": "#/definitions/validation"
      }
    },
    "title": "pei0804/goa-simple-sample",
    "type": "object"
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "AddAccountsDataPayload": {
          "email": "example@gmail.com",
          "name": "山田 太郎"
        },
        "AddAccountsPayload": {
          "email": "example@gmail.com",
          "name": "山田 太郎"
        },
        "AddBottlesDataPayload": {
          "account_id": 1,
          "name": "赤ワインなにか",
          "quantity": 0
        },
        "AddBottlesPayload": {
          "account_id": 1,
          "name": "赤ワインなにか",
          "quantity": 0
        },
        "UpdateAccountsDataPayload": {
          "email": "maiya@stoltenberg.info",
          "name": "Enim et."
        },
        "UpdateAccountsPayload": {
          "email": "claire.kiehn@ward.net",
          "name": "Eum illum nemo."
        },
        "UpdateBottlesDataPayload": {
          "name": "赤ワインなにか",
          "quantity": 10
        },
        "UpdateBottlesPayload": {
          "name": "赤ワインなにか",
          "quantity": 0
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on format keyword",
      "valid": false,
      "rust_error": "\"invalid_email\" is not a \"email\"",
      "python_error": "'abc' is not of type 'integer'\n\nFailed validating 'type' in schema['properties']['UpdateBottlesPayload']['properties']['quantity']:\n    {'default': 0,\n     'description': '数量',\n     'example': 0,\n     'minimum': 0,\n     'type': 'integer'}\n\nOn instance['UpdateBottlesPayload']['quantity']:\n    'abc'",
      "data": {
        "AddAccountsDataPayload": {
          "email": "invalid_email",
          "name": "山田 太郎"
        },
        "AddAccountsPayload": {
          "email": "invalid_email",
          "name": "山田 太郎"
        },
        "AddBottlesDataPayload": {
          "account_id": "abc",
          "name": "赤ワインなにか",
          "quantity": 0
        },
        "AddBottlesPayload": {
          "account_id": "abc",
          "name": "赤ワインなにか",
          "quantity": 0
        },
        "UpdateAccountsDataPayload": {
          "email": "invalid_email",
          "name": "Enim et."
        },
        "UpdateAccountsPayload": {
          "email": "invalid_email",
          "name": "Eum illum nemo."
        },
        "UpdateBottlesDataPayload": {
          "name": "赤ワインなにか",
          "quantity": "abc"
        },
        "UpdateBottlesPayload": {
          "name": "赤ワインなにか",
          "quantity": "abc"
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on minimum keyword",
      "valid": false,
      "rust_error": "-1 is less than the minimum of 0",
      "python_error": "-1 is less than the minimum of 0\n\nFailed validating 'minimum' in schema['properties']['UpdateBottlesDataPayload']['properties']['quantity']:\n    {'default': 0,\n     'description': '数量',\n     'example': 10,\n     'minimum': 0,\n     'type': 'integer'}\n\nOn instance['UpdateBottlesDataPayload']['quantity']:\n    -1",
      "data": {
        "AddAccountsDataPayload": {
          "email": "example@gmail.com",
          "name": "山田 太郎"
        },
        "AddAccountsPayload": {
          "email": "example@gmail.com",
          "name": "山田 太郎"
        },
        "AddBottlesDataPayload": {
          "account_id": 1,
          "name": "赤ワインなにか",
          "quantity": 0
        },
        "AddBottlesPayload": {
          "account_id": 1,
          "name": "赤ワインなにか",
          "quantity": 0
        },
        "UpdateAccountsDataPayload": {
          "email": "maiya@stoltenberg.info",
          "name": "Enim et."
        },
        "UpdateAccountsPayload": {
          "email": "claire.kiehn@ward.net",
          "name": "Eum illum nemo."
        },
        "UpdateBottlesDataPayload": {
          "name": "赤ワインなにか",
          "quantity": -1
        },
        "UpdateBottlesPayload": {
          "name": "赤クインなにか",
          "quantity": 0
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on format keyword",
      "valid": false,
      "rust_error": "\"invalid_email\" is not a \"email\"",
      "python_error": "'invalid_email' is not a 'email'\n\nFailed validating 'format' in schema['properties']['AddAccountsPayload']['properties']['email']:\n    {'description': 'email',\n     'example': 'example@gmail.com',\n     'format': 'email',\n     'type': 'string'}\n\nOn instance['AddAccountsPayload']['email']:\n    'invalid_email'",
      "data": {
        "AddAccountsDataPayload": {
          "email": "invalid_email",
          "name": "山田 太郎"
        },
        "AddAccountsPayload": {
          "email": "invalid_email",
          "name": "山田 太郎"
        },
        "AddBottlesDataPayload": {
          "account_id": 1,
          "name": "赤ワインなにか",
          "quantity": 0
        },
        "AddBottlesPayload": {
          "account_id": 1,
          "name": "赤クインなにか",
          "quantity": 0
        },
        "UpdateAccountsDataPayload": {
          "email": "maiya@stoltenberg.info",
          "name": "Enim et."
        },
        "UpdateAccountsPayload": {
          "email": "claire.kiehn@ward.net",
          "name": "Eum illum nemo."
        },
        "UpdateBottlesDataPayload": {
          "name": "赤インなにか",
          "quantity": 10
        },
        "UpdateBottlesPayload": {
          "name": "赤インなにか",
          "quantity": 0
        }
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"invalid_email\" is not a \"email\"",
      "python_error": "-1 is less than the minimum of 0\n\nFailed validating 'minimum' in schema['properties']['UpdateBottlesDataPayload']['properties']['quantity']:\n    {'default': 0,\n     'description': '数量',\n     'example': 10,\n     'minimum': 0,\n     'type': 'integer'}\n\nOn instance['UpdateBottlesDataPayload']['quantity']:\n    -1",
      "data": {
        "AddAccountsDataPayload": {
          "email": "invalid_email",
          "name": "山田 太郎"
        },
        "AddAccountsPayload": {
          "email": "example@gmail.com",
          "name": "山田 太郎"
        },
        "AddBottlesDataPayload": {
          "account_id": "string",
          "name": "赤ワインなにか",
          "quantity": 0
        },
        "AddBottlesPayload": {
          "account_id": 1,
          "name": "赤ワインなにか",
          "quantity": 0
        },
        "UpdateAccountsDataPayload": {
          "email": "maiya@stoltenberg.info",
          "name": "Enim et."
        },
        "UpdateAccountsPayload": {
          "email": "claire.kiehn@ward.net",
          "name": "Eum illum nemo."
        },
        "UpdateBottlesDataPayload": {
          "name": "赤ワインなにか",
          "quantity": -1
        },
        "UpdateBottlesPayload": {
          "name": "赤ワインなにか",
          "quantity": 0
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on format keyword",
      "valid": false,
      "rust_error": "\"invalid_email\" is not a \"email\"",
      "python_error": "'invalid_email' is not a 'email'\n\nFailed validating 'format' in schema['properties']['AddAccountsDataPayload']['properties']['email']:\n    {'description': 'email',\n     'example': 'example@gmail.com',\n     'format': 'email',\n     'type': 'string'}\n\nOn instance['AddAccountsDataPayload']['email']:\n    'invalid_email'",
      "data": {
        "AddAccountsDataPayload": {
          "email": "invalid_email",
          "name": "山田 太郎"
        },
        "AddAccountsPayload": {
          "email": "example@gmail.com",
          "name": "山田 太郎"
        },
        "AddBottlesDataPayload": {
          "account_id": 1,
          "name": "赤ワインなにか",
          "quantity": 0
        },
        "AddBottlesPayload": {
          "account_id": 1,
          "name": "赤クインなにか",
          "quantity": 0
        },
        "UpdateAccountsDataPayload": {
          "email": "maiya@stoltenberg.info",
          "name": "Enim et."
        },
        "UpdateAccountsPayload": {
          "email": "claire.kiehn@ward.net",
          "name": "Eum illum nemo."
        },
        "UpdateBottlesDataPayload": {
          "name": "赤インなにか",
          "quantity": 10
        },
        "UpdateBottlesPayload": {
          "name": "赤インなにか",
          "quantity": 0
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on minimum keyword",
      "valid": false,
      "rust_error": "-1 is less than the minimum of 0",
      "python_error": "-1 is less than the minimum of 0\n\nFailed validating 'minimum' in schema['properties']['UpdateBottlesDataPayload']['properties']['quantity']:\n    {'default': 0,\n     'description': '数量',\n     'example': 10,\n     'minimum': 0,\n     'type': 'integer'}\n\nOn instance['UpdateBottlesDataPayload']['quantity']:\n    -1",
      "data": {
        "AddAccountsDataPayload": {
          "email": "example@gmail.com",
          "name": "山田 太郎"
        },
        "AddAccountsPayload": {
          "email": "example@gmail.com",
          "name": "山田 太郎"
        },
        "AddBottlesDataPayload": {
          "account_id": 1,
          "name": "赤ワインなにか",
          "quantity": 0
        },
        "AddBottlesPayload": {
          "account_id": 1,
          "name": "赤ワインなにか",
          "quantity": 0
        },
        "UpdateAccountsDataPayload": {
          "email": "maiya@stoltenberg.info",
          "name": "Enim et."
        },
        "UpdateAccountsPayload": {
          "email": "claire.kiehn@ward.net",
          "name": "Eum illum nemo."
        },
        "UpdateBottlesDataPayload": {
          "name": "赤ワインなにか",
          "quantity": -1
        },
        "UpdateBottlesPayload": {
          "name": "赤ワインなにか",
          "quantity": 0
        }
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"invalid_email\" is not a \"email\"",
      "python_error": "-1 is less than the minimum of 0\n\nFailed validating 'minimum' in schema['properties']['UpdateBottlesDataPayload']['properties']['quantity']:\n    {'default': 0,\n     'description': '数量',\n     'example': 10,\n     'minimum': 0,\n     'type': 'integer'}\n\nOn instance['UpdateBottlesDataPayload']['quantity']:\n    -1",
      "data": {
        "AddAccountsDataPayload": {
          "email": "invalid_email",
          "name": "山田 太郎"
        },
        "AddAccountsPayload": {
          "email": "example@gmail.com",
          "name": "山田 太郎"
        },
        "AddBottlesDataPayload": {
          "account_id": "abc",
          "name": "赤ワインなにか",
          "quantity": 0
        },
        "AddBottlesPayload": {
          "account_id": 1,
          "name": "赤ワインなにか",
          "quantity": 0
        },
        "UpdateAccountsDataPayload": {
          "email": "maiya@stoltenberg.info",
          "name": "Enim et."
        },
        "UpdateAccountsPayload": {
          "email": "claire.kiehn@ward.net",
          "name": "Eum illum nemo."
        },
        "UpdateBottlesDataPayload": {
          "name": "赤ワインなにか",
          "quantity": -1
        },
        "UpdateBottlesPayload": {
          "name": "赤ワインなにか",
          "quantity": 0
        }
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "AddAccountsDataPayload": {
          "email": "example@gmail.com",
          "name": "山田 太郎"
        },
        "AddAccountsPayload": {
          "email": "example@gmail.com",
          "name": "山田 太郎"
        },
        "AddBottlesDataPayload": {
          "account_id": 1,
          "name": "赤ワインなにか",
          "quantity": 0
        },
        "AddBottlesPayload": {
          "account_id": 1,
          "name": "赤ワインなにか",
          "quantity": 0
        },
        "UpdateAccountsDataPayload": {
          "email": "maiya@stoltenberg.info",
          "name": "Enim et."
        },
        "UpdateAccountsPayload": {
          "email": "claire.kiehn@ward.net",
          "name": "Eum illum nemo."
        },
        "UpdateBottlesDataPayload": {
          "name": "赤ワインなにか",
          "quantity": 10
        },
        "UpdateBottlesPayload": {
          "name": "赤ワインなにか",
          "quantity": 0
        },
        "accounts": {
          "links": [
            {
              "href": "/api/v1/accounts/",
              "mediaType": "application/vnd.goa.error",
              "method": "POST",
              "rel": "add",
              "schema": {
                "$ref": "#/definitions/AddAccountsPayload",
                "description": "add payload"
              },
              "targetSchema": {
                "$ref": "#/definitions/error"
              },
              "title": "add"
            },
            {
              "href": "/api/v1/accounts/{id}",
              "mediaType": "application/vnd.goa.error",
              "method": "DELETE",
              "rel": "delete",
              "targetSchema": {
                "$ref": "#/definitions/error"
              },
              "title": "delete"
            },
            {
              "href": "/api/v1/accounts/",
              "mediaType": "application/vnd.goa.error",
              "method": "GET",
              "rel": "list",
              "targetSchema": {
                "$ref": "#/definitions/error"
              },
              "title": "list"
            },
            {
              "href": "/api/v1/accounts/{id}",
              "mediaType": "application/vnd.goa.error",
              "method": "GET",
              "rel": "self",
              "targetSchema": {
                "$ref": "#/definitions/error"
              },
              "title": "show"
            },
            {
              "href": "/api/v1/accounts/{id}",
              "mediaType": "application/vnd.goa.error",
              "method": "PUT",
              "rel": "update",
              "schema": {
                "$ref": "#/definitions/UpdateAccountsPayload",
                "description": "update payload"
              },
              "targetSchema": {
                "$ref": "#/definitions/error"
              },
              "title": "update"
            }
          ],
          "title": "accounts",
          "type": "object"
        },
        "accounts_data": {
          "links": [
            {
              "href": "/api/v1/accounts_data/",
              "mediaType": "application/vnd.goa.error",
              "method": "POST",
              "rel": "add",
              "schema": {
                "$ref": "#/definitions/AddAccountsDataPayload",
                "description": "add payload"
              },
              "targetSchema": {
                "$ref": "#/definitions/error"
              },
              "title": "add"
            },
            {
              "href": "/api/v1/accounts_data/{id}",
              "mediaType": "application/vnd.goa.error",
              "method": "DELETE",
              "rel": "delete",
              "targetSchema": {
                "$ref": "#/definitions/error"
              },
              "title": "delete"
            },
            {
              "href": "/api/v1/accounts_data/",
              "mediaType": "application/vnd.goa.error",
              "method": "GET",
              "rel": "list",
              "targetSchema": {
                "$ref": "#/definitions/error"
              },
              "title": "list"
            },
            {
              "href": "/api/v1/accounts_data/{id}",
              "mediaType": "application/vnd.goa.error",
              "method": "GET",
              "rel": "self",
              "targetSchema": {
                "$ref": "#/definitions/error"
              },
              "title": "show"
            },
            {
              "href": "/api/v1/accounts_data/{id}",
              "mediaType": "application/vnd.goa.error",
              "method": "PUT",
              "rel": "update",
              "schema": {
                "$ref": "#/definitions/UpdateAccountsDataPayload",
                "description": "update payload"
              },
              "targetSchema": {
                "$ref": "#/definitions/error"
              },
              "title": "update"
            }
          ],
          "title": "accounts_data",
          "type": "object"
        },
        "actions": {
          "links": [
            {
              "href": "/api/v1/actions/hello",
              "mediaType": "application/vnd.goa.error",
              "method": "GET",
              "rel": "hello",
              "targetSchema": {
                "$ref": "#/definitions/error"
              },
              "title": "hello"
            },
            {
              "href": "/api/v1/actions/{id}",
              "mediaType": "application/vnd.goa.error",
              "method": "GET",
              "rel": "id",
              "targetSchema": {
                "$ref": "#/definitions/error"
              },
              "title": "id"
            },
            {
              "href": "/api/v1/actions/ping",
              "mediaType": "application/vnd.goa.error",
              "method": "GET",
              "rel": "ping",
              "targetSchema": {
                "$ref": "#/definitions/error"
              },
              "title": "ping"
            }
          ],
          "title": "actions",
          "type": "object"
        },
        "bottles": {
          "links": [
            {
              "href": "/api/v1/bottles/",
              "mediaType": "application/vnd.goa.error",
              "method": "POST",
              "rel": "add",
              "schema": {
                "$ref": "#/definitions/AddBottlesPayload",
                "description": "add payload"
              },
              "targetSchema": {
                "$ref": "#/definitions/error"
              },
              "title": "add"
            },
            {
              "href": "/api/v1/bottles/{id}",
              "mediaType": "application/vnd.goa.error",
              "method": "DELETE",
              "rel": "delete",
              "targetSchema": {
                "$ref": "#/definitions/error"
              },
              "title": "delete"
            },
            {
              "href": "/api/v1/bottles/",
              "mediaType": "application/vnd.goa.error",
              "method": "GET",
              "rel": "list",
              "targetSchema": {
                "$ref": "#/definitions/error"
              },
              "title": "list"
            },
            {
              "href": "/api/v1/bottles/relation",
              "mediaType": "application/vnd.goa.error",
              "method": "GET",
              "rel": "listRelation",
              "targetSchema": {
                "$ref": "#/definitions/error"
              },
              "title": "listRelation"
            },
            {
              "href": "/api/v1/bottles/{id}",
              "mediaType": "application/vnd.goa.error",
              "method": "GET",
              "rel": "self",
              "targetSchema": {
                "$ref": "#/definitions/error"
              },
              "title": "show"
            },
            {
              "href": "/api/v1/bottles/{id}",
              "mediaType": "application/vnd.goa.error",
              "method": "PUT",
              "rel": "update",
              "schema": {
                "$ref": "#/definitions/UpdateBottlesPayload",
                "description": "update payload"
              },
              "targetSchema": {
                "$ref": "#/definitions/error"
              },
              "title": "update"
            }
          ],
          "title": "bottles",
          "type": "object"
        },
        "bottles_data": {
          "links": [
            {
              "href": "/api/v1/bottles_data/",
              "mediaType": "application/vnd.goa.error",
              "method": "POST",
              "rel": "add",
              "schema": {
                "$ref": "#/definitions/AddBottlesDataPayload",
                "description": "add payload"
              },
              "targetSchema": {
                "$ref": "#/definitions/error"
              },
              "title": "add"
            },
            {
              "href": "/api/v1/bottles_data/{id}",
              "mediaType": "application/vnd.goa.error",
              "method": "DELETE",
              "rel": "delete",
              "targetSchema": {
                "$ref": "#/definitions/error"
              },
              "title": "delete"
            },
            {
              "href": "/api/v1/bottles_data/",
              "mediaType": "application/vnd.goa.error",
              "method": "GET",
              "rel": "list",
              "targetSchema": {
                "$ref": "#/definitions/error"
              },
              "title": "list"
            },
            {
              "href": "/api/v1/bottles_data/{id}",
              "mediaType": "application/vnd.goa.error",
              "method": "GET",
              "rel": "self",
              "targetSchema": {
                "$ref": "#/definitions/error"
              },
              "title": "show"
            },
            {
              "href": "/api/v1/bottles_data/{id}",
              "mediaType": "application/vnd.goa.error",
              "method": "PUT",
              "rel": "update",
              "schema": {
                "$ref": "#/definitions/UpdateBottlesDataPayload",
                "description": "update payload"
              },
              "targetSchema": {
                "$ref": "#/definitions/error"
              },
              "title": "update"
            }
          ],
          "title": "bottles_data",
          "type": "object"
        },
        "error": {
          "code": "invalid_value",
          "detail": "Value of ID must be an integer",
          "id": "3F1FKVRR",
          "meta": {
            "timestamp": 1458609066
          },
          "status": "400"
        },
        "js": {
          "title": "js",
          "type": "object"
        },
        "method": {
          "links": [
            {
              "href": "/api/v1/method/users/{id}/follow/{type}",
              "mediaType": "application/vnd.goa.error",
              "method": "GET",
              "rel": "etc",
              "targetSchema": {
                "$ref": "#/definitions/error"
              },
              "title": "etc"
            },
            {
              "href": "/api/v1/method/users/follow",
              "mediaType": "application/vnd.goa.error",
              "method": "PUT",
              "rel": "follow",
              "targetSchema": {
                "$ref": "#/definitions/error"
              },
              "title": "follow"
            },
            {
              "href": "/api/v1/method/users/follow",
              "mediaType": "application/vnd.goa.error",
              "method": "DELETE",
              "rel": "follow",
              "targetSchema": {
                "$ref": "#/definitions/error"
              },
              "title": "follow"
            },
            {
              "href": "/api/v1/method/list",
              "mediaType": "application/vnd.goa.error",
              "method": "GET",
              "rel": "list",
              "targetSchema": {
                "$ref": "#/definitions/error"
              },
              "title": "list"
            },
            {
              "href": "/api/v1/method/list/new",
              "mediaType": "application/vnd.goa.error",
              "method": "GET",
              "rel": "list",
              "targetSchema": {
                "$ref": "#/definitions/error"
              },
              "title": "list"
            },
            {
              "href": "/api/v1/method/list/topic",
              "mediaType": "application/vnd.goa.error",
              "method": "GET",
              "rel": "list",
              "targetSchema": {
                "$ref": "#/definitions/error"
              },
              "title": "list"
            },
            {
              "href": "/api/v1/method/get",
              "mediaType": "application/vnd.goa.error",
              "method": "GET",
              "rel": "method",
              "targetSchema": {
                "$ref": "#/definitions/error"
              },
              "title": "method"
            },
            {
              "href": "/api/v1/method/post",
              "mediaType": "application/vnd.goa.error",
              "method": "POST",
              "rel": "method",
              "targetSchema": {
                "$ref": "#/definitions/error"
              },
              "title": "method"
            },
            {
              "href": "/api/v1/method/delete",
              "mediaType": "application/vnd.goa.error",
              "method": "DELETE",
              "rel": "method",
              "targetSchema": {
                "$ref": "#/definitions/error"
              },
              "title": "method"
            },
            {
              "href": "/api/v1/method/put",
              "mediaType": "application/vnd.goa.error",
              "method": "PUT",
              "rel": "method",
              "targetSchema": {
                "$ref": "#/definitions/error"
              },
              "title": "method"
            }
          ],
          "title": "method",
          "type": "object"
        },
        "response": {
          "links": [
            {
              "href": "/api/v1/response/users/array",
              "mediaType": "application/vnd.goa.error",
              "method": "GET",
              "rel": "array",
              "targetSchema": {
                "$ref": "#/definitions/error"
              },
              "title": "array"
            },
            {
              "href": "/api/v1/response/users/hash",
              "mediaType": "application/vnd.goa.error",
              "method": "GET",
              "rel": "hash",
              "targetSchema": {
                "$ref": "#/definitions/error"
              },
              "title": "hash"
            },
            {
              "href": "/api/v1/response/users",
              "mediaType": "application/vnd.goa.error",
              "method": "GET",
              "rel": "list",
              "targetSchema": {
                "$ref": "#/definitions/error"
              },
              "title": "list"
            },
            {
              "href": "/api/v1/response/users/nested",
              "method": "GET",
              "rel": "nested",
              "title": "nested"
            },
            {
              "href": "/api/v1/response/users/{id}",
              "mediaType": "application/vnd.goa.error",
              "method": "GET",
              "rel": "self",
              "targetSchema": {
                "$ref": "#/definitions/error"
              },
              "title": "show"
            }
          ],
          "title": "response",
          "type": "object"
        },
        "security": {
          "links": [
            {
              "href": "/api/v1/securiy/",
              "mediaType": "application/vnd.goa.error",
              "method": "GET",
              "rel": "security",
              "targetSchema": {
                "$ref": "#/definitions/error"
              },
              "title": "security"
            }
          ],
          "title": "security",
          "type": "object"
        },
        "swagger": {
          "title": "swagger",
          "type": "object"
        },
        "validation": {
          "links": [
            {
              "href": "/api/v1/validation/",
              "mediaType": "application/vnd.goa.error",
              "method": "GET",
              "rel": "validation",
              "targetSchema": {
                "$ref": "#/definitions/error"
              },
              "title": "validation"
            }
          ],
          "title": "validation",
          "type": "object"
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on minimum keyword",
      "valid": false,
      "rust_error": "-1 is less than the minimum of 0",
      "python_error": "-1 is less than the minimum of 0\n\nFailed validating 'minimum' in schema['properties']['UpdateBottlesDataPayload']['properties']['quantity']:\n    {'default': 0,\n     'description': '数量',\n     'example': 10,\n     'minimum': 0,\n     'type': 'integer'}\n\nOn instance['UpdateBottlesDataPayload']['quantity']:\n    -1",
      "data": {
        "UpdateBottlesDataPayload": {
          "name": "赤ワインなにか",
          "quantity": -1
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on format keyword",
      "valid": false,
      "rust_error": "\"not an email\" is not a \"email\"",
      "python_error": "'not an email' is not a 'email'\n\nFailed validating 'format' in schema['properties']['AddAccountsDataPayload']['properties']['email']:\n    {'description': 'email',\n     'example': 'example@gmail.com',\n     'format': 'email',\n     'type': 'string'}\n\nOn instance['AddAccountsDataPayload']['email']:\n    'not an email'",
      "data": {
        "AddAccountsDataPayload": {
          "email": "not an email",
          "name": "山田 太郎"
        },
        "AddAccountsPayload": {
          "email": "example@gmail.com",
          "name": "山田 太郎"
        },
        "AddBottlesDataPayload": {
          "account_id": 1,
          "name": "赤ワインなにか",
          "quantity": 0
        },
        "AddBottlesPayload": {
          "account_id": 1,
          "name": "赤ワインなにか",
          "quantity": 0
        },
        "UpdateAccountsDataPayload": {
          "email": "maiya@stoltenberg.info",
          "name": "Enim et."
        },
        "UpdateAccountsPayload": {
          "email": "claire.kiehn@ward.net",
          "name": "Eum illum nemo."
        },
        "UpdateBottlesDataPayload": {
          "name": "赤ワインなにか",
          "quantity": 10
        },
        "UpdateBottlesPayload": {
          "name": "赤ワインなにか",
          "quantity": 0
        },
        "accounts": {
          "links": [
            {
              "href": "/api/v1/accounts/",
              "mediaType": "application/vnd.goa.error",
              "method": "POST",
              "rel": "add",
              "schema": {
                "$ref": "#/definitions/AddAccountsPayload",
                "description": "add payload"
              },
              "targetSchema": {
                "$ref": "#/definitions/error"
              },
              "title": "add"
            },
            {
              "href": "/api/v1/accounts/{id}",
              "mediaType": "application/vnd.goa.error",
              "method": "DELETE",
              "rel": "delete",
              "targetSchema": {
                "$ref": "#/definitions/error"
              },
              "title": "delete"
            },
            {
              "href": "/api/v1/accounts/",
              "mediaType": "application/vnd.goa.error",
              "method": "GET",
              "rel": "list",
              "targetSchema": {
                "$ref": "#/definitions/error"
              },
              "title": "list"
            },
            {
              "href": "/api/v1/accounts/{id}",
              "mediaType": "application/vnd.goa.error",
              "method": "GET",
              "rel": "self",
              "targetSchema": {
                "$ref": "#/definitions/error"
              },
              "title": "show"
            },
            {
              "href": "/api/v1/accounts/{id}",
              "mediaType": "application/vnd.goa.error",
              "method": "PUT",
              "rel": "update",
              "schema": {
                "$ref": "#/definitions/UpdateAccountsPayload",
                "description": "update payload"
              },
              "targetSchema": {
                "$ref": "#/definitions/error"
              },
              "title": "update"
            }
          ],
          "title": "accounts",
          "type": "object"
        },
        "accounts_data": {
          "links": [
            {
              "href": "/api/v1/accounts_data/",
              "mediaType": "application/vnd.goa.error",
              "method": "POST",
              "rel": "add",
              "schema": {
                "$ref": "#/definitions/AddAccountsDataPayload",
                "description": "add payload"
              },
              "targetSchema": {
                "$ref": "#/definitions/error"
              },
              "title": "add"
            },
            {
              "href": "/api/v1/accounts_data/{id}",
              "mediaType": "application/vnd.goa.error",
              "method": "DELETE",
              "rel": "delete",
              "targetSchema": {
                "$ref": "#/definitions/error"
              },
              "title": "delete"
            },
            {
              "href": "/api/v1/accounts_data/",
              "mediaType": "application/vnd.goa.error",
              "method": "GET",
              "rel": "list",
              "targetSchema": {
                "$ref": "#/definitions/error"
              },
              "title": "list"
            },
            {
              "href": "/api/v1/accounts_data/{id}",
              "mediaType": "application/vnd.goa.error",
              "method": "GET",
              "rel": "self",
              "targetSchema": {
                "$ref": "#/definitions/error"
              },
              "title": "show"
            },
            {
              "href": "/api/v1/accounts_data/{id}",
              "mediaType": "application/vnd.goa.error",
              "method": "PUT",
              "rel": "update",
              "schema": {
                "$ref": "#/definitions/UpdateAccountsDataPayload",
                "description": "update payload"
              },
              "targetSchema": {
                "$ref": "#/definitions/error"
              },
              "title": "update"
            }
          ],
          "title": "accounts_data",
          "type": "object"
        },
        "actions": {
          "links": [
            {
              "href": "/api/v1/actions/hello",
              "mediaType": "application/vnd.goa.error",
              "method": "GET",
              "rel": "hello",
              "targetSchema": {
                "$ref": "#/definitions/error"
              },
              "title": "hello"
            },
            {
              "href": "/api/v1/actions/{id}",
              "mediaType": "application/vnd.goa.error",
              "method": "GET",
              "rel": "id",
              "targetSchema": {
                "$ref": "#/definitions/error"
              },
              "title": "id"
            },
            {
              "href": "/api/v1/actions/ping",
              "mediaType": "application/vnd.goa.error",
              "method": "GET",
              "rel": "ping",
              "targetSchema": {
                "$ref": "#/definitions/error"
              },
              "title": "ping"
            }
          ],
          "title": "actions",
          "type": "object"
        },
        "bottles": {
          "links": [
            {
              "href": "/api/v1/bottles/",
              "mediaType": "application/vnd.goa.error",
              "method": "POST",
              "rel": "add",
              "schema": {
                "$ref": "#/definitions/AddBottlesPayload",
                "description": "add payload"
              },
              "targetSchema": {
                "$ref": "#/definitions/error"
              },
              "title": "add"
            },
            {
              "href": "/api/v1/bottles/{id}",
              "mediaType": "application/vnd.goa.error",
              "method": "DELETE",
              "rel": "delete",
              "targetSchema": {
                "$ref": "#/definitions/error"
              },
              "title": "delete"
            },
            {
              "href": "/api/v1/bottles/",
              "mediaType": "application/vnd.goa.error",
              "method": "GET",
              "rel": "list",
              "targetSchema": {
                "$ref": "#/definitions/error"
              },
              "title": "list"
            },
            {
              "href": "/api/v1/bottles/relation",
              "mediaType": "application/vnd.goa.error",
              "method": "GET",
              "rel": "listRelation",
              "targetSchema": {
                "$ref": "#/definitions/error"
              },
              "title": "listRelation"
            },
            {
              "href": "/api/v1/bottles/{id}",
              "mediaType": "application/vnd.goa.error",
              "method": "GET",
              "rel": "self",
              "targetSchema": {
                "$ref": "#/definitions/error"
              },
              "title": "show"
            },
            {
              "href": "/api/v1/bottles/{id}",
              "mediaType": "application/vnd.goa.error",
              "method": "PUT",
              "rel": "update",
              "schema": {
                "$ref": "#/definitions/UpdateBottlesPayload",
                "description": "update payload"
              },
              "targetSchema": {
                "$ref": "#/definitions/error"
              },
              "title": "update"
            }
          ],
          "title": "bottles",
          "type": "object"
        },
        "bottles_data": {
          "links": [
            {
              "href": "/api/v1/bottles_data/",
              "mediaType": "application/vnd.goa.error",
              "method": "POST",
              "rel": "add",
              "schema": {
                "$ref": "#/definitions/AddBottlesDataPayload",
                "description": "add payload"
              },
              "targetSchema": {
                "$ref": "#/definitions/error"
              },
              "title": "add"
            },
            {
              "href": "/api/v1/bottles_data/{id}",
              "mediaType": "application/vnd.goa.error",
              "method": "DELETE",
              "rel": "delete",
              "targetSchema": {
                "$ref": "#/definitions/error"
              },
              "title": "delete"
            },
            {
              "href": "/api/v1/bottles_data/",
              "mediaType": "application/vnd.goa.error",
              "method": "GET",
              "rel": "list",
              "targetSchema": {
                "$ref": "#/definitions/error"
              },
              "title": "list"
            },
            {
              "href": "/api/v1/bottles_data/{id}",
              "mediaType": "application/vnd.goa.error",
              "method": "GET",
              "rel": "self",
              "targetSchema": {
                "$ref": "#/definitions/error"
              },
              "title": "show"
            },
            {
              "href": "/api/v1/bottles_data/{id}",
              "mediaType": "application/vnd.goa.error",
              "method": "PUT",
              "rel": "update",
              "schema": {
                "$ref": "#/definitions/UpdateBottlesDataPayload",
                "description": "update payload"
              },
              "targetSchema": {
                "$ref": "#/definitions/error"
              },
              "title": "update"
            }
          ],
          "title": "bottles_data",
          "type": "object"
        },
        "error": {
          "code": "invalid_value",
          "detail": "Value of ID must be an integer",
          "id": "3F1FKVRR",
          "meta": {
            "timestamp": 1458609066
          },
          "status": "400"
        },
        "js": {
          "title": "js",
          "type": "object"
        },
        "method": {
          "links": [
            {
              "href": "/api/v1/method/users/{id}/follow/{type}",
              "mediaType": "application/vnd.goa.error",
              "method": "GET",
              "rel": "etc",
              "targetSchema": {
                "$ref": "#/definitions/error"
              },
              "title": "etc"
            },
            {
              "href": "/api/v1/method/users/follow",
              "mediaType": "application/vnd.goa.error",
              "method": "PUT",
              "rel": "follow",
              "targetSchema": {
                "$ref": "#/definitions/error"
              },
              "title": "follow"
            },
            {
              "href": "/api/v1/method/users/follow",
              "mediaType": "application/vnd.goa.error",
              "method": "DELETE",
              "rel": "follow",
              "targetSchema": {
                "$ref": "#/definitions/error"
              },
              "title": "follow"
            },
            {
              "href": "/api/v1/method/list",
              "mediaType": "application/vnd.goa.error",
              "method": "GET",
              "rel": "list",
              "targetSchema": {
                "$ref": "#/definitions/error"
              },
              "title": "list"
            },
            {
              "href": "/api/v1/method/list/new",
              "mediaType": "application/vnd.goa.error",
              "method": "GET",
              "rel": "list",
              "targetSchema": {
                "$ref": "#/definitions/error"
              },
              "title": "list"
            },
            {
              "href": "/api/v1/method/list/topic",
              "mediaType": "application/vnd.goa.error",
              "method": "GET",
              "rel": "list",
              "targetSchema": {
                "$ref": "#/definitions/error"
              },
              "title": "list"
            },
            {
              "href": "/api/v1/method/get",
              "mediaType": "application/vnd.goa.error",
              "method": "GET",
              "rel": "method",
              "targetSchema": {
                "$ref": "#/definitions/error"
              },
              "title": "method"
            },
            {
              "href": "/api/v1/method/post",
              "mediaType": "application/vnd.goa.error",
              "method": "POST",
              "rel": "method",
              "targetSchema": {
                "$ref": "#/definitions/error"
              },
              "title": "method"
            },
            {
              "href": "/api/v1/method/delete",
              "mediaType": "application/vnd.goa.error",
              "method": "DELETE",
              "rel": "method",
              "targetSchema": {
                "$ref": "#/definitions/error"
              },
              "title": "method"
            },
            {
              "href": "/api/v1/method/put",
              "mediaType": "application/vnd.goa.error",
              "method": "PUT",
              "rel": "method",
              "targetSchema": {
                "$ref": "#/definitions/error"
              },
              "title": "method"
            }
          ],
          "title": "method",
          "type": "object"
        },
        "response": {
          "links": [
            {
              "href": "/api/v1/response/users/array",
              "mediaType": "application/vnd.goa.error",
              "method": "GET",
              "rel": "array",
              "targetSchema": {
                "$ref": "#/definitions/error"
              },
              "title": "array"
            },
            {
              "href": "/api/v1/response/users/hash",
              "mediaType": "application/vnd.goa.error",
              "method": "GET",
              "rel": "hash",
              "targetSchema": {
                "$ref": "#/definitions/error"
              },
              "title": "hash"
            },
            {
              "href": "/api/v1/response/users",
              "mediaType": "application/vnd.goa.error",
              "method": "GET",
              "rel": "list",
              "targetSchema": {
                "$ref": "#/definitions/error"
              },
              "title": "list"
            },
            {
              "href": "/api/v1/response/users/nested",
              "method": "GET",
              "rel": "nested",
              "title": "nested"
            },
            {
              "href": "/api/v1/response/users/{id}",
              "mediaType": "application/vnd.goa.error",
              "method": "GET",
              "rel": "self",
              "targetSchema": {
                "$ref": "#/definitions/error"
              },
              "title": "show"
            }
          ],
          "title": "response",
          "type": "object"
        },
        "security": {
          "links": [
            {
              "href": "/api/v1/securiy/",
              "mediaType": "application/vnd.goa.error",
              "method": "GET",
              "rel": "security",
              "targetSchema": {
                "$ref": "#/definitions/error"
              },
              "title": "security"
            }
          ],
          "title": "security",
          "type": "object"
        },
        "swagger": {
          "title": "swagger",
          "type": "object"
        },
        "validation": {
          "links": [
            {
              "href": "/api/v1/validation/",
              "mediaType": "application/vnd.goa.error",
              "method": "GET",
              "rel": "validation",
              "targetSchema": {
                "$ref": "#/definitions/error"
              },
              "title": "validation"
            }
          ],
          "title": "validation",
          "type": "object"
        }
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"invalid_email\" is not a \"email\"",
      "python_error": "'invalid_email' is not a 'email'\n\nFailed validating 'format' in schema['properties']['AddAccountsDataPayload']['properties']['email']:\n    {'description': 'email',\n     'example': 'example@gmail.com',\n     'format': 'email',\n     'type': 'string'}\n\nOn instance['AddAccountsDataPayload']['email']:\n    'invalid_email'",
      "data": {
        "AddAccountsDataPayload": {
          "email": "invalid_email",
          "name": "山田 太郎"
        },
        "AddAccountsPayload": {
          "email": "example@gmail.com",
          "name": "山田 太郎"
        },
        "AddBottlesDataPayload": {
          "account_id": 1,
          "name": "赤ワインなにか",
          "quantity": -1
        },
        "AddBottlesPayload": {
          "account_id": 1,
          "name": "赤クインなにか",
          "quantity": 0
        },
        "UpdateAccountsDataPayload": {
          "email": "maiya@stoltenberg.info",
          "name": "Enim et."
        },
        "UpdateAccountsPayload": {
          "email": "claire.kiehn@ward.net",
          "name": "Eum illum nemo."
        },
        "UpdateBottlesDataPayload": {
          "name": "赤インなにか",
          "quantity": 11
        },
        "UpdateBottlesPayload": {
          "name": "赤インなにか",
          "quantity": 0
        },
        "accounts": {
          "links": [
            {
              "href": "/api/v1/accounts/",
              "mediaType": "application/vnd.goa.error",
              "method": "POST",
              "rel": "add",
              "schema": {
                "$ref": "#/definitions/AddAccountsPayload",
                "description": "add payload"
              },
              "targetSchema": {
                "$ref": "#/definitions/error"
              },
              "title": "add"
            },
            {
              "href": "/api/v1/accounts/{id}",
              "mediaType": "application/vnd.goa.error",
              "method": "DELETE",
              "rel": "delete",
              "targetSchema": {
                "$ref": "#/definitions/error"
              },
              "title": "delete"
            },
            {
              "href": "/api/v1/accounts/",
              "mediaType": "application/vnd.goa.error",
              "method": "GET",
              "rel": "list",
              "targetSchema": {
                "$ref": "#/definitions/error"
              },
              "title": "list"
            },
            {
              "href": "/api/v1/accounts/{id}",
              "mediaType": "application/vnd.goa.error",
              "method": "GET",
              "rel": "self",
              "targetSchema": {
                "$ref": "#/definitions/error"
              },
              "title": "show"
            },
            {
              "href": "/api/v1/accounts/{id}",
              "mediaType": "application/vnd.goa.error",
              "method": "PUT",
              "rel": "update",
              "schema": {
                "$ref": "#/definitions/UpdateAccountsPayload",
                "description": "update payload"
              },
              "targetSchema": {
                "$ref": "#/definitions/error"
              },
              "title": "update"
            }
          ],
          "title": "accounts",
          "type": "object"
        },
        "accounts_data": {
          "links": [
            {
              "href": "/api/v1/accounts_data/",
              "mediaType": "application/vnd.goa.error",
              "method": "POST",
              "rel": "add",
              "schema": {
                "$ref": "#/definitions/AddAccountsDataPayload",
                "description": "add payload"
              },
              "targetSchema": {
                "$ref": "#/definitions/error"
              },
              "title": "add"
            },
            {
              "href": "/api/v1/accounts_data/{id}",
              "mediaType": "application/vnd.goa.error",
              "method": "DELETE",
              "rel": "delete",
              "targetSchema": {
                "$ref": "#/definitions/error"
              },
              "title": "delete"
            },
            {
              "href": "/api/v1/accounts_data/",
              "mediaType": "application/vnd.goa.error",
              "method": "GET",
              "rel": "list",
              "targetSchema": {
                "$ref": "#/definitions/error"
              },
              "title": "list"
            },
            {
              "href": "/api/v1/accounts_data/{id}",
              "mediaType": "application/vnd.goa.error",
              "method": "GET",
              "rel": "self",
              "targetSchema": {
                "$ref": "#/definitions/error"
              },
              "title": "show"
            },
            {
              "href": "/api/v1/accounts_data/{id}",
              "mediaType": "application/vnd.goa.error",
              "method": "PUT",
              "rel": "update",
              "schema": {
                "$ref": "#/definitions/UpdateAccountsDataPayload",
                "description": "update payload"
              },
              "targetSchema": {
                "$ref": "#/definitions/error"
              },
              "title": "update"
            }
          ],
          "title": "accounts_data",
          "type": "object"
        },
        "actions": {
          "links": [
            {
              "href": "/api/v1/actions/hello",
              "mediaType": "application/vnd.goa.error",
              "method": "GET",
              "rel": "hello",
              "targetSchema": {
                "$ref": "#/definitions/error"
              },
              "title": "hello"
            },
            {
              "href": "/api/v1/actions/{id}",
              "mediaType": "application/vnd.goa.error",
              "method": "GET",
              "rel": "id",
              "targetSchema": {
                "$ref": "#/definitions/error"
              },
              "title": "id"
            },
            {
              "href": "/api/v1/actions/ping",
              "mediaType": "application/vnd.goa.error",
              "method": "GET",
              "rel": "ping",
              "targetSchema": {
                "$ref": "#/definitions/error"
              },
              "title": "ping"
            }
          ],
          "title": "actions",
          "type": "object"
        },
        "bottles": {
          "links": [
            {
              "href": "/api/v1/bottles/",
              "mediaType": "application/vnd.goa.error",
              "method": "POST",
              "rel": "add",
              "schema": {
                "$ref": "#/definitions/AddBottlesPayload",
                "description": "add payload"
              },
              "targetSchema": {
                "$ref": "#/definitions/error"
              },
              "title": "add"
            },
            {
              "href": "/api/v1/bottles/{id}",
              "mediaType": "application/vnd.goa.error",
              "method": "DELETE",
              "rel": "delete",
              "targetSchema": {
                "$ref": "#/definitions/error"
              },
              "title": "delete"
            },
            {
              "href": "/api/v1/bottles/",
              "mediaType": "application/vnd.goa.error",
              "method": "GET",
              "rel": "list",
              "targetSchema": {
                "$ref": "#/definitions/error"
              },
              "title": "list"
            },
            {
              "href": "/api/v1/bottles/relation",
              "mediaType": "application/vnd.goa.error",
              "method": "GET",
              "rel": "listRelation",
              "targetSchema": {
                "$ref": "#/definitions/error"
              },
              "title": "listRelation"
            },
            {
              "href": "/api/v1/bottles/{id}",
              "mediaType": "application/vnd.goa.error",
              "method": "GET",
              "rel": "self",
              "targetSchema": {
                "$ref": "#/definitions/error"
              },
              "title": "show"
            },
            {
              "href": "/api/v1/bottles/{id}",
              "mediaType": "application/vnd.goa.error",
              "method": "PUT",
              "rel": "update",
              "schema": {
                "$ref": "#/definitions/UpdateBottlesPayload",
                "description": "update payload"
              },
              "targetSchema": {
                "$ref": "#/definitions/error"
              },
              "title": "update"
            }
          ],
          "title": "bottles",
          "type": "object"
        },
        "bottles_data": {
          "links": [
            {
              "href": "/api/v1/bottles_data/",
              "mediaType": "application/vnd.goa.error",
              "method": "POST",
              "rel": "add",
              "schema": {
                "$ref": "#/definitions/AddBottlesDataPayload",
                "description": "add payload"
              },
              "targetSchema": {
                "$ref": "#/definitions/error"
              },
              "title": "add"
            },
            {
              "href": "/api/v1/bottles_data/{id}",
              "mediaType": "application/vnd.goa.error",
              "method": "DELETE",
              "rel": "delete",
              "targetSchema": {
                "$ref": "#/definitions/error"
              },
              "title": "delete"
            },
            {
              "href": "/api/v1/bottles_data/",
              "mediaType": "application/vnd.goa.error",
              "method": "GET",
              "rel": "list",
              "targetSchema": {
                "$ref": "#/definitions/error"
              },
              "title": "list"
            },
            {
              "href": "/api/v1/bottles_data/{id}",
              "mediaType": "application/vnd.goa.error",
              "method": "GET",
              "rel": "self",
              "targetSchema": {
                "$ref": "#/definitions/error"
              },
              "title": "show"
            },
            {
              "href": "/api/v1/bottles_data/{id}",
              "mediaType": "application/vnd.goa.error",
              "method": "PUT",
              "rel": "update",
              "schema": {
                "$ref": "#/definitions/UpdateBottlesDataPayload",
                "description": "update payload"
              },
              "targetSchema": {
                "$ref": "#/definitions/error"
              },
              "title": "update"
            }
          ],
          "title": "bottles_data",
          "type": "object"
        },
        "error": {
          "code": "invalid_value",
          "detail": "Value of ID must be an integer",
          "id": "3F1FKVRR",
          "meta": {
            "timestamp": 1458609066
          },
          "status": "400"
        },
        "js": {
          "title": "js",
          "type": "object"
        },
        "method": {
          "links": [
            {
              "href": "/api/v1/method/users/{id}/follow/{type}",
              "mediaType": "application/vnd.goa.error",
              "method": "GET",
              "rel": "etc",
              "targetSchema": {
                "$ref": "#/definitions/error"
              },
              "title": "etc"
            },
            {
              "href": "/api/v1/method/users/follow",
              "mediaType": "application/vnd.goa.error",
              "method": "PUT",
              "rel": "follow",
              "targetSchema": {
                "$ref": "#/definitions/error"
              },
              "title": "follow"
            },
            {
              "href": "/api/v1/method/users/follow",
              "mediaType": "application/vnd.goa.error",
              "method": "DELETE",
              "rel": "follow",
              "targetSchema": {
                "$ref": "#/definitions/error"
              },
              "title": "follow"
            },
            {
              "href": "/api/v1/method/list",
              "mediaType": "application/vnd.goa.error",
              "method": "GET",
              "rel": "list",
              "targetSchema": {
                "$ref": "#/definitions/error"
              },
              "title": "list"
            },
            {
              "href": "/api/v1/method/list/new",
              "mediaType": "application/vnd.goa.error",
              "method": "GET",
              "rel": "list",
              "targetSchema": {
                "$ref": "#/definitions/error"
              },
              "title": "list"
            },
            {
              "href": "/api/v1/method/list/topic",
              "mediaType": "application/vnd.goa.error",
              "method": "GET",
              "rel": "list",
              "targetSchema": {
                "$ref": "#/definitions/error"
              },
              "title": "list"
            },
            {
              "href": "/api/v1/method/get",
              "mediaType": "application/vnd.goa.error",
              "method": "GET",
              "rel": "method",
              "targetSchema": {
                "$ref": "#/definitions/error"
              },
              "title": "method"
            },
            {
              "href": "/api/v1/method/post",
              "mediaType": "application/vnd.goa.error",
              "method": "POST",
              "rel": "method",
              "targetSchema": {
                "$ref": "#/definitions/error"
              },
              "title": "method"
            },
            {
              "href": "/api/v1/method/delete",
              "mediaType": "application/vnd.goa.error",
              "method": "DELETE",
              "rel": "method",
              "targetSchema": {
                "$ref": "#/definitions/error"
              },
              "title": "method"
            },
            {
              "href": "/api/v1/method/put",
              "mediaType": "application/vnd.goa.error",
              "method": "PUT",
              "rel": "method",
              "targetSchema": {
                "$ref": "#/definitions/error"
              },
              "title": "method"
            }
          ],
          "title": "method",
          "type": "object"
        },
        "response": {
          "links": [
            {
              "href": "/api/v1/response/users/array",
              "mediaType": "application/vnd.goa.error",
              "method": "GET",
              "rel": "array",
              "targetSchema": {
                "$ref": "#/definitions/error"
              },
              "title": "array"
            },
            {
              "href": "/api/v1/response/users/hash",
              "mediaType": "application/vnd.goa.error",
              "method": "GET",
              "rel": "hash",
              "targetSchema": {
                "$ref": "#/definitions/error"
              },
              "title": "hash"
            },
            {
              "href": "/api/v1/response/users",
              "mediaType": "application/vnd.goa.error",
              "method": "GET",
              "rel": "list",
              "targetSchema": {
                "$ref": "#/definitions/error"
              },
              "title": "list"
            },
            {
              "href": "/api/v1/response/users/nested",
              "method": "GET",
              "rel": "nested",
              "title": "nested"
            },
            {
              "href": "/api/v1/response/users/{id}",
              "mediaType": "application/vnd.goa.error",
              "method": "GET",
              "rel": "self",
              "targetSchema": {
                "$ref": "#/definitions/error"
              },
              "title": "show"
            }
          ],
          "title": "response",
          "type": "object"
        },
        "security": {
          "links": [
            {
              "href": "/api/v1/securiy/",
              "mediaType": "application/vnd.goa.error",
              "method": "GET",
              "rel": "security",
              "targetSchema": {
                "$ref": "#/definitions/error"
              },
              "title": "security"
            }
          ],
          "title": "security",
          "type": "object"
        },
        "swagger": {
          "title": "swagger",
          "type": "object"
        },
        "validation": {
          "links": [
            {
              "href": "/api/v1/validation/",
              "mediaType": "application/vnd.goa.error",
              "method": "GET",
              "rel": "validation",
              "targetSchema": {
                "$ref": "#/definitions/error"
              },
              "title": "validation"
            }
          ],
          "title": "validation",
          "type": "object"
        }
      }
    }
  ]
}