{
  "description": "sample Snowplow/sp_353_Normalized.json",
  "meta": {
    "full_size": 3096,
    "stripped_size": 2894,
    "features": [
      "@minmaxInteger",
      "@minmaxLength",
      "@minmaxProperties",
      "@siblingKeys",
      "additionalProperties",
      "enum",
      "items",
      "oneOf",
      "pattern"
    ],
    "raw_features": [
      "_boolSchema",
      "maxProperties",
      "maximum",
      "minLength",
      "minProperties",
      "minimum",
      "properties",
      "required",
      "type",
      "type:array",
      "type:boolean",
      "type:integer",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "additionalProperties": false,
    "description": "Schema for SQL Query enrichment configuration",
    "properties": {
      "enabled": {
        "type": "boolean"
      },
      "name": {
        "type": "string"
      },
      "parameters": {
        "additionalProperties": false,
        "properties": {
          "cache": {
            "additionalProperties": false,
            "properties": {
              "size": {
                "minimum": 0,
                "type": "integer"
              },
              "ttl": {
                "maximum": 86400,
                "minimum": 0,
                "type": "integer"
              }
            },
            "required": [
              "size",
              "ttl"
            ],
            "type": "object"
          },
          "database": {
            "additionalProperties": true,
            "oneOf": [
              {
                "additionalProperties": false,
                "properties": {
                  "postgresql": {
                    "additionalProperties": false,
                    "properties": {
                      "database": {
                        "minLength": 1,
                        "type": "string"
                      },
                      "host": {
                        "type": "string"
                      },
                      "password": {
                        "type": "string"
                      },
                      "port": {
                        "maximum": 65535,
                        "minimum": 1,
                        "type": "integer"
                      },
                      "sslMode": {
                        "type": "boolean"
                      },
                      "username": {
                        "minLength": 1,
                        "type": "string"
                      }
                    },
                    "required": [
                      "host",
                      "port",
                      "sslMode",
                      "username",
                      "password",
                      "database"
                    ],
                    "type": "object"
                  }
                },
                "required": [
                  "postgresql"
                ],
                "type": "object"
              },
              {
                "properties": {
                  "mysql": {
                    "additionalProperties": false,
                    "properties": {
                      "database": {
                        "minLength": 1,
                        "type": "string"
                      },
                      "host": {
                        "type": "string"
                      },
                      "password": {
                        "type": "string"
                      },
                      "port": {
                        "maximum": 65535,
                        "minimum": 1,
                        "type": "integer"
                      },
                      "sslMode": {
                        "type": "boolean"
                      },
                      "username": {
                        "minLength": 1,
                        "type": "string"
                      }
                    },
                    "required": [
                      "host",
                      "port",
                      "sslMode",
                      "username",
                      "password",
                      "database"
                    ],
                    "type": "object"
                  }
                },
                "required": [
                  "mysql"
                ],
                "type": "object"
              }
            ]
          },
          "inputs": {
            "items": {
              "additionalProperties": false,
              "maxProperties": 2,
              "minProperties": 2,
              "properties": {
                "json": {
                  "additionalProperties": false,
                  "properties": {
                    "field": {
                      "enum": [
                        "unstruct_event",
                        "contexts",
                        "derived_contexts"
                      ],
                      "type": "string"
                    },
                    "jsonPath": {
                      "type": "string"
                    },
                    "schemaCriterion": {
                      "pattern": "^iglu:([a-zA-Z0-9-_.]+)/([a-zA-Z0-9-_]+)/([a-zA-Z0-9-_]+)/([1-9][0-9]*|\\*)-((?:0|[1-9][0-9]*)|\\*)-((?:0|[1-9][0-9]*)|\\*)$",
                      "type": "string"
                    }
                  },
                  "required": [
                    "field",
                    "schemaCriterion",
                    "jsonPath"
                  ],
                  "type": "object"
                },
                "placeholder": {
                  "maximum": 64,
                  "minimum": 1,
                  "type": "integer"
                },
                "pojo": {
                  "additionalProperties": false,
                  "properties": {
                    "field": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "field"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "placeholder"
              ],
              "type": "object"
            },
            "type": "array"
          },
          "output": {
            "additionalProperties": false,
            "properties": {
              "expectedRows": {
                "enum": [
                  "AT_LEAST_ONE",
                  "AT_LEAST_ZERO",
                  "AT_MOST_ONE",
                  "EXACTLY_ONE"
                ],
                "type": "string"
              },
              "json": {
                "additionalProperties": false,
                "properties": {
                  "describes": {
                    "enum": [
                      "ALL_ROWS",
                      "EVERY_ROW"
                    ],
                    "type": "string"
                  },
                  "propertyNames": {
                    "enum": [
                      "AS_IS",
                      "CAMEL_CASE",
                      "PASCAL_CASE",
                      "SNAKE_CASE",
                      "LOWER_CASE",
                      "UPPER_CASE"
                    ],
                    "type": "string"
                  },
                  "schema": {
                    "pattern": "^iglu:([a-zA-Z0-9-_.]+)/([a-zA-Z0-9-_]+)/([a-zA-Z0-9-_]+)/([1-9][0-9]*(?:-(?:0|[1-9][0-9]*)){2})$",
                    "type": "string"
                  }
                },
                "required": [
                  "schema",
                  "propertyNames",
                  "describes"
                ],
                "type": "object"
              }
            },
            "type": "object"
          },
          "query": {
            "additionalProperties": false,
            "properties": {
              "sql": {
                "type": "string"
              }
            },
            "required": [
              "sql"
            ],
            "type": "object"
          }
        },
        "required": [
          "inputs",
          "database",
          "query",
          "output",
          "cache"
        ],
        "type": "object"
      },
      "vendor": {
        "type": "string"
      }
    },
    "required": [
      "name",
      "vendor",
      "enabled",
      "parameters"
    ],
    "self": {
      "format": "jsonschema",
      "name": "sql_query_enrichment_config",
      "vendor": "com.snowplowanalytics.snowplow.enrichments",
      "version": "1-0-0"
    },
    "type": "object"
  },
  "tests": [
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "enabled": true,
        "name": "my_sql_query_enrichment",
        "parameters": {
          "cache": {
            "size": 100,
            "ttl": 3600
          },
          "database": {
            "postgresql": {
              "database": "my_database",
              "host": "localhost",
              "password": "my_password",
              "port": 5432,
              "sslMode": true,
              "username": "my_username"
            }
          },
          "inputs": [
            {
              "json": {
                "field": "unstruct_event",
                "jsonPath": "$.data",
                "schemaCriterion": "iglu:com.snowplowanalytics.snowplow/unstruct_event/jsonschema/1-0-0"
              },
              "placeholder": 1
            },
            {
              "placeholder": 2,
              "pojo": {
                "field": "my_field"
              }
            }
          ],
          "output": {
            "expectedRows": "AT_LEAST_ONE",
            "json": {
              "describes": "EVERY_ROW",
              "propertyNames": "CAMEL_CASE",
              "schema": "iglu:com.snowplowanalytics.snowplow/my_event/jsonschema/1-0-0"
            }
          },
          "query": {
            "sql": "SELECT * FROM my_table WHERE my_column = ?"
          }
        },
        "vendor": "com.snowplowanalytics.snowplow.enrichments"
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "enabled": true,
        "name": "my_sql_query_enrichment",
        "parameters": {
          "cache": {
            "size": 100,
            "ttl": 3600
          },
          "database": {
            "postgresql": {
              "database": "my_database",
              "host": "localhost",
              "password": "my_password",
              "port": 5432,
              "sslMode": false,
              "username": "my_username"
            }
          },
          "inputs": [
            {
              "json": {
                "field": "unstruct_event",
                "jsonPath": "$.data",
                "schemaCriterion": "iglu:com.snowplowanalytics.snowplow/unstruct_event/jsonschema/1-0-0"
              },
              "placeholder": 1
            }
          ],
          "output": {
            "expectedRows": "AT_LEAST_ONE",
            "json": {
              "describes": "ALL_ROWS",
              "propertyNames": "AS_IS",
              "schema": "iglu:com.snowplowanalytics.snowplow/unstruct_event/jsonschema/1-0-0"
            }
          },
          "query": {
            "sql": "SELECT * FROM my_table WHERE my_column = ?"
          }
        },
        "vendor": "com.snowplowanalytics.snowplow.enrichments"
      }
    },
    {
      "description": "llama-70b generated negative; focus on pattern keyword",
      "valid": false,
      "rust_error": "\"invalid_schema_criterion\" does not match \"^iglu:([a-zA-Z0-9-_.]+)/([a-zA-Z0-9-_]+)/([a-zA-Z0-9-_]+)/([1-9][0-9]*|\\*)-((?:0|[1-9][0-9]*)|\\*)-((?:0|[1-9][0-9]*)|\\*)$\"",
      "python_error": "'iglu:com.snowplowanalytics.snowplow/unstruct_event/jsonschema/abc' does not match '^iglu:([a-zA-Z0-9-_.]+)/([a-zA-Z0-9-_]+)/([a-zA-Z0-9-_]+)/([1-9][0-9]*(?:-(?:0|[1-9][0-9]*)){2})$'\n\nFailed validating 'pattern' in schema['properties']['parameters']['properties']['output']['properties']['json']['properties']['schema']:\n    {'pattern': '^iglu:([a-zA-Z0-9-_.]+)/([a-zA-Z0-9-_]+)/([a-zA-Z0-9-_]+)/([1-9][0-9]*(?:-(?:0|[1-9][0-9]*)){2})$',\n     'type': 'string'}\n\nOn instance['parameters']['output']['json']['schema']:\n    'iglu:com.snowplowanalytics.snowplow/unstruct_event/jsonschema/abc'",
      "data": {
        "enabled": true,
        "name": "my_sql_query_enrichment",
        "parameters": {
          "cache": {
            "size": 100,
            "ttl": 3600
          },
          "database": {
            "postgresql": {
              "database": "my_database",
              "host": "localhost",
              "password": "my_password",
              "port": 5432,
              "sslMode": false,
              "username": "my_username"
            }
          },
          "inputs": [
            {
              "json": {
                "field": "unstruct_event",
                "jsonPath": "$.data",
                "schemaCriterion": "invalid_schema_criterion"
              },
              "placeholder": 1
            }
          ],
          "output": {
            "expectedRows": "AT_LEAST_ONE",
            "json": {
              "describes": "ALL_ROWS",
              "propertyNames": "AS_IS",
              "schema": "iglu:com.snowplowanalytics.snowplow/unstruct_event/jsonschema/abc"
            }
          },
          "query": {
            "sql": "SELECT * FROM my_table WHERE my_column = ?"
          }
        },
        "vendor": "com.snowplowanalytics.snowplow.enrichments"
      }
    },
    {
      "description": "llama-70b generated negative; focus on minimum keyword or maximum keyword",
      "valid": false,
      "rust_error": "-1 is less than the minimum of 0",
      "python_error": "-1 is less than the minimum of 0\n\nFailed validating 'minimum' in schema['properties']['parameters']['properties']['cache']['properties']['size']:\n    {'minimum': 0, 'type': 'integer'}\n\nOn instance['parameters']['cache']['size']:\n    -1",
      "data": {
        "enabled": true,
        "name": "my_sql_query_enrichment",
        "parameters": {
          "cache": {
            "size": -1,
            "ttl": 3600
          },
          "database": {
            "postgresql": {
              "database": "my_database",
              "host": "localhost",
              "password": "my_password",
              "port": 5432,
              "sslMode": false,
              "username": "my_username"
            }
          },
          "inputs": [
            {
              "json": {
                "field": "unstruct_event",
                "jsonPath": "$.data",
                "schemaCriterion": "iglu:com.snowplowanalytics.snowplow/unstruct_event/jsonschema/1-0-0"
              },
              "placeholder": 1
            }
          ],
          "output": {
            "expectedRows": "AT_LEAST_ONE",
            "json": {
              "describes": "ALL_ROWS",
              "propertyNames": "AS_IS",
              "schema": "iglu:com.snowplowanalytics.snowplow/unstruct_event/jsonschema/1-0-0"
            }
          },
          "query": {
            "sql": "SELECT * FROM my_table WHERE my_column = ?"
          }
        },
        "vendor": "com.snowplowanalytics.snowplow.enrichments"
      }
    },
    {
      "description": "llama-70b generated negative; focus on minLength keyword",
      "valid": false,
      "rust_error": "{\"postgresql\":{\"database\":\"\",\"host\":\"localhost\",\"password\":\"my_password\",\"port\":5432,\"sslMode\":false,\"username\":\"my_username\"}} is not valid under any of the schemas listed in the 'oneOf' keyword",
      "python_error": "'' should be non-empty\n\nFailed validating 'minLength' in schema[0]['properties']['postgresql']['properties']['database']:\n    {'minLength': 1, 'type': 'string'}\n\nOn instance['postgresql']['database']:\n    ''",
      "data": {
        "enabled": true,
        "name": "my_sql_query_enrichment",
        "parameters": {
          "cache": {
            "size": 100,
            "ttl": 3600
          },
          "database": {
            "postgresql": {
              "database": "",
              "host": "localhost",
              "password": "my_password",
              "port": 5432,
              "sslMode": false,
              "username": "my_username"
            }
          },
          "inputs": [
            {
              "json": {
                "field": "unstruct_event",
                "jsonPath": "$.data",
                "schemaCriterion": "iglu:com.snowplowanalytics.snowplow/unstruct_event/jsonschema/1-0-0"
              },
              "placeholder": 1
            }
          ],
          "output": {
            "expectedRows": "AT_LEAST_ONE",
            "json": {
              "describes": "ALL_ROWS",
              "propertyNames": "AS_IS",
              "schema": "iglu:com.snowplowanalytics.snowplow/unstruct_event/jsonschema/1-0-0"
            }
          },
          "query": {
            "sql": "SELECT * FROM my_table WHERE my_column = ?"
          }
        },
        "vendor": "com.snowplowanalytics.snowplow.enrichments"
      }
    },
    {
      "description": "llama-70b generated negative; focus on minProperties keyword or maxProperties keyword",
      "valid": false,
      "rust_error": "Additional properties are not allowed ('extraField' was unexpected)",
      "python_error": "Additional properties are not allowed ('extraField' was unexpected)\n\nFailed validating 'additionalProperties' in schema['properties']['parameters']['properties']['inputs']['items']['properties']['json']:\n    {'additionalProperties': False,\n     'properties': {'field': {'enum': ['unstruct_event',\n                                       'contexts',\n                                       'derived_contexts'],\n                              'type': 'string'},\n                    'jsonPath': {'type': 'string'},\n                    'schemaCriterion': {'pattern': '^iglu:([a-zA-Z0-9-_.]+)/([a-zA-Z0-9-_]+)/([a-zA-Z0-9-_]+)/([1-9][0-9]*|\\\\*)-((?:0|[1-9][0-9]*)|\\\\*)-((?:0|[1-9][0-9]*)|\\\\*)$',\n                                        'type': 'string'}},\n     'required': ['field', 'schemaCriterion', 'jsonPath'],\n     'type': 'object'}\n\nOn instance['parameters']['inputs'][0]['json']:\n    {'field': 'unstruct_event',\n     'schemaCriterion': 'iglu:com.snowplowanalytics.snowplow/unstruct_event/jsonschema/1-0-0',\n     'jsonPath': '$.data',\n     'extraField': 'extraValue'}",
      "data": {
        "enabled": true,
        "name": "my_sql_query_enrichment",
        "parameters": {
          "cache": {
            "size": 100,
            "ttl": 3600
          },
          "database": {
            "postgresql": {
              "database": "my_database",
              "host": "localhost",
              "password": "my_password",
              "port": 5432,
              "sslMode": false,
              "username": "my_username"
            }
          },
          "inputs": [
            {
              "placeholder": 1,
              "json": {
                "field": "unstruct_event",
                "schemaCriterion": "iglu:com.snowplowanalytics.snowplow/unstruct_event/jsonschema/1-0-0",
                "jsonPath": "$.data",
                "extraField": "extraValue"
              }
            }
          ],
          "output": {
            "expectedRows": "AT_LEAST_ONE",
            "json": {
              "describes": "ALL_ROWS",
              "propertyNames": "AS_IS",
              "schema": "iglu:com.snowplowanalytics.snowplow/unstruct_event/jsonschema/1-0-0"
            }
          },
          "query": {
            "sql": "SELECT * FROM my_table WHERE my_column = ?"
          }
        },
        "vendor": "com.snowplowanalytics.snowplow.enrichments"
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "-1 is less than the minimum of 0",
      "python_error": "Additional properties are not allowed ('Empty SQL query' was unexpected)\n\nFailed validating 'additionalProperties' in schema['properties']['parameters']['properties']['query']:\n    {'additionalProperties': False,\n     'properties': {'sql': {'type': 'string'}},\n     'required': ['sql'],\n     'type': 'object'}\n\nOn instance['parameters']['query']:\n    {'sql': '',\n     'Empty SQL query': 'SELECT * FROM my_table WHERE my_column = ?'}",
      "data": {
        "enabled": true,
        "name": "my_sql_query_enrichment",
        "parameters": {
          "cache": {
            "size": -1,
            "TTL must be non-negative": "ttl",
            "Missing required property": 3600
          },
          "database": {
            "postgresql": {
              "database": "my_database",
              "host": "localhost",
              "password": "my_password",
              "port": 0,
              "Port must be in the range 1-65535": "sslMode",
              "Missing required property": "my_username"
            }
          },
          "inputs": [
            {
              "placeholder": 0,
              "Placeholder must be a positive integer": "json",
              "Missing required property": {
                "field": "unstruct_event",
                "schemaCriterion": "iglu:com.snowplowanalytics.snowplow/unstruct_event/jsonschema/1-0-0",
                "jsonPath": "$.data"
              }
            }
          ],
          "output": {
            "expectedRows": "UNKNOWN",
            "Invalid value for expectedRows": "json",
            "Missing required property": {
              "describes": "ALL_ROWS",
              "propertyNames": "AS_IS",
              "schema": "iglu:com.snowplowanalytics.snowplow/unstruct_event/jsonschema/1-0-0"
            }
          },
          "query": {
            "sql": "",
            "Empty SQL query": "SELECT * FROM my_table WHERE my_column = ?"
          }
        },
        "vendor": "com.snowplowanalytics.snowplow.enrichments"
      }
    }
  ]
}