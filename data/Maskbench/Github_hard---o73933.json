{
  "description": "sample Github_hard/o73933.json",
  "meta": {
    "full_size": 3635,
    "stripped_size": 1409,
    "features": [
      "$ref",
      "@minmaxItems",
      "@minmaxLength",
      "@minmaxProperties",
      "additionalProperties",
      "allOf",
      "enum",
      "items"
    ],
    "raw_features": [
      "$schema",
      "_boolSchema",
      "definitions",
      "minItems",
      "minLength",
      "minProperties",
      "properties",
      "required",
      "type",
      "type:array",
      "type:boolean",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "title": "A schema for Umbraco's package.manifest files.",
    "definitions": {
      "editor": {
        "description": "This describes details about the editor",
        "type": "object",
        "properties": {
          "view": {
            "description": "This is the full path to the HTML view for your property editor",
            "type": "string"
          },
          "hideLabel": {
            "description": "If set to true this hides the label for the property editor when used in Umbraco on a document type",
            "type": "boolean"
          },
          "valueType": {
            "description": "This is the type of data you want your property editor to save to Umbraco",
            "type": "string",
            "enum": [
              "STRING",
              "JSON",
              "DATETIME",
              "TEXT",
              "INT"
            ]
          },
          "validation": {
            "description": "Object describing required validators on the editor",
            "type": "object"
          },
          "isReadOnly": {
            "description": "If set to true this makes the property editor read only",
            "type": "boolean",
            "default": false
          }
        },
        "additionalProperties": false
      },
      "editors": {
        "type": "object",
        "properties": {
          "alias": {
            "description": "This must be a unique alias to your property editor",
            "type": "string"
          },
          "defaultConfig": {
            "description": "Provides a collection of default configuration values, in cases the property editor is not configured or is used a parameter editor, which doesnt allow configuration. The object is a key/value collection and must match the prevalue fields keys.",
            "type": "object",
            "minProperties": 1
          },
          "editor": {
            "$ref": "#/definitions/editor"
          },
          "isParameterEditor": {
            "description": "Enables the property editor as a macro parameter editor can be true/false",
            "type": "boolean",
            "default": false
          },
          "name": {
            "description": "The friendly name of the property editor, shown in the Umbraco backoffice",
            "type": "string"
          }
        },
        "required": [
          "name",
          "alias",
          "editor"
        ]
      },
      "preValues": {
        "type": "object",
        "properties": {
          "prevalues": {
            "description": "This is an object that stores an array of prevalue fields or options to configure yout property editor",
            "type": "object",
            "properties": {
              "fields": {
                "$ref": "#/definitions/fields"
              }
            }
          }
        }
      },
      "fields": {
        "description": "This is the collection of prevalue fields",
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "key": {
              "description": "A unique key for the prevalue field",
              "type": "string",
              "minLength": 1
            },
            "label": {
              "description": "The user friendly label for the prevalue",
              "type": "string"
            },
            "description": {
              "description": "A more detailed description for the user",
              "type": "string"
            },
            "view": {
              "description": "The type of editor to use for this prevalue field",
              "type": "string"
            },
            "validation": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "minProperties": 1
        },
        "minItems": 1
      }
    },
    "type": "object",
    "properties": {
      "javascript": {
        "description": "A list of Javascript files with full path to load for your property editor",
        "type": "array",
        "items": {
          "type": "string"
        },
        "_uniqueItems": true
      },
      "css": {
        "description": "A list of CSS files with full path to load for your property editor",
        "type": "array",
        "items": {
          "type": "string"
        },
        "_uniqueItems": true
      },
      "propertyEditors": {
        "description": "Returns an array of editor objects, each object specifies an editor to make available to data types as an editor component. These editors are primarily property editors for content, media and members, but can also be made available as a macro parameter editor.",
        "type": "array",
        "items": {
          "allOf": [
            {
              "$ref": "#/definitions/editors"
            },
            {
              "$ref": "#/definitions/preValues"
            }
          ]
        },
        "minItems": 1
      },
      "parameterEditors": {
        "description": "Returns an array of editor objects, each object specifies an editor to make available to macro parameters as an editor component. These editors work solely as parameter editors, and will not show up on the property editors list.",
        "type": "array",
        "items": {
          "$ref": "#/definitions/editors"
        },
        "minItems": 1
      }
    }
  },
  "tests": [
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "javascript": [
          "/App_Plugins/MyEditor/js/myeditor.js"
        ],
        "css": [
          "/App_Plugins/MyEditor/css/myeditor.css"
        ],
        "propertyEditors": [
          {
            "name": "My Editor",
            "alias": "myeditor",
            "editor": {
              "view": "/App_Plugins/MyEditor/views/myeditor.html",
              "hideLabel": false,
              "valueType": "STRING",
              "validation": {},
              "isReadOnly": false
            },
            "defaultConfig": {
              "myConfigKey": "myConfigValue"
            },
            "isParameterEditor": false,
            "prevalues": {
              "fields": [
                {
                  "key": "myPrevalueKey",
                  "label": "My Prevalue Label",
                  "description": "This is a description for the prevalue",
                  "view": "textstring",
                  "validation": [
                    {
                      "type": "required"
                    }
                  ]
                }
              ]
            }
          }
        ],
        "parameterEditors": [
          {
            "name": "My Parameter Editor",
            "alias": "myparametereditor",
            "editor": {
              "view": "/App_Plugins/MyEditor/views/myparametereditor.html",
              "hideLabel": false,
              "valueType": "STRING",
              "validation": {},
              "isReadOnly": false
            },
            "defaultConfig": {
              "myConfigKey": "myConfigValue"
            },
            "isParameterEditor": true
          }
        ]
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "javascript": [
          "/App_Plugins/MyEditor/MyEditor.js"
        ],
        "css": [
          "/App_Plugins/MyEditor/MyEditor.css"
        ],
        "propertyEditors": [
          {
            "name": "My Editor",
            "alias": "myEditor",
            "editor": {
              "view": "/App_Plugins/MyEditor/MyEditor.html",
              "hideLabel": false,
              "valueType": "STRING",
              "validation": {},
              "isReadOnly": false
            },
            "defaultConfig": {
              "myConfigKey": "myConfigValue"
            },
            "isParameterEditor": false,
            "prevalues": {
              "fields": [
                {
                  "key": "myPrevalueKey",
                  "label": "My Prevalue Label",
                  "description": "My Prevalue Description",
                  "view": "textstring",
                  "validation": [
                    {
                      "type": "required"
                    }
                  ]
                }
              ]
            }
          }
        ],
        "parameterEditors": [
          {
            "name": "My Parameter Editor",
            "alias": "myParameterEditor",
            "editor": {
              "view": "/App_Plugins/MyEditor/MyParameterEditor.html",
              "hideLabel": false,
              "valueType": "STRING",
              "validation": {},
              "isReadOnly": false
            },
            "defaultConfig": {
              "myConfigKey": "myConfigValue"
            },
            "isParameterEditor": true
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on minItems keyword",
      "valid": false,
      "rust_error": "[] has less than 1 item",
      "python_error": "[] should be non-empty\n\nFailed validating 'minItems' in schema['properties']['propertyEditors']['items']['allOf'][1]['properties']['prevalues']['properties']['fields']:\n    {'description': 'This is the collection of prevalue fields',\n     'type': 'array',\n     'items': {'type': 'object',\n               'properties': {'key': {'description': 'A unique key for the '\n                                                     'prevalue field',\n                                      'type': 'string',\n                                      'minLength': 1},\n                              'label': {'description': 'The user friendly '\n                                                       'label for the '\n                                                       'prevalue',\n                                        'type': 'string'},\n                              'description': {'description': 'A more '\n                                                             'detailed '\n                                                          .. (797 more)",
      "data": {
        "javascript": [
          "/App_Plugins/MyEditor/MyEditor.js"
        ],
        "css": [
          "/App_Plugins/MyEditor/MyEditor.css"
        ],
        "propertyEditors": [
          {
            "name": "My Editor",
            "alias": "myEditor",
            "editor": {
              "view": "/App_Plugins/MyEditor/MyEditor.html",
              "hideLabel": false,
              "valueType": "STRING",
              "validation": {},
              "isReadOnly": false
            },
            "defaultConfig": {
              "myConfigKey": "myConfigValue"
            },
            "isParameterEditor": false,
            "prevalues": {
              "fields": []
            }
          }
        ],
        "parameterEditors": [
          {
            "name": "My Parameter Editor",
            "alias": "myParameterEditor",
            "editor": {
              "view": "/App_Plugins/MyEditor/MyParameterEditor.html",
              "hideLabel": false,
              "valueType": "STRING",
              "validation": {},
              "isReadOnly": false
            },
            "defaultConfig": {
              "myConfigKey": "myConfigValue"
            },
            "isParameterEditor": true
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on minProperties keyword",
      "valid": false,
      "rust_error": "{} has less than 1 property",
      "python_error": "{} should be non-empty\n\nFailed validating 'minProperties' in schema['properties']['propertyEditors']['items']['allOf'][0]['properties']['defaultConfig']:\n    {'description': 'Provides a collection of default configuration '\n                    'values, in cases the property editor is not '\n                    'configured or is used a parameter editor, which '\n                    'doesnt allow configuration. The object is a key/value '\n                    'collection and must match the prevalue fields keys.',\n     'type': 'object',\n     'minProperties': 1}\n\nOn instance['propertyEditors'][0]['defaultConfig']:\n    {}",
      "data": {
        "javascript": [
          "/App_Plugins/MyEditor/MyEditor.js"
        ],
        "css": [
          "/App_Plugins/MyEditor/MyEditor.css"
        ],
        "propertyEditors": [
          {
            "name": "My Editor",
            "alias": "myEditor",
            "editor": {
              "view": "/App_Plugins/MyEditor/MyEditor.html",
              "hideLabel": false,
              "valueType": "STRING",
              "validation": {},
              "isReadOnly": false
            },
            "defaultConfig": {},
            "isParameterEditor": false,
            "prevalues": {
              "fields": [
                {
                  "key": "myPrevalueKey",
                  "label": "My Prevalue Label",
                  "description": "My Prevalue Description",
                  "view": "textstring",
                  "validation": [
                    {
                      "type": "required"
                    }
                  ]
                }
              ]
            }
          }
        ],
        "parameterEditors": [
          {
            "name": "My Parameter Editor",
            "alias": "myParameterEditor",
            "editor": {
              "view": "/App_Plugins/MyEditor/MyParameterEditor.html",
              "hideLabel": false,
              "valueType": "STRING",
              "validation": {},
              "isReadOnly": false
            },
            "defaultConfig": {},
            "isParameterEditor": true
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"\" is shorter than 1 character",
      "python_error": "'' should be non-empty\n\nFailed validating 'minLength' in schema['properties']['propertyEditors']['items']['allOf'][1]['properties']['prevalues']['properties']['fields']['items']['properties']['key']:\n    {'description': 'A unique key for the prevalue field',\n     'type': 'string',\n     'minLength': 1}\n\nOn instance['propertyEditors'][0]['prevalues']['fields'][0]['key']:\n    ''",
      "data": {
        "javascript": [
          "/App_Plugins/MyEditor/MyEditor.js"
        ],
        "css": [
          "/App_Plugins/MyEditor/MyEditor.css"
        ],
        "propertyEditors": [
          {
            "name": "",
            "alias": "myEditor",
            "editor": {
              "view": "/App_Plugins/MyEditor/MyEditor.html",
              "hideLabel": false,
              "valueType": "STRING",
              "validation": {},
              "isReadOnly": false
            },
            "defaultConfig": {
              "myConfigKey": "myConfigValue"
            },
            "isParameterEditor": false,
            "prevalues": {
              "fields": [
                {
                  "key": "",
                  "label": "My Prevalue Label",
                  "description": "My Prevalue Description",
                  "view": "textstring",
                  "validation": [
                    {
                      "type": "required"
                    }
                  ]
                }
              ]
            }
          }
        ],
        "parameterEditors": [
          {
            "name": "My Parameter Editor",
            "alias": "myParameterEditor",
            "editor": {
              "view": "/App_Plugins/MyEditor/MyParameterEditor.html",
              "hideLabel": false,
              "valueType": "STRING",
              "validation": {},
              "isReadOnly": false
            },
            "defaultConfig": {
              "myConfigKey": "myConfigValue"
            },
            "isParameterEditor": true
          }
        ]
      }
    }
  ]
}