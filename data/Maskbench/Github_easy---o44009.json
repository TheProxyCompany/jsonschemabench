{
  "description": "sample Github_easy/o44009.json",
  "meta": {
    "full_size": 437,
    "stripped_size": 402,
    "features": [
      "@minmaxLength",
      "additionalProperties",
      "items"
    ],
    "raw_features": [
      "$schema",
      "_boolSchema",
      "maxLength",
      "properties",
      "required",
      "type",
      "type:array",
      "type:boolean",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "title": "GetConfigurationResponse",
    "type": "object",
    "properties": {
      "configurationKey": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "maxLength": 50
            },
            "readonly": {
              "type": "boolean"
            },
            "value": {
              "type": "string",
              "maxLength": 500
            }
          },
          "required": [
            "key",
            "readonly"
          ]
        }
      },
      "unknownKey": {
        "type": "array",
        "items": {
          "type": "string",
          "maxLength": 50
        }
      }
    },
    "additionalProperties": false
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "configurationKey": [
          {
            "key": "exampleKey",
            "readonly": true,
            "value": "exampleValue"
          },
          {
            "key": "anotherKey",
            "readonly": false,
            "value": "anotherValue"
          }
        ],
        "unknownKey": [
          "unknownValue1",
          "unknownValue2"
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on maxLength keyword",
      "valid": false,
      "rust_error": "\"exampleKeyThatIsLongerThanFiftyCharactersAndShouldBeInvalid\" is longer than 50 characters",
      "python_error": "'unknownValue2ThatIsLongerThanFiftyCharactersAndShouldBeInvalid' is too long\n\nFailed validating 'maxLength' in schema['properties']['unknownKey']['items']:\n    {'type': 'string', 'maxLength': 50}\n\nOn instance['unknownKey'][1]:\n    'unknownValue2ThatIsLongerThanFiftyCharactersAndShouldBeInvalid'",
      "data": {
        "configurationKey": [
          {
            "key": "exampleKeyThatIsLongerThanFiftyCharactersAndShouldBeInvalid",
            "readonly": true,
            "value": "exampleValue"
          },
          {
            "key": "anotherKey",
            "readonly": false,
            "value": "anotherValue"
          }
        ],
        "unknownKey": [
          "unknownValue1",
          "unknownValue2ThatIsLongerThanFiftyCharactersAndShouldBeInvalid"
        ]
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "Additional properties are not allowed ('extraKey' was unexpected)",
      "python_error": "Additional properties are not allowed ('extraKey' was unexpected)\n\nFailed validating 'additionalProperties' in schema:\n    {'$schema': 'http://json-schema.org/draft-04/schema#',\n     'title': 'GetConfigurationResponse',\n     'type': 'object',\n     'properties': {'configurationKey': {'type': 'array',\n                                         'items': {'type': 'object',\n                                                   'properties': {'key': {'type': 'string',\n                                                                          'maxLength': 50},\n                                                                  'readonly': {'type': 'boolean'},\n                                                                  'value': {'type': 'string',\n                                                                            'maxLength': 500}},\n                                                   'required': ['key',\n                                                                'readonly']}},\n                    'unknownKey.. (646 more)",
      "data": {
        "configurationKey": [
          {
            "key": "exampleKey",
            "readonly": true,
            "value": "exampleValue"
          },
          {
            "key": "anotherKey",
            "readonly": false,
            "value": "anotherValue"
          },
          {
            "key": "invalidKey",
            "readonly": false
          }
        ],
        "unknownKey": [
          "unknownValue1",
          "unknownValue2"
        ],
        "extraKey": "extraValue"
      }
    },
    {
      "description": "llama-70b generated negative; focus on maxLength keyword",
      "valid": false,
      "rust_error": "\"aVeryLongKeyThatExceedsTheMaxLengthOf50CharactersAndShouldBeRejectedByAValidatorThatSupportsMaxLengthKeyword\" is longer than 50 characters",
      "python_error": "'aVeryLongKeyThatExceedsTheMaxLengthOf50CharactersAndShouldBeRejectedByAValidatorThatSupportsMaxLengthKeyword' is too long\n\nFailed validating 'maxLength' in schema['properties']['configurationKey']['items']['properties']['key']:\n    {'type': 'string', 'maxLength': 50}\n\nOn instance['configurationKey'][0]['key']:\n    'aVeryLongKeyThatExceedsTheMaxLengthOf50CharactersAndShouldBeRejectedByAValidatorThatSupportsMaxLengthKeyword'",
      "data": {
        "configurationKey": [
          {
            "key": "aVeryLongKeyThatExceedsTheMaxLengthOf50CharactersAndShouldBeRejectedByAValidatorThatSupportsMaxLengthKeyword",
            "readonly": true,
            "value": "exampleValue"
          },
          {
            "key": "anotherKey",
            "readonly": false,
            "value": "anotherValue"
          }
        ],
        "unknownKey": [
          "unknownValue1",
          "unknownValue2"
        ]
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "123 is not of type \"string\"",
      "python_error": "123 is not of type 'string'\n\nFailed validating 'type' in schema['properties']['unknownKey']['items']:\n    {'type': 'string', 'maxLength': 50}\n\nOn instance['unknownKey'][2]:\n    123",
      "data": {
        "configurationKey": [
          {
            "key": "exampleKey",
            "readonly": true,
            "value": "exampleValue"
          },
          {
            "key": "anotherKey",
            "readonly": false,
            "value": "a"
          }
        ],
        "unknownKey": [
          "unknownValue1",
          "unknownValue2",
          123
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on maxLength keyword",
      "valid": false,
      "rust_error": "\"exampleKeyWithVeryLongLengthThatShouldExceedMaxLengthSchemaRule\" is longer than 50 characters",
      "python_error": "'exampleKeyWithVeryLongLengthThatShouldExceedMaxLengthSchemaRule' is too long\n\nFailed validating 'maxLength' in schema['properties']['configurationKey']['items']['properties']['key']:\n    {'type': 'string', 'maxLength': 50}\n\nOn instance['configurationKey'][0]['key']:\n    'exampleKeyWithVeryLongLengthThatShouldExceedMaxLengthSchemaRule'",
      "data": {
        "configurationKey": [
          {
            "key": "exampleKeyWithVeryLongLengthThatShouldExceedMaxLengthSchemaRule",
            "readonly": true,
            "value": "exampleValue"
          },
          {
            "key": "anotherKey",
            "readonly": false,
            "value": "anotherValue"
          }
        ],
        "unknownKey": [
          "unknownValue1",
          "unknownValue2"
        ]
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"anotherKeyWithMoreThan50CharactersInTheKeyField........................\" is longer than 50 characters",
      "python_error": "'unknownValue3WithMoreThan50CharactersInTheValueField...................................' is too long\n\nFailed validating 'maxLength' in schema['properties']['unknownKey']['items']:\n    {'type': 'string', 'maxLength': 50}\n\nOn instance['unknownKey'][2]:\n    'unknownValue3WithMoreThan50CharactersInTheValueField...................................'",
      "data": {
        "configurationKey": [
          {
            "key": "exampleKey",
            "readonly": true,
            "value": "exampleValue"
          },
          {
            "key": "anotherKeyWithMoreThan50CharactersInTheKeyField........................",
            "readonly": false,
            "value": "anotherValue"
          }
        ],
        "unknownKey": [
          "unknownValue1",
          "unknownValue2",
          "unknownValue3WithMoreThan50CharactersInTheValueField..................................."
        ]
      }
    }
  ]
}