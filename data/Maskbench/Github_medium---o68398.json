{
  "description": "sample Github_medium/o68398.json",
  "meta": {
    "full_size": 1963,
    "stripped_size": 682,
    "features": [
      "@minmaxLength",
      "pattern"
    ],
    "raw_features": [
      "$schema",
      "maxLength",
      "properties",
      "required",
      "type",
      "type:boolean",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-04/schema",
    "properties": {
      "completed": {
        "description": "Indicates whether the user has validated his e-mail address and completed the registration process.",
        "readOnly": true,
        "type": "boolean"
      },
      "completedAt": {
        "_format": "date-time",
        "description": "The date at which the registration was completed. This is only available once the user has completed the registration process.",
        "readOnly": true,
        "type": "string"
      },
      "createdAt": {
        "_format": "date-time",
        "description": "The date at which the registration was created.",
        "readOnly": true,
        "type": "string"
      },
      "expiresAt": {
        "_format": "date-time",
        "description": "The date at which the validity of the link sent in the registration e-mail will expire. This is only available when the registration has been created but not yet completed.",
        "readOnly": true,
        "type": "string"
      },
      "id": {
        "description": "The unique identifier of the registration.",
        "readOnly": true,
        "type": "string"
      },
      "organization": {
        "properties": {
          "displayName": {
            "description": "The name of the organization as displayed in the UI. If not set, it defaults to the \"name\" property.",
            "maxLength": 50,
            "type": "string"
          },
          "name": {
            "description": "The unique identifier of the organization used in URLs.",
            "maxLength": 50,
            "pattern": "^[A-Za-z0-9]+(-[A-Za-z0-9]+)*$",
            "type": "string",
            "unique": true
          },
          "public": {
            "description": "Whether the organization should be public. Anyone can see the dashboard, projects and reports of a public organization, but you still need to be a member to publish new test results.",
            "type": "boolean"
          }
        },
        "required": [
          "name"
        ],
        "type": "object"
      },
      "user": {
        "properties": {
          "name": {
            "description": "The username of the new user account.",
            "maxLength": 25,
            "pattern": "^[A-Za-z0-9]+(-[A-Za-z0-9]+)*$",
            "type": "string",
            "unique": true
          },
          "primaryEmail": {
            "_format": "email",
            "description": "The primary e-mail of the new user account.",
            "maxLength": 255,
            "type": "string",
            "unique": true
          }
        },
        "required": [
          "name",
          "primaryEmail"
        ],
        "type": "object"
      }
    },
    "required": [
      "user"
    ],
    "type": "object"
  },
  "tests": [
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "completed": true,
        "completedAt": "2022-01-01T12:00:00.000Z",
        "createdAt": "2022-01-01T11:00:00.000Z",
        "expiresAt": "2022-01-01T13:00:00.000Z",
        "id": "registration-12345",
        "organization": {
          "displayName": "Example Organization",
          "name": "example-org",
          "public": false
        },
        "user": {
          "name": "john-doe",
          "primaryEmail": "john.doe@example.com"
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on pattern keyword",
      "valid": false,
      "rust_error": "\"example:org\" does not match \"^[A-Za-z0-9]+(-[A-Za-z0-9]+)*$\"",
      "python_error": "'john.doe' does not match '^[A-Za-z0-9]+(-[A-Za-z0-9]+)*$'\n\nFailed validating 'pattern' in schema['properties']['user']['properties']['name']:\n    {'description': 'The username of the new user account.',\n     'maxLength': 25,\n     'pattern': '^[A-Za-z0-9]+(-[A-Za-z0-9]+)*$',\n     'type': 'string',\n     'unique': True}\n\nOn instance['user']['name']:\n    'john.doe'",
      "data": {
        "completed": true,
        "completedAt": "2022-01-01T12:00:00.000Z",
        "createdAt": "2022-01-01T11:00:00.000Z",
        "expiresAt": "2022-01-01T13:00:00.000Z",
        "id": "registration-12345",
        "organization": {
          "displayName": "Example Organization",
          "name": "example:org",
          "pattern": "^[A-Za-z0-9]+(-[A-Za-z0-9]+)*$"
        },
        "user": {
          "name": "john.doe",
          "primaryEmail": "john.doe@example.com"
        },
        "public": false
      }
    },
    {
      "description": "llama-70b generated negative; focus on maxLength keyword",
      "valid": false,
      "rust_error": "\"Example Organization that has a really really really really really really really really really really long display name\" is longer than 50 characters",
      "python_error": "'Example Organization that has a really really really really really really really really really really long display name' is too long\n\nFailed validating 'maxLength' in schema['properties']['organization']['properties']['displayName']:\n    {'description': 'The name of the organization as displayed in the UI. '\n                    'If not set, it defaults to the \"name\" property.',\n     'maxLength': 50,\n     'type': 'string'}\n\nOn instance['organization']['displayName']:\n    ('Example Organization that has a really really really really really '\n     'really really really really really long display name')",
      "data": {
        "completed": true,
        "completedAt": "2022-01-01T12:00:00.000Z",
        "createdAt": "2022-01-01T11:00:00.000Z",
        "expiresAt": "2022-01-01T13:00:00.000Z",
        "id": "registration-12345",
        "organization": {
          "displayName": "Example Organization that has a really really really really really really really really really really long display name",
          "name": "example-org",
          "public": false
        },
        "user": {
          "name": "john-doe",
          "primaryEmail": "john.doe@example.com"
        }
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"example org 2\" does not match \"^[A-Za-z0-9]+(-[A-Za-z0-9]+)*$\"",
      "python_error": "'example org 2' does not match '^[A-Za-z0-9]+(-[A-Za-z0-9]+)*$'\n\nFailed validating 'pattern' in schema['properties']['organization']['properties']['name']:\n    {'description': 'The unique identifier of the organization used in '\n                    'URLs.',\n     'maxLength': 50,\n     'pattern': '^[A-Za-z0-9]+(-[A-Za-z0-9]+)*$',\n     'type': 'string',\n     'unique': True}\n\nOn instance['organization']['name']:\n    'example org 2'",
      "data": {
        "completed": true,
        "completedAt": "2022-01-01T12:00:00.000Z",
        "createdAt": "2022-01-01T11:00:00.000Z",
        "expiresAt": "2022-01-01T13:00:00.000Z",
        "id": "registration-12345",
        "organization": {
          "displayName": "a",
          "name": "example org 2",
          "public": true
        },
        "user": {
          "name": "john-doe1",
          "primaryEmail": "invalid-email"
        }
      }
    }
  ]
}