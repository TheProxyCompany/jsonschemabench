{
  "description": "sample Github_hard/o13954.json",
  "meta": {
    "full_size": 2310,
    "stripped_size": 2310,
    "features": [
      "@minmaxInteger",
      "@minmaxItems",
      "@minmaxLength",
      "@minmaxNumber",
      "enum",
      "items"
    ],
    "raw_features": [
      "$schema",
      "maximum",
      "minItems",
      "minLength",
      "minimum",
      "properties",
      "required",
      "type",
      "type:array",
      "type:integer",
      "type:number",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "type": "object",
    "properties": {
      "migration": {
        "type": "object",
        "properties": {
          "nbCandidatMigration": {
            "type": "integer",
            "minimum": 0
          },
          "stepMigration": {
            "type": "integer",
            "minimum": 0
          }
        },
        "required": [
          "nbCandidatMigration",
          "stepMigration"
        ]
      },
      "name": {
        "type": "string",
        "minLength": 1
      },
      "dataFile": {
        "type": "string",
        "minLength": 1
      },
      "tabAlgoGen": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "minimum": 0
            },
            "initParam": {
              "type": "object",
              "properties": {
                "taillePop": {
                  "type": "integer",
                  "minimum": 0
                },
                "nbGeneration": {
                  "type": "integer",
                  "minimum": 0
                },
                "probaCroisement": {
                  "type": "number",
                  "minimum": 0,
                  "maximum": 1
                },
                "probaMutation": {
                  "type": "number",
                  "minimum": 0,
                  "maximum": 1
                },
                "tabProbaMigration": {
                  "type": "array",
                  "items": {
                    "type": "number",
                    "minimum": 0,
                    "maximum": 1
                  }
                },
                "classUsed": {
                  "type": "object",
                  "properties": {
                    "typeInd": {
                      "type": "object",
                      "properties": {
                        "class": {
                          "enum": [
                            "itemset",
                            "itemsetO"
                          ]
                        },
                        "typePrimitif": {
                          "enum": [
                            "char"
                          ]
                        }
                      },
                      "required": [
                        "class",
                        "typePrimitif"
                      ]
                    },
                    "populate": {
                      "type": "object",
                      "properties": {
                        "class": {
                          "enum": [
                            "randPop",
                            "freqPop",
                            "irandPop"
                          ]
                        }
                      },
                      "required": [
                        "class"
                      ]
                    },
                    "evaluate": {
                      "type": "object",
                      "properties": {
                        "class": {
                          "enum": [
                            "freqEval",
                            "closeEval"
                          ]
                        }
                      },
                      "required": [
                        "class"
                      ]
                    },
                    "crossover": {
                      "type": "object",
                      "properties": {
                        "class": {
                          "enum": [
                            "monoPCross",
                            "multiPCross",
                            "uCross"
                          ]
                        }
                      },
                      "required": [
                        "class"
                      ]
                    },
                    "mutator": {
                      "type": "object",
                      "properties": {
                        "class": {
                          "enum": [
                            "randMut"
                          ]
                        }
                      },
                      "required": [
                        "class"
                      ]
                    },
                    "selectPolicy": {
                      "type": "object",
                      "properties": {
                        "class": {
                          "enum": [
                            "bestS",
                            "randS",
                            "tournamentS"
                          ]
                        }
                      },
                      "required": [
                        "class"
                      ]
                    },
                    "indelPolicy": {
                      "type": "object",
                      "properties": {
                        "class": {
                          "enum": [
                            "fitnessID",
                            "ageID"
                          ]
                        }
                      },
                      "required": [
                        "class"
                      ]
                    },
                    "selectPolicyMigrate": {
                      "type": "object",
                      "properties": {
                        "class": {
                          "enum": [
                            "bestMig",
                            "tournamentMig"
                          ]
                        }
                      },
                      "required": [
                        "class"
                      ]
                    },
                    "indelPolicyMigrate": {
                      "type": "object",
                      "properties": {
                        "class": {
                          "enum": [
                            "oldestIDMig",
                            "worstIDMig"
                          ]
                        }
                      },
                      "required": [
                        "class"
                      ]
                    }
                  },
                  "required": [
                    "typeInd",
                    "populate",
                    "evaluate",
                    "crossover",
                    "mutator",
                    "selectPolicy",
                    "indelPolicy",
                    "selectPolicyMigrate",
                    "indelPolicyMigrate"
                  ]
                }
              },
              "required": [
                "taillePop",
                "nbGeneration",
                "probaCroisement",
                "probaMutation",
                "tabProbaMigration",
                "classUsed"
              ]
            },
            "resultFile": {
              "type": "string",
              "minLength": 1
            }
          },
          "required": [
            "id",
            "initParam",
            "resultFile"
          ]
        },
        "minItems": 1
      }
    },
    "required": [
      "migration",
      "name",
      "dataFile",
      "tabAlgoGen"
    ]
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "migration": {
          "nbCandidatMigration": 10,
          "stepMigration": 5
        },
        "name": "Example Run",
        "dataFile": "data.csv",
        "tabAlgoGen": [
          {
            "id": 1,
            "initParam": {
              "taillePop": 100,
              "nbGeneration": 100,
              "probaCroisement": 0.7,
              "probaMutation": 0.1,
              "tabProbaMigration": [
                0.2,
                0.3,
                0.5
              ],
              "classUsed": {
                "typeInd": {
                  "class": "itemset",
                  "typePrimitif": "char"
                },
                "populate": {
                  "class": "randPop"
                },
                "evaluate": {
                  "class": "freqEval"
                },
                "crossover": {
                  "class": "monoPCross"
                },
                "mutator": {
                  "class": "randMut"
                },
                "selectPolicy": {
                  "class": "bestS"
                },
                "indelPolicy": {
                  "class": "fitnessID"
                },
                "selectPolicyMigrate": {
                  "class": "bestMig"
                },
                "indelPolicyMigrate": {
                  "class": "oldestIDMig"
                }
              }
            },
            "resultFile": "result1.csv"
          },
          {
            "id": 2,
            "initParam": {
              "taillePop": 200,
              "nbGeneration": 200,
              "probaCroisement": 0.8,
              "probaMutation": 0.2,
              "tabProbaMigration": [
                0.1,
                0.4,
                0.5
              ],
              "classUsed": {
                "typeInd": {
                  "class": "itemsetO",
                  "typePrimitif": "char"
                },
                "populate": {
                  "class": "freqPop"
                },
                "evaluate": {
                  "class": "closeEval"
                },
                "crossover": {
                  "class": "multiPCross"
                },
                "mutator": {
                  "class": "randMut"
                },
                "selectPolicy": {
                  "class": "randS"
                },
                "indelPolicy": {
                  "class": "ageID"
                },
                "selectPolicyMigrate": {
                  "class": "tournamentMig"
                },
                "indelPolicyMigrate": {
                  "class": "worstIDMig"
                }
              }
            },
            "resultFile": "result2.csv"
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on minLength keyword",
      "valid": false,
      "rust_error": "\"\" is shorter than 1 character",
      "python_error": "'' should be non-empty\n\nFailed validating 'minLength' in schema['properties']['name']:\n    {'type': 'string', 'minLength': 1}\n\nOn instance['name']:\n    ''",
      "data": {
        "migration": {
          "nbCandidatMigration": 10,
          "stepMigration": 5
        },
        "name": "",
        "dataFile": "data.csv",
        "tabAlgoGen": [
          {
            "id": 1,
            "initParam": {
              "taillePop": 100,
              "nbGeneration": 100,
              "probaCroisement": 0.7,
              "probaMutation": 0.1,
              "tabProbaMigration": [
                0.2,
                0.3,
                0.5
              ],
              "classUsed": {
                "typeInd": {
                  "class": "itemset",
                  "typePrimitif": "char"
                },
                "populate": {
                  "class": "randPop"
                },
                "evaluate": {
                  "class": "freqEval"
                },
                "crossover": {
                  "class": "monoPCross"
                },
                "mutator": {
                  "class": "randMut"
                },
                "selectPolicy": {
                  "class": "bestS"
                },
                "indelPolicy": {
                  "class": "fitnessID"
                },
                "selectPolicyMigrate": {
                  "class": "bestMig"
                },
                "indelPolicyMigrate": {
                  "class": "oldestIDMig"
                }
              }
            },
            "resultFile": ""
          },
          {
            "id": 2,
            "initParam": {
              "taillePop": 200,
              "nbGeneration": 200,
              "probaCroisement": 0.8,
              "probaMutation": 0.2,
              "tabProbaMigration": [
                0.1,
                0.4,
                0.5
              ],
              "classUsed": {
                "typeInd": {
                  "class": "itemsetO",
                  "typePrimitif": "char"
                },
                "populate": {
                  "class": "freqPop"
                },
                "evaluate": {
                  "class": "closeEval"
                },
                "crossover": {
                  "class": "multiPCross"
                },
                "mutator": {
                  "class": "randMut"
                },
                "selectPolicy": {
                  "class": "randS"
                },
                "indelPolicy": {
                  "class": "ageID"
                },
                "selectPolicyMigrate": {
                  "class": "tournamentMig"
                },
                "indelPolicyMigrate": {
                  "class": "worstIDMig"
                }
              }
            },
            "resultFile": ""
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on minItems keyword",
      "valid": false,
      "rust_error": "[] has less than 1 item",
      "python_error": "[] should be non-empty\n\nFailed validating 'minItems' in schema['properties']['tabAlgoGen']:\n    {'type': 'array',\n     'items': {'type': 'object',\n               'properties': {'id': {'type': 'integer', 'minimum': 0},\n                              'initParam': {'type': 'object',\n                                            'properties': {'taillePop': {'type': 'integer',\n                                                                         'minimum': 0},\n                                                           'nbGeneration': {'type': 'integer',\n                                                                            'minimum': 0},\n                                                           'probaCroisement': {'type': 'number',\n                                                                               'minimum': 0,\n                                                                               'maximum': 1},\n                                                           'probaMutation': {'type': 'number',.. (7854 more)",
      "data": {
        "migration": {
          "nbCandidatMigration": 10,
          "stepMigration": 5
        },
        "name": "Example Run",
        "dataFile": "data.csv",
        "tabAlgoGen": []
      }
    },
    {
      "description": "llama-70b generated negative; focus on minimum keyword or maximum keyword",
      "valid": false,
      "rust_error": "-1 is less than the minimum of 0",
      "python_error": "-1 is less than the minimum of 0\n\nFailed validating 'minimum' in schema['properties']['migration']['properties']['nbCandidatMigration']:\n    {'type': 'integer', 'minimum': 0}\n\nOn instance['migration']['nbCandidatMigration']:\n    -1",
      "data": {
        "migration": {
          "nbCandidatMigration": -1,
          "stepMigration": 5
        },
        "name": "Example Run",
        "dataFile": "data.csv",
        "tabAlgoGen": [
          {
            "id": 1,
            "initParam": {
              "taillePop": 100,
              "nbGeneration": 100,
              "probaCroisement": 0.7,
              "probaMutation": 1.1,
              "tabProbaMigration": [
                0.2,
                0.3,
                0.5
              ],
              "classUsed": {
                "typeInd": {
                  "class": "itemset",
                  "typePrimitif": "char"
                },
                "populate": {
                  "class": "randPop"
                },
                "evaluate": {
                  "class": "freqEval"
                },
                "crossover": {
                  "class": "monoPCross"
                },
                "mutator": {
                  "class": "randMut"
                },
                "selectPolicy": {
                  "class": "bestS"
                },
                "indelPolicy": {
                  "class": "fitnessID"
                },
                "selectPolicyMigrate": {
                  "class": "bestMig"
                },
                "indelPolicyMigrate": {
                  "class": "oldestIDMig"
                }
              }
            },
            "resultFile": "result1.csv"
          },
          {
            "id": 2,
            "initParam": {
              "taillePop": 200,
              "nbGeneration": 200,
              "probaCroisement": 0.8,
              "probaMutation": 0.2,
              "tabProbaMigration": [
                0.1,
                0.4,
                1.5
              ],
              "classUsed": {
                "typeInd": {
                  "class": "itemsetO",
                  "typePrimitif": "char"
                },
                "populate": {
                  "class": "freqPop"
                },
                "evaluate": {
                  "class": "closeEval"
                },
                "crossover": {
                  "class": "multiPCross"
                },
                "mutator": {
                  "class": "randMut"
                },
                "selectPolicy": {
                  "class": "randS"
                },
                "indelPolicy": {
                  "class": "ageID"
                },
                "selectPolicyMigrate": {
                  "class": "tournamentMig"
                },
                "indelPolicyMigrate": {
                  "class": "worstIDMig"
                }
              }
            },
            "resultFile": "result2.csv"
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "-1 is less than the minimum of 0",
      "python_error": "-1 is less than the minimum of 0\n\nFailed validating 'minimum' in schema['properties']['migration']['properties']['nbCandidatMigration']:\n    {'type': 'integer', 'minimum': 0}\n\nOn instance['migration']['nbCandidatMigration']:\n    -1",
      "data": {
        "migration": {
          "nbCandidatMigration": -1,
          "stepMigration": 5
        },
        "name": "Example Run",
        "dataFile": "data.csv",
        "tabAlgoGen": [
          {
            "id": 1,
            "initParam": {
              "taillePop": 100,
              "nbGeneration": 100,
              "probaCroisement": 0.7,
              "probaMutation": 0.1,
              "tabProbaMigration": [
                0.2,
                0.3,
                0.5
              ],
              "classUsed": {
                "typeInd": {
                  "class": "itemset",
                  "typePrimitif": "char"
                },
                "populate": {
                  "class": "randPop"
                },
                "evaluate": {
                  "class": "freqEval"
                },
                "crossover": {
                  "class": "monoPCross"
                },
                "mutator": {
                  "class": "randMut"
                },
                "selectPolicy": {
                  "class": "bestS"
                },
                "indelPolicy": {
                  "class": "fitnessID"
                },
                "selectPolicyMigrate": {
                  "class": "bestMig"
                },
                "indelPolicyMigrate": {
                  "class": "oldestIDMig"
                }
              }
            },
            "resultFile": "result1.csv"
          },
          {
            "id": 2,
            "initParam": {
              "taillePop": 200,
              "nbGeneration": 200,
              "probaCroisement": 0.8,
              "probaMutation": 0.2,
              "tabProbaMigration": [
                0.1,
                0.4,
                0.5
              ],
              "classUsed": {
                "typeInd": {
                  "class": "itemsetO",
                  "typePrimitif": "char"
                },
                "populate": {
                  "class": "freqPop"
                },
                "evaluate": {
                  "class": "closeEval"
                },
                "crossover": {
                  "class": "multiPCross"
                },
                "mutator": {
                  "class": "randMut"
                },
                "selectPolicy": {
                  "class": "randS"
                },
                "indelPolicy": {
                  "class": "ageID"
                },
                "selectPolicyMigrate": {
                  "class": "tournamentMig"
                },
                "indelPolicyMigrate": {
                  "class": "worstIDMig"
                }
              }
            },
            "resultFile": "result2.csv"
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on minimum keyword or maximum keyword",
      "valid": false,
      "rust_error": "-1 is less than the minimum of 0",
      "python_error": "-1 is less than the minimum of 0\n\nFailed validating 'minimum' in schema['properties']['migration']['properties']['nbCandidatMigration']:\n    {'type': 'integer', 'minimum': 0}\n\nOn instance['migration']['nbCandidatMigration']:\n    -1",
      "data": {
        "migration": {
          "nbCandidatMigration": -1,
          "stepMigration": 5
        },
        "name": "Example Run",
        "dataFile": "data.csv",
        "tabAlgoGen": [
          {
            "id": 1,
            "initParam": {
              "taillePop": 100,
              "nbGeneration": 100,
              "probaCroisement": 1.1,
              "probaMutation": 0.1,
              "tabProbaMigration": [
                0.2,
                0.3,
                0.5
              ],
              "classUsed": {
                "typeInd": {
                  "class": "itemset",
                  "typePrimitif": "char"
                },
                "populate": {
                  "class": "randPop"
                },
                "evaluate": {
                  "class": "freqEval"
                },
                "crossover": {
                  "class": "monoPCross"
                },
                "mutator": {
                  "class": "randMut"
                },
                "selectPolicy": {
                  "class": "bestS"
                },
                "indelPolicy": {
                  "class": "fitnessID"
                },
                "selectPolicyMigrate": {
                  "class": "bestMig"
                },
                "indelPolicyMigrate": {
                  "class": "oldestIDMig"
                }
              }
            },
            "resultFile": "result1.csv"
          },
          {
            "id": 2,
            "initParam": {
              "taillePop": 200,
              "nbGeneration": 200,
              "probaCroisement": 0.8,
              "probaMutation": 0.2,
              "tabProbaMigration": [
                0.1,
                0.4,
                0.5
              ],
              "classUsed": {
                "typeInd": {
                  "class": "itemsetO",
                  "typePrimitif": "char"
                },
                "populate": {
                  "class": "freqPop"
                },
                "evaluate": {
                  "class": "closeEval"
                },
                "crossover": {
                  "class": "multiPCross"
                },
                "mutator": {
                  "class": "randMut"
                },
                "selectPolicy": {
                  "class": "randS"
                },
                "indelPolicy": {
                  "class": "ageID"
                },
                "selectPolicyMigrate": {
                  "class": "tournamentMig"
                },
                "indelPolicyMigrate": {
                  "class": "worstIDMig"
                }
              }
            },
            "resultFile": "result2.csv"
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on minLength keyword",
      "valid": false,
      "rust_error": "\"\" is shorter than 1 character",
      "python_error": "'' should be non-empty\n\nFailed validating 'minLength' in schema['properties']['name']:\n    {'type': 'string', 'minLength': 1}\n\nOn instance['name']:\n    ''",
      "data": {
        "migration": {
          "nbCandidatMigration": 10,
          "stepMigration": 5
        },
        "name": "",
        "dataFile": "data.csv",
        "tabAlgoGen": [
          {
            "id": 1,
            "initParam": {
              "taillePop": 100,
              "nbGeneration": 100,
              "probaCroisement": 0.7,
              "probaMutation": 0.1,
              "tabProbaMigration": [
                0.2,
                0.3,
                0.5
              ],
              "classUsed": {
                "typeInd": {
                  "class": "itemset",
                  "typePrimitif": "char"
                },
                "populate": {
                  "class": "randPop"
                },
                "evaluate": {
                  "class": "freqEval"
                },
                "crossover": {
                  "class": "monoPCross"
                },
                "mutator": {
                  "class": "randMut"
                },
                "selectPolicy": {
                  "class": "bestS"
                },
                "indelPolicy": {
                  "class": "fitnessID"
                },
                "selectPolicyMigrate": {
                  "class": "bestMig"
                },
                "indelPolicyMigrate": {
                  "class": "oldestIDMig"
                }
              }
            },
            "resultFile": "result1.csv"
          },
          {
            "id": 2,
            "initParam": {
              "taillePop": 200,
              "nbGeneration": 200,
              "probaCroisement": 0.8,
              "probaMutation": 0.2,
              "tabProbaMigration": [
                0.1,
                0.4,
                0.5
              ],
              "classUsed": {
                "typeInd": {
                  "class": "itemsetO",
                  "typePrimitif": "char"
                },
                "populate": {
                  "class": "freqPop"
                },
                "evaluate": {
                  "class": "closeEval"
                },
                "crossover": {
                  "class": "multiPCross"
                },
                "mutator": {
                  "class": "randMut"
                },
                "selectPolicy": {
                  "class": "randS"
                },
                "indelPolicy": {
                  "class": "ageID"
                },
                "selectPolicyMigrate": {
                  "class": "tournamentMig"
                },
                "indelPolicyMigrate": {
                  "class": "worstIDMig"
                }
              }
            },
            "resultFile": ""
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "-1 is less than the minimum of 0",
      "python_error": "'' should be non-empty\n\nFailed validating 'minLength' in schema['properties']['name']:\n    {'type': 'string', 'minLength': 1}\n\nOn instance['name']:\n    ''",
      "data": {
        "migration": {
          "nbCandidatMigration": -1,
          "stepMigration": 5
        },
        "name": "",
        "dataFile": "data.csv",
        "tabAlgoGen": [
          {
            "id": 1,
            "initParam": {
              "taillePop": 100,
              "nbGeneration": 100,
              "probaCroisement": 1.1,
              "probaMutation": 0.1,
              "tabProbaMigration": [
                0.2,
                0.3,
                0.5
              ],
              "classUsed": {
                "typeInd": {
                  "class": "itemset",
                  "typePrimitif": "char"
                },
                "populate": {
                  "class": "randPop"
                },
                "evaluate": {
                  "class": "freqEval"
                },
                "crossover": {
                  "class": "monoPCross"
                },
                "mutator": {
                  "class": "randMut"
                },
                "selectPolicy": {
                  "class": "bestS"
                },
                "indelPolicy": {
                  "class": "fitnessID"
                },
                "selectPolicyMigrate": {
                  "class": "bestMig"
                },
                "indelPolicyMigrate": {
                  "class": "oldestIDMig"
                }
              }
            },
            "resultFile": ""
          },
          {
            "id": 2,
            "initParam": {
              "taillePop": 200,
              "nbGeneration": 200,
              "probaCroisement": 0.8,
              "probaMutation": 0.2,
              "tabProbaMigration": [
                0.1,
                0.4,
                0.5
              ],
              "classUsed": {
                "typeInd": {
                  "class": "itemsetO",
                  "typePrimitif": "char"
                },
                "populate": {
                  "class": "freqPop"
                },
                "evaluate": {
                  "class": "closeEval"
                },
                "crossover": {
                  "class": "multiPCross"
                },
                "mutator": {
                  "class": "randMut"
                },
                "selectPolicy": {
                  "class": "randS"
                },
                "indelPolicy": {
                  "class": "ageID"
                },
                "selectPolicyMigrate": {
                  "class": "tournamentMig"
                },
                "indelPolicyMigrate": {
                  "class": "worstIDMig"
                }
              }
            },
            "resultFile": "result2.csv"
          }
        ]
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "migration": {
          "nbCandidatMigration": 10,
          "stepMigration": 5
        },
        "name": "Test",
        "dataFile": "data.txt",
        "tabAlgoGen": [
          {
            "id": 1,
            "initParam": {
              "taillePop": 100,
              "nbGeneration": 100,
              "probaCroisement": 0.8,
              "probaMutation": 0.1,
              "tabProbaMigration": [
                0.2,
                0.3,
                0.5
              ],
              "classUsed": {
                "typeInd": {
                  "class": "itemset",
                  "typePrimitif": "char"
                },
                "populate": {
                  "class": "randPop"
                },
                "evaluate": {
                  "class": "freqEval"
                },
                "crossover": {
                  "class": "monoPCross"
                },
                "mutator": {
                  "class": "randMut"
                },
                "selectPolicy": {
                  "class": "bestS"
                },
                "indelPolicy": {
                  "class": "fitnessID"
                },
                "selectPolicyMigrate": {
                  "class": "bestMig"
                },
                "indelPolicyMigrate": {
                  "class": "oldestIDMig"
                }
              }
            },
            "resultFile": "result1.txt"
          },
          {
            "id": 2,
            "initParam": {
              "taillePop": 200,
              "nbGeneration": 200,
              "probaCroisement": 0.7,
              "probaMutation": 0.2,
              "tabProbaMigration": [
                0.1,
                0.4,
                0.5
              ],
              "classUsed": {
                "typeInd": {
                  "class": "itemsetO",
                  "typePrimitif": "char"
                },
                "populate": {
                  "class": "freqPop"
                },
                "evaluate": {
                  "class": "closeEval"
                },
                "crossover": {
                  "class": "multiPCross"
                },
                "mutator": {
                  "class": "randMut"
                },
                "selectPolicy": {
                  "class": "randS"
                },
                "indelPolicy": {
                  "class": "ageID"
                },
                "selectPolicyMigrate": {
                  "class": "tournamentMig"
                },
                "indelPolicyMigrate": {
                  "class": "worstIDMig"
                }
              }
            },
            "resultFile": "result2.txt"
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on minItems keyword",
      "valid": false,
      "rust_error": "[] has less than 1 item",
      "python_error": "[] should be non-empty\n\nFailed validating 'minItems' in schema['properties']['tabAlgoGen']:\n    {'type': 'array',\n     'items': {'type': 'object',\n               'properties': {'id': {'type': 'integer', 'minimum': 0},\n                              'initParam': {'type': 'object',\n                                            'properties': {'taillePop': {'type': 'integer',\n                                                                         'minimum': 0},\n                                                           'nbGeneration': {'type': 'integer',\n                                                                            'minimum': 0},\n                                                           'probaCroisement': {'type': 'number',\n                                                                               'minimum': 0,\n                                                                               'maximum': 1},\n                                                           'probaMutation': {'type': 'number',.. (7854 more)",
      "data": {
        "migration": {
          "nbCandidatMigration": 10,
          "stepMigration": 5
        },
        "name": "Test",
        "dataFile": "data.txt",
        "tabAlgoGen": []
      }
    },
    {
      "description": "llama-70b generated negative; focus on minimum keyword or maximum keyword",
      "valid": false,
      "rust_error": "-1 is less than the minimum of 0",
      "python_error": "'' should be non-empty\n\nFailed validating 'minLength' in schema['properties']['name']:\n    {'type': 'string', 'minLength': 1}\n\nOn instance['name']:\n    ''",
      "data": {
        "migration": {
          "nbCandidatMigration": -1,
          "stepMigration": 5
        },
        "name": "",
        "dataFile": "data.txt",
        "tabAlgoGen": [
          {
            "id": 1,
            "initParam": {
              "taillePop": 100,
              "nbGeneration": 100,
              "probaCroisement": 1.2,
              "probaMutation": -0.1,
              "tabProbaMigration": [
                0.2,
                1.3,
                0.5
              ],
              "classUsed": {
                "typeInd": {
                  "class": "itemset",
                  "typePrimitif": "char"
                },
                "populate": {
                  "class": "randPop"
                },
                "evaluate": {
                  "class": "freqEval"
                },
                "crossover": {
                  "class": "monoPCross"
                },
                "mutator": {
                  "class": "randMut"
                },
                "selectPolicy": {
                  "class": "bestS"
                },
                "indelPolicy": {
                  "class": "fitnessID"
                },
                "selectPolicyMigrate": {
                  "class": "bestMig"
                },
                "indelPolicyMigrate": {
                  "class": "oldestIDMig"
                }
              }
            },
            "resultFile": "result1.txt"
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on minLength keyword",
      "valid": false,
      "rust_error": "\"\" is shorter than 1 character",
      "python_error": "'' should be non-empty\n\nFailed validating 'minLength' in schema['properties']['name']:\n    {'type': 'string', 'minLength': 1}\n\nOn instance['name']:\n    ''",
      "data": {
        "migration": {
          "nbCandidatMigration": 10,
          "stepMigration": 5
        },
        "name": "",
        "dataFile": "data.txt",
        "tabAlgoGen": [
          {
            "id": 1,
            "initParam": {
              "taillePop": 100,
              "nbGeneration": 100,
              "probaCroisement": 0.8,
              "probaMutation": 0.1,
              "tabProbaMigration": [
                0.2,
                0.3,
                0.5
              ],
              "classUsed": {
                "typeInd": {
                  "class": "itemset",
                  "typePrimitif": "char"
                },
                "populate": {
                  "class": "randPop"
                },
                "evaluate": {
                  "class": "freqEval"
                },
                "crossover": {
                  "class": "monoPCross"
                },
                "mutator": {
                  "class": "randMut"
                },
                "selectPolicy": {
                  "class": "bestS"
                },
                "indelPolicy": {
                  "class": "fitnessID"
                },
                "selectPolicyMigrate": {
                  "class": "bestMig"
                },
                "indelPolicyMigrate": {
                  "class": "oldestIDMig"
                }
              }
            },
            "resultFile": "result1.txt"
          },
          {
            "id": 2,
            "initParam": {
              "taillePop": 200,
              "nbGeneration": 200,
              "probaCroisement": 0.7,
              "probaMutation": 0.2,
              "tabProbaMigration": [
                0.1,
                0.4,
                0.5
              ],
              "classUsed": {
                "typeInd": {
                  "class": "itemsetO",
                  "typePrimitif": "char"
                },
                "populate": {
                  "class": "freqPop"
                },
                "evaluate": {
                  "class": "closeEval"
                },
                "crossover": {
                  "class": "multiPCross"
                },
                "mutator": {
                  "class": "randMut"
                },
                "selectPolicy": {
                  "class": "randS"
                },
                "indelPolicy": {
                  "class": "ageID"
                },
                "selectPolicyMigrate": {
                  "class": "tournamentMig"
                },
                "indelPolicyMigrate": {
                  "class": "worstIDMig"
                }
              }
            },
            "resultFile": "result2.txt"
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"\" is shorter than 1 character",
      "python_error": "'' should be non-empty\n\nFailed validating 'minLength' in schema['properties']['name']:\n    {'type': 'string', 'minLength': 1}\n\nOn instance['name']:\n    ''",
      "data": {
        "migration": {
          "nbCandidatMigration": 0,
          "stepMigration": 0
        },
        "name": "",
        "dataFile": "",
        "tabAlgoGen": [
          {
            "id": 0,
            "initParam": {
              "taillePop": 0,
              "nbGeneration": 0,
              "probaCroisement": 0,
              "probaMutation": 0,
              "tabProbaMigration": [
                0,
                0,
                0
              ],
              "classUsed": {
                "typeInd": {
                  "class": "itemsetO",
                  "typePrimitif": "int"
                },
                "populate": {
                  "class": "randPop"
                },
                "evaluate": {
                  "class": "freqEval"
                },
                "crossover": {
                  "class": "monoPCross"
                },
                "mutator": {
                  "class": "randMut"
                },
                "selectPolicy": {
                  "class": "bestS"
                },
                "indelPolicy": {
                  "class": "fitnessID"
                },
                "selectPolicyMigrate": {
                  "class": "bestMig"
                },
                "indelPolicyMigrate": {
                  "class": "oldestIDMig"
                }
              }
            },
            "resultFile": ""
          }
        ]
      }
    }
  ]
}