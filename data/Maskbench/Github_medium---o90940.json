{
  "description": "sample Github_medium/o90940.json",
  "meta": {
    "full_size": 1618,
    "stripped_size": 1618,
    "features": [
      "$ref",
      "@minmaxLength",
      "@siblingKeys",
      "additionalProperties",
      "allOf",
      "dependencies",
      "enum",
      "items",
      "not",
      "oneOf"
    ],
    "raw_features": [
      "$schema",
      "_boolSchema",
      "definitions",
      "minLength",
      "properties",
      "required",
      "type",
      "type:array",
      "type:integer",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "definitions": {
      "subField": {
        "type": "object",
        "properties": {
          "tag": {
            "type": "string",
            "minLength": 2
          }
        },
        "additionalProperties": false
      },
      "complexType": {
        "type": "object",
        "required": [
          "type"
        ],
        "oneOf": [
          {
            "properties": {
              "type": {
                "enum": [
                  "value1"
                ]
              }
            },
            "required": [
              "dataSets"
            ]
          },
          {
            "properties": {
              "type": {
                "enum": [
                  "value2"
                ]
              }
            },
            "required": [
              "subFields"
            ]
          }
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "value2",
              "value1"
            ]
          },
          "dataSets": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "code",
                "subFields"
              ],
              "properties": {
                "code": {
                  "type": "string"
                },
                "subFields": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/subField"
                  }
                }
              }
            }
          },
          "subFields": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/subField"
            }
          }
        },
        "dependencies": {
          "dataSets": {
            "properties": {
              "type": {
                "enum": [
                  "value1"
                ]
              }
            }
          },
          "subFields": {
            "properties": {
              "type": {
                "enum": [
                  "value2"
                ]
              }
            }
          }
        },
        "additionalProperties": false
      },
      "dataElement": {
        "type": "object",
        "oneOf": [
          {
            "required": [
              "code",
              "defaultUsage",
              "usages",
              "name"
            ]
          },
          {
            "allOf": [
              {
                "not": {
                  "required": [
                    "usages"
                  ]
                }
              },
              {
                "required": [
                  "code",
                  "format",
                  "name"
                ]
              }
            ]
          }
        ],
        "properties": {
          "code": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "format": {
            "type": "string"
          },
          "defaultUsage": {
            "type": "string"
          },
          "usages": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/usage"
            }
          },
          "complexType": {
            "$ref": "#/definitions/complexType"
          }
        },
        "additionalProperties": false
      },
      "usage": {
        "type": "object",
        "required": [
          "name",
          "field"
        ],
        "properties": {
          "name": {
            "type": "string"
          },
          "field": {
            "$ref": "#/definitions/dataElement"
          }
        },
        "additionalProperties": false
      }
    },
    "type": "object",
    "properties": {
      "fields": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/dataElement"
        }
      }
    },
    "additionalProperties": false
  },
  "tests": [
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "fields": [
          {
            "code": 1,
            "name": "Data Element 1",
            "format": "string",
            "complexType": {
              "type": "value1",
              "dataSets": [
                {
                  "code": "DataSet1",
                  "subFields": [
                    {
                      "tag": "tag1"
                    },
                    {
                      "tag": "tag2"
                    }
                  ]
                },
                {
                  "code": "DataSet2",
                  "subFields": [
                    {
                      "tag": "tag3"
                    }
                  ]
                }
              ]
            }
          },
          {
            "code": 2,
            "name": "Data Element 2",
            "defaultUsage": "default",
            "usages": [
              {
                "name": "Usage 1",
                "field": {
                  "code": 3,
                  "name": "Data Element 3",
                  "format": "integer"
                }
              },
              {
                "name": "Usage 2",
                "field": {
                  "code": 4,
                  "name": "Data Element 4",
                  "format": "boolean"
                }
              }
            ],
            "complexType": {
              "type": "value2",
              "subFields": [
                {
                  "tag": "tag4"
                },
                {
                  "tag": "tag5"
                }
              ]
            }
          }
        ]
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "fields": [
          {
            "code": 1,
            "name": "Field 1",
            "format": "string",
            "complexType": {
              "type": "value1",
              "dataSets": [
                {
                  "code": "code1",
                  "subFields": [
                    {
                      "tag": "tag1"
                    }
                  ]
                }
              ]
            }
          },
          {
            "code": 2,
            "name": "Field 2",
            "format": "integer",
            "complexType": {
              "type": "value2",
              "subFields": [
                {
                  "tag": "tag2"
                }
              ]
            }
          },
          {
            "code": 3,
            "name": "Field 3",
            "defaultUsage": "default",
            "usages": [
              {
                "name": "usage1",
                "field": {
                  "code": 1,
                  "name": "Field 1",
                  "format": "string",
                  "complexType": {
                    "type": "value1",
                    "dataSets": [
                      {
                        "code": "code1",
                        "subFields": [
                          {
                            "tag": "tag1"
                          }
                        ]
                      }
                    ]
                  }
                }
              }
            ]
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on oneOf keyword",
      "valid": false,
      "rust_error": "{\"code\":1,\"name\":\"Field 1\",\"complexType\":{\"type\":\"value1\",\"subFields\":[{\"tag\":\"tag1\"}]}} is not valid under any of the schemas listed in the 'oneOf' keyword",
      "python_error": "{'code': 1, 'name': 'Field 1', 'complexType': {'type': 'value1', 'subFields': [{'tag': 'tag1'}]}} is not valid under any of the given schemas\n\nFailed validating 'oneOf' in schema['properties']['fields']['items']:\n    {'type': 'object',\n     'oneOf': [{'required': ['code', 'defaultUsage', 'usages', 'name']},\n               {'allOf': [{'not': {'required': ['usages']}},\n                          {'required': ['code', 'format', 'name']}]}],\n     'properties': {'code': {'type': 'integer'},\n                    'name': {'type': 'string'},\n                    'format': {'type': 'string'},\n                    'defaultUsage': {'type': 'string'},\n                    'usages': {'type': 'array',\n                               'items': {'$ref': '#/definitions/usage'}},\n                    'complexType': {'$ref': '#/definitions/complexType'}},\n     'additionalProperties': False}\n\nOn instance['fields'][0]:\n    {'code': 1,\n     'name': 'Field 1',\n     'complexType': {'type': 'value1', 'subFields': [{'tag': 'tag1'}]}}",
      "data": {
        "fields": [
          {
            "code": 1,
            "name": "Field 1",
            "complexType": {
              "type": "value1",
              "subFields": [
                {
                  "tag": "tag1"
                }
              ]
            }
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on dependencies keyword",
      "valid": false,
      "rust_error": "{\"type\":\"value2\",\"dataSets\":[{\"code\":\"code1\",\"subFields\":[{\"tag\":\"tag1\"}]}]} is not valid under any of the schemas listed in the 'oneOf' keyword",
      "python_error": "'value2' is not one of ['value1']\n\nFailed validating 'enum' in schema[0]['properties']['type']:\n    {'enum': ['value1']}\n\nOn instance['type']:\n    'value2'",
      "data": {
        "fields": [
          {
            "code": 1,
            "name": "Field 1",
            "format": "string",
            "complexType": {
              "type": "value2",
              "dataSets": [
                {
                  "code": "code1",
                  "subFields": [
                    {
                      "tag": "tag1"
                    }
                  ]
                }
              ]
            }
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on minLength keyword",
      "valid": false,
      "rust_error": "\"a\" is shorter than 2 characters",
      "python_error": "'a' is too short\n\nFailed validating 'minLength' in schema['properties']['fields']['items']['properties']['complexType']['properties']['dataSets']['items']['properties']['subFields']['items']['properties']['tag']:\n    {'type': 'string', 'minLength': 2}\n\nOn instance['fields'][0]['complexType']['dataSets'][0]['subFields'][0]['tag']:\n    'a'",
      "data": {
        "fields": [
          {
            "code": 1,
            "name": "Field 1",
            "format": "string",
            "complexType": {
              "type": "value1",
              "dataSets": [
                {
                  "code": "code1",
                  "subFields": [
                    {
                      "tag": "a"
                    }
                  ]
                }
              ]
            }
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"\" is shorter than 2 characters",
      "python_error": "Additional properties are not allowed ('extraProperty' was unexpected)\n\nFailed validating 'additionalProperties' in schema:\n    {'$schema': 'http://json-schema.org/draft-07/schema#',\n     'definitions': {'subField': {'type': 'object',\n                                  'properties': {'tag': {'type': 'string',\n                                                         'minLength': 2}},\n                                  'additionalProperties': False},\n                     'complexType': {'type': 'object',\n                                     'required': ['type'],\n                                     'oneOf': [{'properties': {'type': {'enum': ['value1']}},\n                                                'required': ['dataSets']},\n                                               {'properties': {'type': {'enum': ['value2']}},\n                                                'required': ['subFields']}],\n                                     'properties': {'type': {'type': 'string',\n                                        .. (3987 more)",
      "data": {
        "fields": [
          {
            "code": 1,
            "name": "Field 1",
            "format": "string",
            "complexType": {
              "type": "value1",
              "dataSets": [
                {
                  "code": "code1",
                  "subFields": [
                    {
                      "tag": ""
                    },
                    {
                      "tag": "tag1"
                    }
                  ]
                }
              ]
            }
          },
          {
            "code": 2,
            "name": "Field 2",
            "format": "integer",
            "complexType": {
              "type": "value2",
              "subFields": [
                {
                  "tag": "tag2"
                }
              ],
              "extraProperty": "value"
            }
          }
        ],
        "extraProperty": "value"
      }
    }
  ]
}