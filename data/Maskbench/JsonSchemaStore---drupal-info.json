{
  "description": "sample JsonSchemaStore/drupal-info.json",
  "meta": {
    "full_size": 4268,
    "stripped_size": 2479,
    "features": [
      "$ref",
      "@siblingKeys",
      "additionalProperties",
      "additionalProperties:object",
      "allOf",
      "const",
      "enum",
      "if",
      "items",
      "oneOf",
      "pattern",
      "then",
      "uniqueItems"
    ],
    "raw_features": [
      "$id",
      "$schema",
      "definitions",
      "properties",
      "required",
      "type",
      "type:array",
      "type:boolean",
      "type:integer",
      "type:number",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$id": "https://json.schemastore.org/drupal-info.json",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "allOf": [
      {
        "if": {
          "properties": {
            "type": {
              "const": "module"
            }
          }
        },
        "then": {
          "properties": {
            "configure": {
              "title": "A route name of the configuration form",
              "type": "string"
            },
            "dependencies": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/dependency"
              }
            },
            "test_dependencies": {
              "title": "Dependencies that are needed to run certain automated tests for this extension",
              "type": "array",
              "items": {
                "$ref": "#/definitions/dependency"
              }
            }
          }
        }
      },
      {
        "if": {
          "properties": {
            "type": {
              "const": "theme"
            }
          }
        },
        "then": {
          "properties": {
            "base theme": {
              "title": "Base theme",
              "default": "classy",
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "libraries": {
              "title": "A list of libraries to add to all pages where the theme is active",
              "type": "array",
              "items": {
                "type": "string",
                "pattern": "^[a-z0-9_]+/[a-z0-9_\\-.]+$"
              }
            },
            "libraries-override": {
              "title": "A collection of libraries and assets to override",
              "type": "object",
              "additionalProperties": {
                "oneOf": [
                  {
                    "type": "object"
                  },
                  {
                    "type": "string"
                  },
                  {
                    "type": "boolean"
                  }
                ]
              }
            },
            "libraries-extend": {
              "title": "A collection of libraries and assets to add whenever a library is attached",
              "type": "object",
              "additionalProperties": {
                "type": "array"
              }
            },
            "engine": {
              "title": "The theme engine",
              "default": "twig",
              "type": "string"
            },
            "logo": {
              "title": "The path to logo relative to the theme's .info.yml",
              "type": "string"
            },
            "screenshot": {
              "title": "The path to screenshot relative to the theme's .info.yml file",
              "type": "string"
            },
            "regions": {
              "title": "A list of theme regions",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "regions_hidden": {
              "title": "A list of inherited regions to remove",
              "type": "array",
              "uniqueItems": true
            },
            "features": {
              "title": "A list of features to expose on the theme 'Settings' page",
              "type": "array",
              "items": {
                "type": "string"
              },
              "uniqueItems": true
            },
            "stylesheets-remove": {
              "title": "A list of stylesheets from other modules or themes to remove from all pages where the theme is active",
              "type": "array",
              "items": {
                "type": "string"
              },
              "uniqueItems": true
            },
            "ckeditor_stylesheets": {
              "title": "A list of stylesheets to add to the CKEditor frame",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      {
        "if": {
          "properties": {
            "type": {
              "const": "profile"
            }
          }
        },
        "then": {
          "properties": {
            "distribution": {
              "title": "Declare the installation profile as a distribution",
              "type": "object",
              "properties": {
                "name": {
                  "title": "The distribution name",
                  "type": "string"
                },
                "install": {
                  "type": "object",
                  "properties": {
                    "theme": {
                      "title": "The theme for the distribution installation",
                      "$ref": "#/definitions/machine_name"
                    }
                  }
                },
                "langcode": {
                  "type": "string"
                }
              }
            },
            "dependencies": {
              "title": "Required modules",
              "type": "array",
              "items": {
                "$ref": "#/definitions/machine_name"
              },
              "uniqueItems": true
            },
            "install": {
              "title": "Modules to install to support the profile",
              "type": "array",
              "items": {
                "$ref": "#/definitions/dependency"
              },
              "uniqueItems": true
            },
            "theme": {
              "title": "List any themes that should be installed as part of the profile installation",
              "type": "array",
              "items": {
                "$ref": "#/definitions/machine_name"
              },
              "uniqueItems": true
            }
          }
        }
      }
    ],
    "definitions": {
      "dependency": {
        "title": "Extension dependency",
        "type": "string",
        "pattern": "^[a-z0-9_]+:[a-z0-9_]+( \\(.+\\))?$"
      },
      "machine_name": {
        "title": "Machine name",
        "type": "string",
        "pattern": "^[a-z0-9_]+$"
      }
    },
    "properties": {
      "name": {
        "title": "The human-readable name",
        "type": "string"
      },
      "type": {
        "type": "string",
        "enum": [
          "module",
          "theme",
          "profile",
          "theme_engine"
        ]
      },
      "core": {
        "type": "string",
        "pattern": "^\\d\\.x$"
      },
      "core_version_requirement": {
        "title": "Semantic core version requirement",
        "type": "string"
      },
      "description": {
        "title": "Extension description",
        "type": "string"
      },
      "package": {
        "title": "A key that allows to group extension together an administrative pages",
        "type": "string"
      },
      "version": {
        "title": "The version of the extension",
        "type": "string"
      },
      "project": {
        "title": "The machine name of extension project on drupal.org",
        "type": "string"
      },
      "datestamp": {
        "title": "The date and time when the extension was packaged",
        "type": "integer"
      },
      "hidden": {
        "title": "Do not the extension in admin interface",
        "type": "boolean"
      },
      "php": {
        "title": "The minimal PHP version that is required for this extension",
        "oneOf": [
          {
            "type": "string",
            "pattern": "^\\d+\\.\\d+(\\.\\d+)$"
          },
          {
            "type": "number"
          }
        ]
      }
    },
    "required": [
      "type",
      "core_version_requirement",
      "name"
    ],
    "title": "JSON schema for Drupal extension info file",
    "type": "object"
  },
  "tests": [
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "name": "Example Module",
        "type": "module",
        "core": "8.x",
        "core_version_requirement": "^8 || ^9",
        "description": "This is an example module.",
        "package": "Custom",
        "version": "1.0",
        "project": "example_module",
        "datestamp": 1643723400,
        "configure": "example_module.settings",
        "dependencies": [
          "drupal:block",
          "drupal:node"
        ],
        "test_dependencies": [
          "drupal:views"
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on additionalProperties keyword with an object schema",
      "valid": false,
      "rust_error": "123 is not of type \"string\"",
      "python_error": "123 is not of type 'string'\n\nFailed validating 'type' in schema['properties']['version']:\n    {'title': 'The version of the extension', 'type': 'string'}\n\nOn instance['version']:\n    123",
      "data": {
        "name": 123,
        "type": 123,
        "core": "invalid",
        "core_version_requirement": "invalid",
        "description": 123,
        "package": 123,
        "version": 123,
        "project": 123,
        "datestamp": "invalid",
        "configure": 123,
        "dependencies": [
          "invalid"
        ],
        "test_dependencies": [
          "invalid"
        ],
        "libraries-override": [
          "invalid",
          "invalid"
        ],
        "invalid_key": "invalid_value",
        "libraries-extend": [
          "invalid",
          "invalid"
        ],
        "regions": {
          "an_invalid_key": 123
        },
        "distribution": {
          "name": "test",
          "install": {
            "theme": "test"
          },
          "langcode": "test"
        },
        "install": {
          "required": "test"
        },
        "theme": {
          "required": "test"
        },
        "base theme": "invalid",
        "engine": "invalid",
        "logo": "invalid",
        "screenshot": "invalid",
        "features": [
          "invalid",
          123
        ],
        "stylesheets-remove": [
          "invalid",
          123
        ],
        "ckeditor_stylesheets": [
          "invalid",
          123
        ],
        "regions_hidden": [
          "invalid",
          123
        ],
        "php": "invalid",
        "hidden": "invalid",
        "libraries": [
          "invalid",
          "invalid"
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on allOf keyword",
      "valid": false,
      "rust_error": "123 is not of type \"string\"",
      "python_error": "123 is not of type 'string'\n\nFailed validating 'type' in schema['allOf'][0]['then']['properties']['configure']:\n    {'title': 'A route name of the configuration form', 'type': 'string'}\n\nOn instance['configure']:\n    123",
      "data": {
        "name": "Example Module",
        "type": "module",
        "core": "8.x",
        "core_version_requirement": "^8 || ^9",
        "description": "This is an example module.",
        "package": "Custom",
        "version": "1.0",
        "project": "example_module",
        "datestamp": 1643723400,
        "configure": 123,
        "dependencies": [
          "drupal:block",
          "drupal:node"
        ],
        "test_dependencies": [
          "drupal:views"
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on if keyword or then keyword",
      "valid": false,
      "rust_error": "123 is not of type \"string\"",
      "python_error": "123 is not of type 'string'\n\nFailed validating 'type' in schema['allOf'][0]['then']['properties']['configure']:\n    {'title': 'A route name of the configuration form', 'type': 'string'}\n\nOn instance['configure']:\n    123",
      "data": {
        "name": "Example Module",
        "type": "module",
        "core": "8.x",
        "core_version_requirement": "^8 || ^9",
        "description": "This is an example module.",
        "package": "Custom",
        "version": "1.0",
        "project": "example_module",
        "datestamp": 1643723400,
        "configure": 123,
        "dependencies": [
          "drupal:block",
          "drupal:node"
        ],
        "test_dependencies": [
          "drupal:views"
        ]
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "123 is not of type \"string\"",
      "python_error": "123 is not of type 'string'\n\nFailed validating 'type' in schema['allOf'][0]['then']['properties']['configure']:\n    {'title': 'A route name of the configuration form', 'type': 'string'}\n\nOn instance['configure']:\n    123",
      "data": {
        "name": "Example Module",
        "type": "module",
        "core": "8.x",
        "core_version_requirement": "^8 || ^9",
        "description": "This is an example module.",
        "package": "Custom",
        "version": "1.0",
        "project": "example_module",
        "datestamp": 1643723400,
        "configure": 123,
        "dependencies": [
          "drupal:block",
          456
        ],
        "test_dependencies": [
          "drupal:views"
        ]
      }
    }
  ]
}