{
  "description": "sample Github_medium/o9877.json",
  "meta": {
    "full_size": 2379,
    "stripped_size": 2223,
    "features": [
      "@minmaxLength",
      "additionalProperties",
      "enum",
      "format",
      "format:date-time",
      "items",
      "oneOf",
      "pattern",
      "patternProperties"
    ],
    "raw_features": [
      "$schema",
      "_boolSchema",
      "maxLength",
      "minLength",
      "properties",
      "required",
      "type",
      "type:array",
      "type:boolean",
      "type:integer",
      "type:null",
      "type:number",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "type": "object",
    "properties": {
      "items": {
        "type": "array",
        "items": {
          "title": "Experience Endpoint",
          "description": "Schema for a single Experience Endpoint",
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "pattern": "^[A-Fa-f\\d]{24}$"
            },
            "experienceEndpointId": {
              "type": "string",
              "pattern": "^[A-Fa-f\\d]{24}$"
            },
            "applicationId": {
              "type": "string",
              "pattern": "^[A-Fa-f\\d]{24}$"
            },
            "creationDate": {
              "type": "string",
              "format": "date-time"
            },
            "lastUpdated": {
              "type": "string",
              "format": "date-time"
            },
            "createdById": {
              "type": "string",
              "pattern": "^[A-Fa-f\\d]{24}$"
            },
            "createdByType": {
              "type": "string",
              "enum": [
                "flow",
                "user",
                "apiToken"
              ]
            },
            "lastUpdatedById": {
              "type": "string",
              "pattern": "^[A-Fa-f\\d]{24}$"
            },
            "lastUpdatedByType": {
              "type": "string",
              "enum": [
                "flow",
                "user",
                "apiToken"
              ]
            },
            "description": {
              "type": "string",
              "maxLength": 32767
            },
            "route": {
              "type": "string",
              "minLength": 1,
              "maxLength": 1024
            },
            "enabled": {
              "type": "boolean"
            },
            "method": {
              "type": "string",
              "enum": [
                "delete",
                "get",
                "options",
                "patch",
                "post",
                "put"
              ]
            },
            "access": {
              "type": "string",
              "enum": [
                "public",
                "authenticated",
                "group"
              ]
            },
            "endpointTags": {
              "type": "object",
              "patternProperties": {
                "^[0-9a-zA-Z_-]{1,255}$": {
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 255
                }
              },
              "additionalProperties": false
            },
            "staticReply": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "string"
                    },
                    "statusCode": {
                      "type": "number",
                      "min": 100,
                      "max": 599,
                      "integer": true
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "page",
                        "redirect"
                      ]
                    }
                  },
                  "required": [
                    "value",
                    "type"
                  ],
                  "additionalProperties": false
                },
                {
                  "type": "null"
                }
              ]
            },
            "unauthorizedReply": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "string"
                    },
                    "statusCode": {
                      "type": "number",
                      "min": 100,
                      "max": 599,
                      "integer": true
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "page",
                        "redirect"
                      ]
                    }
                  },
                  "required": [
                    "value",
                    "type"
                  ],
                  "additionalProperties": false
                },
                {
                  "type": "null"
                }
              ]
            },
            "experienceGroups": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 255
                  },
                  "id": {
                    "type": "string",
                    "pattern": "^[A-Fa-f\\d]{24}$"
                  }
                }
              }
            }
          }
        }
      },
      "count": {
        "type": "integer"
      },
      "totalCount": {
        "type": "integer"
      },
      "filter": {
        "type": "string"
      },
      "filterField": {
        "type": "string"
      },
      "sortField": {
        "type": "string"
      },
      "sortDirection": {
        "type": "string",
        "enum": [
          "asc",
          "desc",
          "ASC",
          "DESC",
          ""
        ]
      },
      "applicationId": {
        "type": "string",
        "pattern": "^[A-Fa-f\\d]{24}$"
      },
      "experienceGroupId": {
        "type": "string",
        "pattern": "^[A-Fa-f\\d]{24}$"
      },
      "notFoundRequestCount": {
        "type": "number"
      }
    }
  },
  "tests": [
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "items": [
          {
            "id": "62a2f7a7a2f7a7a2f7a7a2f7",
            "experienceEndpointId": "62a2f7a7a2f7a7a2f7a7a2f7",
            "applicationId": "62a2f7a7a2f7a7a2f7a7a2f7",
            "creationDate": "2022-06-14T14:30:00.000Z",
            "lastUpdated": "2022-06-14T14:30:00.000Z",
            "createdById": "62a2f7a7a2f7a7a2f7a7a2f7",
            "createdByType": "user",
            "lastUpdatedById": "62a2f7a7a2f7a7a2f7a7a2f7",
            "lastUpdatedByType": "user",
            "description": "Example endpoint",
            "route": "/example",
            "enabled": true,
            "method": "get",
            "access": "public",
            "endpointTags": {
              "tag1": "value1",
              "tag2": "value2"
            },
            "staticReply": {
              "value": "Hello, world!",
              "statusCode": 200,
              "type": "page"
            },
            "unauthorizedReply": null,
            "experienceGroups": [
              {
                "name": "Group 1",
                "id": "62a2f7a7a2f7a7a2f7a7a2f7"
              },
              {
                "name": "Group 2",
                "id": "62a2f7a7a2f7a7a2f7a7a2f7"
              }
            ]
          }
        ],
        "count": 1,
        "totalCount": 1,
        "filter": "",
        "filterField": "",
        "sortField": "",
        "sortDirection": "asc",
        "applicationId": "62a2f7a7a2f7a7a2f7a7a2f7",
        "experienceGroupId": "62a2f7a7a2f7a7a2f7a7a2f7",
        "notFoundRequestCount": 0
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "items": [
          {
            "id": "5f5f5f5f5f5f5f5f5f5f5f5f",
            "experienceEndpointId": "5f5f5f5f5f5f5f5f5f5f5f5f",
            "applicationId": "5f5f5f5f5f5f5f5f5f5f5f5f",
            "creationDate": "2022-01-01T12:00:00.000Z",
            "lastUpdated": "2022-01-01T12:00:00.000Z",
            "createdById": "5f5f5f5f5f5f5f5f5f5f5f5f",
            "createdByType": "user",
            "lastUpdatedById": "5f5f5f5f5f5f5f5f5f5f5f5f",
            "lastUpdatedByType": "user",
            "description": "Example endpoint",
            "route": "/example",
            "enabled": true,
            "method": "get",
            "access": "public",
            "endpointTags": {
              "tag1": "value1",
              "tag2": "value2"
            },
            "staticReply": {
              "value": "Hello, world!",
              "statusCode": 200,
              "type": "page"
            },
            "unauthorizedReply": null,
            "experienceGroups": [
              {
                "name": "Group 1",
                "id": "5f5f5f5f5f5f5f5f5f5f5f5f"
              },
              {
                "name": "Group 2",
                "id": "5f5f5f5f5f5f5f5f5f5f5f5f"
              }
            ]
          }
        ],
        "count": 1,
        "totalCount": 1,
        "filter": "",
        "filterField": "",
        "sortField": "",
        "sortDirection": "asc",
        "applicationId": "5f5f5f5f5f5f5f5f5f5f5f5f",
        "experienceGroupId": "5f5f5f5f5f5f5f5f5f5f5f5f",
        "notFoundRequestCount": 0
      }
    },
    {
      "description": "llama-70b generated negative; focus on pattern keyword",
      "valid": false,
      "rust_error": "\"InvalidId\" does not match \"^[A-Fa-f\\d]{24}$\"",
      "python_error": "'InvalidId' does not match '^[A-Fa-f\\\\d]{24}$'\n\nFailed validating 'pattern' in schema['properties']['items']['items']['properties']['id']:\n    {'type': 'string', 'pattern': '^[A-Fa-f\\\\d]{24}$'}\n\nOn instance['items'][0]['id']:\n    'InvalidId'",
      "data": {
        "items": [
          {
            "id": "InvalidId",
            "experienceEndpointId": "5f5f5f5f5f5f5f5f5f5f5f5f",
            "applicationId": "5f5f5f5f5f5f5f5f5f5f5f5f",
            "creationDate": "2022-01-01T12:00:00.000Z",
            "lastUpdated": "2022-01-01T12:00:00.000Z",
            "createdById": "5f5f5f5f5f5f5f5f5f5f5f5f",
            "createdByType": "user",
            "lastUpdatedById": "5f5f5f5f5f5f5f5f5f5f5f5f",
            "lastUpdatedByType": "user",
            "description": "Example endpoint",
            "route": "/example",
            "enabled": true,
            "method": "get",
            "access": "public",
            "endpointTags": {
              "tag1": "value1",
              "tag2": "value2"
            },
            "staticReply": {
              "value": "Hello, world!",
              "statusCode": 200,
              "type": "page"
            },
            "unauthorizedReply": null,
            "experienceGroups": [
              {
                "name": "Group 1",
                "id": "5f5f5f5f5f5f5f5f5f5f5f5f"
              },
              {
                "name": "Group 2",
                "id": "5f5f5f5f5f5f5f5f5f5f5f5f"
              }
            ]
          }
        ],
        "count": 1,
        "totalCount": 1,
        "filter": "",
        "filterField": "",
        "sortField": "",
        "sortDirection": "asc",
        "applicationId": "5f5f5f5f5f5f5f5f5f5f5f5f",
        "experienceGroupId": "5f5f5f5f5f5f5f5f5f5f5f5f",
        "notFoundRequestCount": 0
      }
    },
    {
      "description": "llama-70b generated negative; focus on oneOf keyword",
      "valid": false,
      "rust_error": "{\"value\":\"Hello, world!\",\"statusCode\":200,\"type\":\"page\",\"extraProperty\":\"Oh no!\"} is not valid under any of the schemas listed in the 'oneOf' keyword",
      "python_error": "Additional properties are not allowed ('extraProperty' was unexpected)\n\nFailed validating 'additionalProperties' in schema[0]:\n    {'type': 'object',\n     'properties': {'value': {'type': 'string'},\n                    'statusCode': {'type': 'number',\n                                   'min': 100,\n                                   'max': 599,\n                                   'integer': True},\n                    'type': {'type': 'string',\n                             'enum': ['page', 'redirect']}},\n     'required': ['value', 'type'],\n     'additionalProperties': False}\n\nOn instance:\n    {'value': 'Hello, world!',\n     'statusCode': 200,\n     'type': 'page',\n     'extraProperty': 'Oh no!'}",
      "data": {
        "items": [
          {
            "id": "5f5f5f5f5f5f5f5f5f5f5f5f",
            "experienceEndpointId": "5f5f5f5f5f5f5f5f5f5f5f5f",
            "applicationId": "5f5f5f5f5f5f5f5f5f5f5f5f",
            "creationDate": "2022-01-01T12:00:00.000Z",
            "lastUpdated": "2022-01-01T12:00:00.000Z",
            "createdById": "5f5f5f5f5f5f5f5f5f5f5f5f",
            "createdByType": "user",
            "lastUpdatedById": "5f5f5f5f5f5f5f5f5f5f5f5f",
            "lastUpdatedByType": "user",
            "description": "Example endpoint",
            "route": "/example",
            "enabled": true,
            "method": "get",
            "access": "public",
            "endpointTags": {
              "tag1": "value1",
              "tag2": "value2"
            },
            "staticReply": {
              "value": "Hello, world!",
              "statusCode": 200,
              "type": "page",
              "extraProperty": "Oh no!"
            },
            "unauthorizedReply": null,
            "experienceGroups": [
              {
                "name": "Group 1",
                "id": "5f5f5f5f5f5f5f5f5f5f5f5f"
              },
              {
                "name": "Group 2",
                "id": "5f5f5f5f5f5f5f5f5f5f5f5f"
              }
            ]
          }
        ],
        "count": 1,
        "totalCount": 1,
        "filter": "",
        "filterField": "",
        "sortField": "",
        "sortDirection": "asc",
        "applicationId": "5f5f5f5f5f5f5f5f5f5f5f5f",
        "experienceGroupId": "5f5f5f5f5f5f5f5f5f5f5f5f",
        "notFoundRequestCount": 0
      }
    },
    {
      "description": "llama-70b generated negative; focus on minLength keyword or maxLength keyword",
      "valid": false,
      "rust_error": "\"\" is shorter than 1 character",
      "python_error": "'' should be non-empty\n\nFailed validating 'minLength' in schema['properties']['items']['items']['properties']['route']:\n    {'type': 'string', 'minLength': 1, 'maxLength': 1024}\n\nOn instance['items'][0]['route']:\n    ''",
      "data": {
        "items": [
          {
            "id": "5f5f5f5f5f5f5f5f5f5f5f5f",
            "experienceEndpointId": "5f5f5f5f5f5f5f5f5f5f5f5f",
            "applicationId": "5f5f5f5f5f5f5f5f5f5f5f5f",
            "creationDate": "2022-01-01T12:00:00.000Z",
            "lastUpdated": "2022-01-01T12:00:00.000Z",
            "createdById": "5f5f5f5f5f5f5f5f5f5f5f5f",
            "createdByType": "user",
            "lastUpdatedById": "5f5f5f5f5f5f5f5f5f5f5f5f",
            "lastUpdatedByType": "user",
            "description": "Example endpoint",
            "route": "",
            "enabled": true,
            "method": "get",
            "access": "public",
            "endpointTags": {
              "tag1": "value1",
              "tag2": "value2"
            },
            "staticReply": {
              "value": "Hello, world!",
              "statusCode": 200,
              "type": "page"
            },
            "unauthorizedReply": null,
            "experienceGroups": [
              {
                "name": "",
                "id": "5f5f5f5f5f5f5f5f5f5f5f5f"
              },
              {
                "name": "Group 2",
                "id": "5f5f5f5f5f5f5f5f5f5f5f5f"
              }
            ]
          }
        ],
        "count": 1,
        "totalCount": 1,
        "filter": "",
        "filterField": "",
        "sortField": "",
        "sortDirection": "asc",
        "applicationId": "5f5f5f5f5f5f5f5f5f5f5f5f",
        "experienceGroupId": "5f5f5f5f5f5f5f5f5f5f5f5f",
        "notFoundRequestCount": 0
      }
    },
    {
      "description": "llama-70b generated negative; focus on patternProperties keyword",
      "valid": false,
      "rust_error": "Additional properties are not allowed ('invalid@tag' was unexpected)",
      "python_error": "'<--- invalid key', '<--- invalid pattern', 'invalid@tag' do not match any of the regexes: '^[0-9a-zA-Z_-]{1,255}$'\n\nFailed validating 'additionalProperties' in schema['properties']['items']['items']['properties']['endpointTags']:\n    {'type': 'object',\n     'patternProperties': {'^[0-9a-zA-Z_-]{1,255}$': {'type': 'string',\n                                                      'minLength': 1,\n                                                      'maxLength': 255}},\n     'additionalProperties': False}\n\nOn instance['items'][0]['endpointTags']:\n    {'invalid@tag': 'value1',\n     '<--- invalid pattern': 'value2',\n     '<--- invalid key': 'value3'}",
      "data": {
        "items": [
          {
            "id": "5f5f5f5f5f5f5f5f5f5f5f5f",
            "experienceEndpointId": "5f5f5f5f5f5f5f5f5f5f5f5f",
            "applicationId": "5f5f5f5f5f5f5f5f5f5f5f5f",
            "creationDate": "2022-01-01T12:00:00.000Z",
            "lastUpdated": "2022-01-01T12:00:00.000Z",
            "createdById": "5f5f5f5f5f5f5f5f5f5f5f5f",
            "createdByType": "user",
            "lastUpdatedById": "5f5f5f5f5f5f5f5f5f5f5f5f",
            "lastUpdatedByType": "user",
            "description": "Example endpoint",
            "route": "/example",
            "enabled": true,
            "method": "get",
            "access": "public",
            "endpointTags": {
              "invalid@tag": "value1",
              "<--- invalid pattern": "value2",
              "<--- invalid key": "value3"
            },
            "<--- invalid key": {
              "value": "Hello, world!",
              "statusCode": 200,
              "type": "page"
            },
            "<--- invalid key and value": null,
            "unauthorizedReply": null,
            "experienceGroups": [
              {
                "name": "Group 1",
                "id": "5f5f5f5f5f5f5f5f5f5f5f5f"
              },
              {
                "name": "Group 2",
                "id": "5f5f5f5f5f5f5f5f5f5f5f5f"
              }
            ]
          }
        ],
        "count": 1,
        "totalCount": 1,
        "filter": "",
        "filterField": "",
        "sortField": "",
        "sortDirection": "asc",
        "applicationId": "5f5f5f5f5f5f5f5f5f5f5f5f",
        "experienceGroupId": "5f5f5f5f5f5f5f5f5f5f5f5f",
        "notFoundRequestCount": 0
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"5f5f5f5f5f5f5f5f5f5f5f5\" does not match \"^[A-Fa-f\\d]{24}$\"",
      "python_error": "'invalid' is not one of ['page', 'redirect']\n\nFailed validating 'enum' in schema[0]['properties']['type']:\n    {'type': 'string', 'enum': ['page', 'redirect']}\n\nOn instance['type']:\n    'invalid'",
      "data": {
        "items": [
          {
            "id": "5f5f5f5f5f5f5f5f5f5f5f5",
            "Invalid id length (should be 24 but is 23)": "experienceEndpointId",
            "applicationId": "5f5f5f5f5f5f5f5f5f5f5f5",
            "creationDate": "2022-01-01T12:00:00.000",
            "Invalid date-time format (missing 'Z' at the end)": "lastUpdated",
            "createdById": "5f5f5f5f5f5f5f5f5f5f5f5f",
            "createdByType": "invalid",
            "Invalid createdByType (should be one of 'flow', 'user', 'apiToken')": "lastUpdatedById",
            "lastUpdatedByType": "invalid",
            "Invalid lastUpdatedByType (should be one of 'flow', 'user', 'apiToken')": "description",
            "route": "",
            "Invalid route (should have at least 1 character)": "enabled",
            "method": "invalid",
            "Invalid method (should be one of 'delete', 'get', 'options', 'patch', 'post', 'put')": "access",
            "endpointTags": {
              "tag1": "",
              "Invalid value (should have at least 1 character)": "tag2"
            },
            "staticReply": {
              "value": "",
              "Invalid value (should have at least 1 character)": "statusCode",
              "type": "invalid",
              "Invalid type (should be one of 'page', 'redirect')": "unauthorizedReply",
              "experienceGroups": [
                {
                  "name": "",
                  "Invalid name (should have at least 1 character)": "id"
                }
              ]
            },
            "count": 0,
            "Invalid count (should be a positive integer)": "totalCount",
            "filter": "filter",
            "Invalid filter (should be an empty string)": "filterField",
            "sortField": "sortField",
            "Invalid sortField (should be an empty string)": "sortDirection",
            "Invalid applicationId length (should be 24 but is 23)": "experienceGroupId",
            "notFoundRequestCount": -1,
            "Invalid notFoundRequestCount (should be a non-negative number)": "items"
          }
        ]
      }
    }
  ]
}