{
  "description": "sample Github_medium/o48313.json",
  "meta": {
    "full_size": 2130,
    "stripped_size": 1195,
    "features": [
      "anyOf",
      "enum",
      "items"
    ],
    "raw_features": [
      "$schema",
      "definitions",
      "properties",
      "required",
      "type",
      "type:array",
      "type:integer",
      "type:number",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "definitions": {},
    "properties": {
      "class": {
        "description": "Name of the target class",
        "type": "string"
      },
      "scenarios": {
        "description": "list of possible deploying scenarios",
        "items": {
          "properties": {
            "cost": {
              "description": "mapping resource name: cost",
              "properties": {
                "additionalProperties": {
                  "type": "integer"
                }
              },
              "type": "object"
            },
            "methods": {
              "description": "list of methods to add and remove preferences",
              "items": {
                "properties": {
                  "add": {
                    "description": "method to add the reference",
                    "properties": {
                      "name": {
                        "description": "method name",
                        "type": "string"
                      },
                      "param_type": {
                        "description": "type of the object added",
                        "type": "string"
                      }
                    },
                    "type": "object",
                    "required": [
                      "name",
                      "param_type"
                    ]
                  },
                  "remove": {
                    "description": "method to remove the reference",
                    "properties": {
                      "name": {
                        "description": "method name",
                        "type": "string"
                      },
                      "param_type": {
                        "description": "type of the object added (may be absent)",
                        "type": "string"
                      }
                    },
                    "type": "object",
                    "required": [
                      "name"
                    ]
                  }
                },
                "type": "object",
                "required": [
                  "add"
                ]
              },
              "type": "array"
            },
            "name": {
              "description": "name of the scenario (must be unique in the array)",
              "type": "string"
            },
            "provide": {
              "description": "Number of functionalities provide (-1 unbounded)",
              "type": "integer"
            },
            "sig": {
              "items": {
                "anyOf": [
                  {
                    "properties": {
                      "kind": {
                        "description": "require an object generated by SmartDeployer",
                        "type": "string",
                        "enum": [
                          "require"
                        ]
                      },
                      "type": {
                        "description": "interface of the object to add as parameter",
                        "type": "string"
                      }
                    },
                    "type": "object",
                    "required": [
                      "kind",
                      "type"
                    ]
                  },
                  {
                    "properties": {
                      "kind": {
                        "description": "constant parameter",
                        "type": "string",
                        "enum": [
                          "constant"
                        ]
                      },
                      "value": {
                        "description": "value of the parameter",
                        "type": "string"
                      }
                    },
                    "type": "object",
                    "required": [
                      "kind",
                      "value"
                    ]
                  },
                  {
                    "properties": {
                      "kind": {
                        "description": "list of required objects",
                        "type": "string",
                        "enum": [
                          "list"
                        ]
                      },
                      "type": {
                        "description": "interface of the objects to add as parameters",
                        "type": "string"
                      },
                      "num": {
                        "description": "minimal lenght of the list",
                        "type": "number"
                      }
                    },
                    "type": "object",
                    "required": [
                      "kind",
                      "type",
                      "num"
                    ]
                  }
                ]
              },
              "type": "array"
            }
          },
          "type": "object",
          "required": [
            "name",
            "sig",
            "provide",
            "cost",
            "methods"
          ]
        },
        "type": "array"
      }
    },
    "type": "object",
    "required": [
      "class",
      "scenarios"
    ]
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "class": "ExampleClass",
        "scenarios": [
          {
            "cost": {
              "resource1": 10,
              "resource2": 20
            },
            "methods": [
              {
                "add": {
                  "name": "addMethod",
                  "param_type": "ExampleType"
                },
                "remove": {
                  "name": "removeMethod",
                  "param_type": "ExampleType"
                }
              }
            ],
            "name": "Scenario1",
            "provide": 1,
            "sig": [
              {
                "kind": "require",
                "type": "ExampleInterface"
              },
              {
                "kind": "constant",
                "value": "constantValue"
              },
              {
                "kind": "list",
                "type": "ExampleInterface",
                "num": 2
              }
            ]
          },
          {
            "cost": {
              "resource3": 30,
              "resource4": 40
            },
            "methods": [
              {
                "add": {
                  "name": "addMethod2",
                  "param_type": "ExampleType2"
                },
                "remove": {
                  "name": "removeMethod2"
                }
              }
            ],
            "name": "Scenario2",
            "provide": -1,
            "sig": [
              {
                "kind": "require",
                "type": "ExampleInterface2"
              },
              {
                "kind": "constant",
                "value": "constantValue2"
              }
            ]
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on anyOf keyword",
      "valid": false,
      "rust_error": "{\"kind\":\"unknown\",\"type\":\"ExampleInterface\",\"num\":2} is not valid under any of the schemas listed in the 'anyOf' keyword",
      "python_error": "{'kind': 'unknown', 'type': 'ExampleInterface', 'num': 2} is not valid under any of the given schemas\n\nFailed validating 'anyOf' in schema['properties']['scenarios']['items']['properties']['sig']['items']:\n    {'anyOf': [{'properties': {'kind': {'description': 'require an object '\n                                                       'generated by '\n                                                       'SmartDeployer',\n                                        'type': 'string',\n                                        'enum': ['require']},\n                               'type': {'description': 'interface of the '\n                                                       'object to add as '\n                                                       'parameter',\n                                        'type': 'string'}},\n                'type': 'object',\n                'required': ['kind', 'type']},\n               {'properties': {'kind': {'description': 'constant parameter',\n                                        'ty.. (1289 more)",
      "data": {
        "class": "ExampleClass",
        "scenarios": [
          {
            "cost": {
              "resource1": 10,
              "resource2": 20
            },
            "methods": [
              {
                "add": {
                  "name": "addMethod",
                  "param_type": "ExampleType"
                },
                "remove": {
                  "name": "removeMethod",
                  "param_type": "ExampleType"
                }
              }
            ],
            "name": "Scenario1",
            "provide": 1,
            "sig": [
              {
                "kind": "require",
                "type": "ExampleInterface"
              },
              {
                "kind": "constant",
                "value": "constantValue"
              },
              {
                "kind": "list",
                "type": "ExampleInterface",
                "num": 2
              },
              {
                "kind": "unknown",
                "type": "ExampleInterface",
                "num": 2
              }
            ]
          },
          {
            "cost": {
              "resource3": 30,
              "resource4": 40
            },
            "methods": [
              {
                "add": {
                  "name": "addMethod2",
                  "param_type": "ExampleType2"
                },
                "remove": {
                  "name": "removeMethod2"
                }
              }
            ],
            "name": "Scenario2",
            "provide": -1,
            "sig": [
              {
                "kind": "require",
                "type": "ExampleInterface2"
              },
              {
                "kind": "constant",
                "value": "constantValue2"
              }
            ]
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "123 is not of type \"string\"",
      "python_error": "123 is not of type 'string'\n\nFailed validating 'type' in schema['properties']['scenarios']['items']['properties']['methods']['items']['properties']['remove']['properties']['param_type']:\n    {'description': 'type of the object added (may be absent)',\n     'type': 'string'}\n\nOn instance['scenarios'][1]['methods'][0]['remove']['param_type']:\n    123",
      "data": {
        "class": "ExampleClass",
        "scenarios": [
          {
            "cost": {
              "resource1": 10,
              "resource2": 20
            },
            "methods": [
              {
                "add": {
                  "name": "addMethod",
                  "param_type": "ExampleType"
                }
              }
            ],
            "name": "Scenario1",
            "provide": 1,
            "sig": [
              {
                "kind": "require",
                "type": "ExampleInterface"
              },
              {
                "kind": "constant",
                "value": "constantValue"
              },
              {
                "kind": "list",
                "type": "ExampleInterface",
                "num": 2
              }
            ]
          },
          {
            "cost": {
              "resource3": 30,
              "resource4": 40
            },
            "methods": [
              {
                "add": {
                  "name": "addMethod2",
                  "param_type": "ExampleType2"
                },
                "remove": {
                  "name": "removeMethod2",
                  "param_type": 123
                }
              }
            ],
            "name": "Scenario1",
            "provide": -1,
            "sig": [
              {
                "kind": "require",
                "type": "ExampleInterface2"
              },
              {
                "kind": "constant",
                "value": "constantValue2"
              }
            ]
          }
        ]
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "class": "ExampleClass",
        "scenarios": [
          {
            "cost": {
              "resource1": 10,
              "resource2": 20
            },
            "methods": [
              {
                "add": {
                  "name": "addMethod",
                  "param_type": "ExampleInterface"
                },
                "remove": {
                  "name": "removeMethod",
                  "param_type": "ExampleInterface"
                }
              }
            ],
            "name": "Scenario1",
            "provide": 1,
            "sig": [
              {
                "kind": "require",
                "type": "ExampleInterface"
              },
              {
                "kind": "constant",
                "value": "exampleValue"
              },
              {
                "kind": "list",
                "type": "ExampleInterface",
                "num": 2
              }
            ]
          },
          {
            "cost": {
              "resource3": 30,
              "resource4": 40
            },
            "methods": [
              {
                "add": {
                  "name": "addMethod2",
                  "param_type": "ExampleInterface2"
                },
                "remove": {
                  "name": "removeMethod2"
                }
              }
            ],
            "name": "Scenario2",
            "provide": -1,
            "sig": [
              {
                "kind": "require",
                "type": "ExampleInterface2"
              },
              {
                "kind": "constant",
                "value": "exampleValue2"
              }
            ]
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "{\"kind\":\"list\",\"type\":\"ExampleInterface\"} is not valid under any of the schemas listed in the 'anyOf' keyword",
      "python_error": "{'kind': 'list', 'type': 'ExampleInterface'} is not valid under any of the given schemas\n\nFailed validating 'anyOf' in schema['properties']['scenarios']['items']['properties']['sig']['items']:\n    {'anyOf': [{'properties': {'kind': {'description': 'require an object '\n                                                       'generated by '\n                                                       'SmartDeployer',\n                                        'type': 'string',\n                                        'enum': ['require']},\n                               'type': {'description': 'interface of the '\n                                                       'object to add as '\n                                                       'parameter',\n                                        'type': 'string'}},\n                'type': 'object',\n                'required': ['kind', 'type']},\n               {'properties': {'kind': {'description': 'constant parameter',\n                                        'type': 'string'.. (1263 more)",
      "data": {
        "class": "ExampleClass",
        "scenarios": [
          {
            "name": "Scenario1",
            "sig": [
              {
                "kind": "require",
                "type": "ExampleInterface"
              },
              {
                "kind": "constant",
                "value": "exampleValue"
              },
              {
                "kind": "list",
                "type": "ExampleInterface"
              }
            ],
            "provide": 1,
            "cost": {
              "resource1": 10,
              "resource2": "twenty"
            },
            "methods": [
              {
                "add": {
                  "name": "addMethod",
                  "param_type": "ExampleInterface"
                },
                "remove": {
                  "name": "removeMethod",
                  "param_type": "ExampleInterface"
                }
              }
            ]
          },
          {
            "name": "Scenario2",
            "sig": [
              {
                "kind": "require",
                "type": "ExampleInterface2"
              },
              {
                "kind": "constant",
                "value": "exampleValue2"
              }
            ],
            "provide": -1,
            "cost": {
              "resource3": 30,
              "resource4": 40
            },
            "methods": [
              {
                "add": {
                  "name": "addMethod2",
                  "param_type": "ExampleInterface2"
                },
                "remove": {
                  "name": "removeMethod2"
                }
              }
            ]
          }
        ]
      }
    }
  ]
}