{
  "description": "sample JsonSchemaStore/aerleon-definitions.schema.json",
  "meta": {
    "full_size": 4050,
    "stripped_size": 1861,
    "features": [
      "$ref",
      "@siblingKeys",
      "additionalProperties",
      "additionalProperties:object",
      "items",
      "oneOf",
      "pattern",
      "propertyNames"
    ],
    "raw_features": [
      "$defs",
      "$id",
      "$schema",
      "_boolSchema",
      "properties",
      "required",
      "type",
      "type:array",
      "type:integer",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$id": "urn:aerleon:schemas:aerleon-definitions:1.0.0",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$comment": "https://aerleon.readthedocs.io/en/latest/reference/naming/",
    "title": "Aerleon Network & Service Definitions",
    "type": "object",
    "additionalProperties": false,
    "properties": {
      "networks": {
        "title": "Network Definition Section",
        "description": "Policy files can reference the networks in this section by name. A network is a list of IP addresses or CIDR IP address ranges and may contain other networks.",
        "type": "object",
        "additionalProperties": {
          "$ref": "#/$defs/networkDefinition"
        },
        "propertyNames": {
          "$ref": "#/$defs/token"
        }
      },
      "services": {
        "title": "Service Definition Section",
        "description": "Policy files can reference the services in this section by name. A service is a list of port/protocol pairs (e.g. port: 80, protocol: tcp) and can include port ranges. A service can include other services.",
        "type": "object",
        "additionalProperties": {
          "$ref": "#/$defs/serviceDefinition"
        },
        "propertyNames": {
          "$ref": "#/$defs/token"
        }
      }
    },
    "$defs": {
      "token": {
        "type": "string",
        "pattern": "^[-_a-zA-Z0-9]+$"
      },
      "comment": {
        "description": "Attach a comment directly to a value. This comment may be included in generated output on platforms that support it.",
        "type": "string"
      },
      "address": {
        "description": "Specifies an IP address or CIDR IP address range expression.",
        "type": "string"
      },
      "fqdn": {
        "description": "Specifies a fully qualified domain name with two or more labels.",
        "type": "string",
        "pattern": "^(?!.*://)(?=.{1,255}$)((.{1,63}\\.){1,127}(?![0-9]*$)[a-z0-9-]+\\.?)$"
      },
      "port": {
        "description": "Specifies a port or port range.",
        "oneOf": [
          {
            "type": "string",
            "pattern": "^\\d+-\\d+|^\\d+$"
          },
          {
            "type": "integer"
          }
        ]
      },
      "protocol": {
        "description": "Specifies a protocol by name or number.",
        "oneOf": [
          {
            "type": "integer"
          },
          {
            "type": "string"
          }
        ]
      },
      "networkDefinition": {
        "type": "object",
        "title": "Network Definition",
        "description": "Defines a named network, composed of IP addresses, IP address ranges, and references to other networks.\nAn object with the \"address\" property adds that address or address range to the network.\nAn object with the \"name\" property includes the contents of that network into this one.\nA single string also includes the content of that network into this one.",
        "additionalProperties": false,
        "required": [
          "values"
        ],
        "properties": {
          "values": {
            "description": "Defines a named network, composed of IP addresses, IP address ranges, and references to other networks.\nAn object with the \"address\" property adds that address or address range to the network.\nAn object with the \"name\" property includes the contents of that network into this one.\nA single string also includes the content of that network into this one.",
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "type": "string",
                  "title": "Network Reference",
                  "description": "Include another network by name.",
                  "$ref": "#/$defs/token"
                },
                {
                  "type": "object",
                  "required": [
                    "address"
                  ],
                  "properties": {
                    "address": {
                      "$ref": "#/$defs/address"
                    },
                    "comment": {
                      "$ref": "#/$defs/comment"
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "required": [
                    "fqdn"
                  ],
                  "properties": {
                    "fqdn": {
                      "$ref": "#/$defs/fqdn"
                    },
                    "comment": {
                      "$ref": "#/$defs/comment"
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "title": "Network Reference",
                  "required": [
                    "name"
                  ],
                  "properties": {
                    "name": {
                      "description": "Include another network by name.",
                      "$ref": "#/$defs/token"
                    },
                    "comment": {
                      "$ref": "#/$defs/comment"
                    }
                  },
                  "additionalProperties": false
                }
              ]
            }
          }
        }
      },
      "serviceDefinition": {
        "type": "array",
        "title": "Service Definition",
        "description": "Defines a named service, composed of portocol, port pairs and/or references to other services.",
        "items": {
          "oneOf": [
            {
              "type": "object",
              "required": [
                "port",
                "protocol"
              ],
              "properties": {
                "port": {
                  "$ref": "#/$defs/port"
                },
                "protocol": {
                  "$ref": "#/$defs/protocol"
                },
                "comment": {
                  "$ref": "#/$defs/comment"
                }
              },
              "additionalProperties": false
            },
            {
              "type": "object",
              "title": "Service Reference",
              "description": "Include another service by name.",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Include another service by name.",
                  "$ref": "#/$defs/token"
                },
                "comment": {
                  "$ref": "#/$defs/comment"
                }
              },
              "additionalProperties": false
            }
          ]
        }
      }
    }
  },
  "tests": [
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "networks": {
          "my-network": {
            "values": [
              {
                "address": "192.168.1.0/24"
              },
              {
                "address": "10.0.0.0/8"
              },
              {
                "name": "another-network"
              },
              "another-network"
            ]
          },
          "another-network": {
            "values": [
              {
                "address": "172.16.0.0/12"
              },
              {
                "fqdn": "example.com"
              }
            ]
          }
        },
        "services": {
          "http-service": [
            {
              "port": 80,
              "protocol": "tcp"
            },
            {
              "port": "443",
              "protocol": "tcp"
            }
          ],
          "another-service": [
            {
              "name": "http-service"
            },
            {
              "port": 22,
              "protocol": "tcp"
            }
          ]
        }
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "networks": {
          "public": {
            "values": [
              {
                "address": "0.0.0.0/0"
              },
              {
                "name": "internal"
              }
            ]
          },
          "internal": {
            "values": [
              {
                "address": "10.0.0.0/8"
              },
              {
                "address": "172.16.0.0/12"
              },
              {
                "address": "192.168.0.0/16"
              }
            ]
          }
        },
        "services": {
          "http": [
            {
              "port": 80,
              "protocol": "tcp"
            }
          ],
          "https": [
            {
              "port": 443,
              "protocol": "tcp"
            }
          ],
          "web": [
            {
              "name": "http"
            },
            {
              "name": "https"
            }
          ]
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on propertyNames keyword",
      "valid": false,
      "rust_error": "\"public network\" does not match \"^[-_a-zA-Z0-9]+$\"",
      "python_error": "'public network' does not match '^[-_a-zA-Z0-9]+$'\n\nFailed validating 'pattern' in schema['properties']['networks']['propertyNames']:\n    {'type': 'string', 'pattern': '^[-_a-zA-Z0-9]+$'}\n\nOn instance['networks']:\n    'public network'",
      "data": {
        "networks": {
          "public network": {
            "values": [
              {
                "address": "0.0.0.0/0"
              },
              {
                "name": "internal"
              }
            ]
          },
          "internal": {
            "values": [
              {
                "address": "10.0.0.0/8"
              },
              {
                "address": "172.16.0.0/12"
              },
              {
                "address": "192.168.0.0/16"
              }
            ]
          }
        },
        "services": {
          "http": [
            {
              "port": 80,
              "protocol": "tcp"
            }
          ],
          "https": [
            {
              "port": 443,
              "protocol": "tcp"
            }
          ],
          "web": [
            {
              "name": "http"
            },
            {
              "name": "https"
            }
          ]
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on pattern keyword",
      "valid": false,
      "rust_error": "\"invalid network name!\" does not match \"^[-_a-zA-Z0-9]+$\"",
      "python_error": "'invalid service name@' does not match '^[-_a-zA-Z0-9]+$'\n\nFailed validating 'pattern' in schema['properties']['services']['propertyNames']:\n    {'type': 'string', 'pattern': '^[-_a-zA-Z0-9]+$'}\n\nOn instance['services']:\n    'invalid service name@'",
      "data": {
        "networks": {
          "public": {
            "values": [
              {
                "address": "0.0.0.0/0"
              },
              {
                "name": "internal"
              }
            ]
          },
          "internal": {
            "values": [
              {
                "address": "10.0.0.0/8"
              },
              {
                "address": "172.16.0.0/12"
              },
              {
                "address": "192.168.0.0/16"
              }
            ]
          },
          "invalid network name!": {
            "values": []
          }
        },
        "services": {
          "http": [
            {
              "port": 80,
              "protocol": "tcp"
            }
          ],
          "invalid service name@": [
            {
              "port": 443,
              "protocol": "tcp"
            }
          ],
          "web": [
            {
              "name": "http"
            },
            {
              "name": "https"
            }
          ]
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on oneOf keyword",
      "valid": false,
      "rust_error": "{\"port\":\"abc\",\"protocol\":\"tcp\"} is not valid under any of the schemas listed in the 'oneOf' keyword",
      "python_error": "'abc' does not match '^\\\\d+-\\\\d+|^\\\\d+$'\n\nFailed validating 'pattern' in schema[0]:\n    {'type': 'string', 'pattern': '^\\\\d+-\\\\d+|^\\\\d+$'}\n\nOn instance:\n    'abc'",
      "data": {
        "networks": {
          "public": {
            "values": [
              {
                "address": "0.0.0.0/0"
              },
              {
                "name": "internal"
              }
            ]
          },
          "internal": {
            "values": [
              {
                "address": "10.0.0.0/8"
              },
              {
                "address": "172.16.0.0/12"
              },
              {
                "address": "192.168.0.0/16"
              }
            ]
          }
        },
        "services": {
          "http": [
            {
              "port": 80,
              "protocol": "tcp"
            }
          ],
          "https": [
            {
              "port": 443,
              "protocol": "tcp"
            }
          ],
          "web": [
            {
              "name": "http"
            },
            {
              "name": "https"
            },
            {
              "port": "abc",
              "protocol": "tcp"
            }
          ]
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on additionalProperties keyword with an object schema",
      "valid": false,
      "rust_error": "{\"address\":\"0.0.0.0/0\",\"extra-prop\":\"this should be invalid\"} is not valid under any of the schemas listed in the 'oneOf' keyword",
      "python_error": "{'address': '0.0.0.0/0', 'extra-prop': 'this should be invalid'} is not valid under any of the given schemas\n\nFailed validating 'oneOf' in schema['properties']['networks']['additionalProperties']['properties']['values']['items']:\n    {'oneOf': [{'type': 'string',\n                'title': 'Network Reference',\n                'description': 'Include another network by name.',\n                '$ref': '#/$defs/token'},\n               {'type': 'object',\n                'required': ['address'],\n                'properties': {'address': {'$ref': '#/$defs/address'},\n                               'comment': {'$ref': '#/$defs/comment'}},\n                'additionalProperties': False},\n               {'type': 'object',\n                'required': ['fqdn'],\n                'properties': {'fqdn': {'$ref': '#/$defs/fqdn'},\n                               'comment': {'$ref': '#/$defs/comment'}},\n                'additionalProperties': False},\n               {'type': 'object',\n                'title': 'Network Reference',\n  .. (489 more)",
      "data": {
        "networks": {
          "public": {
            "values": [
              {
                "address": "0.0.0.0/0",
                "extra-prop": "this should be invalid"
              },
              {
                "name": "internal"
              }
            ]
          },
          "internal": {
            "values": [
              {
                "address": "10.0.0.0/8"
              },
              {
                "address": "172.16.0.0/12"
              },
              {
                "address": "192.168.0.0/16"
              }
            ]
          }
        },
        "services": {
          "http": [
            {
              "port": 80,
              "protocol": "tcp"
            }
          ],
          "https": [
            {
              "port": 443,
              "protocol": "tcp"
            }
          ],
          "web": [
            {
              "name": "http"
            },
            {
              "name": "https"
            }
          ]
        }
      }
    }
  ]
}