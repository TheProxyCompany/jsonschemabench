{
  "description": "sample Github_trivial/o6377.json",
  "meta": {
    "full_size": 1885,
    "stripped_size": 547,
    "features": [
      "$ref",
      "@siblingKeys",
      "additionalProperties",
      "anyOf"
    ],
    "raw_features": [
      "_boolSchema",
      "anyOf:trivial",
      "definitions",
      "properties",
      "required",
      "type",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "anyOf": [
      {
        "$ref": "#/definitions/TestStruct"
      }
    ],
    "definitions": {
      "TestStruct": {
        "anyOf": [
          {
            "additionalProperties": false,
            "preferredOrder": [
              "reqField",
              "f1",
              "f2"
            ],
            "properties": {
              "f1": {
                "description": "should be the first choice",
                "type": "string",
                "x-intellij-html-description": "should be the first choice"
              },
              "f2": {
                "description": "should be the second choice",
                "type": "string",
                "x-intellij-html-description": "should be the second choice"
              },
              "reqField": {
                "description": "should be required",
                "type": "string",
                "x-intellij-html-description": "should be required"
              }
            }
          },
          {
            "additionalProperties": false,
            "preferredOrder": [
              "reqField",
              "f1",
              "f2",
              "choice1"
            ],
            "properties": {
              "choice1": {
                "description": "should be the first choice",
                "type": "string",
                "x-intellij-html-description": "should be the first choice"
              },
              "f1": {
                "description": "should be the first choice",
                "type": "string",
                "x-intellij-html-description": "should be the first choice"
              },
              "f2": {
                "description": "should be the second choice",
                "type": "string",
                "x-intellij-html-description": "should be the second choice"
              },
              "reqField": {
                "description": "should be required",
                "type": "string",
                "x-intellij-html-description": "should be required"
              }
            }
          },
          {
            "additionalProperties": false,
            "preferredOrder": [
              "reqField",
              "f1",
              "f2",
              "choice2"
            ],
            "properties": {
              "choice2": {
                "description": "should be the second choice",
                "type": "string",
                "x-intellij-html-description": "should be the second choice"
              },
              "f1": {
                "description": "should be the first choice",
                "type": "string",
                "x-intellij-html-description": "should be the first choice"
              },
              "f2": {
                "description": "should be the second choice",
                "type": "string",
                "x-intellij-html-description": "should be the second choice"
              },
              "reqField": {
                "description": "should be required",
                "type": "string",
                "x-intellij-html-description": "should be required"
              }
            }
          }
        ],
        "description": "for testing the schema generator.",
        "required": [
          "reqField"
        ],
        "x-intellij-html-description": "for testing the schema generator."
      }
    },
    "type": "object"
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "reqField": "required field value"
      }
    },
    {
      "description": "llama-70b generated negative; focus on anyOf keyword",
      "valid": false,
      "rust_error": "{\"reqField\":\"required field value\",\"f1\":\"first choice value\",\"f2\":\"second choice value\",\"choice1\":\"first choice value\",\"choice2\":\"second choice value\"} is not valid under any of the schemas listed in the 'anyOf' keyword",
      "python_error": "{'reqField': 'required field value', 'f1': 'first choice value', 'f2': 'second choice value', 'choice1': 'first choice value', 'choice2': 'second choice value'} is not valid under any of the given schemas\n\nFailed validating 'anyOf' in schema[0]:\n    {'anyOf': [{'additionalProperties': False,\n                'preferredOrder': ['reqField', 'f1', 'f2'],\n                'properties': {'f1': {'description': 'should be the first '\n                                                     'choice',\n                                      'type': 'string',\n                                      'x-intellij-html-description': 'should '\n                                                                     'be '\n                                                                     'the '\n                                                                     'first '\n                                                                     'choice'},\n                               'f2': {'description': 'should be the second '\n           .. (6060 more)",
      "data": {
        "reqField": "required field value",
        "f1": "first choice value",
        "f2": "second choice value",
        "choice1": "first choice value",
        "choice2": "second choice value"
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "{\"reqField\":\"required field value\",\"invalidField\":\"invalid field value\"} is not valid under any of the schemas listed in the 'anyOf' keyword",
      "python_error": "{'reqField': 'required field value', 'invalidField': 'invalid field value'} is not valid under any of the given schemas\n\nFailed validating 'anyOf' in schema[0]:\n    {'anyOf': [{'additionalProperties': False,\n                'preferredOrder': ['reqField', 'f1', 'f2'],\n                'properties': {'f1': {'description': 'should be the first '\n                                                     'choice',\n                                      'type': 'string',\n                                      'x-intellij-html-description': 'should '\n                                                                     'be '\n                                                                     'the '\n                                                                     'first '\n                                                                     'choice'},\n                               'f2': {'description': 'should be the second '\n                                                     'choice',\n                                 .. (5875 more)",
      "data": {
        "reqField": "required field value",
        "invalidField": "invalid field value"
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "{\"reqField\":null} is not valid under any of the schemas listed in the 'anyOf' keyword",
      "python_error": "{'reqField': None} is not valid under any of the given schemas\n\nFailed validating 'anyOf' in schema[0]:\n    {'anyOf': [{'additionalProperties': False,\n                'preferredOrder': ['reqField', 'f1', 'f2'],\n                'properties': {'f1': {'description': 'should be the first '\n                                                     'choice',\n                                      'type': 'string',\n                                      'x-intellij-html-description': 'should '\n                                                                     'be '\n                                                                     'the '\n                                                                     'first '\n                                                                     'choice'},\n                               'f2': {'description': 'should be the second '\n                                                     'choice',\n                                      'type': 'string',\n                                  .. (5756 more)",
      "data": {
        "reqField": null
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "f1": "first choice",
        "f2": "second choice",
        "reqField": "required field"
      }
    },
    {
      "description": "llama-70b generated negative; focus on anyOf keyword",
      "valid": false,
      "rust_error": "{\"reqField\":\"required field\",\"f1\":\"first choice\",\"f2\":\"second choice\",\"choice1\":\"invalid choice\",\"choice2\":\"invalid choice\"} is not valid under any of the schemas listed in the 'anyOf' keyword",
      "python_error": "{'reqField': 'required field', 'f1': 'first choice', 'f2': 'second choice', 'choice1': 'invalid choice', 'choice2': 'invalid choice'} is not valid under any of the given schemas\n\nFailed validating 'anyOf' in schema[0]:\n    {'anyOf': [{'additionalProperties': False,\n                'preferredOrder': ['reqField', 'f1', 'f2'],\n                'properties': {'f1': {'description': 'should be the first '\n                                                     'choice',\n                                      'type': 'string',\n                                      'x-intellij-html-description': 'should '\n                                                                     'be '\n                                                                     'the '\n                                                                     'first '\n                                                                     'choice'},\n                               'f2': {'description': 'should be the second '\n                                      .. (6006 more)",
      "data": {
        "reqField": "required field",
        "f1": "first choice",
        "f2": "second choice",
        "choice1": "invalid choice",
        "choice2": "invalid choice"
      }
    }
  ]
}