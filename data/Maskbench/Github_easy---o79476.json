{
  "description": "sample Github_easy/o79476.json",
  "meta": {
    "full_size": 493,
    "stripped_size": 493,
    "features": [
      "$ref",
      "format",
      "format:email",
      "format:url"
    ],
    "raw_features": [
      "$schema",
      "definitions",
      "properties",
      "type",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "definitions": {
      "email": {
        "type": "string",
        "format": "email"
      },
      "password": {
        "type": "string"
      },
      "givenName": {
        "type": "string"
      },
      "familyName": {
        "type": "string"
      },
      "image": {
        "type": "string",
        "format": "url"
      }
    },
    "type": "object",
    "properties": {
      "email": {
        "$ref": "#/definitions/email"
      },
      "password": {
        "$ref": "#/definitions/password"
      },
      "givenName": {
        "$ref": "#/definitions/givenName"
      },
      "familyName": {
        "$ref": "#/definitions/familyName"
      },
      "image": {
        "$ref": "#/definitions/image"
      }
    }
  },
  "tests": [
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "email": "example@example.com",
        "password": "password123",
        "givenName": "John",
        "familyName": "Doe",
        "image": "https://example.com/image.jpg"
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "email": "john.doe@example.com",
        "password": "mysecretpassword",
        "givenName": "John",
        "familyName": "Doe",
        "image": "https://example.com/image.jpg"
      }
    },
    {
      "description": "llama-70b generated negative; focus on format keyword",
      "valid": false,
      "rust_error": "\"john doe\" is not a \"email\"",
      "python_error": "'john doe' is not a 'email'\n\nFailed validating 'format' in schema['properties']['email']:\n    {'type': 'string', 'format': 'email'}\n\nOn instance['email']:\n    'john doe'",
      "data": {
        "email": "john doe",
        "password": "mysecretpassword",
        "givenName": "John",
        "familyName": "Doe",
        "image": "https://example.com/image.jpg"
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"\" is not a \"email\"",
      "python_error": "'' is not a 'email'\n\nFailed validating 'format' in schema['properties']['email']:\n    {'type': 'string', 'format': 'email'}\n\nOn instance['email']:\n    ''",
      "data": {
        "email": "",
        "password": "",
        "givenName": "",
        "familyName": "",
        "image": "invalid url"
      }
    }
  ]
}