{
  "description": "sample Github_hard/o63309.json",
  "meta": {
    "full_size": 3966,
    "stripped_size": 3811,
    "features": [
      "additionalProperties",
      "enum",
      "items",
      "pattern"
    ],
    "raw_features": [
      "$schema",
      "_boolSchema",
      "properties",
      "required",
      "type",
      "type:array",
      "type:boolean",
      "type:integer",
      "type:number",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "additionalProperties": false,
    "properties": {
      "job": {
        "additionalProperties": false,
        "properties": {
          "description": {
            "type": "string"
          },
          "errors": {
            "items": {
              "additionalProperties": false,
              "properties": {
                "category": {
                  "default": "job",
                  "enum": [
                    "job",
                    "data"
                  ],
                  "type": "string"
                },
                "code": {
                  "type": "integer"
                },
                "description": {
                  "type": "string"
                },
                "name": {
                  "pattern": "^[a-zA-Z0-9_-]+$",
                  "type": "string"
                },
                "title": {
                  "type": "string"
                }
              },
              "required": [
                "code",
                "name"
              ],
              "type": "object"
            },
            "type": "array"
          },
          "interface": {
            "additionalProperties": false,
            "properties": {
              "command": {
                "type": "string"
              },
              "inputs": {
                "additionalProperties": false,
                "properties": {
                  "files": {
                    "items": {
                      "additionalProperties": false,
                      "properties": {
                        "mediaTypes": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "multiple": {
                          "default": false,
                          "type": "boolean"
                        },
                        "name": {
                          "pattern": "^[a-zA-Z0-9_-]+$",
                          "type": "string"
                        },
                        "partial": {
                          "default": false,
                          "type": "boolean"
                        },
                        "required": {
                          "default": true,
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "name"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "json": {
                    "items": {
                      "additionalProperties": false,
                      "properties": {
                        "name": {
                          "pattern": "^[a-zA-Z0-9_-]+$",
                          "type": "string"
                        },
                        "required": {
                          "default": true,
                          "type": "boolean"
                        },
                        "type": {
                          "enum": [
                            "array",
                            "boolean",
                            "integer",
                            "number",
                            "object",
                            "string"
                          ],
                          "type": "string"
                        }
                      },
                      "required": [
                        "name",
                        "type"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              },
              "mounts": {
                "items": {
                  "additionalProperties": false,
                  "properties": {
                    "mode": {
                      "default": "ro",
                      "enum": [
                        "ro",
                        "rw"
                      ]
                    },
                    "name": {
                      "pattern": "^[a-zA-Z0-9_-]+$",
                      "type": "string"
                    },
                    "path": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "name",
                    "path"
                  ],
                  "type": "object"
                },
                "type": "array"
              },
              "outputs": {
                "additionalProperties": false,
                "properties": {
                  "files": {
                    "items": {
                      "additionalProperties": false,
                      "properties": {
                        "mediaType": {
                          "type": "string"
                        },
                        "multiple": {
                          "default": false,
                          "type": "boolean"
                        },
                        "name": {
                          "pattern": "^[a-zA-Z0-9_-]+$",
                          "type": "string"
                        },
                        "pattern": {
                          "type": "string"
                        },
                        "required": {
                          "default": true,
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "name",
                        "pattern"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "json": {
                    "items": {
                      "additionalProperties": false,
                      "properties": {
                        "key": {
                          "type": "string"
                        },
                        "name": {
                          "pattern": "^[a-zA-Z0-9_-]+$",
                          "type": "string"
                        },
                        "required": {
                          "default": true,
                          "type": "boolean"
                        },
                        "type": {
                          "enum": [
                            "array",
                            "boolean",
                            "integer",
                            "number",
                            "object",
                            "string"
                          ],
                          "type": "string"
                        }
                      },
                      "required": [
                        "name",
                        "type"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              },
              "settings": {
                "items": {
                  "additionalProperties": false,
                  "properties": {
                    "name": {
                      "pattern": "^[a-zA-Z0-9_-]+$",
                      "type": "string"
                    },
                    "secret": {
                      "default": false,
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "name"
                  ],
                  "type": "object"
                },
                "type": "array"
              }
            },
            "type": "object"
          },
          "jobVersion": {
            "pattern": "^(0|[1-9][0-9]*)\\.(0|[1-9][0-9]*)\\.(0|[1-9][0-9]*)(-(0|[1-9][0-9]*|[0-9]*[a-zA-Z-][0-9a-zA-Z-]*)(\\.(0|[1-9][0-9]*|[0-9]*[a-zA-Z-][0-9a-zA-Z-]*))*)?(\\+[0-9a-zA-Z-]+(\\.[0-9a-zA-Z-]+)*)?$",
            "type": "string"
          },
          "maintainer": {
            "additionalProperties": false,
            "properties": {
              "email": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "organization": {
                "type": "string"
              },
              "phone": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            },
            "required": [
              "name",
              "email"
            ],
            "type": "object"
          },
          "name": {
            "pattern": "^[a-zA-Z0-9-]+$",
            "type": "string"
          },
          "packageVersion": {
            "pattern": "^(0|[1-9][0-9]*)\\.(0|[1-9][0-9]*)\\.(0|[1-9][0-9]*)(-(0|[1-9][0-9]*|[0-9]*[a-zA-Z-][0-9a-zA-Z-]*)(\\.(0|[1-9][0-9]*|[0-9]*[a-zA-Z-][0-9a-zA-Z-]*))*)?(\\+[0-9a-zA-Z-]+(\\.[0-9a-zA-Z-]+)*)?$",
            "type": "string"
          },
          "resources": {
            "additionalProperties": false,
            "properties": {
              "scalar": {
                "items": {
                  "additionalProperties": false,
                  "properties": {
                    "inputMultiplier": {
                      "type": "number"
                    },
                    "name": {
                      "pattern": "^[a-zA-Z0-9_-]+$",
                      "type": "string"
                    },
                    "value": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "name",
                    "value"
                  ],
                  "type": "object"
                },
                "required": [
                  "scalar"
                ],
                "type": "array"
              }
            },
            "type": "object"
          },
          "tags": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "timeout": {
            "type": "integer"
          },
          "title": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "jobVersion",
          "packageVersion",
          "title",
          "description",
          "maintainer",
          "timeout"
        ],
        "type": "object"
      },
      "seedVersion": {
        "pattern": "^SEED_VERSION$",
        "type": "string"
      }
    },
    "required": [
      "seedVersion",
      "job"
    ],
    "type": "object"
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "job": {
          "description": "This is a job description.",
          "errors": [
            {
              "category": "job",
              "code": 1,
              "description": "Error description",
              "name": "error_name",
              "title": "Error title"
            }
          ],
          "interface": {
            "command": "command",
            "inputs": {
              "files": [
                {
                  "mediaTypes": [
                    "application/json"
                  ],
                  "multiple": false,
                  "name": "file_name",
                  "partial": false,
                  "required": true
                }
              ],
              "json": [
                {
                  "name": "json_name",
                  "required": true,
                  "type": "string"
                }
              ]
            },
            "mounts": [
              {
                "mode": "ro",
                "name": "mount_name",
                "path": "/path"
              }
            ],
            "outputs": {
              "files": [
                {
                  "mediaType": "application/json",
                  "multiple": false,
                  "name": "file_name",
                  "pattern": "pattern",
                  "required": true
                }
              ],
              "json": [
                {
                  "key": "key",
                  "name": "json_name",
                  "required": true,
                  "type": "string"
                }
              ]
            },
            "settings": [
              {
                "name": "setting_name",
                "secret": false
              }
            ]
          },
          "jobVersion": "1.2.3",
          "maintainer": {
            "email": "email@example.com",
            "name": "Maintainer Name"
          },
          "name": "job-name",
          "packageVersion": "1.2.3",
          "resources": {
            "scalar": [
              {
                "inputMultiplier": 1,
                "name": "resource_name",
                "value": 1
              }
            ]
          },
          "tags": [
            "tag1",
            "tag2"
          ],
          "timeout": 3600,
          "title": "Job Title"
        },
        "seedVersion": "SEED_VERSION"
      }
    },
    {
      "description": "llama-70b generated negative; focus on pattern keyword",
      "valid": false,
      "rust_error": "\"error name\" does not match \"^[a-zA-Z0-9_-]+$\"",
      "python_error": "'error name' does not match '^[a-zA-Z0-9_-]+$'\n\nFailed validating 'pattern' in schema['properties']['job']['properties']['errors']['items']['properties']['name']:\n    {'pattern': '^[a-zA-Z0-9_-]+$', 'type': 'string'}\n\nOn instance['job']['errors'][0]['name']:\n    'error name'",
      "data": {
        "job": {
          "description": "This is a job description.",
          "errors": [
            {
              "category": "job",
              "code": 1,
              "description": "Error description",
              "name": "error name",
              "title": "Error title"
            }
          ],
          "interface": {
            "command": "command",
            "inputs": {
              "files": [
                {
                  "mediaTypes": [
                    "application/json"
                  ],
                  "multiple": false,
                  "name": "file name",
                  "partial": false,
                  "required": true
                }
              ],
              "json": [
                {
                  "name": "json name",
                  "required": true,
                  "type": "string"
                }
              ]
            },
            "mounts": [
              {
                "mode": "ro",
                "name": "mount name",
                "path": "/path"
              }
            ],
            "outputs": {
              "files": [
                {
                  "mediaType": "application/json",
                  "multiple": false,
                  "name": "file name",
                  "pattern": "pattern",
                  "required": true
                }
              ],
              "json": [
                {
                  "key": "key",
                  "name": "json name",
                  "required": true,
                  "type": "string"
                }
              ]
            },
            "settings": [
              {
                "name": "setting name",
                "secret": false
              }
            ]
          },
          "jobVersion": "1.2.3",
          "maintainer": {
            "email": "email@example.com",
            "name": "Maintainer Name"
          },
          "name": "job-name",
          "packageVersion": "1.2.3",
          "resources": {
            "scalar": [
              {
                "inputMultiplier": 1,
                "name": "resource name",
                "value": 1
              }
            ]
          },
          "tags": [
            "tag1",
            "tag2"
          ],
          "timeout": 3600,
          "title": "Job Title"
        },
        "seedVersion": "SEED_VERSION"
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"invalid_type\" is not one of [\"array\",\"boolean\",\"integer\",\"number\",\"object\",\"string\"]",
      "python_error": "'invalid_type' is not one of ['array', 'boolean', 'integer', 'number', 'object', 'string']\n\nFailed validating 'enum' in schema['properties']['job']['properties']['interface']['properties']['inputs']['properties']['json']['items']['properties']['type']:\n    {'enum': ['array', 'boolean', 'integer', 'number', 'object', 'string'],\n     'type': 'string'}\n\nOn instance['job']['interface']['inputs']['json'][0]['type']:\n    'invalid_type'",
      "data": {
        "job": {
          "description": "This is a job description.",
          "errors": [
            {
              "category": "job",
              "code": 1,
              "description": "Error description",
              "name": "error_name",
              "title": "Error title"
            }
          ],
          "interface": {
            "command": "command",
            "inputs": {
              "files": [
                {
                  "mediaTypes": [
                    "application/json"
                  ],
                  "multiple": false,
                  "name": "file_name",
                  "partial": false,
                  "required": true
                }
              ],
              "json": [
                {
                  "name": "json_name",
                  "required": true,
                  "type": "invalid_type"
                }
              ]
            },
            "mounts": [
              {
                "mode": "ro",
                "name": "mount_name",
                "path": "/path"
              }
            ],
            "outputs": {
              "files": [
                {
                  "mediaType": "application/json",
                  "multiple": false,
                  "name": "file_name",
                  "pattern": "pattern",
                  "required": true
                }
              ],
              "json": [
                {
                  "key": "key",
                  "name": "json_name",
                  "required": true,
                  "type": "string"
                }
              ]
            },
            "settings": [
              {
                "name": "setting_name",
                "secret": false
              }
            ]
          },
          "jobVersion": "1.2.3",
          "maintainer": {
            "email": "email@example.com",
            "name": "Maintainer Name"
          },
          "name": "job-name",
          "packageVersion": "1.2.3",
          "resources": {
            "scalar": [
              {
                "inputMultiplier": 1,
                "name": "resource_name",
                "value": 1
              }
            ]
          },
          "tags": [
            "tag1",
            "tag2"
          ],
          "timeout": 3600,
          "title": "Job Title"
        },
        "seedVersion": "SEED_VERSION"
      }
    },
    {
      "description": "llama-70b generated negative; focus on pattern keyword",
      "valid": false,
      "rust_error": "\"error name\" does not match \"^[a-zA-Z0-9_-]+$\"",
      "python_error": "'error name' does not match '^[a-zA-Z0-9_-]+$'\n\nFailed validating 'pattern' in schema['properties']['job']['properties']['errors']['items']['properties']['name']:\n    {'pattern': '^[a-zA-Z0-9_-]+$', 'type': 'string'}\n\nOn instance['job']['errors'][0]['name']:\n    'error name'",
      "data": {
        "job": {
          "description": "This is a job description.",
          "errors": [
            {
              "category": "job",
              "code": 1,
              "description": "Error description",
              "name": "error name",
              "title": "Error title"
            }
          ],
          "interface": {
            "command": "command",
            "inputs": {
              "files": [
                {
                  "mediaTypes": [
                    "application/json"
                  ],
                  "multiple": false,
                  "name": "file_name",
                  "partial": false,
                  "required": true
                }
              ],
              "json": [
                {
                  "name": "json_name",
                  "required": true,
                  "type": "string"
                }
              ]
            },
            "mounts": [
              {
                "mode": "ro",
                "name": "mount name",
                "path": "/path"
              }
            ],
            "outputs": {
              "files": [
                {
                  "mediaType": "application/json",
                  "multiple": false,
                  "name": "file_name",
                  "pattern": "pattern",
                  "required": true
                }
              ],
              "json": [
                {
                  "key": "key",
                  "name": "json_name",
                  "required": true,
                  "type": "string"
                }
              ]
            },
            "settings": [
              {
                "name": "setting_name",
                "secret": false
              }
            ]
          },
          "jobVersion": "1.2.3",
          "maintainer": {
            "email": "email@example.com",
            "name": "Maintainer Name"
          },
          "name": "job-name",
          "packageVersion": "1.2.3",
          "resources": {
            "scalar": [
              {
                "inputMultiplier": 1,
                "name": "resource_name",
                "value": 1
              }
            ]
          },
          "tags": [
            "tag1",
            "tag2"
          ],
          "timeout": 3600,
          "title": "Job Title"
        },
        "seedVersion": "SEED_VERSION"
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "Additional properties are not allowed ('extra_property' was unexpected)",
      "python_error": "Additional properties are not allowed ('extra_property' was unexpected)\n\nFailed validating 'additionalProperties' in schema:\n    {'$schema': 'http://json-schema.org/draft-04/schema#',\n     'additionalProperties': False,\n     'properties': {'job': {'additionalProperties': False,\n                            'properties': {'description': {'type': 'string'},\n                                           'errors': {'items': {'additionalProperties': False,\n                                                                'properties': {'category': {'default': 'job',\n                                                                                            'enum': ['job',\n                                                                                                     'data'],\n                                                                                            'type': 'string'},\n                                                                               'code': {'type': 'integer'},\n                         .. (19743 more)",
      "data": {
        "job": {
          "description": "This is a job description.",
          "errors": [
            {
              "category": "job",
              "code": 1,
              "description": "Error description",
              "name": "error_name",
              "title": "Error title"
            }
          ],
          "interface": {
            "command": "command",
            "inputs": {
              "files": [
                {
                  "mediaTypes": [
                    "application/json"
                  ],
                  "multiple": false,
                  "name": "file_name",
                  "partial": false,
                  "required": true
                }
              ],
              "json": [
                {
                  "name": "json_name",
                  "required": true,
                  "type": "string",
                  "extra_property": "extra_value"
                }
              ]
            },
            "mounts": [
              {
                "mode": "ro",
                "name": "mount_name",
                "path": "/path"
              }
            ],
            "outputs": {
              "files": [
                {
                  "mediaType": "application/json",
                  "multiple": false,
                  "name": "file_name",
                  "pattern": "pattern",
                  "required": true
                }
              ],
              "json": [
                {
                  "key": "key",
                  "name": "json_name",
                  "required": true,
                  "type": "string"
                }
              ]
            },
            "settings": [
              {
                "name": "setting_name",
                "secret": false
              }
            ]
          },
          "jobVersion": "1.2.3",
          "maintainer": {
            "email": "email@example.com",
            "name": "Maintainer Name"
          },
          "name": "job-name",
          "packageVersion": "1.2.3",
          "resources": {
            "scalar": [
              {
                "inputMultiplier": 1,
                "name": "resource_name",
                "value": 1
              }
            ]
          },
          "tags": [
            "tag1",
            "tag2"
          ],
          "timeout": 3600,
          "title": "Job Title"
        },
        "seedVersion": "SEED_VERSION",
        "extra_property": "extra_value"
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "job": {
          "description": "This is an example job.",
          "errors": [
            {
              "category": "job",
              "code": 1,
              "description": "Error description",
              "name": "error-name",
              "title": "Error Title"
            }
          ],
          "interface": {
            "command": "example-command",
            "inputs": {
              "files": [
                {
                  "mediaTypes": [
                    "text/plain"
                  ],
                  "multiple": false,
                  "name": "input-file",
                  "partial": false,
                  "required": true
                }
              ],
              "json": [
                {
                  "name": "input-json",
                  "required": true,
                  "type": "object"
                }
              ]
            },
            "mounts": [
              {
                "mode": "ro",
                "name": "mount-point",
                "path": "/mnt"
              }
            ],
            "outputs": {
              "files": [
                {
                  "mediaType": "text/plain",
                  "multiple": false,
                  "name": "output-file",
                  "pattern": "^output-.*\\.txt$",
                  "required": true
                }
              ],
              "json": [
                {
                  "key": "output-key",
                  "name": "output-json",
                  "required": true,
                  "type": "object"
                }
              ]
            },
            "settings": [
              {
                "name": "setting-name",
                "secret": false
              }
            ]
          },
          "jobVersion": "1.2.3",
          "maintainer": {
            "email": "john@example.com",
            "name": "John Doe"
          },
          "name": "example-job",
          "packageVersion": "4.5.6",
          "resources": {
            "scalar": [
              {
                "inputMultiplier": 1.0,
                "name": "resource-name",
                "value": 1.0
              }
            ]
          },
          "tags": [
            "example-tag"
          ],
          "timeout": 3600,
          "title": "Example Job"
        },
        "seedVersion": "SEED_VERSION"
      }
    },
    {
      "description": "llama-70b generated negative; focus on pattern keyword",
      "valid": false,
      "rust_error": "\"input-file!\" does not match \"^[a-zA-Z0-9_-]+$\"",
      "python_error": "'input-file!' does not match '^[a-zA-Z0-9_-]+$'\n\nFailed validating 'pattern' in schema['properties']['job']['properties']['interface']['properties']['inputs']['properties']['files']['items']['properties']['name']:\n    {'pattern': '^[a-zA-Z0-9_-]+$', 'type': 'string'}\n\nOn instance['job']['interface']['inputs']['files'][0]['name']:\n    'input-file!'",
      "data": {
        "job": {
          "description": "This is an example job.",
          "errors": [
            {
              "category": "job",
              "code": 1,
              "description": "Error description",
              "name": "error-name",
              "title": "Error Title"
            }
          ],
          "interface": {
            "command": "example-command",
            "inputs": {
              "files": [
                {
                  "mediaTypes": [
                    "text/plain"
                  ],
                  "multiple": false,
                  "name": "input-file!",
                  "partial": false,
                  "required": true
                }
              ],
              "json": [
                {
                  "name": "input-json",
                  "required": true,
                  "type": "object"
                }
              ]
            },
            "mounts": [
              {
                "mode": "ro",
                "name": "mount-point",
                "path": "/mnt"
              }
            ],
            "outputs": {
              "files": [
                {
                  "mediaType": "text/plain",
                  "multiple": false,
                  "name": "output-file",
                  "pattern": "^output-.*\\.txt$",
                  "required": true
                }
              ],
              "json": [
                {
                  "key": "output-key",
                  "name": "output-json",
                  "required": true,
                  "type": "object"
                }
              ]
            },
            "settings": [
              {
                "name": "setting-name",
                "secret": false
              }
            ]
          },
          "jobVersion": "1.2.3",
          "maintainer": {
            "email": "john@example.com",
            "name": "John Doe"
          },
          "name": "example-job",
          "packageVersion": "4.5.6",
          "resources": {
            "scalar": [
              {
                "inputMultiplier": 1.0,
                "name": "resource-name",
                "value": 1.0
              }
            ]
          },
          "tags": [
            "example-tag"
          ],
          "timeout": 3600,
          "title": "Example Job"
        },
        "seedVersion": "SEED_VERSION"
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "123 is not of type \"string\"",
      "python_error": "'invalid' is not of type 'integer'\n\nFailed validating 'type' in schema['properties']['job']['properties']['errors']['items']['properties']['code']:\n    {'type': 'integer'}\n\nOn instance['job']['errors'][0]['code']:\n    'invalid'",
      "data": {
        "seedVersion": "SEED_VERSION",
        "job": {
          "name": "example-job-abc",
          "jobVersion": "1.2.3",
          "packageVersion": "4.5.6",
          "title": "Example Job",
          "description": "This is an example job.",
          "maintainer": {
            "name": "John Doe",
            "email": "john@example.com"
          },
          "timeout": 3600,
          "interface": {
            "command": "example-command",
            "inputs": {
              "files": [
                {
                  "name": "input-file-abc",
                  "mediaTypes": [
                    "text/plain",
                    123
                  ],
                  "multiple": false,
                  "partial": false,
                  "required": true
                }
              ],
              "json": [
                {
                  "name": "input-json",
                  "type": "invalid",
                  "required": true
                }
              ]
            },
            "mounts": [
              {
                "name": "mount-point-abc",
                "path": "/mnt",
                "mode": "invalid"
              }
            ],
            "outputs": {
              "files": [
                {
                  "name": "output-file-abc",
                  "pattern": "^output-.*\\.txt$",
                  "mediaType": 123,
                  "multiple": false,
                  "required": true
                }
              ],
              "json": [
                {
                  "name": "output-json",
                  "type": "invalid",
                  "key": "output-key",
                  "required": true
                }
              ]
            },
            "settings": [
              {
                "name": "setting-name-abc",
                "secret": "invalid"
              }
            ]
          },
          "resources": {
            "scalar": [
              {
                "name": "resource-name-abc",
                "value": "invalid",
                "inputMultiplier": 1.0
              }
            ]
          },
          "tags": [
            "example-tag"
          ],
          "errors": [
            {
              "name": "error-name-abc",
              "code": "invalid",
              "category": "invalid",
              "title": "Error Title",
              "description": "Error description"
            }
          ]
        }
      }
    }
  ]
}