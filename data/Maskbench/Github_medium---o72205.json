{
  "description": "sample Github_medium/o72205.json",
  "meta": {
    "full_size": 1199,
    "stripped_size": 442,
    "features": [
      "@siblingKeys",
      "additionalProperties",
      "enum",
      "oneOf"
    ],
    "raw_features": [
      "$schema",
      "_boolSchema",
      "properties",
      "required",
      "type",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "title": "User Token Claim Schema",
    "description": "Defines the claims provided to autenticate a user with a JWT.",
    "type": "object",
    "additionalProperties": true,
    "oneOf": [
      {
        "required": [
          "user"
        ]
      },
      {
        "required": [
          "sub"
        ]
      }
    ],
    "properties": {
      "authentication": {
        "type": "string",
        "title": "Authentication",
        "description": "Users can either be authenticated or unauthenticated. Authenticated users have had their identity validated. Unauthenticated users have not proved their identity, can still take actions when enabled in SaaSquatch, but are tracked separately.",
        "default": "authenticated",
        "enum": [
          "authenticated",
          "unauthenticated"
        ]
      },
      "sub": {
        "type": "string",
        "title": "Subject",
        "description": "The user identity to be validated. Of the format: `{ACCOUNTID}:{USERID}@{TENANT}:users`"
      },
      "iss": {
        "type": "string",
        "title": "Issuer",
        "description": "The issuer of the token. When ommitted then the issuer must be a "
      },
      "user": {
        "type": "object",
        "title": "The User Subject",
        "description": "Identifies the user by identity.",
        "additionalProperties": true,
        "required": [
          "id",
          "accountId"
        ],
        "properties": {
          "id": {
            "type": "string",
            "title": "User ID"
          },
          "accountId": {
            "type": "string",
            "title": "Account ID"
          }
        }
      }
    }
  },
  "tests": [
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "authentication": "authenticated",
        "iss": "https://example.com",
        "user": {
          "id": "12345",
          "accountId": "67890"
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on oneOf keyword",
      "valid": false,
      "rust_error": "{\"authentication\":\"authenticated\",\"iss\":\"https://example.com\",\"user\":{\"id\":\"12345\",\"accountId\":\"67890\"},\"sub\":\"some-subject\"} is valid under more than one of the schemas listed in the 'oneOf' keyword",
      "python_error": "{'authentication': 'authenticated', 'iss': 'https://example.com', 'user': {'id': '12345', 'accountId': '67890'}, 'sub': 'some-subject'} is valid under each of {'required': ['sub']}, {'required': ['user']}\n\nFailed validating 'oneOf' in schema:\n    {'$schema': 'http://json-schema.org/draft-04/schema#',\n     'title': 'User Token Claim Schema',\n     'description': 'Defines the claims provided to autenticate a user '\n                    'with a JWT.',\n     'type': 'object',\n     'additionalProperties': True,\n     'oneOf': [{'required': ['user']}, {'required': ['sub']}],\n     'properties': {'authentication': {'type': 'string',\n                                       'title': 'Authentication',\n                                       'description': 'Users can either be '\n                                                      'authenticated or '\n                                                      'unauthenticated. '\n                                                      'Authenticated users '\n                           .. (2424 more)",
      "data": {
        "authentication": "authenticated",
        "iss": "https://example.com",
        "user": {
          "id": "12345",
          "accountId": "67890"
        },
        "sub": "some-subject"
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"accountId\" is a required property",
      "python_error": "'accountId' is a required property\n\nFailed validating 'required' in schema['properties']['user']:\n    {'type': 'object',\n     'title': 'The User Subject',\n     'description': 'Identifies the user by identity.',\n     'additionalProperties': True,\n     'required': ['id', 'accountId'],\n     'properties': {'id': {'type': 'string', 'title': 'User ID'},\n                    'accountId': {'type': 'string', 'title': 'Account ID'}}}\n\nOn instance['user']:\n    {'id': ''}",
      "data": {
        "authentication": "authenticated",
        "iss": "https://example.com",
        "user": {
          "id": ""
        }
      }
    }
  ]
}