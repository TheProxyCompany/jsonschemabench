{
  "description": "sample Github_hard/o32807.json",
  "meta": {
    "full_size": 1962,
    "stripped_size": 1912,
    "features": [
      "$ref",
      "@minmaxLength",
      "@siblingKeys",
      "additionalProperties",
      "items",
      "oneOf",
      "pattern",
      "patternProperties"
    ],
    "raw_features": [
      "$schema",
      "_boolSchema",
      "definitions",
      "maxLength",
      "minLength",
      "properties",
      "required",
      "type",
      "type:[]",
      "type:array",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "additionalProperties": false,
    "definitions": {
      "asset": {
        "properties": {
          "name": {
            "$ref": "#/definitions/aws_identifier"
          },
          "permissions": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "region": {
            "oneOf": [
              {
                "items": {
                  "$ref": "#/definitions/aws_identifier"
                },
                "type": "array"
              },
              {
                "$ref": "#/definitions/aws_identifier"
              }
            ]
          },
          "service": {
            "$ref": "#/definitions/identifier"
          }
        },
        "required": [
          "service",
          "name",
          "permissions"
        ],
        "type": "object"
      },
      "aws_identifier": {
        "minLength": 1,
        "pattern": "^([\\w\\d].*|\\*)$",
        "type": "string"
      },
      "identifier": {
        "minLength": 1,
        "pattern": "^[\\w\\d][\\w\\d-]*$",
        "type": "string"
      },
      "person": {
        "properties": {
          "email": {
            "_format": "email",
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "url": {
            "_format": "uri",
            "type": "string"
          }
        },
        "required": [
          "name"
        ],
        "type": [
          "object",
          "string"
        ]
      },
      "version": {
        "maxLength": 10,
        "minLength": 1,
        "pattern": "^(\\*|\\d{4}\\-\\d{2}\\-\\d{2})$",
        "type": "string"
      }
    },
    "properties": {
      "assets": {
        "items": {
          "$ref": "#/definitions/asset"
        },
        "type": "array"
      },
      "author": {
        "$ref": "#/definitions/person"
      },
      "client": {
        "type": "string"
      },
      "configuration": {
        "type": "object"
      },
      "contributors": {
        "items": {
          "$ref": "#/definitions/person"
        },
        "type": "array"
      },
      "description": {
        "type": "string"
      },
      "documentation": {
        "type": "string"
      },
      "health": {
        "type": "string"
      },
      "keywords": {
        "items": {
          "type": "string"
        },
        "type": "array"
      },
      "maintainers": {
        "items": {
          "$ref": "#/definitions/person"
        },
        "type": "array"
      },
      "manage": {
        "type": "string"
      },
      "name": {
        "$ref": "#/definitions/identifier",
        "maxLength": 64
      },
      "policy": {
        "items": {
          "$ref": "#/definitions/asset"
        },
        "type": "array"
      },
      "region": {
        "oneOf": [
          {
            "items": {
              "$ref": "#/definitions/identifier"
            },
            "type": "array"
          },
          {
            "$ref": "#/definitions/identifier"
          }
        ]
      },
      "repository": {
        "properties": {
          "type": {
            "type": "string"
          },
          "url": {
            "_format": "uri",
            "type": "string"
          }
        },
        "type": [
          "object",
          "string"
        ]
      },
      "resources": {
        "patternProperties": {
          ".+": {
            "$ref": "#/definitions/version"
          }
        },
        "type": "object"
      },
      "universe": {
        "$ref": "#/definitions/identifier"
      }
    },
    "required": [
      "name"
    ],
    "type": "object"
  },
  "tests": [
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "name": "example",
        "author": {
          "name": "John Doe",
          "email": "john@example.com"
        },
        "assets": [
          {
            "service": "ec2",
            "name": "my-ec2-instance",
            "permissions": [
              "read",
              "write"
            ],
            "region": "us-east-1"
          },
          {
            "service": "s3",
            "name": "my-s3-bucket",
            "permissions": [
              "read",
              "write"
            ],
            "region": [
              "us-east-1",
              "us-west-2"
            ]
          }
        ],
        "contributors": [
          {
            "name": "Jane Doe",
            "email": "jane@example.com"
          }
        ],
        "maintainers": [
          {
            "name": "Bob Smith",
            "email": "bob@example.com"
          }
        ],
        "description": "This is an example",
        "keywords": [
          "example",
          "test"
        ],
        "policy": [
          {
            "service": "iam",
            "name": "my-iam-policy",
            "permissions": [
              "read",
              "write"
            ],
            "region": "us-east-1"
          }
        ],
        "region": [
          "us-east-1",
          "us-west-2"
        ],
        "repository": {
          "type": "git",
          "url": "https://github.com/example/repo"
        },
        "resources": {
          "resource1": "2022-01-01",
          "resource2": "*"
        },
        "universe": "example-universe"
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "name": "example",
        "author": {
          "name": "John Doe",
          "email": "john.doe@example.com",
          "phone": "123-456-7890",
          "url": "https://example.com"
        },
        "client": "example-client",
        "configuration": {},
        "contributors": [
          {
            "name": "Jane Doe",
            "email": "jane.doe@example.com",
            "phone": "987-654-3210",
            "url": "https://example.com"
          }
        ],
        "description": "This is an example.",
        "documentation": "https://example.com/docs",
        "health": "healthy",
        "keywords": [
          "example",
          "keyword1",
          "keyword2"
        ],
        "maintainers": [
          {
            "name": "John Doe",
            "email": "john.doe@example.com",
            "phone": "123-456-7890",
            "url": "https://example.com"
          }
        ],
        "manage": "managed",
        "policy": [
          {
            "service": "s3",
            "name": "example-bucket",
            "permissions": [
              "read",
              "write"
            ],
            "region": "us-east-1"
          }
        ],
        "region": "us-east-1",
        "repository": {
          "type": "git",
          "url": "https://example.com/repo.git"
        },
        "resources": {
          "resource1": "2022-01-01",
          "resource2": "*"
        },
        "universe": "example-universe",
        "assets": [
          {
            "service": "ec2",
            "name": "example-instance",
            "permissions": [
              "start",
              "stop"
            ],
            "region": "us-east-1"
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on minLength keyword or maxLength keyword",
      "valid": false,
      "rust_error": "\"\" is shorter than 1 character",
      "python_error": "'' should be non-empty\n\nFailed validating 'minLength' in schema['properties']['name']:\n    {'minLength': 1, 'pattern': '^[\\\\w\\\\d][\\\\w\\\\d-]*$', 'type': 'string'}\n\nOn instance['name']:\n    ''",
      "data": {
        "name": "",
        "author": {
          "name": "John Doe",
          "email": "john.doe@example.com",
          "phone": "123-456-7890",
          "url": "https://example.com"
        },
        "client": "example-client",
        "configuration": {},
        "contributors": [
          {
            "name": "Jane Doe",
            "email": "jane.doe@example.com",
            "phone": "987-654-3210",
            "url": "https://example.com"
          }
        ],
        "description": "This is an example.",
        "documentation": "https://example.com/docs",
        "health": "healthy",
        "keywords": [
          "example",
          "keyword1",
          "keyword2"
        ],
        "maintainers": [
          {
            "name": "John Doe",
            "email": "john.doe@example.com",
            "phone": "123-456-7890",
            "url": "https://example.com"
          }
        ],
        "manage": "managed",
        "policy": [
          {
            "service": "s3",
            "name": "example-bucket",
            "permissions": [
              "read",
              "write"
            ],
            "region": "us-east-1"
          }
        ],
        "region": "us-east-1",
        "repository": {
          "type": "git",
          "url": "https://example.com/repo.git"
        },
        "resources": {
          "resource1": "2022-01-01",
          "resource2": "*"
        },
        "universe": "example-universe",
        "assets": [
          {
            "service": "ec2",
            "name": "example-instance",
            "permissions": [
              "start",
              "stop"
            ],
            "region": "us-east-1"
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on patternProperties keyword",
      "valid": false,
      "rust_error": "\"invalid-version-string-with-more-than-10-characters-but-no-dates\" is longer than 10 characters",
      "python_error": "'invalid-version-string-with-more-than-10-characters-but-no-dates' is too long\n\nFailed validating 'maxLength' in schema['properties']['resources']['patternProperties']['.+']:\n    {'maxLength': 10,\n     'minLength': 1,\n     'pattern': '^(\\\\*|\\\\d{4}\\\\-\\\\d{2}\\\\-\\\\d{2})$',\n     'type': 'string'}\n\nOn instance['resources']['resource2']:\n    'invalid-version-string-with-more-than-10-characters-but-no-dates'",
      "data": {
        "name": "example",
        "author": {
          "name": "John Doe",
          "email": "john.doe@example.com",
          "phone": "123-456-7890",
          "url": "https://example.com"
        },
        "client": "example-client",
        "configuration": {},
        "contributors": [
          {
            "name": "Jane Doe",
            "email": "jane.doe@example.com",
            "phone": "987-654-3210",
            "url": "https://example.com"
          }
        ],
        "description": "This is an example.",
        "documentation": "https://example.com/docs",
        "health": "healthy",
        "keywords": [
          "example",
          "keyword1",
          "keyword2"
        ],
        "maintainers": [
          {
            "name": "John Doe",
            "email": "john.doe@example.com",
            "phone": "123-456-7890",
            "url": "https://example.com"
          }
        ],
        "manage": "managed",
        "policy": [
          {
            "service": "s3",
            "name": "example-bucket",
            "permissions": [
              "read",
              "write"
            ],
            "region": "us-east-1"
          }
        ],
        "region": "us-east-1",
        "repository": {
          "type": "git",
          "url": "https://example.com/repo.git"
        },
        "resources": {
          "resource1": "2022-01-01",
          "resource2": "invalid-version-string-with-more-than-10-characters-but-no-dates"
        },
        "universe": "example-universe",
        "assets": [
          {
            "service": "ec2",
            "name": "example-instance",
            "permissions": [
              "start",
              "stop"
            ],
            "region": "us-east-1"
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on type keyword with an array of types",
      "valid": false,
      "rust_error": "Additional properties are not allowed ('# Invalid type, should be an object or string' was unexpected)",
      "python_error": "Additional properties are not allowed ('# Invalid type, should be an object or string' was unexpected)\n\nFailed validating 'additionalProperties' in schema:\n    {'$schema': 'http://json-schema.org/draft-04/schema#',\n     'additionalProperties': False,\n     'definitions': {'asset': {'properties': {'name': {'$ref': '#/definitions/aws_identifier'},\n                                              'permissions': {'items': {'type': 'string'},\n                                                              'type': 'array'},\n                                              'region': {'oneOf': [{'items': {'$ref': '#/definitions/aws_identifier'},\n                                                                    'type': 'array'},\n                                                                   {'$ref': '#/definitions/aws_identifier'}]},\n                                              'service': {'$ref': '#/definitions/identifier'}},\n                               'required': ['service',\n                                       .. (4508 more)",
      "data": {
        "name": "example",
        "author": "12345",
        "# Invalid type, should be an object or string": "client",
        "configuration": {},
        "contributors": [
          {
            "name": "Jane Doe",
            "email": "jane.doe@example.com",
            "phone": "987-654-3210",
            "url": "https://example.com"
          }
        ],
        "description": "This is an example.",
        "documentation": "https://example.com/docs",
        "health": "healthy",
        "keywords": [
          "example",
          "keyword1",
          "keyword2"
        ],
        "maintainers": [
          {
            "name": "John Doe",
            "email": "john.doe@example.com",
            "phone": "123-456-7890",
            "url": "https://example.com"
          }
        ],
        "manage": "managed",
        "policy": [
          {
            "service": "s3",
            "name": "example-bucket",
            "permissions": [
              "read",
              "write"
            ],
            "region": "us-east-1"
          }
        ],
        "region": "us-east-1",
        "repository": {
          "type": "git",
          "url": "https://example.com/repo.git"
        },
        "resources": {
          "resource1": "2022-01-01",
          "resource2": "*"
        },
        "universe": "example-universe",
        "assets": [
          {
            "service": "ec2",
            "name": "example-instance",
            "permissions": [
              "start",
              "stop"
            ],
            "region": "us-east-1"
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\" invalid-version\" is longer than 10 characters",
      "python_error": "' invalid-version' is too long\n\nFailed validating 'maxLength' in schema['properties']['resources']['patternProperties']['.+']:\n    {'maxLength': 10,\n     'minLength': 1,\n     'pattern': '^(\\\\*|\\\\d{4}\\\\-\\\\d{2}\\\\-\\\\d{2})$',\n     'type': 'string'}\n\nOn instance['resources']['resource3']:\n    ' invalid-version'",
      "data": {
        "name": "example",
        "author": {
          "name": "John Doe",
          "email": "john.doe@example.com",
          "phone": "123-456-7890",
          "url": "https://example.com"
        },
        "client": "example-client",
        "configuration": {},
        "contributors": [
          {
            "name": "Jane Doe",
            "email": "jane.doe@example.com",
            "phone": "987-654-3210",
            "url": "https://example.com"
          }
        ],
        "description": "This is an example.",
        "documentation": "https://example.com/docs",
        "health": "healthy",
        "keywords": [
          "example",
          "keyword1",
          "keyword2"
        ],
        "maintainers": [
          {
            "name": "John Doe",
            "email": "john.doe@example.com",
            "phone": "123-456-7890",
            "url": "https://example.com"
          }
        ],
        "manage": "managed",
        "policy": [
          {
            "service": "s3",
            "name": "example-bucket",
            "permissions": [
              "read",
              "write"
            ],
            "region": "us-east-1"
          }
        ],
        "region": "us-east-1",
        "repository": {
          "type": "git",
          "url": "https://example.com/repo.git"
        },
        "resources": {
          "resource1": "2022-01-01",
          "resource2": "*",
          "resource3": " invalid-version"
        },
        "universe": "example-universe",
        "assets": [
          {
            "service": "ec2",
            "name": "example-instance",
            "permissions": [
              "start",
              "stop"
            ],
            "region": "us-east-1",
            "extra-prop": "extra-value"
          },
          {
            "service": "ec2",
            "name": "example-instance",
            "permissions": [
              "start",
              "stop"
            ],
            "region": "invalid-region"
          }
        ]
      }
    }
  ]
}