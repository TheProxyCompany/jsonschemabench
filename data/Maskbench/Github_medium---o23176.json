{
  "description": "sample Github_medium/o23176.json",
  "meta": {
    "full_size": 1220,
    "stripped_size": 1136,
    "features": [
      "additionalProperties",
      "additionalProperties:object",
      "format",
      "format:date",
      "format:date-time",
      "format:duration",
      "format:time",
      "items",
      "oneOf"
    ],
    "raw_features": [
      "$schema",
      "_boolSchema",
      "id",
      "properties",
      "type",
      "type:array",
      "type:boolean",
      "type:integer",
      "type:number",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "id": "http://test.phpsx.org/test#",
    "type": "object",
    "properties": {
      "any": {
        "type": "object",
        "additionalProperties": {
          "type": "string"
        }
      },
      "array": {
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      "arrayComplex": {
        "type": "array",
        "items": {
          "title": "a",
          "type": "object",
          "properties": {
            "foo": {
              "type": "string"
            }
          }
        }
      },
      "arrayChoice": {
        "type": "array",
        "items": {
          "oneOf": [
            {
              "title": "choiceA",
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "foo": {
                  "type": "string"
                }
              }
            },
            {
              "title": "choiceB",
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "bar": {
                  "type": "string"
                }
              }
            }
          ]
        }
      },
      "boolean": {
        "type": "boolean"
      },
      "choice": {
        "oneOf": [
          {
            "title": "choiceA",
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "foo": {
                "type": "string"
              }
            }
          },
          {
            "title": "choiceB",
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "bar": {
                "type": "string"
              }
            }
          }
        ]
      },
      "complex": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "foo": {
            "type": "string"
          }
        }
      },
      "date": {
        "type": "string",
        "format": "date"
      },
      "dateTime": {
        "type": "string",
        "format": "date-time"
      },
      "duration": {
        "type": "string",
        "format": "duration"
      },
      "float": {
        "type": "number"
      },
      "integer": {
        "type": "integer"
      },
      "string": {
        "type": "string"
      },
      "time": {
        "type": "string",
        "format": "time"
      }
    }
  },
  "tests": [
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "any": {
          "key1": "value1",
          "key2": "value2"
        },
        "array": [
          "string1",
          "string2",
          "string3"
        ],
        "arrayComplex": [
          {
            "foo": "string1"
          },
          {
            "foo": "string2"
          }
        ],
        "arrayChoice": [
          {
            "foo": "string1"
          },
          {
            "bar": "string2"
          }
        ],
        "boolean": true,
        "choice": {
          "foo": "string1"
        },
        "complex": {
          "foo": "string1"
        },
        "date": "2022-01-01",
        "dateTime": "2022-01-01T12:00:00Z",
        "duration": "P3DT12H30M5S",
        "float": 3.14,
        "integer": 42,
        "string": "Hello, World!",
        "time": "12:00:00Z"
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "any": {
          "key1": "value1",
          "key2": "value2"
        },
        "array": [
          "item1",
          "item2",
          "item3"
        ],
        "arrayComplex": [
          {
            "foo": "value1"
          },
          {
            "foo": "value2"
          }
        ],
        "arrayChoice": [
          {
            "foo": "value1"
          },
          {
            "bar": "value2"
          }
        ],
        "boolean": true,
        "choice": {
          "foo": "value1"
        },
        "complex": {
          "foo": "value1"
        },
        "date": "2022-01-01",
        "dateTime": "2022-01-01T12:00:00Z",
        "duration": "P1D",
        "float": 3.14,
        "integer": 42,
        "string": "Hello, World!",
        "time": "12:00:00Z"
      }
    },
    {
      "description": "llama-70b generated negative; focus on format keyword",
      "valid": false,
      "rust_error": "\"2022-01-32\" is not a \"date\"",
      "python_error": "'12:00:00' is not a 'time'\n\nFailed validating 'format' in schema['properties']['time']:\n    {'type': 'string', 'format': 'time'}\n\nOn instance['time']:\n    '12:00:00'",
      "data": {
        "any": {
          "key1": "value1",
          "key2": "value2"
        },
        "array": [
          "item1",
          "item2",
          "item3"
        ],
        "arrayComplex": [
          {
            "foo": "value1"
          },
          {
            "foo": "value2"
          }
        ],
        "arrayChoice": [
          {
            "foo": "value1"
          },
          {
            "bar": "value2"
          }
        ],
        "boolean": true,
        "choice": {
          "foo": "value1"
        },
        "complex": {
          "foo": "value1"
        },
        "date": "2022-01-32",
        "Invalid date": "dateTime",
        "Invalid date-time, removed T and Z to make invalid date-time format": "2022-01-01 12:00:00",
        "duration": "P1X",
        "Invalid duration format, X is not allowed unit": "float",
        "Float value with invalid number": "a",
        "Integer value should be invalid here but draft-04 of JSON schema only supports number and integer types, number type also allow integer values, float value also parse as integer if float number with no decimal value": 42,
        "integer": 42.1,
        "Integer value should be invalid here but draft-04 of JSON schema doesn't have a separate type for integer and number": "string",
        "No change as string type can have any string value, no constraint": "Hello, World!",
        "time": "12:00:00",
        "Invalid time format, Z is required at the end": "12:00:00Z"
      }
    },
    {
      "description": "llama-70b generated negative; focus on oneOf keyword",
      "valid": false,
      "rust_error": "{\"foo\":\"value1\",\"bar\":\"value3\"} is not valid under any of the schemas listed in the 'oneOf' keyword",
      "python_error": "{'foo': 'value1', 'bar': 'value2'} is not valid under any of the given schemas\n\nFailed validating 'oneOf' in schema['properties']['choice']:\n    {'oneOf': [{'title': 'choiceA',\n                'type': 'object',\n                'additionalProperties': False,\n                'properties': {'foo': {'type': 'string'}}},\n               {'title': 'choiceB',\n                'type': 'object',\n                'additionalProperties': False,\n                'properties': {'bar': {'type': 'string'}}}]}\n\nOn instance['choice']:\n    {'foo': 'value1', 'bar': 'value2'}",
      "data": {
        "any": {
          "key1": "value1",
          "key2": "value2"
        },
        "array": [
          "item1",
          "item2",
          "item3"
        ],
        "arrayComplex": [
          {
            "foo": "value1"
          },
          {
            "foo": "value2"
          }
        ],
        "arrayChoice": [
          {
            "foo": "value1",
            "bar": "value3"
          },
          {
            "bar": "value2"
          }
        ],
        "boolean": true,
        "choice": {
          "foo": "value1",
          "bar": "value2"
        },
        "complex": {
          "foo": "value1"
        },
        "date": "2022-01-01",
        "dateTime": "2022-01-01T12:00:00Z",
        "duration": "P1D",
        "float": 3.14,
        "integer": 42,
        "string": "Hello, World!",
        "time": "12:00:00Z"
      }
    },
    {
      "description": "llama-70b generated negative; focus on additionalProperties keyword with an object schema",
      "valid": false,
      "rust_error": "{\"foo\":\"value1\",\"extra\":\"value2\"} is not valid under any of the schemas listed in the 'oneOf' keyword",
      "python_error": "Additional properties are not allowed ('extra' was unexpected)\n\nFailed validating 'additionalProperties' in schema['properties']['complex']:\n    {'type': 'object',\n     'additionalProperties': False,\n     'properties': {'foo': {'type': 'string'}}}\n\nOn instance['complex']:\n    {'foo': 'value1', 'extra': 'value2'}",
      "data": {
        "any": {
          "key1": "value1",
          "key2": "value2"
        },
        "array": [
          "item1",
          "item2",
          "item3"
        ],
        "arrayComplex": [
          {
            "foo": "value1"
          },
          {
            "foo": "value2"
          }
        ],
        "arrayChoice": [
          {
            "foo": "value1"
          },
          {
            "bar": "value2"
          }
        ],
        "boolean": true,
        "choice": {
          "foo": "value1",
          "extra": "value2"
        },
        "complex": {
          "foo": "value1",
          "extra": "value2"
        },
        "date": "2022-01-01",
        "dateTime": "2022-01-01T12:00:00Z",
        "duration": "P1D",
        "float": 3.14,
        "integer": 42,
        "string": "Hello, World!",
        "time": "12:00:00Z"
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "true is not of type \"string\"",
      "python_error": "'not a time' is not a 'time'\n\nFailed validating 'format' in schema['properties']['time']:\n    {'type': 'string', 'format': 'time'}\n\nOn instance['time']:\n    'not a time'",
      "data": {
        "any": {
          "key1": true,
          "key2": "value2"
        },
        "array": [
          "item1",
          null,
          "item3"
        ],
        "arrayComplex": [
          {
            "foo": "value1"
          },
          {
            "foo": 123
          }
        ],
        "arrayChoice": [
          {
            "foo": "value1",
            "bar": "extraProperty"
          },
          {
            "bar": "value2"
          }
        ],
        "boolean": "true",
        "choice": {
          "foo": "value1",
          "bar": "value2"
        },
        "complex": {
          "foo": "value1",
          "bar": "extraProperty"
        },
        "date": "not a date",
        "dateTime": "not a date-time",
        "duration": "not a duration",
        "float": "not a number",
        "integer": 3.14,
        "string": 123,
        "time": "not a time"
      }
    }
  ]
}