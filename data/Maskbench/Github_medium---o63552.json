{
  "description": "sample Github_medium/o63552.json",
  "meta": {
    "full_size": 629,
    "stripped_size": 629,
    "features": [
      "format",
      "format:uri",
      "items"
    ],
    "raw_features": [
      "properties",
      "required",
      "type",
      "type:array",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "properties": {
      "emailDetails": {
        "properties": {
          "attachments": {
            "items": {
              "properties": {
                "filename": {
                  "type": "string"
                },
                "path": {
                  "format": "uri",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "bcc": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "cc": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "from": {
            "type": "string"
          },
          "html": {
            "type": "string"
          },
          "subject": {
            "type": "string"
          },
          "to": {
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "required": [
          "to",
          "from",
          "subject",
          "html"
        ],
        "type": "object"
      },
      "params": {
        "properties": {
          "companyName": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          }
        },
        "required": [
          "firstName",
          "companyName"
        ],
        "type": "object"
      }
    },
    "type": "object"
  },
  "tests": [
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "emailDetails": {
          "attachments": [
            {
              "filename": "example.pdf",
              "path": "https://example.com/attachments/example.pdf"
            },
            {
              "filename": "example2.pdf",
              "path": "https://example.com/attachments/example2.pdf"
            }
          ],
          "bcc": [
            "bcc@example.com"
          ],
          "cc": [
            "cc@example.com"
          ],
          "from": "from@example.com",
          "html": "<p>Hello, this is an example email.</p>",
          "subject": "Example Email",
          "to": [
            "to@example.com"
          ]
        },
        "params": {
          "companyName": "Example Company",
          "firstName": "John"
        }
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "emailDetails": {
          "to": [
            "recipient1@example.com",
            "recipient2@example.com"
          ],
          "from": "sender@example.com",
          "subject": "Test Email",
          "html": "<p>This is a test email.</p>",
          "cc": [
            "cc1@example.com",
            "cc2@example.com"
          ],
          "bcc": [
            "bcc1@example.com",
            "bcc2@example.com"
          ],
          "attachments": [
            {
              "filename": "attachment1.pdf",
              "path": "https://example.com/attachment1.pdf"
            },
            {
              "filename": "attachment2.pdf",
              "path": "https://example.com/attachment2.pdf"
            }
          ]
        },
        "params": {
          "firstName": "John",
          "companyName": "ABC Corporation"
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on format keyword",
      "valid": false,
      "rust_error": "\"invalid path\" is not a \"uri\"",
      "python_error": "'invalid path' is not a 'uri'\n\nFailed validating 'format' in schema['properties']['emailDetails']['properties']['attachments']['items']['properties']['path']:\n    {'format': 'uri', 'type': 'string'}\n\nOn instance['emailDetails']['attachments'][0]['path']:\n    'invalid path'",
      "data": {
        "emailDetails": {
          "to": [
            "recipient1@example.com",
            "recipient2@example.com"
          ],
          "from": "sender@example.com",
          "subject": "Test Email",
          "html": "<p>This is a test email.</p>",
          "cc": [
            "cc1@example.com",
            "cc2@example.com"
          ],
          "bcc": [
            "bcc1@example.com",
            "bcc2@example.com"
          ],
          "attachments": [
            {
              "filename": "attachment1.pdf",
              "path": "invalid path"
            }
          ]
        },
        "params": {
          "firstName": "John",
          "companyName": "ABC Corporation"
        }
      }
    }
  ]
}