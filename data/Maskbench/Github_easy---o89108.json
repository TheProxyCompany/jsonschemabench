{
  "description": "sample Github_easy/o89108.json",
  "meta": {
    "full_size": 627,
    "stripped_size": 332,
    "features": [
      "@minmaxInteger",
      "additionalProperties",
      "enum",
      "items"
    ],
    "raw_features": [
      "$schema",
      "_boolSchema",
      "maximum",
      "minimum",
      "properties",
      "type",
      "type:array",
      "type:integer",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "title": "generateAddressParameters",
    "type": "object",
    "properties": {
      "options": {
        "type": "object",
        "description": "Options to control how the address and secret are generated.",
        "properties": {
          "entropy": {
            "type": "array",
            "items": {
              "type": "integer",
              "minimum": 0,
              "maximum": 255
            },
            "description": "The entropy to use to generate the seed."
          },
          "algorithm": {
            "type": "string",
            "enum": [
              "ecdsa-secp256k1",
              "ed25519"
            ],
            "description": "The digital signature algorithm to generate an address for. Can be `ecdsa-secp256k1` (default) or `ed25519`."
          }
        },
        "additionalProperties": false
      }
    },
    "additionalProperties": false
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "options": {
          "entropy": [
            10,
            20,
            30,
            40,
            50,
            60,
            70,
            80,
            90,
            100,
            110,
            120,
            130,
            140,
            150,
            160,
            170,
            180,
            190,
            200,
            210,
            220,
            230,
            240,
            250
          ],
          "algorithm": "ecdsa-secp256k1"
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on minimum keyword or maximum keyword",
      "valid": false,
      "rust_error": "-1 is less than the minimum of 0",
      "python_error": "256 is greater than the maximum of 255\n\nFailed validating 'maximum' in schema['properties']['options']['properties']['entropy']['items']:\n    {'type': 'integer', 'minimum': 0, 'maximum': 255}\n\nOn instance['options']['entropy'][25]:\n    256",
      "data": {
        "options": {
          "entropy": [
            -1,
            20,
            30,
            40,
            50,
            60,
            70,
            80,
            90,
            100,
            110,
            120,
            130,
            140,
            150,
            160,
            170,
            180,
            190,
            200,
            210,
            220,
            230,
            240,
            250,
            256
          ],
          "algorithm": "ecdsa-secp256k1"
        }
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "256 is greater than the maximum of 255",
      "python_error": "256 is greater than the maximum of 255\n\nFailed validating 'maximum' in schema['properties']['options']['properties']['entropy']['items']:\n    {'type': 'integer', 'minimum': 0, 'maximum': 255}\n\nOn instance['options']['entropy'][25]:\n    256",
      "data": {
        "options": {
          "entropy": [
            10,
            20,
            30,
            40,
            50,
            60,
            70,
            80,
            90,
            100,
            110,
            120,
            130,
            140,
            150,
            160,
            170,
            180,
            190,
            200,
            210,
            220,
            230,
            240,
            250,
            256
          ],
          "algorithm": "ecdsa-secp256k1"
        }
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "256 is greater than the maximum of 255",
      "python_error": "256 is greater than the maximum of 255\n\nFailed validating 'maximum' in schema['properties']['options']['properties']['entropy']['items']:\n    {'type': 'integer', 'minimum': 0, 'maximum': 255}\n\nOn instance['options']['entropy'][24]:\n    256",
      "data": {
        "options": {
          "entropy": [
            10,
            20,
            30,
            40,
            50,
            60,
            70,
            80,
            90,
            100,
            110,
            120,
            130,
            140,
            150,
            160,
            170,
            180,
            190,
            200,
            210,
            220,
            230,
            240,
            256
          ],
          "algorithm": "ecdsa-secp256k1"
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on minimum keyword or maximum keyword",
      "valid": false,
      "rust_error": "-1 is less than the minimum of 0",
      "python_error": "256 is greater than the maximum of 255\n\nFailed validating 'maximum' in schema['properties']['options']['properties']['entropy']['items']:\n    {'type': 'integer', 'minimum': 0, 'maximum': 255}\n\nOn instance['options']['entropy'][26]:\n    256",
      "data": {
        "options": {
          "entropy": [
            -1,
            10,
            20,
            30,
            40,
            50,
            60,
            70,
            80,
            90,
            100,
            110,
            120,
            130,
            140,
            150,
            160,
            170,
            180,
            190,
            200,
            210,
            220,
            230,
            240,
            250,
            256
          ],
          "algorithm": "ecdsa-secp256k1"
        }
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "123 is not of type \"string\"",
      "python_error": "Additional properties are not allowed ('extraProperty', 'options2' were unexpected)\n\nFailed validating 'additionalProperties' in schema:\n    {'$schema': 'http://json-schema.org/draft-04/schema#',\n     'title': 'generateAddressParameters',\n     'type': 'object',\n     'properties': {'options': {'type': 'object',\n                                'description': 'Options to control how the '\n                                               'address and secret are '\n                                               'generated.',\n                                'properties': {'entropy': {'type': 'array',\n                                                           'items': {'type': 'integer',\n                                                                     'minimum': 0,\n                                                                     'maximum': 255},\n                                                           'description': 'The '\n                                                                          'entropy '\n  .. (4010 more)",
      "data": {
        "options": {
          "entropy": [
            10,
            20,
            30,
            40,
            50,
            60,
            70,
            80,
            90,
            100,
            110,
            120,
            130,
            140,
            150,
            160,
            170,
            180,
            190,
            200,
            210,
            220,
            230,
            240,
            250
          ],
          "algorithm": 123
        },
        "extraProperty": "extraValue",
        "options2": {
          "entropy2": [
            10,
            20,
            30,
            40,
            50,
            60,
            70,
            80,
            90,
            100,
            110,
            120,
            130,
            140,
            150,
            160,
            170,
            180,
            190,
            200,
            210,
            220,
            230,
            240,
            250
          ],
          "algorithm2": "invalid-algorithm"
        }
      }
    }
  ]
}