{
  "description": "sample Kubernetes/kb_622_Normalized.json",
  "meta": {
    "full_size": 2270,
    "stripped_size": 979,
    "features": [
      "$ref",
      "items"
    ],
    "raw_features": [
      "definitions",
      "properties",
      "required",
      "type",
      "type:[]",
      "type:array",
      "type:null",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "definitions": {
      "https:__kubernetesjsonschema_dev_master__defs_json_defs_io_k8s_api_core_v1_NodeSelectorRequirement": {
        "description": "A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
        "properties": {
          "key": {
            "description": "The label key that the selector applies to.",
            "type": "string"
          },
          "operator": {
            "description": "Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
            "type": "string"
          },
          "values": {
            "description": "An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "required": [
          "key",
          "operator"
        ],
        "type": "object"
      },
      "https:__kubernetesjsonschema_dev_master__defs_json_defs_io_k8s_api_core_v1_NodeSelectorTerm": {
        "description": "A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.",
        "properties": {
          "matchExpressions": {
            "description": "A list of node selector requirements by node's labels.",
            "items": {
              "$ref": "#/definitions/https:__kubernetesjsonschema_dev_master__defs_json_defs_io_k8s_api_core_v1_NodeSelectorRequirement"
            },
            "type": "array"
          },
          "matchFields": {
            "description": "A list of node selector requirements by node's fields.",
            "items": {
              "$ref": "#/definitions/https:__kubernetesjsonschema_dev_master__defs_json_defs_io_k8s_api_core_v1_NodeSelectorRequirement"
            },
            "type": "array"
          }
        },
        "type": "object"
      }
    },
    "description": "A node selector represents the union of the results of one or more label queries over a set of nodes; that is, it represents the OR of the selectors represented by the node selector terms.",
    "properties": {
      "nodeSelectorTerms": {
        "description": "Required. A list of node selector terms. The terms are ORed.",
        "items": {
          "$ref": "#/definitions/https:__kubernetesjsonschema_dev_master__defs_json_defs_io_k8s_api_core_v1_NodeSelectorTerm"
        },
        "type": [
          "array",
          "null"
        ]
      }
    },
    "required": [
      "nodeSelectorTerms"
    ],
    "type": "object"
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "nodeSelectorTerms": [
          {
            "matchExpressions": [
              {
                "key": "kubernetes.io/arch",
                "operator": "In",
                "values": [
                  "amd64",
                  "arm64"
                ]
              },
              {
                "key": "kubernetes.io/os",
                "operator": "Exists"
              }
            ]
          },
          {
            "matchFields": [
              {
                "key": "metadata.name",
                "operator": "In",
                "values": [
                  "node1",
                  "node2"
                ]
              }
            ]
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on type keyword with an array of types",
      "valid": false,
      "rust_error": "\"string\" is not of types \"array\", \"null\"",
      "python_error": "'string' is not of type 'array', 'null'\n\nFailed validating 'type' in schema['properties']['nodeSelectorTerms']:\n    {'description': 'Required. A list of node selector terms. The terms '\n                    'are ORed.',\n     'items': {'$ref': '#/definitions/https:__kubernetesjsonschema_dev_master__defs_json_defs_io_k8s_api_core_v1_NodeSelectorTerm'},\n     'type': ['array', 'null']}\n\nOn instance['nodeSelectorTerms']:\n    'string'",
      "data": {
        "nodeSelectorTerms": "string"
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "nodeSelectorTerms": [
          {
            "matchExpressions": [
              {
                "key": "kubernetes.io/hostname",
                "operator": "In",
                "values": [
                  "node1",
                  "node2"
                ]
              },
              {
                "key": "node-role.kubernetes.io/master",
                "operator": "Exists",
                "values": []
              }
            ]
          },
          {
            "matchFields": [
              {
                "key": "metadata.name",
                "operator": "In",
                "values": [
                  "node3",
                  "node4"
                ]
              }
            ]
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on type keyword with an array of types",
      "valid": false,
      "rust_error": "4 is not of type \"string\"",
      "python_error": "4 is not of type 'string'\n\nFailed validating 'type' in schema['properties']['nodeSelectorTerms']['items']['properties']['matchFields']['items']['properties']['values']['items']:\n    {'type': 'string'}\n\nOn instance['nodeSelectorTerms'][1]['matchFields'][0]['values'][1]:\n    4",
      "data": {
        "nodeSelectorTerms": [
          {
            "matchExpressions": [
              {
                "key": "kubernetes.io/hostname",
                "operator": "Gt",
                "values": [
                  "node1",
                  "node2"
                ]
              },
              {
                "key": "node-role.kubernetes.io/master",
                "operator": "Exists",
                "values": []
              }
            ]
          },
          {
            "matchFields": [
              {
                "key": "metadata.name",
                "operator": "In",
                "values": [
                  "node3",
                  4
                ]
              }
            ]
          }
        ]
      }
    }
  ]
}