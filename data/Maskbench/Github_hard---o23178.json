{
  "description": "sample Github_hard/o23178.json",
  "meta": {
    "full_size": 4010,
    "stripped_size": 2717,
    "features": [
      "$ref",
      "@minmaxLength",
      "additionalProperties",
      "additionalProperties:object",
      "format",
      "format:date",
      "format:email",
      "items",
      "pattern",
      "patternProperties"
    ],
    "raw_features": [
      "$schema",
      "_boolSchema",
      "definitions",
      "minLength",
      "oneOf:trivial",
      "properties",
      "required",
      "type",
      "type:array",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "title": "A JSON Schema for apis.json, version 0.14",
    "$schema": "http://json-schema.org/draft-04/schema#",
    "type": "object",
    "additionalProperties": false,
    "patternProperties": {
      "^X-": {
        "type": "object"
      }
    },
    "definitions": {
      "maintainers": {
        "description": "The person or organization responsible for maintaining the API",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "name",
            "minLength": 5
          }
        },
        "additionalProperties": {
          "type": "string"
        }
      },
      "apis": {
        "description": "The description of the API",
        "oneOf": [
          {
            "required": [
              "name",
              "description",
              "image",
              "baseURL",
              "humanURL",
              "properties",
              "contact"
            ],
            "properties": {
              "name": {
                "type": "string",
                "description": "name",
                "minLength": 5
              },
              "description": {
                "type": "string",
                "description": "description of the API",
                "minLength": 5
              },
              "image": {
                "type": "string",
                "description": "URL of an image representing the API"
              },
              "baseURL": {
                "type": "string",
                "pattern": "^(http)|(https)://(.*)$",
                "description": "baseURL"
              },
              "humanURL": {
                "type": "string",
                "pattern": "^(http)|(https)://(.*)$",
                "description": "humanURL"
              },
              "tags": {
                "type": "array",
                "items": {
                  "type": "string",
                  "minLength": 1
                },
                "description": "tags to describe the API"
              },
              "properties": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/urls"
                },
                "description": "URLs"
              },
              "contact": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/contact"
                },
                "description": "Contact to reach if questions about API"
              },
              "meta": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/metaInformation"
                }
              }
            }
          }
        ]
      },
      "metaInformation": {
        "description": "Metadata about the API",
        "required": [
          "key",
          "value"
        ],
        "properties": {
          "key": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "contact": {
        "description": "Information on contacting the API support",
        "required": [
          "FN"
        ],
        "additionalProperties": true,
        "patternProperties": {
          "^X-": {
            "type": "string"
          }
        },
        "properties": {
          "FN": {
            "type": "string",
            "minLength": 1
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "organizationName": {
            "type": "string",
            "minLength": 1
          },
          "adr": {
            "type": "string"
          },
          "tel": {
            "type": "string",
            "minLength": 1
          },
          "X-twitter": {
            "type": "string"
          },
          "X-github": {
            "type": "string"
          },
          "photo": {
            "type": "string",
            "pattern": "^(http)|(https)://(.*)$"
          },
          "vCard": {
            "type": "string",
            "pattern": "^(http)|(https)://(.*)$"
          },
          "url": {
            "type": "string",
            "pattern": "^(http)|(https)://(.*)$"
          }
        }
      },
      "urls": {
        "description": "A representation of a URL",
        "required": [
          "type",
          "url"
        ],
        "properties": {
          "type": {
            "type": "string",
            "pattern": "^(Swagger)$|^(RAML)$|^(Blueprint)$|^(WADL)$|^(WSDL)$|^(TermsOfService)$|^(InterfaceLicense)$|^(StatusPage)$|^(Pricing)$|^(Forums)$|^(AlertsTwitterHandle)$|^(X-[A-Za-z0-9\\-]*)$"
          },
          "url": {
            "type": "string",
            "pattern": "^(http)|(https)://(.*)$"
          }
        }
      },
      "tags": {
        "description": "A consistent set of tag to apply to a description"
      },
      "include": {
        "description": "Include other APIs.json file",
        "required": [
          "name",
          "url"
        ],
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1
          },
          "url": {
            "type": "string",
            "pattern": "^(http)|(https)://(.*)$"
          }
        }
      }
    },
    "required": [
      "name",
      "description",
      "url",
      "apis",
      "maintainers",
      "tags"
    ],
    "properties": {
      "name": {
        "type": "string",
        "description": "The name of the service described",
        "minLength": 5
      },
      "description": {
        "type": "string",
        "description": "Description of the service",
        "minLength": 5
      },
      "url": {
        "type": "string",
        "description": "URL where the apis.json file will live",
        "pattern": "^(http)|(https)://(.*)$"
      },
      "image": {
        "type": "string",
        "description": "Image to represent the API"
      },
      "created": {
        "type": "string",
        "format": "date",
        "description": "Date when the file was created"
      },
      "modified": {
        "type": "string",
        "format": "date",
        "description": "Date when the file was modified"
      },
      "specificationVersion": {
        "type": "string",
        "description": "APIs.json spec version, latest is 0.14"
      },
      "apis": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/apis"
        },
        "description": "All the APIs of this service"
      },
      "maintainers": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/contact"
        },
        "description": "Maintainers of the apis.json file"
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/tags"
        },
        "description": "Tags to describe the service"
      },
      "include": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/include"
        },
        "description": "Links to other apis.json definitions included in this service"
      }
    }
  },
  "tests": [
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "name": "Example API Service",
        "description": "This is an example API service",
        "url": "https://example.com/apis.json",
        "image": "https://example.com/image.png",
        "created": "2022-01-01",
        "modified": "2022-01-01",
        "specificationVersion": "0.14",
        "apis": [
          {
            "name": "Example API",
            "description": "This is an example API",
            "image": "https://example.com/api-image.png",
            "baseURL": "https://example.com/api",
            "humanURL": "https://example.com",
            "tags": [
              "example",
              "api"
            ],
            "properties": [
              {
                "type": "Swagger",
                "url": "https://example.com/swagger.json"
              },
              {
                "type": "TermsOfService",
                "url": "https://example.com/terms-of-service"
              }
            ],
            "contact": [
              {
                "FN": "John Doe",
                "email": "john@example.com",
                "organizationName": "Example Inc.",
                "adr": "123 Main St",
                "tel": "123-456-7890",
                "X-twitter": "https://twitter.com/johndoe",
                "X-github": "https://github.com/johndoe",
                "photo": "https://example.com/john-doe.jpg",
                "vCard": "https://example.com/john-doe.vcf",
                "url": "https://example.com/johndoe"
              }
            ],
            "meta": [
              {
                "key": "version",
                "value": "1.0"
              },
              {
                "key": "status",
                "value": "production"
              }
            ]
          }
        ],
        "maintainers": [
          {
            "FN": "Jane Doe",
            "email": "jane@example.com",
            "organizationName": "Example Inc.",
            "adr": "123 Main St",
            "tel": "123-456-7890",
            "X-twitter": "https://twitter.com/janedoe",
            "X-github": "https://github.com/janedoe",
            "photo": "https://example.com/jane-doe.jpg",
            "vCard": "https://example.com/jane-doe.vcf",
            "url": "https://example.com/janedoe"
          }
        ],
        "tags": [
          "example",
          "api",
          "service"
        ],
        "include": [
          {
            "name": "Other API Service",
            "url": "https://other.example.com/apis.json"
          }
        ]
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "name": "Example Service",
        "description": "This is an example service with multiple APIs.",
        "url": "https://example.com/apis.json",
        "image": "https://example.com/image.png",
        "created": "2022-01-01",
        "modified": "2022-01-01",
        "specificationVersion": "0.14",
        "apis": [
          {
            "name": "Example API",
            "description": "This is an example API.",
            "image": "https://example.com/api-image.png",
            "baseURL": "https://example.com/api",
            "humanURL": "https://example.com/docs",
            "tags": [
              "example",
              "api"
            ],
            "properties": [
              {
                "type": "Swagger",
                "url": "https://example.com/swagger.json"
              },
              {
                "type": "TermsOfService",
                "url": "https://example.com/tos"
              }
            ],
            "contact": [
              {
                "FN": "John Doe",
                "email": "john@example.com",
                "organizationName": "Example Inc.",
                "adr": "123 Main St",
                "tel": "123-456-7890",
                "X-twitter": "johndoe",
                "X-github": "johndoe",
                "photo": "https://example.com/john.jpg",
                "vCard": "https://example.com/john.vcf",
                "url": "https://example.com/john"
              }
            ],
            "meta": [
              {
                "key": "version",
                "value": "1.0"
              },
              {
                "key": "status",
                "value": "production"
              }
            ]
          }
        ],
        "maintainers": [
          {
            "FN": "Jane Doe",
            "email": "jane@example.com",
            "organizationName": "Example Inc.",
            "adr": "123 Main St",
            "tel": "123-456-7890",
            "X-twitter": "janedoe",
            "X-github": "janedoe",
            "photo": "https://example.com/jane.jpg",
            "vCard": "https://example.com/jane.vcf",
            "url": "https://example.com/jane"
          }
        ],
        "tags": [
          "example",
          "service"
        ],
        "include": [
          {
            "name": "Related API",
            "url": "https://related.example.com/apis.json"
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on pattern keyword",
      "valid": false,
      "rust_error": "{\"name\":\"Example API\",\"description\":\"This is an example API.\",\"image\":\"https://example.com/api-image.png\",\"baseURL\":\"ftp://example.com/api\",\"humanURL\":\"https://example.com/docs\",\"tags\":[\"example\",\"api\"],\"properties\":[{\"type\":\"Swagger\",\"url\":\"https://example.com/swagger.json\"},{\"type\":\"TermsOfService\",\"url\":\"https://example.com/tos\"}],\"contact\":[{\"FN\":\"John Doe\",\"email\":\"john@example.com\",\"organizationName\":\"Example Inc.\",\"adr\":\"123 Main St\",\"tel\":\"123-456-7890\",\"X-twitter\":\"johndoe\",\"X-github\":\"johndoe\",\"photo\":\"https://example.com/john.jpg\",\"vCard\":\"https://example.com/john.vcf\",\"url\":\"https://example.com/john\"}],\"meta\":[{\"key\":\"version\",\"value\":\"1.0\"},{\"key\":\"status\",\"value\":\"production\"}]} is not valid under any of the schemas listed in the 'oneOf' keyword",
      "python_error": "'ftp://example.com/api' does not match '^(http)|(https)://(.*)$'\n\nFailed validating 'pattern' in schema[0]['properties']['baseURL']:\n    {'type': 'string',\n     'pattern': '^(http)|(https)://(.*)$',\n     'description': 'baseURL'}\n\nOn instance['baseURL']:\n    'ftp://example.com/api'",
      "data": {
        "name": "Example Service",
        "description": "This is an example service with multiple APIs.",
        "url": "https://example.com/apis.json",
        "image": "https://example.com/image.png",
        "created": "2022-01-01",
        "modified": "2022-01-01",
        "specificationVersion": "0.14",
        "apis": [
          {
            "name": "Example API",
            "description": "This is an example API.",
            "image": "https://example.com/api-image.png",
            "baseURL": "ftp://example.com/api",
            "humanURL": "https://example.com/docs",
            "tags": [
              "example",
              "api"
            ],
            "properties": [
              {
                "type": "Swagger",
                "url": "https://example.com/swagger.json"
              },
              {
                "type": "TermsOfService",
                "url": "https://example.com/tos"
              }
            ],
            "contact": [
              {
                "FN": "John Doe",
                "email": "john@example.com",
                "organizationName": "Example Inc.",
                "adr": "123 Main St",
                "tel": "123-456-7890",
                "X-twitter": "johndoe",
                "X-github": "johndoe",
                "photo": "https://example.com/john.jpg",
                "vCard": "https://example.com/john.vcf",
                "url": "https://example.com/john"
              }
            ],
            "meta": [
              {
                "key": "version",
                "value": "1.0"
              },
              {
                "key": "status",
                "value": "production"
              }
            ]
          }
        ],
        "maintainers": [
          {
            "FN": "Jane Doe",
            "email": "jane@example.com",
            "organizationName": "Example Inc.",
            "adr": "123 Main St",
            "tel": "123-456-7890",
            "X-twitter": "janedoe",
            "X-github": "janedoe",
            "photo": "https://example.com/jane.jpg",
            "vCard": "https://example.com/jane.vcf",
            "url": "https://example.com/jane"
          }
        ],
        "tags": [
          "example",
          "service"
        ],
        "include": [
          {
            "name": "Related API",
            "url": "https://related.example.com/apis.json"
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on patternProperties keyword",
      "valid": false,
      "rust_error": "{\"name\":\"Example API\",\"description\":\"This is an example API.\",\"image\":\"https://example.com/api-image.png\",\"baseURL\":\"https://example.com/api\",\"humanURL\":\"https://example.com/docs\",\"tags\":[\"example\",\"api\"],\"properties\":[{\"type\":\"Swagger\",\"url\":\"https://example.com/swagger.json\"},{\"type\":\"TermsOfService\",\"url\":\"https://example.com/tos\"}],\"contact\":[{\"FN\":\"John Doe\",\"email\":\"john@example.com\",\"organizationName\":\"Example Inc.\",\"adr\":\"123 Main St\",\"tel\":\"123-456-7890\",\"X-twitter\":\"johndoe\",\"X-github\":\"johndoe\",\"photo\":\"https://example.com/john.jpg\",\"vCard\":\"https://example.com/john.vcf\",\"url\":\"https://example.com/john\",\"X-Invalid-Property\":123}],\"meta\":[{\"key\":\"version\",\"value\":\"1.0\"},{\"key\":\"status\",\"value\":\"production\"}]} is not valid under any of the schemas listed in the 'oneOf' keyword",
      "python_error": "123 is not of type 'string'\n\nFailed validating 'type' in schema[0]['properties']['contact']['items']['patternProperties']['^X-']:\n    {'type': 'string'}\n\nOn instance['contact'][0]['X-Invalid-Property']:\n    123",
      "data": {
        "name": "Example Service",
        "description": "This is an example service with multiple APIs.",
        "url": "https://example.com/apis.json",
        "image": "https://example.com/image.png",
        "created": "2022-01-01",
        "modified": "2022-01-01",
        "specificationVersion": "0.14",
        "apis": [
          {
            "name": "Example API",
            "description": "This is an example API.",
            "image": "https://example.com/api-image.png",
            "baseURL": "https://example.com/api",
            "humanURL": "https://example.com/docs",
            "tags": [
              "example",
              "api"
            ],
            "properties": [
              {
                "type": "Swagger",
                "url": "https://example.com/swagger.json"
              },
              {
                "type": "TermsOfService",
                "url": "https://example.com/tos"
              }
            ],
            "contact": [
              {
                "FN": "John Doe",
                "email": "john@example.com",
                "organizationName": "Example Inc.",
                "adr": "123 Main St",
                "tel": "123-456-7890",
                "X-twitter": "johndoe",
                "X-github": "johndoe",
                "photo": "https://example.com/john.jpg",
                "vCard": "https://example.com/john.vcf",
                "url": "https://example.com/john",
                "X-Invalid-Property": 123
              }
            ],
            "meta": [
              {
                "key": "version",
                "value": "1.0"
              },
              {
                "key": "status",
                "value": "production"
              }
            ]
          }
        ],
        "maintainers": [
          {
            "FN": "Jane Doe",
            "email": "jane@example.com",
            "organizationName": "Example Inc.",
            "adr": "123 Main St",
            "tel": "123-456-7890",
            "X-twitter": "janedoe",
            "X-github": "janedoe",
            "photo": "https://example.com/jane.jpg",
            "vCard": "https://example.com/jane.vcf",
            "url": "https://example.com/jane"
          }
        ],
        "tags": [
          "example",
          "service"
        ],
        "include": [
          {
            "name": "Related API",
            "url": "https://related.example.com/apis.json"
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on format keyword",
      "valid": false,
      "rust_error": "\"2022-01-32\" is not a \"date\"",
      "python_error": "'2022-01-32' is not a 'date'\n\nFailed validating 'format' in schema['properties']['created']:\n    {'type': 'string',\n     'format': 'date',\n     'description': 'Date when the file was created'}\n\nOn instance['created']:\n    '2022-01-32'",
      "data": {
        "name": "Example Service",
        "description": "This is an example service with multiple APIs.",
        "url": "https://example.com/apis.json",
        "image": "https://example.com/image.png",
        "created": "2022-01-32",
        "modified": "2022-01-01",
        "specificationVersion": "0.14",
        "apis": [
          {
            "name": "Example API",
            "description": "This is an example API.",
            "image": "https://example.com/api-image.png",
            "baseURL": "https://example.com/api",
            "humanURL": "https://example.com/docs",
            "tags": [
              "example",
              "api"
            ],
            "properties": [
              {
                "type": "Swagger",
                "url": "https://example.com/swagger.json"
              },
              {
                "type": "TermsOfService",
                "url": "https://example.com/tos"
              }
            ],
            "contact": [
              {
                "FN": "John Doe",
                "email": "johndoe",
                "organizationName": "Example Inc.",
                "adr": "123 Main St",
                "tel": "123-456-7890",
                "X-twitter": "johndoe",
                "X-github": "johndoe",
                "photo": "https://example.com/john.jpg",
                "vCard": "https://example.com/john.vcf",
                "url": "https://example.com/john"
              }
            ],
            "meta": [
              {
                "key": "version",
                "value": "1.0"
              },
              {
                "key": "status",
                "value": "production"
              }
            ]
          }
        ],
        "maintainers": [
          {
            "FN": "Jane Doe",
            "email": "jane@example.com",
            "organizationName": "Example Inc.",
            "adr": "123 Main St",
            "tel": "123-456-7890",
            "X-twitter": "janedoe",
            "X-github": "janedoe",
            "photo": "https://example.com/jane.jpg",
            "vCard": "https://example.com/jane.vcf",
            "url": "https://example.com/jane"
          }
        ],
        "tags": [
          "example",
          "service"
        ],
        "include": [
          {
            "name": "Related API",
            "url": "https://related.example.com/apis.json"
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on minLength keyword",
      "valid": false,
      "rust_error": "\"\" is shorter than 5 characters",
      "python_error": "'' is too short\n\nFailed validating 'minLength' in schema['properties']['name']:\n    {'type': 'string',\n     'description': 'The name of the service described',\n     'minLength': 5}\n\nOn instance['name']:\n    ''",
      "data": {
        "name": "",
        "description": "This is an example service with multiple APIs.",
        "url": "https://example.com/apis.json",
        "image": "https://example.com/image.png",
        "created": "2022-01-01",
        "modified": "2022-01-01",
        "specificationVersion": "0.14",
        "apis": [
          {
            "name": "Example API",
            "description": "This is an example API.",
            "image": "https://example.com/api-image.png",
            "baseURL": "https://example.com/api",
            "humanURL": "https://example.com/docs",
            "tags": [
              ""
            ],
            "properties": [
              {
                "type": "Swagger",
                "url": "https://example.com/swagger.json"
              },
              {
                "type": "TermsOfService",
                "url": "https://example.com/tos"
              }
            ],
            "contact": [
              {
                "FN": "",
                "email": "john@example.com",
                "organizationName": "Example Inc.",
                "adr": "123 Main St",
                "tel": "123-456-7890",
                "X-twitter": "johndoe",
                "X-github": "johndoe",
                "photo": "https://example.com/john.jpg",
                "vCard": "https://example.com/john.vcf",
                "url": "https://example.com/john"
              }
            ],
            "meta": [
              {
                "key": "version",
                "value": "1.0"
              },
              {
                "key": "status",
                "value": "production"
              }
            ]
          }
        ],
        "maintainers": [
          {
            "FN": "Jane Doe",
            "email": "jane@example.com",
            "organizationName": "Example Inc.",
            "adr": "123 Main St",
            "tel": "123-456-7890",
            "X-twitter": "janedoe",
            "X-github": "janedoe",
            "photo": "https://example.com/jane.jpg",
            "vCard": "https://example.com/jane.vcf",
            "url": "https://example.com/jane"
          }
        ],
        "tags": [
          ""
        ],
        "include": [
          {
            "name": "",
            "url": "https://related.example.com/apis.json"
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"Ex\" is shorter than 5 characters",
      "python_error": "'Ex' is too short\n\nFailed validating 'minLength' in schema['properties']['name']:\n    {'type': 'string',\n     'description': 'The name of the service described',\n     'minLength': 5}\n\nOn instance['name']:\n    'Ex'",
      "data": {
        "name": "Ex",
        "description": "This is an example service with multiple APIs.",
        "url": "https://example.com/apis.json",
        "image": "https://example.com/image.png",
        "created": "2022-01-01",
        "modified": "2022-01-01",
        "specificationVersion": "0.14",
        "apis": [
          {
            "name": "Example API",
            "description": "This is an example API.",
            "image": "https://example.com/api-image.png",
            "baseURL": "https://example.com/api",
            "humanURL": "https://example.com/docs",
            "tags": [
              "example",
              "api"
            ],
            "properties": [
              {
                "type": "Swagger",
                "url": "https://example.com/swagger.json"
              },
              {
                "type": "TermsOfService",
                "url": "https://example.com/tos"
              }
            ],
            "contact": [
              {
                "FN": "John Doe",
                "email": "john@example.com",
                "organizationName": "Example Inc.",
                "adr": "123 Main St",
                "tel": "123-456-7890",
                "X-twitter": "johndoe",
                "X-github": "johndoe",
                "photo": "https://example.com/john.jpg",
                "vCard": "https://example.com/john.vcf",
                "url": "https://example.com/john"
              }
            ],
            "meta": [
              {
                "key": "version",
                "value": "1.0"
              },
              {
                "key": "status",
                "value": "production"
              }
            ]
          }
        ],
        "maintainers": [
          {
            "FN": "Jane Doe",
            "email": "jane@example.com",
            "organizationName": "Example Inc.",
            "adr": "123 Main St",
            "tel": "123-456-7890",
            "X-twitter": "janedoe",
            "X-github": "janedoe",
            "photo": "https://example.com/jane.jpg",
            "vCard": "https://example.com/jane.vcf",
            "url": "https://example.com/jane"
          }
        ],
        "tags": [
          "",
          "service"
        ],
        "include": [
          {
            "name": "Related API",
            "url": "https://related.example.com/apis.json"
          }
        ]
      }
    }
  ]
}