{
  "description": "sample Github_easy/o71268.json",
  "meta": {
    "full_size": 1279,
    "stripped_size": 425,
    "features": [
      "@minmaxItems",
      "items"
    ],
    "raw_features": [
      "$schema",
      "id",
      "minItems",
      "properties",
      "required",
      "type",
      "type:[]",
      "type:array",
      "type:integer",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "id": "https://raw.githubusercontent.com/rolfvreijdenberger/jsend-json-schema/master/rest-fail-response-json-schema.json",
    "$schema": "http://json-schema.org/draft-04/schema#",
    "title": "A simple REST response schema for a payload for a non-succesful response.This schema allows you to add structured information that can be consumed by an API consumer in a standard way. HTTP status codes should indicate what went wrong.",
    "description": "",
    "type": "object",
    "required": [
      "messages"
    ],
    "properties": {
      "messages": {
        "description": "an array of message objects related to the failure",
        "type": "array",
        "minItems": 1,
        "items": {
          "description": "an object that contains fields related to a failure",
          "type": "object",
          "required": [
            "message"
          ],
          "properties": {
            "message": {
              "description": "A meaningful, end-user-readable (or at the least log-worthy) message, explaining what happened.",
              "type": "string"
            },
            "field": {
              "description": "an optional string representation that maps to input. POST keys, a query parameter, a header key etc. For complex datastructures you could use different solutions like a dot seperated tree representation, an xpath expression etc.",
              "type": "string"
            },
            "code": {
              "description": "A numeric code providing info about a failure or error in a result, if applicable",
              "type": [
                "string",
                "integer"
              ]
            }
          }
        }
      }
    }
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "messages": [
          {
            "message": "Invalid username or password",
            "field": "username",
            "code": 401
          },
          {
            "message": "Email address is already in use",
            "field": "email",
            "code": "DUPLICATE_EMAIL"
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on minItems keyword",
      "valid": false,
      "rust_error": "[] has less than 1 item",
      "python_error": "[] should be non-empty\n\nFailed validating 'minItems' in schema['properties']['messages']:\n    {'description': 'an array of message objects related to the failure',\n     'type': 'array',\n     'minItems': 1,\n     'items': {'description': 'an object that contains fields related to a '\n                              'failure',\n               'type': 'object',\n               'required': ['message'],\n               'properties': {'message': {'description': 'A meaningful, '\n                                                         'end-user-readable '\n                                                         '(or at the least '\n                                                         'log-worthy) '\n                                                         'message, '\n                                                         'explaining what '\n                                                         'happened.',\n                                          'type': 'string'},\n                              'field': {'descripti.. (1581 more)",
      "data": {
        "messages": []
      }
    },
    {
      "description": "llama-70b generated negative; focus on type keyword with an array of types",
      "valid": false,
      "rust_error": "true is not of types \"integer\", \"string\"",
      "python_error": "True is not of type 'string', 'integer'\n\nFailed validating 'type' in schema['properties']['messages']['items']['properties']['code']:\n    {'description': 'A numeric code providing info about a failure or '\n                    'error in a result, if applicable',\n     'type': ['string', 'integer']}\n\nOn instance['messages'][0]['code']:\n    True",
      "data": {
        "messages": [
          {
            "message": "Invalid username or password",
            "field": "username",
            "code": true
          },
          {
            "message": "Email address is already in use",
            "field": "email",
            "code": "DUPLICATE_EMAIL"
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on type keyword with an array of types",
      "valid": false,
      "rust_error": "null is not of types \"integer\", \"string\"",
      "python_error": "None is not of type 'string', 'integer'\n\nFailed validating 'type' in schema['properties']['messages']['items']['properties']['code']:\n    {'description': 'A numeric code providing info about a failure or '\n                    'error in a result, if applicable',\n     'type': ['string', 'integer']}\n\nOn instance['messages'][0]['code']:\n    None",
      "data": {
        "messages": [
          {
            "message": "Invalid username or password",
            "field": "username",
            "code": null
          },
          {
            "message": "Email address is already in use",
            "field": "email",
            "code": "DUPLICATE_EMAIL"
          }
        ]
      }
    }
  ]
}