{
  "description": "sample Github_hard/o41238.json",
  "meta": {
    "full_size": 1206,
    "stripped_size": 988,
    "features": [
      "enum"
    ],
    "raw_features": [
      "$schema",
      "properties",
      "required",
      "type",
      "type:boolean",
      "type:number",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "title": "Invocation manifest for CMRR: Extract CMRR Physio",
    "$schema": "http://json-schema.org/draft-04/schema#",
    "type": "object",
    "properties": {
      "config": {
        "type": "object",
        "properties": {
          "Generate_Bids": {
            "type": "boolean",
            "default": true
          },
          "Generate_json": {
            "type": "boolean",
            "default": false
          },
          "Generate_Raw": {
            "type": "boolean",
            "default": true
          },
          "Generate_QA": {
            "type": "boolean",
            "default": true
          },
          "Process_Data": {
            "type": "boolean",
            "default": true
          },
          "Missing_Data": {
            "type": "string",
            "enum": [
              "gap_fill",
              "uniform",
              "upsample",
              "none"
            ],
            "default": "gap_fill"
          },
          "Interpolation_Method": {
            "type": "string",
            "enum": [
              "fill",
              "linear",
              "nearest",
              "zero",
              "slinear",
              "quadratic",
              "cubic",
              "nan"
            ],
            "default": "nan"
          },
          "Fill_Value": {
            "type": "number",
            "default": 0
          },
          "gear-log-level": {
            "default": "INFO",
            "type": "string",
            "enum": [
              "ERROR",
              "WARNING",
              "INFO",
              "DEBUG"
            ]
          },
          "Dry-Run": {
            "type": "boolean",
            "default": false
          }
        },
        "required": [
          "Generate_Bids",
          "Generate_json",
          "Generate_Raw",
          "Generate_QA",
          "Process_Data",
          "Missing_Data",
          "Interpolation_Method",
          "Fill_Value",
          "gear-log-level",
          "Dry-Run"
        ]
      },
      "inputs": {
        "type": "object",
        "properties": {
          "DICOM_ARCHIVE": {
            "type": "object",
            "properties": {
              "type": {
                "enum": [
                  "dicom",
                  "archive"
                ]
              }
            }
          }
        },
        "required": [
          "DICOM_ARCHIVE"
        ]
      }
    },
    "required": [
      "config",
      "inputs"
    ]
  },
  "tests": [
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "config": {
          "Generate_Bids": true,
          "Generate_json": false,
          "Generate_Raw": true,
          "Generate_QA": true,
          "Process_Data": true,
          "Missing_Data": "gap_fill",
          "Interpolation_Method": "nan",
          "Fill_Value": 0,
          "gear-log-level": "INFO",
          "Dry-Run": false
        },
        "inputs": {
          "DICOM_ARCHIVE": {
            "type": "dicom"
          }
        },
        "title": "Invocation manifest for CMRR: Extract CMRR Physio"
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "null is not of type \"number\"",
      "python_error": "None is not of type 'number'\n\nFailed validating 'type' in schema['properties']['config']['properties']['Fill_Value']:\n    {'type': 'number', 'default': 0}\n\nOn instance['config']['Fill_Value']:\n    None",
      "data": {
        "title": "Invocation manifest for CMRR: Extract CMRR Physio",
        "config": {
          "Generate_Bids": true,
          "Generate_json": false,
          "Generate_Raw": true,
          "Generate_QA": true,
          "Process_Data": true,
          "Missing_Data": "gap_fill",
          "Interpolation_Method": "nan",
          "Fill_Value": null,
          "gear-log-level": "INFO",
          "Dry-Run": false
        },
        "inputs": {
          "DICOM_ARCHIVE": {
            "type": "archive"
          }
        }
      }
    }
  ]
}