{
  "description": "sample Github_medium/o23177.json",
  "meta": {
    "full_size": 1540,
    "stripped_size": 1540,
    "features": [
      "$ref",
      "additionalProperties",
      "additionalProperties:object",
      "enum",
      "items",
      "oneOf",
      "pattern"
    ],
    "raw_features": [
      "$schema",
      "definitions",
      "properties",
      "required",
      "type",
      "type:array",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "type": "object",
    "required": [
      "name",
      "description",
      "url",
      "apis",
      "maintainer"
    ],
    "properties": {
      "name": {
        "type": "string"
      },
      "description": {
        "type": "string"
      },
      "url": {
        "type": "string"
      },
      "image": {
        "type": "string"
      },
      "apis": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/apisDefinition"
        }
      },
      "maintainer": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/maintainerDefinition"
        }
      }
    },
    "definitions": {
      "maintainerDefinition": {
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string"
          }
        },
        "additionalProperties": {
          "type": "string"
        }
      },
      "apisDefinition": {
        "oneOf": [
          {
            "required": [
              "$ref"
            ],
            "properties": {
              "$ref": {
                "type": "string"
              }
            }
          },
          {
            "required": [
              "name"
            ],
            "properties": {
              "name": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "image": {
                "type": "string"
              },
              "humanURL": {
                "type": "string"
              },
              "tags": {
                "type": "string"
              },
              "urls": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/urlsDefinition"
                }
              },
              "contact": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/contactDefinition"
                }
              },
              "meta": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/metaDefinition"
                }
              }
            }
          }
        ]
      },
      "metaDefinition": {
        "required": [
          "key",
          "value"
        ],
        "properties": {
          "key": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "contactDefinition": {
        "required": [
          "type",
          "url"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "twitter"
            ]
          },
          "url": {
            "type": "string",
            "pattern": "^(http)|(https)://(.*)$"
          }
        }
      },
      "urlsDefinition": {
        "required": [
          "type",
          "url"
        ],
        "properties": {
          "type": {
            "type": "string",
            "pattern": "^(portal)|(console)|(signup)|(libraries)|(swagger)|(X-[a-z0-9\\-]*)$"
          },
          "url": {
            "type": "string",
            "pattern": "^(http)|(https)://(.*)$"
          }
        }
      }
    }
  },
  "tests": [
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "name": "Example API",
        "description": "This is an example API",
        "url": "https://example.com",
        "image": "https://example.com/image.png",
        "apis": [
          {
            "$ref": "https://example.com/api"
          },
          {
            "name": "Example API 2",
            "description": "This is another example API",
            "image": "https://example.com/image2.png",
            "humanURL": "https://example.com/human-url",
            "tags": "example, api",
            "urls": [
              {
                "type": "portal",
                "url": "https://example.com/portal"
              },
              {
                "type": "console",
                "url": "https://example.com/console"
              }
            ],
            "contact": [
              {
                "type": "twitter",
                "url": "https://twitter.com/example"
              }
            ],
            "meta": [
              {
                "key": "key1",
                "value": "value1"
              },
              {
                "key": "key2",
                "value": "value2"
              }
            ]
          }
        ],
        "maintainer": [
          {
            "name": "John Doe",
            "email": "john.doe@example.com"
          }
        ]
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "name": "Example API",
        "description": "This is an example API",
        "url": "https://example.com",
        "image": "https://example.com/image.png",
        "apis": [
          {
            "$ref": "https://example.com/api"
          },
          {
            "name": "Example API 2",
            "description": "This is another example API",
            "image": "https://example.com/image2.png",
            "humanURL": "https://example.com/human-url",
            "tags": "example, api",
            "urls": [
              {
                "type": "portal",
                "url": "https://example.com/portal"
              },
              {
                "type": "console",
                "url": "https://example.com/console"
              },
              {
                "type": "signup",
                "url": "https://example.com/signup"
              },
              {
                "type": "libraries",
                "url": "https://example.com/libraries"
              },
              {
                "type": "swagger",
                "url": "https://example.com/swagger"
              },
              {
                "type": "X-example",
                "url": "https://example.com/x-example"
              }
            ],
            "contact": [
              {
                "type": "twitter",
                "url": "https://twitter.com/example"
              }
            ],
            "meta": [
              {
                "key": "key1",
                "value": "value1"
              },
              {
                "key": "key2",
                "value": "value2"
              }
            ]
          }
        ],
        "maintainer": [
          {
            "name": "John Doe",
            "email": "john@example.com"
          },
          {
            "name": "Jane Doe",
            "email": "jane@example.com"
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on pattern keyword",
      "valid": false,
      "rust_error": "{\"name\":\"Example API 2\",\"description\":\"This is another example API\",\"image\":\"https://example.com/image2.png\",\"humanURL\":\"https://example.com/human-url\",\"tags\":\"example, api\",\"urls\":[{\"type\":\"example\",\"url\":\"https://example.com/example\"},{\"type\":\"portal\",\"url\":\"https://example.com/portal\"},{\"type\":\"console\",\"url\":\"https://example.com/console\"},{\"type\":\"signup\",\"url\":\"https://example.com/signup\"},{\"type\":\"libraries\",\"url\":\"https://example.com/libraries\"},{\"type\":\"swagger\",\"url\":\"https://example.com/swagger\"},{\"type\":\"X-example\",\"url\":\"https://example.com/x-example\"}],\"contact\":[{\"type\":\"twitter\",\"url\":\"ftp://twitter.com/example\"}],\"meta\":[{\"key\":\"key1\",\"value\":\"value1\"},{\"key\":\"key2\",\"value\":\"value2\"}]} is not valid under any of the schemas listed in the 'oneOf' keyword",
      "python_error": "'ftp://twitter.com/example' does not match '^(http)|(https)://(.*)$'\n\nFailed validating 'pattern' in schema[1]['properties']['contact']['items']['properties']['url']:\n    {'type': 'string', 'pattern': '^(http)|(https)://(.*)$'}\n\nOn instance['contact'][0]['url']:\n    'ftp://twitter.com/example'",
      "data": {
        "name": "Example API",
        "description": "This is an example API",
        "url": "https://example.com",
        "image": "https://example.com/image.png",
        "apis": [
          {
            "name": "Example API 2",
            "description": "This is another example API",
            "image": "https://example.com/image2.png",
            "humanURL": "https://example.com/human-url",
            "tags": "example, api",
            "urls": [
              {
                "type": "example",
                "url": "https://example.com/example"
              },
              {
                "type": "portal",
                "url": "https://example.com/portal"
              },
              {
                "type": "console",
                "url": "https://example.com/console"
              },
              {
                "type": "signup",
                "url": "https://example.com/signup"
              },
              {
                "type": "libraries",
                "url": "https://example.com/libraries"
              },
              {
                "type": "swagger",
                "url": "https://example.com/swagger"
              },
              {
                "type": "X-example",
                "url": "https://example.com/x-example"
              }
            ],
            "contact": [
              {
                "type": "twitter",
                "url": "ftp://twitter.com/example"
              }
            ],
            "meta": [
              {
                "key": "key1",
                "value": "value1"
              },
              {
                "key": "key2",
                "value": "value2"
              }
            ]
          }
        ],
        "maintainer": [
          {
            "name": "John Doe",
            "email": "john@example.com"
          },
          {
            "name": "Jane Doe",
            "email": "jane@example.com"
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on oneOf keyword",
      "valid": false,
      "rust_error": "{\"$ref\":\"https://example.com/api\",\"name\":\"Example API 2\"} is valid under more than one of the schemas listed in the 'oneOf' keyword",
      "python_error": "{'$ref': 'https://example.com/api', 'name': 'Example API 2'} is valid under each of {'required': ['name'], 'properties': {'name': {'type': 'string'}, 'description': {'type': 'string'}, 'image': {'type': 'string'}, 'humanURL': {'type': 'string'}, 'tags': {'type': 'string'}, 'urls': {'type': 'array', 'items': {'$ref': '#/definitions/urlsDefinition'}}, 'contact': {'type': 'array', 'items': {'$ref': '#/definitions/contactDefinition'}}, 'meta': {'type': 'array', 'items': {'$ref': '#/definitions/metaDefinition'}}}}, {'required': ['$ref'], 'properties': {'$ref': {'type': 'string'}}}\n\nFailed validating 'oneOf' in schema['properties']['apis']['items']:\n    {'oneOf': [{'required': ['$ref'],\n                'properties': {'$ref': {'type': 'string'}}},\n               {'required': ['name'],\n                'properties': {'name': {'type': 'string'},\n                               'description': {'type': 'string'},\n                               'image': {'type': 'string'},\n                               'humanURL': {'type'.. (620 more)",
      "data": {
        "name": "Example API",
        "description": "This is an example API",
        "url": "https://example.com",
        "image": "https://example.com/image.png",
        "apis": [
          {
            "$ref": "https://example.com/api",
            "name": "Example API 2"
          }
        ],
        "maintainer": [
          {
            "name": "John Doe",
            "email": "john@example.com"
          },
          {
            "name": "Jane Doe",
            "email": "jane@example.com"
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "{\"name\":\"Example API 2\",\"description\":\"This is another example API\",\"image\":\"https://example.com/image2.png\",\"humanURL\":\"https://example.com/human-url\",\"tags\":\"example, api\",\"urls\":[{\"type\":\"portal\",\"url\":\"https://example.com/portal\"},{\"type\":\"console\",\"url\":\"https://example.com/console\"},{\"type\":\"signup\",\"url\":\"https://example.com/signup\"},{\"type\":\"libraries\",\"url\":\"https://example.com/libraries\"},{\"type\":\"swagger\",\"url\":\"https://example.com/swagger\"},{\"type\":\"X\",\"Invalid type, should be in the format 'X-[a-z0-9\\\\-]*'\":\"url\",\"Typo in key name, should be 'url'\":\"https://example.com/x-example\"}],\"contact\":[{\"type\":\"facebook\",\"Invalid type, should be 'twitter'\":\"url\",\"Typo in key name, should be 'url'\":\"https://facebook.com/example\"}],\"meta\":[{\"key\":\"key1\",\"value\":\"value1\"},{\"key\":\"key2\"},\"Missing 'value' key\"]} is not valid under any of the schemas listed in the 'oneOf' keyword",
      "python_error": "'facebook' is not one of ['twitter']\n\nFailed validating 'enum' in schema[1]['properties']['contact']['items']['properties']['type']:\n    {'type': 'string', 'enum': ['twitter']}\n\nOn instance['contact'][0]['type']:\n    'facebook'",
      "data": {
        "name": "Example API",
        "description": "This is an example API",
        "url": "https://example.com",
        "image": "https://example.com/image.png",
        "apis": [
          {
            "$ref": "https://example.com/api"
          },
          {
            "name": "Example API 2",
            "description": "This is another example API",
            "image": "https://example.com/image2.png",
            "humanURL": "https://example.com/human-url",
            "tags": "example, api",
            "urls": [
              {
                "type": "portal",
                "url": "https://example.com/portal"
              },
              {
                "type": "console",
                "url": "https://example.com/console"
              },
              {
                "type": "signup",
                "url": "https://example.com/signup"
              },
              {
                "type": "libraries",
                "url": "https://example.com/libraries"
              },
              {
                "type": "swagger",
                "url": "https://example.com/swagger"
              },
              {
                "type": "X",
                "Invalid type, should be in the format 'X-[a-z0-9\\-]*'": "url",
                "Typo in key name, should be 'url'": "https://example.com/x-example"
              }
            ],
            "contact": [
              {
                "type": "facebook",
                "Invalid type, should be 'twitter'": "url",
                "Typo in key name, should be 'url'": "https://facebook.com/example"
              }
            ],
            "meta": [
              {
                "key": "key1",
                "value": "value1"
              },
              {
                "key": "key2"
              },
              "Missing 'value' key"
            ]
          }
        ],
        "maintainer": [
          {
            "name": "John Doe"
          },
          "Missing 'email' key, though schema does not enforce its presence due to additionalProperties, it is still a corner case",
          {
            "name": "Jane Doe",
            "email": "jane@example.com"
          }
        ]
      }
    }
  ]
}