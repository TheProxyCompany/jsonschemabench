{
  "description": "sample Github_medium/o32437.json",
  "meta": {
    "full_size": 1472,
    "stripped_size": 789,
    "features": [
      "additionalProperties",
      "dependencies",
      "enum",
      "items"
    ],
    "raw_features": [
      "$schema",
      "_boolSchema",
      "properties",
      "required",
      "type",
      "type:array",
      "type:boolean",
      "type:integer",
      "type:object"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "title": "Plurality Election",
    "description": "A single plurality race",
    "type": "object",
    "properties": {
      "isTest": {
        "description": "Value that is always true if it exists, could later be used to specify some useful info about the test",
        "type": "boolean",
        "enum": [
          true
        ]
      },
      "counts": {
        "description": "In a test, this array specifies how many of each of the ballots in votes will appear. Can be used for a compressed form of tests",
        "type": "array",
        "items": {
          "type": "integer"
        }
      },
      "votes": {
        "description": "all of the votes in the election",
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "description": "A unique identifier for each ballot",
              "type": "integer"
            },
            "selection": {
              "description": "The candidate selected on this ballot",
              "type": "integer"
            }
          },
          "required": [
            "id",
            "selection"
          ],
          "additionalProperties": false
        }
      },
      "tiebreak": {
        "description": "the candidate that should be chosen in the event of a tie",
        "type": "integer"
      },
      "results": {
        "description": "a record of what happened as the election was tabulated",
        "type": "object",
        "properties": {
          "winner": {
            "description": "which candidate won the election",
            "type": "integer"
          },
          "tabulation": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "candidate": {
                  "type": "integer"
                },
                "votes": {
                  "type": "integer"
                }
              },
              "required": [
                "candidate",
                "votes"
              ],
              "additionalProperties": false
            }
          }
        },
        "required": [
          "winner"
        ],
        "additionalProperties": false
      }
    },
    "additionalProperties": false,
    "dependencies": {
      "isTest": [
        "results",
        "tiebreak",
        "counts"
      ]
    }
  },
  "tests": [
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "isTest": true,
        "counts": [
          2,
          1,
          3
        ],
        "votes": [
          {
            "id": 1,
            "selection": 1
          },
          {
            "id": 2,
            "selection": 1
          },
          {
            "id": 3,
            "selection": 2
          },
          {
            "id": 4,
            "selection": 3
          },
          {
            "id": 5,
            "selection": 3
          },
          {
            "id": 6,
            "selection": 3
          }
        ],
        "tiebreak": 1,
        "results": {
          "winner": 3,
          "tabulation": [
            {
              "candidate": 1,
              "votes": 2
            },
            {
              "candidate": 2,
              "votes": 1
            },
            {
              "candidate": 3,
              "votes": 3
            }
          ]
        }
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"three\" is not of type \"integer\"",
      "python_error": "'one' is not of type 'integer'\n\nFailed validating 'type' in schema['properties']['tiebreak']:\n    {'description': 'the candidate that should be chosen in the event of a '\n                    'tie',\n     'type': 'integer'}\n\nOn instance['tiebreak']:\n    'one'",
      "data": {
        "isTest": true,
        "counts": [
          2,
          1,
          "three",
          3
        ],
        "votes": [
          {
            "id": 1,
            "selection": 1
          },
          {
            "id": 2,
            "selection": 1
          },
          {
            "id": 3,
            "selection": 2
          },
          {
            "id": 4,
            "selection": 3
          },
          {
            "id": 5,
            "selection": 3
          },
          {
            "id": 6,
            "selection": 3
          }
        ],
        "tiebreak": "one",
        "results": {
          "winner": 3,
          "tabulation": [
            {
              "candidate": 1,
              "votes": 2
            },
            {
              "candidate": 2,
              "votes": 1
            },
            {
              "candidate": 3,
              "votes": 3.5
            }
          ]
        }
      }
    }
  ]
}