{
  "description": "sample MCPspec/InitializeRequest.json",
  "meta": {
    "full_size": 1782,
    "stripped_size": 943,
    "features": [
      "$ref",
      "@siblingKeys",
      "additionalProperties",
      "additionalProperties:object",
      "const"
    ],
    "raw_features": [
      "$schema",
      "_boolSchema",
      "definitions",
      "properties",
      "required",
      "type",
      "type:boolean",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$ref": "#/definitions/InitializeRequest",
    "definitions": {
      "InitializeRequest": {
        "description": "This request is sent from the client to the server when it first connects, asking it to begin initialization.",
        "properties": {
          "method": {
            "const": "initialize",
            "type": "string"
          },
          "params": {
            "properties": {
              "capabilities": {
                "$ref": "#/definitions/ClientCapabilities"
              },
              "clientInfo": {
                "$ref": "#/definitions/Implementation"
              },
              "protocolVersion": {
                "description": "The latest version of the Model Context Protocol that the client supports. The client MAY decide to support older versions as well.",
                "type": "string"
              }
            },
            "required": [
              "capabilities",
              "clientInfo",
              "protocolVersion"
            ],
            "type": "object"
          }
        },
        "required": [
          "method",
          "params"
        ],
        "type": "object"
      },
      "ClientCapabilities": {
        "description": "Capabilities a client may support. Known capabilities are defined here, in this schema, but this is not a closed set: any client can define its own, additional capabilities.",
        "properties": {
          "experimental": {
            "additionalProperties": {
              "additionalProperties": true,
              "properties": {},
              "type": "object"
            },
            "description": "Experimental, non-standard capabilities that the client supports.",
            "type": "object"
          },
          "roots": {
            "description": "Present if the client supports listing roots.",
            "properties": {
              "listChanged": {
                "description": "Whether the client supports notifications for changes to the roots list.",
                "type": "boolean"
              }
            },
            "type": "object"
          },
          "sampling": {
            "additionalProperties": true,
            "description": "Present if the client supports sampling from an LLM.",
            "properties": {},
            "type": "object"
          }
        },
        "type": "object"
      },
      "Implementation": {
        "description": "Describes the name and version of an MCP implementation.",
        "properties": {
          "name": {
            "type": "string"
          },
          "version": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "version"
        ],
        "type": "object"
      }
    }
  },
  "tests": [
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "method": "initialize",
        "params": {
          "capabilities": {
            "experimental": {
              "someExperimentalCapability": {
                "subProperty": "someValue"
              }
            },
            "roots": {
              "listChanged": true
            },
            "sampling": {
              "someCustomProperty": "someValue"
            }
          },
          "clientInfo": {
            "name": "MyClient",
            "version": "1.0.0"
          },
          "protocolVersion": "1.0.0"
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on additionalProperties keyword with an object schema",
      "valid": false,
      "rust_error": "\"clientInfo\" is a required property",
      "python_error": "'clientInfo' is a required property\n\nFailed validating 'required' in schema['properties']['params']:\n    {'properties': {'capabilities': {'$ref': '#/definitions/ClientCapabilities'},\n                    'clientInfo': {'$ref': '#/definitions/Implementation'},\n                    'protocolVersion': {'description': 'The latest version '\n                                                       'of the Model '\n                                                       'Context Protocol '\n                                                       'that the client '\n                                                       'supports. The '\n                                                       'client MAY decide '\n                                                       'to support older '\n                                                       'versions as well.',\n                                        'type': 'string'}},\n     'required': ['capabilities', 'clientInfo', 'protocolVersion'],\n     'type': 'object'}\n\nOn instance['para.. (264 more)",
      "data": {
        "method": "initialize",
        "params": {
          "capabilities": {
            "roots": {
              "listChanged": true,
              "additionalProperty": "someValue"
            }
          },
          "sampling": {
            "someCustomProperty": "someValue"
          },
          "experimental": {
            "someExperimentalCapability": {
              "subProperty": "someValue"
            }
          }
        },
        "clientInfo": {
          "name": "MyClient",
          "version": "1.0.0"
        },
        "protocolVersion": "1.0.0"
      }
    }
  ]
}