{
  "description": "sample Github_easy/o9918.json",
  "meta": {
    "full_size": 6419,
    "stripped_size": 6399,
    "features": [
      "@minmaxInteger",
      "@minmaxLength",
      "additionalProperties",
      "enum",
      "items",
      "oneOf"
    ],
    "raw_features": [
      "$schema",
      "_boolSchema",
      "minLength",
      "minimum",
      "properties",
      "required",
      "type",
      "type:array",
      "type:integer",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "type": "object",
    "properties": {
      "accessToken": {
        "type": "string",
        "minLength": 1
      },
      "requestedScopes": {
        "type": "array",
        "_uniqueItems": true,
        "items": {
          "oneOf": [
            {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "all.Application",
                    "all.Application.read",
                    "all.Device",
                    "all.Device.read",
                    "application.*",
                    "applicationApiToken.*",
                    "applicationApiTokens.*",
                    "applicationCertificate.*",
                    "applicationCertificates.*",
                    "applicationCertificateAuthority.*",
                    "applicationCertificateAuthorities.*",
                    "applicationKey.*",
                    "applicationKeys.*",
                    "data.*",
                    "dataTable.*",
                    "dataTables.*",
                    "dataTableRow.*",
                    "dataTableRows.*",
                    "device.*",
                    "deviceRecipe.*",
                    "deviceRecipes.*",
                    "devices.*",
                    "edgeDeployments.*",
                    "event.*",
                    "events.*",
                    "experience.*",
                    "experienceDomain.*",
                    "experienceDomains.*",
                    "experienceEndpoint.*",
                    "experienceEndpoints.*",
                    "experienceGroup.*",
                    "experienceGroups.*",
                    "experienceSlug.*",
                    "experienceSlugs.*",
                    "experienceUser.*",
                    "experienceUsers.*",
                    "experienceVersion.*",
                    "experienceVersions.*",
                    "experienceView.*",
                    "experienceViews.*",
                    "integration.*",
                    "integrations.*",
                    "file.*",
                    "files.*",
                    "flow.*",
                    "flows.*",
                    "flowVersion.*",
                    "flowVersions.*",
                    "notebook.*",
                    "notebooks.*",
                    "webhook.*",
                    "webhooks.*",
                    "application.archiveData",
                    "application.backfillArchiveData",
                    "application.clone",
                    "application.export",
                    "application.import",
                    "application.fullEventsArchive",
                    "application.fullDataTablesArchive",
                    "application.debug",
                    "application.delete",
                    "application.get",
                    "application.mqttPublishMessage",
                    "application.mqttSubscriptionStream",
                    "application.patch",
                    "application.payloadCounts",
                    "application.search",
                    "applicationApiToken.delete",
                    "applicationApiToken.get",
                    "applicationApiToken.patch",
                    "applicationApiTokens.get",
                    "applicationApiTokens.post",
                    "applicationCertificate.delete",
                    "applicationCertificate.get",
                    "applicationCertificate.patch",
                    "applicationCertificates.get",
                    "applicationCertificates.post",
                    "applicationCertificateAuthority.delete",
                    "applicationCertificateAuthority.get",
                    "applicationCertificateAuthority.patch",
                    "applicationCertificateAuthorities.get",
                    "applicationCertificateAuthorities.post",
                    "applicationKey.delete",
                    "applicationKey.get",
                    "applicationKey.patch",
                    "applicationKeys.get",
                    "applicationKeys.post",
                    "data.export",
                    "data.lastValueQuery",
                    "data.timeSeriesQuery",
                    "dataTable.addColumn",
                    "dataTable.delete",
                    "dataTable.get",
                    "dataTable.patch",
                    "dataTable.removeColumn",
                    "dataTableRow.delete",
                    "dataTableRow.get",
                    "dataTableRow.patch",
                    "dataTableRows.get",
                    "dataTableRows.post",
                    "dataTableRows.query",
                    "dataTableRows.export",
                    "dataTableRows.delete",
                    "dataTableRows.truncate",
                    "dataTables.get",
                    "dataTables.post",
                    "device.commandStream",
                    "device.debug",
                    "device.delete",
                    "device.export",
                    "device.get",
                    "device.getCommand",
                    "device.getCompositeState",
                    "device.getLogEntries",
                    "device.getState",
                    "device.patch",
                    "device.removeData",
                    "device.sendCommand",
                    "device.sendState",
                    "device.setConnectionStatus",
                    "device.stateStream",
                    "deviceRecipe.bulkCreate",
                    "deviceRecipe.delete",
                    "deviceRecipe.get",
                    "deviceRecipe.patch",
                    "deviceRecipes.get",
                    "deviceRecipes.post",
                    "devices.patch",
                    "devices.delete",
                    "devices.removeData",
                    "devices.detailedSummary",
                    "devices.export",
                    "devices.get",
                    "devices.post",
                    "devices.sendCommand",
                    "edgeDeployments.get",
                    "edgeDeployments.release",
                    "edgeDeployments.remove",
                    "edgeDeployments.replace",
                    "event.delete",
                    "event.get",
                    "event.patch",
                    "events.delete",
                    "events.get",
                    "events.mostRecentBySeverity",
                    "events.patch",
                    "events.post",
                    "events.export",
                    "experience.delete",
                    "experience.bootstrap",
                    "experienceDomain.delete",
                    "experienceDomain.get",
                    "experienceDomain.patch",
                    "experienceDomains.get",
                    "experienceDomains.post",
                    "experienceEndpoint.delete",
                    "experienceEndpoint.get",
                    "experienceEndpoint.linkedResources",
                    "experienceEndpoint.patch",
                    "experienceEndpoints.get",
                    "experienceEndpoints.post",
                    "experienceEndpoints.stats",
                    "experienceGroup.delete",
                    "experienceGroup.get",
                    "experienceGroup.patch",
                    "experienceGroups.detailedSummary",
                    "experienceGroups.get",
                    "experienceGroups.post",
                    "experienceSlug.delete",
                    "experienceSlug.get",
                    "experienceSlug.patch",
                    "experienceSlugs.get",
                    "experienceSlugs.post",
                    "experienceUser.delete",
                    "experienceUser.get",
                    "experienceUser.patch",
                    "experienceUsers.detailedSummary",
                    "experienceUsers.get",
                    "experienceUsers.post",
                    "experienceVersion.delete",
                    "experienceVersion.get",
                    "experienceVersion.patch",
                    "experienceVersions.get",
                    "experienceVersions.post",
                    "experienceView.debug",
                    "experienceView.delete",
                    "experienceView.get",
                    "experienceView.linkedResources",
                    "experienceView.patch",
                    "experienceViews.debug",
                    "experienceViews.detailedSummary",
                    "experienceViews.get",
                    "experienceViews.post",
                    "file.get",
                    "file.patch",
                    "file.move",
                    "file.delete",
                    "file.upload",
                    "files.get",
                    "files.post",
                    "flow.debug",
                    "flow.delete",
                    "flow.clearStorageEntries",
                    "flow.get",
                    "flow.getStorageEntries",
                    "flow.log",
                    "flow.patch",
                    "flow.pressVirtualButton",
                    "flow.setStorageEntry",
                    "flows.get",
                    "flows.getByVersion",
                    "flows.import",
                    "flows.post",
                    "flowVersion.delete",
                    "flowVersion.get",
                    "flowVersion.log",
                    "flowVersion.patch",
                    "flowVersions.get",
                    "flowVersions.post",
                    "integration.delete",
                    "integration.get",
                    "integration.patch",
                    "integrations.get",
                    "integrations.post",
                    "notebook.delete",
                    "notebook.execute",
                    "notebook.get",
                    "notebook.logs",
                    "notebook.patch",
                    "notebook.requestInputDataExport",
                    "notebook.upload",
                    "notebooks.get",
                    "notebooks.post",
                    "webhook.delete",
                    "webhook.get",
                    "webhook.patch",
                    "webhooks.get",
                    "webhooks.post"
                  ]
                },
                {
                  "type": "string",
                  "enum": [
                    "all.Organization",
                    "all.Organization.read",
                    "applications.*",
                    "auditLog.*",
                    "auditLogs.*",
                    "dashboard.*",
                    "dashboards.*",
                    "org.*",
                    "applications.get",
                    "applications.post",
                    "applications.import",
                    "applications.detailedSummary",
                    "auditLog.get",
                    "auditLogs.get",
                    "dashboard.patch",
                    "dashboard.delete",
                    "dashboard.sendReport",
                    "dashboards.get",
                    "dashboards.post",
                    "org.get",
                    "org.patch",
                    "org.delete",
                    "org.pendingInvites",
                    "org.inviteMember",
                    "org.revokeInvite",
                    "org.modifyMember",
                    "org.removeMember",
                    "org.payloadCounts",
                    "org.invoices",
                    "org.currentCard",
                    "org.chargeDetails",
                    "org.transferResources"
                  ]
                }
              ]
            },
            {
              "type": "string",
              "enum": [
                "all.User",
                "all.User.read",
                "applicationTemplates.*",
                "applicationTemplates.get",
                "me.*",
                "orgs.*",
                "me.get",
                "me.patch",
                "me.delete",
                "me.verifyEmail",
                "me.changePassword",
                "me.enableTwoFactorAuth",
                "me.disableTwoFactorAuth",
                "me.disconnectGithub",
                "me.connectGithub",
                "me.disconnectTwitter",
                "me.connectTwitter",
                "me.addRecentItem",
                "me.fetchRecentItems",
                "me.payloadCounts",
                "me.transferResources",
                "orgs.get",
                "orgs.post"
              ]
            }
          ]
        }
      },
      "tokenTTL": {
        "type": "integer",
        "minimum": 0
      }
    },
    "required": [
      "accessToken"
    ],
    "additionalProperties": false
  },
  "tests": [
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "accessToken": "your_access_token",
        "requestedScopes": [
          "all.Application",
          "all.Device",
          "all.Organization",
          "all.User",
          "application.debug",
          "application.delete",
          "application.get",
          "application.mqttPublishMessage",
          "application.mqttSubscriptionStream",
          "application.patch",
          "application.payloadCounts",
          "application.search",
          "applicationApiToken.delete",
          "applicationApiToken.get",
          "applicationApiToken.patch",
          "applicationApiTokens.get",
          "applicationApiTokens.post",
          "applicationCertificate.delete",
          "applicationCertificate.get",
          "applicationCertificate.patch",
          "applicationCertificates.get",
          "applicationCertificates.post",
          "applicationCertificateAuthority.delete",
          "applicationCertificateAuthority.get",
          "applicationCertificateAuthority.patch",
          "applicationCertificateAuthorities.get",
          "applicationCertificateAuthorities.post",
          "applicationKey.delete",
          "applicationKey.get",
          "applicationKey.patch",
          "applicationKeys.get",
          "applicationKeys.post",
          "data.export",
          "data.lastValueQuery",
          "data.timeSeriesQuery",
          "dataTable.addColumn",
          "dataTable.delete",
          "dataTable.get",
          "dataTable.patch",
          "dataTable.removeColumn",
          "dataTableRow.delete",
          "dataTableRow.get",
          "dataTableRow.patch",
          "dataTableRows.get",
          "dataTableRows.post",
          "dataTableRows.query",
          "dataTableRows.export",
          "dataTableRows.delete",
          "dataTableRows.truncate",
          "dataTables.get",
          "dataTables.post",
          "device.commandStream",
          "device.debug",
          "device.delete",
          "device.export",
          "device.get",
          "device.getCommand",
          "device.getCompositeState",
          "device.getLogEntries",
          "device.getState",
          "device.patch",
          "device.removeData",
          "device.sendCommand",
          "device.sendState",
          "device.setConnectionStatus",
          "device.stateStream",
          "deviceRecipe.bulkCreate",
          "deviceRecipe.delete",
          "deviceRecipe.get",
          "deviceRecipe.patch",
          "deviceRecipes.get",
          "deviceRecipes.post",
          "devices.patch",
          "devices.delete",
          "devices.removeData",
          "devices.detailedSummary",
          "devices.export",
          "devices.get",
          "devices.post",
          "devices.sendCommand",
          "edgeDeployments.get",
          "edgeDeployments.release",
          "edgeDeployments.remove",
          "edgeDeployments.replace",
          "event.delete",
          "event.get",
          "event.patch",
          "events.delete",
          "events.get",
          "events.mostRecentBySeverity",
          "events.patch",
          "events.post",
          "events.export",
          "experience.delete",
          "experience.bootstrap",
          "experienceDomain.delete",
          "experienceDomain.get",
          "experienceDomain.patch",
          "experienceDomains.get",
          "experienceDomains.post",
          "experienceEndpoint.delete",
          "experienceEndpoint.get",
          "experienceEndpoint.linkedResources",
          "experienceEndpoint.patch",
          "experienceEndpoints.get",
          "experienceEndpoints.post",
          "experienceEndpoints.stats",
          "experienceGroup.delete",
          "experienceGroup.get",
          "experienceGroup.patch",
          "experienceGroups.detailedSummary",
          "experienceGroups.get",
          "experienceGroups.post",
          "experienceSlug.delete",
          "experienceSlug.get",
          "experienceSlug.patch",
          "experienceSlugs.get",
          "experienceSlugs.post",
          "experienceUser.delete",
          "experienceUser.get",
          "experienceUser.patch",
          "experienceUsers.detailedSummary",
          "experienceUsers.get",
          "experienceUsers.post",
          "experienceVersion.delete",
          "experienceVersion.get",
          "experienceVersion.patch",
          "experienceVersions.get",
          "experienceVersions.post",
          "experienceView.debug",
          "experienceView.delete",
          "experienceView.get",
          "experienceView.linkedResources",
          "experienceView.patch",
          "experienceViews.debug",
          "experienceViews.detailedSummary",
          "experienceViews.get",
          "experienceViews.post",
          "file.get",
          "file.patch",
          "file.move",
          "file.delete",
          "file.upload",
          "files.get",
          "files.post",
          "flow.debug",
          "flow.delete",
          "flow.clearStorageEntries",
          "flow.get",
          "flow.getStorageEntries",
          "flow.log",
          "flow.patch",
          "flow.pressVirtualButton",
          "flow.setStorageEntry",
          "flows.get",
          "flows.getByVersion",
          "flows.import",
          "flows.post",
          "flowVersion.delete",
          "flowVersion.get",
          "flowVersion.log",
          "flowVersion.patch",
          "flowVersions.get",
          "flowVersions.post",
          "integration.delete",
          "integration.get",
          "integration.patch",
          "integrations.get",
          "integrations.post",
          "notebook.delete",
          "notebook.execute",
          "notebook.get",
          "notebook.logs",
          "notebook.patch",
          "notebook.requestInputDataExport",
          "notebook.upload",
          "notebooks.get",
          "notebooks.post",
          "webhook.delete",
          "webhook.get",
          "webhook.patch",
          "webhooks.get",
          "webhooks.post",
          "all.Organization",
          "all.Organization.read",
          "applications.*",
          "auditLog.*",
          "auditLogs.*",
          "dashboard.*",
          "dashboards.*",
          "org.*",
          "applications.get",
          "applications.post",
          "applications.import",
          "applications.detailedSummary",
          "auditLog.get",
          "auditLogs.get",
          "dashboard.patch",
          "dashboard.delete",
          "dashboard.sendReport",
          "dashboards.get",
          "dashboards.post",
          "org.get",
          "org.patch",
          "org.delete",
          "org.pendingInvites",
          "org.inviteMember",
          "org.revokeInvite",
          "org.modifyMember",
          "org.removeMember",
          "org.payloadCounts",
          "org.invoices",
          "org.currentCard",
          "org.chargeDetails",
          "org.transferResources",
          "all.User",
          "all.User.read",
          "applicationTemplates.*",
          "applicationTemplates.get",
          "me.*",
          "orgs.*",
          "me.get",
          "me.patch",
          "me.delete",
          "me.verifyEmail",
          "me.changePassword",
          "me.enableTwoFactorAuth",
          "me.disableTwoFactorAuth",
          "me.disconnectGithub",
          "me.connectGithub",
          "me.disconnectTwitter",
          "me.connectTwitter",
          "me.addRecentItem",
          "me.fetchRecentItems",
          "me.payloadCounts",
          "me.transferResources",
          "orgs.get",
          "orgs.post"
        ],
        "tokenTTL": 3600
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "accessToken": "your_access_token",
        "requestedScopes": [
          "all.Application",
          "all.Device",
          "all.Organization",
          "all.User",
          "application.debug",
          "application.delete",
          "application.get",
          "application.mqttPublishMessage",
          "application.mqttSubscriptionStream",
          "application.patch",
          "application.payloadCounts",
          "application.search",
          "device.commandStream",
          "device.debug",
          "device.delete",
          "device.export",
          "device.get",
          "device.getCommand",
          "device.getCompositeState",
          "device.getLogEntries",
          "device.getState",
          "device.patch",
          "device.removeData",
          "device.sendCommand",
          "device.sendState",
          "device.setConnectionStatus",
          "device.stateStream",
          "org.get",
          "org.patch",
          "org.delete",
          "org.pendingInvites",
          "org.inviteMember",
          "org.revokeInvite",
          "org.modifyMember",
          "org.removeMember",
          "org.payloadCounts",
          "org.invoices",
          "org.currentCard",
          "org.chargeDetails",
          "org.transferResources",
          "me.get",
          "me.patch",
          "me.delete",
          "me.verifyEmail",
          "me.changePassword",
          "me.enableTwoFactorAuth",
          "me.disableTwoFactorAuth",
          "me.disconnectGithub",
          "me.connectGithub",
          "me.disconnectTwitter",
          "me.connectTwitter",
          "me.addRecentItem",
          "me.fetchRecentItems",
          "me.payloadCounts",
          "me.transferResources"
        ],
        "tokenTTL": 3600
      }
    },
    {
      "description": "llama-70b generated negative; focus on minimum keyword",
      "valid": false,
      "rust_error": "-1 is less than the minimum of 0",
      "python_error": "-1 is less than the minimum of 0\n\nFailed validating 'minimum' in schema['properties']['tokenTTL']:\n    {'type': 'integer', 'minimum': 0}\n\nOn instance['tokenTTL']:\n    -1",
      "data": {
        "accessToken": "your_access_token",
        "requestedScopes": [
          "all.Application",
          "all.Device",
          "all.Organization",
          "all.User",
          "application.debug",
          "application.delete",
          "application.get",
          "application.mqttPublishMessage",
          "application.mqttSubscriptionStream",
          "application.patch",
          "application.payloadCounts",
          "application.search",
          "device.commandStream",
          "device.debug",
          "device.delete",
          "device.export",
          "device.get",
          "device.getCommand",
          "device.getCompositeState",
          "device.getLogEntries",
          "device.getState",
          "device.patch",
          "device.removeData",
          "device.sendCommand",
          "device.sendState",
          "device.setConnectionStatus",
          "device.stateStream",
          "org.get",
          "org.patch",
          "org.delete",
          "org.pendingInvites",
          "org.inviteMember",
          "org.revokeInvite",
          "org.modifyMember",
          "org.removeMember",
          "org.payloadCounts",
          "org.invoices",
          "org.currentCard",
          "org.chargeDetails",
          "org.transferResources",
          "me.get",
          "me.patch",
          "me.delete",
          "me.verifyEmail",
          "me.changePassword",
          "me.enableTwoFactorAuth",
          "me.disableTwoFactorAuth",
          "me.disconnectGithub",
          "me.connectGithub",
          "me.disconnectTwitter",
          "me.connectTwitter",
          "me.addRecentItem",
          "me.fetchRecentItems",
          "me.payloadCounts",
          "me.transferResources"
        ],
        "tokenTTL": -1
      }
    },
    {
      "description": "llama-70b generated negative; focus on oneOf keyword",
      "valid": false,
      "rust_error": "\"me.disconnectInstagram\" is not valid under any of the schemas listed in the 'oneOf' keyword",
      "python_error": "'me.disconnectInstagram' is not valid under any of the given schemas\n\nFailed validating 'oneOf' in schema[0]:\n    {'oneOf': [{'type': 'string',\n                'enum': ['all.Application',\n                         'all.Application.read',\n                         'all.Device',\n                         'all.Device.read',\n                         'application.*',\n                         'applicationApiToken.*',\n                         'applicationApiTokens.*',\n                         'applicationCertificate.*',\n                         'applicationCertificates.*',\n                         'applicationCertificateAuthority.*',\n                         'applicationCertificateAuthorities.*',\n                         'applicationKey.*',\n                         'applicationKeys.*',\n                         'data.*',\n                         'dataTable.*',\n                         'dataTables.*',\n                         'dataTableRow.*',\n                         'dataTableRows.*',\n                         'device.*.. (11839 more)",
      "data": {
        "accessToken": "your_access_token",
        "requestedScopes": [
          "all.Application",
          "all.Device",
          "all.Organization",
          "all.User",
          "application.debug",
          "application.delete",
          "application.get",
          "application.mqttPublishMessage",
          "application.mqttSubscriptionStream",
          "application.patch",
          "application.payloadCounts",
          "application.search",
          "device.commandStream",
          "device.debug",
          "device.delete",
          "device.export",
          "device.get",
          "device.getCommand",
          "device.getCompositeState",
          "device.getLogEntries",
          "device.getState",
          "device.patch",
          "device.removeData",
          "device.sendCommand",
          "device.sendState",
          "device.setConnectionStatus",
          "device.stateStream",
          "org.get",
          "org.patch",
          "org.delete",
          "org.pendingInvites",
          "org.inviteMember",
          "org.revokeInvite",
          "org.modifyMember",
          "org.removeMember",
          "org.payloadCounts",
          "org.invoices",
          "org.currentCard",
          "org.chargeDetails",
          "org.transferResources",
          "me.get",
          "me.patch",
          "me.delete",
          "me.verifyEmail",
          "me.changePassword",
          "me.enableTwoFactorAuth",
          "me.disableTwoFactorAuth",
          "me.disconnectGithub",
          "me.connectGithub",
          "me.disconnectTwitter",
          "me.connectTwitter",
          "me.addRecentItem",
          "me.fetchRecentItems",
          "me.payloadCounts",
          "me.transferResources",
          "me.disconnectInstagram"
        ],
        "tokenTTL": 3600
      }
    },
    {
      "description": "llama-70b generated negative; focus on minLength keyword",
      "valid": false,
      "rust_error": "\"\" is shorter than 1 character",
      "python_error": "'' should be non-empty\n\nFailed validating 'minLength' in schema['properties']['accessToken']:\n    {'type': 'string', 'minLength': 1}\n\nOn instance['accessToken']:\n    ''",
      "data": {
        "accessToken": "",
        "requestedScopes": [
          "all.Application",
          "all.Device",
          "all.Organization",
          "all.User",
          "application.debug",
          "application.delete",
          "application.get",
          "application.mqttPublishMessage",
          "application.mqttSubscriptionStream",
          "application.patch",
          "application.payloadCounts",
          "application.search",
          "device.commandStream",
          "device.debug",
          "device.delete",
          "device.export",
          "device.get",
          "device.getCommand",
          "device.getCompositeState",
          "device.getLogEntries",
          "device.getState",
          "device.patch",
          "device.removeData",
          "device.sendCommand",
          "device.sendState",
          "device.setConnectionStatus",
          "device.stateStream",
          "org.get",
          "org.patch",
          "org.delete",
          "org.pendingInvites",
          "org.inviteMember",
          "org.revokeInvite",
          "org.modifyMember",
          "org.removeMember",
          "org.payloadCounts",
          "org.invoices",
          "org.currentCard",
          "org.chargeDetails",
          "org.transferResources",
          "me.get",
          "me.patch",
          "me.delete",
          "me.verifyEmail",
          "me.changePassword",
          "me.enableTwoFactorAuth",
          "me.disableTwoFactorAuth",
          "me.disconnectGithub",
          "me.connectGithub",
          "me.disconnectTwitter",
          "me.connectTwitter",
          "me.addRecentItem",
          "me.fetchRecentItems",
          "me.payloadCounts",
          "me.transferResources"
        ],
        "tokenTTL": 3600
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"InvalidScope\" is not valid under any of the schemas listed in the 'oneOf' keyword",
      "python_error": "None is not of type 'integer'\n\nFailed validating 'type' in schema['properties']['tokenTTL']:\n    {'type': 'integer', 'minimum': 0}\n\nOn instance['tokenTTL']:\n    None",
      "data": {
        "accessToken": "your_access_token",
        "requestedScopes": [
          "all.Application",
          "all.Device",
          "all.Organization",
          "all.User",
          "application.debug",
          "application.delete",
          "application.get",
          "application.mqttPublishMessage",
          "application.mqttSubscriptionStream",
          "application.patch",
          "application.payloadCounts",
          "application.search",
          "device.commandStream",
          "device.debug",
          "device.delete",
          "device.export",
          "device.get",
          "device.getCommand",
          "device.getCompositeState",
          "device.getLogEntries",
          "device.getState",
          "device.patch",
          "device.removeData",
          "device.sendCommand",
          "device.sendState",
          "device.setConnectionStatus",
          "device.stateStream",
          "org.get",
          "org.patch",
          "org.delete",
          "org.pendingInvites",
          "org.inviteMember",
          "org.revokeInvite",
          "org.modifyMember",
          "org.removeMember",
          "org.payloadCounts",
          "org.invoices",
          "org.currentCard",
          "org.chargeDetails",
          "org.transferResources",
          "me.get",
          "me.patch",
          "me.delete",
          "me.verifyEmail",
          "me.changePassword",
          "me.enableTwoFactorAuth",
          "me.disableTwoFactorAuth",
          "me.disconnectGithub",
          "me.connectGithub",
          "me.disconnectTwitter",
          "me.connectTwitter",
          "me.addRecentItem",
          "me.fetchRecentItems",
          "me.payloadCounts",
          "me.transferResources",
          "InvalidScope",
          "all.Application",
          "tokenTTL"
        ],
        "tokenTTL": null
      }
    }
  ]
}