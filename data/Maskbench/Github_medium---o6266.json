{
  "description": "sample Github_medium/o6266.json",
  "meta": {
    "full_size": 610,
    "stripped_size": 592,
    "features": [
      "@minmaxLength",
      "enum"
    ],
    "raw_features": [
      "$schema",
      "maxLength",
      "minLength",
      "properties",
      "required",
      "type",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "properties": {
      "acceptTerms": {
        "enum": [
          "on"
        ]
      },
      "companyName": {
        "maxLength": 1024,
        "type": "string"
      },
      "email": {
        "_format": "email",
        "maxLength": 1024,
        "type": "string"
      },
      "firstName": {
        "maxLength": 1024,
        "minLength": 1,
        "type": "string"
      },
      "lastName": {
        "maxLength": 1024,
        "minLength": 1,
        "type": "string"
      },
      "location": {
        "maxLength": 1024,
        "type": "string"
      },
      "password": {
        "maxLength": 2048,
        "minLength": 8,
        "type": "string"
      },
      "phoneNumber": {
        "maxLength": 1024,
        "type": "string"
      },
      "url": {
        "maxLength": 1024,
        "type": "string"
      }
    },
    "required": [
      "email",
      "firstName",
      "lastName",
      "password",
      "acceptTerms"
    ],
    "type": "object"
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "acceptTerms": "on",
        "companyName": "Example Company",
        "email": "example@example.com",
        "firstName": "John",
        "lastName": "Doe",
        "location": "New York",
        "password": "Password123",
        "phoneNumber": "123-456-7890",
        "url": "https://www.example.com"
      }
    },
    {
      "description": "llama-70b generated negative; focus on minLength keyword or maxLength keyword",
      "valid": false,
      "rust_error": "\"\" is shorter than 1 character",
      "python_error": "'Pass' is too short\n\nFailed validating 'minLength' in schema['properties']['password']:\n    {'maxLength': 2048, 'minLength': 8, 'type': 'string'}\n\nOn instance['password']:\n    'Pass'",
      "data": {
        "acceptTerms": "on",
        "companyName": "Example Company",
        "email": "example@example.com",
        "firstName": "",
        "lastName": "Doe",
        "location": "New York",
        "password": "Pass",
        "phoneNumber": "123-456-7890",
        "url": "https://www.example.com"
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"off\" is not one of [\"on\"]",
      "python_error": "'off' is not one of ['on']\n\nFailed validating 'enum' in schema['properties']['acceptTerms']:\n    {'enum': ['on']}\n\nOn instance['acceptTerms']:\n    'off'",
      "data": {
        "acceptTerms": "off",
        "companyName": "Example Company",
        "email": "example@example.com",
        "firstName": "John",
        "lastName": "Doe",
        "location": "New York",
        "password": "Password123",
        "phoneNumber": "123-456-7890",
        "url": "https://www.example.com"
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"off\" is not one of [\"on\"]",
      "python_error": "'Pass' is too short\n\nFailed validating 'minLength' in schema['properties']['password']:\n    {'maxLength': 2048, 'minLength': 8, 'type': 'string'}\n\nOn instance['password']:\n    'Pass'",
      "data": {
        "acceptTerms": "off",
        "companyName": "Example Company",
        "email": "example@example.com",
        "firstName": "",
        "lastName": "Doe",
        "location": "New York",
        "password": "Pass",
        "phoneNumber": "123-456-7890",
        "url": "https://www.example.com"
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "acceptTerms": "on",
        "companyName": "Example Company",
        "email": "example@example.com",
        "firstName": "John",
        "lastName": "Doe",
        "location": "New York",
        "password": "Password123",
        "phoneNumber": "123-456-7890",
        "url": "https://example.com"
      }
    },
    {
      "description": "llama-70b generated negative; focus on minLength keyword or maxLength keyword",
      "valid": false,
      "rust_error": "\"\" is shorter than 1 character",
      "python_error": "'Pass' is too short\n\nFailed validating 'minLength' in schema['properties']['password']:\n    {'maxLength': 2048, 'minLength': 8, 'type': 'string'}\n\nOn instance['password']:\n    'Pass'",
      "data": {
        "acceptTerms": "on",
        "companyName": "Example Company",
        "email": "example@example.com",
        "firstName": "",
        "lastName": "Doe",
        "location": "New York",
        "password": "Pass",
        "phoneNumber": "123-456-7890",
        "url": "https://example.com"
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"off\" is not one of [\"on\"]",
      "python_error": "'Short' is too short\n\nFailed validating 'minLength' in schema['properties']['password']:\n    {'maxLength': 2048, 'minLength': 8, 'type': 'string'}\n\nOn instance['password']:\n    'Short'",
      "data": {
        "acceptTerms": "off",
        "companyName": "Example Company",
        "email": "example@example.com",
        "firstName": "John",
        "lastName": "Doe",
        "location": "New York",
        "password": "Short",
        "phoneNumber": "123-456-7890",
        "url": "https://example.com"
      }
    }
  ]
}