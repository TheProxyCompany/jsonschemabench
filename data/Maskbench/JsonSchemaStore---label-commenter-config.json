{
  "description": "sample JsonSchemaStore/label-commenter-config.json",
  "meta": {
    "full_size": 1214,
    "stripped_size": 798,
    "features": [
      "$ref",
      "@siblingKeys",
      "enum",
      "items"
    ],
    "raw_features": [
      "$schema",
      "definitions",
      "id",
      "properties",
      "type",
      "type:array",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$comment": "https://github.com/peaceiris/actions-label-commenter",
    "$schema": "http://json-schema.org/draft-04/schema#",
    "definitions": {
      "labelItem": {
        "type": "object",
        "properties": {
          "body": {
            "title": "Body",
            "type": "string"
          },
          "action": {
            "title": "Action",
            "type": "string"
          },
          "locking": {
            "title": "Locking",
            "enum": [
              "lock",
              "unlock"
            ]
          },
          "lock_reason": {
            "title": "Lock Reason",
            "type": "string"
          }
        }
      },
      "labelFor": {
        "type": "object",
        "properties": {
          "issue": {
            "title": "Issue",
            "$ref": "#/definitions/labelItem"
          },
          "pr": {
            "title": "Pull Request",
            "$ref": "#/definitions/labelItem"
          }
        }
      },
      "labelType": {
        "type": "object",
        "properties": {
          "labeled": {
            "title": "Labeled",
            "$ref": "#/definitions/labelFor"
          },
          "unlabeled": {
            "title": "Unlabeled",
            "$ref": "#/definitions/labelFor"
          }
        }
      }
    },
    "description": "Configuration for Actions Label Commenter, for posting messages triggered by labels.",
    "id": "https://json.schemastore.org/label-commenter-config.json",
    "properties": {
      "comment": {
        "title": "Comment",
        "type": "object",
        "properties": {
          "header": {
            "title": "Header",
            "type": "string"
          },
          "footer": {
            "title": "Footer",
            "type": "string"
          }
        }
      },
      "labels": {
        "title": "Labels",
        "type": "array",
        "items": {
          "title": "Label",
          "$ref": "#/definitions/labelType",
          "properties": {
            "name": {
              "title": "Name",
              "type": "string"
            }
          }
        }
      }
    },
    "type": "object"
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "comment": {
          "header": "### Label Commenter",
          "footer": "### Label Commenter Footer"
        },
        "labels": [
          {
            "labeled": {
              "issue": {
                "body": "This is a bug issue.",
                "action": "lock",
                "locking": "lock",
                "lock_reason": "resolved"
              },
              "pr": {
                "body": "This is a bug PR.",
                "action": "unlock",
                "locking": "unlock",
                "lock_reason": ""
              }
            },
            "unlabeled": {
              "issue": {
                "body": "This is an unlabeled bug issue.",
                "action": "unlock",
                "locking": "unlock",
                "lock_reason": ""
              },
              "pr": {
                "body": "This is an unlabeled bug PR.",
                "action": "lock",
                "locking": "lock",
                "lock_reason": "resolved"
              }
            },
            "name": "bug"
          },
          {
            "labeled": {
              "issue": {
                "body": "This is a feature issue.",
                "action": "lock",
                "locking": "lock",
                "lock_reason": "resolved"
              },
              "pr": {
                "body": "This is a feature PR.",
                "action": "unlock",
                "locking": "unlock",
                "lock_reason": ""
              }
            },
            "unlabeled": {
              "issue": {
                "body": "This is an unlabeled feature issue.",
                "action": "unlock",
                "locking": "unlock",
                "lock_reason": ""
              },
              "pr": {
                "body": "This is an unlabeled feature PR.",
                "action": "lock",
                "locking": "lock",
                "lock_reason": "resolved"
              }
            },
            "name": "feature"
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"invalid\" is not one of [\"lock\",\"unlock\"]",
      "python_error": "'invalid' is not one of ['lock', 'unlock']\n\nFailed validating 'enum' in schema['properties']['labels']['items']['properties']['labeled']['properties']['issue']['properties']['locking']:\n    {'title': 'Locking', 'enum': ['lock', 'unlock']}\n\nOn instance['labels'][2]['labeled']['issue']['locking']:\n    'invalid'",
      "data": {
        "comment": {
          "header": "### Label Commenter",
          "footer": "### Label Commenter Footer"
        },
        "labels": [
          {
            "labeled": {
              "issue": {
                "body": "This is a bug issue.",
                "action": "lock",
                "locking": "lock",
                "lock_reason": "resolved"
              },
              "pr": {
                "body": "This is a bug PR.",
                "action": "unlock",
                "locking": "unlock",
                "lock_reason": ""
              }
            },
            "unlabeled": {
              "issue": {
                "body": "This is an unlabeled bug issue.",
                "action": "unlock",
                "locking": "unlock",
                "lock_reason": ""
              },
              "pr": {
                "body": "This is an unlabeled bug PR.",
                "action": "lock",
                "locking": "lock",
                "lock_reason": "resolved"
              }
            },
            "name": "bug"
          },
          {
            "labeled": {
              "issue": {
                "body": "This is a feature issue.",
                "action": "lock",
                "locking": "lock",
                "lock_reason": "resolved"
              },
              "pr": {
                "body": "This is a feature PR.",
                "action": "unlock",
                "locking": "unlock",
                "lock_reason": ""
              }
            },
            "unlabeled": {
              "issue": {
                "body": "This is an unlabeled feature issue.",
                "action": "unlock",
                "locking": "unlock",
                "lock_reason": ""
              },
              "pr": {
                "body": "This is an unlabeled feature PR.",
                "action": "lock",
                "locking": "lock",
                "lock_reason": "resolved"
              }
            },
            "name": "feature"
          },
          {
            "name": "invalid",
            "labeled": {
              "issue": {
                "body": "This is an invalid issue.",
                "action": "lock",
                "locking": "invalid",
                "lock_reason": "resolved"
              },
              "pr": {
                "body": "This is an invalid PR.",
                "action": "unlock",
                "locking": "unlock",
                "lock_reason": ""
              }
            },
            "unlabeled": {
              "issue": {
                "body": "This is an unlabeled invalid issue.",
                "action": "unlock",
                "locking": "unlock",
                "lock_reason": ""
              },
              "pr": {
                "body": "This is an unlabeled invalid PR.",
                "action": "lock",
                "locking": "lock",
                "lock_reason": "resolved"
              }
            }
          }
        ]
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "comment": {
          "header": "### Label Commenter",
          "footer": "### End of Label Commenter"
        },
        "labels": [
          {
            "labeled": {
              "issue": {
                "body": "This issue has been labeled as a bug.",
                "action": "lock",
                "locking": "lock",
                "lock_reason": "resolved"
              },
              "pr": {
                "body": "This pull request has been labeled as a bug.",
                "action": "lock",
                "locking": "lock",
                "lock_reason": "resolved"
              }
            },
            "unlabeled": {
              "issue": {
                "body": "This issue is no longer labeled as a bug.",
                "action": "unlock",
                "locking": "unlock",
                "lock_reason": ""
              },
              "pr": {
                "body": "This pull request is no longer labeled as a bug.",
                "action": "unlock",
                "locking": "unlock",
                "lock_reason": ""
              }
            },
            "name": "bug"
          },
          {
            "labeled": {
              "issue": {
                "body": "This issue has been labeled as an enhancement.",
                "action": "lock",
                "locking": "lock",
                "lock_reason": "resolved"
              },
              "pr": {
                "body": "This pull request has been labeled as an enhancement.",
                "action": "lock",
                "locking": "lock",
                "lock_reason": "resolved"
              }
            },
            "unlabeled": {
              "issue": {
                "body": "This issue is no longer labeled as an enhancement.",
                "action": "unlock",
                "locking": "unlock",
                "lock_reason": ""
              },
              "pr": {
                "body": "This pull request is no longer labeled as an enhancement.",
                "action": "unlock",
                "locking": "unlock",
                "lock_reason": ""
              }
            },
            "name": "enhancement"
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "null is not one of [\"lock\",\"unlock\"]",
      "python_error": "None is not one of ['lock', 'unlock']\n\nFailed validating 'enum' in schema['properties']['labels']['items']['properties']['labeled']['properties']['issue']['properties']['locking']:\n    {'title': 'Locking', 'enum': ['lock', 'unlock']}\n\nOn instance['labels'][0]['labeled']['issue']['locking']:\n    None",
      "data": {
        "comment": {
          "header": "### Label Commenter",
          "footer": "### End of Label Commenter"
        },
        "labels": [
          {
            "name": "bug",
            "labeled": {
              "issue": {
                "body": "This issue has been labeled as a bug.",
                "action": "lock",
                "locking": null,
                "lock_reason": "resolved"
              },
              "pr": {
                "body": "This pull request has been labeled as a bug.",
                "action": "lock",
                "locking": "lock",
                "lock_reason": "resolved"
              }
            },
            "unlabeled": {
              "issue": {
                "body": "This issue is no longer labeled as a bug.",
                "action": "unlock",
                "locking": "unlock",
                "lock_reason": ""
              },
              "pr": {
                "body": "This pull request is no longer labeled as a bug.",
                "action": "unlock",
                "locking": "unlock",
                "lock_reason": ""
              }
            }
          }
        ]
      }
    }
  ]
}