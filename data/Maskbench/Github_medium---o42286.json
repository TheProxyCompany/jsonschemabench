{
  "description": "sample Github_medium/o42286.json",
  "meta": {
    "full_size": 1313,
    "stripped_size": 1241,
    "features": [
      "$ref",
      "additionalProperties",
      "items"
    ],
    "raw_features": [
      "$schema",
      "_boolSchema",
      "definitions",
      "properties",
      "type",
      "type:array",
      "type:integer",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "title": "org.eclipse.persistence.testing.jaxb.annotations.xmlpath.Root",
    "type": "object",
    "properties": {
      "root": {
        "type": "object",
        "properties": {
          "employees": {
            "type": "object",
            "properties": {
              "employee": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/Employee"
                }
              }
            }
          },
          "addresses": {
            "type": "object",
            "properties": {
              "address": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/Address"
                }
              }
            }
          }
        },
        "additionalProperties": false
      }
    },
    "definitions": {
      "Employee": {
        "type": "object",
        "properties": {
          "employee-info": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              }
            }
          },
          "personal-info": {
            "type": "object",
            "properties": {
              "first-name": {
                "type": "string"
              },
              "last-name": {
                "type": "string"
              }
            }
          },
          "contact-info": {
            "type": "object",
            "properties": {
              "address-id": {
                "type": "string"
              },
              "phones": {
                "type": "object",
                "properties": {
                  "phone-number": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/PhoneNumber"
                    }
                  }
                }
              }
            }
          },
          "responsibilities": {
            "type": "object",
            "properties": {
              "responsibility": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "any-object-root": {},
          "any-collection-root": {
            "type": "array",
            "items": {}
          }
        },
        "additionalProperties": true
      },
      "PhoneNumber": {
        "type": "string",
        "additionalProperties": false
      },
      "Address": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "street": {
            "type": "string"
          },
          "city": {
            "type": "string"
          }
        },
        "additionalProperties": false
      }
    }
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "root": {
          "employees": {
            "employee": [
              {
                "employee-info": {
                  "id": 1
                },
                "personal-info": {
                  "first-name": "John",
                  "last-name": "Doe"
                },
                "contact-info": {
                  "address-id": "addr-1",
                  "phones": {
                    "phone-number": [
                      "123-456-7890",
                      "098-765-4321"
                    ]
                  }
                },
                "responsibilities": {
                  "responsibility": [
                    "Manager",
                    "Team Lead"
                  ]
                },
                "any-object-root": {
                  "key": "value"
                },
                "any-collection-root": [
                  "item1",
                  "item2"
                ]
              },
              {
                "employee-info": {
                  "id": 2
                },
                "personal-info": {
                  "first-name": "Jane",
                  "last-name": "Doe"
                },
                "contact-info": {
                  "address-id": "addr-2",
                  "phones": {
                    "phone-number": [
                      "555-123-4567"
                    ]
                  }
                },
                "responsibilities": {
                  "responsibility": [
                    "Developer"
                  ]
                },
                "any-object-root": {
                  "key": "value"
                },
                "any-collection-root": [
                  "item3",
                  "item4"
                ]
              }
            ]
          },
          "addresses": {
            "address": [
              {
                "id": "addr-1",
                "street": "123 Main St",
                "city": "Anytown"
              },
              {
                "id": "addr-2",
                "street": "456 Elm St",
                "city": "Othertown"
              }
            ]
          }
        }
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"abc\" is not of type \"integer\"",
      "python_error": "Additional properties are not allowed ('invalid-key' was unexpected)\n\nFailed validating 'additionalProperties' in schema['properties']['root']:\n    {'type': 'object',\n     'properties': {'employees': {'type': 'object',\n                                  'properties': {'employee': {'type': 'array',\n                                                              'items': {'$ref': '#/definitions/Employee'}}}},\n                    'addresses': {'type': 'object',\n                                  'properties': {'address': {'type': 'array',\n                                                             'items': {'$ref': '#/definitions/Address'}}}}},\n     'additionalProperties': False}\n\nOn instance['root']:\n    {'employees': {'employee': [{'employee-info': {'id': 'abc'}},\n                                'personal-info',\n                                'contact-info',\n                                'responsibilities',\n                                'any-object-root',\n                                'any-collection-root'.. (1026 more)",
      "data": {
        "root": {
          "employees": {
            "employee": [
              {
                "employee-info": {
                  "id": "abc"
                }
              },
              "personal-info",
              "contact-info",
              "responsibilities",
              "any-object-root",
              "any-collection-root",
              {
                "employee-info": {
                  "id": 2
                },
                "personal-info": {
                  "first-name": "Jane",
                  "last-name": "Doe"
                },
                "contact-info": {
                  "address-id": "addr-2",
                  "phones": {
                    "phone-number": [
                      "555-123-4567"
                    ]
                  }
                },
                "responsibilities": {
                  "responsibility": [
                    "Developer"
                  ]
                },
                "any-object-root": {
                  "key": "value"
                },
                "any-collection-root": [
                  "item3",
                  "item4"
                ]
              }
            ]
          },
          "addresses": {
            "address": [
              {
                "id": "addr-1",
                "street": "123 Main St",
                "city": "Anytown"
              },
              {
                "id": "addr-2",
                "street": "456 Elm St",
                "city": "Othertown"
              }
            ]
          },
          "invalid-key": "invalid-value"
        }
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"abc\" is not of type \"integer\"",
      "python_error": "123 is not of type 'string'\n\nFailed validating 'type' in schema['properties']['root']['properties']['addresses']['properties']['address']['items']['properties']['city']:\n    {'type': 'string'}\n\nOn instance['root']['addresses']['address'][0]['city']:\n    123",
      "data": {
        "root": {
          "employees": {
            "employee": [
              {
                "employee-info": {
                  "id": "abc"
                },
                "personal-info": {
                  "first-name": "John",
                  "last-name": "Doe"
                },
                "contact-info": {
                  "address-id": "addr-1",
                  "phones": {
                    "phone-number": [
                      "123-456-7890",
                      "098-765-4321"
                    ]
                  }
                },
                "responsibilities": {
                  "responsibility": [
                    "Manager",
                    "Team Lead"
                  ]
                },
                "any-object-root": {
                  "key": "value"
                },
                "any-collection-root": [
                  "item1",
                  "item2"
                ]
              }
            ]
          },
          "addresses": {
            "address": [
              {
                "id": "addr-1",
                "street": "123 Main St",
                "city": 123
              }
            ]
          }
        }
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"abc\" is not of type \"integer\"",
      "python_error": "'invalid as no extraneous properties allowed according to the schema' is not of type 'object'\n\nFailed validating 'type' in schema['properties']['root']['properties']['employees']['properties']['employee']['items']:\n    {'type': 'object',\n     'properties': {'employee-info': {'type': 'object',\n                                      'properties': {'id': {'type': 'integer'}}},\n                    'personal-info': {'type': 'object',\n                                      'properties': {'first-name': {'type': 'string'},\n                                                     'last-name': {'type': 'string'}}},\n                    'contact-info': {'type': 'object',\n                                     'properties': {'address-id': {'type': 'string'},\n                                                    'phones': {'type': 'object',\n                                                               'properties': {'phone-number': {'type': 'array',\n                                                                                   .. (600 more)",
      "data": {
        "root": {
          "employees": {
            "employee": [
              {
                "employee-info": {
                  "id": "abc"
                },
                "invalid as id should be an integer according to the schema": "personal-info",
                "contact-info": {
                  "address-id": "addr-1",
                  "phones": {
                    "phone-number": [
                      "123-456-7890",
                      1234567890
                    ],
                    "invalid as phone number should be a string according to the schema": "responsibilities",
                    "any-object-root": {
                      "key": "value",
                      "any-collection-root": [
                        "item1",
                        "item2"
                      ],
                      "Valid as per anyCollectionRoot schema definition (it has an array of items of any type)": "addresses",
                      "extraneousKey": "extraneousValue"
                    }
                  }
                },
                "invalid as no extraneous properties allowed according to the schema": "extraneousKey"
              },
              "invalid as no extraneous properties allowed according to the schema"
            ]
          }
        },
        "invalid as root should have only two properties - employees and addresses according to the schema": "extraneousKey"
      }
    }
  ]
}