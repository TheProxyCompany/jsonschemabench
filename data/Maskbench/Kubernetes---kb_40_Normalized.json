{
  "description": "sample Kubernetes/kb_40_Normalized.json",
  "meta": {
    "full_size": 2715,
    "stripped_size": 738,
    "features": [
      "$ref",
      "enum",
      "items"
    ],
    "raw_features": [
      "definitions",
      "properties",
      "required",
      "type",
      "type:[]",
      "type:array",
      "type:null",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "definitions": {
      "https:__kubernetesjsonschema_dev_master__defs_json_defs_io_k8s_apimachinery_pkg_apis_meta_v1_ServerAddressByClientCIDR": {
        "description": "ServerAddressByClientCIDR helps the client to determine the server address that they should use, depending on the clientCIDR that they match.",
        "properties": {
          "clientCIDR": {
            "description": "The CIDR with which clients can match their IP to figure out the server address that they should use.",
            "type": "string"
          },
          "serverAddress": {
            "description": "Address of this server, suitable for a client that matches the above CIDR. This can be a hostname, hostname:port, IP or IP:port.",
            "type": "string"
          }
        },
        "required": [
          "clientCIDR",
          "serverAddress"
        ],
        "type": "object"
      }
    },
    "description": "APIVersions lists the versions that are available, to allow clients to discover the API at /api, which is the root path of the legacy v1 API.",
    "properties": {
      "apiVersion": {
        "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
        "type": [
          "string",
          "null"
        ]
      },
      "kind": {
        "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
        "enum": [
          "APIVersions"
        ],
        "type": [
          "string",
          "null"
        ]
      },
      "serverAddressByClientCIDRs": {
        "description": "a map of client CIDR to server address that is serving this group. This is to help clients reach servers in the most network-efficient way possible. Clients can use the appropriate server address as per the CIDR that they match. In case of multiple matches, clients should use the longest matching CIDR. The server returns only those CIDRs that it thinks that the client can match. For example: the master will return an internal IP CIDR only, if the client reaches the server using an internal IP. Server looks at X-Forwarded-For header or X-Real-Ip header or request.RemoteAddr (in that order) to get the client IP.",
        "items": {
          "$ref": "#/definitions/https:__kubernetesjsonschema_dev_master__defs_json_defs_io_k8s_apimachinery_pkg_apis_meta_v1_ServerAddressByClientCIDR"
        },
        "type": [
          "array",
          "null"
        ]
      },
      "versions": {
        "description": "versions are the api versions that are available.",
        "items": {
          "type": [
            "string",
            "null"
          ]
        },
        "type": [
          "array",
          "null"
        ]
      }
    },
    "required": [
      "versions",
      "serverAddressByClientCIDRs"
    ],
    "type": "object",
    "x-kubernetes-group-version-kind": [
      {
        "group": "",
        "kind": "APIVersions",
        "version": "v1"
      }
    ]
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "apiVersion": "v1",
        "kind": "APIVersions",
        "serverAddressByClientCIDRs": [
          {
            "clientCIDR": "10.0.0.0/24",
            "serverAddress": "https://kubernetes-master:8443"
          },
          {
            "clientCIDR": "192.168.1.0/24",
            "serverAddress": "https://kubernetes-master:8443"
          }
        ],
        "versions": [
          "v1"
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on type keyword with an array of types",
      "valid": false,
      "rust_error": "123 is not of types \"null\", \"string\"",
      "python_error": "123 is not of type 'string', 'null'\n\nFailed validating 'type' in schema['properties']['apiVersion']:\n    {'description': 'APIVersion defines the versioned schema of this '\n                    'representation of an object. Servers should convert '\n                    'recognized schemas to the latest internal value, and '\n                    'may reject unrecognized values. More info: '\n                    'https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources',\n     'type': ['string', 'null']}\n\nOn instance['apiVersion']:\n    123",
      "data": {
        "apiVersion": 123,
        "kind": "APIVersions",
        "serverAddressByClientCIDRs": [
          {
            "clientCIDR": "10.0.0.0/24",
            "serverAddress": "https://kubernetes-master:8443"
          },
          {
            "clientCIDR": "192.168.1.0/24",
            "serverAddress": "https://kubernetes-master:8443"
          }
        ],
        "versions": [
          "v1"
        ]
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"serverAddress\" is a required property",
      "python_error": "'serverAddress' is a required property\n\nFailed validating 'required' in schema['properties']['serverAddressByClientCIDRs']['items']:\n    {'description': 'ServerAddressByClientCIDR helps the client to '\n                    'determine the server address that they should use, '\n                    'depending on the clientCIDR that they match.',\n     'properties': {'clientCIDR': {'description': 'The CIDR with which '\n                                                  'clients can match their '\n                                                  'IP to figure out the '\n                                                  'server address that '\n                                                  'they should use.',\n                                   'type': 'string'},\n                    'serverAddress': {'description': 'Address of this '\n                                                     'server, suitable for '\n                                                     'a client that '\n                                        .. (532 more)",
      "data": {
        "apiVersion": "v1",
        "kind": "APIVersions",
        "serverAddressByClientCIDRs": [
          {
            "clientCIDR": "10.0.0.0/24",
            "serverAddress": "https://kubernetes-master:8443"
          },
          {
            "clientCIDR": "192.168.1.0/24"
          }
        ],
        "versions": [
          "v1"
        ]
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"serverAddress\" is a required property",
      "python_error": "'serverAddress' is a required property\n\nFailed validating 'required' in schema['properties']['serverAddressByClientCIDRs']['items']:\n    {'description': 'ServerAddressByClientCIDR helps the client to '\n                    'determine the server address that they should use, '\n                    'depending on the clientCIDR that they match.',\n     'properties': {'clientCIDR': {'description': 'The CIDR with which '\n                                                  'clients can match their '\n                                                  'IP to figure out the '\n                                                  'server address that '\n                                                  'they should use.',\n                                   'type': 'string'},\n                    'serverAddress': {'description': 'Address of this '\n                                                     'server, suitable for '\n                                                     'a client that '\n                                        .. (676 more)",
      "data": {
        "apiVersion": "v1",
        "kind": "APIVersions",
        "serverAddressByClientCIDRs": [
          {
            "clientCIDR": "10.0.0.0/24",
            "serverAddress": "https://kubernetes-master:8443"
          },
          {
            "clientCIDR": "192.168.1.0/33",
            "Invalid CIDR, should be between /8 and /32": "serverAddress",
            "Missing colon after property name": "https://kubernetes-master:8443"
          }
        ],
        "versions": [
          "v1"
        ]
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "apiVersion": "v1",
        "kind": "APIVersions",
        "serverAddressByClientCIDRs": [
          {
            "clientCIDR": "10.0.0.0/24",
            "serverAddress": "https://example.com:8443"
          },
          {
            "clientCIDR": "192.168.1.0/24",
            "serverAddress": "https://localhost:8443"
          }
        ],
        "versions": [
          "v1",
          "v1beta1"
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on type keyword with an array of types",
      "valid": false,
      "rust_error": "12345 is not of type \"string\"",
      "python_error": "12345 is not of type 'string'\n\nFailed validating 'type' in schema['properties']['serverAddressByClientCIDRs']['items']['properties']['clientCIDR']:\n    {'description': 'The CIDR with which clients can match their IP to '\n                    'figure out the server address that they should use.',\n     'type': 'string'}\n\nOn instance['serverAddressByClientCIDRs'][0]['clientCIDR']:\n    12345",
      "data": {
        "apiVersion": "v1",
        "kind": "APIVersions",
        "serverAddressByClientCIDRs": [
          {
            "clientCIDR": 12345,
            "serverAddress": "https://example.com:8443"
          },
          {
            "clientCIDR": "192.168.1.0/24",
            "serverAddress": "https://localhost:8443"
          }
        ],
        "versions": [
          "v1",
          "v1beta1"
        ]
      }
    }
  ]
}