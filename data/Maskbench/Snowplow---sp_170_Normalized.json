{
  "description": "sample Snowplow/sp_170_Normalized.json",
  "meta": {
    "full_size": 2700,
    "stripped_size": 1040,
    "features": [
      "@minmaxInteger",
      "@minmaxLength",
      "@minmaxNumber",
      "additionalProperties"
    ],
    "raw_features": [
      "_boolSchema",
      "maxLength",
      "maximum",
      "minimum",
      "properties",
      "required",
      "type",
      "type:[]",
      "type:boolean",
      "type:integer",
      "type:null",
      "type:number",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "additionalProperties": false,
    "description": "Context Schema for a Roku video event (reflects the Video node: https://developer.roku.com/en-gb/docs/references/scenegraph/media-playback-nodes/video.md)",
    "properties": {
      "contentId": {
        "description": "ID of video provided in content metadata.",
        "maxLength": 255,
        "type": [
          "string",
          "null"
        ]
      },
      "contentTitle": {
        "description": "Title of video provided in content metadata.",
        "maxLength": 65535,
        "type": [
          "string",
          "null"
        ]
      },
      "contentType": {
        "description": "Category of video (e.g., movie, season, series) provided in content metadata.",
        "maxLength": 255,
        "type": [
          "string",
          "null"
        ]
      },
      "contentUrl": {
        "_format": "uri",
        "description": "URL of video provided in content metadata.",
        "maxLength": 65535,
        "type": [
          "string",
          "null"
        ]
      },
      "errorStr": {
        "description": "A diagnostic message indicating a video play error. Refer to the Roku Video documentation for the format of the string.",
        "maxLength": 65535,
        "type": [
          "string",
          "null"
        ]
      },
      "height": {
        "description": "Height of the video play window in pixels. 0 if the play window is set to the height of the entire display screen.",
        "maximum": 65535,
        "minimum": 0,
        "type": "integer"
      },
      "isResumed": {
        "description": "Indicates whether the playback was resumed after trickplay.",
        "type": [
          "boolean",
          "null"
        ]
      },
      "isUnderrun": {
        "description": "Indicates whether the stream was downloaded due to an underrun.",
        "type": [
          "boolean",
          "null"
        ]
      },
      "measuredBitrate": {
        "description": "Measured bitrate (bps) of the network when the stream was selected.",
        "maximum": 2147483647,
        "minimum": 0,
        "type": [
          "integer",
          "null"
        ]
      },
      "streamBitrate": {
        "description": "Current bitrate of the stream.",
        "maximum": 2147483647,
        "minimum": 0,
        "type": [
          "integer",
          "null"
        ]
      },
      "streamFormat": {
        "description": "Container format of video (e.g., mp4, wma, mkv) provided in content metadata.",
        "maxLength": 255,
        "type": [
          "string",
          "null"
        ]
      },
      "streamUrl": {
        "_format": "uri",
        "description": "URL of the current stream.",
        "maxLength": 65535,
        "type": [
          "string",
          "null"
        ]
      },
      "timeToStartStreaming": {
        "description": "Time in seconds from playback being started until the video actually began playing.",
        "maximum": 9007199254740991,
        "minimum": 0,
        "type": [
          "number",
          "null"
        ]
      },
      "videoFormat": {
        "description": "Video codec of the currently playing video stream (e.g., hevc, mpeg2, mpeg4_15).",
        "maxLength": 255,
        "type": [
          "string",
          "null"
        ]
      },
      "videoId": {
        "description": "ID generated when video tracking of the video node was initialized.",
        "maxLength": 255,
        "type": "string"
      },
      "width": {
        "description": "Width of the video play window in pixels. 0 if the play window is set to the width of the entire display screen.",
        "maximum": 65535,
        "minimum": 0,
        "type": "integer"
      }
    },
    "required": [
      "videoId",
      "width",
      "height"
    ],
    "self": {
      "format": "jsonschema",
      "name": "video",
      "vendor": "com.roku",
      "version": "1-0-0"
    },
    "type": "object"
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "contentId": "movie123",
        "contentTitle": "The Shawshank Redemption",
        "contentType": "movie",
        "contentUrl": "https://example.com/movie123.mp4",
        "errorStr": null,
        "height": 1080,
        "isResumed": false,
        "isUnderrun": false,
        "measuredBitrate": 1000000,
        "streamBitrate": 500000,
        "streamFormat": "mp4",
        "streamUrl": "https://example.com/stream123.mp4",
        "timeToStartStreaming": 2.5,
        "videoFormat": "hevc",
        "videoId": "video123",
        "width": 1920
      }
    },
    {
      "description": "llama-70b generated negative; focus on type keyword with an array of types",
      "valid": false,
      "rust_error": "123 is not of types \"null\", \"string\"",
      "python_error": "123 is not of type 'string', 'null'\n\nFailed validating 'type' in schema['properties']['errorStr']:\n    {'description': 'A diagnostic message indicating a video play error. '\n                    'Refer to the Roku Video documentation for the format '\n                    'of the string.',\n     'maxLength': 65535,\n     'type': ['string', 'null']}\n\nOn instance['errorStr']:\n    123",
      "data": {
        "contentId": "movie123",
        "contentTitle": "The Shawshank Redemption",
        "contentType": "movie",
        "contentUrl": "https://example.com/movie123.mp4",
        "errorStr": 123,
        "height": 1080,
        "isResumed": false,
        "isUnderrun": false,
        "measuredBitrate": 1000000,
        "streamBitrate": 500000,
        "streamFormat": "mp4",
        "streamUrl": "https://example.com/stream123.mp4",
        "timeToStartStreaming": 2.5,
        "videoFormat": "hevc",
        "videoId": "video123",
        "width": 1920
      }
    },
    {
      "description": "llama-70b generated negative; focus on minimum keyword or maximum keyword",
      "valid": false,
      "rust_error": "-1 is less than the minimum of 0",
      "python_error": "-1 is less than the minimum of 0\n\nFailed validating 'minimum' in schema['properties']['height']:\n    {'description': 'Height of the video play window in pixels. 0 if the '\n                    'play window is set to the height of the entire '\n                    'display screen.',\n     'maximum': 65535,\n     'minimum': 0,\n     'type': 'integer'}\n\nOn instance['height']:\n    -1",
      "data": {
        "contentId": "movie123",
        "contentTitle": "The Shawshank Redemption",
        "contentType": "movie",
        "contentUrl": "https://example.com/movie123.mp4",
        "errorStr": null,
        "height": -1,
        "isResumed": false,
        "isUnderrun": false,
        "measuredBitrate": 1000000,
        "streamBitrate": 500000,
        "streamFormat": "mp4",
        "streamUrl": "https://example.com/stream123.mp4",
        "timeToStartStreaming": 2.5,
        "videoFormat": "hevc",
        "videoId": "video123",
        "width": 1920
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "Additional properties are not allowed ('invalidProperty' was unexpected)",
      "python_error": "Additional properties are not allowed ('invalidProperty' was unexpected)\n\nFailed validating 'additionalProperties' in schema:\n    {'additionalProperties': False,\n     'description': 'Context Schema for a Roku video event (reflects the '\n                    'Video node: '\n                    'https://developer.roku.com/en-gb/docs/references/scenegraph/media-playback-nodes/video.md)',\n     'properties': {'contentId': {'description': 'ID of video provided in '\n                                                 'content metadata.',\n                                  'maxLength': 255,\n                                  'type': ['string', 'null']},\n                    'contentTitle': {'description': 'Title of video '\n                                                    'provided in content '\n                                                    'metadata.',\n                                     'maxLength': 65535,\n                                     'type': ['string', 'null']},\n                    'contentType': {'descrip.. (6763 more)",
      "data": {
        "contentId": "movie123",
        "contentTitle": "The Shawshank Redemption",
        "contentType": "movie",
        "contentUrl": "https://example.com/movie123.mp4",
        "errorStr": null,
        "height": 1080,
        "isResumed": false,
        "isUnderrun": false,
        "measuredBitrate": 1000000,
        "streamBitrate": 500000,
        "streamFormat": "mp4",
        "streamUrl": "https://example.com/stream123.mp4",
        "timeToStartStreaming": 2.5,
        "videoFormat": "hevc",
        "videoId": "video123",
        "width": 1920,
        "invalidProperty": "invalidValue"
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "65536 is greater than the maximum of 65535",
      "python_error": "65536 is greater than the maximum of 65535\n\nFailed validating 'maximum' in schema['properties']['width']:\n    {'description': 'Width of the video play window in pixels. 0 if the '\n                    'play window is set to the width of the entire display '\n                    'screen.',\n     'maximum': 65535,\n     'minimum': 0,\n     'type': 'integer'}\n\nOn instance['width']:\n    65536",
      "data": {
        "contentId": "movie123",
        "contentTitle": "The Shawshank Redemption",
        "contentType": "movie",
        "contentUrl": "https://example.com/movie123.mp4",
        "errorStr": null,
        "height": 1080,
        "isResumed": false,
        "isUnderrun": false,
        "measuredBitrate": 1000000,
        "streamBitrate": 500000,
        "streamFormat": "mp4",
        "streamUrl": "https://example.com/stream123.mp4",
        "timeToStartStreaming": 2.5,
        "videoFormat": "hevc",
        "videoId": "video123",
        "width": 65536
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "contentId": "movie123",
        "contentTitle": "The Shawshank Redemption",
        "contentType": "movie",
        "contentUrl": "https://example.com/movie123.mp4",
        "errorStr": null,
        "height": 1080,
        "isResumed": false,
        "isUnderrun": false,
        "measuredBitrate": 5000000,
        "streamBitrate": 5000000,
        "streamFormat": "mp4",
        "streamUrl": "https://example.com/movie123.mp4",
        "timeToStartStreaming": 2.5,
        "videoFormat": "hevc",
        "videoId": "1234567890",
        "width": 1920
      }
    },
    {
      "description": "llama-70b generated negative; focus on type keyword with an array of types",
      "valid": false,
      "rust_error": "\"5000000\" is not of types \"integer\", \"null\"",
      "python_error": "'5000000' is not of type 'integer', 'null'\n\nFailed validating 'type' in schema['properties']['measuredBitrate']:\n    {'description': 'Measured bitrate (bps) of the network when the stream '\n                    'was selected.',\n     'maximum': 2147483647,\n     'minimum': 0,\n     'type': ['integer', 'null']}\n\nOn instance['measuredBitrate']:\n    '5000000'",
      "data": {
        "videoId": "1234567890",
        "width": 1920,
        "height": 1080,
        "contentId": "movie123",
        "contentTitle": "The Shawshank Redemption",
        "contentType": "movie",
        "contentUrl": "https://example.com/movie123.mp4",
        "errorStr": null,
        "isResumed": false,
        "isUnderrun": false,
        "measuredBitrate": "5000000",
        "streamBitrate": 5000000,
        "streamFormat": "mp4",
        "streamUrl": "https://example.com/movie123.mp4",
        "timeToStartStreaming": 2.5,
        "videoFormat": "hevc"
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "-1 is less than the minimum of 0",
      "python_error": "Additional properties are not allowed ('extraProperty' was unexpected)\n\nFailed validating 'additionalProperties' in schema:\n    {'additionalProperties': False,\n     'description': 'Context Schema for a Roku video event (reflects the '\n                    'Video node: '\n                    'https://developer.roku.com/en-gb/docs/references/scenegraph/media-playback-nodes/video.md)',\n     'properties': {'contentId': {'description': 'ID of video provided in '\n                                                 'content metadata.',\n                                  'maxLength': 255,\n                                  'type': ['string', 'null']},\n                    'contentTitle': {'description': 'Title of video '\n                                                    'provided in content '\n                                                    'metadata.',\n                                     'maxLength': 65535,\n                                     'type': ['string', 'null']},\n                    'contentType': {'descripti.. (6746 more)",
      "data": {
        "videoId": "1234567890",
        "width": 1920,
        "height": 1080,
        "contentId": "movie123",
        "contentTitle": "The Shawshank Redemption",
        "contentType": "movie",
        "contentUrl": "https://example.com/movie123.mp4",
        "errorStr": null,
        "isResumed": false,
        "isUnderrun": false,
        "measuredBitrate": -1,
        "streamBitrate": 5000000,
        "streamFormat": "mp4",
        "streamUrl": "https://example.com/movie123.mp4",
        "timeToStartStreaming": 2.5,
        "videoFormat": "hevc",
        "extraProperty": true
      }
    }
  ]
}