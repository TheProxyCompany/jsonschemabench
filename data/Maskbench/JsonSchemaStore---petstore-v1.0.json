{
  "description": "sample JsonSchemaStore/petstore-v1.0.json",
  "meta": {
    "full_size": 6558,
    "stripped_size": 6069,
    "features": [
      "$ref",
      "@siblingKeys",
      "additionalProperties",
      "items"
    ],
    "raw_features": [
      "$id",
      "$schema",
      "_boolSchema",
      "_requiredEmpty",
      "definitions",
      "properties",
      "required",
      "type",
      "type:array",
      "type:boolean",
      "type:integer",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$id": "https://json.schemastore.org/petstore-v1.0.json",
    "$ref": "#/definitions/Welcome9",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "definitions": {
      "Welcome9": {
        "type": "object",
        "additionalProperties": true,
        "properties": {
          "config": {
            "$ref": "#/definitions/Config"
          },
          "scenarios": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Scenario"
            }
          }
        },
        "title": "Welcome9"
      },
      "Config": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "http": {
            "$ref": "#/definitions/HTTP"
          },
          "tls": {
            "$ref": "#/definitions/TLS"
          },
          "plugins": {
            "$ref": "#/definitions/Plugins"
          },
          "target": {
            "type": "string"
          },
          "phases": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ConfigPhase"
            }
          },
          "environments": {
            "$ref": "#/definitions/Environments"
          },
          "processor": {
            "type": "string"
          }
        },
        "required": [
          "environments",
          "http",
          "phases",
          "plugins",
          "processor",
          "target",
          "tls"
        ],
        "title": "Config"
      },
      "Environments": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "dev": {
            "$ref": "#/definitions/Dev"
          },
          "qa": {
            "$ref": "#/definitions/Dev"
          }
        },
        "required": [
          "dev",
          "qa"
        ],
        "title": "Environments"
      },
      "Dev": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "target": {
            "type": "string"
          },
          "phases": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/DevPhase"
            }
          }
        },
        "required": [
          "phases",
          "target"
        ],
        "title": "Dev"
      },
      "DevPhase": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "duration": {
            "type": "integer"
          },
          "arrivalRate": {
            "type": "integer"
          }
        },
        "required": [
          "arrivalRate",
          "duration"
        ],
        "title": "DevPhase"
      },
      "HTTP": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "timeout": {
            "type": "integer"
          }
        },
        "required": [
          "timeout"
        ],
        "title": "HTTP"
      },
      "ConfigPhase": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "duration": {
            "type": "integer"
          },
          "arrivalRate": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "arrivalRate",
          "duration",
          "name"
        ],
        "title": "ConfigPhase"
      },
      "Plugins": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "expect": {
            "$ref": "#/definitions/PluginsExpect"
          },
          "publish-metrics": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/PublishMetric"
            }
          },
          "metrics-by-endpoint": {
            "$ref": "#/definitions/MetricsByEndpoint"
          }
        },
        "required": [
          "expect",
          "metrics-by-endpoint",
          "publish-metrics"
        ],
        "title": "Plugins"
      },
      "PluginsExpect": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "outputFormat": {
            "type": "string"
          }
        },
        "required": [
          "outputFormat"
        ],
        "title": "PluginsExpect"
      },
      "MetricsByEndpoint": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "useOnlyRequestNames": {
            "type": "boolean"
          }
        },
        "required": [
          "useOnlyRequestNames"
        ],
        "title": "MetricsByEndpoint"
      },
      "PublishMetric": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string"
          },
          "host": {
            "type": "string"
          },
          "port": {
            "type": "string"
          },
          "prefix": {
            "type": "string"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "event": {
            "$ref": "#/definitions/Event"
          }
        },
        "required": [
          "event",
          "host",
          "port",
          "prefix",
          "tags",
          "type"
        ],
        "title": "PublishMetric"
      },
      "Event": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "title": {
            "type": "string"
          },
          "send": {
            "type": "boolean"
          },
          "status": {
            "type": "string"
          },
          "priority": {
            "type": "string"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "priority",
          "send",
          "status",
          "tags",
          "title"
        ],
        "title": "Event"
      },
      "TLS": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "rejectUnauthorized": {
            "type": "boolean"
          }
        },
        "required": [
          "rejectUnauthorized"
        ],
        "title": "TLS"
      },
      "Scenario": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "flow": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Flow"
            }
          }
        },
        "required": [
          "flow"
        ],
        "title": "Scenario"
      },
      "Flow": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "post": {
            "$ref": "#/definitions/Post"
          },
          "get": {
            "$ref": "#/definitions/Get"
          },
          "delete": {
            "$ref": "#/definitions/Delete"
          },
          "function": {
            "type": "string"
          }
        },
        "required": [],
        "title": "Flow"
      },
      "Delete": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "url": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "headers": {
            "$ref": "#/definitions/DeleteHeaders"
          },
          "expect": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ExpectElement"
            }
          }
        },
        "required": [
          "expect",
          "headers",
          "name",
          "url"
        ],
        "title": "Delete"
      },
      "ExpectElement": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "statusCode": {
            "type": "integer"
          }
        },
        "required": [
          "statusCode"
        ],
        "title": "ExpectElement"
      },
      "DeleteHeaders": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "contentType": {
            "type": "string"
          },
          "accept": {
            "type": "string"
          },
          "api_key": {
            "type": "string"
          }
        },
        "required": [
          "accept",
          "api_key",
          "contentType"
        ],
        "title": "DeleteHeaders"
      },
      "Get": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "url": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "headers": {
            "$ref": "#/definitions/GetHeaders"
          },
          "expect": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ExpectElement"
            }
          },
          "qs": {
            "$ref": "#/definitions/Qs"
          }
        },
        "required": [
          "expect",
          "headers",
          "name",
          "url"
        ],
        "title": "Get"
      },
      "GetHeaders": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "contentType": {
            "type": "string"
          },
          "accept": {
            "type": "string"
          }
        },
        "required": [
          "accept"
        ],
        "title": "GetHeaders"
      },
      "Qs": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        },
        "required": [
          "password",
          "username"
        ],
        "title": "Qs"
      },
      "Post": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "url": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "headers": {
            "$ref": "#/definitions/PostHeaders"
          },
          "json": {
            "$ref": "#/definitions/JSON"
          },
          "expect": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ExpectElement"
            }
          },
          "capture": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Capture"
            }
          }
        },
        "required": [
          "expect",
          "headers",
          "json",
          "name",
          "url"
        ],
        "title": "Post"
      },
      "Capture": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "as": {
            "type": "string"
          },
          "json": {
            "type": "string"
          }
        },
        "required": [
          "as",
          "json"
        ],
        "title": "Capture"
      },
      "PostHeaders": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "accept": {
            "type": "string"
          },
          "Content-Type": {
            "type": "string"
          }
        },
        "required": [
          "Content-Type",
          "accept"
        ],
        "title": "PostHeaders"
      },
      "JSON": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "photoUrls": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "name": {
            "type": "string"
          },
          "id": {
            "type": "integer"
          },
          "category": {
            "$ref": "#/definitions/Category"
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Category"
            }
          },
          "status": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "userStatus": {
            "type": "integer"
          }
        },
        "required": [
          "id"
        ],
        "title": "JSON"
      },
      "Category": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string"
          },
          "id": {
            "type": "integer"
          }
        },
        "required": [
          "id",
          "name"
        ],
        "title": "Category"
      }
    }
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "config": {
          "http": {
            "timeout": 10000
          },
          "tls": {
            "rejectUnauthorized": true
          },
          "plugins": {
            "expect": {
              "outputFormat": "json"
            },
            "publish-metrics": [
              {
                "type": "influxdb",
                "host": "localhost",
                "port": "8086",
                "prefix": "my_prefix",
                "tags": [
                  "tag1",
                  "tag2"
                ],
                "event": {
                  "title": "My Event",
                  "send": true,
                  "status": "success",
                  "priority": "high",
                  "tags": [
                    "tag1",
                    "tag2"
                  ]
                }
              }
            ],
            "metrics-by-endpoint": {
              "useOnlyRequestNames": true
            }
          },
          "target": "https://example.com",
          "phases": [
            {
              "duration": 10,
              "arrivalRate": 10,
              "name": "phase1"
            },
            {
              "duration": 20,
              "arrivalRate": 20,
              "name": "phase2"
            }
          ],
          "environments": {
            "dev": {
              "target": "https://dev.example.com",
              "phases": [
                {
                  "duration": 10,
                  "arrivalRate": 10
                },
                {
                  "duration": 20,
                  "arrivalRate": 20
                }
              ]
            },
            "qa": {
              "target": "https://qa.example.com",
              "phases": [
                {
                  "duration": 10,
                  "arrivalRate": 10
                },
                {
                  "duration": 20,
                  "arrivalRate": 20
                }
              ]
            }
          },
          "processor": "my_processor"
        },
        "scenarios": [
          {
            "flow": [
              {
                "post": {
                  "url": "/users",
                  "name": "create_user",
                  "headers": {
                    "accept": "application/json",
                    "Content-Type": "application/json"
                  },
                  "json": {
                    "id": 1,
                    "username": "user1",
                    "firstName": "John",
                    "lastName": "Doe",
                    "email": "user1@example.com",
                    "password": "password1",
                    "phone": "1234567890",
                    "userStatus": 1
                  },
                  "expect": [
                    {
                      "statusCode": 201
                    }
                  ],
                  "capture": [
                    {
                      "as": "user_id",
                      "json": "$.id"
                    }
                  ]
                }
              },
              {
                "get": {
                  "url": "/users/{user_id}",
                  "name": "get_user",
                  "headers": {
                    "accept": "application/json"
                  },
                  "expect": [
                    {
                      "statusCode": 200
                    }
                  ],
                  "qs": {
                    "username": "user1",
                    "password": "password1"
                  }
                }
              },
              {
                "delete": {
                  "url": "/users/{user_id}",
                  "name": "delete_user",
                  "headers": {
                    "contentType": "application/json",
                    "accept": "application/json",
                    "api_key": "my_api_key"
                  },
                  "expect": [
                    {
                      "statusCode": 204
                    }
                  ]
                }
              }
            ]
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "Additional properties are not allowed ('put' was unexpected)",
      "python_error": "Additional properties are not allowed ('put' was unexpected)\n\nFailed validating 'additionalProperties' in schema['properties']['scenarios']['items']['properties']['flow']['items']:\n    {'type': 'object',\n     'additionalProperties': False,\n     'properties': {'post': {'$ref': '#/definitions/Post'},\n                    'get': {'$ref': '#/definitions/Get'},\n                    'delete': {'$ref': '#/definitions/Delete'},\n                    'function': {'type': 'string'}},\n     'required': [],\n     'title': 'Flow'}\n\nOn instance['scenarios'][0]['flow'][3]:\n    {'put': {'url': '/users/{user_id}',\n             'name': 'update_user',\n             'headers': {'contentType': 'application/json',\n                         'accept': 'application/json',\n                         'api_key': 'my_api_key'},\n             'expect': [{'statusCode': 200}]}}",
      "data": {
        "config": {
          "http": {
            "timeout": 10000
          },
          "tls": {
            "rejectUnauthorized": true
          },
          "plugins": {
            "expect": {
              "outputFormat": "json"
            },
            "publish-metrics": [
              {
                "type": "influxdb",
                "host": "localhost",
                "port": "8086",
                "prefix": "my_prefix",
                "tags": [
                  "tag1",
                  "tag2"
                ],
                "event": {
                  "title": "My Event",
                  "send": true,
                  "status": "success",
                  "priority": "high",
                  "tags": [
                    "tag1",
                    "tag2"
                  ]
                }
              }
            ],
            "metrics-by-endpoint": {
              "useOnlyRequestNames": true
            }
          },
          "target": "https://example.com",
          "phases": [
            {
              "duration": 10,
              "arrivalRate": 10,
              "name": "phase1"
            },
            {
              "duration": 20,
              "arrivalRate": 20,
              "name": "phase2"
            }
          ],
          "environments": {
            "dev": {
              "target": "https://dev.example.com",
              "phases": [
                {
                  "duration": 10,
                  "arrivalRate": 10
                },
                {
                  "duration": 20,
                  "arrivalRate": 20
                }
              ]
            },
            "qa": {
              "target": "https://qa.example.com",
              "phases": [
                {
                  "duration": 10,
                  "arrivalRate": 10
                },
                {
                  "duration": 20,
                  "arrivalRate": 20
                }
              ]
            }
          },
          "processor": "my_processor"
        },
        "scenarios": [
          {
            "flow": [
              {
                "post": {
                  "url": "/users",
                  "name": "create_user",
                  "headers": {
                    "accept": "application/json",
                    "Content-Type": "application/json"
                  },
                  "json": {
                    "id": 1,
                    "username": "user1",
                    "firstName": "John",
                    "lastName": "Doe",
                    "email": "user1@example.com",
                    "password": "password1",
                    "phone": "1234567890",
                    "userStatus": 1
                  },
                  "expect": [
                    {
                      "statusCode": 201
                    }
                  ],
                  "capture": [
                    {
                      "as": "user_id",
                      "json": "$.id"
                    }
                  ]
                }
              },
              {
                "get": {
                  "url": "/users/{user_id}",
                  "name": "get_user",
                  "headers": {
                    "accept": "application/json"
                  },
                  "expect": [
                    {
                      "statusCode": 200
                    }
                  ],
                  "qs": {
                    "username": "user1",
                    "password": "password1"
                  }
                }
              },
              {
                "delete": {
                  "url": "/users/{user_id}",
                  "name": "delete_user",
                  "headers": {
                    "contentType": "application/json",
                    "accept": "application/json",
                    "api_key": "my_api_key"
                  },
                  "expect": [
                    {
                      "statusCode": 204
                    }
                  ]
                }
              },
              {
                "put": {
                  "url": "/users/{user_id}",
                  "name": "update_user",
                  "headers": {
                    "contentType": "application/json",
                    "accept": "application/json",
                    "api_key": "my_api_key"
                  },
                  "expect": [
                    {
                      "statusCode": 200
                    }
                  ]
                }
              }
            ]
          }
        ]
      }
    }
  ]
}