{
  "description": "sample Github_medium/o74450.json",
  "meta": {
    "full_size": 1456,
    "stripped_size": 1385,
    "features": [
      "@minmaxInteger",
      "@minmaxItems",
      "@minmaxLength",
      "items",
      "pattern"
    ],
    "raw_features": [
      "$schema",
      "minItems",
      "minLength",
      "minimum",
      "properties",
      "required",
      "type",
      "type:[]",
      "type:array",
      "type:boolean",
      "type:integer",
      "type:null",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "title": "Meresco Harvester getRepositories Schema",
    "type": "object",
    "properties": {
      "request": {
        "type": "object",
        "properties": {
          "verb": {
            "type": "string",
            "minLength": 1
          },
          "domainId": {
            "type": "string",
            "minLength": 1
          }
        },
        "required": [
          "verb",
          "domainId"
        ]
      },
      "response": {
        "type": "object",
        "properties": {
          "getRepositories": {
            "type": "array",
            "_uniqueItems": true,
            "items": {
              "type": "object",
              "properties": {
                "use": {
                  "type": "boolean"
                },
                "set": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "complete": {
                  "type": "boolean"
                },
                "identifier": {
                  "type": "string",
                  "minLength": 1
                },
                "mappingId": {
                  "type": "string",
                  "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
                },
                "continuous": {
                  "type": [
                    "integer",
                    "null"
                  ]
                },
                "targetId": {
                  "type": "string",
                  "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
                },
                "baseurl": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "shopclosed": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "minItems": 0
                  }
                },
                "maximumIgnore": {
                  "type": "integer",
                  "minimum": 0
                },
                "collection": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "userAgent": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "action": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "repositoryGroupId": {
                  "type": "string",
                  "minLength": 1
                },
                "metadataPrefix": {
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "required": [
                "use",
                "set",
                "complete",
                "identifier",
                "mappingId",
                "continuous",
                "targetId",
                "baseurl",
                "shopclosed",
                "maximumIgnore",
                "collection",
                "action",
                "repositoryGroupId",
                "metadataPrefix"
              ]
            }
          }
        },
        "required": [
          "getRepositories"
        ]
      }
    },
    "required": [
      "request",
      "response"
    ]
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "request": {
          "verb": "GET",
          "domainId": "example-domain-id"
        },
        "response": {
          "getRepositories": [
            {
              "use": true,
              "set": "example-set",
              "complete": false,
              "identifier": "example-identifier",
              "mappingId": "12345678-1234-1234-1234-123456789012",
              "continuous": 10,
              "targetId": "12345678-1234-1234-1234-123456789012",
              "baseurl": "https://example.com",
              "shopclosed": [],
              "maximumIgnore": 0,
              "collection": "example-collection",
              "userAgent": "example-user-agent",
              "action": "example-action",
              "repositoryGroupId": "example-repository-group-id",
              "metadataPrefix": "example-metadata-prefix"
            }
          ]
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on type keyword with an array of types",
      "valid": false,
      "rust_error": "\"10\" is not of types \"integer\", \"null\"",
      "python_error": "'10' is not of type 'integer', 'null'\n\nFailed validating 'type' in schema['properties']['response']['properties']['getRepositories']['items']['properties']['continuous']:\n    {'type': ['integer', 'null']}\n\nOn instance['response']['getRepositories'][0]['continuous']:\n    '10'",
      "data": {
        "request": {
          "verb": "GET",
          "domainId": "example-domain-id"
        },
        "response": {
          "getRepositories": [
            {
              "use": true,
              "set": "example-set",
              "complete": false,
              "identifier": "example-identifier",
              "mappingId": "12345678-1234-1234-1234-123456789012",
              "continuous": "10",
              "targetId": "12345678-1234-1234-1234-123456789012",
              "baseurl": "https://example.com",
              "shopclosed": [],
              "maximumIgnore": 0,
              "collection": "example-collection",
              "userAgent": "example-user-agent",
              "action": "example-action",
              "repositoryGroupId": "example-repository-group-id",
              "metadataPrefix": "example-metadata-prefix"
            }
          ]
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on minimum keyword",
      "valid": false,
      "rust_error": "-1 is less than the minimum of 0",
      "python_error": "-1 is less than the minimum of 0\n\nFailed validating 'minimum' in schema['properties']['response']['properties']['getRepositories']['items']['properties']['maximumIgnore']:\n    {'type': 'integer', 'minimum': 0}\n\nOn instance['response']['getRepositories'][0]['maximumIgnore']:\n    -1",
      "data": {
        "request": {
          "verb": "GET",
          "domainId": "example-domain-id"
        },
        "response": {
          "getRepositories": [
            {
              "use": true,
              "set": "example-set",
              "complete": false,
              "identifier": "example-identifier",
              "mappingId": "12345678-1234-1234-1234-123456789012",
              "continuous": -1,
              "targetId": "12345678-1234-1234-1234-123456789012",
              "baseurl": "https://example.com",
              "shopclosed": [],
              "maximumIgnore": -1,
              "collection": "example-collection",
              "userAgent": "example-user-agent",
              "action": "example-action",
              "repositoryGroupId": "example-repository-group-id",
              "metadataPrefix": "example-metadata-prefix"
            }
          ]
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on minLength keyword",
      "valid": false,
      "rust_error": "\"\" is shorter than 1 character",
      "python_error": "'' should be non-empty\n\nFailed validating 'minLength' in schema['properties']['request']['properties']['verb']:\n    {'type': 'string', 'minLength': 1}\n\nOn instance['request']['verb']:\n    ''",
      "data": {
        "request": {
          "verb": "",
          "domainId": "example-domain-id"
        },
        "response": {
          "getRepositories": [
            {
              "use": true,
              "set": "example-set",
              "complete": false,
              "identifier": "",
              "mappingId": "12345678-1234-1234-1234-123456789012",
              "continuous": 10,
              "targetId": "12345678-1234-1234-1234-123456789012",
              "baseurl": "https://example.com",
              "shopclosed": [],
              "maximumIgnore": 0,
              "collection": "example-collection",
              "userAgent": "example-user-agent",
              "action": "example-action",
              "repositoryGroupId": "",
              "metadataPrefix": "example-metadata-prefix"
            }
          ]
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on pattern keyword",
      "valid": false,
      "rust_error": "\"Invalid-Id\" does not match \"^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$\"",
      "python_error": "'Invalid-Id' does not match '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'\n\nFailed validating 'pattern' in schema['properties']['response']['properties']['getRepositories']['items']['properties']['mappingId']:\n    {'type': 'string',\n     'pattern': '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'}\n\nOn instance['response']['getRepositories'][0]['mappingId']:\n    'Invalid-Id'",
      "data": {
        "request": {
          "verb": "GET",
          "domainId": "example-domain-id"
        },
        "response": {
          "getRepositories": [
            {
              "use": true,
              "set": "example-set",
              "complete": false,
              "identifier": "example-identifier",
              "mappingId": "Invalid-Id",
              "continuous": 10,
              "targetId": "12345678-1234-1234-1234-123456789012",
              "baseurl": "https://example.com",
              "shopclosed": [],
              "maximumIgnore": 0,
              "collection": "example-collection",
              "userAgent": "example-user-agent",
              "action": "example-action",
              "repositoryGroupId": "example-repository-group-id",
              "metadataPrefix": "example-metadata-prefix"
            }
          ]
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on minItems keyword",
      "valid": false,
      "rust_error": "null is not of type \"array\"",
      "python_error": "None is not of type 'array'\n\nFailed validating 'type' in schema['properties']['response']['properties']['getRepositories']['items']['properties']['shopclosed']:\n    {'type': 'array', 'items': {'type': 'string', 'minItems': 0}}\n\nOn instance['response']['getRepositories'][0]['shopclosed']:\n    None",
      "data": {
        "request": {
          "verb": "GET",
          "domainId": "example-domain-id"
        },
        "response": {
          "getRepositories": [
            {
              "use": true,
              "set": "example-set",
              "complete": false,
              "identifier": "example-identifier",
              "mappingId": "12345678-1234-1234-1234-123456789012",
              "continuous": 10,
              "targetId": "12345678-1234-1234-1234-123456789012",
              "baseurl": "https://example.com",
              "shopclosed": null,
              "maximumIgnore": 0,
              "collection": "example-collection",
              "userAgent": "example-user-agent",
              "action": "example-action",
              "repositoryGroupId": "example-repository-group-id",
              "metadataPrefix": "example-metadata-prefix"
            }
          ]
        }
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"\" is shorter than 1 character",
      "python_error": "'' should be non-empty\n\nFailed validating 'minLength' in schema['properties']['request']['properties']['verb']:\n    {'type': 'string', 'minLength': 1}\n\nOn instance['request']['verb']:\n    ''",
      "data": {
        "request": {
          "verb": "",
          "domainId": "example-domain-id"
        },
        "response": {
          "getRepositories": [
            {
              "use": true,
              "set": "example-set",
              "complete": false,
              "identifier": "example-identifier",
              "mappingId": "12345678-1234-1234-1234-123456789012",
              "continuous": 10,
              "targetId": "12345678-1234-1234-1234-123456789012",
              "baseurl": "https://example.com",
              "shopclosed": [],
              "maximumIgnore": 0,
              "collection": "example-collection",
              "userAgent": "example-user-agent",
              "action": "example-action",
              "repositoryGroupId": "example-repository-group-id",
              "metadataPrefix": "example-metadata-prefix"
            }
          ]
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on pattern keyword",
      "valid": false,
      "rust_error": "\"invalid-mapping-id\" does not match \"^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$\"",
      "python_error": "'invalid-target-id' does not match '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'\n\nFailed validating 'pattern' in schema['properties']['response']['properties']['getRepositories']['items']['properties']['targetId']:\n    {'type': 'string',\n     'pattern': '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'}\n\nOn instance['response']['getRepositories'][0]['targetId']:\n    'invalid-target-id'",
      "data": {
        "request": {
          "verb": "GET",
          "domainId": "example-domain-id"
        },
        "response": {
          "getRepositories": [
            {
              "use": true,
              "set": "example-set",
              "complete": false,
              "identifier": "example-identifier",
              "mappingId": "invalid-mapping-id",
              "continuous": 10,
              "targetId": "invalid-target-id",
              "baseurl": "https://example.com",
              "shopclosed": [],
              "maximumIgnore": 0,
              "collection": "example-collection",
              "userAgent": "example-user-agent",
              "action": "example-action",
              "repositoryGroupId": "example-repository-group-id",
              "metadataPrefix": "example-metadata-prefix"
            }
          ]
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on minLength keyword",
      "valid": false,
      "rust_error": "\"\" is shorter than 1 character",
      "python_error": "'' should be non-empty\n\nFailed validating 'minLength' in schema['properties']['request']['properties']['verb']:\n    {'type': 'string', 'minLength': 1}\n\nOn instance['request']['verb']:\n    ''",
      "data": {
        "request": {
          "verb": "",
          "domainId": "example-domain-id"
        },
        "response": {
          "getRepositories": [
            {
              "use": true,
              "set": "example-set",
              "complete": false,
              "identifier": "",
              "mappingId": "12345678-1234-1234-1234-123456789012",
              "continuous": 10,
              "targetId": "12345678-1234-1234-1234-123456789012",
              "baseurl": "https://example.com",
              "shopclosed": [],
              "maximumIgnore": 0,
              "collection": "example-collection",
              "userAgent": "example-user-agent",
              "action": "example-action",
              "repositoryGroupId": "example-repository-group-id",
              "metadataPrefix": "example-metadata-prefix"
            }
          ]
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on type keyword with an array of types",
      "valid": false,
      "rust_error": "123 is not of types \"null\", \"string\"",
      "python_error": "'repositoryGroupId' is a required property\n\nFailed validating 'required' in schema['properties']['response']['properties']['getRepositories']['items']:\n    {'type': 'object',\n     'properties': {'use': {'type': 'boolean'},\n                    'set': {'type': ['string', 'null']},\n                    'complete': {'type': 'boolean'},\n                    'identifier': {'type': 'string', 'minLength': 1},\n                    'mappingId': {'type': 'string',\n                                  'pattern': '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'},\n                    'continuous': {'type': ['integer', 'null']},\n                    'targetId': {'type': 'string',\n                                 'pattern': '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'},\n                    'baseurl': {'type': ['string', 'null']},\n                    'shopclosed': {'type': 'array',\n                                   'items': {'type': 'string',\n                        .. (1547 more)",
      "data": {
        "request": {
          "verb": "GET",
          "domainId": "example-domain-id"
        },
        "response": {
          "getRepositories": [
            {
              "use": true,
              "set": "example-set",
              "complete": false,
              "identifier": "example-identifier",
              "mappingId": "12345678-1234-1234-1234-123456789012",
              "continuous": 10,
              "targetId": "12345678-1234-1234-1234-123456789012",
              "baseurl": "https://example.com",
              "shopclosed": [],
              "maximumIgnore": 0,
              "collection": "example-collection",
              "userAgent": "example-user-agent",
              "action": 123,
              "changed action to integer": "repositoryGroupId",
              "removed quotes around repositoryGroupId": "example-repository-group-id",
              "metadataPrefix": "example-metadata-prefix"
            }
          ]
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on minItems keyword",
      "valid": false,
      "rust_error": "{} is not of type \"array\"",
      "python_error": "{} is not of type 'array'\n\nFailed validating 'type' in schema['properties']['response']['properties']['getRepositories']['items']['properties']['shopclosed']:\n    {'type': 'array', 'items': {'type': 'string', 'minItems': 0}}\n\nOn instance['response']['getRepositories'][0]['shopclosed']:\n    {}",
      "data": {
        "request": {
          "verb": "GET",
          "domainId": "example-domain-id"
        },
        "response": {
          "getRepositories": [
            {
              "use": true,
              "set": "example-set",
              "complete": false,
              "identifier": "example-identifier",
              "mappingId": "12345678-1234-1234-1234-123456789012",
              "continuous": 10,
              "targetId": "12345678-1234-1234-1234-123456789012",
              "baseurl": "https://example.com",
              "shopclosed": {},
              "maximumIgnore": 0,
              "collection": "example-collection",
              "userAgent": "example-user-agent",
              "action": "example-action",
              "repositoryGroupId": "example-repository-group-id",
              "metadataPrefix": "example-metadata-prefix"
            }
          ]
        }
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"\" is shorter than 1 character",
      "python_error": "'' should be non-empty\n\nFailed validating 'minLength' in schema['properties']['request']['properties']['verb']:\n    {'type': 'string', 'minLength': 1}\n\nOn instance['request']['verb']:\n    ''",
      "data": {
        "request": {
          "verb": "",
          "domainId": "example-domain-id"
        },
        "response": {
          "getRepositories": [
            {
              "use": true,
              "set": "example-set",
              "complete": false,
              "identifier": "",
              "mappingId": "12345678-1234-1234-1234-123456789012",
              "continuous": 10,
              "targetId": "12345678-1234-1234-1234-123456789012",
              "baseurl": "https://example.com",
              "shopclosed": [],
              "maximumIgnore": -1,
              "collection": "example-collection",
              "userAgent": "example-user-agent",
              "action": "example-action",
              "repositoryGroupId": "example-repository-group-id",
              "metadataPrefix": "example-metadata-prefix"
            }
          ]
        }
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "request": {
          "verb": "GET",
          "domainId": "example-domain"
        },
        "response": {
          "getRepositories": [
            {
              "use": true,
              "set": "example-set",
              "complete": false,
              "identifier": "example-identifier",
              "mappingId": "12345678-1234-1234-1234-123456789012",
              "continuous": 3600,
              "targetId": "12345678-1234-1234-1234-123456789012",
              "baseurl": "https://example.com",
              "shopclosed": [],
              "maximumIgnore": 5,
              "collection": "example-collection",
              "userAgent": "Meresco Harvester",
              "action": "harvest",
              "repositoryGroupId": "example-repository-group",
              "metadataPrefix": "oai_dc"
            }
          ]
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on pattern keyword",
      "valid": false,
      "rust_error": "\"invalid-mapping-id\" does not match \"^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$\"",
      "python_error": "'invalid-mapping-id' does not match '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'\n\nFailed validating 'pattern' in schema['properties']['response']['properties']['getRepositories']['items']['properties']['mappingId']:\n    {'type': 'string',\n     'pattern': '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'}\n\nOn instance['response']['getRepositories'][0]['mappingId']:\n    'invalid-mapping-id'",
      "data": {
        "request": {
          "verb": "GET",
          "domainId": "example-domain"
        },
        "response": {
          "getRepositories": [
            {
              "use": true,
              "set": "example-set",
              "complete": false,
              "identifier": "example-identifier",
              "mappingId": "invalid-mapping-id",
              "continuous": 3600,
              "targetId": "12345678-1234-1234-1234-123456789012",
              "baseurl": "https://example.com",
              "shopclosed": [],
              "maximumIgnore": 5,
              "collection": "example-collection",
              "userAgent": "Meresco Harvester",
              "action": "harvest",
              "repositoryGroupId": "example-repository-group",
              "metadataPrefix": "oai_dc"
            }
          ]
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on minimum keyword",
      "valid": false,
      "rust_error": "\"\" is shorter than 1 character",
      "python_error": "'' should be non-empty\n\nFailed validating 'minLength' in schema['properties']['request']['properties']['verb']:\n    {'type': 'string', 'minLength': 1}\n\nOn instance['request']['verb']:\n    ''",
      "data": {
        "request": {
          "verb": "",
          "domainId": "example-domain"
        },
        "response": {
          "getRepositories": [
            {
              "use": true,
              "set": "example-set",
              "complete": false,
              "identifier": "",
              "mappingId": "12345678-1234-1234-1234-123456789012",
              "continuous": 3600,
              "targetId": "12345678-1234-1234-1234-123456789012",
              "baseurl": "https://example.com",
              "shopclosed": [],
              "maximumIgnore": 5,
              "collection": "example-collection",
              "userAgent": "Meresco Harvester",
              "action": "harvest",
              "repositoryGroupId": "",
              "metadataPrefix": "oai_dc"
            }
          ]
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on type keyword with an array of types",
      "valid": false,
      "rust_error": "1 is not of types \"null\", \"string\"",
      "python_error": "1 is not of type 'string', 'null'\n\nFailed validating 'type' in schema['properties']['response']['properties']['getRepositories']['items']['properties']['set']:\n    {'type': ['string', 'null']}\n\nOn instance['response']['getRepositories'][0]['set']:\n    1",
      "data": {
        "request": {
          "verb": "GET",
          "domainId": "example-domain"
        },
        "response": {
          "getRepositories": [
            {
              "use": true,
              "set": 1,
              "complete": false,
              "identifier": "example-identifier",
              "mappingId": "12345678-1234-1234-1234-123456789012",
              "continuous": 3600,
              "targetId": "12345678-1234-1234-1234-123456789012",
              "baseurl": "https://example.com",
              "shopclosed": [],
              "maximumIgnore": 5,
              "collection": "example-collection",
              "userAgent": "Meresco Harvester",
              "action": "harvest",
              "repositoryGroupId": "example-repository-group",
              "metadataPrefix": "oai_dc"
            }
          ]
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on minLength keyword",
      "valid": false,
      "rust_error": "\"\" is shorter than 1 character",
      "python_error": "'' should be non-empty\n\nFailed validating 'minLength' in schema['properties']['request']['properties']['verb']:\n    {'type': 'string', 'minLength': 1}\n\nOn instance['request']['verb']:\n    ''",
      "data": {
        "request": {
          "verb": "",
          "domainId": "example-domain"
        },
        "response": {
          "getRepositories": [
            {
              "use": true,
              "set": "example-set",
              "complete": false,
              "identifier": "",
              "mappingId": "12345678-1234-1234-1234-123456789012",
              "continuous": 3600,
              "targetId": "12345678-1234-1234-1234-123456789012",
              "baseurl": "https://example.com",
              "shopclosed": [],
              "maximumIgnore": 5,
              "collection": "example-collection",
              "userAgent": "Meresco Harvester",
              "action": "harvest",
              "repositoryGroupId": "example-repository-group",
              "metadataPrefix": "oai_dc"
            }
          ]
        }
      }
    }
  ]
}