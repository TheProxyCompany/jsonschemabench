{
  "description": "sample Kubernetes/kb_124_Normalized.json",
  "meta": {
    "full_size": 1025,
    "stripped_size": 286,
    "features": [
      "format",
      "format:int32"
    ],
    "raw_features": [
      "properties",
      "required",
      "type",
      "type:[]",
      "type:integer",
      "type:null",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "description": "ContainerPort represents a network port in a single container.",
    "properties": {
      "containerPort": {
        "description": "Number of port to expose on the pod's IP address. This must be a valid port number, 0 < x < 65536.",
        "format": "int32",
        "type": [
          "integer",
          "null"
        ]
      },
      "hostIP": {
        "description": "What host IP to bind the external port to.",
        "type": [
          "string",
          "null"
        ]
      },
      "hostPort": {
        "description": "Number of port to expose on the host. If specified, this must be a valid port number, 0 < x < 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this.",
        "format": "int32",
        "type": [
          "integer",
          "null"
        ]
      },
      "name": {
        "description": "If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services.",
        "type": [
          "string",
          "null"
        ]
      },
      "protocol": {
        "description": "Protocol for port. Must be UDP, TCP, or SCTP. Defaults to \"TCP\".",
        "type": [
          "string",
          "null"
        ]
      }
    },
    "required": [
      "containerPort"
    ],
    "type": "object"
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "containerPort": 8080,
        "hostIP": "192.168.1.100",
        "hostPort": 8081,
        "name": "http",
        "protocol": "TCP"
      }
    },
    {
      "description": "llama-70b generated negative; focus on type keyword with an array of types",
      "valid": false,
      "rust_error": "\"8080\" is not of types \"integer\", \"null\"",
      "python_error": "'8080' is not of type 'integer', 'null'\n\nFailed validating 'type' in schema['properties']['containerPort']:\n    {'description': \"Number of port to expose on the pod's IP address. \"\n                    'This must be a valid port number, 0 < x < 65536.',\n     'format': 'int32',\n     'type': ['integer', 'null']}\n\nOn instance['containerPort']:\n    '8080'",
      "data": {
        "containerPort": "8080",
        "hostIP": "192.168.1.100",
        "hostPort": 8081,
        "name": "http",
        "protocol": "TCP"
      }
    },
    {
      "description": "llama-70b generated negative; focus on type keyword with an array of types",
      "valid": false,
      "rust_error": "true is not of types \"integer\", \"null\"",
      "python_error": "True is not of type 'integer', 'null'\n\nFailed validating 'type' in schema['properties']['containerPort']:\n    {'description': \"Number of port to expose on the pod's IP address. \"\n                    'This must be a valid port number, 0 < x < 65536.',\n     'format': 'int32',\n     'type': ['integer', 'null']}\n\nOn instance['containerPort']:\n    True",
      "data": {
        "containerPort": true,
        "hostIP": "192.168.1.100",
        "hostPort": 8081,
        "name": "http",
        "protocol": "TCP"
      }
    }
  ]
}