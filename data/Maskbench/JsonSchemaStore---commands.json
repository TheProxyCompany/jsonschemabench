{
  "description": "sample JsonSchemaStore/commands.json",
  "meta": {
    "full_size": 1146,
    "stripped_size": 680,
    "features": [
      "$ref",
      "additionalProperties",
      "additionalProperties:object",
      "items"
    ],
    "raw_features": [
      "$schema",
      "definitions",
      "id",
      "properties",
      "required",
      "type",
      "type:array",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "definitions": {
      "commands": {
        "type": "object",
        "description": "The friendly name of the command.",
        "required": [
          "fileName"
        ],
        "properties": {
          "fileName": {
            "type": "string",
            "description": "The name of the executable file name. Example: \"cmd.exe\"."
          },
          "workingDirectory": {
            "type": "string",
            "description": "Specify a relative or absolute directory path."
          },
          "arguments": {
            "type": "string",
            "description": "The arguments to pass to the executable file."
          }
        }
      },
      "vsbindings": {
        "type": "array",
        "description": "A Visual Studio event that a command can be bound to.",
        "items": {
          "type": "string"
        }
      }
    },
    "description": "Schema for bundleconfig.json files",
    "id": "https://json.schemastore.org/commands.json",
    "properties": {
      "commands": {
        "description": "A list of commands.",
        "additionalProperties": {
          "$ref": "#/definitions/commands"
        }
      },
      "-vs-binding": {
        "type": "object",
        "description": "Specify any Visual Studio event bindings.",
        "properties": {
          "AfterBuild": {
            "$ref": "#/definitions/vsbindings"
          },
          "BeforeBuild": {
            "$ref": "#/definitions/vsbindings"
          },
          "Clean": {
            "$ref": "#/definitions/vsbindings"
          },
          "ProjectOpen": {
            "$ref": "#/definitions/vsbindings"
          }
        }
      }
    },
    "type": "object"
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "commands": {
          "build": {
            "fileName": "cmd.exe",
            "workingDirectory": "C:\\Projects\\MyProject",
            "arguments": "/c build.cmd"
          },
          "test": {
            "fileName": "dotnet.exe",
            "arguments": "test"
          }
        },
        "-vs-binding": {
          "AfterBuild": [
            "build"
          ],
          "BeforeBuild": [
            "clean"
          ],
          "Clean": [
            "clean"
          ],
          "ProjectOpen": [
            "init"
          ]
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on additionalProperties keyword with an object schema",
      "valid": false,
      "rust_error": "\"fileName\" is a required property",
      "python_error": "'fileName' is a required property\n\nFailed validating 'required' in schema['properties']['commands']['additionalProperties']:\n    {'type': 'object',\n     'description': 'The friendly name of the command.',\n     'required': ['fileName'],\n     'properties': {'fileName': {'type': 'string',\n                                 'description': 'The name of the '\n                                                'executable file name. '\n                                                'Example: \"cmd.exe\".'},\n                    'workingDirectory': {'type': 'string',\n                                         'description': 'Specify a '\n                                                        'relative or '\n                                                        'absolute '\n                                                        'directory path.'},\n                    'arguments': {'type': 'string',\n                                  'description': 'The arguments to pass to '\n                                                 'the.. (99 more)",
      "data": {
        "commands": {
          "build": {
            "fileName": "cmd.exe",
            "workingDirectory": "C:\\Projects\\MyProject",
            "arguments": "/c build.cmd"
          },
          "test": {
            "fileName": "dotnet.exe",
            "arguments": "test"
          },
          "invalid": {
            "invalidProperty": "Invalid Value"
          }
        },
        "-vs-binding": {
          "AfterBuild": [
            "build"
          ],
          "BeforeBuild": [
            "clean"
          ],
          "Clean": [
            "clean"
          ],
          "ProjectOpen": [
            "init"
          ],
          "InvalidEvent": [
            "Invalid Event"
          ]
        }
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"fileName\" is a required property",
      "python_error": "'fileName' is a required property\n\nFailed validating 'required' in schema['properties']['commands']['additionalProperties']:\n    {'type': 'object',\n     'description': 'The friendly name of the command.',\n     'required': ['fileName'],\n     'properties': {'fileName': {'type': 'string',\n                                 'description': 'The name of the '\n                                                'executable file name. '\n                                                'Example: \"cmd.exe\".'},\n                    'workingDirectory': {'type': 'string',\n                                         'description': 'Specify a '\n                                                        'relative or '\n                                                        'absolute '\n                                                        'directory path.'},\n                    'arguments': {'type': 'string',\n                                  'description': 'The arguments to pass to '\n                                                 'the.. (81 more)",
      "data": {
        "commands": {
          "build": {
            "fileName": "cmd.exe",
            "workingDirectory": "C:\\Projects\\MyProject",
            "arguments": "/c build.cmd"
          },
          "test": {
            "arguments": "test"
          }
        },
        "-vs-binding": {
          "AfterBuild": [
            "build"
          ],
          "BeforeBuild": [
            "clean"
          ],
          "Clean": [
            "clean"
          ],
          "ProjectOpen": [
            "init"
          ]
        }
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "123 is not of type \"string\"",
      "python_error": "123 is not of type 'string'\n\nFailed validating 'type' in schema['properties']['commands']['additionalProperties']['properties']['fileName']:\n    {'type': 'string',\n     'description': 'The name of the executable file name. Example: '\n                    '\"cmd.exe\".'}\n\nOn instance['commands']['test']['fileName']:\n    123",
      "data": {
        "commands": {
          "build": {
            "fileName": "cmd.exe",
            "workingDirectory": "C:\\Projects\\MyProject",
            "arguments": "/c build.cmd"
          },
          "test": {
            "fileName": 123,
            "arguments": "test"
          }
        },
        "-vs-binding": {
          "AfterBuild": [
            "build"
          ],
          "BeforeBuild": [
            "clean"
          ],
          "Clean": [
            "clean"
          ],
          "ProjectOpen": [
            "init"
          ]
        }
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "commands": {
          "build": {
            "fileName": "cmd.exe",
            "workingDirectory": "C:\\Projects\\MyProject",
            "arguments": "/c build.bat"
          },
          "clean": {
            "fileName": "cmd.exe",
            "workingDirectory": "C:\\Projects\\MyProject",
            "arguments": "/c clean.bat"
          }
        },
        "-vs-binding": {
          "AfterBuild": [
            "build"
          ],
          "BeforeBuild": [
            "clean"
          ]
        }
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "123 is not of type \"string\"",
      "python_error": "123 is not of type 'string'\n\nFailed validating 'type' in schema['properties']['commands']['additionalProperties']['properties']['fileName']:\n    {'type': 'string',\n     'description': 'The name of the executable file name. Example: '\n                    '\"cmd.exe\".'}\n\nOn instance['commands']['build']['fileName']:\n    123",
      "data": {
        "commands": {
          "build": {
            "fileName": 123,
            "workingDirectory": "C:\\Projects\\MyProject",
            "arguments": "/c build.bat"
          },
          "clean": {
            "fileName": "cmd.exe",
            "workingDirectory": "C:\\Projects\\MyProject",
            "arguments": "/c clean.bat"
          }
        },
        "-vs-binding": {
          "AfterBuild": [
            "non_existent_command"
          ],
          "BeforeBuild": [
            "clean"
          ]
        }
      }
    }
  ]
}