{
  "description": "sample Github_easy/o81595.json",
  "meta": {
    "full_size": 479,
    "stripped_size": 479,
    "features": [
      "additionalProperties",
      "items"
    ],
    "raw_features": [
      "$schema",
      "_boolSchema",
      "properties",
      "required",
      "type",
      "type:array",
      "type:boolean",
      "type:number",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "type": "object",
    "properties": {
      "speaker": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "postedSlides": {
            "type": "boolean"
          },
          "rating": {
            "type": "number"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "additionalProperties": false,
        "required": [
          "firstName",
          "lastName",
          "email",
          "postedSlides",
          "rating",
          "tags"
        ]
      }
    },
    "additionalProperties": false,
    "required": [
      "speaker"
    ]
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "speaker": {
          "firstName": "John",
          "lastName": "Doe",
          "email": "john.doe@example.com",
          "postedSlides": true,
          "rating": 4.5,
          "tags": [
            "speaker",
            "presenter",
            "lecturer"
          ]
        }
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "123 is not of type \"string\"",
      "python_error": "Additional properties are not allowed ('extraProperty' was unexpected)\n\nFailed validating 'additionalProperties' in schema['properties']['speaker']:\n    {'type': 'object',\n     'properties': {'firstName': {'type': 'string'},\n                    'lastName': {'type': 'string'},\n                    'email': {'type': 'string'},\n                    'postedSlides': {'type': 'boolean'},\n                    'rating': {'type': 'number'},\n                    'tags': {'type': 'array', 'items': {'type': 'string'}}},\n     'additionalProperties': False,\n     'required': ['firstName',\n                  'lastName',\n                  'email',\n                  'postedSlides',\n                  'rating',\n                  'tags']}\n\nOn instance['speaker']:\n    {'firstName': 'John',\n     'lastName': 'Doe',\n     'email': 'john.doe@example.com',\n     'postedSlides': True,\n     'rating': 4.5,\n     'tags': ['speaker', 'presenter', 123],\n     'extraProperty': 'Invalid'}",
      "data": {
        "speaker": {
          "firstName": "John",
          "lastName": "Doe",
          "email": "john.doe@example.com",
          "postedSlides": true,
          "rating": 4.5,
          "tags": [
            "speaker",
            "presenter",
            123
          ],
          "extraProperty": "Invalid"
        }
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "123 is not of type \"string\"",
      "python_error": "123 is not of type 'string'\n\nFailed validating 'type' in schema['properties']['speaker']['properties']['tags']['items']:\n    {'type': 'string'}\n\nOn instance['speaker']['tags'][2]:\n    123",
      "data": {
        "speaker": {
          "firstName": "John",
          "lastName": "Doe",
          "email": "john.doe@example.com",
          "postedSlides": true,
          "rating": 4.5,
          "tags": [
            "speaker",
            "presenter",
            123
          ]
        }
      }
    }
  ]
}