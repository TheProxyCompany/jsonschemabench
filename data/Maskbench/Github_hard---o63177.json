{
  "description": "sample Github_hard/o63177.json",
  "meta": {
    "full_size": 2126,
    "stripped_size": 2126,
    "features": [
      "items"
    ],
    "raw_features": [
      "$schema",
      "properties",
      "required",
      "type",
      "type:[]",
      "type:array",
      "type:boolean",
      "type:integer",
      "type:null",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "type": "object",
    "properties": {
      "logo": {
        "type": "string"
      },
      "key": {
        "type": "string"
      },
      "label": {
        "type": "string"
      },
      "maintainer": {
        "type": "string"
      },
      "image": {
        "type": "object",
        "properties": {
          "registry": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "name",
          "tags"
        ]
      },
      "display": {
        "type": "string"
      },
      "access": {
        "type": "string"
      },
      "description": {
        "type": "string"
      },
      "depends": {
        "type": [
          "array",
          "null"
        ],
        "items": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string"
            },
            "required": {
              "type": "boolean"
            },
            "useFrom": {
              "type": "string"
            }
          },
          "required": [
            "key",
            "required"
          ]
        }
      },
      "config": {
        "type": [
          "array",
          "null"
        ],
        "items": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "value": {
              "type": "string"
            },
            "label": {
              "type": "string"
            },
            "canOverride": {
              "type": "boolean"
            },
            "isPassword": {
              "type": "boolean"
            }
          },
          "required": [
            "name",
            "value"
          ]
        }
      },
      "command": {
        "type": [
          "array",
          "null"
        ],
        "items": {
          "type": "string"
        }
      },
      "args": {
        "type": [
          "array",
          "null"
        ],
        "items": {
          "type": "string"
        }
      },
      "ports": {
        "type": [
          "array",
          "null"
        ],
        "items": {
          "type": "object",
          "properties": {
            "port": {
              "type": "integer"
            },
            "protocol": {
              "type": "string"
            }
          },
          "required": [
            "port",
            "protocol"
          ]
        }
      },
      "repositories": {
        "type": [
          "array",
          "null"
        ],
        "items": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string"
            },
            "type": {
              "type": "string"
            }
          },
          "required": [
            "url",
            "type"
          ]
        }
      },
      "developerEnvironment": {
        "type": "string"
      },
      "volumeMounts": {
        "type": [
          "array",
          "null"
        ],
        "items": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string"
            },
            "mountPath": {
              "type": "string"
            }
          },
          "required": [
            "mountPath"
          ]
        }
      },
      "readinessProbe": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "path": {
            "type": "string"
          },
          "port": {
            "type": "integer"
          },
          "initialDelay": {
            "type": "integer"
          },
          "timeout": {
            "type": "integer"
          }
        },
        "required": [
          "type",
          "path",
          "port",
          "initialDelay",
          "timeout"
        ]
      },
      "resourceLimits": {
        "type": "object",
        "properties": {
          "cpuMax": {
            "type": "integer"
          },
          "cpuDefault": {
            "type": "integer"
          },
          "memMax": {
            "type": "integer"
          },
          "memDefault": {
            "type": "integer"
          }
        },
        "required": [
          "cpuMax",
          "cpuDefault",
          "memMax",
          "memDefault"
        ]
      },
      "tags": {
        "type": [
          "array",
          "null"
        ],
        "items": {
          "type": "string"
        }
      }
    },
    "required": [
      "key",
      "label",
      "image",
      "description",
      "resourceLimits"
    ]
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "logo": "https://example.com/logo.png",
        "key": "example-service",
        "label": "Example Service",
        "maintainer": "John Doe",
        "image": {
          "registry": "docker.io",
          "name": "example-service",
          "tags": [
            "latest",
            "v1.0.0"
          ]
        },
        "display": "Example Service",
        "access": "public",
        "description": "This is an example service.",
        "depends": [
          {
            "key": "example-dependency",
            "required": true,
            "useFrom": "example-dependency"
          }
        ],
        "config": [
          {
            "name": "EXAMPLE_CONFIG",
            "value": "example-value",
            "label": "Example Config",
            "canOverride": true,
            "isPassword": false
          }
        ],
        "command": [
          "example-command"
        ],
        "args": [
          "--example-arg"
        ],
        "ports": [
          {
            "port": 8080,
            "protocol": "http"
          }
        ],
        "repositories": [
          {
            "url": "https://example.com/repository",
            "type": "git"
          }
        ],
        "developerEnvironment": "docker",
        "volumeMounts": [
          {
            "type": "persistent",
            "mountPath": "/example-mount-path"
          }
        ],
        "readinessProbe": {
          "type": "http",
          "path": "/example-readiness-path",
          "port": 8080,
          "initialDelay": 10,
          "timeout": 5
        },
        "resourceLimits": {
          "cpuMax": 1000,
          "cpuDefault": 500,
          "memMax": 2048,
          "memDefault": 1024
        },
        "tags": [
          "example-tag"
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on type keyword with an array of types",
      "valid": false,
      "rust_error": "\"string\" is not of types \"array\", \"null\"",
      "python_error": "'string' is not of type 'array', 'null'\n\nFailed validating 'type' in schema['properties']['depends']:\n    {'type': ['array', 'null'],\n     'items': {'type': 'object',\n               'properties': {'key': {'type': 'string'},\n                              'required': {'type': 'boolean'},\n                              'useFrom': {'type': 'string'}},\n               'required': ['key', 'required']}}\n\nOn instance['depends']:\n    'string'",
      "data": {
        "logo": "https://example.com/logo.png",
        "key": "example-service",
        "label": "Example Service",
        "maintainer": "John Doe",
        "image": {
          "registry": "docker.io",
          "name": "example-service",
          "tags": [
            "latest",
            "v1.0.0"
          ]
        },
        "display": "Example Service",
        "access": "public",
        "description": "This is an example service.",
        "depends": "string",
        "config": [
          {
            "name": "EXAMPLE_CONFIG",
            "value": "example-value",
            "label": "Example Config",
            "canOverride": true,
            "isPassword": false
          }
        ],
        "command": [
          "example-command"
        ],
        "args": [
          "--example-arg"
        ],
        "ports": [
          {
            "port": 8080,
            "protocol": "http"
          }
        ],
        "repositories": [
          {
            "url": "https://example.com/repository",
            "type": "git"
          }
        ],
        "developerEnvironment": "docker",
        "volumeMounts": [
          {
            "type": "persistent",
            "mountPath": "/example-mount-path"
          }
        ],
        "readinessProbe": {
          "type": "http",
          "path": "/example-readiness-path",
          "port": 8080,
          "initialDelay": 10,
          "timeout": 5
        },
        "resourceLimits": {
          "cpuMax": 1000,
          "cpuDefault": 500,
          "memMax": 2048,
          "memDefault": 1024
        },
        "tags": [
          "example-tag"
        ]
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"8080\" is not of type \"integer\"",
      "python_error": "'protocol' is a required property\n\nFailed validating 'required' in schema['properties']['ports']['items']:\n    {'type': 'object',\n     'properties': {'port': {'type': 'integer'},\n                    'protocol': {'type': 'string'}},\n     'required': ['port', 'protocol']}\n\nOn instance['ports'][0]:\n    {'port': '8080',\n     'Changed port to string instead of integer': 'protocol',\n     'Changed protocol to string instead of http': 'http'}",
      "data": {
        "logo": "https://example.com/logo.png",
        "key": "example-service",
        "label": "Example Service",
        "maintainer": "John Doe",
        "image": {
          "registry": "docker.io",
          "name": "example-service",
          "tags": [
            "latest",
            "v1.0.0"
          ]
        },
        "display": "Example Service",
        "access": "public",
        "description": "This is an example service.",
        "depends": [
          {
            "key": "example-dependency",
            "required": true,
            "useFrom": "example-dependency"
          }
        ],
        "config": [
          {
            "name": "EXAMPLE_CONFIG",
            "value": "example-value",
            "label": "Example Config",
            "canOverride": true,
            "isPassword": false
          }
        ],
        "command": [
          "example-command"
        ],
        "args": [
          "--example-arg"
        ],
        "ports": [
          {
            "port": "8080",
            "Changed port to string instead of integer": "protocol",
            "Changed protocol to string instead of http": "http"
          }
        ],
        "repositories": [
          {
            "url": "https://example.com/repository",
            "type": "git"
          }
        ],
        "developerEnvironment": "docker",
        "volumeMounts": [
          {
            "type": "persistent",
            "mountPath": "/example-mount-path"
          }
        ],
        "readinessProbe": {
          "type": "http",
          "path": "/example-readiness-path",
          "port": 8080,
          "initialDelay": 10,
          "timeout": 5
        },
        "resourceLimits": {
          "cpuMax": 1000,
          "cpuDefault": 500,
          "memMax": 2048,
          "memDefault": 1024
        },
        "tags": [
          "example-tag"
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on type keyword with an array of types",
      "valid": false,
      "rust_error": "\"invalid-dependency\" is not of type \"object\"",
      "python_error": "'invalid-dependency' is not of type 'object'\n\nFailed validating 'type' in schema['properties']['depends']['items']:\n    {'type': 'object',\n     'properties': {'key': {'type': 'string'},\n                    'required': {'type': 'boolean'},\n                    'useFrom': {'type': 'string'}},\n     'required': ['key', 'required']}\n\nOn instance['depends'][1]:\n    'invalid-dependency'",
      "data": {
        "logo": "https://example.com/logo.png",
        "key": "example-service",
        "label": "Example Service",
        "maintainer": "John Doe",
        "image": {
          "registry": "docker.io",
          "name": "example-service",
          "tags": [
            "latest",
            "v1.0.0"
          ]
        },
        "display": "Example Service",
        "access": "public",
        "description": "This is an example service.",
        "depends": [
          {
            "key": "example-dependency",
            "required": true,
            "useFrom": "example-dependency"
          },
          "invalid-dependency",
          {
            "key": "example-dependency",
            "required": true,
            "useFrom": "example-dependency"
          }
        ],
        "config": [
          {
            "name": "EXAMPLE_CONFIG",
            "value": "example-value",
            "label": "Example Config",
            "canOverride": true,
            "isPassword": false
          }
        ],
        "command": [
          "example-command"
        ],
        "args": [
          "--example-arg"
        ],
        "ports": [
          {
            "port": 8080,
            "protocol": "http"
          }
        ],
        "repositories": [
          {
            "url": "https://example.com/repository",
            "type": "git"
          }
        ],
        "developerEnvironment": "docker",
        "volumeMounts": [
          {
            "type": "persistent",
            "mountPath": "/example-mount-path"
          }
        ],
        "readinessProbe": {
          "type": "http",
          "path": "/example-readiness-path",
          "port": 8080,
          "initialDelay": 10,
          "timeout": 5
        },
        "resourceLimits": {
          "cpuMax": 1000,
          "cpuDefault": 500,
          "memMax": 2048,
          "memDefault": 1024
        },
        "tags": [
          "example-tag"
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on type keyword with an array of types",
      "valid": false,
      "rust_error": "123 is not of types \"array\", \"null\"",
      "python_error": "123 is not of type 'array', 'null'\n\nFailed validating 'type' in schema['properties']['tags']:\n    {'type': ['array', 'null'], 'items': {'type': 'string'}}\n\nOn instance['tags']:\n    123",
      "data": {
        "logo": "https://example.com/logo.png",
        "key": "example-service",
        "label": "Example Service",
        "maintainer": "John Doe",
        "image": {
          "registry": "docker.io",
          "name": "example-service",
          "tags": [
            "latest",
            "v1.0.0"
          ]
        },
        "display": "Example Service",
        "access": "public",
        "description": "This is an example service.",
        "depends": [
          {
            "key": "example-dependency",
            "required": true,
            "useFrom": "example-dependency"
          }
        ],
        "config": [
          {
            "name": "EXAMPLE_CONFIG",
            "value": "example-value",
            "label": "Example Config",
            "canOverride": true,
            "isPassword": false
          }
        ],
        "command": [
          "example-command"
        ],
        "args": [
          "--example-arg"
        ],
        "ports": [
          {
            "port": 8080,
            "protocol": "http"
          }
        ],
        "repositories": [
          {
            "url": "https://example.com/repository",
            "type": "git"
          }
        ],
        "developerEnvironment": "docker",
        "volumeMounts": [
          {
            "type": "persistent",
            "mountPath": "/example-mount-path"
          }
        ],
        "readinessProbe": {
          "type": "http",
          "path": "/example-readiness-path",
          "port": 8080,
          "initialDelay": 10,
          "timeout": 5
        },
        "resourceLimits": {
          "cpuMax": 1000,
          "cpuDefault": 500,
          "memMax": 2048,
          "memDefault": 1024
        },
        "tags": 123
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "logo": "https://example.com/logo.png",
        "key": "example-key",
        "label": "Example Service",
        "maintainer": "John Doe",
        "image": {
          "registry": "docker.io",
          "name": "example/image",
          "tags": [
            "latest",
            "v1.0"
          ]
        },
        "display": "Example Service",
        "access": "public",
        "description": "This is an example service.",
        "depends": [
          {
            "key": "dependency-key",
            "required": true,
            "useFrom": "example/use-from"
          }
        ],
        "config": [
          {
            "name": "config-name",
            "value": "config-value",
            "label": "Config Label",
            "canOverride": true,
            "isPassword": false
          }
        ],
        "command": [
          "command1",
          "command2"
        ],
        "args": [
          "arg1",
          "arg2"
        ],
        "ports": [
          {
            "port": 8080,
            "protocol": "http"
          }
        ],
        "repositories": [
          {
            "url": "https://example.com/repo",
            "type": "git"
          }
        ],
        "developerEnvironment": "dev",
        "volumeMounts": [
          {
            "type": "persistent",
            "mountPath": "/mnt/data"
          }
        ],
        "readinessProbe": {
          "type": "http",
          "path": "/healthcheck",
          "port": 8080,
          "initialDelay": 10,
          "timeout": 5
        },
        "resourceLimits": {
          "cpuMax": 1000,
          "cpuDefault": 500,
          "memMax": 2048,
          "memDefault": 1024
        },
        "tags": [
          "example-tag",
          "another-tag"
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on type keyword with an array of types",
      "valid": false,
      "rust_error": "12345 is not of type \"object\"",
      "python_error": "12345 is not of type 'object'\n\nFailed validating 'type' in schema['properties']['config']['items']:\n    {'type': 'object',\n     'properties': {'name': {'type': 'string'},\n                    'value': {'type': 'string'},\n                    'label': {'type': 'string'},\n                    'canOverride': {'type': 'boolean'},\n                    'isPassword': {'type': 'boolean'}},\n     'required': ['name', 'value']}\n\nOn instance['config'][1]:\n    12345",
      "data": {
        "logo": "https://example.com/logo.png",
        "key": "example-key",
        "label": "Example Service",
        "maintainer": "John Doe",
        "image": {
          "registry": "docker.io",
          "name": "example/image",
          "tags": [
            "latest",
            "v1.0"
          ]
        },
        "display": "Example Service",
        "access": "public",
        "description": "This is an example service.",
        "depends": [
          {
            "key": "dependency-key",
            "required": true,
            "useFrom": "example/use-from"
          }
        ],
        "config": [
          {
            "name": "config-name",
            "value": "config-value",
            "label": "Config Label",
            "canOverride": true,
            "isPassword": false
          },
          12345
        ],
        "command": [
          "command1",
          "command2"
        ],
        "args": [
          "arg1",
          "arg2"
        ],
        "ports": [
          {
            "port": 8080,
            "protocol": "http"
          }
        ],
        "repositories": [
          {
            "url": "https://example.com/repo",
            "type": "git"
          }
        ],
        "developerEnvironment": "dev",
        "volumeMounts": [
          {
            "type": "persistent",
            "mountPath": "/mnt/data"
          }
        ],
        "readinessProbe": {
          "type": "http",
          "path": "/healthcheck",
          "port": 8080,
          "initialDelay": 10,
          "timeout": 5
        },
        "resourceLimits": {
          "cpuMax": 1000,
          "cpuDefault": 500,
          "memMax": 2048,
          "memDefault": 1024
        },
        "tags": [
          "example-tag",
          "another-tag"
        ]
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "1 is not of type \"string\"",
      "python_error": "'protocol' is a required property\n\nFailed validating 'required' in schema['properties']['ports']['items']:\n    {'type': 'object',\n     'properties': {'port': {'type': 'integer'},\n                    'protocol': {'type': 'string'}},\n     'required': ['port', 'protocol']}\n\nOn instance['ports'][0]:\n    {'port': '8080', 'non-integer port': 'http'}",
      "data": {
        "logo": "https://example.com/logo.png",
        "key": "example-key",
        "label": "Example Service",
        "maintainer": "John Doe",
        "image": {
          "registry": "docker.io",
          "name": "example/image",
          "tags": [
            1,
            "v1.0"
          ]
        },
        "display": "Example Service",
        "access": "public",
        "description": "This is an example service.",
        "depends": [
          {
            "key": "dependency-key",
            "required": true,
            "useFrom": "example/use-from"
          }
        ],
        "config": [
          {
            "name": "config-name",
            "value": "config-value",
            "label": "Config Label",
            "canOverride": true,
            "isPassword": false
          }
        ],
        "command": [
          "command1",
          "command2"
        ],
        "args": [
          "arg1",
          "arg2"
        ],
        "ports": [
          {
            "port": "8080",
            "non-integer port": "http"
          }
        ],
        "repositories": [
          {
            "url": "https://example.com/repo",
            "type": "git"
          }
        ],
        "developerEnvironment": "dev",
        "volumeMounts": [
          {
            "type": "persistent",
            "mountPath": "/mnt/data"
          }
        ],
        "readinessProbe": {
          "type": "http",
          "path": "/healthcheck",
          "port": 8080,
          "initialDelay": 10,
          "timeout": 5
        },
        "resourceLimits": {
          "cpuMax": 1000,
          "cpuDefault": 500,
          "memMax": 2048,
          "memDefault": 1024
        },
        "tags": [
          "example-tag",
          "another-tag"
        ]
      }
    }
  ]
}