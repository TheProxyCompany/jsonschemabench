{
  "description": "sample Github_medium/o82853.json",
  "meta": {
    "full_size": 975,
    "stripped_size": 617,
    "features": [
      "@minmaxLength",
      "additionalProperties",
      "enum",
      "format",
      "format:slug",
      "pattern"
    ],
    "raw_features": [
      "$schema",
      "_boolSchema",
      "id",
      "maxLength",
      "minLength",
      "properties",
      "required",
      "type",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "id": "http://schemas.triniti.io/json-schema/triniti/curator/slot/1-0-0.json#",
    "$schema": "http://json-schema.org/draft-04/schema#",
    "type": "object",
    "properties": {
      "_schema": {
        "type": "string",
        "pattern": "^pbj:([a-z0-9-]+):([a-z0-9\\.-]+):([a-z0-9-]+)?:([a-z0-9-]+):([0-9]+-[0-9]+-[0-9]+)$",
        "default": "pbj:triniti:curator::slot:1-0-0"
      },
      "name": {
        "type": "string",
        "pattern": "^([\\w\\/-]|[\\w-][\\w\\/-]*[\\w-])$",
        "minLength": 0,
        "maxLength": 255,
        "description": "The name of the location where the widget should render, e.g. \"sidebar\", \"html-head\" or \"jumbotron-top\".",
        "pbj": {
          "type": "string",
          "rule": "single",
          "format": "slug"
        }
      },
      "widget_ref": {
        "type": "string",
        "pattern": "^[\\w\\/\\.:-]+$",
        "description": "A reference to the widget this slot will render.",
        "pbj": {
          "type": "identifier",
          "rule": "single"
        }
      },
      "rendering": {
        "type": "string",
        "default": "lazy",
        "enum": [
          "unknown",
          "server",
          "client",
          "lazy"
        ],
        "pbj": {
          "type": "string-enum",
          "rule": "single"
        }
      }
    },
    "required": [
      "_schema"
    ],
    "additionalProperties": false
  },
  "tests": [
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "_schema": "pbj:triniti:curator::slot:1-0-0",
        "name": "sidebar",
        "widget_ref": "my-widget/1",
        "rendering": "lazy"
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "_schema": "pbj:triniti:curator::slot:1-0-0",
        "name": "sidebar",
        "widget_ref": "triniti/curator/widget/hero",
        "rendering": "lazy"
      }
    },
    {
      "description": "llama-70b generated negative; focus on pattern keyword",
      "valid": false,
      "rust_error": "\"sidebar!\" does not match \"^([\\w\\/-]|[\\w-][\\w\\/-]*[\\w-])$\"",
      "python_error": "'sidebar!' does not match '^([\\\\w\\\\/-]|[\\\\w-][\\\\w\\\\/-]*[\\\\w-])$'\n\nFailed validating 'pattern' in schema['properties']['name']:\n    {'type': 'string',\n     'pattern': '^([\\\\w\\\\/-]|[\\\\w-][\\\\w\\\\/-]*[\\\\w-])$',\n     'minLength': 0,\n     'maxLength': 255,\n     'description': 'The name of the location where the widget should '\n                    'render, e.g. \"sidebar\", \"html-head\" or '\n                    '\"jumbotron-top\".',\n     'pbj': {'type': 'string', 'rule': 'single', 'format': 'slug'}}\n\nOn instance['name']:\n    'sidebar!'",
      "data": {
        "_schema": "pbj:triniti:curator::slot:1-0-0",
        "name": "sidebar!",
        "widget_ref": "triniti/curator/widget/hero",
        "rendering": "lazy"
      }
    },
    {
      "description": "llama-70b generated negative; focus on minLength keyword or maxLength keyword",
      "valid": false,
      "rust_error": "\"\" does not match \"^([\\w\\/-]|[\\w-][\\w\\/-]*[\\w-])$\"",
      "python_error": "'' does not match '^([\\\\w\\\\/-]|[\\\\w-][\\\\w\\\\/-]*[\\\\w-])$'\n\nFailed validating 'pattern' in schema['properties']['name']:\n    {'type': 'string',\n     'pattern': '^([\\\\w\\\\/-]|[\\\\w-][\\\\w\\\\/-]*[\\\\w-])$',\n     'minLength': 0,\n     'maxLength': 255,\n     'description': 'The name of the location where the widget should '\n                    'render, e.g. \"sidebar\", \"html-head\" or '\n                    '\"jumbotron-top\".',\n     'pbj': {'type': 'string', 'rule': 'single', 'format': 'slug'}}\n\nOn instance['name']:\n    ''",
      "data": {
        "_schema": "pbj:triniti:curator::slot:1-0-0",
        "name": "",
        "widget_ref": "triniti/curator/widget/hero",
        "rendering": "lazy"
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "{\"a\":\"b\"} is not of type \"string\"",
      "python_error": "Additional properties are not allowed ('another_extra_field', 'extra_field' were unexpected)\n\nFailed validating 'additionalProperties' in schema:\n    {'id': 'http://schemas.triniti.io/json-schema/triniti/curator/slot/1-0-0.json#',\n     '$schema': 'http://json-schema.org/draft-04/schema#',\n     'type': 'object',\n     'properties': {'_schema': {'type': 'string',\n                                'pattern': '^pbj:([a-z0-9-]+):([a-z0-9\\\\.-]+):([a-z0-9-]+)?:([a-z0-9-]+):([0-9]+-[0-9]+-[0-9]+)$',\n                                'default': 'pbj:triniti:curator::slot:1-0-0'},\n                    'name': {'type': 'string',\n                             'pattern': '^([\\\\w\\\\/-]|[\\\\w-][\\\\w\\\\/-]*[\\\\w-])$',\n                             'minLength': 0,\n                             'maxLength': 255,\n                             'description': 'The name of the location '\n                                            'where the widget should '\n                                            'render, e.g. \"sidebar\", '\n                  .. (3514 more)",
      "data": {
        "_schema": {
          "a": "b"
        },
        "name": {
          "a": "b"
        },
        "widget_ref": "triniti/curator/widget/hero.too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long/too/long",
        "rendering": 0,
        "extra_field": "extra_value",
        "another_extra_field": 0
      }
    }
  ]
}