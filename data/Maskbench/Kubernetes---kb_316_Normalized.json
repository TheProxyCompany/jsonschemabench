{
  "description": "sample Kubernetes/kb_316_Normalized.json",
  "meta": {
    "full_size": 1771,
    "stripped_size": 711,
    "features": [
      "$ref"
    ],
    "raw_features": [
      "definitions",
      "properties",
      "type",
      "type:[]",
      "type:boolean",
      "type:null",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "definitions": {
      "https:__kubernetesjsonschema_dev_master__defs_json_defs_io_k8s_api_core_v1_ConfigMapEnvSource": {
        "description": "ConfigMapEnvSource selects a ConfigMap to populate the environment variables with.\n\nThe contents of the target ConfigMap's Data field will represent the key-value pairs as environment variables.",
        "properties": {
          "name": {
            "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
            "type": "string"
          },
          "optional": {
            "description": "Specify whether the ConfigMap must be defined",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "https:__kubernetesjsonschema_dev_master__defs_json_defs_io_k8s_api_core_v1_SecretEnvSource": {
        "description": "SecretEnvSource selects a Secret to populate the environment variables with.\n\nThe contents of the target Secret's Data field will represent the key-value pairs as environment variables.",
        "properties": {
          "name": {
            "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
            "type": "string"
          },
          "optional": {
            "description": "Specify whether the Secret must be defined",
            "type": "boolean"
          }
        },
        "type": "object"
      }
    },
    "description": "EnvFromSource represents the source of a set of ConfigMaps",
    "properties": {
      "configMapRef": {
        "$ref": "#/definitions/https:__kubernetesjsonschema_dev_master__defs_json_defs_io_k8s_api_core_v1_ConfigMapEnvSource",
        "description": "The ConfigMap to select from"
      },
      "prefix": {
        "description": "An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.",
        "type": [
          "string",
          "null"
        ]
      },
      "secretRef": {
        "$ref": "#/definitions/https:__kubernetesjsonschema_dev_master__defs_json_defs_io_k8s_api_core_v1_SecretEnvSource",
        "description": "The Secret to select from"
      }
    },
    "type": "object"
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "configMapRef": {
          "name": "my-config-map",
          "optional": false
        },
        "prefix": "my-prefix-",
        "secretRef": {
          "name": "my-secret",
          "optional": true
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on type keyword with an array of types",
      "valid": false,
      "rust_error": "123 is not of types \"null\", \"string\"",
      "python_error": "123 is not of type 'string', 'null'\n\nFailed validating 'type' in schema['properties']['prefix']:\n    {'description': 'An optional identifier to prepend to each key in the '\n                    'ConfigMap. Must be a C_IDENTIFIER.',\n     'type': ['string', 'null']}\n\nOn instance['prefix']:\n    123",
      "data": {
        "configMapRef": {
          "name": "my-config-map",
          "optional": false
        },
        "prefix": 123,
        "secretRef": {
          "name": "my-secret",
          "optional": true
        }
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "123 is not of type \"string\"",
      "python_error": "123 is not of type 'string'\n\nFailed validating 'type' in schema['properties']['configMapRef']['properties']['name']:\n    {'description': 'Name of the referent. More info: '\n                    'https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names',\n     'type': 'string'}\n\nOn instance['configMapRef']['name']:\n    123",
      "data": {
        "configMapRef": {
          "name": 123,
          "optional": false
        },
        "prefix": "my-prefix-",
        "secretRef": {
          "name": "my-secret",
          "optional": true
        }
      }
    }
  ]
}