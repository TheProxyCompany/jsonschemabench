{
  "description": "sample Github_hard/o42253.json",
  "meta": {
    "full_size": 4019,
    "stripped_size": 1502,
    "features": [
      "@minmaxItems",
      "additionalProperties",
      "enum",
      "items"
    ],
    "raw_features": [
      "$schema",
      "_boolSchema",
      "minItems",
      "properties",
      "required",
      "type",
      "type:array",
      "type:boolean",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "additionalProperties": false,
    "description": "This schema defines the metadata for a single document as specified by the dms-exchange-specification.",
    "properties": {
      "comments": {
        "description": "Comments added to a document",
        "items": {
          "additionalProperties": false,
          "properties": {
            "commentBy": {
              "_format": "email",
              "description": "User who has added a comment.",
              "type": "string"
            },
            "commentTime": {
              "_format": "date-time",
              "description": "Timestamp when the comment was added.",
              "type": "string"
            },
            "content": {
              "description": "Text of the comment.",
              "type": "string"
            }
          },
          "required": [
            "commentBy",
            "commentTime",
            "content"
          ],
          "type": "object"
        },
        "minItems": 0,
        "type": "array"
      },
      "context": {
        "additionalProperties": false,
        "description": "Information taken from the document content and are inherent to it.",
        "properties": {
          "documentTime": {
            "_format": "date-time",
            "description": "Date of the document.",
            "type": "string"
          },
          "dueDateTime": {
            "_format": "date-time",
            "description": "A due date the document might have.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "createdBy": {
        "_format": "email",
        "description": "User who has triggered the export.",
        "type": "string"
      },
      "createdTime": {
        "_format": "date-time",
        "description": "Timestamp when the container was created/exported.",
        "type": "string"
      },
      "directory": {
        "description": "If the dms works hierarchically, this field contains the directory. It is written in *nix-style, starting from the root downwards, using slashes.",
        "type": "string"
      },
      "documentFiles": {
        "description": "Groups the document-files in the given order that form a document.",
        "items": {
          "additionalProperties": false,
          "properties": {
            "filename": {
              "description": "Name of the indexed document-file inside the container.",
              "type": "string"
            },
            "revisions": {
              "description": "Revisions of a document-file.",
              "items": {
                "additionalProperties": false,
                "properties": {
                  "addedBy": {
                    "_format": "email",
                    "description": "User who has added or changed the revision.",
                    "type": "string"
                  },
                  "addedTime": {
                    "_format": "date-time",
                    "description": "Timestamp when the revision of the document-file has been added or changed.",
                    "type": "string"
                  }
                },
                "required": [
                  "addedTime"
                ],
                "type": "object"
              },
              "type": "array"
            },
            "rotation": {
              "default": 0,
              "description": "Degree the document-file has to rotate clockwise to have a correct orientation.",
              "enum": [
                0,
                90,
                180,
                270
              ]
            }
          },
          "required": [
            "filename",
            "revisions"
          ],
          "type": "object"
        },
        "minItems": 1,
        "type": "array"
      },
      "idSystem": {
        "description": "An id the system has provided for the document",
        "type": "string"
      },
      "idUser": {
        "description": "An id the user can define uniquely for the document",
        "type": "string"
      },
      "labels": {
        "description": "Tagging keywords",
        "items": {
          "type": "string"
        },
        "type": "array",
        "_uniqueItems": true
      },
      "location": {
        "description": "Physical location of the scanned documents, if available",
        "type": "string"
      },
      "note": {
        "description": "Free text field for document-notes, made by the users",
        "type": "string"
      },
      "optionIndexed": {
        "default": true,
        "description": "Should the document be shown in the index (if using a search), or only when the user navigates to the document explicitly.",
        "type": "boolean"
      },
      "optionOcr": {
        "default": true,
        "description": "Should the document be analyzed or not.",
        "type": "boolean"
      },
      "project": {
        "description": "A project the document has been associated with.",
        "type": "string"
      },
      "source": {
        "additionalProperties": false,
        "description": "Information about the system that has created the export.",
        "properties": {
          "email": {
            "_format": "email",
            "description": "Email to contact the vendor of the system that has created the export.",
            "type": "string"
          },
          "name": {
            "description": "Name of the system that has created the export.",
            "type": "string"
          },
          "url": {
            "_format": "uri",
            "description": "Website from the vendor of the system that has created the export.",
            "type": "string"
          },
          "version": {
            "description": "Version of the system that has created the export.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "version": {
        "description": "Valid version for this schema.",
        "enum": [
          "1.0.0"
        ]
      }
    },
    "required": [
      "version",
      "createdTime",
      "documentFiles"
    ],
    "title": "dms-exchange-specification (dxs) metadata description",
    "type": "object"
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "comments": [
          {
            "commentBy": "john.doe@example.com",
            "commentTime": "2022-01-01T12:00:00Z",
            "content": "This is a comment."
          }
        ],
        "context": {
          "documentTime": "2022-01-01T12:00:00Z",
          "dueDateTime": "2022-01-15T12:00:00Z"
        },
        "createdBy": "jane.doe@example.com",
        "createdTime": "2022-01-01T12:00:00Z",
        "directory": "/path/to/directory",
        "documentFiles": [
          {
            "filename": "document.pdf",
            "revisions": [
              {
                "addedBy": "john.doe@example.com",
                "addedTime": "2022-01-01T12:00:00Z"
              }
            ],
            "rotation": 0
          }
        ],
        "idSystem": "system-id-123",
        "idUser": "user-id-123",
        "labels": [
          "label1",
          "label2"
        ],
        "location": "Physical location",
        "note": "Free text note",
        "optionIndexed": true,
        "optionOcr": true,
        "project": "Project name",
        "source": {
          "email": "support@example.com",
          "name": "System name",
          "url": "https://example.com",
          "version": "1.0.0"
        },
        "version": "1.0.0"
      }
    },
    {
      "description": "llama-70b generated negative; focus on minItems keyword",
      "valid": false,
      "rust_error": "[] has less than 1 item",
      "python_error": "[] should be non-empty\n\nFailed validating 'minItems' in schema['properties']['documentFiles']:\n    {'description': 'Groups the document-files in the given order that '\n                    'form a document.',\n     'items': {'additionalProperties': False,\n               'properties': {'filename': {'description': 'Name of the '\n                                                          'indexed '\n                                                          'document-file '\n                                                          'inside the '\n                                                          'container.',\n                                           'type': 'string'},\n                              'revisions': {'description': 'Revisions of a '\n                                                           'document-file.',\n                                            'items': {'additionalProperties': False,\n                                                      'properties': {'addedBy': {'_format': 'email',\n       .. (3385 more)",
      "data": {
        "comments": [
          {
            "commentBy": "john.doe@example.com",
            "commentTime": "2022-01-01T12:00:00Z",
            "content": "This is a comment."
          }
        ],
        "context": {
          "documentTime": "2022-01-01T12:00:00Z",
          "dueDateTime": "2022-01-15T12:00:00Z"
        },
        "createdBy": "jane.doe@example.com",
        "createdTime": "2022-01-01T12:00:00Z",
        "directory": "/path/to/directory",
        "documentFiles": [],
        "idSystem": "system-id-123",
        "idUser": "user-id-123",
        "labels": [
          "label1",
          "label2"
        ],
        "location": "Physical location",
        "note": "Free text note",
        "optionIndexed": true,
        "optionOcr": true,
        "project": "Project name",
        "source": {
          "email": "support@example.com",
          "name": "System name",
          "url": "https://example.com",
          "version": "1.0.0"
        },
        "version": "1.0.0"
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "360 is not one of [0,90,180,270]",
      "python_error": "360 is not one of [0, 90, 180, 270]\n\nFailed validating 'enum' in schema['properties']['documentFiles']['items']['properties']['rotation']:\n    {'default': 0,\n     'description': 'Degree the document-file has to rotate clockwise to '\n                    'have a correct orientation.',\n     'enum': [0, 90, 180, 270]}\n\nOn instance['documentFiles'][0]['rotation']:\n    360",
      "data": {
        "comments": [
          {
            "commentBy": "john.doe@example.com",
            "commentTime": "2022-01-01T12:00:00Z",
            "content": "This is a comment."
          }
        ],
        "context": {
          "documentTime": "2022-01-01T12:00:00Z",
          "dueDateTime": "2022-01-15T12:00:00Z"
        },
        "createdBy": "jane.doe@example.com",
        "createdTime": "2022-01-01T12:00:00Z",
        "directory": "/path/to/directory",
        "documentFiles": [
          {
            "filename": "document.pdf",
            "revisions": [
              {
                "addedBy": "john.doe@example.com",
                "addedTime": "2022-01-01T12:00:00Z"
              }
            ],
            "rotation": 360
          }
        ],
        "idSystem": "system-id-123",
        "idUser": "user-id-123",
        "labels": [
          "label1",
          "label2"
        ],
        "location": "Physical location",
        "note": "Free text note",
        "optionIndexed": true,
        "optionOcr": true,
        "project": "Project name",
        "source": {
          "email": "support@example.com",
          "name": "System name",
          "url": "https://example.com",
          "version": "1.0.0"
        },
        "version": "1.0.0"
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "Additional properties are not allowed ('extraProperty' was unexpected)",
      "python_error": "Additional properties are not allowed ('extraProperty' was unexpected)\n\nFailed validating 'additionalProperties' in schema['properties']['comments']['items']:\n    {'additionalProperties': False,\n     'properties': {'commentBy': {'_format': 'email',\n                                  'description': 'User who has added a '\n                                                 'comment.',\n                                  'type': 'string'},\n                    'commentTime': {'_format': 'date-time',\n                                    'description': 'Timestamp when the '\n                                                   'comment was added.',\n                                    'type': 'string'},\n                    'content': {'description': 'Text of the comment.',\n                                'type': 'string'}},\n     'required': ['commentBy', 'commentTime', 'content'],\n     'type': 'object'}\n\nOn instance['comments'][0]:\n    {'commentBy': 'john.doe@example.com',\n     'commentTime': '2022-01-01T12:00:00Z',\n     'co.. (80 more)",
      "data": {
        "comments": [
          {
            "commentBy": "john.doe@example.com",
            "commentTime": "2022-01-01T12:00:00Z",
            "content": "This is a comment.",
            "extraProperty": "This is an extra property"
          }
        ],
        "context": {
          "documentTime": "2022-01-01T12:00:00Z",
          "dueDateTime": "2022-01-15T12:00:00Z"
        },
        "createdBy": "jane.doe@example.com",
        "createdTime": "2022-01-01T12:00:00Z",
        "directory": "/path/to/directory",
        "documentFiles": [
          {
            "filename": "document.pdf",
            "revisions": [
              {
                "addedBy": "john.doe@example.com",
                "addedTime": "2022-01-01T12:00:00Z"
              }
            ],
            "rotation": 360
          }
        ],
        "idSystem": "system-id-123",
        "idUser": "user-id-123",
        "labels": [
          "label1",
          "label1"
        ],
        "location": "Physical location",
        "note": "Free text note",
        "optionIndexed": true,
        "optionOcr": true,
        "project": "Project name",
        "source": {
          "email": "support@example.com",
          "name": "System name",
          "url": "https://example.com",
          "version": "1.0.0"
        },
        "version": "1.0.0"
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "comments": [
          {
            "commentBy": "john.doe@example.com",
            "commentTime": "2022-01-01T12:00:00Z",
            "content": "This is a comment"
          }
        ],
        "context": {
          "documentTime": "2022-01-01T12:00:00Z",
          "dueDateTime": "2022-01-15T12:00:00Z"
        },
        "createdBy": "john.doe@example.com",
        "createdTime": "2022-01-01T12:00:00Z",
        "directory": "/path/to/document",
        "documentFiles": [
          {
            "filename": "document.pdf",
            "revisions": [
              {
                "addedBy": "john.doe@example.com",
                "addedTime": "2022-01-01T12:00:00Z"
              }
            ],
            "rotation": 0
          }
        ],
        "idSystem": "system-id-123",
        "idUser": "user-id-123",
        "labels": [
          "label1",
          "label2"
        ],
        "location": "Physical location",
        "note": "Free text note",
        "optionIndexed": true,
        "optionOcr": true,
        "project": "Project name",
        "source": {
          "email": "support@example.com",
          "name": "System name",
          "url": "https://example.com",
          "version": "1.0.0"
        },
        "version": "1.0.0"
      }
    },
    {
      "description": "llama-70b generated negative; focus on minItems keyword",
      "valid": false,
      "rust_error": "[] has less than 1 item",
      "python_error": "[] should be non-empty\n\nFailed validating 'minItems' in schema['properties']['documentFiles']:\n    {'description': 'Groups the document-files in the given order that '\n                    'form a document.',\n     'items': {'additionalProperties': False,\n               'properties': {'filename': {'description': 'Name of the '\n                                                          'indexed '\n                                                          'document-file '\n                                                          'inside the '\n                                                          'container.',\n                                           'type': 'string'},\n                              'revisions': {'description': 'Revisions of a '\n                                                           'document-file.',\n                                            'items': {'additionalProperties': False,\n                                                      'properties': {'addedBy': {'_format': 'email',\n       .. (3385 more)",
      "data": {
        "comments": [
          {
            "commentBy": "john.doe@example.com",
            "commentTime": "2022-01-01T12:00:00Z",
            "content": "This is a comment"
          }
        ],
        "context": {
          "documentTime": "2022-01-01T12:00:00Z",
          "dueDateTime": "2022-01-15T12:00:00Z"
        },
        "createdBy": "john.doe@example.com",
        "createdTime": "2022-01-01T12:00:00Z",
        "directory": "/path/to/document",
        "documentFiles": [],
        "idSystem": "system-id-123",
        "idUser": "user-id-123",
        "labels": [
          "label1",
          "label2"
        ],
        "location": "Physical location",
        "note": "Free text note",
        "optionIndexed": true,
        "optionOcr": true,
        "project": "Project name",
        "source": {
          "email": "support@example.com",
          "name": "System name",
          "url": "https://example.com",
          "version": "1.0.0"
        },
        "version": "1.0.0"
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "Additional properties are not allowed ('extraProperty' was unexpected)",
      "python_error": "Additional properties are not allowed ('extraProperty' was unexpected)\n\nFailed validating 'additionalProperties' in schema:\n    {'$schema': 'http://json-schema.org/draft-04/schema#',\n     'additionalProperties': False,\n     'description': 'This schema defines the metadata for a single '\n                    'document as specified by the '\n                    'dms-exchange-specification.',\n     'properties': {'comments': {'description': 'Comments added to a '\n                                                'document',\n                                 'items': {'additionalProperties': False,\n                                           'properties': {'commentBy': {'_format': 'email',\n                                                                        'description': 'User '\n                                                                                       'who '\n                                                                                       'has '\n                                                     .. (20187 more)",
      "data": {
        "version": "1.0.0",
        "createdBy": "john.doe@example.com",
        "createdTime": "2022-01-01T12:00:00Z",
        "directory": "/path/to/document",
        "documentFiles": [
          {
            "filename": "document.pdf",
            "revisions": [
              {
                "addedBy": "john.doe@example.com",
                "addedTime": "2022-01-01T12:00:00Z",
                "extraProperty": "value"
              }
            ],
            "rotation": 360
          }
        ],
        "idSystem": "system-id-123",
        "idUser": "user-id-123",
        "labels": [
          "label1",
          "label1"
        ],
        "location": "Physical location",
        "note": "Free text note",
        "optionIndexed": true,
        "optionOcr": true,
        "project": "Project name",
        "source": {
          "email": "support@example.com",
          "name": "System name",
          "url": "https://example.com",
          "version": "1.0.0",
          "extraProperty": "value"
        },
        "comments": [
          {
            "commentBy": "john.doe@example.com",
            "commentTime": "2022-01-01T12:00:00Z",
            "content": "This is a comment",
            "extraProperty": "value"
          }
        ],
        "context": {
          "documentTime": "2022-01-01T12:00:00Z",
          "dueDateTime": "2022-01-15T12:00:00Z",
          "extraProperty": "value"
        },
        "extraProperty": "value"
      }
    }
  ]
}