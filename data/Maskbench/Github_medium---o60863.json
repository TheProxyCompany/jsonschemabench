{
  "description": "sample Github_medium/o60863.json",
  "meta": {
    "full_size": 855,
    "stripped_size": 380,
    "features": [
      "additionalProperties",
      "enum",
      "pattern"
    ],
    "raw_features": [
      "$schema",
      "_boolSchema",
      "definitions",
      "properties",
      "required",
      "type",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "title": "avalon-core:asset-2.0",
    "description": "A unit of data",
    "type": "object",
    "additionalProperties": true,
    "required": [
      "schema",
      "type",
      "name",
      "silo",
      "data"
    ],
    "properties": {
      "schema": {
        "description": "Schema identifier for payload",
        "type": "string",
        "enum": [
          "avalon-core:asset-2.0"
        ],
        "example": "avalon-core:asset-2.0"
      },
      "type": {
        "description": "The type of document",
        "type": "string",
        "enum": [
          "asset"
        ],
        "example": "asset"
      },
      "parent": {
        "description": "Unique identifier to parent document",
        "example": "592c33475f8c1b064c4d1696"
      },
      "name": {
        "description": "Name of asset",
        "type": "string",
        "pattern": "^[a-zA-Z0-9_.]*$",
        "example": "Bruce"
      },
      "silo": {
        "description": "Group or container of asset",
        "type": "string",
        "example": "assets"
      },
      "data": {
        "description": "Document metadata",
        "type": "object",
        "example": {
          "key": "value"
        }
      }
    },
    "definitions": {}
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "schema": "avalon-core:asset-2.0",
        "type": "asset",
        "name": "Bruce",
        "silo": "assets",
        "data": {
          "key": "value"
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on pattern keyword",
      "valid": false,
      "rust_error": "\"Bruce!\" does not match \"^[a-zA-Z0-9_.]*$\"",
      "python_error": "'Bruce!' does not match '^[a-zA-Z0-9_.]*$'\n\nFailed validating 'pattern' in schema['properties']['name']:\n    {'description': 'Name of asset',\n     'type': 'string',\n     'pattern': '^[a-zA-Z0-9_.]*$',\n     'example': 'Bruce'}\n\nOn instance['name']:\n    'Bruce!'",
      "data": {
        "schema": "avalon-core:asset-2.0",
        "type": "asset",
        "name": "Bruce!",
        "silo": "assets",
        "data": {
          "key": "value"
        }
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "schema": "avalon-core:asset-2.0",
        "type": "asset",
        "parent": "592c33475f8c1b064c4d1696",
        "name": "Bruce",
        "silo": "assets",
        "data": {
          "key": "value"
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on pattern keyword",
      "valid": false,
      "rust_error": "\"Bruce!\" does not match \"^[a-zA-Z0-9_.]*$\"",
      "python_error": "'Bruce!' does not match '^[a-zA-Z0-9_.]*$'\n\nFailed validating 'pattern' in schema['properties']['name']:\n    {'description': 'Name of asset',\n     'type': 'string',\n     'pattern': '^[a-zA-Z0-9_.]*$',\n     'example': 'Bruce'}\n\nOn instance['name']:\n    'Bruce!'",
      "data": {
        "schema": "avalon-core:asset-2.0",
        "type": "asset",
        "parent": "592c33475f8c1b064c4d1696",
        "name": "Bruce!",
        "silo": "assets",
        "data": {
          "key": "value"
        }
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"Bruce!\" does not match \"^[a-zA-Z0-9_.]*$\"",
      "python_error": "'Bruce!' does not match '^[a-zA-Z0-9_.]*$'\n\nFailed validating 'pattern' in schema['properties']['name']:\n    {'description': 'Name of asset',\n     'type': 'string',\n     'pattern': '^[a-zA-Z0-9_.]*$',\n     'example': 'Bruce'}\n\nOn instance['name']:\n    'Bruce!'",
      "data": {
        "schema": "avalon-core:asset-2.0",
        "type": "asset",
        "parent": "592c33475f8c1b064c4d1696",
        "name": "Bruce!",
        "silo": "assets",
        "data": {
          "key": "value"
        }
      }
    }
  ]
}