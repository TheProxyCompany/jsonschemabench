{
  "description": "sample Github_hard/o79613.json",
  "meta": {
    "full_size": 2935,
    "stripped_size": 2675,
    "features": [
      "$ref",
      "additionalProperties",
      "dependencies",
      "format",
      "format:environment",
      "format:ports",
      "items",
      "oneOf",
      "patternProperties"
    ],
    "raw_features": [
      "$schema",
      "_boolSchema",
      "definitions",
      "properties",
      "required",
      "type",
      "type:[]",
      "type:array",
      "type:boolean",
      "type:null",
      "type:number",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "type": "object",
    "patternProperties": {
      "^[a-zA-Z0-9._-]+$": {
        "$ref": "#/definitions/service"
      }
    },
    "definitions": {
      "service": {
        "type": "object",
        "properties": {
          "build": {
            "type": "string"
          },
          "cap_add": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "_uniqueItems": true
          },
          "cap_drop": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "_uniqueItems": true
          },
          "command": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "container_name": {
            "type": "string"
          },
          "cpu_shares": {
            "type": [
              "number",
              "string"
            ]
          },
          "cpuset": {
            "type": "string"
          },
          "devices": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "_uniqueItems": true
          },
          "dns": {
            "$ref": "#/definitions/string_or_list"
          },
          "dns_search": {
            "$ref": "#/definitions/string_or_list"
          },
          "dockerfile": {
            "type": "string"
          },
          "domainname": {
            "type": "string"
          },
          "entrypoint": {
            "$ref": "#/definitions/string_or_list"
          },
          "env_file": {
            "$ref": "#/definitions/string_or_list"
          },
          "environment": {
            "oneOf": [
              {
                "type": "object",
                "patternProperties": {
                  "^[^-]+$": {
                    "type": [
                      "string",
                      "number",
                      "boolean"
                    ],
                    "format": "environment"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "_uniqueItems": true
              }
            ]
          },
          "expose": {
            "type": "array",
            "items": {
              "type": [
                "string",
                "number"
              ]
            },
            "_uniqueItems": true
          },
          "extends": {
            "type": "object",
            "properties": {
              "service": {
                "type": "string"
              },
              "file": {
                "type": "string"
              }
            },
            "required": [
              "service"
            ],
            "additionalProperties": false
          },
          "extra_hosts": {
            "$ref": "#/definitions/list_or_dict"
          },
          "external_links": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "_uniqueItems": true
          },
          "hostname": {
            "type": "string"
          },
          "image": {
            "type": "string"
          },
          "ipc": {
            "type": "string"
          },
          "labels": {
            "$ref": "#/definitions/list_or_dict"
          },
          "links": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "_uniqueItems": true
          },
          "log_driver": {
            "type": "string"
          },
          "log_opt": {
            "type": "object"
          },
          "mac_address": {
            "type": "string"
          },
          "mem_limit": {
            "type": [
              "number",
              "string"
            ]
          },
          "memswap_limit": {
            "type": [
              "number",
              "string"
            ]
          },
          "name": {
            "type": "string"
          },
          "net": {
            "type": "string"
          },
          "pid": {
            "type": [
              "string",
              "null"
            ]
          },
          "ports": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "type": "string",
                  "format": "ports"
                },
                {
                  "type": "number",
                  "format": "ports"
                }
              ]
            },
            "_uniqueItems": true
          },
          "privileged": {
            "type": "boolean"
          },
          "read_only": {
            "type": "boolean"
          },
          "restart": {
            "type": "string"
          },
          "security_opt": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "_uniqueItems": true
          },
          "stdin_open": {
            "type": "boolean"
          },
          "tty": {
            "type": "boolean"
          },
          "user": {
            "type": "string"
          },
          "volumes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "_uniqueItems": true
          },
          "volume_driver": {
            "type": "string"
          },
          "volumes_from": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "_uniqueItems": true
          },
          "working_dir": {
            "type": "string"
          }
        },
        "dependencies": {
          "memswap_limit": [
            "mem_limit"
          ]
        },
        "additionalProperties": false
      },
      "string_or_list": {
        "oneOf": [
          {
            "type": "string"
          },
          {
            "$ref": "#/definitions/list_of_strings"
          }
        ]
      },
      "list_of_strings": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "_uniqueItems": true
      },
      "list_or_dict": {
        "oneOf": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "_uniqueItems": true
          },
          {
            "type": "object"
          }
        ]
      }
    },
    "additionalProperties": false
  },
  "tests": [
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "service1": {
          "build": "context",
          "cap_add": [
            "NET_ADMIN"
          ],
          "cap_drop": [
            "SYS_ADMIN"
          ],
          "command": [
            "bash",
            "-c",
            "echo 'Hello World'"
          ],
          "container_name": "my_service",
          "cpu_shares": 1024,
          "cpuset": "0-3",
          "devices": [
            "/dev/ttyUSB0:/dev/ttyUSB0"
          ],
          "dns": [
            "8.8.8.8",
            "8.8.4.4"
          ],
          "dns_search": [
            "example.com",
            "example.net"
          ],
          "dockerfile": "Dockerfile",
          "domainname": "example.com",
          "entrypoint": [
            "/bin/bash",
            "-c"
          ],
          "env_file": [
            ".env"
          ],
          "environment": {
            "VARIABLE": "value"
          },
          "expose": [
            "80",
            "443"
          ],
          "extends": {
            "service": "base",
            "file": "docker-compose.yml"
          },
          "extra_hosts": [
            "example.com:192.168.1.100"
          ],
          "external_links": [
            "service1:service1"
          ],
          "hostname": "example",
          "image": "ubuntu:latest",
          "ipc": "host",
          "labels": {
            "com.example.label": "value"
          },
          "links": [
            "service1:service1"
          ],
          "log_driver": "json-file",
          "log_opt": {
            "labels": "com.example.label",
            "env": "VARIABLE"
          },
          "mac_address": "00:11:22:33:44:55",
          "mem_limit": "1024m",
          "memswap_limit": "2048m",
          "name": "my_service",
          "net": "host",
          "pid": "host",
          "ports": [
            "80:80",
            "443:443"
          ],
          "privileged": true,
          "read_only": true,
          "restart": "always",
          "security_opt": [
            "label:disable"
          ],
          "stdin_open": true,
          "tty": true,
          "user": "user",
          "volumes": [
            "/path/to/host:/path/to/container"
          ],
          "volume_driver": "local",
          "volumes_from": [
            "service1"
          ],
          "working_dir": "/path/to/container"
        }
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "service1": {
          "build": "./service1",
          "cap_add": [
            "NET_ADMIN"
          ],
          "cap_drop": [
            "SYS_ADMIN"
          ],
          "command": [
            "node",
            "app.js"
          ],
          "container_name": "service1",
          "cpu_shares": 1024,
          "cpuset": "0",
          "devices": [
            "/dev/ttyUSB0:/dev/ttyUSB0"
          ],
          "dns": [
            "8.8.8.8"
          ],
          "dns_search": [
            "example.com"
          ],
          "domainname": "example.com",
          "entrypoint": [
            "node"
          ],
          "env_file": [
            "./.env"
          ],
          "environment": {
            "NODE_ENV": "production"
          },
          "expose": [
            "8080"
          ],
          "extends": {
            "service": "service2",
            "file": "docker-compose.yml"
          },
          "extra_hosts": {
            "example.com": "127.0.0.1"
          },
          "external_links": [
            "service2"
          ],
          "hostname": "service1",
          "image": "node:14",
          "ipc": "host",
          "labels": {
            "com.example.label": "value"
          },
          "links": [
            "service2"
          ],
          "log_driver": "json-file",
          "log_opt": {
            "labels": "com.example.label",
            "env": "NODE_ENV"
          },
          "mac_address": "00:11:22:33:44:55",
          "mem_limit": "1g",
          "memswap_limit": "2g",
          "name": "service1",
          "net": "host",
          "pid": "host",
          "ports": [
            "8080:8080"
          ],
          "privileged": true,
          "read_only": true,
          "restart": "always",
          "security_opt": [
            "label:disable"
          ],
          "stdin_open": true,
          "tty": true,
          "user": "node",
          "volumes": [
            "/var/lib/data:/data"
          ],
          "volume_driver": "local",
          "volumes_from": [
            "service2"
          ],
          "working_dir": "/app"
        },
        "service2": {
          "build": "./service2",
          "image": "postgres:13",
          "environment": {
            "POSTGRES_USER": "user",
            "POSTGRES_PASSWORD": "password",
            "POSTGRES_DB": "db"
          },
          "ports": [
            "5432:5432"
          ],
          "volumes": [
            "/var/lib/postgres:/var/lib/postgresql/data"
          ]
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on patternProperties keyword",
      "valid": false,
      "rust_error": "Additional properties are not allowed ('service!@#$%^&*()' was unexpected)",
      "python_error": "'service!@#$%^&*()' does not match any of the regexes: '^[a-zA-Z0-9._-]+$'\n\nFailed validating 'additionalProperties' in schema:\n    {'$schema': 'http://json-schema.org/draft-04/schema#',\n     'type': 'object',\n     'patternProperties': {'^[a-zA-Z0-9._-]+$': {'$ref': '#/definitions/service'}},\n     'definitions': {'service': {'type': 'object',\n                                 'properties': {'build': {'type': 'string'},\n                                                'cap_add': {'type': 'array',\n                                                            'items': {'type': 'string'},\n                                                            '_uniqueItems': True},\n                                                'cap_drop': {'type': 'array',\n                                                             'items': {'type': 'string'},\n                                                             '_uniqueItems': True},\n                                                'command': {'oneOf': [{'type': 'string'},\n           .. (10248 more)",
      "data": {
        "service1": {
          "build": "./service1",
          "cap_add": [
            "NET_ADMIN"
          ],
          "cap_drop": [
            "SYS_ADMIN"
          ],
          "command": [
            "node",
            "app.js"
          ],
          "container_name": "service1",
          "cpu_shares": 1024,
          "cpuset": "0",
          "devices": [
            "/dev/ttyUSB0:/dev/ttyUSB0"
          ],
          "dns": [
            "8.8.8.8"
          ],
          "dns_search": [
            "example.com"
          ],
          "domainname": "example.com",
          "entrypoint": [
            "node"
          ],
          "env_file": [
            "./.env"
          ],
          "environment": {
            "NODE_ENV": "production"
          },
          "expose": [
            "8080"
          ],
          "extends": {
            "service": "service2",
            "file": "docker-compose.yml"
          },
          "extra_hosts": {
            "example.com": "127.0.0.1"
          },
          "external_links": [
            "service2"
          ],
          "hostname": "service1",
          "image": "node:14",
          "ipc": "host",
          "labels": {
            "com.example.label": "value"
          },
          "links": [
            "service2"
          ],
          "log_driver": "json-file",
          "log_opt": {
            "labels": "com.example.label",
            "env": "NODE_ENV"
          },
          "mac_address": "00:11:22:33:44:55",
          "mem_limit": "1g",
          "memswap_limit": "2g",
          "name": "service1",
          "net": "host",
          "pid": "host",
          "ports": [
            "8080:8080"
          ],
          "privileged": true,
          "read_only": true,
          "restart": "always",
          "security_opt": [
            "label:disable"
          ],
          "stdin_open": true,
          "tty": true,
          "user": "node",
          "volumes": [
            "/var/lib/data:/data"
          ],
          "volume_driver": "local",
          "volumes_from": [
            "service2"
          ],
          "working_dir": "/app"
        },
        "service!@#$%^&*()": {
          "build": "./service2",
          "image": "postgres:13",
          "environment": {
            "POSTGRES_USER": "user",
            "POSTGRES_PASSWORD": "password",
            "POSTGRES_DB": "db"
          },
          "ports": [
            "5432:5432"
          ],
          "volumes": [
            "/var/lib/postgres:/var/lib/postgresql/data"
          ]
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on type keyword with an array of types",
      "valid": false,
      "rust_error": "[1024,2048] is not of types \"number\", \"string\"",
      "python_error": "0 is not of type 'string'\n\nFailed validating 'type' in schema['patternProperties']['^[a-zA-Z0-9._-]+$']['properties']['cpuset']:\n    {'type': 'string'}\n\nOn instance['service1']['cpuset']:\n    0",
      "data": {
        "service1": {
          "build": "./service1",
          "cap_add": [
            "NET_ADMIN"
          ],
          "cap_drop": [
            "SYS_ADMIN"
          ],
          "command": [
            "node",
            "app.js"
          ],
          "container_name": "service1",
          "cpu_shares": [
            1024,
            2048
          ],
          "cpuset": 0,
          "devices": [
            "/dev/ttyUSB0:/dev/ttyUSB0"
          ],
          "dns": [
            "8.8.8.8"
          ],
          "dns_search": [
            "example.com"
          ],
          "domainname": "example.com",
          "entrypoint": [
            "node"
          ],
          "env_file": [
            "./.env"
          ],
          "environment": {
            "NODE_ENV": "production"
          },
          "expose": [
            "8080"
          ],
          "extends": {
            "service": "service2",
            "file": "docker-compose.yml"
          },
          "extra_hosts": {
            "example.com": "127.0.0.1"
          },
          "external_links": [
            "service2"
          ],
          "hostname": "service1",
          "image": "node:14",
          "ipc": "host",
          "labels": {
            "com.example.label": "value"
          },
          "links": [
            "service2"
          ],
          "log_driver": "json-file",
          "log_opt": {
            "labels": "com.example.label",
            "env": "NODE_ENV"
          },
          "mac_address": "00:11:22:33:44:55",
          "mem_limit": "1g",
          "memswap_limit": "2g",
          "name": "service1",
          "net": "host",
          "pid": "host",
          "ports": [
            "8080:8080"
          ],
          "privileged": true,
          "read_only": true,
          "restart": "always",
          "security_opt": [
            "label:disable"
          ],
          "stdin_open": true,
          "tty": true,
          "user": "node",
          "volumes": [
            "/var/lib/data:/data"
          ],
          "volume_driver": "local",
          "volumes_from": [
            "service2"
          ],
          "working_dir": "/app"
        },
        "service2": {
          "build": "./service2",
          "image": "postgres:13",
          "environment": {
            "POSTGRES_USER": "user",
            "POSTGRES_PASSWORD": "password",
            "POSTGRES_DB": "db"
          },
          "ports": [
            "5432:5432"
          ],
          "volumes": [
            "/var/lib/postgres:/var/lib/postgresql/data"
          ]
        }
      }
    }
  ]
}