{
  "description": "sample Kubernetes/kb_829_Normalized.json",
  "meta": {
    "full_size": 1444,
    "stripped_size": 474,
    "features": [
      "$ref",
      "format",
      "format:int32",
      "oneOf"
    ],
    "raw_features": [
      "definitions",
      "properties",
      "required",
      "type",
      "type:[]",
      "type:integer",
      "type:null",
      "type:number",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "definitions": {
      "https:__kubernetesjsonschema_dev_master__defs_json_defs_io_k8s_apimachinery_pkg_api_resource_Quantity": {
        "oneOf": [
          {
            "type": "string"
          },
          {
            "type": "number"
          }
        ]
      }
    },
    "description": "ResourceMetricSource indicates how to scale on a resource metric known to Kubernetes, as specified in requests and limits, describing each pod in the current scale target (e.g. CPU or memory).  The values will be averaged together before being compared to the target.  Such metrics are built in to Kubernetes, and have special scaling options on top of those available to normal per-pod metrics using the \"pods\" source.  Only one \"target\" type should be set.",
    "properties": {
      "name": {
        "description": "name is the name of the resource in question.",
        "type": [
          "string",
          "null"
        ]
      },
      "targetAverageUtilization": {
        "description": "targetAverageUtilization is the target value of the average of the resource metric across all relevant pods, represented as a percentage of the requested value of the resource for the pods.",
        "format": "int32",
        "type": [
          "integer",
          "null"
        ]
      },
      "targetAverageValue": {
        "$ref": "#/definitions/https:__kubernetesjsonschema_dev_master__defs_json_defs_io_k8s_apimachinery_pkg_api_resource_Quantity",
        "description": "targetAverageValue is the target value of the average of the resource metric across all relevant pods, as a raw value (instead of as a percentage of the request), similar to the \"pods\" metric source type."
      }
    },
    "required": [
      "name"
    ],
    "type": "object"
  },
  "tests": [
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "name": "cpu",
        "targetAverageUtilization": 50,
        "targetAverageValue": "100m"
      }
    },
    {
      "description": "llama-70b generated negative; focus on type keyword with an array of types",
      "valid": false,
      "rust_error": "true is not of types \"null\", \"string\"",
      "python_error": "True is not of type 'string', 'null'\n\nFailed validating 'type' in schema['properties']['name']:\n    {'description': 'name is the name of the resource in question.',\n     'type': ['string', 'null']}\n\nOn instance['name']:\n    True",
      "data": {
        "name": true,
        "targetAverageUtilization": 50,
        "targetAverageValue": "100m"
      }
    },
    {
      "description": "llama-70b generated negative; focus on oneOf keyword",
      "valid": false,
      "rust_error": "{\"foo\":\"bar\"} is not valid under any of the schemas listed in the 'oneOf' keyword",
      "python_error": "{'foo': 'bar'} is not valid under any of the given schemas\n\nFailed validating 'oneOf' in schema['properties']['targetAverageValue']:\n    {'oneOf': [{'type': 'string'}, {'type': 'number'}]}\n\nOn instance['targetAverageValue']:\n    {'foo': 'bar'}",
      "data": {
        "name": "cpu",
        "targetAverageUtilization": 50,
        "targetAverageValue": {
          "foo": "bar"
        }
      }
    }
  ]
}