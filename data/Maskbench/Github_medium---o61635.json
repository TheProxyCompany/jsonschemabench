{
  "description": "sample Github_medium/o61635.json",
  "meta": {
    "full_size": 2857,
    "stripped_size": 767,
    "features": [
      "items",
      "pattern"
    ],
    "raw_features": [
      "properties",
      "type",
      "type:array",
      "type:number",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "properties": {
      "Kerberos": {
        "default": {},
        "description": "Kerberos-related information.",
        "properties": {
          "AppIdentifierMatches": {
            "description": "List of app identifiers that are allowed to use this login. If this field missing, this login matches all app identifiers.",
            "items": {
              "description": "Exact or partial bundle ID match using the wildcard character eg com.apple.*",
              "type": "string"
            },
            "type": "array"
          },
          "PayloadCertificateUUID": {
            "description": "The PayloadUUID of an identity certificate payload that can be used to renew the Kerberos credential without user interaction.\n                            The certificate payload must have either the com.apple.security.pkcs12 or com.apple.security.scep payload type.\n                            Both the Single Sign On payload and the identity certificate payload must be included in the same configuration profile",
            "pattern": "^[0-9A-Za-z]{8}-[0-9A-Za-z]{4}-[0-9A-Za-z]{4}-[0-9A-Za-z]{4}-[0-9A-Za-z]{12}$",
            "type": "string"
          },
          "PrincipalName": {
            "description": "The Kerberos principal name. If not provided, the user is prompted for one during profile installation. This field must be provided for MDM installation.",
            "type": "string"
          },
          "Realm": {
            "description": "The Kerberos realm name. This value should be properly capitalized.",
            "type": "string"
          },
          "URLPrefixMatches": {
            "description": "List of URLs prefixes that must be matched to use this account for Kerberos authentication over HTTP. Note that the URL postfixes must match as well.",
            "items": {
              "description": "Each entry in the URLPrefixMatches array must contain a URL prefix. Only URLs that begin with one of the strings in this account are allowed to access the Kerberos ticket.",
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "Name": {
        "description": "Human-readable name for the account.",
        "type": "string"
      },
      "PayloadDescription": {
        "default": "Single Sign-On Account Payload",
        "description": "Description of the payload",
        "type": "string"
      },
      "PayloadDisplayName": {
        "default": "Single Sign-On Account Payload",
        "description": "Name of the payload",
        "type": "string"
      },
      "PayloadIdentifier": {
        "default": "com.apple.sso",
        "description": "A unique identifier for the payload, dot-delimited.  Usually root PayloadIdentifier+subidentifier",
        "type": "string"
      },
      "PayloadOrganization": {
        "description": "This value describes the issuing organization of the profile, as displayed to the user",
        "type": "string"
      },
      "PayloadType": {
        "default": "com.apple.sso",
        "description": "The type of the payload, a reverse dns string",
        "type": "string"
      },
      "PayloadUUID": {
        "default": "",
        "description": "Unique identifier for the payload (format 01234567-89AB-CDEF-0123-456789ABCDEF)",
        "pattern": "^[0-9A-Za-z]{8}-[0-9A-Za-z]{4}-[0-9A-Za-z]{4}-[0-9A-Za-z]{4}-[0-9A-Za-z]{12}$",
        "type": "string"
      },
      "PayloadVersion": {
        "default": 1,
        "description": "The version of the whole configuration profile.",
        "type": "number"
      }
    },
    "title": "com.apple.sso",
    "type": "object"
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "Kerberos": {
          "AppIdentifierMatches": [
            "com.apple.*",
            "com.example.app"
          ],
          "PayloadCertificateUUID": "12345678-1234-1234-1234-123456789012",
          "PrincipalName": "user@example.com",
          "Realm": "EXAMPLE.COM",
          "URLPrefixMatches": [
            "https://example.com",
            "https://sub.example.com"
          ]
        },
        "Name": "Example Single Sign-On Account",
        "PayloadDescription": "Example Single Sign-On Account Payload",
        "PayloadDisplayName": "Example Single Sign-On Account Payload",
        "PayloadIdentifier": "com.example.sso",
        "PayloadOrganization": "Example Inc.",
        "PayloadType": "com.apple.sso",
        "PayloadUUID": "12345678-1234-1234-1234-123456789012",
        "PayloadVersion": 1
      }
    },
    {
      "description": "llama-70b generated negative; focus on pattern keyword",
      "valid": false,
      "rust_error": "\"InvalidUUID\" does not match \"^[0-9A-Za-z]{8}-[0-9A-Za-z]{4}-[0-9A-Za-z]{4}-[0-9A-Za-z]{4}-[0-9A-Za-z]{12}$\"",
      "python_error": "'InvalidUUID' does not match '^[0-9A-Za-z]{8}-[0-9A-Za-z]{4}-[0-9A-Za-z]{4}-[0-9A-Za-z]{4}-[0-9A-Za-z]{12}$'\n\nFailed validating 'pattern' in schema['properties']['PayloadUUID']:\n    {'default': '',\n     'description': 'Unique identifier for the payload (format '\n                    '01234567-89AB-CDEF-0123-456789ABCDEF)',\n     'pattern': '^[0-9A-Za-z]{8}-[0-9A-Za-z]{4}-[0-9A-Za-z]{4}-[0-9A-Za-z]{4}-[0-9A-Za-z]{12}$',\n     'type': 'string'}\n\nOn instance['PayloadUUID']:\n    'InvalidUUID'",
      "data": {
        "Kerberos": {
          "AppIdentifierMatches": [
            "com.apple.*",
            "com.example.app"
          ],
          "PayloadCertificateUUID": "InvalidUUID",
          "PrincipalName": "user@example.com",
          "Realm": "EXAMPLE.COM",
          "URLPrefixMatches": [
            "https://example.com",
            "https://sub.example.com"
          ]
        },
        "Name": "Example Single Sign-On Account",
        "PayloadDescription": "Example Single Sign-On Account Payload",
        "PayloadDisplayName": "Example Single Sign-On Account Payload",
        "PayloadIdentifier": "com.example.sso",
        "PayloadOrganization": "Example Inc.",
        "PayloadType": "com.apple.sso",
        "PayloadUUID": "InvalidUUID",
        "PayloadVersion": 1
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "12345 is not of type \"string\"",
      "python_error": "12345 is not of type 'string'\n\nFailed validating 'type' in schema['properties']['Kerberos']['properties']['AppIdentifierMatches']['items']:\n    {'description': 'Exact or partial bundle ID match using the wildcard '\n                    'character eg com.apple.*',\n     'type': 'string'}\n\nOn instance['Kerberos']['AppIdentifierMatches'][1]:\n    12345",
      "data": {
        "Kerberos": {
          "AppIdentifierMatches": [
            "com.apple.*",
            12345
          ],
          "PayloadCertificateUUID": "12345678-1234-1234-1234-123456789012",
          "PrincipalName": "user@example.com",
          "Realm": "EXAMPLE.COM",
          "URLPrefixMatches": [
            "https://example.com",
            "https://sub.example.com"
          ]
        },
        "Name": "Example Single Sign-On Account",
        "PayloadDescription": "Example Single Sign-On Account Payload",
        "PayloadDisplayName": "Example Single Sign-On Account Payload",
        "PayloadIdentifier": "com.example.sso",
        "PayloadOrganization": "Example Inc.",
        "PayloadType": "com.apple.sso",
        "PayloadUUID": "12345678-1234-1234-1234-123456789012",
        "PayloadVersion": 1
      }
    },
    {
      "description": "llama-70b generated negative; focus on pattern keyword",
      "valid": false,
      "rust_error": "\"12345678123412341234123456789012\" does not match \"^[0-9A-Za-z]{8}-[0-9A-Za-z]{4}-[0-9A-Za-z]{4}-[0-9A-Za-z]{4}-[0-9A-Za-z]{12}$\"",
      "python_error": "'12345678123412341234123456789012' does not match '^[0-9A-Za-z]{8}-[0-9A-Za-z]{4}-[0-9A-Za-z]{4}-[0-9A-Za-z]{4}-[0-9A-Za-z]{12}$'\n\nFailed validating 'pattern' in schema['properties']['Kerberos']['properties']['PayloadCertificateUUID']:\n    {'description': 'The PayloadUUID of an identity certificate payload '\n                    'that can be used to renew the Kerberos credential '\n                    'without user interaction.\\n'\n                    '                            The certificate payload '\n                    'must have either the com.apple.security.pkcs12 or '\n                    'com.apple.security.scep payload type.\\n'\n                    '                            Both the Single Sign On '\n                    'payload and the identity certificate payload must be '\n                    'included in the same configuration profile',\n     'pattern': '^[0-9A-Za-z]{8}-[0-9A-Za-z]{4}-[0-9A-Za-z]{4}-[0-9A-Za-z]{4}-[0-9A-Za-z]{12}$',\n     'type': 'string'}\n\nOn instance['Kerberos']['PayloadCertificateUUID']:\n    '12345678123412341234123456789012'",
      "data": {
        "Kerberos": {
          "AppIdentifierMatches": [
            "com.apple.*",
            "com.example.app"
          ],
          "PayloadCertificateUUID": "12345678123412341234123456789012",
          "PrincipalName": "user@example.com",
          "Realm": "EXAMPLE.COM",
          "URLPrefixMatches": [
            "https://example.com",
            "https://sub.example.com"
          ]
        },
        "Name": "Example Single Sign-On Account",
        "PayloadDescription": "Example Single Sign-On Account Payload",
        "PayloadDisplayName": "Example Single Sign-On Account Payload",
        "PayloadIdentifier": "com.example.sso",
        "PayloadOrganization": "Example Inc.",
        "PayloadType": "com.apple.sso",
        "PayloadUUID": "12345678-1234-1234-1234-123456789012",
        "PayloadVersion": 1
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"123456781234123412341234123456789012\" does not match \"^[0-9A-Za-z]{8}-[0-9A-Za-z]{4}-[0-9A-Za-z]{4}-[0-9A-Za-z]{4}-[0-9A-Za-z]{12}$\"",
      "python_error": "123 is not of type 'string'\n\nFailed validating 'type' in schema['properties']['PayloadType']:\n    {'default': 'com.apple.sso',\n     'description': 'The type of the payload, a reverse dns string',\n     'type': 'string'}\n\nOn instance['PayloadType']:\n    123",
      "data": {
        "Kerberos": {
          "AppIdentifierMatches": [
            "com.apple.*",
            "com.example.app"
          ],
          "PayloadCertificateUUID": "123456781234123412341234123456789012",
          "Realm": "example.com",
          "Invalid UUID format": "PrincipalName",
          "Missing colon after property name": [
            "https://example.com",
            "https://sub.example.com"
          ],
          "Realm should be properly capitalized": "URLPrefixMatches"
        },
        "Name": 123,
        "Name should be a string": "PayloadDescription",
        "Missing colon after property name": "abc",
        "PayloadDisplayName": "Example Single Sign-On Account Payload",
        "PayloadIdentifier": 123,
        "PayloadIdentifier should be a string": "PayloadOrganization",
        "PayloadType": 123,
        "PayloadType should be a string": "PayloadUUID",
        "Invalid UUID format": "PayloadVersion",
        "PayloadVersion should be a number": "PayloadVersion",
        "Duplicate property name": 1
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "Kerberos": {
          "AppIdentifierMatches": [
            "com.apple.*",
            "com.example.app"
          ],
          "PayloadCertificateUUID": "01234567-89AB-CDEF-0123-456789ABCDEF",
          "PrincipalName": "user@example.com",
          "Realm": "EXAMPLE.COM",
          "URLPrefixMatches": [
            "https://example.com",
            "https://subdomain.example.com"
          ]
        },
        "Name": "Example Single Sign-On Account",
        "PayloadDescription": "Single Sign-On Account Payload for Example",
        "PayloadDisplayName": "Example Single Sign-On Account Payload",
        "PayloadIdentifier": "com.example.sso",
        "PayloadOrganization": "Example Inc.",
        "PayloadType": "com.apple.sso",
        "PayloadUUID": "01234567-89AB-CDEF-0123-456789ABCDEF",
        "PayloadVersion": 1
      }
    },
    {
      "description": "llama-70b generated negative; focus on pattern keyword",
      "valid": false,
      "rust_error": "\"Invalid-UUID-Format\" does not match \"^[0-9A-Za-z]{8}-[0-9A-Za-z]{4}-[0-9A-Za-z]{4}-[0-9A-Za-z]{4}-[0-9A-Za-z]{12}$\"",
      "python_error": "'Invalid-UUID-Format' does not match '^[0-9A-Za-z]{8}-[0-9A-Za-z]{4}-[0-9A-Za-z]{4}-[0-9A-Za-z]{4}-[0-9A-Za-z]{12}$'\n\nFailed validating 'pattern' in schema['properties']['Kerberos']['properties']['PayloadCertificateUUID']:\n    {'description': 'The PayloadUUID of an identity certificate payload '\n                    'that can be used to renew the Kerberos credential '\n                    'without user interaction.\\n'\n                    '                            The certificate payload '\n                    'must have either the com.apple.security.pkcs12 or '\n                    'com.apple.security.scep payload type.\\n'\n                    '                            Both the Single Sign On '\n                    'payload and the identity certificate payload must be '\n                    'included in the same configuration profile',\n     'pattern': '^[0-9A-Za-z]{8}-[0-9A-Za-z]{4}-[0-9A-Za-z]{4}-[0-9A-Za-z]{4}-[0-9A-Za-z]{12}$',\n     'type': 'string'}\n\nOn instance['Kerberos']['PayloadCertificateUUID']:\n    'Invalid-UUID-Format'",
      "data": {
        "Kerberos": {
          "AppIdentifierMatches": [
            "com.apple.*",
            "com.example.app"
          ],
          "PayloadCertificateUUID": "Invalid-UUID-Format",
          "PrincipalName": "user@example.com",
          "Realm": "EXAMPLE.COM",
          "URLPrefixMatches": [
            "https://example.com",
            "https://subdomain.example.com"
          ]
        },
        "Name": "Example Single Sign-On Account",
        "PayloadDescription": "Single Sign-On Account Payload for Example",
        "PayloadDisplayName": "Example Single Sign-On Account Payload",
        "PayloadIdentifier": "com.example.sso",
        "PayloadOrganization": "Example Inc.",
        "PayloadType": "com.apple.sso",
        "PayloadUUID": "01234567-89AB-CDEF-0123-456789ABCDEF",
        "PayloadVersion": 1
      }
    }
  ]
}