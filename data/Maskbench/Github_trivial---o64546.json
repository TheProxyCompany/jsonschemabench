{
  "description": "sample Github_trivial/o64546.json",
  "meta": {
    "full_size": 457,
    "stripped_size": 376,
    "features": [
      "pattern"
    ],
    "raw_features": [
      "$schema",
      "id",
      "type",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "description": "Internet Media (MIME) Type",
    "id": "https://api.npolar.no/_schema/ref/mimetype/1.0",
    "pattern": "^(application|audio|example|image|message|model|multipart|text|video)\\/(?:(prs|vnd|x)\\.)?((?:[a-z\\d][\\w!#$&^.-]+)+)(?:\\s*\\+(ber|cbor|der|fastinfoset|json|wbxml|xml|zip))?(?:\\s*;\\s*([a-zA-Z\\d][\\w!#$&^-]+=[a-zA-Z\\d][\\w!#$&^-]+))*$",
    "title": "Referenced MIME Type Schema",
    "type": "string"
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": "application/json; charset=UTF-8"
    },
    {
      "description": "llama-70b generated negative; focus on pattern keyword",
      "valid": false,
      "rust_error": "{\"mimetype\":\"application/json; charset=UTF-9\"} is not of type \"string\"",
      "python_error": "{'mimetype': 'application/json; charset=UTF-9'} is not of type 'string'\n\nFailed validating 'type' in schema:\n    {'$schema': 'http://json-schema.org/draft-04/schema#',\n     'description': 'Internet Media (MIME) Type',\n     'id': 'https://api.npolar.no/_schema/ref/mimetype/1.0',\n     'pattern': '^(application|audio|example|image|message|model|multipart|text|video)\\\\/(?:(prs|vnd|x)\\\\.)?((?:[a-z\\\\d][\\\\w!#$&^.-]+)+)(?:\\\\s*\\\\+(ber|cbor|der|fastinfoset|json|wbxml|xml|zip))?(?:\\\\s*;\\\\s*([a-zA-Z\\\\d][\\\\w!#$&^-]+=[a-zA-Z\\\\d][\\\\w!#$&^-]+))*$',\n     'title': 'Referenced MIME Type Schema',\n     'type': 'string'}\n\nOn instance:\n    {'mimetype': 'application/json; charset=UTF-9'}",
      "data": {
        "mimetype": "application/json; charset=UTF-9"
      }
    },
    {
      "description": "llama-70b generated negative; focus on pattern keyword",
      "valid": false,
      "rust_error": "{\"type\":\"string\",\"pattern\":\"^a*b\",\"title\":\"Schema with pattern keyword\"} is not of type \"string\"",
      "python_error": "{'type': 'string', 'pattern': '^a*b', 'title': 'Schema with pattern keyword'} is not of type 'string'\n\nFailed validating 'type' in schema:\n    {'$schema': 'http://json-schema.org/draft-04/schema#',\n     'description': 'Internet Media (MIME) Type',\n     'id': 'https://api.npolar.no/_schema/ref/mimetype/1.0',\n     'pattern': '^(application|audio|example|image|message|model|multipart|text|video)\\\\/(?:(prs|vnd|x)\\\\.)?((?:[a-z\\\\d][\\\\w!#$&^.-]+)+)(?:\\\\s*\\\\+(ber|cbor|der|fastinfoset|json|wbxml|xml|zip))?(?:\\\\s*;\\\\s*([a-zA-Z\\\\d][\\\\w!#$&^-]+=[a-zA-Z\\\\d][\\\\w!#$&^-]+))*$',\n     'title': 'Referenced MIME Type Schema',\n     'type': 'string'}\n\nOn instance:\n    {'type': 'string',\n     'pattern': '^a*b',\n     'title': 'Schema with pattern keyword'}",
      "data": {
        "type": "string",
        "pattern": "^a*b",
        "title": "Schema with pattern keyword"
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "{\"type\":\"string\",\"value\":\"application/json; charset=UTF-9\"} is not of type \"string\"",
      "python_error": "{'type': 'string', 'value': 'application/json; charset=UTF-9'} is not of type 'string'\n\nFailed validating 'type' in schema:\n    {'$schema': 'http://json-schema.org/draft-04/schema#',\n     'description': 'Internet Media (MIME) Type',\n     'id': 'https://api.npolar.no/_schema/ref/mimetype/1.0',\n     'pattern': '^(application|audio|example|image|message|model|multipart|text|video)\\\\/(?:(prs|vnd|x)\\\\.)?((?:[a-z\\\\d][\\\\w!#$&^.-]+)+)(?:\\\\s*\\\\+(ber|cbor|der|fastinfoset|json|wbxml|xml|zip))?(?:\\\\s*;\\\\s*([a-zA-Z\\\\d][\\\\w!#$&^-]+=[a-zA-Z\\\\d][\\\\w!#$&^-]+))*$',\n     'title': 'Referenced MIME Type Schema',\n     'type': 'string'}\n\nOn instance:\n    {'type': 'string', 'value': 'application/json; charset=UTF-9'}",
      "data": {
        "type": "string",
        "value": "application/json; charset=UTF-9"
      }
    },
    {
      "description": "llama-70b generated negative; focus on pattern keyword",
      "valid": false,
      "rust_error": "{\"mimetype\":\"application/json charset=UTF-8\"} is not of type \"string\"",
      "python_error": "{'mimetype': 'application/json charset=UTF-8'} is not of type 'string'\n\nFailed validating 'type' in schema:\n    {'$schema': 'http://json-schema.org/draft-04/schema#',\n     'description': 'Internet Media (MIME) Type',\n     'id': 'https://api.npolar.no/_schema/ref/mimetype/1.0',\n     'pattern': '^(application|audio|example|image|message|model|multipart|text|video)\\\\/(?:(prs|vnd|x)\\\\.)?((?:[a-z\\\\d][\\\\w!#$&^.-]+)+)(?:\\\\s*\\\\+(ber|cbor|der|fastinfoset|json|wbxml|xml|zip))?(?:\\\\s*;\\\\s*([a-zA-Z\\\\d][\\\\w!#$&^-]+=[a-zA-Z\\\\d][\\\\w!#$&^-]+))*$',\n     'title': 'Referenced MIME Type Schema',\n     'type': 'string'}\n\nOn instance:\n    {'mimetype': 'application/json charset=UTF-8'}",
      "data": {
        "mimetype": "application/json charset=UTF-8"
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "{\"type\":\"string\",\"description\":\"will fail due to more than one '+' character\",\"example\":\"application/json+ber+der; charset=UTF-8\"} is not of type \"string\"",
      "python_error": "{'type': 'string', 'description': \"will fail due to more than one '+' character\", 'example': 'application/json+ber+der; charset=UTF-8'} is not of type 'string'\n\nFailed validating 'type' in schema:\n    {'$schema': 'http://json-schema.org/draft-04/schema#',\n     'description': 'Internet Media (MIME) Type',\n     'id': 'https://api.npolar.no/_schema/ref/mimetype/1.0',\n     'pattern': '^(application|audio|example|image|message|model|multipart|text|video)\\\\/(?:(prs|vnd|x)\\\\.)?((?:[a-z\\\\d][\\\\w!#$&^.-]+)+)(?:\\\\s*\\\\+(ber|cbor|der|fastinfoset|json|wbxml|xml|zip))?(?:\\\\s*;\\\\s*([a-zA-Z\\\\d][\\\\w!#$&^-]+=[a-zA-Z\\\\d][\\\\w!#$&^-]+))*$',\n     'title': 'Referenced MIME Type Schema',\n     'type': 'string'}\n\nOn instance:\n    {'type': 'string',\n     'description': \"will fail due to more than one '+' character\",\n     'example': 'application/json+ber+der; charset=UTF-8'}",
      "data": {
        "type": "string",
        "description": "will fail due to more than one '+' character",
        "example": "application/json+ber+der; charset=UTF-8"
      }
    }
  ]
}