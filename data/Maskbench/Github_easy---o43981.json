{
  "description": "sample Github_easy/o43981.json",
  "meta": {
    "full_size": 211,
    "stripped_size": 177,
    "features": [
      "@minmaxLength",
      "additionalProperties",
      "items"
    ],
    "raw_features": [
      "$schema",
      "_boolSchema",
      "maxLength",
      "properties",
      "type",
      "type:array",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "title": "GetConfigurationRequest",
    "type": "object",
    "properties": {
      "key": {
        "type": "array",
        "items": {
          "type": "string",
          "maxLength": 50
        }
      }
    },
    "additionalProperties": false
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "key": [
          "configuration1",
          "configuration2"
        ]
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"thisisaverylongconfigurationkeythatexceeds50characters\" is longer than 50 characters",
      "python_error": "'thisisaverylongconfigurationkeythatexceeds50characters' is too long\n\nFailed validating 'maxLength' in schema['properties']['key']['items']:\n    {'type': 'string', 'maxLength': 50}\n\nOn instance['key'][2]:\n    'thisisaverylongconfigurationkeythatexceeds50characters'",
      "data": {
        "key": [
          "configuration1",
          "configuration2",
          "thisisaverylongconfigurationkeythatexceeds50characters"
        ]
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "Additional properties are not allowed ('extraKey' was unexpected)",
      "python_error": "Additional properties are not allowed ('extraKey' was unexpected)\n\nFailed validating 'additionalProperties' in schema:\n    {'$schema': 'http://json-schema.org/draft-04/schema#',\n     'title': 'GetConfigurationRequest',\n     'type': 'object',\n     'properties': {'key': {'type': 'array',\n                            'items': {'type': 'string', 'maxLength': 50}}},\n     'additionalProperties': False}\n\nOn instance:\n    {'key': ['configuration1', 'configuration2', 'a'],\n     'extraKey': 'extraValue'}",
      "data": {
        "key": [
          "configuration1",
          "configuration2",
          "a"
        ],
        "extraKey": "extraValue"
      }
    },
    {
      "description": "llama-70b generated negative; focus on maxLength keyword",
      "valid": false,
      "rust_error": "\"aVeryLongConfigurationKeyThatExceedsTheMaxLengthOf50CharactersAndShouldBeRejectedByTheValidator\" is longer than 50 characters",
      "python_error": "'aVeryLongConfigurationKeyThatExceedsTheMaxLengthOf50CharactersAndShouldBeRejectedByTheValidator' is too long\n\nFailed validating 'maxLength' in schema['properties']['key']['items']:\n    {'type': 'string', 'maxLength': 50}\n\nOn instance['key'][2]:\n    'aVeryLongConfigurationKeyThatExceedsTheMaxLengthOf50CharactersAndShouldBeRejectedByTheValidator'",
      "data": {
        "key": [
          "configuration1",
          "configuration2",
          "aVeryLongConfigurationKeyThatExceedsTheMaxLengthOf50CharactersAndShouldBeRejectedByTheValidator"
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on maxLength keyword",
      "valid": false,
      "rust_error": "\"a very long configuration key that exceeds the maximum allowed length of 50 characters and should cause the validator to report an error if it supports the maxLength keyword\" is longer than 50 characters",
      "python_error": "'a very long configuration key that exceeds the maximum allowed length of 50 characters and should cause the validator to report an error if it supports the maxLength keyword' is too long\n\nFailed validating 'maxLength' in schema['properties']['key']['items']:\n    {'type': 'string', 'maxLength': 50}\n\nOn instance['key'][0]:\n    ('a very long configuration key that exceeds the maximum allowed '\n     'length of 50 characters and should cause the validator to report an '\n     'error if it supports the maxLength keyword')",
      "data": {
        "key": [
          "a very long configuration key that exceeds the maximum allowed length of 50 characters and should cause the validator to report an error if it supports the maxLength keyword"
        ]
      }
    }
  ]
}