{
  "description": "sample Kubernetes/kb_206_Normalized.json",
  "meta": {
    "full_size": 4331,
    "stripped_size": 1558,
    "features": [
      "$ref",
      "items"
    ],
    "raw_features": [
      "definitions",
      "properties",
      "required",
      "type",
      "type:[]",
      "type:array",
      "type:null",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "definitions": {
      "https:__kubernetesjsonschema_dev_master__defs_json_defs_io_k8s_apiextensions-apiserver_pkg_apis_apiextensions_v1beta1_CustomResourceDefinitionCondition": {
        "description": "CustomResourceDefinitionCondition contains details for the current condition of this pod.",
        "properties": {
          "lastTransitionTime": {
            "$ref": "#/definitions/https:__kubernetesjsonschema_dev_master__defs_json_defs_io_k8s_apimachinery_pkg_apis_meta_v1_Time",
            "description": "lastTransitionTime last time the condition transitioned from one status to another."
          },
          "message": {
            "description": "message is a human-readable message indicating details about last transition.",
            "type": "string"
          },
          "reason": {
            "description": "reason is a unique, one-word, CamelCase reason for the condition's last transition.",
            "type": "string"
          },
          "status": {
            "description": "status is the status of the condition. Can be True, False, Unknown.",
            "type": "string"
          },
          "type": {
            "description": "type is the type of the condition. Types include Established, NamesAccepted and Terminating.",
            "type": "string"
          }
        },
        "required": [
          "type",
          "status"
        ],
        "type": "object"
      },
      "https:__kubernetesjsonschema_dev_master__defs_json_defs_io_k8s_apiextensions-apiserver_pkg_apis_apiextensions_v1beta1_CustomResourceDefinitionNames": {
        "description": "CustomResourceDefinitionNames indicates the names to serve this CustomResourceDefinition",
        "properties": {
          "categories": {
            "description": "categories is a list of grouped resources this custom resource belongs to (e.g. 'all'). This is published in API discovery documents, and used by clients to support invocations like `kubectl get all`.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "kind": {
            "description": "kind is the serialized kind of the resource. It is normally CamelCase and singular. Custom resource instances will use this value as the `kind` attribute in API calls.",
            "type": "string"
          },
          "listKind": {
            "description": "listKind is the serialized kind of the list for this resource. Defaults to \"`kind`List\".",
            "type": "string"
          },
          "plural": {
            "description": "plural is the plural name of the resource to serve. The custom resources are served under `/apis/<group>/<version>/.../<plural>`. Must match the name of the CustomResourceDefinition (in the form `<names.plural>.<group>`). Must be all lowercase.",
            "type": "string"
          },
          "shortNames": {
            "description": "shortNames are short names for the resource, exposed in API discovery documents, and used by clients to support invocations like `kubectl get <shortname>`. It must be all lowercase.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "singular": {
            "description": "singular is the singular name of the resource. It must be all lowercase. Defaults to lowercased `kind`.",
            "type": "string"
          }
        },
        "required": [
          "plural",
          "kind"
        ],
        "type": "object"
      },
      "https:__kubernetesjsonschema_dev_master__defs_json_defs_io_k8s_apimachinery_pkg_apis_meta_v1_Time": {
        "_format": "date-time",
        "description": "Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.",
        "type": "string"
      }
    },
    "description": "CustomResourceDefinitionStatus indicates the state of the CustomResourceDefinition",
    "properties": {
      "acceptedNames": {
        "$ref": "#/definitions/https:__kubernetesjsonschema_dev_master__defs_json_defs_io_k8s_apiextensions-apiserver_pkg_apis_apiextensions_v1beta1_CustomResourceDefinitionNames",
        "description": "acceptedNames are the names that are actually being used to serve discovery. They may be different than the names in spec."
      },
      "conditions": {
        "description": "conditions indicate state for particular aspects of a CustomResourceDefinition",
        "items": {
          "$ref": "#/definitions/https:__kubernetesjsonschema_dev_master__defs_json_defs_io_k8s_apiextensions-apiserver_pkg_apis_apiextensions_v1beta1_CustomResourceDefinitionCondition"
        },
        "type": [
          "array",
          "null"
        ]
      },
      "storedVersions": {
        "description": "storedVersions lists all versions of CustomResources that were ever persisted. Tracking these versions allows a migration path for stored versions in etcd. The field is mutable so a migration controller can finish a migration to another version (ensuring no old objects are left in storage), and then remove the rest of the versions from this list. Versions may not be removed from `spec.versions` while they exist in this list.",
        "items": {
          "type": [
            "string",
            "null"
          ]
        },
        "type": [
          "array",
          "null"
        ]
      }
    },
    "type": "object"
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "acceptedNames": {
          "categories": [
            "all"
          ],
          "kind": "MyResource",
          "listKind": "MyResourceList",
          "plural": "myresources",
          "shortNames": [
            "mr"
          ],
          "singular": "myresource"
        },
        "conditions": [
          {
            "lastTransitionTime": "2022-01-01T12:00:00Z",
            "message": "CustomResourceDefinition is established",
            "reason": "Established",
            "status": "True",
            "type": "Established"
          },
          {
            "lastTransitionTime": "2022-01-01T12:00:00Z",
            "message": "CustomResourceDefinition names are accepted",
            "reason": "NamesAccepted",
            "status": "True",
            "type": "NamesAccepted"
          }
        ],
        "storedVersions": [
          "v1",
          "v2"
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on type keyword with an array of types",
      "valid": false,
      "rust_error": "\"not an array\" is not of types \"array\", \"null\"",
      "python_error": "'not an array' is not of type 'array', 'null'\n\nFailed validating 'type' in schema['properties']['conditions']:\n    {'description': 'conditions indicate state for particular aspects of a '\n                    'CustomResourceDefinition',\n     'items': {'$ref': '#/definitions/https:__kubernetesjsonschema_dev_master__defs_json_defs_io_k8s_apiextensions-apiserver_pkg_apis_apiextensions_v1beta1_CustomResourceDefinitionCondition'},\n     'type': ['array', 'null']}\n\nOn instance['conditions']:\n    'not an array'",
      "data": {
        "acceptedNames": {
          "categories": [
            "all"
          ],
          "kind": "MyResource",
          "listKind": "MyResourceList",
          "plural": "myresources",
          "shortNames": [
            "mr"
          ],
          "singular": "myresource"
        },
        "conditions": "not an array",
        "storedVersions": [
          "v1",
          "v2"
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on type keyword with an array of types",
      "valid": false,
      "rust_error": "1 is not of type \"string\"",
      "python_error": "3 is not of type 'string', 'null'\n\nFailed validating 'type' in schema['properties']['storedVersions']['items']:\n    {'type': ['string', 'null']}\n\nOn instance['storedVersions'][2]:\n    3",
      "data": {
        "acceptedNames": {
          "categories": [
            "all"
          ],
          "kind": "MyResource",
          "listKind": "MyResourceList",
          "plural": "myresources",
          "shortNames": [
            "mr"
          ],
          "singular": "myresource"
        },
        "conditions": [
          {
            "lastTransitionTime": "2022-01-01T12:00:00Z",
            "message": "CustomResourceDefinition is established",
            "reason": "Established",
            "status": 1,
            "type": "Established"
          },
          {
            "lastTransitionTime": "2022-01-01T12:00:00Z",
            "message": "CustomResourceDefinition names are accepted",
            "reason": "NamesAccepted",
            "status": "True",
            "type": "NamesAccepted"
          }
        ],
        "storedVersions": [
          "v1",
          "v2",
          3
        ]
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "acceptedNames": {
          "categories": [
            "all"
          ],
          "kind": "MyResource",
          "listKind": "MyResourceList",
          "plural": "myresources",
          "shortNames": [
            "mr"
          ],
          "singular": "myresource"
        },
        "conditions": [
          {
            "lastTransitionTime": "2022-01-01T12:00:00Z",
            "message": "Established",
            "reason": "Established",
            "status": "True",
            "type": "Established"
          },
          {
            "lastTransitionTime": "2022-01-01T12:00:00Z",
            "message": "NamesAccepted",
            "reason": "NamesAccepted",
            "status": "True",
            "type": "NamesAccepted"
          }
        ],
        "storedVersions": [
          "v1",
          "v2"
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on type keyword with an array of types",
      "valid": false,
      "rust_error": "\"type\" is a required property",
      "python_error": "123 is not of type 'string', 'null'\n\nFailed validating 'type' in schema['properties']['storedVersions']['items']:\n    {'type': ['string', 'null']}\n\nOn instance['storedVersions'][2]:\n    123",
      "data": {
        "acceptedNames": {
          "categories": [
            "all"
          ],
          "kind": "MyResource",
          "listKind": "MyResourceList",
          "plural": "myresources",
          "shortNames": [
            "mr"
          ],
          "singular": "myresource"
        },
        "conditions": [
          {
            "lastTransitionTime": "2022-01-01T12:00:00Z",
            "message": "Established",
            "reason": "Established",
            "status": "True",
            "type": "Established"
          },
          {
            "lastTransitionTime": "2022-01-01T12:00:00Z",
            "message": "NamesAccepted",
            "reason": "NamesAccepted",
            "status": "True",
            "type": "NamesAccepted"
          },
          {
            "lastTransitionTime": "2022-01-01T12:00:00Z",
            "message": "NamesAccepted",
            "reason": "NamesAccepted",
            "status": "True"
          }
        ],
        "storedVersions": [
          "v1",
          "v2",
          123
        ]
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"type\" is a required property",
      "python_error": "3 is not of type 'string', 'null'\n\nFailed validating 'type' in schema['properties']['storedVersions']['items']:\n    {'type': ['string', 'null']}\n\nOn instance['storedVersions'][2]:\n    3",
      "data": {
        "acceptedNames": {
          "categories": [
            "all"
          ],
          "kind": "MyResource",
          "listKind": "MyResourceList",
          "plural": "myresources",
          "shortNames": [
            "mr"
          ],
          "singular": "myresource"
        },
        "plural": "myresources",
        "conditions": [
          {
            "lastTransitionTime": "2022-01-01T12:00:00Z",
            "message": "Established",
            "reason": "Established",
            "status": "True",
            "type": "Established"
          },
          {
            "lastTransitionTime": "2022-01-01T12:00:00Z",
            "message": "NamesAccepted",
            "reason": "NamesAccepted",
            "status": "True",
            "type": "NamesAccepted"
          },
          {
            "lastTransitionTime": "2022-01-01T12:00:00Z",
            "message": "NamesAccepted",
            "reason": "NamesAccepted",
            "status": "True"
          }
        ],
        "storedVersions": [
          "v1",
          "v2",
          3
        ]
      }
    }
  ]
}