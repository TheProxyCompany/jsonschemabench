{
  "description": "sample Github_medium/o58462.json",
  "meta": {
    "full_size": 1561,
    "stripped_size": 395,
    "features": [
      "@minmaxItems",
      "enum",
      "format",
      "format:path",
      "items"
    ],
    "raw_features": [
      "minItems",
      "properties",
      "required",
      "type",
      "type:array",
      "type:boolean",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "description": "Generates a new, generic route guard definition in the given or default project.",
    "properties": {
      "flat": {
        "default": true,
        "description": "When true (the default), creates the new files at the top level of the current project.",
        "type": "boolean"
      },
      "implements": {
        "default": [
          "CanActivate"
        ],
        "description": "Specifies which interfaces to implement.",
        "items": {
          "enum": [
            "CanActivate",
            "CanActivateChild",
            "CanDeactivate",
            "CanLoad"
          ],
          "type": "string"
        },
        "minItems": 1,
        "type": "array",
        "_uniqueItems": true,
        "x-prompt": "Which interfaces would you like to implement?"
      },
      "lintFix": {
        "default": false,
        "description": "When true, applies lint fixes after generating the guard.",
        "type": "boolean",
        "x-user-analytics": 15
      },
      "name": {
        "$default": {
          "$source": "argv",
          "index": 0
        },
        "description": "The name of the new route guard.",
        "type": "string",
        "x-prompt": "What name would you like to use for the guard?"
      },
      "path": {
        "description": "The path at which to create the interface that defines the guard, relative to the current workspace.",
        "format": "path",
        "type": "string",
        "visible": false
      },
      "project": {
        "$default": {
          "$source": "projectName"
        },
        "description": "The name of the project.",
        "type": "string"
      },
      "skipTests": {
        "default": false,
        "description": "When true, does not create \"spec.ts\" test files for the new guard.",
        "type": "boolean",
        "x-user-analytics": 12
      },
      "spec": {
        "default": true,
        "description": "When true (the default), generates a  \"spec.ts\" test file for the new guard.",
        "type": "boolean",
        "x-deprecated": "Use \"skipTests\" instead."
      }
    },
    "required": [
      "name"
    ],
    "title": "Angular Guard Options Schema",
    "type": "object"
  },
  "tests": [
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "name": "my-guard",
        "flat": true,
        "implements": [
          "CanActivate",
          "CanActivateChild"
        ],
        "lintFix": false,
        "path": "src/app/guards",
        "project": "my-project",
        "skipTests": false,
        "spec": true
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "name": "myGuard",
        "flat": true,
        "implements": [
          "CanActivate",
          "CanActivateChild"
        ],
        "lintFix": false,
        "path": "./guards",
        "project": "myProject",
        "skipTests": false,
        "spec": true
      }
    },
    {
      "description": "llama-70b generated negative; focus on minItems keyword",
      "valid": false,
      "rust_error": "[] has less than 1 item",
      "python_error": "[] should be non-empty\n\nFailed validating 'minItems' in schema['properties']['implements']:\n    {'default': ['CanActivate'],\n     'description': 'Specifies which interfaces to implement.',\n     'items': {'enum': ['CanActivate',\n                        'CanActivateChild',\n                        'CanDeactivate',\n                        'CanLoad'],\n               'type': 'string'},\n     'minItems': 1,\n     'type': 'array',\n     '_uniqueItems': True,\n     'x-prompt': 'Which interfaces would you like to implement?'}\n\nOn instance['implements']:\n    []",
      "data": {
        "name": "myGuard",
        "flat": true,
        "implements": [],
        "lintFix": false,
        "path": "./guards",
        "project": "myProject",
        "skipTests": false,
        "spec": true
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "123 is not of type \"string\"",
      "python_error": "123 is not of type 'string'\n\nFailed validating 'type' in schema['properties']['name']:\n    {'$default': {'$source': 'argv', 'index': 0},\n     'description': 'The name of the new route guard.',\n     'type': 'string',\n     'x-prompt': 'What name would you like to use for the guard?'}\n\nOn instance['name']:\n    123",
      "data": {
        "name": 123,
        "flat": true,
        "implements": [
          "CanActivate",
          "CanActivateChild",
          "CanActivate"
        ],
        "lintFix": false,
        "path": "./guards",
        "project": "myProject",
        "skipTests": false,
        "spec": true
      }
    }
  ]
}