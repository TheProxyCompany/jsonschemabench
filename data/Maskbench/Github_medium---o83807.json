{
  "description": "sample Github_medium/o83807.json",
  "meta": {
    "full_size": 2043,
    "stripped_size": 1243,
    "features": [
      "$ref",
      "additionalItems",
      "additionalItems:object",
      "additionalProperties",
      "anyOf",
      "items"
    ],
    "raw_features": [
      "$schema",
      "_boolSchema",
      "definitions",
      "properties",
      "required",
      "type",
      "type:array",
      "type:number",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "type": "object",
    "$schema": "http://json-schema.org/draft-04/schema",
    "title": "VCMI bonus system format",
    "description": "Subsection of several formats, used to add generic bonuses to objects",
    "required": [
      "type"
    ],
    "definitions": {
      "nestedLimiter": {
        "anyOf": [
          {
            "type": "string",
            "description": "parameterless limiter or boolean operator at start of array"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "type": {
                "type": "string",
                "description": "type"
              },
              "parameters": {
                "type": "array",
                "description": "parameters",
                "additionalItems": true
              }
            }
          },
          {
            "type": "array",
            "additionalItems": {
              "$ref": "#/definitions/nestedLimiter",
              "description": "nested limiters optionally prefixed with boolean operator"
            }
          }
        ]
      }
    },
    "additionalProperties": false,
    "properties": {
      "addInfo": {
        "anyOf": [
          {
            "type": "string"
          },
          {
            "type": "number"
          },
          {
            "type": "array",
            "items": {
              "anyof": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                }
              ]
            }
          }
        ],
        "description": "addInfo"
      },
      "description": {
        "type": "string",
        "description": "description"
      },
      "duration": {
        "anyOf": [
          {
            "type": "string"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "description": "duration"
      },
      "effectRange": {
        "type": "string",
        "description": "effectRange"
      },
      "limiters": {
        "$ref": "#/definitions/nestedLimiter",
        "description": "limiter"
      },
      "propagator": {
        "description": "propagator",
        "anyOf": [
          {
            "type": "string"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "description": "0"
            }
          }
        ]
      },
      "updater": {
        "anyOf": [
          {
            "type": "string"
          },
          {
            "description": "updater",
            "type": "object",
            "required": [
              "type",
              "parameters"
            ],
            "additionalProperties": false,
            "properties": {
              "type": {
                "type": "string",
                "description": "type"
              },
              "parameters": {
                "type": "array",
                "description": "parameters",
                "additionalItems": true
              }
            }
          }
        ]
      },
      "sourceID": {
        "type": "number",
        "description": "sourceID"
      },
      "sourceType": {
        "type": "string",
        "description": "sourceType"
      },
      "stacking": {
        "type": "string",
        "description": "stacking"
      },
      "subtype": {
        "anyOf": [
          {
            "type": "string"
          },
          {
            "type": "number"
          }
        ],
        "description": "subtype"
      },
      "turns": {
        "type": "number",
        "description": "turns"
      },
      "type": {
        "type": "string",
        "description": "type"
      },
      "val": {
        "type": "number",
        "description": "val"
      },
      "valueType": {
        "type": "string",
        "description": "valueType"
      }
    }
  },
  "tests": [
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "addInfo": "Additional information",
        "description": "This is a bonus",
        "duration": "forever",
        "effectRange": "global",
        "limiters": {
          "type": "faction",
          "parameters": [
            "faction1",
            "faction2"
          ]
        },
        "propagator": "propagator1",
        "updater": {
          "type": "updater1",
          "parameters": [
            1,
            2,
            3
          ]
        },
        "sourceID": 1,
        "sourceType": "sourceType1",
        "stacking": "stacking1",
        "subtype": "subtype1",
        "turns": 10,
        "type": "bonus",
        "val": 10,
        "valueType": "valueType1"
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "addInfo": "Additional information",
        "description": "This is a bonus",
        "duration": "forever",
        "effectRange": "global",
        "limiters": {
          "type": "creatureType",
          "parameters": [
            "knight"
          ]
        },
        "propagator": "hero",
        "updater": {
          "type": "add",
          "parameters": [
            10
          ]
        },
        "sourceID": 1,
        "sourceType": "hero",
        "stacking": "additive",
        "subtype": "primary",
        "turns": 10,
        "type": "bonus",
        "val": 10,
        "valueType": "percentage"
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "Additional properties are not allowed ('extraKey' was unexpected)",
      "python_error": "Additional properties are not allowed ('extraKey' was unexpected)\n\nFailed validating 'additionalProperties' in schema:\n    {'type': 'object',\n     '$schema': 'http://json-schema.org/draft-04/schema',\n     'title': 'VCMI bonus system format',\n     'description': 'Subsection of several formats, used to add generic '\n                    'bonuses to objects',\n     'required': ['type'],\n     'definitions': {'nestedLimiter': {'anyOf': [{'type': 'string',\n                                                  'description': 'parameterless '\n                                                                 'limiter '\n                                                                 'or '\n                                                                 'boolean '\n                                                                 'operator '\n                                                                 'at start '\n                                                                 'of '\n                                         .. (5257 more)",
      "data": {
        "type": "bonus",
        "addInfo": "Additional information",
        "description": "This is a bonus",
        "duration": "forever",
        "effectRange": "global",
        "limiters": {
          "type": "creatureType",
          "parameters": [
            "knight",
            "warrior",
            10
          ]
        },
        "propagator": "hero",
        "updater": {
          "type": "add",
          "parameters": [
            "ten"
          ]
        },
        "sourceID": 1,
        "sourceType": "hero",
        "stacking": "additive",
        "subtype": "primary",
        "turns": 10,
        "val": 10,
        "valueType": "percentage",
        "extraKey": "extraValue"
      }
    }
  ]
}