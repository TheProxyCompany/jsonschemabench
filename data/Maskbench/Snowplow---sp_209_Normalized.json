{
  "description": "sample Snowplow/sp_209_Normalized.json",
  "meta": {
    "full_size": 2868,
    "stripped_size": 1619,
    "features": [
      "@minmaxInteger",
      "@minmaxLength",
      "@siblingKeys",
      "additionalProperties",
      "anyOf",
      "enum",
      "format",
      "format:uuid",
      "items",
      "oneOf",
      "pattern"
    ],
    "raw_features": [
      "_boolSchema",
      "maxLength",
      "maximum",
      "minLength",
      "minimum",
      "properties",
      "required",
      "type",
      "type:[]",
      "type:array",
      "type:boolean",
      "type:integer",
      "type:null",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "additionalProperties": false,
    "description": "Schema for Igluctl's configuration",
    "properties": {
      "actions": {
        "description": "Configuration for s3cp and push commands",
        "items": {
          "anyOf": [
            {
              "description": "Configuration for static push command",
              "properties": {
                "action": {
                  "enum": [
                    "push"
                  ],
                  "type": "string"
                },
                "apikey": {
                  "oneOf": [
                    {
                      "format": "uuid"
                    },
                    {
                      "pattern": "^\\$[A-Z0-9-_]+"
                    }
                  ]
                },
                "isPublic": {
                  "default": false,
                  "type": "boolean"
                },
                "registry": {
                  "_format": "uri",
                  "type": "string"
                }
              },
              "required": [
                "action",
                "registry",
                "isPublic",
                "apikey"
              ],
              "type": "object"
            },
            {
              "description": "Configuration for static s3cp command",
              "properties": {
                "action": {
                  "enum": [
                    "s3cp"
                  ],
                  "type": "string"
                },
                "bucketPath": {
                  "pattern": "^s3://",
                  "type": "string"
                },
                "profile": {
                  "description": "AWS profile",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "region": {
                  "default": "us-west-2",
                  "description": "AWS region",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "uploadFormat": {
                  "enum": [
                    "jsonpath",
                    "jsonschema"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "action",
                "uploadFormat",
                "bucketPath",
                "profile",
                "region"
              ],
              "type": "object"
            }
          ],
          "type": "object"
        },
        "type": [
          "array",
          "null"
        ]
      },
      "description": {
        "description": "Human-readable & short description the configuration",
        "type": "string"
      },
      "generate": {
        "description": "Configuration for static generate command",
        "properties": {
          "dbschema": {
            "default": "atomic",
            "description": "Redshift database schema (e.g. 'atomic')",
            "maxLength": 128,
            "minLength": 1,
            "type": [
              "string",
              "null"
            ]
          },
          "force": {
            "default": false,
            "description": "Force overwrite existing manually-edited files",
            "type": [
              "boolean",
              "null"
            ]
          },
          "noHeader": {
            "default": false,
            "description": "Place header comments into output DDL or not",
            "type": "boolean"
          },
          "output": {
            "default": ".",
            "description": "Directory to put generated data",
            "type": [
              "string",
              "null"
            ]
          },
          "owner": {
            "description": "Redshift table owner",
            "maxLength": 128,
            "type": [
              "string",
              "null"
            ]
          },
          "varcharSize": {
            "default": 4096,
            "description": "Redshift varchar size",
            "maximum": 65535,
            "minimum": 1,
            "type": [
              "integer",
              "null"
            ]
          },
          "withJsonPaths": {
            "default": true,
            "description": "Produce JSON Paths files with DDL or not",
            "type": [
              "boolean",
              "null"
            ]
          }
        },
        "required": [
          "output",
          "dbschema",
          "owner",
          "varcharSize",
          "withJsonPaths",
          "noHeader",
          "force"
        ],
        "type": "object"
      },
      "input": {
        "_format": "uri",
        "description": "Path to input schemas",
        "type": "string"
      },
      "lint": {
        "description": "Configuration for lint command",
        "properties": {
          "includedChecks": {
            "description": "Lint using provided linters",
            "items": {
              "enum": [
                "rootObject",
                "unknownFormats",
                "numericMinMax",
                "stringLength",
                "optionalNull",
                "description",
                "stringMaxLengthRange"
              ],
              "type": "string"
            },
            "type": [
              "array",
              "null"
            ]
          },
          "skipWarnings": {
            "default": false,
            "description": "Don't output messages with log level less than ERROR",
            "type": [
              "boolean",
              "null"
            ]
          }
        },
        "required": [
          "skipWarnings",
          "includedChecks"
        ],
        "type": "object"
      }
    },
    "required": [
      "input",
      "lint",
      "generate",
      "actions"
    ],
    "self": {
      "format": "jsonschema",
      "name": "igluctl_config",
      "vendor": "com.snowplowanalytics.iglu",
      "version": "1-0-0"
    },
    "type": "object"
  },
  "tests": [
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "actions": [
          {
            "action": "push",
            "apikey": "123e4567-e89b-12d3-a456-426614174000",
            "isPublic": true,
            "registry": "http://iglucentral.com/schemas"
          },
          {
            "action": "s3cp",
            "bucketPath": "s3://my-bucket/my-prefix",
            "profile": "my-profile",
            "region": "us-east-1",
            "uploadFormat": "jsonpath"
          }
        ],
        "description": "My Igluctl configuration",
        "generate": {
          "dbschema": "atomic",
          "force": true,
          "noHeader": false,
          "output": "./output",
          "owner": "my-owner",
          "varcharSize": 4096,
          "withJsonPaths": true
        },
        "input": "file:///path/to/input/schemas",
        "lint": {
          "includedChecks": [
            "rootObject",
            "unknownFormats",
            "numericMinMax",
            "stringLength",
            "optionalNull",
            "description",
            "stringMaxLengthRange"
          ],
          "skipWarnings": false
        }
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "actions": [
          {
            "action": "push",
            "apikey": "123e4567-e89b-12d3-a456-426614174000",
            "isPublic": false,
            "registry": "http://registry.example.com"
          },
          {
            "action": "s3cp",
            "bucketPath": "s3://my-bucket/my-path",
            "profile": "my-profile",
            "region": "us-east-1",
            "uploadFormat": "jsonpath"
          }
        ],
        "description": "My Igluctl configuration",
        "generate": {
          "dbschema": "atomic",
          "force": false,
          "noHeader": false,
          "output": ".",
          "owner": "my-owner",
          "varcharSize": 4096,
          "withJsonPaths": true
        },
        "input": "file:///path/to/input/schemas",
        "lint": {
          "includedChecks": [
            "rootObject",
            "unknownFormats",
            "numericMinMax",
            "stringLength",
            "optionalNull",
            "description",
            "stringMaxLengthRange"
          ],
          "skipWarnings": false
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on pattern keyword",
      "valid": false,
      "rust_error": "{\"action\":\"push\",\"apikey\":\"123e4567-e89b-12d3-a456-42661417400\",\"isPublic\":false,\"registry\":\"http://registry.example.com\"} is not valid under any of the schemas listed in the 'anyOf' keyword",
      "python_error": "'s3cp' is not one of ['push']\n\nFailed validating 'enum' in schema[0]['properties']['action']:\n    {'enum': ['push'], 'type': 'string'}\n\nOn instance['action']:\n    's3cp'",
      "data": {
        "actions": [
          {
            "action": "push",
            "apikey": "123e4567-e89b-12d3-a456-42661417400",
            "isPublic": false,
            "registry": "http://registry.example.com"
          },
          {
            "action": "s3cp",
            "bucketPath": "s3:/my-bucket/my-path",
            "profile": "my-profile",
            "region": "us-east-1",
            "uploadFormat": "jsonpath"
          }
        ],
        "description": "My Igluctl configuration",
        "generate": {
          "dbschema": "atomic",
          "force": false,
          "noHeader": false,
          "output": ".",
          "owner": "my-owner",
          "varcharSize": 4096,
          "withJsonPaths": true
        },
        "input": "file:///path/to/input/schemas",
        "lint": {
          "includedChecks": [
            "rootObject",
            "unknownFormats",
            "numericMinMax",
            "stringLength",
            "optionalNull",
            "description",
            "stringMaxLengthRange"
          ],
          "skipWarnings": false
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on oneOf keyword",
      "valid": false,
      "rust_error": "Additional properties are not allowed ('apikey' was unexpected)",
      "python_error": "Additional properties are not allowed ('apikey' was unexpected)\n\nFailed validating 'additionalProperties' in schema:\n    {'additionalProperties': False,\n     'description': \"Schema for Igluctl's configuration\",\n     'properties': {'actions': {'description': 'Configuration for s3cp and '\n                                               'push commands',\n                                'items': {'anyOf': [{'description': 'Configuration '\n                                                                    'for '\n                                                                    'static '\n                                                                    'push '\n                                                                    'command',\n                                                     'properties': {'action': {'enum': ['push'],\n                                                                               'type': 'string'},\n                                                                    'apikey': {'oneO.. (13732 more)",
      "data": {
        "actions": [
          {
            "action": "push",
            "apikey": "123e4567-e89b-12d3-a456-426614174000",
            "isPublic": false,
            "registry": "http://registry.example.com"
          },
          {
            "action": "s3cp",
            "bucketPath": "s3://my-bucket/my-path",
            "profile": "my-profile",
            "region": "us-east-1",
            "uploadFormat": "jsonpath"
          }
        ],
        "description": "My Igluctl configuration",
        "generate": {
          "dbschema": "atomic",
          "force": false,
          "noHeader": false,
          "output": ".",
          "owner": "my-owner",
          "varcharSize": 4096,
          "withJsonPaths": true
        },
        "input": "file:///path/to/input/schemas",
        "lint": {
          "includedChecks": [
            "rootObject",
            "unknownFormats",
            "numericMinMax",
            "stringLength",
            "optionalNull",
            "description",
            "stringMaxLengthRange"
          ],
          "skipWarnings": false
        },
        "apikey": "123e4567-e89b-12d3-a456-426614174000"
      }
    },
    {
      "description": "llama-70b generated negative; focus on minLength keyword or maxLength keyword",
      "valid": false,
      "rust_error": "\"\" is shorter than 1 character",
      "python_error": "'' should be non-empty\n\nFailed validating 'minLength' in schema['properties']['generate']['properties']['dbschema']:\n    {'default': 'atomic',\n     'description': \"Redshift database schema (e.g. 'atomic')\",\n     'maxLength': 128,\n     'minLength': 1,\n     'type': ['string', 'null']}\n\nOn instance['generate']['dbschema']:\n    ''",
      "data": {
        "actions": [
          {
            "action": "push",
            "apikey": "123e4567-e89b-12d3-a456-426614174000",
            "isPublic": false,
            "registry": "http://registry.example.com"
          },
          {
            "action": "s3cp",
            "bucketPath": "s3://my-bucket/my-path",
            "profile": "my-profile",
            "region": "us-east-1",
            "uploadFormat": "jsonpath"
          }
        ],
        "description": "My Igluctl configuration",
        "generate": {
          "dbschema": "",
          "force": false,
          "noHeader": false,
          "output": ".",
          "owner": "a",
          "varcharSize": 4096,
          "withJsonPaths": true
        },
        "input": "file:///path/to/input/schemas",
        "lint": {
          "includedChecks": [
            "rootObject",
            "unknownFormats",
            "numericMinMax",
            "stringLength",
            "optionalNull",
            "description",
            "stringMaxLengthRange"
          ],
          "skipWarnings": false
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on minimum keyword or maximum keyword",
      "valid": false,
      "rust_error": "65536 is greater than the maximum of 65535",
      "python_error": "65536 is greater than the maximum of 65535\n\nFailed validating 'maximum' in schema['properties']['generate']['properties']['varcharSize']:\n    {'default': 4096,\n     'description': 'Redshift varchar size',\n     'maximum': 65535,\n     'minimum': 1,\n     'type': ['integer', 'null']}\n\nOn instance['generate']['varcharSize']:\n    65536",
      "data": {
        "actions": [
          {
            "action": "push",
            "apikey": "123e4567-e89b-12d3-a456-426614174000",
            "isPublic": false,
            "registry": "http://registry.example.com"
          },
          {
            "action": "s3cp",
            "bucketPath": "s3://my-bucket/my-path",
            "profile": "my-profile",
            "region": "us-east-1",
            "uploadFormat": "jsonpath",
            "varcharSize": 0
          }
        ],
        "description": "My Igluctl configuration",
        "generate": {
          "dbschema": "a",
          "force": false,
          "noHeader": false,
          "output": ".",
          "owner": "a",
          "varcharSize": 65536,
          "withJsonPaths": true
        },
        "input": "file:///path/to/input/schemas",
        "lint": {
          "includedChecks": [
            "rootObject",
            "unknownFormats",
            "numericMinMax",
            "stringLength",
            "optionalNull",
            "description",
            "stringMaxLengthRange"
          ],
          "skipWarnings": false
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on format keyword",
      "valid": false,
      "rust_error": "{\"action\":\"push\",\"apikey\":\"not-a-uuid\",\"isPublic\":false,\"registry\":\"invalid-uri\"} is not valid under any of the schemas listed in the 'anyOf' keyword",
      "python_error": "'s3cp' is not one of ['push']\n\nFailed validating 'enum' in schema[0]['properties']['action']:\n    {'enum': ['push'], 'type': 'string'}\n\nOn instance['action']:\n    's3cp'",
      "data": {
        "actions": [
          {
            "action": "push",
            "apikey": "not-a-uuid",
            "isPublic": false,
            "registry": "invalid-uri"
          },
          {
            "action": "s3cp",
            "bucketPath": "not-an-s3-path",
            "profile": "my-profile",
            "region": "us-east-1",
            "uploadFormat": "jsonpath"
          }
        ],
        "description": "My Igluctl configuration",
        "generate": {
          "dbschema": "atomic",
          "force": false,
          "noHeader": false,
          "output": ".",
          "owner": "my-owner",
          "varcharSize": 4096,
          "withJsonPaths": true
        },
        "input": "not-an-uri",
        "lint": {
          "includedChecks": [
            "rootObject",
            "unknownFormats",
            "numericMinMax",
            "stringLength",
            "optionalNull",
            "description",
            "stringMaxLengthRange"
          ],
          "skipWarnings": false
        }
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "0 is less than the minimum of 1",
      "python_error": "0 is less than the minimum of 1\n\nFailed validating 'minimum' in schema['properties']['generate']['properties']['varcharSize']:\n    {'default': 4096,\n     'description': 'Redshift varchar size',\n     'maximum': 65535,\n     'minimum': 1,\n     'type': ['integer', 'null']}\n\nOn instance['generate']['varcharSize']:\n    0",
      "data": {
        "actions": [
          {
            "action": "push",
            "apikey": "123e4567-e89b-12d3-a456-426614174000",
            "isPublic": false,
            "registry": "http://registry.example.com"
          },
          {
            "action": "s3cp",
            "bucketPath": "s3://my-bucket/my-path",
            "profile": "my-profile",
            "region": "us-east-1",
            "uploadFormat": "jsonpath",
            "extraProperty": "extraValue"
          }
        ],
        "description": "My Igluctl configuration",
        "generate": {
          "dbschema": "atomic",
          "force": false,
          "noHeader": false,
          "output": ".",
          "owner": "my-owner",
          "varcharSize": 0,
          "withJsonPaths": true
        },
        "input": "file:///path/to/input/schemas",
        "lint": {
          "includedChecks": [
            "rootObject",
            "unknownFormats",
            "numericMinMax",
            "stringLength",
            "optionalNull",
            "description",
            "stringMaxLengthRange",
            "extraCheck"
          ],
          "skipWarnings": false
        }
      }
    }
  ]
}