{
  "description": "sample Github_medium/o61619.json",
  "meta": {
    "full_size": 3032,
    "stripped_size": 879,
    "features": [
      "enum",
      "pattern"
    ],
    "raw_features": [
      "properties",
      "type",
      "type:array",
      "type:boolean",
      "type:number",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "type": "object",
    "properties": {
      "PayloadUUID": {
        "default": "",
        "pattern": "^[0-9A-Za-z]{8}-[0-9A-Za-z]{4}-[0-9A-Za-z]{4}-[0-9A-Za-z]{4}-[0-9A-Za-z]{12}$",
        "type": "string",
        "description": "Unique identifier for the payload (format 01234567-89AB-CDEF-0123-456789ABCDEF)"
      },
      "ServerCapabilities": {
        "enum": [
          "com.apple.mdm.per-user-connections"
        ],
        "type": "array",
        "description": "Optional. An array of strings indicating server capabilities. If the server manages OS X devices or a shared iPad, this field is mandatory and must contain the value com.apple.mdm.per-user-connections. This indicates that the server supports both device and user connections."
      },
      "PayloadDescription": {
        "default": "Configures a Mobile Device Management server",
        "type": "string",
        "description": "Description of the payload"
      },
      "CheckInURL": {
        "pattern": "^https://.*$",
        "type": "string",
        "description": "The URL that the device will use to check in during installation. If this URL is not given, the ServerURL will be used for both purposes."
      },
      "CheckOutWhenRemoved": {
        "type": "boolean",
        "description": "If true, the device attempts to send a CheckOut message to the check-in server when the profile is removed. Defaults to false.\n\t\t\t\tNote: OS X v10.8 acts as though this setting is always true."
      },
      "PayloadOrganization": {
        "type": "string",
        "description": "This value describes the issuing organization of the profile, as displayed to the user"
      },
      "ServerURL": {
        "pattern": "^https://.*$",
        "type": "string",
        "description": "The URL that the device will contact to retrieve device management instructions."
      },
      "PayloadIdentifier": {
        "default": "com.apple.mdm",
        "type": "string",
        "description": "A unique identifier for the payload, dot-delimited.  Usually root PayloadIdentifier+subidentifier"
      },
      "PayloadDisplayName": {
        "default": "MDM",
        "type": "string",
        "description": "Name of the payload"
      },
      "Topic": {
        "type": "string",
        "description": "The topic that MDM will listen to for Push notifications. The certificate that the server uses to send push notifications must have the same topic in its subject."
      },
      "PayloadType": {
        "default": "com.apple.mdm",
        "type": "string",
        "description": "The type of the payload, a reverse dns string"
      },
      "SignMessage": {
        "default": false,
        "type": "boolean",
        "description": "If set, each message coming from the device will carry the additional HTTP header Mdm-Signature"
      },
      "PayloadVersion": {
        "default": 1,
        "type": "number",
        "description": "The version of the whole configuration profile."
      },
      "IdentityCertificateUUID": {
        "pattern": "^[0-9A-Za-z]{8}-[0-9A-Za-z]{4}-[0-9A-Za-z]{4}-[0-9A-Za-z]{4}-[0-9A-Za-z]{12}$",
        "type": "string",
        "description": "UUID of the certificate payload for the device's identity. It may also point to a SCEP payload."
      },
      "AccessRights": {
        "type": "number",
        "description": "Logical OR of several bit-flags. If 2 is specified, then 1 must also be specified. If 128 is specified, then 64 must also be specified."
      },
      "UseDevelopmentAPNS": {
        "default": false,
        "type": "boolean",
        "description": "If set, will use the development APNS servers. Otherwise, the device will use the production servers."
      }
    },
    "title": "com.apple.mdm"
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "PayloadUUID": "01234567-89AB-CDEF-0123-456789ABCDEF",
        "ServerCapabilities ": [
          "com.apple.mdm.per-user-connections"
        ],
        "PayloadDescription ": "Configures a Mobile Device Management server",
        "CheckInURL ": "https://example.com/mdm/checkin",
        "CheckOutWhenRemoved ": true,
        "PayloadOrganization ": "Example Inc.",
        "ServerURL ": "https://example.com/mdm/server",
        "PayloadIdentifier ": "com.example.mdm",
        "PayloadDisplayName ": "Example MDM",
        "Topic ": "com.example.mdm.push",
        "PayloadType ": "com.apple.mdm",
        "SignMessage ": true,
        "PayloadVersion ": 1,
        "IdentityCertificateUUID ": "01234567-89AB-CDEF-0123-456789ABCDEF",
        "AccessRights ": 3,
        "UseDevelopmentAPNS ": false
      }
    },
    {
      "description": "llama-70b generated negative; focus on pattern keyword",
      "valid": false,
      "rust_error": "[\"com.apple.mdm.per-user-connections\"] is not one of [\"com.apple.mdm.per-user-connections\"]",
      "python_error": "'http://example.com/mdm/server' does not match '^https://.*$'\n\nFailed validating 'pattern' in schema['properties']['ServerURL']:\n    {'pattern': '^https://.*$',\n     'type': 'string',\n     'description': 'The URL that the device will contact to retrieve '\n                    'device management instructions.'}\n\nOn instance['ServerURL']:\n    'http://example.com/mdm/server'",
      "data": {
        "PayloadUUID": "01234567-89AB-CDEF-0123-456789ABCDEF",
        "ServerCapabilities": [
          "com.apple.mdm.per-user-connections"
        ],
        "PayloadDescription": "Configures a Mobile Device Management server",
        "CheckInURL": "http://example.com/mdm/checkin",
        "CheckOutWhenRemoved": true,
        "PayloadOrganization": "Example Inc.",
        "ServerURL": "http://example.com/mdm/server",
        "PayloadIdentifier": "com.example.mdm",
        "PayloadDisplayName": "Example MDM",
        "Topic": "com.example.mdm.push",
        "PayloadType": "com.apple.mdm",
        "SignMessage": true,
        "PayloadVersion": 1,
        "IdentityCertificateUUID": "Invalid-UUID",
        "AccessRights": 3,
        "UseDevelopmentAPNS": false
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "[\"com.apple.mdm.per-user-connections\"] is not one of [\"com.apple.mdm.per-user-connections\"]",
      "python_error": "['com.apple.mdm.per-user-connections'] is not one of ['com.apple.mdm.per-user-connections']\n\nFailed validating 'enum' in schema['properties']['ServerCapabilities']:\n    {'enum': ['com.apple.mdm.per-user-connections'],\n     'type': 'array',\n     'description': 'Optional. An array of strings indicating server '\n                    'capabilities. If the server manages OS X devices or a '\n                    'shared iPad, this field is mandatory and must contain '\n                    'the value com.apple.mdm.per-user-connections. This '\n                    'indicates that the server supports both device and '\n                    'user connections.'}\n\nOn instance['ServerCapabilities']:\n    ['com.apple.mdm.per-user-connections']",
      "data": {
        "PayloadUUID": "01234567-89AB-CDEF-0123-456789ABCDEF",
        "ServerCapabilities": [
          "com.apple.mdm.per-user-connections"
        ],
        "PayloadDescription": "Configures a Mobile Device Management server",
        "CheckInURL": "http://example.com/mdm/checkin",
        "Invalid URL, should start with https": "CheckOutWhenRemoved",
        "PayloadOrganization": "Example Inc.",
        "ServerURL": "https://example.com/mdm/server",
        "PayloadIdentifier": "com.example.mdm",
        "PayloadDisplayName": "Example MDM",
        "Topic": "com.example.mdm.push",
        "PayloadType": "com.apple.mdm",
        "SignMessage": true,
        "PayloadVersion": 1,
        "IdentityCertificateUUID": "01234567-89AB-CDEF-0123-456789ABCDEF",
        "AccessRights": 3,
        "UseDevelopmentAPNS": false
      }
    },
    {
      "description": "llama-70b generated negative; focus on pattern keyword",
      "valid": false,
      "rust_error": "[\"com.apple.mdm.per-user-connections\"] is not one of [\"com.apple.mdm.per-user-connections\"]",
      "python_error": "'http://example.com/mdm/server' does not match '^https://.*$'\n\nFailed validating 'pattern' in schema['properties']['ServerURL']:\n    {'pattern': '^https://.*$',\n     'type': 'string',\n     'description': 'The URL that the device will contact to retrieve '\n                    'device management instructions.'}\n\nOn instance['ServerURL']:\n    'http://example.com/mdm/server'",
      "data": {
        "PayloadUUID": "01234567-89AB-CDEF-0123-456789ABCDEF",
        "ServerCapabilities": [
          "com.apple.mdm.per-user-connections"
        ],
        "PayloadDescription": "Configures a Mobile Device Management server",
        "CheckInURL": "http://example.com/mdm/checkin",
        "ServerURL": "http://example.com/mdm/server",
        "CheckOutWhenRemoved": true,
        "PayloadOrganization": "Example Inc.",
        "PayloadIdentifier": "com.example.mdm",
        "PayloadDisplayName": "Example MDM",
        "Topic": "com.example.mdm.push",
        "PayloadType": "com.apple.mdm",
        "SignMessage": true,
        "PayloadVersion": 1,
        "IdentityCertificateUUID": "01234567-89AB-CDEF-0123-456789ABCDEF",
        "AccessRights": 3,
        "UseDevelopmentAPNS": false
      }
    },
    {
      "description": "llama-70b generated negative; focus on pattern keyword",
      "valid": false,
      "rust_error": "[\"com.apple.mdm.per-user-connections\"] is not one of [\"com.apple.mdm.per-user-connections\"]",
      "python_error": "'ftp://example.com/mdm/server' does not match '^https://.*$'\n\nFailed validating 'pattern' in schema['properties']['ServerURL']:\n    {'pattern': '^https://.*$',\n     'type': 'string',\n     'description': 'The URL that the device will contact to retrieve '\n                    'device management instructions.'}\n\nOn instance['ServerURL']:\n    'ftp://example.com/mdm/server'",
      "data": {
        "PayloadUUID": "01234567-89AB-CDEF-0123-456789ABCDEF",
        "ServerCapabilities": [
          "com.apple.mdm.per-user-connections"
        ],
        "PayloadDescription": "Configures a Mobile Device Management server",
        "CheckInURL": "http://example.com/mdm/checkin",
        "Invalid URL, should start with https": "PayloadIdentifier",
        "PayloadOrganization": "Example Inc.",
        "ServerURL": "ftp://example.com/mdm/server",
        "PayloadDisplayName": "Example MDM",
        "Topic": "com.example.mdm.push",
        "PayloadType": "com.apple.mdm",
        "SignMessage": true,
        "PayloadVersion": 1,
        "IdentityCertificateUUID": "01234567-89AB-CDEF-0123-456789ABCDEF",
        "AccessRights": 3,
        "UseDevelopmentAPNS": false
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"01234567-89AB-CDEF-0123-456789ABCDEF0123/\" does not match \"^[0-9A-Za-z]{8}-[0-9A-Za-z]{4}-[0-9A-Za-z]{4}-[0-9A-Za-z]{4}-[0-9A-Za-z]{12}$\"",
      "python_error": "'01234567-89AB-CDEF-0123-456789ABCDEF0123/' is not of type 'boolean'\n\nFailed validating 'type' in schema['properties']['UseDevelopmentAPNS']:\n    {'default': False,\n     'type': 'boolean',\n     'description': 'If set, will use the development APNS servers. '\n                    'Otherwise, the device will use the production '\n                    'servers.'}\n\nOn instance['UseDevelopmentAPNS']:\n    '01234567-89AB-CDEF-0123-456789ABCDEF0123/'",
      "data": {
        "PayloadUUID": "01234567-89AB-CDEF-0123-456789ABCDEF0123/",
        "ServerCapabilities": "01234567-89AB-CDEF-0123-456789ABCDEF0123/",
        "PayloadDescription": "Configures a Mobile Device Management server",
        "CheckInURL": "01234567-89AB-CDEF-0123-456789ABCDEF0123/",
        "CheckOutWhenRemoved": "01234567-89AB-CDEF-0123-456789ABCDEF0123/",
        "PayloadOrganization": "01234567-89AB-CDEF-0123-456789ABCDEF0123/",
        "ServerURL": "01234567-89AB-CDEF-0123-456789ABCDEF0123/",
        "PayloadIdentifier": "01234567-89AB-CDEF-0123-456789ABCDEF0123/",
        "PayloadDisplayName": "01234567-89AB-CDEF-0123-456789ABCDEF0123/",
        "Topic": "01234567-89AB-CDEF-0123-456789ABCDEF0123/",
        "PayloadType": "01234567-89AB-CDEF-0123-456789ABCDEF0123/",
        "SignMessage": "01234567-89AB-CDEF-0123-456789ABCDEF0123/",
        "PayloadVersion": "01234567-89AB-CDEF-0123-456789ABCDEF0123/",
        "IdentityCertificateUUID": "01234567-89AB-CDEF-0123-456789ABCDEF0123/",
        "AccessRights": "01234567-89AB-CDEF-0123-456789ABCDEF0123/",
        "UseDevelopmentAPNS": "01234567-89AB-CDEF-0123-456789ABCDEF0123/",
        "ExtraField": "This field is not defined in the schema"
      }
    }
  ]
}