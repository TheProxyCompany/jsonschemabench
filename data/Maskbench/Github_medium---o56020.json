{
  "description": "sample Github_medium/o56020.json",
  "meta": {
    "full_size": 1360,
    "stripped_size": 692,
    "features": [
      "@minmaxInteger",
      "@minmaxLength",
      "@minmaxNumber",
      "additionalProperties",
      "enum",
      "format",
      "format:email",
      "items"
    ],
    "raw_features": [
      "$schema",
      "_boolSchema",
      "maxLength",
      "minimum",
      "properties",
      "required",
      "type",
      "type:array",
      "type:boolean",
      "type:integer",
      "type:number",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "description": "Fibaro Home Center User JSON Schema",
    "name": "user",
    "type": "object",
    "properties": {
      "id": {
        "description": "Identifier for the user",
        "type": "integer",
        "minimum": 0
      },
      "name": {
        "description": "Name of the user",
        "type": "string",
        "maxLength": 20
      },
      "type": {
        "description": "Type of the user",
        "type": "string",
        "enum": [
          "user",
          "superuser"
        ]
      },
      "email": {
        "description": "Email of the user",
        "type": "string",
        "format": "email"
      },
      "hasGPS": {
        "description": "User has GPS Flag",
        "type": "boolean"
      },
      "deviceRights": {
        "description": "List of Devices Visible for User",
        "type": "array",
        "items": {
          "type": "number",
          "minimum": 0
        }
      },
      "sceneRights": {
        "description": "List of Scenes Visible for User",
        "type": "array",
        "items": {
          "type": "number",
          "minimum": 0
        }
      },
      "hotelRoom": {
        "description": "Hotel room number",
        "type": "integer"
      },
      "sendNotifications": {
        "description": "Shall Fibaro send notifications",
        "type": "boolean"
      },
      "tracking": {
        "description": "How frequently GPS position from the user's iPhone should be collected [min]",
        "type": "integer"
      },
      "usePin": {
        "description": "Use PIN Flag",
        "type": "boolean"
      },
      "useOptionalArmPin": {
        "description": "Use Optional Arm PIN Falg",
        "type": "boolean"
      },
      "pin": {
        "description": "PIN instead of a password for confirmations",
        "type": "string"
      },
      "password": {
        "description": "Password",
        "type": "string"
      }
    },
    "required": [
      "name"
    ],
    "additionalProperties": false
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "id": 1,
        "name": "John Doe",
        "type": "user",
        "email": "john.doe@example.com",
        "hasGPS": true,
        "deviceRights": [
          1,
          2,
          3
        ],
        "sceneRights": [
          1,
          2
        ],
        "hotelRoom": 101,
        "sendNotifications": true,
        "tracking": 5,
        "usePin": true,
        "useOptionalArmPin": false,
        "pin": "1234",
        "password": "password123"
      }
    },
    {
      "description": "llama-70b generated negative; focus on maxLength keyword",
      "valid": false,
      "rust_error": "\"John Doe is a very long name that exceeds the maxLength constraint\" is longer than 20 characters",
      "python_error": "'John Doe is a very long name that exceeds the maxLength constraint' is too long\n\nFailed validating 'maxLength' in schema['properties']['name']:\n    {'description': 'Name of the user', 'type': 'string', 'maxLength': 20}\n\nOn instance['name']:\n    'John Doe is a very long name that exceeds the maxLength constraint'",
      "data": {
        "id": 1,
        "name": "John Doe is a very long name that exceeds the maxLength constraint",
        "type": "user",
        "email": "john.doe@example.com",
        "hasGPS": true,
        "deviceRights": [
          1,
          2,
          3
        ],
        "sceneRights": [
          1,
          2
        ],
        "hotelRoom": 101,
        "sendNotifications": true,
        "tracking": 5,
        "usePin": true,
        "useOptionalArmPin": false,
        "pin": "1234",
        "password": "password123"
      }
    },
    {
      "description": "llama-70b generated negative; focus on format keyword",
      "valid": false,
      "rust_error": "\"invalid_email\" is not a \"email\"",
      "python_error": "'invalid_email' is not a 'email'\n\nFailed validating 'format' in schema['properties']['email']:\n    {'description': 'Email of the user',\n     'type': 'string',\n     'format': 'email'}\n\nOn instance['email']:\n    'invalid_email'",
      "data": {
        "id": 1,
        "name": "John Doe",
        "type": "user",
        "email": "invalid_email",
        "hasGPS": true,
        "deviceRights": [
          1,
          2,
          3
        ],
        "sceneRights": [
          1,
          2
        ],
        "hotelRoom": 101,
        "sendNotifications": true,
        "tracking": 5,
        "usePin": true,
        "useOptionalArmPin": false,
        "pin": "1234",
        "password": "password123"
      }
    },
    {
      "description": "llama-70b generated negative; focus on minimum keyword",
      "valid": false,
      "rust_error": "-1 is less than the minimum of 0",
      "python_error": "-1 is less than the minimum of 0\n\nFailed validating 'minimum' in schema['properties']['id']:\n    {'description': 'Identifier for the user',\n     'type': 'integer',\n     'minimum': 0}\n\nOn instance['id']:\n    -1",
      "data": {
        "id": -1,
        "name": "John Doe",
        "type": "user",
        "email": "john.doe@example.com",
        "hasGPS": true,
        "deviceRights": [
          -1,
          2,
          3
        ],
        "sceneRights": [
          1,
          2
        ],
        "hotelRoom": 101,
        "sendNotifications": true,
        "tracking": 5,
        "usePin": true,
        "useOptionalArmPin": false,
        "pin": "1234",
        "password": "password123"
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"John Doe is a very long name that exceeds the maximum allowed length\" is longer than 20 characters",
      "python_error": "Additional properties are not allowed ('extraProperty' was unexpected)\n\nFailed validating 'additionalProperties' in schema:\n    {'$schema': 'http://json-schema.org/draft-04/schema#',\n     'description': 'Fibaro Home Center User JSON Schema',\n     'name': 'user',\n     'type': 'object',\n     'properties': {'id': {'description': 'Identifier for the user',\n                           'type': 'integer',\n                           'minimum': 0},\n                    'name': {'description': 'Name of the user',\n                             'type': 'string',\n                             'maxLength': 20},\n                    'type': {'description': 'Type of the user',\n                             'type': 'string',\n                             'enum': ['user', 'superuser']},\n                    'email': {'description': 'Email of the user',\n                              'type': 'string',\n                              'format': 'email'},\n                    'hasGPS': {'description': 'User has GPS Flag',\n                    .. (2646 more)",
      "data": {
        "id": 1,
        "name": "John Doe is a very long name that exceeds the maximum allowed length",
        "type": "user",
        "email": "john.doe@example.com",
        "hasGPS": true,
        "deviceRights": [
          1,
          2,
          3
        ],
        "sceneRights": [
          1,
          2
        ],
        "hotelRoom": 101,
        "sendNotifications": true,
        "tracking": 5,
        "usePin": true,
        "useOptionalArmPin": false,
        "pin": "1234",
        "password": "password123",
        "extraProperty": "This is an extra property that is not allowed by the schema"
      }
    },
    {
      "description": "llama-70b generated negative; focus on minimum keyword",
      "valid": false,
      "rust_error": "-1 is less than the minimum of 0",
      "python_error": "-1 is less than the minimum of 0\n\nFailed validating 'minimum' in schema['properties']['id']:\n    {'description': 'Identifier for the user',\n     'type': 'integer',\n     'minimum': 0}\n\nOn instance['id']:\n    -1",
      "data": {
        "id": -1,
        "name": "John Doe",
        "type": "user",
        "email": "john.doe@example.com",
        "hasGPS": true,
        "deviceRights": [
          -1,
          2,
          3
        ],
        "sceneRights": [
          1,
          2
        ],
        "hotelRoom": -101,
        "sendNotifications": true,
        "tracking": -5,
        "usePin": true,
        "useOptionalArmPin": false,
        "pin": "1234",
        "password": "password123"
      }
    },
    {
      "description": "llama-70b generated negative; focus on maxLength keyword",
      "valid": false,
      "rust_error": "\"John Doe Very Long Name That Should Not Be Valid\" is longer than 20 characters",
      "python_error": "'John Doe Very Long Name That Should Not Be Valid' is too long\n\nFailed validating 'maxLength' in schema['properties']['name']:\n    {'description': 'Name of the user', 'type': 'string', 'maxLength': 20}\n\nOn instance['name']:\n    'John Doe Very Long Name That Should Not Be Valid'",
      "data": {
        "id": 1,
        "name": "John Doe Very Long Name That Should Not Be Valid",
        "type": "user",
        "email": "john.doe@example.com",
        "hasGPS": true,
        "deviceRights": [
          1,
          2,
          3
        ],
        "sceneRights": [
          1,
          2
        ],
        "hotelRoom": 101,
        "sendNotifications": true,
        "tracking": 5,
        "usePin": true,
        "useOptionalArmPin": false,
        "pin": "1234",
        "password": "password123"
      }
    },
    {
      "description": "llama-70b generated negative; focus on minimum keyword",
      "valid": false,
      "rust_error": "-1 is less than the minimum of 0",
      "python_error": "-1 is less than the minimum of 0\n\nFailed validating 'minimum' in schema['properties']['id']:\n    {'description': 'Identifier for the user',\n     'type': 'integer',\n     'minimum': 0}\n\nOn instance['id']:\n    -1",
      "data": {
        "id": -1,
        "name": "John Doe",
        "type": "user",
        "email": "john.doe@example.com",
        "hasGPS": true,
        "deviceRights": [
          1,
          2,
          3
        ],
        "sceneRights": [
          1,
          2
        ],
        "hotelRoom": 101,
        "sendNotifications": true,
        "tracking": 5,
        "usePin": true,
        "useOptionalArmPin": false,
        "pin": "1234",
        "password": "password123"
      }
    },
    {
      "description": "llama-70b generated negative; focus on maxLength keyword",
      "valid": false,
      "rust_error": "\"John Doe is a very long name that exceeds the maxLength of 20 characters\" is longer than 20 characters",
      "python_error": "'John Doe is a very long name that exceeds the maxLength of 20 characters' is too long\n\nFailed validating 'maxLength' in schema['properties']['name']:\n    {'description': 'Name of the user', 'type': 'string', 'maxLength': 20}\n\nOn instance['name']:\n    ('John Doe is a very long name that exceeds the maxLength of 20 '\n     'characters')",
      "data": {
        "id": 1,
        "name": "John Doe is a very long name that exceeds the maxLength of 20 characters",
        "type": "user",
        "email": "john.doe@example.com",
        "hasGPS": true,
        "deviceRights": [
          1,
          2,
          3
        ],
        "sceneRights": [
          1,
          2
        ],
        "hotelRoom": 101,
        "sendNotifications": true,
        "tracking": 5,
        "usePin": true,
        "useOptionalArmPin": false,
        "pin": "1234",
        "password": "password123"
      }
    },
    {
      "description": "llama-70b generated negative; focus on maxLength keyword",
      "valid": false,
      "rust_error": "\"This is a very long name that is longer than the allowed 20 characters\" is longer than 20 characters",
      "python_error": "'This is a very long name that is longer than the allowed 20 characters' is too long\n\nFailed validating 'maxLength' in schema['properties']['name']:\n    {'description': 'Name of the user', 'type': 'string', 'maxLength': 20}\n\nOn instance['name']:\n    'This is a very long name that is longer than the allowed 20 characters'",
      "data": {
        "id": 1,
        "name": "This is a very long name that is longer than the allowed 20 characters",
        "type": "user",
        "email": "john.doe@example.com",
        "hasGPS": true,
        "deviceRights": [
          1,
          2,
          3
        ],
        "sceneRights": [
          1,
          2
        ],
        "hotelRoom": 101,
        "sendNotifications": true,
        "tracking": 5,
        "usePin": true,
        "useOptionalArmPin": false,
        "pin": "1234",
        "password": "password123"
      }
    }
  ]
}