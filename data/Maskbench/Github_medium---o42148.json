{
  "description": "sample Github_medium/o42148.json",
  "meta": {
    "full_size": 1795,
    "stripped_size": 1715,
    "features": [
      "$ref",
      "@minmaxItems",
      "enum",
      "items"
    ],
    "raw_features": [
      "$schema",
      "definitions",
      "minItems",
      "properties",
      "required",
      "type",
      "type:array",
      "type:boolean",
      "type:integer",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "type": "object",
    "required": [
      "statVersion",
      "process"
    ],
    "properties": {
      "statVersion": {
        "type": "string"
      },
      "process": {
        "$ref": "#/definitions/process"
      },
      "findings": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/finding"
        },
        "_uniqueItems": true
      }
    },
    "definitions": {
      "process": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "maintainer": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "website": {
            "type": "string"
          },
          "repeatability": {
            "type": "string",
            "enum": [
              "Volatile",
              "Repeatable",
              "Associative"
            ]
          }
        },
        "required": [
          "name"
        ]
      },
      "finding": {
        "type": "object",
        "properties": {
          "failure": {
            "type": "boolean"
          },
          "rule": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "detail": {
            "$ref": "#/definitions/detail"
          },
          "categories": {
            "type": "array",
            "minItems": 1,
            "items": {
              "$ref": "#/definitions/category"
            },
            "_uniqueItems": true
          },
          "location": {
            "$ref": "#/definitions/location"
          },
          "timeToFix": {
            "type": "integer"
          },
          "recommendation": {
            "type": "string"
          },
          "fixes": {
            "type": "array",
            "minItems": 1,
            "items": {
              "$ref": "#/definitions/fix"
            },
            "_uniqueItems": true
          }
        },
        "required": [
          "failure",
          "rule",
          "description"
        ]
      },
      "category": {
        "enum": [
          "Bug Risk",
          "Clarity",
          "Compatibility",
          "Complexity",
          "Duplication",
          "Performance",
          "Security",
          "Style"
        ]
      },
      "detail": {
        "type": "object",
        "properties": {
          "body": {
            "type": "string"
          },
          "trace": {
            "type": "array",
            "minItems": 1,
            "items": {
              "$ref": "#/definitions/location"
            },
            "_uniqueItems": true
          }
        },
        "required": [
          "body"
        ]
      },
      "fix": {
        "type": "object",
        "properties": {
          "location": {
            "$ref": "#/definitions/location"
          },
          "newText": {
            "type": "string"
          }
        },
        "required": [
          "location"
        ]
      },
      "location": {
        "type": "object",
        "properties": {
          "path": {
            "type": "string"
          },
          "beginLine": {
            "type": "integer"
          },
          "beginColumn": {
            "type": "integer"
          },
          "endLine": {
            "type": "integer"
          },
          "endColumn": {
            "type": "integer"
          }
        },
        "required": [
          "path"
        ]
      }
    }
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "statVersion": "1.0",
        "process": {
          "name": "Example Process",
          "version": "1.0",
          "description": "This is an example process",
          "maintainer": "John Doe",
          "email": "john.doe@example.com",
          "website": "https://example.com",
          "repeatability": "Repeatable"
        },
        "findings": [
          {
            "failure": true,
            "rule": "Rule 1",
            "description": "This is a description of the finding",
            "detail": {
              "body": "This is the body of the detail",
              "trace": [
                {
                  "path": "/path/to/file1",
                  "beginLine": 1,
                  "beginColumn": 1,
                  "endLine": 1,
                  "endColumn": 10
                },
                {
                  "path": "/path/to/file2",
                  "beginLine": 2,
                  "beginColumn": 1,
                  "endLine": 2,
                  "endColumn": 10
                }
              ]
            },
            "categories": [
              "Bug Risk",
              "Security"
            ],
            "location": {
              "path": "/path/to/file",
              "beginLine": 1,
              "beginColumn": 1,
              "endLine": 1,
              "endColumn": 10
            },
            "timeToFix": 30,
            "recommendation": "This is a recommendation",
            "fixes": [
              {
                "location": {
                  "path": "/path/to/file",
                  "beginLine": 1,
                  "beginColumn": 1,
                  "endLine": 1,
                  "endColumn": 10
                },
                "newText": "This is the new text"
              }
            ]
          },
          {
            "failure": false,
            "rule": "Rule 2",
            "description": "This is another description of the finding",
            "detail": {
              "body": "This is the body of the detail"
            },
            "categories": [
              "Clarity",
              "Style"
            ],
            "location": {
              "path": "/path/to/another/file",
              "beginLine": 2,
              "beginColumn": 1,
              "endLine": 2,
              "endColumn": 10
            },
            "timeToFix": 60,
            "recommendation": "This is another recommendation",
            "fixes": [
              {
                "location": {
                  "path": "/path/to/another/file",
                  "beginLine": 2,
                  "beginColumn": 1,
                  "endLine": 2,
                  "endColumn": 10
                },
                "newText": "This is another new text"
              }
            ]
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on minItems keyword",
      "valid": false,
      "rust_error": "[] has less than 1 item",
      "python_error": "[] should be non-empty\n\nFailed validating 'minItems' in schema['properties']['findings']['items']['properties']['fixes']:\n    {'type': 'array',\n     'minItems': 1,\n     'items': {'$ref': '#/definitions/fix'},\n     '_uniqueItems': True}\n\nOn instance['findings'][0]['fixes']:\n    []",
      "data": {
        "statVersion": "1.0",
        "process": {
          "name": "Example Process",
          "version": "1.0",
          "description": "This is an example process",
          "maintainer": "John Doe",
          "email": "john.doe@example.com",
          "website": "https://example.com",
          "repeatability": "Repeatable"
        },
        "findings": [
          {
            "failure": true,
            "rule": "Rule 1",
            "description": "This is a description of the finding",
            "detail": {
              "body": "This is the body of the detail",
              "trace": [
                {
                  "path": "/path/to/file1",
                  "beginLine": 1,
                  "beginColumn": 1,
                  "endLine": 1,
                  "endColumn": 10
                },
                {
                  "path": "/path/to/file2",
                  "beginLine": 2,
                  "beginColumn": 1,
                  "endLine": 2,
                  "endColumn": 10
                }
              ]
            },
            "categories": [],
            "location": {
              "path": "/path/to/file",
              "beginLine": 1,
              "beginColumn": 1,
              "endLine": 1,
              "endColumn": 10
            },
            "timeToFix": 30,
            "recommendation": "This is a recommendation",
            "fixes": []
          },
          {
            "failure": false,
            "rule": "Rule 2",
            "description": "This is another description of the finding",
            "detail": {
              "body": "This is the body of the detail"
            },
            "categories": [
              "Clarity",
              "Style"
            ],
            "location": {
              "path": "/path/to/another/file",
              "beginLine": 2,
              "beginColumn": 1,
              "endLine": 2,
              "endColumn": 10
            },
            "timeToFix": 60,
            "recommendation": "This is another recommendation",
            "fixes": [
              {
                "location": {
                  "path": "/path/to/another/file",
                  "beginLine": 2,
                  "beginColumn": 1,
                  "endLine": 2,
                  "endColumn": 10
                },
                "newText": "This is another new text"
              }
            ]
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on minItems keyword",
      "valid": false,
      "rust_error": "[] has less than 1 item",
      "python_error": "[] should be non-empty\n\nFailed validating 'minItems' in schema['properties']['findings']['items']['properties']['categories']:\n    {'type': 'array',\n     'minItems': 1,\n     'items': {'$ref': '#/definitions/category'},\n     '_uniqueItems': True}\n\nOn instance['findings'][0]['categories']:\n    []",
      "data": {
        "statVersion": "1.0",
        "process": {
          "name": "Example Process",
          "version": "1.0",
          "description": "This is an example process",
          "maintainer": "John Doe",
          "email": "john.doe@example.com",
          "website": "https://example.com",
          "repeatability": "Repeatable"
        },
        "findings": [
          {
            "failure": true,
            "rule": "Rule 1",
            "description": "This is a description of the finding",
            "detail": {
              "body": "This is the body of the detail",
              "trace": [
                {
                  "path": "/path/to/file1",
                  "beginLine": 1,
                  "beginColumn": 1,
                  "endLine": 1,
                  "endColumn": 10
                },
                {
                  "path": "/path/to/file2",
                  "beginLine": 2,
                  "beginColumn": 1,
                  "endLine": 2,
                  "endColumn": 10
                }
              ]
            },
            "categories": [],
            "location": {
              "path": "/path/to/file",
              "beginLine": 1,
              "beginColumn": 1,
              "endLine": 1,
              "endColumn": 10
            },
            "timeToFix": 30,
            "recommendation": "This is a recommendation",
            "fixes": [
              {
                "location": {
                  "path": "/path/to/file",
                  "beginLine": 1,
                  "beginColumn": 1,
                  "endLine": 1,
                  "endColumn": 10
                },
                "newText": "This is the new text"
              }
            ]
          },
          {
            "failure": false,
            "rule": "Rule 2",
            "description": "This is another description of the finding",
            "detail": {
              "body": "This is the body of the detail"
            },
            "categories": [
              "Clarity",
              "Style"
            ],
            "location": {
              "path": "/path/to/another/file",
              "beginLine": 2,
              "beginColumn": 1,
              "endLine": 2,
              "endColumn": 10
            },
            "timeToFix": 60,
            "recommendation": "This is another recommendation",
            "fixes": [
              {
                "location": {
                  "path": "/path/to/another/file",
                  "beginLine": 2,
                  "beginColumn": 1,
                  "endLine": 2,
                  "endColumn": 10
                },
                "newText": "This is another new text"
              }
            ]
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on minItems keyword",
      "valid": false,
      "rust_error": "[] has less than 1 item",
      "python_error": "[] should be non-empty\n\nFailed validating 'minItems' in schema['properties']['findings']['items']['properties']['fixes']:\n    {'type': 'array',\n     'minItems': 1,\n     'items': {'$ref': '#/definitions/fix'},\n     '_uniqueItems': True}\n\nOn instance['findings'][0]['fixes']:\n    []",
      "data": {
        "statVersion": "1.0",
        "process": {
          "name": "Example Process",
          "version": "1.0",
          "description": "This is an example process",
          "maintainer": "John Doe",
          "email": "john.doe@example.com",
          "website": "https://example.com",
          "repeatability": "Repeatable"
        },
        "findings": [
          {
            "failure": true,
            "rule": "Rule 1",
            "description": "This is a description of the finding",
            "detail": {
              "body": "This is the body of the detail",
              "trace": [
                {
                  "path": "/path/to/file1",
                  "beginLine": 1,
                  "beginColumn": 1,
                  "endLine": 1,
                  "endColumn": 10
                },
                {
                  "path": "/path/to/file2",
                  "beginLine": 2,
                  "beginColumn": 1,
                  "endLine": 2,
                  "endColumn": 10
                }
              ]
            },
            "categories": [
              "Bug Risk",
              "Security"
            ],
            "location": {
              "path": "/path/to/file",
              "beginLine": 1,
              "beginColumn": 1,
              "endLine": 1,
              "endColumn": 10
            },
            "timeToFix": 30,
            "recommendation": "This is a recommendation",
            "fixes": []
          },
          {
            "failure": false,
            "rule": "Rule 2",
            "description": "This is another description of the finding",
            "detail": {
              "body": "This is the body of the detail"
            },
            "categories": [
              "Clarity",
              "Style"
            ],
            "location": {
              "path": "/path/to/another/file",
              "beginLine": 2,
              "beginColumn": 1,
              "endLine": 2,
              "endColumn": 10
            },
            "timeToFix": 60,
            "recommendation": "This is another recommendation",
            "fixes": [
              {
                "location": {
                  "path": "/path/to/another/file",
                  "beginLine": 2,
                  "beginColumn": 1,
                  "endLine": 2,
                  "endColumn": 10
                },
                "newText": "This is another new text"
              }
            ]
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"Invalid\" is not one of [\"Volatile\",\"Repeatable\",\"Associative\"]",
      "python_error": "'Invalid' is not one of ['Volatile', 'Repeatable', 'Associative']\n\nFailed validating 'enum' in schema['properties']['process']['properties']['repeatability']:\n    {'type': 'string', 'enum': ['Volatile', 'Repeatable', 'Associative']}\n\nOn instance['process']['repeatability']:\n    'Invalid'",
      "data": {
        "statVersion": "1.0",
        "process": {
          "name": "Example Process",
          "version": "1.0",
          "description": "This is an example process",
          "maintainer": "John Doe",
          "email": "john.doe@example.com",
          "website": "https://example.com",
          "repeatability": "Invalid"
        },
        "findings": [
          {
            "failure": true,
            "rule": "Rule 1",
            "description": "This is a description of the finding",
            "detail": {
              "body": "This is the body of the detail",
              "trace": [
                {
                  "path": "/path/to/file1",
                  "beginLine": 1,
                  "beginColumn": 1,
                  "endLine": 1,
                  "endColumn": 10
                },
                {
                  "path": "/path/to/file1",
                  "beginLine": 2,
                  "beginColumn": 1,
                  "endLine": 2,
                  "endColumn": 10
                }
              ]
            },
            "categories": [
              "Bug Risk",
              "Security"
            ],
            "location": {
              "path": "/path/to/file",
              "beginLine": 1,
              "beginColumn": 1,
              "endLine": 1,
              "endColumn": 10
            },
            "timeToFix": 30,
            "recommendation": "This is a recommendation",
            "fixes": [
              {
                "location": {
                  "path": "/path/to/file",
                  "beginLine": 1,
                  "beginColumn": 1,
                  "endLine": 1,
                  "endColumn": 10
                },
                "newText": "This is the new text"
              }
            ]
          },
          {
            "failure": false,
            "rule": "Rule 2",
            "description": "This is another description of the finding",
            "detail": {
              "body": "This is the body of the detail"
            },
            "categories": [
              "Clarity",
              "Style",
              "Clarity"
            ],
            "location": {
              "path": "/path/to/another/file",
              "beginLine": 2,
              "beginColumn": 1,
              "endLine": 2,
              "endColumn": 10
            },
            "timeToFix": 60,
            "recommendation": "This is another recommendation",
            "fixes": [
              {
                "location": {
                  "path": "/path/to/another/file",
                  "beginLine": 2,
                  "beginColumn": 1,
                  "endLine": 2,
                  "endColumn": 10
                },
                "newText": "This is another new text"
              }
            ]
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on minItems keyword",
      "valid": false,
      "rust_error": "[] has less than 1 item",
      "python_error": "[] should be non-empty\n\nFailed validating 'minItems' in schema['properties']['findings']['items']['properties']['fixes']:\n    {'type': 'array',\n     'minItems': 1,\n     'items': {'$ref': '#/definitions/fix'},\n     '_uniqueItems': True}\n\nOn instance['findings'][0]['fixes']:\n    []",
      "data": {
        "statVersion": "1.0",
        "process": {
          "name": "Example Process",
          "version": "1.0",
          "description": "This is an example process",
          "maintainer": "John Doe",
          "email": "john.doe@example.com",
          "website": "https://example.com",
          "repeatability": "Repeatable"
        },
        "findings": [
          {
            "failure": true,
            "rule": "Rule 1",
            "description": "This is a description of the finding",
            "detail": {
              "body": "This is the body of the detail",
              "trace": []
            },
            "categories": [
              "Bug Risk",
              "Security"
            ],
            "location": {
              "path": "/path/to/file",
              "beginLine": 1,
              "beginColumn": 1,
              "endLine": 1,
              "endColumn": 10
            },
            "timeToFix": 30,
            "recommendation": "This is a recommendation",
            "fixes": []
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"name\" is a required property",
      "python_error": "'name' is a required property\n\nFailed validating 'required' in schema['properties']['process']:\n    {'type': 'object',\n     'properties': {'name': {'type': 'string'},\n                    'version': {'type': 'string'},\n                    'description': {'type': 'string'},\n                    'maintainer': {'type': 'string'},\n                    'email': {'type': 'string'},\n                    'website': {'type': 'string'},\n                    'repeatability': {'type': 'string',\n                                      'enum': ['Volatile',\n                                               'Repeatable',\n                                               'Associative']}},\n     'required': ['name']}\n\nOn instance['process']:\n    {'version': '1.0',\n     'description': 'This is an example process',\n     'maintainer': 'John Doe',\n     'email': 'john.doe@example.com',\n     'website': 'https://example.com',\n     'repeatability': 'Repeatable'}",
      "data": {
        "statVersion": "1.0",
        "process": {
          "version": "1.0",
          "description": "This is an example process",
          "maintainer": "John Doe",
          "email": "john.doe@example.com",
          "website": "https://example.com",
          "repeatability": "Repeatable"
        },
        "findings": [
          {
            "failure": true,
            "rule": "Rule 1",
            "description": "This is a description of the finding",
            "detail": {
              "body": "This is the body of the detail",
              "trace": [
                {
                  "path": "/path/to/file1",
                  "beginLine": 1,
                  "beginColumn": 1,
                  "endLine": 1,
                  "endColumn": 10
                },
                {
                  "path": "/path/to/file2",
                  "beginLine": 2,
                  "beginColumn": 1,
                  "endLine": 2,
                  "endColumn": 10
                },
                {
                  "path": "/path/to/file1",
                  "beginLine": 1,
                  "beginColumn": 1,
                  "endLine": 1,
                  "endColumn": 10
                }
              ]
            },
            "categories": [
              "Bug Risk",
              "Security",
              "Bug Risk"
            ],
            "location": {
              "beginLine": 1,
              "beginColumn": 1,
              "endLine": 1,
              "endColumn": 10
            },
            "timeToFix": 30,
            "recommendation": "This is a recommendation",
            "fixes": [
              {
                "location": {
                  "path": "/path/to/file",
                  "beginLine": 1,
                  "beginColumn": 1,
                  "endLine": 1,
                  "endColumn": 10
                },
                "newText": "This is the new text"
              },
              {
                "location": {
                  "path": "/path/to/file",
                  "beginLine": 1,
                  "beginColumn": 1,
                  "endLine": 1,
                  "endColumn": 10
                },
                "newText": "This is the new text"
              }
            ]
          }
        ]
      }
    }
  ]
}