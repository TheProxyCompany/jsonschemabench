{
  "description": "sample Github_medium/o39137.json",
  "meta": {
    "full_size": 1503,
    "stripped_size": 860,
    "features": [
      "$ref",
      "additionalProperties",
      "items",
      "oneOf"
    ],
    "raw_features": [
      "_boolSchema",
      "definitions",
      "properties",
      "required",
      "type",
      "type:array",
      "type:boolean",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "additionalProperties": false,
    "definitions": {
      "fileReplacement": {
        "oneOf": [
          {
            "additionalProperties": false,
            "properties": {
              "replaceWith": {
                "type": "string"
              },
              "src": {
                "type": "string"
              }
            },
            "required": [
              "src",
              "replaceWith"
            ],
            "type": "object"
          },
          {
            "additionalProperties": false,
            "properties": {
              "replace": {
                "type": "string"
              },
              "with": {
                "type": "string"
              }
            },
            "required": [
              "replace",
              "with"
            ],
            "type": "object"
          }
        ]
      }
    },
    "description": "Universal target options for Build Facade.",
    "properties": {
      "browserTarget": {
        "description": "Target to browser.",
        "type": "string"
      },
      "bundleDependenciesWhitelist": {
        "description": "DEPRECATED use \"externalDependencies\" in server builder",
        "items": {
          "type": "string"
        },
        "type": "array"
      },
      "deleteOutputPath": {
        "default": true,
        "description": "Delete the output path before building.",
        "type": "boolean"
      },
      "fileLoaderEmitFile": {
        "default": false,
        "description": "DEPRECATED server builder doesn't emit any file since angular v9",
        "type": "boolean"
      },
      "fileReplacements": {
        "default": [],
        "description": "Replace files with other files in the build.",
        "items": {
          "$ref": "#/definitions/fileReplacement"
        },
        "type": "array"
      },
      "partialBrowserConfig": {
        "description": "Partial webpack config for browser.",
        "type": "string"
      },
      "partialServerConfig": {
        "description": "Partial webpack config for server.",
        "type": "string"
      },
      "serverTarget": {
        "description": "Target to server.",
        "type": "string"
      },
      "verbose": {
        "default": false,
        "description": "Adds more details to output logging.",
        "type": "boolean"
      }
    },
    "required": [
      "browserTarget",
      "serverTarget"
    ],
    "title": "Universal Target",
    "type": "object"
  },
  "tests": [
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "browserTarget": "my-browser-target",
        "deleteOutputPath": true,
        "fileReplacements": [
          {
            "replaceWith": "path/to/new/file.ts",
            "src": "path/to/old/file.ts"
          },
          {
            "replace": "path/to/old/file2.ts",
            "with": "path/to/new/file2.ts"
          }
        ],
        "serverTarget": "my-server-target",
        "verbose": false
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "browserTarget": "my-browser-target",
        "deleteOutputPath": true,
        "fileReplacements": [
          {
            "replaceWith": "path/to/replacement/file.ts",
            "src": "path/to/source/file.ts"
          },
          {
            "replace": "path/to/another/source/file.ts",
            "with": "path/to/another/replacement/file.ts"
          }
        ],
        "serverTarget": "my-server-target",
        "verbose": false
      }
    },
    {
      "description": "llama-70b generated negative; focus on oneOf keyword",
      "valid": false,
      "rust_error": "{\"src\":\"path/to/source/file.ts\",\"replaceWith\":\"path/to/replacement/file.ts\",\"replace\":\"path/to/another/source/file.ts\"} is not valid under any of the schemas listed in the 'oneOf' keyword",
      "python_error": "{'src': 'path/to/source/file.ts', 'replaceWith': 'path/to/replacement/file.ts', 'replace': 'path/to/another/source/file.ts'} is not valid under any of the given schemas\n\nFailed validating 'oneOf' in schema['properties']['fileReplacements']['items']:\n    {'oneOf': [{'additionalProperties': False,\n                'properties': {'replaceWith': {'type': 'string'},\n                               'src': {'type': 'string'}},\n                'required': ['src', 'replaceWith'],\n                'type': 'object'},\n               {'additionalProperties': False,\n                'properties': {'replace': {'type': 'string'},\n                               'with': {'type': 'string'}},\n                'required': ['replace', 'with'],\n                'type': 'object'}]}\n\nOn instance['fileReplacements'][0]:\n    {'src': 'path/to/source/file.ts',\n     'replaceWith': 'path/to/replacement/file.ts',\n     'replace': 'path/to/another/source/file.ts'}",
      "data": {
        "browserTarget": "my-browser-target",
        "serverTarget": "my-server-target",
        "deleteOutputPath": true,
        "fileReplacements": [
          {
            "src": "path/to/source/file.ts",
            "replaceWith": "path/to/replacement/file.ts",
            "replace": "path/to/another/source/file.ts"
          }
        ],
        "verbose": false
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "{\"src\":\"path/to/source/file.ts\",\"replaceWith\":\"path/to/replacement/file.ts\",\"extraProperty\":\"value\"} is not valid under any of the schemas listed in the 'oneOf' keyword",
      "python_error": "{'src': 'path/to/source/file.ts'} is not valid under any of the given schemas\n\nFailed validating 'oneOf' in schema['properties']['fileReplacements']['items']:\n    {'oneOf': [{'additionalProperties': False,\n                'properties': {'replaceWith': {'type': 'string'},\n                               'src': {'type': 'string'}},\n                'required': ['src', 'replaceWith'],\n                'type': 'object'},\n               {'additionalProperties': False,\n                'properties': {'replace': {'type': 'string'},\n                               'with': {'type': 'string'}},\n                'required': ['replace', 'with'],\n                'type': 'object'}]}\n\nOn instance['fileReplacements'][2]:\n    {'src': 'path/to/source/file.ts'}",
      "data": {
        "browserTarget": "my-browser-target",
        "serverTarget": "my-server-target",
        "deleteOutputPath": true,
        "fileReplacements": [
          {
            "src": "path/to/source/file.ts",
            "replaceWith": "path/to/replacement/file.ts",
            "extraProperty": "value"
          },
          {
            "replace": "path/to/another/source/file.ts",
            "with": "path/to/another/replacement/file.ts"
          },
          {
            "src": "path/to/source/file.ts"
          }
        ],
        "verbose": false
      }
    }
  ]
}