{
  "description": "sample Github_easy/o17678.json",
  "meta": {
    "full_size": 355,
    "stripped_size": 355,
    "features": [
      "$ref",
      "@siblingKeys",
      "additionalProperties",
      "anyOf",
      "items"
    ],
    "raw_features": [
      "$schema",
      "_boolSchema",
      "definitions",
      "properties",
      "required",
      "type",
      "type:[]",
      "type:array",
      "type:number",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "definitions": {
      "MyUnion": {
        "type": "array",
        "items": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "$ref": "#/definitions/MyObject"
            }
          ]
        }
      },
      "MyObject": {
        "type": "object",
        "properties": {
          "array": {
            "type": "array",
            "items": {
              "type": [
                "string",
                "number"
              ]
            }
          }
        },
        "required": [
          "array"
        ],
        "additionalProperties": false
      }
    },
    "$ref": "#/definitions/MyUnion"
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": [
        "string",
        {
          "array": [
            "string",
            1,
            "string",
            2
          ]
        },
        "string",
        {
          "array": [
            1,
            2,
            3
          ]
        }
      ]
    },
    {
      "description": "llama-70b generated negative; focus on anyOf keyword",
      "valid": false,
      "rust_error": "{\"$schema\":\"http://json-schema.org/draft-07/schema#\",\"definitions\":{\"MyUnion\":{\"type\":\"array\",\"items\":{\"anyOf\":[{\"type\":\"string\"},{\"$ref\":\"#/definitions/MyObject\"}]}},\"MyObject\":{\"type\":\"object\",\"properties\":{\"array\":{\"type\":\"array\",\"items\":{\"type\":[\"string\",\"number\"]}}},\"required\":[\"array\"],\"additionalProperties\":false}},\"$ref\":\"#/definitions/MyUnion\"} is not of type \"array\"",
      "python_error": "{'$schema': 'http://json-schema.org/draft-07/schema#', 'definitions': {'MyUnion': {'type': 'array', 'items': {'anyOf': [{'type': 'string'}, {'$ref': '#/definitions/MyObject'}]}}, 'MyObject': {'type': 'object', 'properties': {'array': {'type': 'array', 'items': {'type': ['string', 'number']}}}, 'required': ['array'], 'additionalProperties': False}}, '$ref': '#/definitions/MyUnion'} is not of type 'array'\n\nFailed validating 'type' in schema:\n    {'type': 'array',\n     'items': {'anyOf': [{'type': 'string'},\n                         {'$ref': '#/definitions/MyObject'}]}}\n\nOn instance:\n    {'$schema': 'http://json-schema.org/draft-07/schema#',\n     'definitions': {'MyUnion': {'type': 'array',\n                                 'items': {'anyOf': [{'type': 'string'},\n                                                     {'$ref': '#/definitions/MyObject'}]}},\n                     'MyObject': {'type': 'object',\n                                  'properties': {'array': {'type': 'array',\n                                  .. (307 more)",
      "data": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "definitions": {
          "MyUnion": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "$ref": "#/definitions/MyObject"
                }
              ]
            }
          },
          "MyObject": {
            "type": "object",
            "properties": {
              "array": {
                "type": "array",
                "items": {
                  "type": [
                    "string",
                    "number"
                  ]
                }
              }
            },
            "required": [
              "array"
            ],
            "additionalProperties": false
          }
        },
        "$ref": "#/definitions/MyUnion"
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "{\"key\":\"value\",\"array\":[\"string\",1,\"string\",2]} is not of type \"array\"",
      "python_error": "{'key': 'value', 'array': ['string', 1, 'string', 2]} is not of type 'array'\n\nFailed validating 'type' in schema:\n    {'type': 'array',\n     'items': {'anyOf': [{'type': 'string'},\n                         {'$ref': '#/definitions/MyObject'}]}}\n\nOn instance:\n    {'key': 'value', 'array': ['string', 1, 'string', 2]}",
      "data": {
        "key": "value",
        "array": [
          "string",
          1,
          "string",
          2
        ]
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "{\"array\":[\"string\",1,\"string\",2,null]} is not of type \"array\"",
      "python_error": "{'array': ['string', 1, 'string', 2, None]} is not of type 'array'\n\nFailed validating 'type' in schema:\n    {'type': 'array',\n     'items': {'anyOf': [{'type': 'string'},\n                         {'$ref': '#/definitions/MyObject'}]}}\n\nOn instance:\n    {'array': ['string', 1, 'string', 2, None]}",
      "data": {
        "array": [
          "string",
          1,
          "string",
          2,
          null
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on anyOf keyword",
      "valid": false,
      "rust_error": "{\"array\":[\"string\",true]} is not of type \"array\"",
      "python_error": "{'array': ['string', True]} is not of type 'array'\n\nFailed validating 'type' in schema:\n    {'type': 'array',\n     'items': {'anyOf': [{'type': 'string'},\n                         {'$ref': '#/definitions/MyObject'}]}}\n\nOn instance:\n    {'array': ['string', True]}",
      "data": {
        "array": [
          "string",
          true
        ]
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "{\"array\":[true]} is not of type \"array\"",
      "python_error": "{'array': [True]} is not of type 'array'\n\nFailed validating 'type' in schema:\n    {'type': 'array',\n     'items': {'anyOf': [{'type': 'string'},\n                         {'$ref': '#/definitions/MyObject'}]}}\n\nOn instance:\n    {'array': [True]}",
      "data": {
        "array": [
          true
        ]
      }
    }
  ]
}