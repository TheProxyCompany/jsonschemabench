{
  "description": "sample Github_easy/o90246.json",
  "meta": {
    "full_size": 1165,
    "stripped_size": 492,
    "features": [
      "@minmaxItems",
      "@siblingKeys",
      "additionalProperties",
      "anyOf",
      "dependencies",
      "items",
      "oneOf"
    ],
    "raw_features": [
      "$schema",
      "_boolSchema",
      "maxItems",
      "minItems",
      "properties",
      "required",
      "type",
      "type:array",
      "type:boolean",
      "type:number",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "title": "Multi-dimensional Definition",
    "type": "object",
    "$schema": "http://json-schema.org/draft-04/schema",
    "properties": {
      "dimensionName": {
        "type": "string",
        "description": "Type of dimension being used (ex. StdTime)."
      },
      "isSlice": {
        "type": "boolean",
        "description": "Is slice?",
        "default": true
      },
      "values": {
        "type": "array",
        "description": "Array where every element is either a single value, or an array of two values (lower and upper bound).",
        "items": {
          "oneOf": [
            {
              "type": "number"
            },
            {
              "type": "array",
              "items": {
                "type": "number"
              },
              "minItems": 2,
              "maxItems": 2
            }
          ]
        }
      },
      "variableName": {
        "type": "string",
        "description": "Name of the variable."
      }
    },
    "anyOf": [
      {
        "required": [
          "variableName"
        ]
      },
      {
        "required": [
          "dimensionName",
          "values"
        ]
      }
    ],
    "additionalProperties": false,
    "dependencies": {
      "dimensionName": [
        "values"
      ],
      "values": [
        "dimensionName"
      ]
    },
    "esriDocumentation": {
      "additionalInformation": "[Multidimensional Definition](http://resources.arcgis.com/en/help/arcgis-rest-api/index.html#//02r300000290000000) in ArcGIS REST API",
      "examples": [
        {
          "code": {
            "multidimensionalDefinition": {
              "variableName": "AvgSalinity",
              "dimensionName": "StdZ",
              "values": [
                [
                  1406181600000,
                  1406182200000
                ],
                [
                  1406224800000,
                  1406225400000
                ]
              ],
              "isSlice": false
            }
          }
        }
      ]
    }
  },
  "tests": [
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "dimensionName": "StdTime",
        "isSlice": true,
        "values": [
          1406181600000,
          [
            1406182200000,
            1406182800000
          ],
          [
            1406224800000,
            1406225400000
          ]
        ],
        "variableName": "AvgTemperature"
      }
    },
    {
      "description": "llama-70b generated negative; focus on oneOf keyword",
      "valid": false,
      "rust_error": "[1406182200000] is not valid under any of the schemas listed in the 'oneOf' keyword",
      "python_error": "[1406182200000] is too short\n\nFailed validating 'minItems' in schema[1]:\n    {'type': 'array',\n     'items': {'type': 'number'},\n     'minItems': 2,\n     'maxItems': 2}\n\nOn instance:\n    [1406182200000]",
      "data": {
        "dimensionName": "StdTime",
        "isSlice": true,
        "values": [
          1406181600000,
          [
            1406182200000
          ],
          [
            1406224800000,
            1406225400000
          ]
        ],
        "variableName": "AvgTemperature"
      }
    },
    {
      "description": "llama-70b generated negative; focus on dependencies keyword",
      "valid": false,
      "rust_error": "null is not of type \"array\"",
      "python_error": "None is not of type 'array'\n\nFailed validating 'type' in schema['properties']['values']:\n    {'type': 'array',\n     'description': 'Array where every element is either a single value, '\n                    'or an array of two values (lower and upper bound).',\n     'items': {'oneOf': [{'type': 'number'},\n                         {'type': 'array',\n                          'items': {'type': 'number'},\n                          'minItems': 2,\n                          'maxItems': 2}]}}\n\nOn instance['values']:\n    None",
      "data": {
        "dimensionName": "StdTime",
        "isSlice": true,
        "variableName": "AvgTemperature",
        "values": null
      }
    },
    {
      "description": "llama-70b generated negative; focus on minItems keyword or maxItems keyword",
      "valid": false,
      "rust_error": "[1406182200000] is not valid under any of the schemas listed in the 'oneOf' keyword",
      "python_error": "[1406182200000] is too short\n\nFailed validating 'minItems' in schema[1]:\n    {'type': 'array',\n     'items': {'type': 'number'},\n     'minItems': 2,\n     'maxItems': 2}\n\nOn instance:\n    [1406182200000]",
      "data": {
        "dimensionName": "StdTime",
        "isSlice": true,
        "values": [
          1406181600000,
          [
            1406182200000
          ],
          [
            1406224800000,
            1406225400000
          ]
        ],
        "variableName": "AvgTemperature"
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "[1406182200000,null] is not valid under any of the schemas listed in the 'oneOf' keyword",
      "python_error": "None is not of type 'number'\n\nFailed validating 'type' in schema[1]['items']:\n    {'type': 'number'}\n\nOn instance[1]:\n    None",
      "data": {
        "dimensionName": "StdTime",
        "isSlice": true,
        "values": [
          1406181600000,
          [
            1406182200000,
            null
          ],
          [
            1406224800000,
            1406225400000
          ]
        ],
        "variableName": "AvgTemperature"
      }
    }
  ]
}