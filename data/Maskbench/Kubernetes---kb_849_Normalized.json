{
  "description": "sample Kubernetes/kb_849_Normalized.json",
  "meta": {
    "full_size": 1271,
    "stripped_size": 345,
    "features": [
      "items"
    ],
    "raw_features": [
      "properties",
      "required",
      "type",
      "type:[]",
      "type:array",
      "type:null",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "description": "ResourceRule is the list of actions the subject is allowed to perform on resources. The list ordering isn't significant, may contain duplicates, and possibly be incomplete.",
    "properties": {
      "apiGroups": {
        "description": "APIGroups is the name of the APIGroup that contains the resources.  If multiple API groups are specified, any action requested against one of the enumerated resources in any API group will be allowed.  \"*\" means all.",
        "items": {
          "type": [
            "string",
            "null"
          ]
        },
        "type": [
          "array",
          "null"
        ]
      },
      "resourceNames": {
        "description": "ResourceNames is an optional white list of names that the rule applies to.  An empty set means that everything is allowed.  \"*\" means all.",
        "items": {
          "type": [
            "string",
            "null"
          ]
        },
        "type": [
          "array",
          "null"
        ]
      },
      "resources": {
        "description": "Resources is a list of resources this rule applies to.  \"*\" means all in the specified apiGroups.\n \"*/foo\" represents the subresource 'foo' for all resources in the specified apiGroups.",
        "items": {
          "type": [
            "string",
            "null"
          ]
        },
        "type": [
          "array",
          "null"
        ]
      },
      "verbs": {
        "description": "Verb is a list of kubernetes resource API verbs, like: get, list, watch, create, update, delete, proxy.  \"*\" means all.",
        "items": {
          "type": [
            "string",
            "null"
          ]
        },
        "type": [
          "array",
          "null"
        ]
      }
    },
    "required": [
      "verbs"
    ],
    "type": "object"
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "apiGroups": [
          "apps",
          "*"
        ],
        "resourceNames": [
          "my-deployment",
          "my-service"
        ],
        "resources": [
          "deployments",
          "services",
          "pods"
        ],
        "verbs": [
          "get",
          "list",
          "watch",
          "create",
          "update",
          "delete"
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on type keyword with an array of types",
      "valid": false,
      "rust_error": "123 is not of types \"null\", \"string\"",
      "python_error": "123 is not of type 'string', 'null'\n\nFailed validating 'type' in schema['properties']['apiGroups']['items']:\n    {'type': ['string', 'null']}\n\nOn instance['apiGroups'][1]:\n    123",
      "data": {
        "apiGroups": [
          "apps",
          123
        ],
        "resourceNames": [
          "my-deployment",
          "my-service"
        ],
        "resources": [
          "deployments",
          "services",
          "pods"
        ],
        "verbs": [
          "get",
          "list",
          "watch",
          "create",
          "update",
          "delete"
        ]
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"get\" is not of types \"array\", \"null\"",
      "python_error": "'get' is not of type 'array', 'null'\n\nFailed validating 'type' in schema['properties']['verbs']:\n    {'description': 'Verb is a list of kubernetes resource API verbs, '\n                    'like: get, list, watch, create, update, delete, '\n                    'proxy.  \"*\" means all.',\n     'items': {'type': ['string', 'null']},\n     'type': ['array', 'null']}\n\nOn instance['verbs']:\n    'get'",
      "data": {
        "apiGroups": [
          "apps",
          "*"
        ],
        "resourceNames": [
          "my-deployment",
          "my-service"
        ],
        "resources": [
          "deployments",
          "services",
          "pods"
        ],
        "verbs": "get"
      }
    },
    {
      "description": "llama-70b generated negative; focus on type keyword with an array of types",
      "valid": false,
      "rust_error": "123 is not of types \"null\", \"string\"",
      "python_error": "123 is not of type 'string', 'null'\n\nFailed validating 'type' in schema['properties']['apiGroups']['items']:\n    {'type': ['string', 'null']}\n\nOn instance['apiGroups'][2]:\n    123",
      "data": {
        "apiGroups": [
          "apps",
          "*",
          123
        ],
        "resourceNames": [
          "my-deployment",
          "my-service"
        ],
        "resources": [
          "deployments",
          "services",
          "pods"
        ],
        "verbs": [
          "get",
          "list",
          "watch",
          "create",
          "update",
          "delete"
        ]
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "apiGroups": [
          "*"
        ],
        "resourceNames": [
          "my-resource-1",
          "my-resource-2"
        ],
        "resources": [
          "pods",
          "services"
        ],
        "verbs": [
          "get",
          "list",
          "watch",
          "create",
          "update",
          "delete"
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on type keyword with an array of types",
      "valid": false,
      "rust_error": "123 is not of types \"null\", \"string\"",
      "python_error": "123 is not of type 'string', 'null'\n\nFailed validating 'type' in schema['properties']['apiGroups']['items']:\n    {'type': ['string', 'null']}\n\nOn instance['apiGroups'][0]:\n    123",
      "data": {
        "apiGroups": [
          123
        ],
        "resourceNames": [
          "my-resource-1",
          "my-resource-2"
        ],
        "resources": [
          "pods",
          "services"
        ],
        "verbs": [
          "get",
          "list",
          "watch",
          "create",
          "update",
          "delete"
        ]
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "123 is not of types \"null\", \"string\"",
      "python_error": "123 is not of type 'string', 'null'\n\nFailed validating 'type' in schema['properties']['verbs']['items']:\n    {'type': ['string', 'null']}\n\nOn instance['verbs'][6]:\n    123",
      "data": {
        "apiGroups": [
          "*"
        ],
        "resourceNames": [
          "my-resource-1",
          "my-resource-2"
        ],
        "resources": [
          "pods",
          "services"
        ],
        "verbs": [
          "get",
          "list",
          "watch",
          "create",
          "update",
          "delete",
          123
        ]
      }
    }
  ]
}