{
  "description": "sample Github_hard/o59215.json",
  "meta": {
    "full_size": 2954,
    "stripped_size": 2828,
    "features": [
      "enum",
      "items",
      "pattern"
    ],
    "raw_features": [
      "$schema",
      "properties",
      "required",
      "type",
      "type:array",
      "type:boolean",
      "type:integer",
      "type:number",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "properties": {
      "jobs": {
        "items": {
          "properties": {
            "authorEmail": {
              "type": "string"
            },
            "authorName": {
              "type": "string"
            },
            "authorUrl": {
              "type": "string"
            },
            "cpus": {
              "type": "number"
            },
            "description": {
              "type": "string"
            },
            "errorMapping": {
              "items": {
                "properties": {
                  "category": {
                    "default": "algorithm",
                    "enum": [
                      "algorithm",
                      "data",
                      "system"
                    ],
                    "type": "string"
                  },
                  "code": {
                    "type": "integer"
                  },
                  "description": {
                    "type": "string"
                  },
                  "title": {
                    "type": "string"
                  }
                },
                "required": [
                  "code",
                  "title"
                ],
                "type": "object"
              },
              "type": "array"
            },
            "interface": {
              "properties": {
                "args": {
                  "type": "string"
                },
                "cmd": {
                  "type": "string"
                },
                "envVars": {
                  "items": {
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "value": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "name",
                      "value"
                    ],
                    "type": "object"
                  },
                  "type": "object"
                },
                "inputData": {
                  "properties": {
                    "files": {
                      "items": {
                        "properties": {
                          "mediaType": {
                            "items": {
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "name": {
                            "type": "string"
                          },
                          "required": {
                            "default": true,
                            "type": "boolean"
                          }
                        },
                        "required": [
                          "name",
                          "mediaType"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "json": {
                      "items": {
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "required": {
                            "default": true,
                            "type": "boolean"
                          },
                          "type": {
                            "enum": [
                              "array",
                              "boolean",
                              "integer",
                              "number",
                              "object",
                              "string"
                            ],
                            "type": "string"
                          }
                        },
                        "required": [
                          "name",
                          "type"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                },
                "outputData": {
                  "properties": {
                    "files": {
                      "items": {
                        "properties": {
                          "count": {
                            "default": "1",
                            "pattern": "([0-9]+|\\*)",
                            "type": "string"
                          },
                          "mediaType": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "pattern": {
                            "type": "string"
                          },
                          "required": {
                            "default": true,
                            "type": "boolean"
                          }
                        },
                        "required": [
                          "name",
                          "mediaType",
                          "pattern"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "json": {
                      "items": {
                        "properties": {
                          "key": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "required": {
                            "default": true,
                            "type": "boolean"
                          },
                          "type": {
                            "enum": [
                              "array",
                              "boolean",
                              "integer",
                              "number",
                              "object",
                              "string"
                            ],
                            "type": "string"
                          }
                        },
                        "required": [
                          "name",
                          "type"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                },
                "settings": {
                  "items": {
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "secret": {
                        "default": false,
                        "type": "boolean"
                      }
                    },
                    "required": [
                      "name"
                    ],
                    "type": "object"
                  },
                  "type": "object"
                }
              },
              "required": [
                "cmd"
              ],
              "type": "object"
            },
            "mem": {
              "type": "number"
            },
            "name": {
              "pattern": "[a-z0-9_-]+",
              "type": "string"
            },
            "storage": {
              "default": 0.0,
              "type": "number"
            },
            "tag": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "timeout": {
              "type": "integer"
            },
            "title": {
              "type": "string"
            },
            "version": {
              "pattern": "(0|[1-9][0-9]*)\\.(0|[1-9][0-9]*)\\.(0|[1-9][0-9]*)(-(0|[1-9][0-9]*|[0-9]*[a-zA-Z-][0-9a-zA-Z-]*)(\\.(0|[1-9][0-9]*|[0-9]*[a-zA-Z-][0-9a-zA-Z-]*))*)?(\\+[0-9a-zA-Z-]+(\\.[0-9a-zA-Z-]+)*)?",
              "type": "string"
            }
          },
          "required": [
            "name",
            "version",
            "title",
            "description",
            "authorName",
            "timeout",
            "cpus",
            "mem",
            "interface"
          ],
          "type": "object"
        },
        "type": "array"
      },
      "manifestVersion": {
        "pattern": "(0|[1-9][0-9]*)\\.(0|[1-9][0-9]*)\\.(0|[1-9][0-9]*)(-(0|[1-9][0-9]*|[0-9]*[a-zA-Z-][0-9a-zA-Z-]*)(\\.(0|[1-9][0-9]*|[0-9]*[a-zA-Z-][0-9a-zA-Z-]*))*)?(\\+[0-9a-zA-Z-]+(\\.[0-9a-zA-Z-]+)*)?",
        "type": "string"
      }
    },
    "required": [
      "manifestVersion",
      "jobs"
    ],
    "type": "object"
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "jobs": [
          {
            "authorEmail": "author@example.com",
            "authorName": "John Doe",
            "authorUrl": "https://example.com",
            "cpus": 1,
            "description": "This is a job",
            "errorMapping": [
              {
                "category": "algorithm",
                "code": 1,
                "description": "Error description",
                "title": "Error title"
              }
            ],
            "interface": {
              "args": "",
              "cmd": "echo Hello World!",
              "envVars": {
                "items": [
                  {
                    "name": "VARIABLE",
                    "value": "value"
                  }
                ]
              },
              "inputData": {
                "files": [
                  {
                    "mediaType": [
                      "text/plain"
                    ],
                    "name": "input.txt",
                    "required": true
                  }
                ],
                "json": [
                  {
                    "name": "input",
                    "required": true,
                    "type": "object"
                  }
                ]
              },
              "outputData": {
                "files": [
                  {
                    "count": "1",
                    "mediaType": "text/plain",
                    "name": "output.txt",
                    "pattern": "output.*\\.txt",
                    "required": true
                  }
                ],
                "json": [
                  {
                    "key": "output",
                    "name": "output",
                    "required": true,
                    "type": "object"
                  }
                ]
              },
              "settings": {
                "items": [
                  {
                    "name": "SETTING",
                    "secret": false
                  }
                ]
              }
            },
            "mem": 1024,
            "name": "job-name",
            "storage": 0.0,
            "tag": [
              "tag1",
              "tag2"
            ],
            "timeout": 3600,
            "title": "Job Title",
            "version": "1.0.0"
          }
        ],
        "manifestVersion": "1.0.0"
      }
    },
    {
      "description": "llama-70b generated negative; focus on pattern keyword",
      "valid": false,
      "rust_error": "\"abc\" does not match \"([0-9]+|\\*)\"",
      "python_error": "'abc' does not match '([0-9]+|\\\\*)'\n\nFailed validating 'pattern' in schema['properties']['jobs']['items']['properties']['interface']['properties']['outputData']['properties']['files']['items']['properties']['count']:\n    {'default': '1', 'pattern': '([0-9]+|\\\\*)', 'type': 'string'}\n\nOn instance['jobs'][0]['interface']['outputData']['files'][0]['count']:\n    'abc'",
      "data": {
        "jobs": [
          {
            "authorEmail": "author@example.com",
            "authorName": "John Doe",
            "authorUrl": "https://example.com",
            "cpus": 1,
            "description": "This is a job",
            "errorMapping": [
              {
                "category": "algorithm",
                "code": 1,
                "description": "Error description",
                "title": "Error title"
              }
            ],
            "interface": {
              "args": "",
              "cmd": "echo Hello World!",
              "envVars": {
                "items": [
                  {
                    "name": "VARIABLE",
                    "value": "value"
                  }
                ]
              },
              "inputData": {
                "files": [
                  {
                    "mediaType": [
                      "text/plain"
                    ],
                    "name": "input.txt",
                    "required": true
                  }
                ],
                "json": [
                  {
                    "name": "input",
                    "required": true,
                    "type": "object"
                  }
                ]
              },
              "outputData": {
                "files": [
                  {
                    "count": "abc",
                    "mediaType": "text/plain",
                    "name": "output.txt",
                    "pattern": "output.*\\.txt",
                    "required": true
                  }
                ],
                "json": [
                  {
                    "key": "output",
                    "name": "output",
                    "required": true,
                    "type": "object"
                  }
                ]
              },
              "settings": {
                "items": [
                  {
                    "name": "SETTING",
                    "secret": false
                  }
                ]
              }
            },
            "mem": 1024,
            "name": "Job-Name",
            "storage": 0.0,
            "tag": [
              "tag1",
              "tag2"
            ],
            "timeout": 3600,
            "title": "Job Title",
            "version": "1.0.0-abc"
          }
        ],
        "manifestVersion": "1.0.0-abc"
      }
    },
    {
      "description": "llama-70b generated negative; focus on pattern keyword",
      "valid": false,
      "rust_error": "\"1.0\" does not match \"(0|[1-9][0-9]*)\\.(0|[1-9][0-9]*)\\.(0|[1-9][0-9]*)(-(0|[1-9][0-9]*|[0-9]*[a-zA-Z-][0-9a-zA-Z-]*)(\\.(0|[1-9][0-9]*|[0-9]*[a-zA-Z-][0-9a-zA-Z-]*))*)?(\\+[0-9a-zA-Z-]+(\\.[0-9a-zA-Z-]+)*)?\"",
      "python_error": "'1.0' does not match '(0|[1-9][0-9]*)\\\\.(0|[1-9][0-9]*)\\\\.(0|[1-9][0-9]*)(-(0|[1-9][0-9]*|[0-9]*[a-zA-Z-][0-9a-zA-Z-]*)(\\\\.(0|[1-9][0-9]*|[0-9]*[a-zA-Z-][0-9a-zA-Z-]*))*)?(\\\\+[0-9a-zA-Z-]+(\\\\.[0-9a-zA-Z-]+)*)?'\n\nFailed validating 'pattern' in schema['properties']['manifestVersion']:\n    {'pattern': '(0|[1-9][0-9]*)\\\\.(0|[1-9][0-9]*)\\\\.(0|[1-9][0-9]*)(-(0|[1-9][0-9]*|[0-9]*[a-zA-Z-][0-9a-zA-Z-]*)(\\\\.(0|[1-9][0-9]*|[0-9]*[a-zA-Z-][0-9a-zA-Z-]*))*)?(\\\\+[0-9a-zA-Z-]+(\\\\.[0-9a-zA-Z-]+)*)?',\n     'type': 'string'}\n\nOn instance['manifestVersion']:\n    '1.0'",
      "data": {
        "jobs": [
          {
            "authorEmail": "author@example.com",
            "authorName": "John Doe",
            "authorUrl": "https://example.com",
            "cpus": 1,
            "description": "This is a job",
            "errorMapping": [
              {
                "category": "algorithm",
                "code": 1,
                "description": "Error description",
                "title": "Error title"
              }
            ],
            "interface": {
              "args": "",
              "cmd": "echo Hello World!",
              "envVars": {
                "items": [
                  {
                    "name": "VARIABLE",
                    "value": "value"
                  }
                ]
              },
              "inputData": {
                "files": [
                  {
                    "mediaType": [
                      "text/plain"
                    ],
                    "name": "input.txt",
                    "required": true
                  }
                ],
                "json": [
                  {
                    "name": "input",
                    "required": true,
                    "type": "object"
                  }
                ]
              },
              "outputData": {
                "files": [
                  {
                    "count": "1",
                    "mediaType": "text/plain",
                    "name": "output.txt",
                    "pattern": "output.*\\.txt",
                    "required": true
                  }
                ],
                "json": [
                  {
                    "key": "output",
                    "name": "output",
                    "required": true,
                    "type": "object"
                  }
                ]
              },
              "settings": {
                "items": [
                  {
                    "name": "SETTING",
                    "secret": false
                  }
                ]
              }
            },
            "mem": 1024,
            "name": "job-name",
            "storage": 0.0,
            "tag": [
              "tag1",
              "tag2"
            ],
            "timeout": 3600,
            "title": "Job Title",
            "version": "1.0"
          }
        ],
        "manifestVersion": "1.0"
      }
    },
    {
      "description": "llama-70b generated negative; focus on pattern keyword",
      "valid": false,
      "rust_error": "\"a\" does not match \"([0-9]+|\\*)\"",
      "python_error": "'a' does not match '([0-9]+|\\\\*)'\n\nFailed validating 'pattern' in schema['properties']['jobs']['items']['properties']['interface']['properties']['outputData']['properties']['files']['items']['properties']['count']:\n    {'default': '1', 'pattern': '([0-9]+|\\\\*)', 'type': 'string'}\n\nOn instance['jobs'][0]['interface']['outputData']['files'][0]['count']:\n    'a'",
      "data": {
        "jobs": [
          {
            "authorEmail": "author@example.com",
            "authorName": "John Doe",
            "authorUrl": "https://example.com",
            "cpus": 1,
            "description": "This is a job",
            "errorMapping": [
              {
                "category": "algorithm",
                "code": 1,
                "description": "Error description",
                "title": "Error title"
              }
            ],
            "interface": {
              "args": "",
              "cmd": "echo Hello World!",
              "envVars": {
                "items": [
                  {
                    "name": "VARIABLE",
                    "value": "value"
                  }
                ]
              },
              "inputData": {
                "files": [
                  {
                    "mediaType": [
                      "text/plain"
                    ],
                    "name": "input.txt",
                    "required": true
                  }
                ],
                "json": [
                  {
                    "name": "input",
                    "required": true,
                    "type": "object"
                  }
                ]
              },
              "outputData": {
                "files": [
                  {
                    "count": "a",
                    "mediaType": "text/plain",
                    "name": "output.txt",
                    "pattern": "output.*\\.txt",
                    "required": true
                  }
                ],
                "json": [
                  {
                    "key": "output",
                    "name": "output",
                    "required": true,
                    "type": "object"
                  }
                ]
              },
              "settings": {
                "items": [
                  {
                    "name": "SETTING",
                    "secret": false
                  }
                ]
              }
            },
            "mem": 1024,
            "name": "job-name",
            "storage": 0.0,
            "tag": [
              "tag1",
              "tag2"
            ],
            "timeout": 3600,
            "title": "Job Title",
            "version": "1.0.0-abc-123-def"
          }
        ],
        "manifestVersion": "1.0.0-abc-123-def"
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"invalid-type\" is not one of [\"array\",\"boolean\",\"integer\",\"number\",\"object\",\"string\"]",
      "python_error": "'a' does not match '([0-9]+|\\\\*)'\n\nFailed validating 'pattern' in schema['properties']['jobs']['items']['properties']['interface']['properties']['outputData']['properties']['files']['items']['properties']['count']:\n    {'default': '1', 'pattern': '([0-9]+|\\\\*)', 'type': 'string'}\n\nOn instance['jobs'][0]['interface']['outputData']['files'][0]['count']:\n    'a'",
      "data": {
        "jobs": [
          {
            "authorEmail": "author@example.com",
            "authorName": "John Doe",
            "authorUrl": "https://example.com",
            "cpus": 1,
            "description": "This is a job",
            "errorMapping": [
              {
                "category": "algorithm",
                "code": 1,
                "description": "Error description",
                "title": "Error title"
              }
            ],
            "interface": {
              "args": "",
              "cmd": "echo Hello World!",
              "envVars": {
                "items": [
                  {
                    "name": "VARIABLE",
                    "value": null
                  }
                ]
              },
              "inputData": {
                "files": [
                  {
                    "mediaType": [
                      "invalid/mediaType"
                    ],
                    "name": "input.txt",
                    "required": true
                  }
                ],
                "json": [
                  {
                    "name": "input",
                    "required": true,
                    "type": "invalid-type"
                  }
                ]
              },
              "outputData": {
                "files": [
                  {
                    "count": "a",
                    "mediaType": "text/plain",
                    "name": "output.txt",
                    "pattern": "output.*\\.txt",
                    "required": true
                  }
                ],
                "json": [
                  {
                    "key": "",
                    "name": "output",
                    "required": true,
                    "type": "object"
                  }
                ]
              },
              "settings": {
                "items": [
                  {
                    "secret": false
                  }
                ]
              }
            },
            "mem": 1024,
            "name": "Invalid-Name",
            "storage": 0.0,
            "tag": [
              "tag1",
              "tag2"
            ],
            "timeout": 3600,
            "title": "Job Title",
            "version": "1.0.0-alpha.1+build.123"
          }
        ],
        "manifestVersion": "1.0.0-alpha"
      }
    }
  ]
}