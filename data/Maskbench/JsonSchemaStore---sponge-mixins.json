{
  "description": "sample JsonSchemaStore/sponge-mixins.json",
  "meta": {
    "full_size": 3613,
    "stripped_size": 1380,
    "features": [
      "$ref",
      "@minmaxInteger",
      "items",
      "pattern"
    ],
    "raw_features": [
      "$id",
      "$schema",
      "definitions",
      "maximum",
      "minimum",
      "properties",
      "required",
      "type",
      "type:array",
      "type:boolean",
      "type:integer",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$id": "https://json.schemastore.org/sponge-mixins.json",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "definitions": {
      "mixin_class": {
        "type": "string",
        "description": "The dot-separated path to the mixin class relative to the specified package. The class must be annotated with @Mixin"
      },
      "injector_options": {
        "type": "object",
        "description": "Injection options",
        "properties": {
          "defaultRequire": {
            "type": "integer",
            "minimum": 0,
            "description": "Sets the default minimum of injections that must be successfully applied per injector",
            "default": 0
          },
          "defaultGroup": {
            "type": "string",
            "description": "Sets the default injector group",
            "default": "default"
          },
          "injectionPoints": {
            "type": "array",
            "description": "Registers injection points for this configuration",
            "items": {
              "type": "string"
            }
          },
          "maxShiftBy": {
            "type": "integer",
            "minimum": 0,
            "maximum": 5,
            "default": 5,
            "description": "Sets the maximum allowed number of opcodes that can be shifted in @At annotations. This is hard capped at 5"
          }
        }
      },
      "overwrite_options": {
        "type": "object",
        "description": "Overwrite options",
        "properties": {
          "conformVisibility": {
            "type": "boolean",
            "description": "Sets whether the visibility of overwritten methods should be conformed to the target class"
          },
          "requireAnnotations": {
            "type": "boolean",
            "default": true,
            "description": "Sets whether overwriting methods must explicitly be declared through @Overwrite annotations"
          }
        }
      }
    },
    "properties": {
      "parent": {
        "type": "string",
        "description": "The name of a parent configuration that options get inherited from"
      },
      "target": {
        "type": "string",
        "description": "Target selector. Either the specifies the phase directly or use \"@env(PHASE)\" separated by '&', '\\', or ' '"
      },
      "minVersion": {
        "type": "string",
        "pattern": "^(\\d{1,5})(?:\\.(\\d{1,5})(?:\\.(\\d{1,5})(?:\\.(\\d{1,5}))?)?)?(-[a-zA-Z0-9_\\-]+)?$",
        "description": "Minimum version of the mixin subsystem required for this configuration"
      },
      "compatibilityLevel": {
        "type": "string",
        "description": "Minimum compatibility level required for mixins in this set"
      },
      "required": {
        "type": "boolean",
        "description": "Determines whether mixin failures in this configuration are considered terminal and stop the game"
      },
      "priority": {
        "type": "integer",
        "description": "The priority of this configuration. Will be inherited if smaller than 0",
        "default": -1
      },
      "mixinPriority": {
        "type": "integer",
        "description": "Default mixin priority for this configuration. Will be inherited if smaller than 0",
        "default": -1
      },
      "package": {
        "type": "string",
        "description": "The target package where the mixin classes reside"
      },
      "mixins": {
        "type": "array",
        "description": "Mixin classes to load in all environments. Class names get prepended with the specified package",
        "items": {
          "$ref": "#/definitions/mixin_class"
        }
      },
      "client": {
        "type": "array",
        "description": "Mixin classes to load ONLY on client. Class names get prepended with the specified package",
        "items": {
          "$ref": "#/definitions/mixin_class"
        }
      },
      "server": {
        "type": "array",
        "description": "Mixin classes to load ONLY on server. Class names get prepended with the specified package",
        "items": {
          "$ref": "#/definitions/mixin_class"
        }
      },
      "setSourceFile": {
        "type": "boolean",
        "description": "Sets whether targets' source files will be updated to the mixin source file"
      },
      "refmap": {
        "type": "string",
        "description": "The path to the reference map resource to use for this configuration"
      },
      "verbose": {
        "type": "boolean",
        "description": "Increases log detail level from DEBUG to INFO",
        "default": false
      },
      "plugin": {
        "type": "string",
        "description": "Name of the mixin config plugin to use for this config"
      },
      "injectors": {
        "$ref": "#/definitions/injector_options"
      },
      "overwrites": {
        "$ref": "#/definitions/overwrite_options"
      }
    },
    "required": [
      "package"
    ],
    "type": "object"
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "package": "com.example.mixin",
        "targetSelector": "common",
        "minVersion ": "0.10.0",
        "compatibilityLevel ": "JAVA_8",
        "required ": true,
        "priority ": 1000,
        "mixinPriority ": 1000,
        "mixins ": [
          "MixinClass1",
          "MixinClass2"
        ],
        "client ": [
          "ClientMixinClass1",
          "ClientMixinClass2"
        ],
        "server ": [
          "ServerMixinClass1",
          "ServerMixinClass2"
        ],
        "setSourceFile ": true,
        "refmap ": "mixin-refmap.json",
        "verbose ": true,
        "plugin ": "MixinPlugin",
        "injectors ": {
          "defaultRequire ": 1,
          "defaultGroup ": "default",
          "injectionPoints ": [
            "INVOKE",
            "NEW"
          ],
          "maxShiftBy ": 5
        },
        "overwrites ": {
          "conformVisibility ": true,
          "requireAnnotations ": true
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on pattern keyword",
      "valid": false,
      "rust_error": "\"InvalidVersion\" does not match \"^(\\d{1,5})(?:\\.(\\d{1,5})(?:\\.(\\d{1,5})(?:\\.(\\d{1,5}))?)?)?(-[a-zA-Z0-9_\\-]+)?$\"",
      "python_error": "'InvalidVersion' does not match '^(\\\\d{1,5})(?:\\\\.(\\\\d{1,5})(?:\\\\.(\\\\d{1,5})(?:\\\\.(\\\\d{1,5}))?)?)?(-[a-zA-Z0-9_\\\\-]+)?$'\n\nFailed validating 'pattern' in schema['properties']['minVersion']:\n    {'type': 'string',\n     'pattern': '^(\\\\d{1,5})(?:\\\\.(\\\\d{1,5})(?:\\\\.(\\\\d{1,5})(?:\\\\.(\\\\d{1,5}))?)?)?(-[a-zA-Z0-9_\\\\-]+)?$',\n     'description': 'Minimum version of the mixin subsystem required for '\n                    'this configuration'}\n\nOn instance['minVersion']:\n    'InvalidVersion'",
      "data": {
        "target": "common",
        "minVersion": "InvalidVersion",
        "compatibilityLevel": "JAVA_8",
        "required": true,
        "priority": 1000,
        "mixinPriority": 1000,
        "package": "com.example.mixin",
        "mixins": [
          "MixinClass1",
          "MixinClass2"
        ],
        "client": [
          "ClientMixinClass1",
          "ClientMixinClass2"
        ],
        "server": [
          "ServerMixinClass1",
          "ServerMixinClass2"
        ],
        "setSourceFile": true,
        "refmap": "mixin-refmap.json",
        "verbose": true,
        "plugin": "MixinPlugin",
        "injectors": {
          "defaultRequire": 1,
          "defaultGroup": "default",
          "injectionPoints": [
            "INVOKE",
            "NEW"
          ],
          "maxShiftBy": 5
        },
        "overwrites": {
          "conformVisibility": true,
          "requireAnnotations": true
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on minimum keyword or maximum keyword",
      "valid": false,
      "rust_error": "-1 is less than the minimum of 0",
      "python_error": "6 is greater than the maximum of 5\n\nFailed validating 'maximum' in schema['properties']['injectors']['properties']['maxShiftBy']:\n    {'type': 'integer',\n     'minimum': 0,\n     'maximum': 5,\n     'default': 5,\n     'description': 'Sets the maximum allowed number of opcodes that can '\n                    'be shifted in @At annotations. This is hard capped at '\n                    '5'}\n\nOn instance['injectors']['maxShiftBy']:\n    6",
      "data": {
        "package": "com.example.mixin",
        "target": "common",
        "minVersion": "0.10.0",
        "compatibilityLevel": "JAVA_8",
        "required": true,
        "priority": 1000,
        "mixinPriority": 1000,
        "mixins": [
          "MixinClass1",
          "MixinClass2"
        ],
        "client": [
          "ClientMixinClass1",
          "ClientMixinClass2"
        ],
        "server": [
          "ServerMixinClass1",
          "ServerMixinClass2"
        ],
        "setSourceFile": true,
        "refmap": "mixin-refmap.json",
        "verbose": true,
        "plugin": "MixinPlugin",
        "injectors": {
          "defaultRequire": -1,
          "defaultGroup": "default",
          "injectionPoints": [
            "INVOKE",
            "NEW"
          ],
          "maxShiftBy": 6
        },
        "overwrites": {
          "conformVisibility": true,
          "requireAnnotations": true
        }
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "-1 is less than the minimum of 0",
      "python_error": "6 is greater than the maximum of 5\n\nFailed validating 'maximum' in schema['properties']['injectors']['properties']['maxShiftBy']:\n    {'type': 'integer',\n     'minimum': 0,\n     'maximum': 5,\n     'default': 5,\n     'description': 'Sets the maximum allowed number of opcodes that can '\n                    'be shifted in @At annotations. This is hard capped at '\n                    '5'}\n\nOn instance['injectors']['maxShiftBy']:\n    6",
      "data": {
        "package": "com.example.mixin",
        "target": "common",
        "minVersion": "0.10.0",
        "compatibilityLevel": "JAVA_8",
        "required": true,
        "priority": 1000,
        "mixinPriority": 1000,
        "mixins": [
          "MixinClass1",
          "MixinClass2"
        ],
        "client": [
          "ClientMixinClass1",
          "ClientMixinClass2"
        ],
        "server": [
          "ServerMixinClass1",
          "ServerMixinClass2"
        ],
        "setSourceFile": true,
        "refmap": "mixin-refmap.json",
        "verbose": true,
        "plugin": "MixinPlugin",
        "injectors": {
          "defaultRequire": -1,
          "Invalid: defaultRequire should be greater than or equal to 0": "defaultGroup",
          "injectionPoints": [
            "INVOKE",
            "NEW"
          ],
          "maxShiftBy": 6,
          "Invalid: maxShiftBy should be less than or equal to 5": "overwrites"
        }
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "-1 is less than the minimum of 0",
      "python_error": "6 is greater than the maximum of 5\n\nFailed validating 'maximum' in schema['properties']['injectors']['properties']['maxShiftBy']:\n    {'type': 'integer',\n     'minimum': 0,\n     'maximum': 5,\n     'default': 5,\n     'description': 'Sets the maximum allowed number of opcodes that can '\n                    'be shifted in @At annotations. This is hard capped at '\n                    '5'}\n\nOn instance['injectors']['maxShiftBy']:\n    6",
      "data": {
        "package": "com.example.mixin",
        "target": "common",
        "minVersion": "0.10.0",
        "compatibilityLevel": "JAVA_8",
        "required": true,
        "priority": 1000,
        "mixinPriority": 1000,
        "mixins": [
          "MixinClass1",
          "MixinClass2"
        ],
        "client": [
          "ClientMixinClass1",
          "ClientMixinClass2"
        ],
        "server": [
          "ServerMixinClass1",
          "ServerMixinClass2"
        ],
        "setSourceFile": true,
        "refmap": "mixin-refmap.json",
        "verbose": true,
        "plugin": "MixinPlugin",
        "injectors": {
          "defaultRequire": -1,
          "-- Changed to -1 to violate the minimum constraint of 0": "defaultGroup",
          "injectionPoints": [
            "INVOKE",
            "NEW"
          ],
          "maxShiftBy": 6
        },
        "Changed to 6 to violate the maximum constraint of 5": "overwrites",
        "conformVisibility": true,
        "requireAnnotations": true,
        "extraProperty": "extraValue"
      }
    },
    {
      "description": "llama-70b generated negative; focus on pattern keyword",
      "valid": false,
      "rust_error": "\"0.10.0.0.0\" does not match \"^(\\d{1,5})(?:\\.(\\d{1,5})(?:\\.(\\d{1,5})(?:\\.(\\d{1,5}))?)?)?(-[a-zA-Z0-9_\\-]+)?$\"",
      "python_error": "'0.10.0.0.0' does not match '^(\\\\d{1,5})(?:\\\\.(\\\\d{1,5})(?:\\\\.(\\\\d{1,5})(?:\\\\.(\\\\d{1,5}))?)?)?(-[a-zA-Z0-9_\\\\-]+)?$'\n\nFailed validating 'pattern' in schema['properties']['minVersion']:\n    {'type': 'string',\n     'pattern': '^(\\\\d{1,5})(?:\\\\.(\\\\d{1,5})(?:\\\\.(\\\\d{1,5})(?:\\\\.(\\\\d{1,5}))?)?)?(-[a-zA-Z0-9_\\\\-]+)?$',\n     'description': 'Minimum version of the mixin subsystem required for '\n                    'this configuration'}\n\nOn instance['minVersion']:\n    '0.10.0.0.0'",
      "data": {
        "target": "common",
        "minVersion": "0.10.0.0.0",
        "compatibilityLevel": "JAVA_8",
        "required": true,
        "priority": 1000,
        "mixinPriority": 1000,
        "package": "com.example.mixin",
        "mixins": [
          "MixinClass1",
          "MixinClass2"
        ],
        "client": [
          "ClientMixinClass1",
          "ClientMixinClass2"
        ],
        "server": [
          "ServerMixinClass1",
          "ServerMixinClass2"
        ],
        "setSourceFile": true,
        "refmap": "mixin-refmap.json",
        "verbose": true,
        "plugin": "MixinPlugin",
        "injectors": {
          "defaultRequire": 1,
          "defaultGroup": "default",
          "injectionPoints": [
            "INVOKE",
            "NEW"
          ],
          "maxShiftBy": 5
        },
        "overwrites": {
          "conformVisibility": true,
          "requireAnnotations": true
        }
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "target": "common",
        "minVersion": "0.10.0",
        "compatibilityLevel": "JAVA_8",
        "required": true,
        "priority": 1000,
        "mixinPriority": 1000,
        "package": "com.example.mixin",
        "mixins": [
          "MixinClass1",
          "MixinClass2"
        ],
        "client": [
          "ClientMixinClass1",
          "ClientMixinClass2"
        ],
        "server": [
          "ServerMixinClass1",
          "ServerMixinClass2"
        ],
        "setSourceFile": true,
        "refmap": "mixin-refmap.json",
        "verbose": true,
        "plugin": "MyMixinPlugin",
        "injectors": {
          "defaultRequire": 1,
          "defaultGroup": "my-group",
          "injectionPoints": [
            "INVOKE",
            "NEW"
          ],
          "maxShiftBy": 3
        },
        "overwrites": {
          "conformVisibility": true,
          "requireAnnotations": false
        },
        "$schema": "https://json.schemastore.org/sponge-mixins.json"
      }
    },
    {
      "description": "llama-70b generated negative; focus on minimum keyword or maximum keyword",
      "valid": false,
      "rust_error": "-1 is less than the minimum of 0",
      "python_error": "6 is greater than the maximum of 5\n\nFailed validating 'maximum' in schema['properties']['injectors']['properties']['maxShiftBy']:\n    {'type': 'integer',\n     'minimum': 0,\n     'maximum': 5,\n     'default': 5,\n     'description': 'Sets the maximum allowed number of opcodes that can '\n                    'be shifted in @At annotations. This is hard capped at '\n                    '5'}\n\nOn instance['injectors']['maxShiftBy']:\n    6",
      "data": {
        "$schema": "https://json.schemastore.org/sponge-mixins.json",
        "package": "com.example.mixin",
        "target": "common",
        "minVersion": "0.10.0",
        "compatibilityLevel": "JAVA_8",
        "required": true,
        "priority": 1000,
        "mixinPriority": 1000,
        "mixins": [
          "MixinClass1",
          "MixinClass2"
        ],
        "client": [
          "ClientMixinClass1",
          "ClientMixinClass2"
        ],
        "server": [
          "ServerMixinClass1",
          "ServerMixinClass2"
        ],
        "setSourceFile": true,
        "refmap": "mixin-refmap.json",
        "verbose": true,
        "plugin": "MyMixinPlugin",
        "injectors": {
          "defaultRequire": -1,
          "defaultGroup": "my-group",
          "injectionPoints": [
            "INVOKE",
            "NEW"
          ],
          "maxShiftBy": 6
        },
        "overwrites": {
          "conformVisibility": true,
          "requireAnnotations": false
        }
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "-1 is less than the minimum of 0",
      "python_error": "6 is greater than the maximum of 5\n\nFailed validating 'maximum' in schema['properties']['injectors']['properties']['maxShiftBy']:\n    {'type': 'integer',\n     'minimum': 0,\n     'maximum': 5,\n     'default': 5,\n     'description': 'Sets the maximum allowed number of opcodes that can '\n                    'be shifted in @At annotations. This is hard capped at '\n                    '5'}\n\nOn instance['injectors']['maxShiftBy']:\n    6",
      "data": {
        "$schema": "https://json.schemastore.org/sponge-mixins.json",
        "package": "com.example.mixin",
        "target": "common",
        "minVersion": "0.10",
        "compatibilityLevel": "JAVA_8",
        "required": true,
        "priority": 1000,
        "mixinPriority": 1000,
        "mixins": [
          "MixinClass1",
          "MixinClass2"
        ],
        "client": [
          "ClientMixinClass1",
          "ClientMixinClass2"
        ],
        "server": [
          "ServerMixinClass1",
          "ServerMixinClass2"
        ],
        "setSourceFile": true,
        "refmap": "mixin-refmap.json",
        "verbose": true,
        "plugin": "MyMixinPlugin",
        "injectors": {
          "defaultRequire": -1,
          "<--- changed to -1": "defaultGroup",
          "my-group": "injectionPoints",
          "new": [
            "-INVOKE",
            "<--- changed to -INVOKE",
            "NEW"
          ],
          "maxShiftBy": 6,
          "<--- changed to 6": "overwrites",
          "conformVisibility": true,
          "requireAnnotations": false
        }
      }
    }
  ]
}