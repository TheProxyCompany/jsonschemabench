{
  "description": "sample Github_hard/o36573.json",
  "meta": {
    "full_size": 3131,
    "stripped_size": 2711,
    "features": [
      "$ref",
      "@minmaxItems",
      "additionalProperties",
      "anyOf",
      "enum",
      "items"
    ],
    "raw_features": [
      "$schema",
      "_boolSchema",
      "definitions",
      "minItems",
      "properties",
      "required",
      "type",
      "type:array",
      "type:boolean",
      "type:integer",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "title": "Multi code model generator",
    "description": "The scheme describes the data models and methods structure for the generation of a uniform code using various programming languages",
    "$schema": "http://json-schema.org/draft-04/schema#",
    "type": "object",
    "additionalProperties": false,
    "definitions": {
      "simpleTypes": {
        "enum": [
          "boolean",
          "integer",
          "integer64",
          "float",
          "string",
          "any"
        ]
      },
      "stringOrArr": {
        "anyOf": [
          {
            "type": "string"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ]
      },
      "attrType": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "^.+$": {
              "$ref": "#/definitions/stringOrArr"
            }
          },
          "required": [
            "id"
          ]
        }
      },
      "typeBoth": {
        "anyOf": [
          {
            "$ref": "#/definitions/simpleTypes"
          },
          {
            "type": "string"
          }
        ]
      }
    },
    "properties": {
      "$schema": {
        "type": "string"
      },
      "imports": {
        "type": "array",
        "description": "The physical path to the other module types for use. Example: ../data/time.json",
        "items": {
          "type": "object",
          "properties": {
            "file": {
              "type": "string"
            },
            "type": {
              "type": "string"
            }
          },
          "required": [
            "file",
            "type"
          ]
        },
        "minItems": 1,
        "_uniqueItems": true,
        "messages": {
          "_uniqueItems": "Error unique imports"
        }
      },
      "consts": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "items": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "type": {
                    "$ref": "#/definitions/simpleTypes"
                  },
                  "value": {}
                }
              },
              "required": [
                "name",
                "type",
                "value"
              ],
              "minItems": 1
            }
          }
        },
        "required": [
          "name",
          "items"
        ]
      },
      "enums": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "items": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "value": {
                    "type": "integer"
                  }
                }
              },
              "required": [
                "name"
              ],
              "minItems": 1
            }
          }
        },
        "required": [
          "name",
          "items"
        ]
      },
      "models": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "attrs": {
              "$ref": "#/definitions/attrType"
            },
            "name": {
              "type": "string"
            },
            "basetype": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "items": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "attrs": {
                    "$ref": "#/definitions/attrType"
                  },
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "type": {
                    "$ref": "#/definitions/typeBoth"
                  },
                  "array": {
                    "type": "boolean"
                  },
                  "required": {
                    "type": "boolean",
                    "default": true
                  }
                }
              },
              "required": [
                "name",
                "type"
              ],
              "minItems": 1
            }
          }
        },
        "required": [
          "name",
          "items"
        ]
      },
      "contracts": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "basetype": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "methods": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "args": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "type": {
                          "$ref": "#/definitions/typeBoth"
                        },
                        "array": {
                          "type": "boolean"
                        },
                        "arrayparams": {
                          "type": "boolean",
                          "description": "Rest Parameters. ts: func(...data[])"
                        }
                      }
                    },
                    "required": [
                      "name",
                      "type"
                    ],
                    "minItems": 1
                  },
                  "result": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "$ref": "#/definitions/typeBoth"
                      },
                      "array": {
                        "type": "boolean"
                      },
                      "description": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "type"
                    ]
                  }
                },
                "required": [
                  "name"
                ],
                "minItems": 1
              }
            }
          },
          "required": [
            "name"
          ]
        }
      }
    }
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "imports": [
          {
            "file": "../data/time.json",
            "type": "module"
          }
        ],
        "consts": [
          {
            "name": "Const1",
            "description": "This is a constant",
            "items": [
              {
                "name": "ConstItem1",
                "description": "This is a constant item",
                "type": "integer",
                "value": 10
              }
            ]
          }
        ],
        "enums": [
          {
            "name": "Enum1",
            "description": "This is an enum",
            "items": [
              {
                "name": "EnumItem1",
                "description": "This is an enum item",
                "value": 1
              },
              {
                "name": "EnumItem2",
                "description": "This is another enum item",
                "value": 2
              }
            ]
          }
        ],
        "models": [
          {
            "name": "Model1",
            "description": "This is a model",
            "basetype ": "object",
            "attrs ": [
              {
                "id": "attr1",
                "type": "string"
              }
            ],
            "items ": [
              {
                "name": "Item1",
                "description": "This is an item",
                "type": "integer",
                "array": false,
                "required": true
              }
            ]
          }
        ],
        "contracts": [
          {
            "name": "Contract1",
            "description": "This is a contract",
            "basetype ": "object",
            "methods ": [
              {
                "name": "Method1",
                "description": "This is a method",
                "args ": [
                  {
                    "name": "Arg1",
                    "description": "This is an argument",
                    "type": "string",
                    "array": false,
                    "arrayparams": false
                  }
                ],
                "result ": {
                  "type": "integer",
                  "array": false,
                  "description": "This is the result"
                }
              }
            ]
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on anyOf keyword",
      "valid": false,
      "rust_error": "123 is not valid under any of the schemas listed in the 'anyOf' keyword",
      "python_error": "123 is not valid under any of the given schemas\n\nFailed validating 'anyOf' in schema['properties']['contracts']['items']['properties']['methods']['items']['properties']['args']['items']['properties']['type']:\n    {'anyOf': [{'$ref': '#/definitions/simpleTypes'}, {'type': 'string'}]}\n\nOn instance['contracts'][0]['methods'][0]['args'][0]['type']:\n    123",
      "data": {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "imports": [
          {
            "file": "../data/time.json",
            "type": "module"
          }
        ],
        "consts": [
          {
            "name": "Const1",
            "description": "This is a constant",
            "items": [
              {
                "name": "ConstItem1",
                "description": "This is a constant item",
                "type": "integer",
                "value": 10
              }
            ]
          }
        ],
        "enums": [
          {
            "name": "Enum1",
            "description": "This is an enum",
            "items": [
              {
                "name": "EnumItem1",
                "description": "This is an enum item",
                "value": 1
              },
              {
                "name": "EnumItem2",
                "description": "This is another enum item",
                "value": 2
              }
            ]
          }
        ],
        "models": [
          {
            "attrs": [
              {
                "id": "attr1",
                "type": 123
              }
            ],
            "name": "Model1",
            "basetype": "object",
            "description": "This is a model",
            "items": [
              {
                "name": "Item1",
                "description": "This is an item",
                "type": "integer",
                "array": false,
                "required": true
              }
            ]
          }
        ],
        "contracts": [
          {
            "name": "Contract1",
            "description": "This is a contract",
            "basetype": "object",
            "methods": [
              {
                "name": "Method1",
                "description": "This is a method",
                "args": [
                  {
                    "name": "Arg1",
                    "description": "This is an argument",
                    "type": 123,
                    "array": false,
                    "arrayparams": false
                  }
                ],
                "result": {
                  "type": "integer",
                  "array": false,
                  "description": "This is the result"
                }
              }
            ]
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on minItems keyword",
      "valid": false,
      "rust_error": "[] has less than 1 item",
      "python_error": "[] should be non-empty\n\nFailed validating 'minItems' in schema['properties']['imports']:\n    {'type': 'array',\n     'description': 'The physical path to the other module types for use. '\n                    'Example: ../data/time.json',\n     'items': {'type': 'object',\n               'properties': {'file': {'type': 'string'},\n                              'type': {'type': 'string'}},\n               'required': ['file', 'type']},\n     'minItems': 1,\n     '_uniqueItems': True,\n     'messages': {'_uniqueItems': 'Error unique imports'}}\n\nOn instance['imports']:\n    []",
      "data": {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "imports": [],
        "consts": [
          {
            "name": "Const1",
            "description": "This is a constant",
            "items": []
          }
        ],
        "enums": [
          {
            "name": "Enum1",
            "description": "This is an enum",
            "items": []
          }
        ],
        "models": [
          {
            "name": "Model1",
            "description": "This is a model",
            "basetype ": "object",
            "attrs ": [
              {
                "id": "attr1",
                "type": "string"
              }
            ],
            "items ": []
          }
        ],
        "contracts": [
          {
            "name": "Contract1",
            "description": "This is a contract",
            "basetype ": "object",
            "methods ": [
              {
                "name": "Method1",
                "description": "This is a method",
                "args ": [],
                "result ": {
                  "type": "integer",
                  "array": false,
                  "description": "This is the result"
                }
              }
            ]
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on minItems keyword",
      "valid": false,
      "rust_error": "[] has less than 1 item",
      "python_error": "[] should be non-empty\n\nFailed validating 'minItems' in schema['properties']['models']['items']['properties']['items']:\n    {'type': 'array',\n     'items': {'type': 'object',\n               'properties': {'attrs': {'$ref': '#/definitions/attrType'},\n                              'name': {'type': 'string'},\n                              'description': {'type': 'string'},\n                              'type': {'$ref': '#/definitions/typeBoth'},\n                              'array': {'type': 'boolean'},\n                              'required': {'type': 'boolean',\n                                           'default': True}}},\n     'required': ['name', 'type'],\n     'minItems': 1}\n\nOn instance['models'][0]['items']:\n    []",
      "data": {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "imports": [
          {
            "file": "../data/time.json",
            "type": "module"
          }
        ],
        "consts": [
          {
            "name": "Const1",
            "description": "This is a constant",
            "items": []
          }
        ],
        "enums": [
          {
            "name": "Enum1",
            "description": "This is an enum",
            "items": []
          }
        ],
        "models": [
          {
            "attrs": [
              {
                "id": "attr1",
                "type": "string"
              }
            ],
            "name": "Model1",
            "basetype": "object",
            "description": "This is a model",
            "items": []
          }
        ],
        "contracts": [
          {
            "name": "Contract1",
            "basetype": "object",
            "description": "This is a contract",
            "methods": [
              {
                "name": "Method1",
                "description": "This is a method",
                "args": [],
                "result": {
                  "type": "integer",
                  "array": false,
                  "description": "This is the result"
                }
              }
            ]
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"one\" is not of type \"integer\"",
      "python_error": "'one' is not of type 'integer'\n\nFailed validating 'type' in schema['properties']['enums']['items']['properties']['items']['items']['properties']['value']:\n    {'type': 'integer'}\n\nOn instance['enums'][0]['items'][0]['value']:\n    'one'",
      "data": {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "imports": [
          {
            "file": "../data/time.json",
            "type": "module"
          },
          {
            "file": "../data/time.json",
            "type": "module"
          }
        ],
        "consts": [
          {
            "name": "Const1",
            "description": "This is a constant",
            "items": [
              {
                "name": "ConstItem1",
                "description": "This is a constant item",
                "type": "integer",
                "value": "ten"
              }
            ]
          }
        ],
        "enums": [
          {
            "name": "Enum1",
            "description": "This is an enum",
            "items": [
              {
                "name": "EnumItem1",
                "description": "This is an enum item",
                "value": "one"
              },
              {
                "name": "EnumItem2",
                "description": "This is another enum item",
                "value": 2
              }
            ]
          }
        ],
        "models": [
          {
            "name": "Model1",
            "description": "This is a model",
            "basetype": "object",
            "attrs": [
              {
                "id": "attr1",
                "type": "string"
              }
            ],
            "items": [
              {
                "name": "Item1",
                "description": "This is an item",
                "type": "integer",
                "array": false,
                "required": true
              },
              {
                "name": "Item1",
                "description": "This is another item",
                "type": "integer",
                "array": false,
                "required": true
              }
            ]
          }
        ],
        "contracts": [
          {
            "name": "Contract1",
            "description": "This is a contract",
            "basetype": "object",
            "methods": [
              {
                "name": "Method1",
                "description": "This is a method",
                "args": [
                  {
                    "name": "Arg1",
                    "description": "This is an argument",
                    "type": "string",
                    "array": false,
                    "arrayparams": false
                  }
                ],
                "result": {
                  "type": "integer",
                  "array": false,
                  "description": "This is the result"
                }
              },
              {
                "name": "Method1",
                "description": "This is another method",
                "args": [
                  {
                    "name": "Arg1",
                    "description": "This is an argument",
                    "type": "string",
                    "array": false,
                    "arrayparams": false
                  }
                ],
                "result": {
                  "type": "integer",
                  "array": false,
                  "description": "This is the result"
                }
              }
            ]
          }
        ]
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "imports": [
          {
            "file": "../data/time.json",
            "type": "module"
          }
        ],
        "consts": [
          {
            "name": "Const1",
            "description": "Description for Const1",
            "items": [
              {
                "name": "Const1Item1",
                "description": "Description for Const1Item1",
                "type": "integer",
                "value": 10
              },
              {
                "name": "Const1Item2",
                "description": "Description for Const1Item2",
                "type": "string",
                "value": "Hello"
              }
            ]
          }
        ],
        "enums": [
          {
            "name": "Enum1",
            "description": "Description for Enum1",
            "items": [
              {
                "name": "Enum1Item1",
                "description": "Description for Enum1Item1",
                "value": 1
              },
              {
                "name": "Enum1Item2",
                "description": "Description for Enum1Item2",
                "value": 2
              }
            ]
          }
        ],
        "models": [
          {
            "attrs": [
              {
                "id": "attr1",
                "type": "string"
              },
              {
                "id": "attr2",
                "type": "integer"
              }
            ],
            "name": "Model1",
            "basetype": "object",
            "description": "Description for Model1",
            "items": [
              {
                "name": "Model1Item1",
                "description": "Description for Model1Item1",
                "type": "integer",
                "array": false,
                "required": true
              },
              {
                "name": "Model1Item2",
                "description": "Description for Model1Item2",
                "type": "string",
                "array": true,
                "required": false
              }
            ]
          }
        ],
        "contracts": [
          {
            "name": "Contract1",
            "basetype": "object",
            "description": "Description for Contract1",
            "methods": [
              {
                "name": "Method1",
                "description": "Description for Method1",
                "args": [
                  {
                    "name": "arg1",
                    "description": "Description for arg1",
                    "type": "integer",
                    "array": false,
                    "arrayparams": false
                  },
                  {
                    "name": "arg2",
                    "description": "Description for arg2",
                    "type": "string",
                    "array": true,
                    "arrayparams": true
                  }
                ],
                "result": {
                  "type": "integer",
                  "array": false,
                  "description": "Description for result"
                }
              }
            ]
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"invalidImport\" is not of type \"object\"",
      "python_error": "'invalidImport' is not of type 'object'\n\nFailed validating 'type' in schema['properties']['imports']['items']:\n    {'type': 'object',\n     'properties': {'file': {'type': 'string'}, 'type': {'type': 'string'}},\n     'required': ['file', 'type']}\n\nOn instance['imports'][2]:\n    'invalidImport'",
      "data": {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "imports": [
          {
            "file": "../data/time.json",
            "type": "module"
          },
          {
            "file": "../data/time.json",
            "type": "module"
          },
          "invalidImport"
        ],
        "consts": [
          {
            "name": "Const1",
            "description": "Description for Const1",
            "items": [
              {
                "name": "Const1Item1",
                "description": "Description for Const1Item1",
                "type": "integer",
                "value": "not an integer"
              },
              {
                "name": "Const1Item2",
                "description": "Description for Const1Item2",
                "type": "string",
                "value": "Hello"
              }
            ]
          }
        ],
        "enums": [
          {
            "name": "Enum1",
            "description": "Description for Enum1",
            "items": [
              {
                "name": "Enum1Item1",
                "description": "Description for Enum1Item1",
                "value": "not an integer"
              },
              {
                "name": "Enum1Item2",
                "description": "Description for Enum1Item2",
                "value": 2
              }
            ]
          }
        ],
        "models": [
          {
            "name": "Model1",
            "basetype": "object",
            "description": "Description for Model1",
            "attrs": [
              {
                "id": "attr1",
                "type": "invalid type"
              },
              {
                "id": "attr2",
                "type": "integer"
              }
            ],
            "items": [
              {
                "name": "Model1Item1",
                "description": "Description for Model1Item1",
                "type": "integer",
                "array": "not a boolean",
                "required": true
              },
              {
                "name": "Model1Item2",
                "description": "Description for Model1Item2",
                "type": "string",
                "array": true,
                "required": false
              }
            ]
          }
        ],
        "contracts": [
          {
            "name": "Contract1",
            "basetype": "object",
            "description": "Description for Contract1",
            "methods": [
              {
                "name": "Method1",
                "description": "Description for Method1",
                "args": [
                  {
                    "name": "arg1",
                    "description": "Description for arg1",
                    "type": "integer",
                    "array": false,
                    "arrayparams": false
                  },
                  {
                    "name": "arg2",
                    "description": "Description for arg2",
                    "type": "string",
                    "array": "not a boolean",
                    "arrayparams": true
                  }
                ],
                "result": {
                  "type": "integer",
                  "array": false,
                  "description": "Description for result"
                }
              }
            ]
          }
        ]
      }
    }
  ]
}