{
  "description": "sample Github_hard/o60312.json",
  "meta": {
    "full_size": 8624,
    "stripped_size": 3175,
    "features": [
      "@minmaxInteger",
      "@minmaxNumber",
      "additionalProperties"
    ],
    "raw_features": [
      "_boolSchema",
      "minimum",
      "properties",
      "required",
      "type",
      "type:boolean",
      "type:integer",
      "type:number",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "properties": {
      "entrypoint": {
        "additionalProperties": false,
        "description": "Traefik entrypoints",
        "properties": {
          "api-address": {
            "description": "Leave empty for listening on all interfaces.",
            "type": "string"
          },
          "api-enable": {
            "default": true,
            "description": "Enable API entrypoint.",
            "type": "boolean"
          },
          "api-port": {
            "default": 8080,
            "description": "API (admin) port, if not defined $PORT1 will be used",
            "type": "integer"
          },
          "enable-dashboard": {
            "default": true,
            "description": "Enable Admin Dashboard.",
            "type": "boolean"
          },
          "http-address": {
            "default": "",
            "description": "Leave empty for listening on all interfaces.",
            "type": "string"
          },
          "http-compression": {
            "default": true,
            "description": "Enable compression.",
            "type": "boolean"
          },
          "http-port": {
            "default": 80,
            "description": "HTTP port.",
            "minimum": 1,
            "type": "number"
          },
          "https-address": {
            "default": "",
            "description": "Leave empty for listening on all interfaces.",
            "type": "string"
          },
          "https-compression": {
            "default": true,
            "description": "Enable compression.",
            "type": "boolean"
          },
          "https-enable": {
            "default": true,
            "description": "Enable HTTPS entrypoint.",
            "type": "boolean"
          },
          "https-port": {
            "default": 443,
            "description": "HTTPS port.",
            "minimum": 1,
            "type": "number"
          }
        },
        "type": "object"
      },
      "kubernetess": {
        "additionalProperties": false,
        "description": "Allows access to Kubernetess applications",
        "properties": {
          "ca": {
            "description": "Path to the certificate authority file",
            "type": "string"
          },
          "disable-pass-host-headers": {
            "default": false,
            "description": "Disable PassHost Headers",
            "type": "boolean"
          },
          "enable": {
            "default": false,
            "description": "Enable Kubernetess provider.",
            "type": "boolean"
          },
          "enable-pass-tls-cert": {
            "default": false,
            "description": "Disable PassHost Headers",
            "type": "boolean"
          },
          "endpoint": {
            "description": "Kubernetes server endpoint",
            "type": "string"
          },
          "filename": {
            "description": "Override default configuration template",
            "type": "string"
          },
          "ingress-class": {
            "description": "Value of `kubernetes.io/ingress.class` annotation that identifies Ingress objects to be processed",
            "type": "string"
          },
          "namespaces": {
            "description": "Comma-separated namespaces to watch",
            "type": "string"
          },
          "token": {
            "description": "Bearer token used for the Kubernetes client configuration",
            "type": "string"
          }
        },
        "type": "object"
      },
      "logging": {
        "additionalProperties": false,
        "description": "Logging configuration",
        "properties": {
          "access-logs": {
            "default": false,
            "description": "Enable Access Logs",
            "type": "boolean"
          },
          "access-logs-format": {
            "description": "Default is text",
            "type": "string"
          },
          "access-logs-path": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "marathon": {
        "additionalProperties": false,
        "description": "Marathon configuration",
        "properties": {
          "dialer-timeout": {
            "default": "60s",
            "description": "Amount of time to allow the Marathon provider to wait to open a TCP connection to a Marathon master.",
            "type": "string"
          },
          "domain": {
            "default": "marathon.localhost",
            "description": "Default domain. Can be overridden by setting the 'traefik.domain' label on an application.",
            "type": "string"
          },
          "enable": {
            "default": true,
            "description": "Enable Marathon provider.",
            "type": "boolean"
          },
          "endpoint": {
            "default": "http://marathon.mesos:8080",
            "description": "Marathon endpoint, multiple instances separate by comma.",
            "type": "string"
          },
          "expose": {
            "default": false,
            "description": "Expose Marathon apps by default in Traefik.",
            "type": "boolean"
          },
          "force-task-hostname": {
            "default": false,
            "description": "By default, a task's IP address (as returned by the Marathon API) is used as backend server if an IP-per-task configuration can be found; otherwise, the name of the host running the task is used. The latter behavior can be enforced by enabling this switch.",
            "type": "boolean"
          },
          "groups-as-subdomains": {
            "default": false,
            "description": "Convert Marathon groups to subdomains.",
            "type": "boolean"
          },
          "keep-alive": {
            "default": "10s",
            "description": "Set the TCP Keep Alive interval for the Marathon HTTP Client.",
            "type": "string"
          },
          "marathonlb-compatibility": {
            "default": false,
            "description": "Enable compatibility with marathon-lb labels.",
            "type": "boolean"
          },
          "respect-readiness-checks": {
            "default": true,
            "description": "During deployment Traefik will respect readiness checks if defined in Marathon.",
            "type": "boolean"
          },
          "watch": {
            "default": true,
            "description": "Watch changes in Marathon.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "mesos": {
        "additionalProperties": false,
        "description": "Allows directly exposing Mesos applications",
        "properties": {
          "domain": {
            "default": "mesos.localhost",
            "description": "Default domain. Can be overridden by setting the 'traefik.domain' label on an application.",
            "type": "string"
          },
          "enable": {
            "default": false,
            "description": "Enable Mesos provider.",
            "type": "boolean"
          },
          "endpoint": {
            "default": "http://leader.mesos:5050",
            "description": "Mesos endpoint, multiple instances separate by comma.",
            "type": "string"
          },
          "expose": {
            "default": false,
            "description": "Expose Mesos apps by default in Traefik.",
            "type": "boolean"
          },
          "groups-as-subdomains": {
            "default": false,
            "description": "Convert Marathon groups to subdomains.",
            "type": "boolean"
          },
          "ip-sources": {
            "default": "host",
            "description": "IP sources (e.g. host, docker, mesos, netinfo).",
            "type": "string"
          },
          "refresh": {
            "default": 30,
            "description": "Polling interval",
            "minimum": 1,
            "type": "integer"
          },
          "timeout": {
            "default": 30,
            "description": "Mesos HTTP API timeout",
            "minimum": 1,
            "type": "integer"
          },
          "watch": {
            "default": true,
            "description": "Watch changes in Marathon.",
            "type": "boolean"
          },
          "zk-timeout": {
            "default": 30,
            "description": "ZooKeeper timeout",
            "minimum": 1,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "metrics": {
        "additionalProperties": false,
        "description": "Metrics configuration",
        "properties": {
          "datadog-address": {
            "default": "",
            "description": "DataDog endpoint",
            "type": "string"
          },
          "datadog-pushinterval": {
            "default": "10s",
            "type": "string"
          },
          "influxdb-address": {
            "default": "",
            "description": "InfluxDB endpoint",
            "type": "string"
          },
          "influxdb-pushinterval": {
            "default": "10s",
            "type": "string"
          },
          "prometheus-buckets": {
            "default": "0.1,0.3,1.2,5.0",
            "type": "string"
          },
          "prometheus-entrypoint": {
            "default": "",
            "description": "Traefik entrypoint for Prometheus (e.g. api)",
            "type": "string"
          },
          "recent-errors": {
            "default": 10,
            "description": "Number of logged recent errors",
            "minimum": 0,
            "type": "integer"
          },
          "statsd-address": {
            "default": "",
            "description": "StatsD endpoint",
            "type": "string"
          },
          "statsd-pushinterval": {
            "default": "10s",
            "type": "string"
          }
        },
        "type": "object"
      },
      "service": {
        "properties": {
          "cpus": {
            "default": 1,
            "description": "CPU shares to allocate to each Traefik instance.",
            "minimum": 0.5,
            "type": "number"
          },
          "disk": {
            "default": 100,
            "description": "Disk space (in MB) to allocate for each instance.",
            "minimum": 20,
            "type": "integer"
          },
          "instances": {
            "default": 2,
            "description": "Number of instances to run.",
            "minimum": 1,
            "type": "integer"
          },
          "maximumOverCapacity": {
            "default": 0.2,
            "description": "Maximum over capacity.",
            "minimum": 0,
            "type": "number"
          },
          "mem": {
            "default": 128.0,
            "description": "Memory (MB) to allocate to each Traefik task.",
            "minimum": 64.0,
            "type": "number"
          },
          "minimumHealthCapacity": {
            "default": 0.5,
            "description": "Minimum health capacity.",
            "minimum": 0,
            "type": "number"
          },
          "name": {
            "default": "traefik",
            "description": "Name of the Traefik instance",
            "type": "string"
          },
          "role": {
            "default": "slave_public",
            "description": "Deploy Traefik only on nodes with this role.",
            "type": "string"
          },
          "user": {
            "default": "root",
            "description": "The user that runs the Traefik service and owns the Mesos sandbox.",
            "type": "string"
          }
        },
        "required": [
          "cpus",
          "mem",
          "instances",
          "name"
        ],
        "type": "object"
      },
      "traefik": {
        "additionalProperties": false,
        "description": "Traefik configuration",
        "properties": {
          "config-file": {
            "description": "Path to additional Traefik config file in TOML format.",
            "type": "string"
          },
          "grace-timeout": {
            "default": "30s",
            "description": "Duration to give active requests a chance to finish before Traefik stops",
            "type": "string"
          },
          "healthcheck-interval": {
            "default": "30s",
            "description": "Default health check interval",
            "type": "string"
          },
          "idle-timeout": {
            "default": "180s",
            "description": "The maximum duration an idle (keep-alive) connection will remain idle before closing itself.",
            "type": "string"
          },
          "log-level": {
            "default": "INFO",
            "description": "Traefik log level.",
            "type": "string"
          },
          "read-timeout": {
            "default": "0s",
            "description": "The maximum duration for reading the entire request, including the body",
            "type": "string"
          },
          "retry": {
            "description": "Number of attempts to reach backend service",
            "type": "string"
          },
          "secret-name": {
            "default": "",
            "description": "Name of the Secret Store credentials to use for DC/OS service authentication. This should be left empty unless service authentication is needed.",
            "type": "string"
          },
          "watch-config-file": {
            "default": true,
            "description": "Watch config file for changes.",
            "type": "boolean"
          },
          "write-timeout": {
            "default": "0s",
            "description": "The maximum duration before timing out writes of the response",
            "type": "string"
          }
        },
        "type": "object"
      }
    },
    "type": "object"
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "entrypoint": {
          "api-address": "0.0.0.0",
          "api-enable": true,
          "api-port": 8080,
          "enable-dashboard": true,
          "http-address": "0.0.0.0",
          "http-compression": true,
          "http-port": 80,
          "https-address": "0.0.0.0",
          "https-compression": true,
          "https-enable": true,
          "https-port": 443
        },
        "kubernetess": {
          "ca": "/path/to/ca.crt",
          "disable-pass-host-headers": false,
          "enable": true,
          "enable-pass-tls-cert": false,
          "endpoint": "https://kubernetes.default.svc.cluster.local",
          "filename": "/path/to/config.toml",
          "ingress-class": "traefik",
          "namespaces": "default,kube-system",
          "token": "your_kubernetes_token"
        },
        "logging": {
          "access-logs": true,
          "access-logs-format": "json",
          "access-logs-path": "/path/to/access.log"
        },
        "marathon": {
          "dialer-timeout": "60s",
          "domain": "marathon.localhost",
          "enable": true,
          "endpoint": "http://marathon.mesos:8080",
          "expose": true,
          "force-task-hostname": false,
          "groups-as-subdomains": true,
          "keep-alive": "10s",
          "marathonlb-compatibility": false,
          "respect-readiness-checks": true,
          "watch": true
        },
        "mesos": {
          "domain": "mesos.localhost",
          "enable": true,
          "endpoint": "http://leader.mesos:5050",
          "expose": true,
          "groups-as-subdomains": true,
          "ip-sources": "host",
          "refresh": 30,
          "timeout": 30,
          "watch": true,
          "zk-timeout": 30
        },
        "metrics": {
          "datadog-address": "datadoghq.com:8125",
          "datadog-pushinterval": "10s",
          "influxdb-address": "influxdb:8086",
          "influxdb-pushinterval": "10s",
          "prometheus-buckets": "0.1,0.3,1.2,5.0",
          "prometheus-entrypoint": "api",
          "recent-errors": 10,
          "statsd-address": "statsd:8125",
          "statsd-pushinterval": "10s"
        },
        "service": {
          "cpus": 1,
          "disk": 100,
          "instances": 2,
          "maximumOverCapacity": 0.2,
          "mem": 128.0,
          "minimumHealthCapacity": 0.5,
          "name": "traefik",
          "role": "slave_public",
          "user": "root"
        },
        "traefik": {
          "config-file": "/path/to/config.toml",
          "grace-timeout": "30s",
          "healthcheck-interval": "30s",
          "idle-timeout": "180s",
          "log-level": "INFO",
          "read-timeout": "0s",
          "retry": "3",
          "secret-name": "",
          "watch-config-file": true,
          "write-timeout": "0s"
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on minimum keyword",
      "valid": false,
      "rust_error": "0 is less than the minimum of 1",
      "python_error": "0.4 is less than the minimum of 0.5\n\nFailed validating 'minimum' in schema['properties']['service']['properties']['cpus']:\n    {'default': 1,\n     'description': 'CPU shares to allocate to each Traefik instance.',\n     'minimum': 0.5,\n     'type': 'number'}\n\nOn instance['service']['cpus']:\n    0.4",
      "data": {
        "entrypoint": {
          "api-address": "0.0.0.0",
          "api-enable": true,
          "api-port": 8080,
          "enable-dashboard": true,
          "http-address": "0.0.0.0",
          "http-compression": true,
          "http-port": 0,
          "https-address": "0.0.0.0",
          "https-compression": true,
          "https-enable": true,
          "https-port": 443
        },
        "kubernetess": {
          "ca": "/path/to/ca.crt",
          "disable-pass-host-headers": false,
          "enable": true,
          "enable-pass-tls-cert": false,
          "endpoint": "https://kubernetes.default.svc.cluster.local",
          "filename": "/path/to/config.toml",
          "ingress-class": "traefik",
          "namespaces": "default,kube-system",
          "token": "your_kubernetes_token"
        },
        "logging": {
          "access-logs": true,
          "access-logs-format": "json",
          "access-logs-path": "/path/to/access.log"
        },
        "marathon": {
          "dialer-timeout": "60s",
          "domain": "marathon.localhost",
          "enable": true,
          "endpoint": "http://marathon.mesos:8080",
          "expose": true,
          "force-task-hostname": false,
          "groups-as-subdomains": true,
          "keep-alive": "10s",
          "marathonlb-compatibility": false,
          "respect-readiness-checks": true,
          "watch": true
        },
        "mesos": {
          "domain": "mesos.localhost",
          "enable": true,
          "endpoint": "http://leader.mesos:5050",
          "expose": true,
          "groups-as-subdomains": true,
          "ip-sources": "host",
          "refresh": 0,
          "timeout": 30,
          "watch": true,
          "zk-timeout": 30
        },
        "metrics": {
          "datadog-address": "datadoghq.com:8125",
          "datadog-pushinterval": "10s",
          "influxdb-address": "influxdb:8086",
          "influxdb-pushinterval": "10s",
          "prometheus-buckets": "0.1,0.3,1.2,5.0",
          "prometheus-entrypoint": "api",
          "recent-errors": 0,
          "statsd-address": "statsd:8125",
          "statsd-pushinterval": "10s"
        },
        "service": {
          "cpus": 0.4,
          "disk": 100,
          "instances": 2,
          "maximumOverCapacity": 0.2,
          "mem": 128.0,
          "minimumHealthCapacity": 0.5,
          "name": "traefik",
          "role": "slave_public",
          "user": "root"
        },
        "traefik": {
          "config-file": "/path/to/config.toml",
          "grace-timeout": "30s",
          "healthcheck-interval": "30s",
          "idle-timeout": "180s",
          "log-level": "INFO",
          "read-timeout": "0s",
          "retry": "3",
          "secret-name": "",
          "watch-config-file": true,
          "write-timeout": "0s"
        }
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "Additional properties are not allowed ('invalid-key' was unexpected)",
      "python_error": "Additional properties are not allowed ('invalid-key' was unexpected)\n\nFailed validating 'additionalProperties' in schema['properties']['entrypoint']:\n    {'additionalProperties': False,\n     'description': 'Traefik entrypoints',\n     'properties': {'api-address': {'description': 'Leave empty for '\n                                                   'listening on all '\n                                                   'interfaces.',\n                                    'type': 'string'},\n                    'api-enable': {'default': True,\n                                   'description': 'Enable API entrypoint.',\n                                   'type': 'boolean'},\n                    'api-port': {'default': 8080,\n                                 'description': 'API (admin) port, if not '\n                                                'defined $PORT1 will be '\n                                                'used',\n                                 'type': 'integer'},\n                    'enable-dashboard': {.. (2456 more)",
      "data": {
        "entrypoint": {
          "api-address": "0.0.0.0",
          "api-enable": true,
          "api-port": 8080,
          "enable-dashboard": true,
          "http-address": "0.0.0.0",
          "http-compression": true,
          "http-port": 80,
          "https-address": "0.0.0.0",
          "https-compression": true,
          "https-enable": true,
          "https-port": 443,
          "invalid-key": "invalid-value"
        },
        "kubernetess": {
          "ca": "/path/to/ca.crt",
          "disable-pass-host-headers": false,
          "enable": true,
          "enable-pass-tls-cert": false,
          "endpoint": "https://kubernetes.default.svc.cluster.local",
          "filename": "/path/to/config.toml",
          "ingress-class": "traefik",
          "namespaces": "default,kube-system",
          "token": "your_kubernetes_token"
        },
        "logging": {
          "access-logs": true,
          "access-logs-format": "json",
          "access-logs-path": "/path/to/access.log"
        },
        "marathon": {
          "dialer-timeout": "60s",
          "domain": "marathon.localhost",
          "enable": true,
          "endpoint": "http://marathon.mesos:8080",
          "expose": true,
          "force-task-hostname": false,
          "groups-as-subdomains": true,
          "keep-alive": "10s",
          "marathonlb-compatibility": false,
          "respect-readiness-checks": true,
          "watch": true
        },
        "mesos": {
          "domain": "mesos.localhost",
          "enable": true,
          "endpoint": "http://leader.mesos:5050",
          "expose": true,
          "groups-as-subdomains": true,
          "ip-sources": "host",
          "refresh": 30,
          "timeout": 30,
          "watch": true,
          "zk-timeout": 30
        },
        "metrics": {
          "datadog-address": "datadoghq.com:8125",
          "datadog-pushinterval": "10s",
          "influxdb-address": "influxdb:8086",
          "influxdb-pushinterval": "10s",
          "prometheus-buckets": "0.1,0.3,1.2,5.0",
          "prometheus-entrypoint": "api",
          "recent-errors": 10,
          "statsd-address": "statsd:8125",
          "statsd-pushinterval": "10s"
        },
        "service": {
          "cpus": 1,
          "disk": 100,
          "instances": 2,
          "maximumOverCapacity": 0.2,
          "mem": 128.0,
          "minimumHealthCapacity": 0.5,
          "name": "traefik",
          "role": "slave_public",
          "user": "root"
        },
        "traefik": {
          "config-file": "/path/to/config.toml",
          "grace-timeout": "30s",
          "healthcheck-interval": "30s",
          "idle-timeout": "180s",
          "log-level": "INFO",
          "read-timeout": "0s",
          "retry": "3",
          "secret-name": "",
          "watch-config-file": true,
          "write-timeout": "0s"
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on minimum keyword",
      "valid": false,
      "rust_error": "0 is less than the minimum of 1",
      "python_error": "-1 is less than the minimum of 0\n\nFailed validating 'minimum' in schema['properties']['service']['properties']['minimumHealthCapacity']:\n    {'default': 0.5,\n     'description': 'Minimum health capacity.',\n     'minimum': 0,\n     'type': 'number'}\n\nOn instance['service']['minimumHealthCapacity']:\n    -1",
      "data": {
        "entrypoint": {
          "api-address": "0.0.0.0",
          "api-enable": true,
          "api-port": 8080,
          "enable-dashboard": true,
          "http-address": "0.0.0.0",
          "http-compression": true,
          "http-port": 0,
          "https-address": "0.0.0.0",
          "https-compression": true,
          "https-enable": true,
          "https-port": 443
        },
        "kubernetess": {
          "ca": "/path/to/ca.crt",
          "disable-pass-host-headers": false,
          "enable": true,
          "enable-pass-tls-cert": false,
          "endpoint": "https://kubernetes.default.svc.cluster.local",
          "filename": "/path/to/config.toml",
          "ingress-class": "traefik",
          "namespaces": "default,kube-system",
          "token": "your_kubernetes_token"
        },
        "logging": {
          "access-logs": true,
          "access-logs-format": "json",
          "access-logs-path": "/path/to/access.log"
        },
        "marathon": {
          "dialer-timeout": "60s",
          "domain": "marathon.localhost",
          "enable": true,
          "endpoint": "http://marathon.mesos:8080",
          "expose": true,
          "force-task-hostname": false,
          "groups-as-subdomains": true,
          "keep-alive": "10s",
          "marathonlb-compatibility": false,
          "respect-readiness-checks": true,
          "watch": true
        },
        "mesos": {
          "domain": "mesos.localhost",
          "enable": true,
          "endpoint": "http://leader.mesos:5050",
          "expose": true,
          "groups-as-subdomains": true,
          "ip-sources": "host",
          "refresh": 0,
          "timeout": 0,
          "watch": true,
          "zk-timeout": 0
        },
        "metrics": {
          "datadog-address": "datadoghq.com:8125",
          "datadog-pushinterval": "10s",
          "influxdb-address": "influxdb:8086",
          "influxdb-pushinterval": "10s",
          "prometheus-buckets": "0.1,0.3,1.2,5.0",
          "prometheus-entrypoint": "api",
          "recent-errors": -1,
          "statsd-address": "statsd:8125",
          "statsd-pushinterval": "10s"
        },
        "service": {
          "cpus": 0.4,
          "disk": 19,
          "instances": 0,
          "maximumOverCapacity": -1,
          "mem": 63.0,
          "minimumHealthCapacity": -1,
          "name": "traefik",
          "role": "slave_public",
          "user": "root"
        },
        "traefik": {
          "config-file": "/path/to/config.toml",
          "grace-timeout": "30s",
          "healthcheck-interval": "30s",
          "idle-timeout": "180s",
          "log-level": "INFO",
          "read-timeout": "0s",
          "retry": "3",
          "secret-name": "",
          "watch-config-file": true,
          "write-timeout": "0s"
        }
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "0 is less than the minimum of 1",
      "python_error": "0 is less than the minimum of 1\n\nFailed validating 'minimum' in schema['properties']['mesos']['properties']['refresh']:\n    {'default': 30,\n     'description': 'Polling interval',\n     'minimum': 1,\n     'type': 'integer'}\n\nOn instance['mesos']['refresh']:\n    0",
      "data": {
        "entrypoint": {
          "api-address": "0.0.0.0",
          "api-enable": true,
          "api-port": 8080,
          "enable-dashboard": true,
          "http-address": "0.0.0.0",
          "http-compression": true,
          "http-port": 0,
          "https-address": "0.0.0.0",
          "https-compression": true,
          "https-enable": true,
          "https-port": 443
        },
        "kubernetess": {
          "ca": "/path/to/ca.crt",
          "disable-pass-host-headers": false,
          "enable": true,
          "enable-pass-tls-cert": false,
          "endpoint": "https://kubernetes.default.svc.cluster.local",
          "filename": "/path/to/config.toml",
          "ingress-class": "traefik",
          "namespaces": "default,kube-system",
          "token": "your_kubernetes_token"
        },
        "logging": {
          "access-logs": true,
          "access-logs-format": "json",
          "access-logs-path": "/path/to/access.log"
        },
        "marathon": {
          "dialer-timeout": "60s",
          "domain": "marathon.localhost",
          "enable": true,
          "endpoint": "http://marathon.mesos:8080",
          "expose": true,
          "force-task-hostname": false,
          "groups-as-subdomains": true,
          "keep-alive": "10s",
          "marathonlb-compatibility": false,
          "respect-readiness-checks": true,
          "watch": true
        },
        "mesos": {
          "domain": "mesos.localhost",
          "enable": true,
          "endpoint": "http://leader.mesos:5050",
          "expose": true,
          "groups-as-subdomains": true,
          "ip-sources": "host",
          "refresh": 0,
          "timeout": 30,
          "watch": true,
          "zk-timeout": 30
        },
        "metrics": {
          "datadog-address": "datadoghq.com:8125",
          "datadog-pushinterval": "10s",
          "influxdb-address": "influxdb:8086",
          "influxdb-pushinterval": "10s",
          "prometheus-buckets": "0.1,0.3,1.2,5.0",
          "prometheus-entrypoint": "api",
          "recent-errors": 10,
          "statsd-address": "statsd:8125",
          "statsd-pushinterval": "10s"
        },
        "service": {
          "cpus": 1,
          "disk": 100,
          "instances": 2,
          "maximumOverCapacity": 0.2,
          "mem": 128.0,
          "minimumHealthCapacity": 0.5,
          "name": "traefik",
          "role": "slave_public",
          "user": "root"
        },
        "traefik": {
          "config-file": "/path/to/config.toml",
          "grace-timeout": "30s",
          "healthcheck-interval": "30s",
          "idle-timeout": "180s",
          "log-level": "INFO",
          "read-timeout": "0s",
          "retry": "3",
          "secret-name": "",
          "watch-config-file": true,
          "write-timeout": "0s"
        }
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "entrypoint": {
          "api-address": "",
          "api-enable": true,
          "api-port": 8080,
          "enable-dashboard": true,
          "http-address": "",
          "http-compression": true,
          "http-port": 80,
          "https-address": "",
          "https-compression": true,
          "https-enable": true,
          "https-port": 443
        },
        "kubernetess": {
          "ca": "/path/to/ca",
          "disable-pass-host-headers": false,
          "enable": true,
          "enable-pass-tls-cert": false,
          "endpoint": "https://kubernetes.default.svc",
          "filename": "/path/to/config",
          "ingress-class": "traefik",
          "namespaces": "default",
          "token": "your_token"
        },
        "logging": {
          "access-logs": true,
          "access-logs-format": "json",
          "access-logs-path": "/path/to/logs"
        },
        "marathon": {
          "dialer-timeout": "60s",
          "domain": "marathon.localhost",
          "enable": true,
          "endpoint": "http://marathon.mesos:8080",
          "expose": false,
          "force-task-hostname": false,
          "groups-as-subdomains": false,
          "keep-alive": "10s",
          "marathonlb-compatibility": false,
          "respect-readiness-checks": true,
          "watch": true
        },
        "mesos": {
          "domain": "mesos.localhost",
          "enable": false,
          "endpoint": "http://leader.mesos:5050",
          "expose": false,
          "groups-as-subdomains": false,
          "ip-sources": "host",
          "refresh": 30,
          "timeout": 30,
          "watch": true,
          "zk-timeout": 30
        },
        "metrics": {
          "datadog-address": "",
          "datadog-pushinterval": "10s",
          "influxdb-address": "",
          "influxdb-pushinterval": "10s",
          "prometheus-buckets": "0.1,0.3,1.2,5.0",
          "prometheus-entrypoint": "",
          "recent-errors": 10,
          "statsd-address": "",
          "statsd-pushinterval": "10s"
        },
        "service": {
          "cpus": 1,
          "disk": 100,
          "instances": 2,
          "maximumOverCapacity": 0.2,
          "mem": 128.0,
          "minimumHealthCapacity": 0.5,
          "name": "traefik",
          "role": "slave_public",
          "user": "root"
        },
        "traefik": {
          "config-file": "/path/to/config",
          "grace-timeout": "30s",
          "healthcheck-interval": "30s",
          "idle-timeout": "180s",
          "log-level": "INFO",
          "read-timeout": "0s",
          "retry": "3",
          "secret-name": "",
          "watch-config-file": true,
          "write-timeout": "0s"
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on minimum keyword",
      "valid": false,
      "rust_error": "0 is less than the minimum of 1",
      "python_error": "0 is less than the minimum of 64.0\n\nFailed validating 'minimum' in schema['properties']['service']['properties']['mem']:\n    {'default': 128.0,\n     'description': 'Memory (MB) to allocate to each Traefik task.',\n     'minimum': 64.0,\n     'type': 'number'}\n\nOn instance['service']['mem']:\n    0",
      "data": {
        "entrypoint": {
          "api-address": "",
          "api-enable": true,
          "api-port": 8080,
          "enable-dashboard": true,
          "http-address": "",
          "http-compression": true,
          "http-port": 0,
          "https-address": "",
          "https-compression": true,
          "https-enable": true,
          "https-port": 443
        },
        "kubernetess": {
          "ca": "/path/to/ca",
          "disable-pass-host-headers": false,
          "enable": true,
          "enable-pass-tls-cert": false,
          "endpoint": "https://kubernetes.default.svc",
          "filename": "/path/to/config",
          "ingress-class": "traefik",
          "namespaces": "default",
          "token": "your_token"
        },
        "logging": {
          "access-logs": true,
          "access-logs-format": "json",
          "access-logs-path": "/path/to/logs"
        },
        "marathon": {
          "dialer-timeout": "60s",
          "domain": "marathon.localhost",
          "enable": true,
          "endpoint": "http://marathon.mesos:8080",
          "expose": false,
          "force-task-hostname": false,
          "groups-as-subdomains": false,
          "keep-alive": "10s",
          "marathonlb-compatibility": false,
          "respect-readiness-checks": true,
          "watch": true
        },
        "mesos": {
          "domain": "mesos.localhost",
          "enable": false,
          "endpoint": "http://leader.mesos:5050",
          "expose": false,
          "groups-as-subdomains": false,
          "ip-sources": "host",
          "refresh": 0,
          "timeout": 0,
          "watch": true,
          "zk-timeout": 0
        },
        "metrics": {
          "datadog-address": "",
          "datadog-pushinterval": "10s",
          "influxdb-address": "",
          "influxdb-pushinterval": "10s",
          "prometheus-buckets": "0.1,0.3,1.2,5.0",
          "prometheus-entrypoint": "",
          "recent-errors": 10,
          "statsd-address": "",
          "statsd-pushinterval": "10s"
        },
        "service": {
          "cpus": 1,
          "disk": 100,
          "instances": 2,
          "maximumOverCapacity": 0.2,
          "mem": 0,
          "minimumHealthCapacity": 0.5,
          "name": "traefik",
          "role": "slave_public",
          "user": "root"
        },
        "traefik": {
          "config-file": "/path/to/config",
          "grace-timeout": "30s",
          "healthcheck-interval": "30s",
          "idle-timeout": "180s",
          "log-level": "INFO",
          "read-timeout": "0s",
          "retry": "3",
          "secret-name": "",
          "watch-config-file": true,
          "write-timeout": "0s"
        }
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "0 is less than the minimum of 1",
      "python_error": "Additional properties are not allowed ('<--- Changed from 80 to 0. Violates minimum: 1', 'http-addres' were unexpected)\n\nFailed validating 'additionalProperties' in schema['properties']['entrypoint']:\n    {'additionalProperties': False,\n     'description': 'Traefik entrypoints',\n     'properties': {'api-address': {'description': 'Leave empty for '\n                                                   'listening on all '\n                                                   'interfaces.',\n                                    'type': 'string'},\n                    'api-enable': {'default': True,\n                                   'description': 'Enable API entrypoint.',\n                                   'type': 'boolean'},\n                    'api-port': {'default': 8080,\n                                 'description': 'API (admin) port, if not '\n                                                'defined $PORT1 will be '\n                                                'used',\n                                 'type': 'i.. (2645 more)",
      "data": {
        "entrypoint": {
          "api-address": "",
          "api-enable": true,
          "api-port": 8080,
          "enable-dashboard": true,
          "http-address": "",
          "http-compression": true,
          "http-port": 0,
          "<--- Changed from 80 to 0. Violates minimum: 1": "-address is not allowed in entrypoint and logging",
          "http-addres": ""
        },
        "kubernetess": {
          "ca": "/path/to/ca",
          "disable-pass-host-headers": false,
          "enable": true,
          "enable-pass-tls-cert": false,
          "endpoint": "https://kubernetes.default.svc",
          "filename": "/path/to/config",
          "ingress-class": "traefik",
          "namespaces": "default",
          "token": "your_token"
        },
        "logging": {
          "access-logs": true,
          "access-logs-format": "json",
          "access-logs-path": "/path/to/logs"
        },
        "marathon": {
          "dialer-timeout": "60",
          "domain": "marathon.localhost",
          "enable": true,
          "endpoint": "http://marathon.mesos:8080",
          "expose": false,
          "force-task-hostname": false,
          "groups-as-subdomains": false,
          "keep-alive": "10s",
          "marathonlb-compatibility": false,
          "respect-readiness-checks": true,
          "watch": true
        },
        "mesos": {
          "domain": "mesos.localhost",
          "enable": false,
          "endpoint": "http://leader.mesos:5050",
          "expose": false,
          "groups-as-subdomains": false,
          "ip-sources": "host",
          "refresh": 30,
          "timeout": 30,
          "watch": true,
          "zk-timeout": 30
        },
        "metrics": {
          "datadog-address": "",
          "datadog-pushinterval": "10s",
          "influxdb-address": "",
          "influxdb-pushinterval": "10s",
          "prometheus-buckets": "0.1,0.3,1.2,5.0",
          "prometheus-entrypoint": "",
          "recent-errors": 10,
          "statsd-address": "",
          "statsd-pushinterval": "10s"
        },
        "service": {
          "cpus": 1,
          "disk": 100,
          "instances": 2,
          "maximumOverCapacity": 0.2,
          "mem": 128.0,
          "minimumHealthCapacity": 0.5,
          "name": "traefik",
          "role": "slave_public",
          "user": "root"
        },
        "traefik": {
          "config-file": "/path/to/config",
          "grace-timeout": "30s",
          "healthcheck-interval": "30s",
          "idle-timeout": "180s",
          "log-level": "INFO",
          "read-timeout": "0s",
          "retry": "3",
          "secret-name": "",
          "watch-config-file": true,
          "write-timeout": "0s"
        }
      }
    }
  ]
}