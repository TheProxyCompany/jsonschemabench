{
  "description": "sample Github_medium/o4837.json",
  "meta": {
    "full_size": 498,
    "stripped_size": 440,
    "features": [
      "@minmaxItems",
      "@minmaxLength",
      "format",
      "format:uri",
      "items",
      "patternProperties"
    ],
    "raw_features": [
      "$schema",
      "minItems",
      "minLength",
      "properties",
      "required",
      "type",
      "type:array",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "Is valid term.",
    "$async": true,
    "type": "object",
    "properties": {
      "attributes": {
        "type": "object",
        "properties": {},
        "patternProperties": {
          "^.*$": {
            "type": "array",
            "minItems": 1,
            "items": {
              "properties": {
                "value": {
                  "type": "string",
                  "minLength": 1
                },
                "units": {
                  "type": "string",
                  "minLength": 1
                },
                "terms": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "url": {
                        "type": "string",
                        "format": "uri",
                        "isValidTerm": true
                      }
                    },
                    "required": [
                      "url"
                    ]
                  }
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    }
  },
  "tests": [
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "attributes": {
          "someKey": [
            {
              "value": "someValue",
              "units": "someUnits",
              "terms": [
                {
                  "url": "https://example.com/valid-term"
                }
              ]
            }
          ]
        }
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "attributes": {
          "key1": [
            {
              "value": "example value",
              "units": "example units",
              "terms": [
                {
                  "url": "https://example.com/term1"
                },
                {
                  "url": "https://example.com/term2"
                }
              ]
            }
          ],
          "key2": [
            {
              "value": "another example value",
              "units": "another example units",
              "terms": [
                {
                  "url": "https://example.com/term3"
                }
              ]
            }
          ]
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on patternProperties keyword",
      "valid": false,
      "rust_error": "\"value\" is a required property",
      "python_error": "'string value' is not of type 'array'\n\nFailed validating 'type' in schema['properties']['attributes']['patternProperties']['^.*$']:\n    {'type': 'array',\n     'minItems': 1,\n     'items': {'properties': {'value': {'type': 'string', 'minLength': 1},\n                              'units': {'type': 'string', 'minLength': 1},\n                              'terms': {'type': 'array',\n                                        'items': {'type': 'object',\n                                                  'properties': {'url': {'type': 'string',\n                                                                         'format': 'uri',\n                                                                         'isValidTerm': True}},\n                                                  'required': ['url']}}},\n               'required': ['value']}}\n\nOn instance['attributes']['key4']:\n    'string value'",
      "data": {
        "attributes": {
          "key1": [
            {
              "value": "example value",
              "units": "example units",
              "terms": [
                {
                  "url": "https://example.com/term1"
                },
                {
                  "url": "https://example.com/term2"
                }
              ]
            }
          ],
          "key2": [
            {
              "units": "another example units",
              "terms": [
                {
                  "url": "https://example.com/term3"
                }
              ]
            }
          ],
          "key3": 123,
          "key4": "string value"
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on format keyword",
      "valid": false,
      "rust_error": "\"not a uri\" is not a \"uri\"",
      "python_error": "'not a uri' is not a 'uri'\n\nFailed validating 'format' in schema['properties']['attributes']['patternProperties']['^.*$']['items']['properties']['terms']['items']['properties']['url']:\n    {'type': 'string', 'format': 'uri', 'isValidTerm': True}\n\nOn instance['attributes']['key1'][0]['terms'][0]['url']:\n    'not a uri'",
      "data": {
        "attributes": {
          "key1": [
            {
              "value": "example value",
              "units": "example units",
              "terms": [
                {
                  "url": "not a uri"
                },
                {
                  "url": "https://example.com/term2"
                }
              ]
            }
          ],
          "key2": [
            {
              "value": "another example value",
              "units": "another example units",
              "terms": [
                {
                  "url": "https://example.com/term3"
                }
              ]
            }
          ]
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on minLength keyword",
      "valid": false,
      "rust_error": "\"\" is shorter than 1 character",
      "python_error": "'' should be non-empty\n\nFailed validating 'minLength' in schema['properties']['attributes']['patternProperties']['^.*$']['items']['properties']['value']:\n    {'type': 'string', 'minLength': 1}\n\nOn instance['attributes']['key1'][0]['value']:\n    ''",
      "data": {
        "attributes": {
          "key1": [
            {
              "value": "",
              "units": "example units",
              "terms": [
                {
                  "url": "https://example.com/term1"
                },
                {
                  "url": "https://example.com/term2"
                }
              ]
            }
          ],
          "key2": [
            {
              "value": "another example value",
              "units": "another example units",
              "terms": [
                {
                  "url": "https://example.com/term3"
                }
              ]
            }
          ]
        }
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"\" is shorter than 1 character",
      "python_error": "'' should be non-empty\n\nFailed validating 'minLength' in schema['properties']['attributes']['patternProperties']['^.*$']['items']['properties']['units']:\n    {'type': 'string', 'minLength': 1}\n\nOn instance['attributes']['key2'][0]['units']:\n    ''",
      "data": {
        "attributes": {
          "key1": [
            {
              "value": "",
              "units": "example units",
              "terms": [
                {
                  "url": "https://example.com/term1"
                },
                {
                  "url": "https://example.com/term2"
                }
              ]
            }
          ],
          "key2": [
            {
              "value": "another example value",
              "units": "",
              "terms": [
                {
                  "url": "https://example.com/term3"
                }
              ]
            }
          ]
        }
      }
    }
  ]
}