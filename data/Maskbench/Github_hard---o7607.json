{
  "description": "sample Github_hard/o7607.json",
  "meta": {
    "full_size": 7189,
    "stripped_size": 2340,
    "features": [
      "@minmaxProperties",
      "additionalProperties",
      "additionalProperties:object",
      "enum",
      "items",
      "pattern"
    ],
    "raw_features": [
      "$schema",
      "_boolSchema",
      "minProperties",
      "properties",
      "required",
      "type",
      "type:[]",
      "type:array",
      "type:boolean",
      "type:integer",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "additionalProperties": false,
    "name": "Repository Configuration",
    "properties": {
      "abandoned": {
        "additionalProperties": {
          "description": "A valid Package name",
          "type": [
            "boolean",
            "string"
          ]
        },
        "description": "List of packages marked as abandoned for this repository, the mark can be boolean or a package name/URL pointing to a recommended alternative.",
        "type": "object"
      },
      "archive": {
        "additionalProperties": false,
        "description": "Options for creating package archives for distribution.",
        "properties": {
          "absolute-directory": {
            "description": "The absolute path of the dist files.",
            "type": "string"
          },
          "blacklist": {
            "description": "List of blacklisted packages.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "directory": {
            "description": "The location of the dist files.",
            "type": "string"
          },
          "format": {
            "description": "Archive format.",
            "pattern": "^zip|tar$",
            "type": "string"
          },
          "prefix-url": {
            "_format": "uri",
            "description": "Location of the downloads.",
            "type": "string"
          },
          "skip-dev": {
            "description": "If true, will not create downloads for branches.",
            "type": "boolean"
          },
          "whitelist": {
            "description": "List of whitelisted packages.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "required": [
          "directory"
        ],
        "type": "object"
      },
      "config": {
        "description": "Composer options.",
        "properties": {
          "autoloader-suffix": {
            "description": "Optional string to be used as a suffix for the generated Composer autoloader. When null a random one will be generated.",
            "type": "string"
          },
          "bin-compat": {
            "description": "The compatibility of the binaries, defaults to \"auto\" (automatically guessed) and can be \"full\" (compatible with both Windows and Unix-based systems).",
            "enum": [
              "auto",
              "full"
            ]
          },
          "bin-dir": {
            "description": "The location where all binaries are linked, defaults to \"vendor/bin\".",
            "type": "string"
          },
          "cache-dir": {
            "description": "The location where all caches are located, defaults to \"~/.composer/cache\" on *nix and \"%LOCALAPPDATA%\\Composer\" on windows.",
            "type": "string"
          },
          "cache-files-dir": {
            "description": "The location where files (zip downloads) are cached, defaults to \"{$cache-dir}/files\".",
            "type": "string"
          },
          "cache-files-maxsize": {
            "description": "The cache max size for the files cache, defaults to \"300MiB\".",
            "type": [
              "string",
              "integer"
            ]
          },
          "cache-files-ttl": {
            "description": "The cache time-to-live for files, defaults to the value of cache-ttl.",
            "type": "integer"
          },
          "cache-repo-dir": {
            "description": "The location where repo (git/hg repo clones) are cached, defaults to \"{$cache-dir}/repo\".",
            "type": "string"
          },
          "cache-ttl": {
            "description": "The default cache time-to-live, defaults to 15552000 (6 months).",
            "type": "integer"
          },
          "cache-vcs-dir": {
            "description": "The location where vcs infos (git clones, github api calls, etc. when reading vcs repos) are cached, defaults to \"{$cache-dir}/vcs\".",
            "type": "string"
          },
          "classmap-authoritative": {
            "description": "If true, the composer autoloader will not scan the filesystem for classes that are not found in the class map, defaults to false.",
            "type": "boolean"
          },
          "discard-changes": {
            "description": "The default style of handling dirty updates, defaults to false and can be any of true, false or \"stash\".",
            "type": [
              "string",
              "boolean"
            ]
          },
          "github-domains": {
            "description": "A list of domains to use in github mode. This is used for GitHub Enterprise setups, defaults to [\"github.com\"].",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "github-expose-hostname": {
            "description": "Defaults to true. If set to false, the OAuth tokens created to access the github API will have a date instead of the machine hostname.",
            "type": "boolean"
          },
          "github-oauth": {
            "additionalProperties": true,
            "description": "A hash of domain name => github API oauth tokens, typically {\"github.com\":\"<token>\"}.",
            "type": "object"
          },
          "github-protocols": {
            "description": "A list of protocols to use for github.com clones, in priority order, defaults to [\"git\", \"https\", \"http\"].",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "http-basic": {
            "additionalProperties": true,
            "description": "A hash of domain name => {\"username\": \"...\", \"password\": \"...\"}.",
            "type": "object"
          },
          "notify-on-install": {
            "description": "Composer allows repositories to define a notification URL, so that they get notified whenever a package from that repository is installed. This option allows you to disable that behaviour, defaults to true.",
            "type": "boolean"
          },
          "optimize-autoloader": {
            "description": "Always optimize when dumping the autoloader.",
            "type": "boolean"
          },
          "platform": {
            "additionalProperties": true,
            "description": "This is a hash of package name (keys) and version (values) that will be used to mock the platform packages on this machine.",
            "type": "object"
          },
          "preferred-install": {
            "description": "The install method Composer will prefer to use, defaults to auto and can be any of source, dist or auto.",
            "type": "string"
          },
          "prepend-autoloader": {
            "description": "If false, the composer autoloader will not be prepended to existing autoloaders, defaults to true.",
            "type": "boolean"
          },
          "process-timeout": {
            "description": "The timeout in seconds for process executions, defaults to 300 (5mins).",
            "type": "integer"
          },
          "store-auths": {
            "description": "What to do after prompting for authentication, one of: true (store), false (do not store) or \"prompt\" (ask every time), defaults to prompt.",
            "type": [
              "string",
              "boolean"
            ]
          },
          "use-include-path": {
            "description": "If true, the Composer autoloader will also look for classes in the PHP include path.",
            "type": "boolean"
          },
          "vendor-dir": {
            "description": "The location where all packages are installed, defaults to \"vendor\".",
            "type": "string"
          }
        },
        "type": "object"
      },
      "description": {
        "description": "Short Repository description.",
        "type": "string"
      },
      "homepage": {
        "_format": "uri",
        "description": "Homepage URL for the Repository.",
        "type": "string"
      },
      "minimum-stability": {
        "description": "The minimum stability the packages must have to be install-able. Possible values are: dev, alpha, beta, RC, stable.",
        "enum": [
          "dev",
          "alpha",
          "beta",
          "rc",
          "RC",
          "stable"
        ],
        "type": [
          "string"
        ]
      },
      "name": {
        "description": "Repository name.",
        "type": "string"
      },
      "notify-batch": {
        "description": "a URL that will be called every time a user installs a package.",
        "type": "string"
      },
      "output-dir": {
        "description": "The directory where the static Repository is built.",
        "type": "string"
      },
      "output-html": {
        "description": "If true, build a static web page.",
        "type": "boolean"
      },
      "repositories": {
        "additionalProperties": true,
        "description": "A set of additional repositories where packages can be found.",
        "type": [
          "object",
          "array"
        ]
      },
      "require": {
        "additionalProperties": {
          "description": "A valid version constraint",
          "type": "string"
        },
        "description": "This is a hash of package name (keys) and version constraints (values) that are required to run this package.",
        "minProperties": 1,
        "type": "object"
      },
      "require-all": {
        "description": "If true, selects all versions of all packages in the repositories defined.",
        "type": "boolean"
      },
      "require-dependecies": {
        "description": "If true, resolve and add all dependencies of each required package.",
        "type": "boolean"
      },
      "require-dev-dependecies": {
        "description": "If true, resolve and add all Dev dependencies of each required package.",
        "type": "boolean"
      },
      "twig-template": {
        "description": "Path to a template for the static web page.",
        "type": "string"
      }
    },
    "required": [
      "name",
      "homepage"
    ],
    "type": "object"
  },
  "tests": [
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "abandoned": {
          "package1": true,
          "package2": "https://github.com/alternative-package"
        },
        "archive": {
          "absolute-directory": "/path/to/dist/files",
          "blacklist": [
            "package1",
            "package2"
          ],
          "directory": "dist",
          "format": "zip",
          "prefix-url": "https://example.com/downloads",
          "skip-dev": true,
          "whitelist": [
            "package3",
            "package4"
          ]
        },
        "config": {
          "autoloader-suffix": "my-autoloader",
          "bin-compat": "full",
          "bin-dir": "vendor/bin",
          "cache-dir": "~/.composer/cache",
          "cache-files-dir": "~/.composer/cache/files",
          "cache-files-maxsize": "300MiB",
          "cache-files-ttl": 15552000,
          "cache-repo-dir": "~/.composer/cache/repo",
          "cache-ttl": 15552000,
          "cache-vcs-dir": "~/.composer/cache/vcs",
          "classmap-authoritative": true,
          "discard-changes": true,
          "github-domains": [
            "github.com",
            "github-enterprise.com"
          ],
          "github-expose-hostname": false,
          "github-oauth": {
            "github.com": "my-oauth-token"
          },
          "github-protocols": [
            "git",
            "https",
            "http"
          ],
          "http-basic": {
            "example.com": {
              "username": "my-username",
              "password": "my-password"
            }
          },
          "notify-on-install": false,
          "optimize-autoloader": true,
          "platform": {
            "php": "7.4.0"
          },
          "preferred-install": "source",
          "prepend-autoloader": false,
          "process-timeout": 300,
          "store-auths": true,
          "use-include-path": true,
          "vendor-dir": "vendor"
        },
        "description": "My Repository",
        "homepage": "https://example.com",
        "minimum-stability": "stable",
        "name": "my-repo",
        "notify-batch": "https://example.com/notify",
        "output-dir": "public",
        "output-html": true,
        "repositories": {
          "my-repo": {
            "type": "composer",
            "url": "https://example.com/repo"
          }
        },
        "require": {
          "package1": "^1.0.0",
          "package2": "^2.0.0"
        },
        "require-all": true,
        "require-dependecies": true,
        "require-dev-dependecies": true,
        "twig-template": "path/to/template.twig"
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "abandoned": {
          "example/abandoned-package": true,
          "example/another-abandoned-package": "https://example.com/recommended-alternative"
        },
        "archive": {
          "blacklist": [
            "example/blacklisted-package"
          ],
          "directory": "/path/to/archive",
          "format": "zip",
          "prefix-url": "https://example.com/downloads",
          "skip-dev": true,
          "whitelist": [
            "example/package"
          ]
        },
        "config": {
          "bin-dir": "/path/to/bin",
          "cache-dir": "/path/to/cache",
          "github-domains": [
            "github.com",
            "example.github.com"
          ],
          "github-protocols": [
            "https",
            "git"
          ],
          "optimize-autoloader": true,
          "preferred-install": "dist",
          "vendor-dir": "/path/to/vendor"
        },
        "description": "This is an example repository.",
        "homepage": "https://example.com",
        "minimum-stability": "stable",
        "name": "Example Repository",
        "output-dir": "/path/to/output",
        "output-html": true,
        "repositories": {
          "example-repo": {
            "type": "composer",
            "url": "https://example.com/repo"
          }
        },
        "require": {
          "example/package": "^1.0",
          "example/another-package": "^2.0"
        },
        "twig-template": "/path/to/template.twig"
      }
    },
    {
      "description": "llama-70b generated negative; focus on pattern keyword",
      "valid": false,
      "rust_error": "\"invalidFormat\" does not match \"^zip|tar$\"",
      "python_error": "'invalidFormat' does not match '^zip|tar$'\n\nFailed validating 'pattern' in schema['properties']['archive']['properties']['format']:\n    {'description': 'Archive format.',\n     'pattern': '^zip|tar$',\n     'type': 'string'}\n\nOn instance['archive']['format']:\n    'invalidFormat'",
      "data": {
        "abandoned": {
          "example/abandoned-package": true,
          "example/another-abandoned-package": "https://example.com/recommended-alternative"
        },
        "archive": {
          "blacklist": [
            "example/blacklisted-package"
          ],
          "directory": "/path/to/archive",
          "format": "invalidFormat",
          "prefix-url": "https://example.com/downloads",
          "skip-dev": true,
          "whitelist": [
            "example/package"
          ]
        },
        "config": {
          "bin-dir": "/path/to/bin",
          "cache-dir": "/path/to/cache",
          "github-domains": [
            "github.com",
            "example.github.com"
          ],
          "github-protocols": [
            "https",
            "git"
          ],
          "optimize-autoloader": true,
          "preferred-install": "dist",
          "vendor-dir": "/path/to/vendor"
        },
        "description": "This is an example repository.",
        "homepage": "https://example.com",
        "minimum-stability": "stable",
        "name": "Example Repository",
        "output-dir": "/path/to/output",
        "output-html": true,
        "repositories": {
          "example-repo": {
            "type": "composer",
            "url": "https://example.com/repo"
          }
        },
        "require": {
          "example/package": "^1.0",
          "example/another-package": "^2.0"
        },
        "twig-template": "/path/to/template.twig"
      }
    },
    {
      "description": "llama-70b generated negative; focus on minProperties keyword",
      "valid": false,
      "rust_error": "{} has less than 1 property",
      "python_error": "{} should be non-empty\n\nFailed validating 'minProperties' in schema['properties']['require']:\n    {'additionalProperties': {'description': 'A valid version constraint',\n                              'type': 'string'},\n     'description': 'This is a hash of package name (keys) and version '\n                    'constraints (values) that are required to run this '\n                    'package.',\n     'minProperties': 1,\n     'type': 'object'}\n\nOn instance['require']:\n    {}",
      "data": {
        "abandoned": {
          "example/abandoned-package": true,
          "example/another-abandoned-package": "https://example.com/recommended-alternative"
        },
        "archive": {
          "blacklist": [
            "example/blacklisted-package"
          ],
          "directory": "/path/to/archive",
          "format": "zip",
          "prefix-url": "https://example.com/downloads",
          "skip-dev": true,
          "whitelist": [
            "example/package"
          ]
        },
        "config": {
          "bin-dir": "/path/to/bin",
          "cache-dir": "/path/to/cache",
          "github-domains": [
            "github.com",
            "example.github.com"
          ],
          "github-protocols": [
            "https",
            "git"
          ],
          "optimize-autoloader": true,
          "preferred-install": "dist",
          "vendor-dir": "/path/to/vendor"
        },
        "description": "This is an example repository.",
        "homepage": "https://example.com",
        "minimum-stability": "stable",
        "name": "Example Repository",
        "output-dir": "/path/to/output",
        "output-html": true,
        "repositories": {
          "example-repo": {
            "type": "composer",
            "url": "https://example.com/repo"
          }
        },
        "require": {},
        "twig-template": "/path/to/template.twig"
      }
    },
    {
      "description": "llama-70b generated negative; focus on additionalProperties keyword with an object schema",
      "valid": false,
      "rust_error": "Additional properties are not allowed ('unknown-property' was unexpected)",
      "python_error": "Additional properties are not allowed ('unknown-root-property' was unexpected)\n\nFailed validating 'additionalProperties' in schema:\n    {'$schema': 'http://json-schema.org/draft-04/schema#',\n     'additionalProperties': False,\n     'name': 'Repository Configuration',\n     'properties': {'abandoned': {'additionalProperties': {'description': 'A '\n                                                                          'valid '\n                                                                          'Package '\n                                                                          'name',\n                                                           'type': ['boolean',\n                                                                    'string']},\n                                  'description': 'List of packages marked '\n                                                 'as abandoned for this '\n                                                 'repository, the mark can '\n                                         .. (52829 more)",
      "data": {
        "name": "Example Repository",
        "homepage": "https://example.com",
        "description": "This is an example repository.",
        "minimum-stability": "stable",
        "output-dir": "/path/to/output",
        "output-html": true,
        "twig-template": "/path/to/template.twig",
        "archive": {
          "directory": "/path/to/archive",
          "format": "zip",
          "prefix-url": "https://example.com/downloads",
          "skip-dev": true,
          "whitelist": [
            "example/package"
          ],
          "blacklist": [
            "example/blacklisted-package"
          ],
          "unknown-property": "this should not be allowed"
        },
        "config": {
          "vendor-dir": "/path/to/vendor",
          "bin-dir": "/path/to/bin",
          "cache-dir": "/path/to/cache",
          "optimize-autoloader": true,
          "preferred-install": "dist",
          "github-domains": [
            "github.com",
            "example.github.com"
          ],
          "github-protocols": [
            "https",
            "git"
          ]
        },
        "require": {
          "example/package": "^1.0",
          "example/another-package": "^2.0"
        },
        "repositories": {
          "example-repo": {
            "type": "composer",
            "url": "https://example.com/repo"
          }
        },
        "abandoned": {
          "example/abandoned-package": true,
          "example/another-abandoned-package": "https://example.com/recommended-alternative",
          "unknown-abandoned-package": "this should not be allowed"
        },
        "unknown-root-property": "this should not be allowed"
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "Additional properties are not allowed ('extraProperty' was unexpected)",
      "python_error": "Additional properties are not allowed ('extraProperty' was unexpected)\n\nFailed validating 'additionalProperties' in schema['properties']['archive']:\n    {'additionalProperties': False,\n     'description': 'Options for creating package archives for '\n                    'distribution.',\n     'properties': {'absolute-directory': {'description': 'The absolute '\n                                                          'path of the '\n                                                          'dist files.',\n                                           'type': 'string'},\n                    'blacklist': {'description': 'List of blacklisted '\n                                                 'packages.',\n                                  'items': {'type': 'string'},\n                                  'type': 'array'},\n                    'directory': {'description': 'The location of the dist '\n                                                 'files.',\n                                  'type': 'string'},\n                 .. (1179 more)",
      "data": {
        "name": "Example Repository",
        "homepage": "https://example.com",
        "description": "This is an example repository.",
        "minimum-stability": "stable",
        "output-dir": "/path/to/output",
        "output-html": true,
        "twig-template": "/path/to/template.twig",
        "archive": {
          "directory": "/path/to/archive",
          "format": "zip",
          "prefix-url": "https://example.com/downloads",
          "skip-dev": true,
          "whitelist": [
            "example/package"
          ],
          "blacklist": [
            "example/blacklisted-package"
          ],
          "extraProperty": true
        },
        "config": {
          "vendor-dir": "/path/to/vendor",
          "bin-dir": "/path/to/bin",
          "cache-dir": "/path/to/cache",
          "optimize-autoloader": true,
          "preferred-install": "dist",
          "github-domains": [
            "github.com",
            "example.github.com"
          ],
          "github-protocols": [
            "https",
            "git",
            "http"
          ],
          "github-oauth": {
            "github.com": "token",
            "extraProperty": true
          }
        },
        "require": {
          "example/package": "^1.0",
          "example/another-package": "^2.0",
          "example/invalid-package": "invalid-version-constraint"
        },
        "repositories": {
          "example-repo": {
            "type": "composer",
            "url": "https://example.com/repo",
            "extraProperty": true
          }
        },
        "abandoned": {
          "example/abandoned-package": true,
          "example/another-abandoned-package": "https://example.com/recommended-alternative",
          "example/invalid-abandoned-package": [
            true,
            false
          ]
        }
      }
    }
  ]
}