{
  "description": "sample Github_hard/o90713.json",
  "meta": {
    "full_size": 3815,
    "stripped_size": 1215,
    "features": [
      "@minmaxInteger",
      "@minmaxNumber",
      "pattern"
    ],
    "raw_features": [
      "minimum",
      "properties",
      "required",
      "type",
      "type:boolean",
      "type:integer",
      "type:number",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "properties": {
      "configurations": {
        "description": "Kong configuration properties.",
        "properties": {
          "cassandra": {
            "description": "Cassandra connection properties.",
            "properties": {
              "contact-points": {
                "default": "node-0.cassandra.mesos, node-1.cassandra.mesos, node-2.cassandra.mesos",
                "description": "A comma-separated list of contact points.",
                "type": "string"
              },
              "keyspace": {
                "default": "kong",
                "description": "Cassandra keyspace.",
                "type": "string"
              },
              "port": {
                "default": 9042,
                "description": "The port on which cassandra nodes are listening on.",
                "type": "integer"
              },
              "use-cassandra": {
                "default": false,
                "description": "If true, Cassandra is used as Kong datastore.",
                "title": "Use Cassandra as Kong datastore?",
                "type": "boolean"
              }
            },
            "type": "object"
          },
          "custom-envs": {
            "description": "A space-separated list Kong configurations. Please avoid updating properties which already being set through other properties above.",
            "pattern": "^(KONG_\\w+=\\S+)*(\\sKONG_\\w+=\\S+)*$",
            "type": "string"
          },
          "log-level": {
            "default": "notice",
            "description": "Log level of the Kong server.",
            "type": "string"
          },
          "postgres": {
            "description": "Postgres connection properties.",
            "properties": {
              "database": {
                "default": "kong",
                "description": "Postgres database name.",
                "type": "string"
              },
              "host": {
                "default": "postgresql.marathon.l4lb.thisdcos.directory",
                "description": "Postgres host address.",
                "type": "string"
              },
              "password": {
                "default": "kong",
                "description": "Postgres password.",
                "type": "string"
              },
              "port": {
                "default": 5432,
                "description": "Postgres port.",
                "type": "integer"
              },
              "user": {
                "default": "kong",
                "description": "Postgres user.",
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "networking": {
        "description": "Marathon-LB service configuration properties.",
        "properties": {
          "admin": {
            "description": "Kong's Admin port configuration.",
            "properties": {
              "external-access": {
                "default": false,
                "description": "Enable or disable creating a VIP for external access through a public node running Marathon-LB.",
                "title": "Allow external access",
                "type": "boolean"
              },
              "https-redirect": {
                "default": false,
                "description": "Whether Marathon-lb should redirect HTTP traffic to HTTPS. This requires 'virtual-host' to be set.",
                "type": "boolean"
              },
              "service-port": {
                "default": 10202,
                "description": "Port number to be used for external traffic to cluster through Marathon-LB load balancer.",
                "type": "integer"
              },
              "virtual-host": {
                "description": "The virtual host address to integrate Kong proxy port with Marathon-lb.",
                "type": "string"
              }
            },
            "type": "object"
          },
          "proxy": {
            "description": "Kong's Proxy port configuration.",
            "properties": {
              "external-access": {
                "default": true,
                "description": "Enable or disable creating a VIP for external access through a public node running Marathon-LB.",
                "title": "Allow external access",
                "type": "boolean"
              },
              "https-redirect": {
                "default": false,
                "description": "Whether Marathon-lb should redirect HTTP traffic to HTTPS. This requires 'virtual-host' to be set.",
                "type": "boolean"
              },
              "service-port": {
                "default": 10201,
                "description": "Port number to be used for external traffic to cluster through Marathon-LB load balancer.",
                "type": "integer"
              },
              "virtual-host": {
                "description": "The virtual host address to integrate Kong proxy port with Marathon-lb.",
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "service": {
        "description": "DC/OS service configuration properties",
        "properties": {
          "cpus": {
            "default": 1,
            "description": "CPU shares to allocate to each instance.",
            "minimum": 1,
            "type": "number"
          },
          "instances": {
            "default": 1,
            "description": "Number of instances to run.",
            "minimum": 1,
            "type": "integer"
          },
          "mem": {
            "default": 512,
            "description": "Memory (MB) to allocate to each task.",
            "minimum": 512,
            "type": "number"
          },
          "name": {
            "default": "kong",
            "description": "The name of this Kong instance.",
            "type": "string"
          },
          "role": {
            "default": "*",
            "description": "Deploy Kong only on nodes with this role.",
            "type": "string"
          }
        },
        "required": [
          "name",
          "instances",
          "cpus",
          "mem",
          "role"
        ],
        "type": "object"
      }
    },
    "type": "object"
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "configurations": {
          "cassandra": {
            "contact-points": "node-0.cassandra.mesos, node-1.cassandra.mesos, node-2.cassandra.mesos",
            "keyspace": "kong",
            "port": 9042,
            "use-cassandra": false
          },
          "custom-envs": "KONG_LOG_LEVEL=debug KONG_PROXY_ACCESS_LOG=/dev/stdout",
          "log-level": "debug",
          "postgres": {
            "database": "kong",
            "host": "postgresql.marathon.l4lb.thisdcos.directory",
            "password": "kong",
            "port": 5432,
            "user": "kong"
          }
        },
        "networking": {
          "admin": {
            "external-access": false,
            "https-redirect": false,
            "service-port": 10202,
            "virtual-host": "admin.kong.example.com"
          },
          "proxy": {
            "external-access": true,
            "https-redirect": true,
            "service-port": 10201,
            "virtual-host": "proxy.kong.example.com"
          }
        },
        "service": {
          "cpus": 1,
          "instances": 1,
          "mem": 512,
          "name": "kong",
          "role": "*"
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on pattern keyword",
      "valid": false,
      "rust_error": "\"KONG_LOG_LEVEL=debug KONG_PROXY_ACCESS_LOG=/dev/stdout invalid\" does not match \"^(KONG_\\w+=\\S+)*(\\sKONG_\\w+=\\S+)*$\"",
      "python_error": "'KONG_LOG_LEVEL=debug KONG_PROXY_ACCESS_LOG=/dev/stdout invalid' does not match '^(KONG_\\\\w+=\\\\S+)*(\\\\sKONG_\\\\w+=\\\\S+)*$'\n\nFailed validating 'pattern' in schema['properties']['configurations']['properties']['custom-envs']:\n    {'description': 'A space-separated list Kong configurations. Please '\n                    'avoid updating properties which already being set '\n                    'through other properties above.',\n     'pattern': '^(KONG_\\\\w+=\\\\S+)*(\\\\sKONG_\\\\w+=\\\\S+)*$',\n     'type': 'string'}\n\nOn instance['configurations']['custom-envs']:\n    'KONG_LOG_LEVEL=debug KONG_PROXY_ACCESS_LOG=/dev/stdout invalid'",
      "data": {
        "configurations": {
          "cassandra": {
            "contact-points": "node-0.cassandra.mesos, node-1.cassandra.mesos, node-2.cassandra.mesos",
            "keyspace": "kong",
            "port": 9042,
            "use-cassandra": false
          },
          "custom-envs": "KONG_LOG_LEVEL=debug KONG_PROXY_ACCESS_LOG=/dev/stdout invalid",
          "log-level": "debug",
          "postgres": {
            "database": "kong",
            "host": "postgresql.marathon.l4lb.thisdcos.directory",
            "password": "kong",
            "port": 5432,
            "user": "kong"
          }
        },
        "networking": {
          "admin": {
            "external-access": false,
            "https-redirect": false,
            "service-port": 10202,
            "virtual-host": "admin.kong.example.com"
          },
          "proxy": {
            "external-access": true,
            "https-redirect": true,
            "service-port": 10201,
            "virtual-host": "proxy.kong.example.com"
          }
        },
        "service": {
          "cpus": 1,
          "instances": 1,
          "mem": 512,
          "name": "kong",
          "role": "*"
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on minimum keyword",
      "valid": false,
      "rust_error": "0 is less than the minimum of 1",
      "python_error": "0 is less than the minimum of 1\n\nFailed validating 'minimum' in schema['properties']['service']['properties']['cpus']:\n    {'default': 1,\n     'description': 'CPU shares to allocate to each instance.',\n     'minimum': 1,\n     'type': 'number'}\n\nOn instance['service']['cpus']:\n    0",
      "data": {
        "configurations": {
          "cassandra": {
            "contact-points": "node-0.cassandra.mesos, node-1.cassandra.mesos, node-2.cassandra.mesos",
            "keyspace": "kong",
            "port": 9042,
            "use-cassandra": false
          },
          "custom-envs": "KONG_LOG_LEVEL=debug KONG_PROXY_ACCESS_LOG=/dev/stdout",
          "log-level": "debug",
          "postgres": {
            "database": "kong",
            "host": "postgresql.marathon.l4lb.thisdcos.directory",
            "password": "kong",
            "port": 5432,
            "user": "kong"
          }
        },
        "networking": {
          "admin": {
            "external-access": false,
            "https-redirect": false,
            "service-port": 10202,
            "virtual-host": "admin.kong.example.com"
          },
          "proxy": {
            "external-access": true,
            "https-redirect": true,
            "service-port": 10201,
            "virtual-host": "proxy.kong.example.com"
          }
        },
        "service": {
          "cpus": 0,
          "instances": 1,
          "mem": 512,
          "name": "kong",
          "role": "*"
        }
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"KONG_LOG_LEVEL=debug KONG_PROXY_ACCESS_LOG=/dev/stdout invalid\" does not match \"^(KONG_\\w+=\\S+)*(\\sKONG_\\w+=\\S+)*$\"",
      "python_error": "0 is less than the minimum of 1\n\nFailed validating 'minimum' in schema['properties']['service']['properties']['cpus']:\n    {'default': 1,\n     'description': 'CPU shares to allocate to each instance.',\n     'minimum': 1,\n     'type': 'number'}\n\nOn instance['service']['cpus']:\n    0",
      "data": {
        "configurations": {
          "cassandra": {
            "contact-points": "node-0.cassandra.mesos, node-1.cassandra.mesos, node-2.cassandra.mesos",
            "keyspace": "kong",
            "port": 9042,
            "use-cassandra": false
          },
          "custom-envs": "KONG_LOG_LEVEL=debug KONG_PROXY_ACCESS_LOG=/dev/stdout invalid",
          "log-level": "debug",
          "postgres": {
            "database": "kong",
            "host": "postgresql.marathon.l4lb.thisdcos.directory",
            "password": "kong",
            "port": 5432,
            "user": "kong"
          }
        },
        "networking": {
          "admin": {
            "external-access": false,
            "https-redirect": false,
            "service-port": 10202,
            "virtual-host": "admin.kong.example.com"
          },
          "proxy": {
            "external-access": true,
            "https-redirect": true,
            "service-port": 10201,
            "virtual-host": "proxy.kong.example.com"
          }
        },
        "service": {
          "cpus": 0,
          "instances": 1,
          "mem": 512,
          "name": "kong",
          "role": "*"
        }
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "configurations": {
          "cassandra": {
            "contact-points": "node-0.cassandra.mesos, node-1.cassandra.mesos, node-2.cassandra.mesos",
            "keyspace": "kong",
            "port": 9042,
            "use-cassandra": false
          },
          "custom-envs": "KONG_LOG_LEVEL=debug KONG_PROXY_ACCESS_LOG=/dev/stdout",
          "log-level": "notice",
          "postgres": {
            "database": "kong",
            "host": "postgresql.marathon.l4lb.thisdcos.directory",
            "password": "kong",
            "port": 5432,
            "user": "kong"
          }
        },
        "networking": {
          "admin": {
            "external-access": false,
            "https-redirect": false,
            "service-port": 10202,
            "virtual-host": "admin.kong"
          },
          "proxy": {
            "external-access": true,
            "https-redirect": false,
            "service-port": 10201,
            "virtual-host": "proxy.kong"
          }
        },
        "service": {
          "cpus": 1,
          "instances": 1,
          "mem": 512,
          "name": "kong",
          "role": "*"
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on minimum keyword",
      "valid": false,
      "rust_error": "0.5 is less than the minimum of 1",
      "python_error": "256 is less than the minimum of 512\n\nFailed validating 'minimum' in schema['properties']['service']['properties']['mem']:\n    {'default': 512,\n     'description': 'Memory (MB) to allocate to each task.',\n     'minimum': 512,\n     'type': 'number'}\n\nOn instance['service']['mem']:\n    256",
      "data": {
        "configurations": {
          "cassandra": {
            "contact-points": "node-0.cassandra.mesos, node-1.cassandra.mesos, node-2.cassandra.mesos",
            "keyspace": "kong",
            "port": 9042,
            "use-cassandra": false
          },
          "custom-envs": "KONG_LOG_LEVEL=debug KONG_PROXY_ACCESS_LOG=/dev/stdout",
          "log-level": "notice",
          "postgres": {
            "database": "kong",
            "host": "postgresql.marathon.l4lb.thisdcos.directory",
            "password": "kong",
            "port": 5432,
            "user": "kong"
          }
        },
        "networking": {
          "admin": {
            "external-access": false,
            "https-redirect": false,
            "service-port": 10202,
            "virtual-host": "admin.kong"
          },
          "proxy": {
            "external-access": true,
            "https-redirect": false,
            "service-port": 10201,
            "virtual-host": "proxy.kong"
          }
        },
        "service": {
          "cpus": 0.5,
          "instances": 0,
          "mem": 256,
          "name": "kong",
          "role": "*",
          "minimum cpus should be 1": "instances",
          "minimum instances should be 1": "mem",
          "minimum memory should be 512": "name"
        }
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"KONG_LOG_LEVEL=debug KONG_PROXY_ACCESS_LOG=/dev/stdout invalid-key=invalid-value\" does not match \"^(KONG_\\w+=\\S+)*(\\sKONG_\\w+=\\S+)*$\"",
      "python_error": "0 is less than the minimum of 1\n\nFailed validating 'minimum' in schema['properties']['service']['properties']['cpus']:\n    {'default': 1,\n     'description': 'CPU shares to allocate to each instance.',\n     'minimum': 1,\n     'type': 'number'}\n\nOn instance['service']['cpus']:\n    0",
      "data": {
        "configurations": {
          "cassandra": {
            "contact-points": "node-0.cassandra.mesos, node-1.cassandra.mesos, node-2.cassandra.mesos",
            "keyspace": "kong",
            "port": 9042,
            "use-cassandra": false
          },
          "custom-envs": "KONG_LOG_LEVEL=debug KONG_PROXY_ACCESS_LOG=/dev/stdout invalid-key=invalid-value",
          "log-level": "invalid-log-level",
          "postgres": {
            "database": "kong",
            "host": "postgresql.marathon.l4lb.thisdcos.directory",
            "password": "kong",
            "port": 5432,
            "user": "kong"
          }
        },
        "networking": {
          "admin": {
            "external-access": false,
            "https-redirect": false,
            "service-port": "invalid-port",
            "virtual-host": "admin.kong"
          },
          "proxy": {
            "external-access": true,
            "https-redirect": false,
            "service-port": 10201,
            "virtual-host": "proxy.kong"
          }
        },
        "service": {
          "cpus": 0,
          "instances": 1,
          "mem": 512,
          "name": "kong",
          "role": "*"
        }
      }
    }
  ]
}