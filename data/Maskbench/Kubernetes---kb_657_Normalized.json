{
  "description": "sample Kubernetes/kb_657_Normalized.json",
  "meta": {
    "full_size": 1313,
    "stripped_size": 309,
    "features": [],
    "raw_features": [
      "properties",
      "required",
      "type",
      "type:[]",
      "type:boolean",
      "type:null",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "description": "OwnerReference contains enough information to let you identify an owning object. An owning object must be in the same namespace as the dependent, or be cluster-scoped, so there is no namespace field.",
    "properties": {
      "apiVersion": {
        "description": "API version of the referent.",
        "type": [
          "string",
          "null"
        ]
      },
      "blockOwnerDeletion": {
        "description": "If true, AND if the owner has the \"foregroundDeletion\" finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. Defaults to false. To set this field, a user needs \"delete\" permission of the owner, otherwise 422 (Unprocessable Entity) will be returned.",
        "type": [
          "boolean",
          "null"
        ]
      },
      "controller": {
        "description": "If true, this reference points to the managing controller.",
        "type": [
          "boolean",
          "null"
        ]
      },
      "kind": {
        "description": "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
        "type": [
          "string",
          "null"
        ]
      },
      "name": {
        "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
        "type": [
          "string",
          "null"
        ]
      },
      "uid": {
        "description": "UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
        "type": [
          "string",
          "null"
        ]
      }
    },
    "required": [
      "apiVersion",
      "kind",
      "name",
      "uid"
    ],
    "type": "object"
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "apiVersion": "v1",
        "kind": "Pod",
        "name": "example-pod",
        "uid": "12345678-1234-1234-1234-123456789012",
        "blockOwnerDeletion ": false,
        "controller ": true
      }
    },
    {
      "description": "llama-70b generated negative; focus on type keyword with an array of types",
      "valid": false,
      "rust_error": "123 is not of types \"null\", \"string\"",
      "python_error": "123 is not of type 'string', 'null'\n\nFailed validating 'type' in schema['properties']['apiVersion']:\n    {'description': 'API version of the referent.',\n     'type': ['string', 'null']}\n\nOn instance['apiVersion']:\n    123",
      "data": {
        "apiVersion": 123,
        "kind": "Pod",
        "name": "example-pod",
        "uid": "12345678-1234-1234-1234-123456789012",
        "blockOwnerDeletion": false,
        "controller": true
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "apiVersion": "v1",
        "blockOwnerDeletion": false,
        "controller": true,
        "kind": "Pod",
        "name": "example-pod",
        "uid": "12345678-1234-1234-1234-123456789012"
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"false\" is not of types \"boolean\", \"null\"",
      "python_error": "'false' is not of type 'boolean', 'null'\n\nFailed validating 'type' in schema['properties']['blockOwnerDeletion']:\n    {'description': 'If true, AND if the owner has the '\n                    '\"foregroundDeletion\" finalizer, then the owner cannot '\n                    'be deleted from the key-value store until this '\n                    'reference is removed. Defaults to false. To set this '\n                    'field, a user needs \"delete\" permission of the owner, '\n                    'otherwise 422 (Unprocessable Entity) will be '\n                    'returned.',\n     'type': ['boolean', 'null']}\n\nOn instance['blockOwnerDeletion']:\n    'false'",
      "data": {
        "apiVersion": "v1",
        "kind": "Pod",
        "name": "example-pod",
        "uid": "12345678-1234-1234-1234-123456789012",
        "blockOwnerDeletion": "false",
        "controller": true,
        "extraKey": "extraValue",
        "anotherExtraKey": null,
        "emptyString": "",
        "nullValue": null,
        "numberValue": 1,
        "arrayValue": [
          "item1",
          "item2"
        ],
        "objectValue": {
          "key": "value"
        },
        "booleanValue": true,
        "apiVersionExtraSpace": "  v1  ",
        "uidExtraSpace": "  12345678-1234-1234-1234-123456789012  ",
        "uidMissingHyphen": "12345678123412341234123456789012",
        "uidTooLong": "12345678-1234-1234-1234-123456789012345678",
        "uidTooShort": "12345678-1234-1234",
        "uidInvalidCharacters": "12345678-1234-1234-1234-1234567890abc",
        "nameExtraSpace": "  example-pod  ",
        "nameSpecialCharacters": "example!@#$%^&*()-_=+[]{};:'<>,./?",
        "nameTooLong": "a",
        "nameTooShort": "ab",
        "apiVersionTooLong": "v123456789012345678901234567890",
        "apiVersionTooShort": "v",
        "apiVersionSpecialCharacters": "v!@#$%^&*()-_=+[]{};:'<>,./?",
        "kindExtraSpace": "  Pod  ",
        "kindSpecialCharacters": "Pod!@#$%^&*()-_=+[]{};:'<>,./?",
        "kindTooLong": "Pod123456789012345678901234567890",
        "kindTooShort": "Po",
        "kindInvalid": 123,
        "blockOwnerDeletionInvalid": "invalid",
        "controllerInvalid": "invalid",
        "anotherExtraKeyInvalid": "invalid",
        "objectInvalid": {
          "key": "value"
        },
        "numberInvalid": 123,
        "arrayInvalid": [
          "item1",
          "item2"
        ],
        "booleanInvalid": true,
        "arrayOfObjectsInvalid": [
          {
            "key": "value"
          }
        ],
        "objectWithArrayInvalid": {
          "key": [
            "value"
          ]
        },
        "objectWithObjectInvalid": {
          "key": {
            "key": "value"
          }
        },
        "objectWithNestedArrayInvalid": {
          "key": {
            "key": [
              "value"
            ]
          }
        },
        "objectWithNestedObjectInvalid": {
          "key": {
            "key": {
              "key": "value"
            }
          }
        }
      }
    }
  ]
}