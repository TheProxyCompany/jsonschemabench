{
  "description": "sample Github_easy/o44191.json",
  "meta": {
    "full_size": 344,
    "stripped_size": 302,
    "features": [
      "@minmaxLength",
      "additionalProperties",
      "enum",
      "pattern"
    ],
    "raw_features": [
      "$schema",
      "_boolSchema",
      "maxLength",
      "minLength",
      "properties",
      "required",
      "type",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "description": "schema for type character",
    "type": "object",
    "properties": {
      "Z1K1": {
        "enum": [
          "Z60"
        ]
      },
      "Z1K2": {
        "type": "string",
        "pattern": "^[a-z_A-Z0-9]+$"
      },
      "Z1K3": {},
      "Z1K4": {},
      "Z1K5": {},
      "Z60K1": {
        "type": "string",
        "maxLength": 1,
        "minLength": 1
      }
    },
    "required": [
      "Z1K1",
      "Z60K1"
    ],
    "additionalProperties": false
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "Z1K1": "Z60",
        "Z1K2": "abc_123",
        "Z60K1": "A"
      }
    },
    {
      "description": "llama-70b generated negative; focus on minLength keyword or maxLength keyword",
      "valid": false,
      "rust_error": "\"\" is shorter than 1 character",
      "python_error": "'' should be non-empty\n\nFailed validating 'minLength' in schema['properties']['Z60K1']:\n    {'type': 'string', 'maxLength': 1, 'minLength': 1}\n\nOn instance['Z60K1']:\n    ''",
      "data": {
        "Z1K1": "Z60",
        "Z1K2": "abc_123",
        "Z60K1": ""
      }
    },
    {
      "description": "llama-70b generated negative; focus on pattern keyword",
      "valid": false,
      "rust_error": "\"abc!123\" does not match \"^[a-z_A-Z0-9]+$\"",
      "python_error": "'abc!123' does not match '^[a-z_A-Z0-9]+$'\n\nFailed validating 'pattern' in schema['properties']['Z1K2']:\n    {'type': 'string', 'pattern': '^[a-z_A-Z0-9]+$'}\n\nOn instance['Z1K2']:\n    'abc!123'",
      "data": {
        "Z1K1": "Z60",
        "Z1K2": "abc!123",
        "Z60K1": "A"
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"Z61\" is not one of [\"Z60\"]",
      "python_error": "'Z61' is not one of ['Z60']\n\nFailed validating 'enum' in schema['properties']['Z1K1']:\n    {'enum': ['Z60']}\n\nOn instance['Z1K1']:\n    'Z61'",
      "data": {
        "Z1K1": "Z61",
        "Z1K2": "abc_123",
        "Z60K1": "A"
      }
    },
    {
      "description": "llama-70b generated negative; focus on pattern keyword",
      "valid": false,
      "rust_error": "\"abc-123\" does not match \"^[a-z_A-Z0-9]+$\"",
      "python_error": "'abc-123' does not match '^[a-z_A-Z0-9]+$'\n\nFailed validating 'pattern' in schema['properties']['Z1K2']:\n    {'type': 'string', 'pattern': '^[a-z_A-Z0-9]+$'}\n\nOn instance['Z1K2']:\n    'abc-123'",
      "data": {
        "Z1K1": "Z60",
        "Z1K2": "abc-123",
        "Z60K1": "A"
      }
    },
    {
      "description": "llama-70b generated negative; focus on pattern keyword",
      "valid": false,
      "rust_error": "\"abc@123\" does not match \"^[a-z_A-Z0-9]+$\"",
      "python_error": "'abc@123' does not match '^[a-z_A-Z0-9]+$'\n\nFailed validating 'pattern' in schema['properties']['Z1K2']:\n    {'type': 'string', 'pattern': '^[a-z_A-Z0-9]+$'}\n\nOn instance['Z1K2']:\n    'abc@123'",
      "data": {
        "Z1K1": "Z60",
        "Z1K2": "abc@123",
        "Z60K1": "A"
      }
    }
  ]
}