{
  "description": "sample Github_hard/o71528.json",
  "meta": {
    "full_size": 2351,
    "stripped_size": 2147,
    "features": [
      "$ref",
      "@minmaxInteger",
      "@minmaxItems",
      "@minmaxNumber",
      "additionalProperties",
      "additionalProperties:object",
      "allOf",
      "anyOf",
      "enum",
      "format",
      "format:regex",
      "format:uri",
      "format:uri-reference",
      "items"
    ],
    "raw_features": [
      "definitions",
      "exclusiveMinimum",
      "minItems",
      "minimum",
      "properties",
      "type",
      "type:[]",
      "type:array",
      "type:boolean",
      "type:integer",
      "type:number",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "title": "Core schema meta-schema",
    "definitions": {
      "schemaArray": {
        "type": "array",
        "minItems": 1,
        "items": {
          "$ref": "#"
        }
      },
      "positiveInteger": {
        "type": "integer",
        "minimum": 0
      },
      "positiveIntegerDefault0": {
        "allOf": [
          {
            "$ref": "#/definitions/positiveInteger"
          },
          {
            "default": 0
          }
        ]
      },
      "simpleTypes": {
        "enum": [
          "array",
          "boolean",
          "integer",
          "null",
          "number",
          "object",
          "string"
        ]
      },
      "stringArray": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "_uniqueItems": true,
        "defaultItems": []
      }
    },
    "type": [
      "object",
      "boolean"
    ],
    "properties": {
      "$id": {
        "type": "string",
        "format": "uri-reference"
      },
      "$schema": {
        "type": "string",
        "format": "uri"
      },
      "$ref": {
        "type": "string",
        "format": "uri-reference"
      },
      "title": {
        "type": "string"
      },
      "description": {
        "type": "string"
      },
      "default": {},
      "multipleOf": {
        "type": "number",
        "exclusiveMinimum": 0
      },
      "maximum": {
        "type": "number"
      },
      "exclusiveMaximum": {
        "type": "number"
      },
      "minimum": {
        "type": "number"
      },
      "exclusiveMinimum": {
        "type": "number"
      },
      "maxLength": {
        "$ref": "#/definitions/positiveInteger"
      },
      "minLength": {
        "$ref": "#/definitions/positiveIntegerDefault0"
      },
      "pattern": {
        "type": "string",
        "format": "regex"
      },
      "additionalItems": {
        "$ref": "#"
      },
      "items": {
        "anyOf": [
          {
            "$ref": "#"
          },
          {
            "$ref": "#/definitions/schemaArray"
          }
        ],
        "default": {}
      },
      "maxItems": {
        "$ref": "#/definitions/positiveInteger"
      },
      "minItems": {
        "$ref": "#/definitions/positiveIntegerDefault0"
      },
      "_uniqueItems": {
        "type": "boolean",
        "default": false
      },
      "contains": {
        "$ref": "#"
      },
      "maxProperties": {
        "$ref": "#/definitions/positiveInteger"
      },
      "minProperties": {
        "$ref": "#/definitions/positiveIntegerDefault0"
      },
      "required": {
        "$ref": "#/definitions/stringArray"
      },
      "additionalProperties": {
        "$ref": "#"
      },
      "definitions": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#"
        },
        "default": {}
      },
      "properties": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#"
        },
        "default": {}
      },
      "patternProperties": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#"
        },
        "default": {}
      },
      "dependencies": {
        "type": "object",
        "additionalProperties": {
          "anyOf": [
            {
              "$ref": "#"
            },
            {
              "$ref": "#/definitions/stringArray"
            }
          ]
        }
      },
      "propertyNames": {
        "$ref": "#"
      },
      "const": {},
      "enum": {
        "type": "array",
        "minItems": 1,
        "_uniqueItems": true
      },
      "type": {
        "anyOf": [
          {
            "$ref": "#/definitions/simpleTypes"
          },
          {
            "type": "array",
            "items": {
              "$ref": "#/definitions/simpleTypes"
            },
            "minItems": 1,
            "_uniqueItems": true
          }
        ]
      },
      "format": {
        "type": "string"
      },
      "allOf": {
        "$ref": "#/definitions/schemaArray"
      },
      "anyOf": {
        "$ref": "#/definitions/schemaArray"
      },
      "oneOf": {
        "$ref": "#/definitions/schemaArray"
      },
      "not": {
        "$ref": "#"
      }
    },
    "default": {}
  },
  "tests": [
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "$id": "https://example.com/schema",
        "$schema": "https://json-schema.org/draft-07/schema#",
        "title": "Example Schema",
        "description": "This is an example schema",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 50,
            "minLength": 1
          },
          "age": {
            "type": "integer",
            "minimum": 0,
            "maximum": 100
          },
          "hobbies": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "minItems": 1,
            "maxItems": 5,
            "_uniqueItems": true
          }
        },
        "required": [
          "name",
          "age"
        ],
        "additionalProperties": false
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "$id": "https://example.com/schema",
        "$schema": "https://json-schema.org/draft-07/schema#",
        "title": "Example Schema",
        "description": "This is an example schema.",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the person."
          },
          "age": {
            "type": "integer",
            "minimum": 0,
            "description": "The age of the person."
          }
        },
        "required": [
          "name",
          "age"
        ],
        "additionalProperties": false
      }
    },
    {
      "description": "llama-70b generated negative; focus on minItems keyword",
      "valid": false,
      "rust_error": "[] has less than 1 item",
      "python_error": "[] should be non-empty\n\nFailed validating 'minItems' in schema['properties']['properties']['additionalProperties']['properties']['enum']:\n    {'type': 'array', 'minItems': 1, '_uniqueItems': True}\n\nOn instance['properties']['age']['enum']:\n    []",
      "data": {
        "$id": "https://example.com/schema",
        "$schema": "https://json-schema.org/draft-07/schema#",
        "title": "Example Schema",
        "description": "This is an example schema.",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the person."
          },
          "age": {
            "type": "integer",
            "minimum": 0,
            "description": "The age of the person.",
            "enum": []
          }
        },
        "required": [
          "name",
          "age"
        ],
        "additionalProperties": false
      }
    },
    {
      "description": "llama-70b generated negative; focus on anyOf keyword",
      "valid": false,
      "rust_error": "\"not an array\" is not of type \"array\"",
      "python_error": "'not an array' is not of type 'array'\n\nFailed validating 'type' in schema['properties']['required']:\n    {'type': 'array',\n     'items': {'type': 'string'},\n     '_uniqueItems': True,\n     'defaultItems': []}\n\nOn instance['required']:\n    'not an array'",
      "data": {
        "$id": "https://example.com/schema",
        "$schema": "https://json-schema.org/draft-07/schema#",
        "title": "Example Schema",
        "description": "This is an example schema.",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the person."
          },
          "age": {
            "type": "integer",
            "minimum": 0,
            "description": "The age of the person."
          }
        },
        "required": "not an array",
        "additionalProperties": false
      }
    }
  ]
}