{
  "description": "sample Github_hard/o27019.json",
  "meta": {
    "full_size": 2006,
    "stripped_size": 1307,
    "features": [
      "@minmaxLength",
      "format",
      "format:date-time",
      "format:email",
      "format:uuid"
    ],
    "raw_features": [
      "$schema",
      "definitions",
      "minLength",
      "properties",
      "type",
      "type:boolean",
      "type:number",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "description": "Just a basic schema.",
    "title": "Basic Object",
    "type": "object",
    "definitions": {
      "id": {
        "description": "Unique identifier.",
        "readOnly": true,
        "format": "uuid",
        "example": "01234567-89ab-cdef-0123-456789abcdef",
        "type": "string",
        "minLength": 1
      },
      "foo": {
        "description": "foo property",
        "readOnly": true,
        "type": "number"
      },
      "bar": {
        "description": "bar property",
        "type": "boolean"
      },
      "address": {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "description": "A simple address schema",
        "type": "object",
        "definitions": {
          "address1": {
            "type": "string"
          },
          "address2": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "postalCode": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "country": {
            "type": "string"
          }
        },
        "properties": {
          "address1": {
            "type": "string"
          },
          "address2": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "postalCode": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "country": {
            "type": "string"
          }
        }
      }
    },
    "properties": {
      "id": {
        "description": "Unique identifier.",
        "readOnly": true,
        "format": "uuid",
        "example": "01234567-89ab-cdef-0123-456789abcdef",
        "type": "string",
        "minLength": 1
      },
      "foo": {
        "description": "foo property",
        "readOnly": true,
        "type": "number"
      },
      "bar": {
        "description": "bar property",
        "type": "boolean"
      },
      "address": {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "description": "A simple address schema",
        "type": "object",
        "definitions": {
          "address1": {
            "type": "string"
          },
          "address2": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "postalCode": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "country": {
            "type": "string"
          }
        },
        "properties": {
          "address1": {
            "type": "string"
          },
          "address2": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "postalCode": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "country": {
            "type": "string"
          }
        }
      },
      "created_at": {
        "description": "Creation time.",
        "example": "2014-07-25T19:14:29.503Z",
        "format": "date-time",
        "readOnly": true,
        "type": "string"
      },
      "updated_at": {
        "description": "Update date-time.",
        "example": "2014-07-25T19:14:29.503Z",
        "format": "date-time",
        "readOnly": false,
        "type": "string"
      },
      "email": {
        "description": "Email",
        "format": "email",
        "readOnly": false,
        "type": "string",
        "minLength": 1
      }
    }
  },
  "tests": [
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "id": "01234567-89ab-cdef-0123-456789abcdef",
        "foo": 123,
        "bar": true,
        "address": {
          "address1": "123 Main St",
          "address2": "Apt 101",
          "city": "Anytown",
          "postalCode": "12345",
          "state": "CA",
          "country": "USA"
        },
        "created_at": "2022-01-01T12:00:00.000Z",
        "updated_at": "2022-01-01T12:00:00.000Z",
        "email": "example@example.com"
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "id": "01234567-89ab-cdef-0123-456789abcdef",
        "foo": 123.45,
        "bar": true,
        "address": {
          "address1": "123 Main St",
          "address2": "Apt 101",
          "city": "New York",
          "postalCode": "10001",
          "state": "NY",
          "country": "USA"
        },
        "created_at": "2022-01-01T12:00:00.000Z",
        "updated_at": "2022-01-01T12:00:00.000Z",
        "email": "example@example.com"
      }
    },
    {
      "description": "llama-70b generated negative; focus on format keyword",
      "valid": false,
      "rust_error": "\"01234567-89ab-cdef-0123-456789abcde\" is not a \"uuid\"",
      "python_error": "'01234567-89ab-cdef-0123-456789abcde' is not a 'uuid'\n\nFailed validating 'format' in schema['properties']['id']:\n    {'description': 'Unique identifier.',\n     'readOnly': True,\n     'format': 'uuid',\n     'example': '01234567-89ab-cdef-0123-456789abcdef',\n     'type': 'string',\n     'minLength': 1}\n\nOn instance['id']:\n    '01234567-89ab-cdef-0123-456789abcde'",
      "data": {
        "id": "01234567-89ab-cdef-0123-456789abcde",
        "foo": 123.45,
        "bar": true,
        "address": {
          "address1": "123 Main St",
          "address2": "Apt 101",
          "city": "New York",
          "postalCode": "10001",
          "state": "NY",
          "country": "USA"
        },
        "created_at": "Not a date",
        "updated_at": "2022-01-01T12:00:00.000Z",
        "email": "example@example.com"
      }
    },
    {
      "description": "llama-70b generated negative; focus on minLength keyword",
      "valid": false,
      "rust_error": "\"\" is not a \"uuid\"",
      "python_error": "'' is not a 'uuid'\n\nFailed validating 'format' in schema['properties']['id']:\n    {'description': 'Unique identifier.',\n     'readOnly': True,\n     'format': 'uuid',\n     'example': '01234567-89ab-cdef-0123-456789abcdef',\n     'type': 'string',\n     'minLength': 1}\n\nOn instance['id']:\n    ''",
      "data": {
        "id": "",
        "foo": 123.45,
        "bar": true,
        "address": {
          "address1": "123 Main St",
          "address2": "Apt 101",
          "city": "New York",
          "postalCode": "10001",
          "state": "NY",
          "country": "USA"
        },
        "created_at": "2022-01-01T12:00:00.000Z",
        "updated_at": "2022-01-01T12:00:00.000Z",
        "email": "example@example.com"
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"\" is not a \"uuid\"",
      "python_error": "'' is not a 'uuid'\n\nFailed validating 'format' in schema['properties']['id']:\n    {'description': 'Unique identifier.',\n     'readOnly': True,\n     'format': 'uuid',\n     'example': '01234567-89ab-cdef-0123-456789abcdef',\n     'type': 'string',\n     'minLength': 1}\n\nOn instance['id']:\n    ''",
      "data": {
        "id": "",
        "foo": 123.45,
        "bar": true,
        "address": {
          "address1": "123 Main St",
          "address2": "Apt 101",
          "city": "New York",
          "postalCode": "10001",
          "state": "NY",
          "country": "USA"
        },
        "created_at": "2022-01-01T12:00:00",
        "updated_at": "2022-01-01T12:00:00.000Z",
        "email": "example@example"
      }
    }
  ]
}