{
  "description": "sample Github_easy/o85467.json",
  "meta": {
    "full_size": 680,
    "stripped_size": 342,
    "features": [
      "patternProperties"
    ],
    "raw_features": [
      "$schema",
      "id",
      "properties",
      "type",
      "type:boolean",
      "type:object"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "id": "https://raw.githubusercontent.com/washingtonpost/ans-schema/master/src/main/resources/schema/ans/0.10.1/traits/trait_syndication.json",
    "title": "Syndication",
    "type": "object",
    "description": "Key-boolean pair of syndication services where this article may go",
    "patternProperties": {
      ".*": {
        "type": "boolean"
      }
    },
    "properties": {
      "external_distribution": {
        "description": "Necessary for fulfilling contractual agreements with third party Globe and Mail clients",
        "type": "boolean"
      },
      "search": {
        "description": "Necessary so that we can filter out all articles that editorial has deemed should not be discoverable via search",
        "type": "boolean"
      }
    }
  },
  "tests": [
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "external_distribution": true,
        "search": false,
        "google_news": true,
        "facebook": false
      }
    },
    {
      "description": "llama-70b generated negative; focus on patternProperties keyword",
      "valid": false,
      "rust_error": "\"maybe\" is not of type \"boolean\"",
      "python_error": "'maybe' is not of type 'boolean'\n\nFailed validating 'type' in schema['patternProperties']['.*']:\n    {'type': 'boolean'}\n\nOn instance['google_news']:\n    'maybe'",
      "data": {
        "external_distribution": true,
        "search": false,
        "google_news": "maybe"
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"string\" is not of type \"boolean\"",
      "python_error": "'string' is not of type 'boolean'\n\nFailed validating 'type' in schema['patternProperties']['.*']:\n    {'type': 'boolean'}\n\nOn instance['search']:\n    'string'",
      "data": {
        "external_distribution": true,
        "search": "string",
        "google_news": true,
        "facebook": false,
        "key_with_very_long_name_that_is_over_256_characters_and_may_cause_issues": true,
        "null_key": null,
        "key_with_no_value": "key_with_only_value",
        "key_with_empty_string_value": "",
        "key_with_number_value": 1,
        "key_with_object_value": {},
        "key_with_array_value": [],
        "key_with_boolean_value": true,
        "key_with_nested_object_value": {
          "key": "value"
        },
        "key_with_nested_array_value": [
          "value"
        ],
        "key_with_underscore": true,
        "key_with_numbers_123": true,
        "\u0000": true,
        "\u001b": true,
        "key_with special_characters!@#$%^&*()_+{}|[]:~;?><,./'": true,
        "key_with spaces and tabs": true,
        "key_with new line \n": true,
        "key_with carriage return \r": true,
        "key_with backspace \b": true,
        "key_with null character \u0000": true,
        "key_with non-ASCII characters €": true,
        "key_with chinese characters 世界": true,
        "key_with emojis 😀": true,
        "key_with non-printable characters \u001b": true,
        "key_with zero-width joiner ‍": true,
        "key_with zero-width non-joiner ‌": true,
        "key_with zero-width space ​": true,
        "key_with ideographic space 　": true,
        "key_with zero-width no-break space ﻿": true
      }
    }
  ]
}