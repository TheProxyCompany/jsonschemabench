{
  "description": "sample Github_easy/o25970.json",
  "meta": {
    "full_size": 283,
    "stripped_size": 283,
    "features": [
      "$ref",
      "anyOf",
      "items"
    ],
    "raw_features": [
      "$schema",
      "definitions",
      "properties",
      "required",
      "type",
      "type:[]",
      "type:array",
      "type:number",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "type": "array",
    "items": {
      "anyOf": [
        {
          "$ref": "#/definitions/MyObject"
        },
        {
          "type": "string"
        }
      ]
    },
    "definitions": {
      "MyObject": {
        "type": "object",
        "properties": {
          "array": {
            "type": "array",
            "items": {
              "type": [
                "string",
                "number"
              ]
            }
          }
        },
        "required": [
          "array"
        ]
      }
    },
    "$schema": "http://json-schema.org/draft-04/schema#"
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": [
        {
          "array": [
            "apple",
            1,
            "banana",
            2
          ]
        },
        "Hello, World!",
        {
          "array": [
            3,
            "orange",
            4,
            "grape"
          ]
        },
        "This is a string"
      ]
    },
    {
      "description": "llama-70b generated negative; focus on anyOf keyword",
      "valid": false,
      "rust_error": "{\"array\":[\"apple\",1,\"banana\",2,true]} is not of type \"array\"",
      "python_error": "{'array': ['apple', 1, 'banana', 2, True]} is not of type 'array'\n\nFailed validating 'type' in schema:\n    {'type': 'array',\n     'items': {'anyOf': [{'$ref': '#/definitions/MyObject'},\n                         {'type': 'string'}]},\n     'definitions': {'MyObject': {'type': 'object',\n                                  'properties': {'array': {'type': 'array',\n                                                           'items': {'type': ['string',\n                                                                              'number']}}},\n                                  'required': ['array']}},\n     '$schema': 'http://json-schema.org/draft-04/schema#'}\n\nOn instance:\n    {'array': ['apple', 1, 'banana', 2, True]}",
      "data": {
        "array": [
          "apple",
          1,
          "banana",
          2,
          true
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on type keyword with an array of types",
      "valid": false,
      "rust_error": "{\"type\":\"array\",\"items\":{\"anyOf\":[{\"$ref\":\"#/definitions/MyObject\"},{\"type\":\"string\"}]},\"definitions\":{\"MyObject\":{\"type\":\"object\",\"properties\":{\"array\":{\"type\":\"array\",\"items\":{\"type\":[\"string\",\"number\"]}}},\"required\":[\"array\"]}},\"$schema\":\"http://json-schema.org/draft-04/schema#\"} is not of type \"array\"",
      "python_error": "{'type': 'array', 'items': {'anyOf': [{'$ref': '#/definitions/MyObject'}, {'type': 'string'}]}, 'definitions': {'MyObject': {'type': 'object', 'properties': {'array': {'type': 'array', 'items': {'type': ['string', 'number']}}}, 'required': ['array']}}, '$schema': 'http://json-schema.org/draft-04/schema#'} is not of type 'array'\n\nFailed validating 'type' in schema:\n    {'type': 'array',\n     'items': {'anyOf': [{'$ref': '#/definitions/MyObject'},\n                         {'type': 'string'}]},\n     'definitions': {'MyObject': {'type': 'object',\n                                  'properties': {'array': {'type': 'array',\n                                                           'items': {'type': ['string',\n                                                                              'number']}}},\n                                  'required': ['array']}},\n     '$schema': 'http://json-schema.org/draft-04/schema#'}\n\nOn instance:\n    {'type': 'array',\n     'items': {'anyOf': [{'$ref': '#/definitions/MyObject'},\n    .. (468 more)",
      "data": {
        "type": "array",
        "items": {
          "anyOf": [
            {
              "$ref": "#/definitions/MyObject"
            },
            {
              "type": "string"
            }
          ]
        },
        "definitions": {
          "MyObject": {
            "type": "object",
            "properties": {
              "array": {
                "type": "array",
                "items": {
                  "type": [
                    "string",
                    "number"
                  ]
                }
              }
            },
            "required": [
              "array"
            ]
          }
        },
        "$schema": "http://json-schema.org/draft-04/schema#"
      }
    },
    {
      "description": "llama-70b generated negative; focus on type keyword with an array of types",
      "valid": false,
      "rust_error": "{\"array\":[\"apple\",1,\"banana\",true,-1]} is not of type \"array\"",
      "python_error": "{'array': ['apple', 1, 'banana', True, -1]} is not of type 'array'\n\nFailed validating 'type' in schema:\n    {'type': 'array',\n     'items': {'anyOf': [{'$ref': '#/definitions/MyObject'},\n                         {'type': 'string'}]},\n     'definitions': {'MyObject': {'type': 'object',\n                                  'properties': {'array': {'type': 'array',\n                                                           'items': {'type': ['string',\n                                                                              'number']}}},\n                                  'required': ['array']}},\n     '$schema': 'http://json-schema.org/draft-04/schema#'}\n\nOn instance:\n    {'array': ['apple', 1, 'banana', True, -1]}",
      "data": {
        "array": [
          "apple",
          1,
          "banana",
          true,
          -1
        ]
      }
    }
  ]
}