{
  "description": "sample JsonSchemaStore/tmuxinator.json",
  "meta": {
    "full_size": 2970,
    "stripped_size": 1301,
    "features": [
      "@minmaxLength",
      "additionalProperties",
      "items",
      "oneOf"
    ],
    "raw_features": [
      "$schema",
      "_boolSchema",
      "id",
      "minLength",
      "properties",
      "type",
      "type:array",
      "type:boolean",
      "type:number",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "additionalProperties": false,
    "id": "https://json.schemastore.org/tmuxinator.json",
    "properties": {
      "defaults": {
        "type": "object"
      },
      "name": {
        "oneOf": [
          {
            "type": "number"
          },
          {
            "type": "string",
            "minLength": 1
          }
        ]
      },
      "project_name": {
        "description": "Name of project root (deprecated, use `name`)",
        "type": "string"
      },
      "root": {
        "type": "string"
      },
      "project_root": {
        "description": "Name of project root (deprecated, use `root`)",
        "type": "string"
      },
      "socket_name": {
        "description": "Optional tmux socket.",
        "type": "string"
      },
      "on_project_start": {
        "description": "Runs on project start, always.",
        "type": "string"
      },
      "on_project_first_start": {
        "description": "Run on project start, the first time.",
        "type": "string"
      },
      "on_project_restart": {
        "description": "Run on project start, after the first time.",
        "type": "string"
      },
      "on_project_exit": {
        "description": "Run on project exit (detaching from tmux session).",
        "type": "string"
      },
      "on_project_stop": {
        "description": "Run on project stop.",
        "type": "string"
      },
      "pre": {
        "description": "Runs before everything (deprecated).",
        "type": "string"
      },
      "post": {
        "description": "Runs after everything (deprecated).",
        "type": "string"
      },
      "rbenv": {
        "description": "Specify version for rbenv (deprecated)",
        "type": "string"
      },
      "cli_args": {
        "description": "Pass arguments to tmux (deprecated)",
        "type": "string"
      },
      "tabs": {
        "description": "Specify tabs (deprecated)",
        "type": "array",
        "items": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "object"
            }
          ]
        }
      },
      "pre_window": {
        "description": "Runs in each window and pane before window/pane specific commands. Useful for setting up interpreter versions.",
        "type": "string"
      },
      "tmux_options": {
        "description": "Pass command line options to tmux. Useful for specifying a different tmux.conf.",
        "type": "string"
      },
      "tmux_command": {
        "description": "Change the command to call tmux.  This can be used by derivatives/wrappers like byobu.",
        "type": "string"
      },
      "startup_window": {
        "description": "Specifies (by name or index) which window will be selected on project startup. If not set, the first window is used.",
        "type": "string"
      },
      "startup_pane": {
        "description": "Specifies (by index) which pane of the specified window will be selected on project startup. If not set, the first pane is used.",
        "type": "string"
      },
      "attach": {
        "description": "Controls whether the tmux session should be attached to automatically. Defaults to true.",
        "type": "boolean",
        "default": true
      },
      "tmux_detached": {
        "description": "Deprecated. Use `attach`",
        "type": "boolean"
      },
      "windows": {
        "type": "array",
        "items": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "object",
              "properties": {
                "pre": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "layout": {
                  "description": "The layout setting gets handed down to tmux directly, so you can choose from one of the five tmux standard layouts or specify your own.",
                  "type": "string"
                },
                "panes": {
                  "description": "Panes are optional and are children of window entries.",
                  "type": "array",
                  "items": {
                    "oneOf": [
                      {
                        "type": "number"
                      },
                      {
                        "type": "string",
                        "minLength": 1
                      },
                      {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    ]
                  }
                }
              }
            }
          ]
        }
      }
    },
    "type": "object"
  },
  "tests": [
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "name": "my_project",
        "root": "/path/to/project",
        "socket_name": "my_socket",
        "on_project_start": "echo 'Project started'",
        "on_project_exit": "echo 'Project exited'",
        "pre_window": "source ~/.bashrc",
        "tmux_options": "-f ~/.tmux.conf",
        "startup_window": "main",
        "startup_pane": "1",
        "attach": true,
        "windows": [
          {
            "pre": [
              "cd /path/to/project"
            ],
            "layout": "even-horizontal",
            "panes": [
              "vim",
              [
                "git status",
                "git log"
              ],
              3
            ],
            "name": "main"
          },
          {
            "pre": [
              "cd /path/to/project/logs"
            ],
            "panes": [
              "tail -f error.log",
              "tail -f access.log"
            ],
            "name": "logs"
          }
        ]
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "name": "My Project",
        "root": "/path/to/project",
        "socket_name": "my_socket",
        "on_project_start": "echo 'Project started'",
        "on_project_exit": "echo 'Project exited'",
        "pre_window": "echo 'Setting up interpreter versions'",
        "tmux_options": "-f ~/.tmux.conf",
        "startup_window": "main",
        "startup_pane": "1",
        "attach": true,
        "windows": [
          {
            "layout": "main-vertical",
            "panes": [
              "vim",
              [
                "git status",
                "git log"
              ],
              "rails s"
            ]
          },
          {
            "layout": "main-horizontal",
            "panes": [
              "rails c",
              "tail -f log/development.log"
            ]
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on oneOf keyword",
      "valid": false,
      "rust_error": "{\"layout\":\"main-vertical\",\"panes\":[\"vim\",{\"type\":\"array\",\"items\":[\"git status\",\"git log\"]},\"rails s\"]} is not valid under any of the schemas listed in the 'oneOf' keyword",
      "python_error": "Additional properties are not allowed ('panes' was unexpected)\n\nFailed validating 'additionalProperties' in schema:\n    {'$schema': 'http://json-schema.org/draft-04/schema#',\n     'additionalProperties': False,\n     'id': 'https://json.schemastore.org/tmuxinator.json',\n     'properties': {'defaults': {'type': 'object'},\n                    'name': {'oneOf': [{'type': 'number'},\n                                       {'type': 'string', 'minLength': 1}]},\n                    'project_name': {'description': 'Name of project root '\n                                                    '(deprecated, use '\n                                                    '`name`)',\n                                     'type': 'string'},\n                    'root': {'type': 'string'},\n                    'project_root': {'description': 'Name of project root '\n                                                    '(deprecated, use '\n                                                    '`root`)',\n                                     'ty.. (11221 more)",
      "data": {
        "name": "My Project",
        "root": "/path/to/project",
        "socket_name": "my_socket",
        "on_project_start": "echo 'Project started'",
        "on_project_exit": "echo 'Project exited'",
        "pre_window": "echo 'Setting up interpreter versions'",
        "tmux_options": "-f ~/.tmux.conf",
        "startup_window": "main",
        "startup_pane": "1",
        "attach": true,
        "windows": [
          {
            "layout": "main-vertical",
            "panes": [
              "vim",
              {
                "type": "array",
                "items": [
                  "git status",
                  "git log"
                ]
              },
              "rails s"
            ]
          }
        ],
        "tabs": 123,
        "project_root": 123,
        "defaults": {
          "key": "value"
        },
        "project_name": 123,
        "panes": [
          "rails c",
          "tail -f log/development.log"
        ],
        "tmux_command": 123,
        "tmux_detached": "hello",
        "rbenv": 123,
        "cli_args": 123,
        "pre": 123,
        "post": 123,
        "on_project_first_start": 123,
        "on_project_restart": 123,
        "on_project_stop": 123
      }
    },
    {
      "description": "llama-70b generated negative; focus on minLength keyword",
      "valid": false,
      "rust_error": "\"\" is not valid under any of the schemas listed in the 'oneOf' keyword",
      "python_error": "'' should be non-empty\n\nFailed validating 'minLength' in schema[1]:\n    {'type': 'string', 'minLength': 1}\n\nOn instance:\n    ''",
      "data": {
        "name": "",
        "root": "/path/to/project",
        "socket_name": "my_socket",
        "on_project_start": "echo 'Project started'",
        "on_project_exit": "echo 'Project exited'",
        "pre_window": "echo 'Setting up interpreter versions'",
        "tmux_options": "-f ~/.tmux.conf",
        "startup_window": "main",
        "startup_pane": "1",
        "attach": true,
        "windows": [
          {
            "layout": "main-vertical",
            "panes": [
              "vim",
              [
                "git status",
                "git log"
              ],
              "rails s"
            ]
          },
          {
            "layout": "main-horizontal",
            "panes": [
              "rails c",
              "tail -f log/development.log"
            ]
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "null is not of type \"string\"",
      "python_error": "None is not of type 'string'\n\nFailed validating 'type' in schema['properties']['socket_name']:\n    {'description': 'Optional tmux socket.', 'type': 'string'}\n\nOn instance['socket_name']:\n    None",
      "data": {
        "name": 0,
        "root": "",
        "socket_name": null,
        "on_project_start": "",
        "on_project_exit": "",
        "pre_window": "",
        "tmux_options": "-f",
        "startup_window": "main",
        "startup_pane": "a",
        "attach": true,
        "windows": [
          {
            "layout": "main-vertical",
            "panes": [
              "",
              [
                "git status",
                123
              ],
              "rails s"
            ]
          }
        ]
      }
    }
  ]
}