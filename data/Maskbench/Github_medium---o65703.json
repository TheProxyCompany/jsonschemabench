{
  "description": "sample Github_medium/o65703.json",
  "meta": {
    "full_size": 705,
    "stripped_size": 705,
    "features": [
      "@minmaxLength",
      "items"
    ],
    "raw_features": [
      "$schema",
      "minLength",
      "properties",
      "required",
      "type",
      "type:[]",
      "type:array",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-06/schema#",
    "type": "object",
    "properties": {
      "title": {
        "type": "string"
      },
      "description": {
        "type": [
          "string"
        ]
      },
      "sources": {
        "type": "array",
        "minLength": 1,
        "items": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string"
            },
            "encoding": {
              "type": "string"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      "fields": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "header": {
              "type": "string"
            },
            "aliases": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "columnType": {
              "type": "string"
            },
            "options": {
              "type": "object"
            }
          }
        }
      },
      "postprocessing": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "processor": {
              "type": "string"
            },
            "parameters": {
              "type": "object"
            }
          },
          "required": [
            "processor"
          ]
        }
      }
    },
    "required": [
      "title",
      "sources",
      "fields"
    ]
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "title": "Example Data",
        "description": "This is an example data that validates against the given schema.",
        "sources": [
          {
            "url": "https://example.com/source1.csv",
            "encoding": "utf-8"
          },
          {
            "url": "https://example.com/source2.csv",
            "encoding": "utf-8"
          }
        ],
        "fields": [
          {
            "header": "Name",
            "aliases": [
              "Full Name",
              "User Name"
            ],
            "columnType": "string",
            "options": {
              "maxLength": 255
            }
          },
          {
            "header": "Age",
            "aliases": [
              "User Age"
            ],
            "columnType": "integer",
            "options": {
              "minValue": 18,
              "maxValue": 100
            }
          },
          {
            "header": "Email",
            "aliases": [
              "User Email"
            ],
            "columnType": "email",
            "options": {
              "required": true
            }
          }
        ],
        "postprocessing": [
          {
            "processor": "uppercase",
            "parameters": {
              "fields": [
                "Name",
                "Email"
              ]
            }
          },
          {
            "processor": "trim",
            "parameters": {
              "fields": [
                "Name",
                "Email"
              ]
            }
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on type keyword with an array of types",
      "valid": false,
      "rust_error": "123 is not of type \"string\"",
      "python_error": "123 is not of type 'string'\n\nFailed validating 'type' in schema['properties']['description']:\n    {'type': ['string']}\n\nOn instance['description']:\n    123",
      "data": {
        "title": "Example Data",
        "description": 123,
        "sources": [
          {
            "url": "https://example.com/source1.csv",
            "encoding": "utf-8"
          },
          {
            "url": "https://example.com/source2.csv",
            "encoding": "utf-8"
          }
        ],
        "fields": [
          {
            "header": "Name",
            "aliases": [
              "Full Name",
              "User Name"
            ],
            "columnType": "string",
            "options": {
              "maxLength": 255
            }
          },
          {
            "header": "Age",
            "aliases": [
              "User Age"
            ],
            "columnType": "integer",
            "options": {
              "minValue": 18,
              "maxValue": 100
            }
          },
          {
            "header": "Email",
            "aliases": [
              "User Email"
            ],
            "columnType": "email",
            "options": {
              "required": true
            }
          }
        ],
        "postprocessing": [
          {
            "processor": "uppercase",
            "parameters": {
              "fields": [
                "Name",
                "Email"
              ]
            }
          },
          {
            "processor": "trim",
            "parameters": {
              "fields": [
                "Name",
                "Email"
              ]
            }
          }
        ]
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "title": "Example Data",
        "description": "This is an example data",
        "sources": [
          {
            "url": "https://example.com/source1.csv",
            "encoding": "utf-8"
          },
          {
            "url": "https://example.com/source2.csv",
            "encoding": "utf-16"
          }
        ],
        "fields": [
          {
            "header": "Name",
            "aliases": [
              "Full Name",
              "Username"
            ],
            "columnType": "string",
            "options": {
              "maxLength": 255
            }
          },
          {
            "header": "Age",
            "aliases": [
              "Years Old"
            ],
            "columnType": "integer",
            "options": {
              "minValue": 0,
              "maxValue": 150
            }
          },
          {
            "header": "Email",
            "aliases": [
              "Contact Email"
            ],
            "columnType": "email",
            "options": {
              "required": true
            }
          }
        ],
        "postprocessing": [
          {
            "processor": "trim",
            "parameters": {
              "fields": [
                "Name",
                "Email"
              ]
            }
          },
          {
            "processor": "uppercase",
            "parameters": {
              "fields": [
                "Name"
              ]
            }
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on type keyword with an array of types",
      "valid": false,
      "rust_error": "\"sources\" is a required property",
      "python_error": "'sources' is a required property\n\nFailed validating 'required' in schema:\n    {'$schema': 'http://json-schema.org/draft-06/schema#',\n     'type': 'object',\n     'properties': {'title': {'type': 'string'},\n                    'description': {'type': ['string']},\n                    'sources': {'type': 'array',\n                                'minLength': 1,\n                                'items': {'type': 'object',\n                                          'properties': {'url': {'type': 'string'},\n                                                         'encoding': {'type': 'string'}},\n                                          'required': ['url']}},\n                    'fields': {'type': 'array',\n                               'items': {'type': 'object',\n                                         'properties': {'header': {'type': 'string'},\n                                                        'aliases': {'type': 'array',\n                                                                    'items': {'type': 's.. (722 more)",
      "data": {
        "title": "Example Data",
        "description": "This is an example data"
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "123 is not of type \"string\"",
      "python_error": "123 is not of type 'string'\n\nFailed validating 'type' in schema['properties']['fields']['items']['properties']['aliases']['items']:\n    {'type': 'string'}\n\nOn instance['fields'][0]['aliases'][0]:\n    123",
      "data": {
        "title": "Example Data",
        "description": "This is an example data",
        "sources": [
          {
            "url": "https://example.com/source1.csv",
            "encoding": "unknown-encoding"
          }
        ],
        "fields": [
          {
            "header": "Name",
            "aliases": [
              123,
              "Full Name",
              "Username"
            ],
            "columnType": "string",
            "options": {
              "maxLength": 255
            }
          },
          {
            "header": "Age",
            "aliases": [
              "Years Old"
            ],
            "columnType": "integer",
            "options": {
              "minValue": -1,
              "maxValue": 150
            }
          },
          {
            "header": "Email",
            "aliases": [
              "Contact Email"
            ],
            "columnType": "email",
            "options": {
              "required": "true"
            }
          }
        ],
        "postprocessing": [
          {
            "processor": "trim",
            "parameters": {
              "fields": [
                123
              ]
            }
          },
          {
            "processor": "uppercase",
            "parameters": {
              "fields": [
                "unknown-field"
              ]
            }
          }
        ]
      }
    }
  ]
}