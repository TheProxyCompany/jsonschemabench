{
  "description": "sample Github_easy/o63554.json",
  "meta": {
    "full_size": 883,
    "stripped_size": 358,
    "features": [
      "items"
    ],
    "raw_features": [
      "$id",
      "$schema",
      "properties",
      "required",
      "type",
      "type:array",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-07/schema",
    "$id": "https://raw.githubusercontent.com/nint8835/jigsaw/master/plugin.schema.json",
    "title": "Jigsaw Plugin Manifest",
    "description": "A plugin manifest for a Jigsaw plugin",
    "type": "object",
    "properties": {
      "name": {
        "description": "A unique name for the plugin",
        "type": "string"
      },
      "dependencies": {
        "description": "A list of plugins that must be loaded before this plugin can be loaded",
        "type": "array",
        "items": {
          "description": "Name of required plugin",
          "type": "string"
        },
        "default": []
      },
      "module_name": {
        "description": "The name of the module that will be created from importing this plugin",
        "type": "string"
      },
      "path": {
        "description": "The path of the file that contains the main plugin class",
        "type": "string",
        "default": "__init__.py"
      },
      "main_class": {
        "description": "The name of the main plugin class",
        "type": "string",
        "default": "Plugin"
      }
    },
    "required": [
      "name"
    ]
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "name": "MyPlugin",
        "dependencies": [
          "PluginA",
          "PluginB"
        ],
        "module_name": "my_plugin",
        "path": "my_plugin.py",
        "main_class": "MyPluginClass"
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "123 is not of type \"string\"",
      "python_error": "123 is not of type 'string'\n\nFailed validating 'type' in schema['properties']['name']:\n    {'description': 'A unique name for the plugin', 'type': 'string'}\n\nOn instance['name']:\n    123",
      "data": {
        "name": 123,
        "dependencies": [
          "PluginA",
          "PluginB"
        ],
        "module_name": "my_plugin",
        "path": "my_plugin.py",
        "main_class": "MyPluginClass"
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "123 is not of type \"string\"",
      "python_error": "123 is not of type 'string'\n\nFailed validating 'type' in schema['properties']['dependencies']['items']:\n    {'description': 'Name of required plugin', 'type': 'string'}\n\nOn instance['dependencies'][1]:\n    123",
      "data": {
        "name": "MyPlugin",
        "dependencies": [
          "PluginA",
          123,
          "PluginB"
        ],
        "module_name": "my_plugin",
        "path": "my_plugin.py",
        "main_class": "MyPluginClass"
      }
    }
  ]
}