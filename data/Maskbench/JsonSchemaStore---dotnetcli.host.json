{
  "description": "sample JsonSchemaStore/dotnetcli.host.json",
  "meta": {
    "full_size": 520,
    "stripped_size": 465,
    "features": [
      "$ref",
      "additionalProperties",
      "additionalProperties:object",
      "anyOf",
      "items",
      "pattern"
    ],
    "raw_features": [
      "$schema",
      "definitions",
      "id",
      "properties",
      "type",
      "type:array",
      "type:boolean",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "definitions": {
      "symbolInfo": {
        "properties": {
          "isHidden": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "pattern": "^(true|false)$"
              }
            ]
          },
          "longName": {
            "type": "string"
          },
          "shortName": {
            "type": "string"
          }
        }
      }
    },
    "id": "https://json.schemastore.org/dotnetcli.host.json",
    "properties": {
      "symbolInfo": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/definitions/symbolInfo"
        }
      },
      "usageExamples": {
        "type": "array",
        "items": {
          "type": "string"
        }
      }
    },
    "title": "JSON schema for .NET CLI template host files",
    "type": "object"
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "symbolInfo": {
          "MySymbol": {
            "isHidden": false,
            "longName": "My Long Symbol Name",
            "shortName": "MySymbol"
          },
          "AnotherSymbol": {
            "isHidden": "true",
            "longName": "Another Long Symbol Name",
            "shortName": "AnotherSymbol"
          }
        },
        "usageExamples": [
          "Example 1: dotnet mycommand",
          "Example 2: dotnet mycommand --option1",
          "Example 3: dotnet mycommand --option1 --option2"
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on pattern keyword",
      "valid": false,
      "rust_error": "\"tru\" is not valid under any of the schemas listed in the 'anyOf' keyword",
      "python_error": "'tru' is not valid under any of the given schemas\n\nFailed validating 'anyOf' in schema['properties']['symbolInfo']['additionalProperties']['properties']['isHidden']:\n    {'anyOf': [{'type': 'boolean'}, {'pattern': '^(true|false)$'}]}\n\nOn instance['symbolInfo']['MySymbol']['isHidden']:\n    'tru'",
      "data": {
        "symbolInfo": {
          "MySymbol": {
            "isHidden": "tru",
            "longName": "My Long Symbol Name",
            "shortName": "MySymbol"
          },
          "AnotherSymbol": {
            "isHidden": "true",
            "longName": "Another Long Symbol Name",
            "shortName": "AnotherSymbol"
          }
        },
        "usageExamples": [
          "Example 1: dotnet mycommand",
          "Example 2: dotnet mycommand --option1",
          "Example 3: dotnet mycommand --option1 --option2"
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on anyOf keyword",
      "valid": false,
      "rust_error": "\"InvalidValue\" is not valid under any of the schemas listed in the 'anyOf' keyword",
      "python_error": "'InvalidValue' is not valid under any of the given schemas\n\nFailed validating 'anyOf' in schema['properties']['symbolInfo']['additionalProperties']['properties']['isHidden']:\n    {'anyOf': [{'type': 'boolean'}, {'pattern': '^(true|false)$'}]}\n\nOn instance['symbolInfo']['MySymbol']['isHidden']:\n    'InvalidValue'",
      "data": {
        "symbolInfo": {
          "MySymbol": {
            "isHidden": "InvalidValue",
            "longName": "My Long Symbol Name",
            "shortName": "MySymbol"
          },
          "AnotherSymbol": {
            "isHidden": "true",
            "longName": "Another Long Symbol Name",
            "shortName": "AnotherSymbol"
          }
        },
        "usageExamples": [
          "Example 1: dotnet mycommand",
          "Example 2: dotnet mycommand --option1",
          "Example 3: dotnet mycommand --option1 --option2"
        ]
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"yes\" is not valid under any of the schemas listed in the 'anyOf' keyword",
      "python_error": "'yes' is not valid under any of the given schemas\n\nFailed validating 'anyOf' in schema['properties']['symbolInfo']['additionalProperties']['properties']['isHidden']:\n    {'anyOf': [{'type': 'boolean'}, {'pattern': '^(true|false)$'}]}\n\nOn instance['symbolInfo']['MySymbol']['isHidden']:\n    'yes'",
      "data": {
        "symbolInfo": {
          "MySymbol": {
            "isHidden": "yes",
            "longName": "My Long Symbol Name",
            "shortName": "MySymbol"
          },
          "AnotherSymbol": {
            "isHidden": "true",
            "longName": "Another Long Symbol Name",
            "shortName": "AnotherSymbol"
          }
        },
        "usageExamples": [
          "Example 1: dotnet mycommand",
          "Example 2: dotnet mycommand --option1",
          "Example 3: dotnet mycommand --option1 --option2"
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on pattern keyword",
      "valid": false,
      "rust_error": "\" TruE\" is not valid under any of the schemas listed in the 'anyOf' keyword",
      "python_error": "' TruE' is not valid under any of the given schemas\n\nFailed validating 'anyOf' in schema['properties']['symbolInfo']['additionalProperties']['properties']['isHidden']:\n    {'anyOf': [{'type': 'boolean'}, {'pattern': '^(true|false)$'}]}\n\nOn instance['symbolInfo']['MySymbol']['isHidden']:\n    ' TruE'",
      "data": {
        "symbolInfo": {
          "MySymbol": {
            "isHidden": " TruE",
            "longName": "My Long Symbol Name",
            "shortName": "MySymbol"
          },
          "AnotherSymbol": {
            "isHidden": "true",
            "longName": "Another Long Symbol Name",
            "shortName": "AnotherSymbol"
          }
        },
        "usageExamples": [
          "Example 1: dotnet mycommand",
          "Example 2: dotnet mycommand --option1",
          "Example 3: dotnet mycommand --option1 --option2"
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on anyOf keyword",
      "valid": false,
      "rust_error": "\"TRue\" is not valid under any of the schemas listed in the 'anyOf' keyword",
      "python_error": "'TRue' is not valid under any of the given schemas\n\nFailed validating 'anyOf' in schema['properties']['symbolInfo']['additionalProperties']['properties']['isHidden']:\n    {'anyOf': [{'type': 'boolean'}, {'pattern': '^(true|false)$'}]}\n\nOn instance['symbolInfo']['MySymbol']['isHidden']:\n    'TRue'",
      "data": {
        "symbolInfo": {
          "MySymbol": {
            "isHidden": "TRue",
            "longName": "My Long Symbol Name",
            "shortName": "MySymbol"
          },
          "AnotherSymbol": {
            "isHidden": "true",
            "longName": "Another Long Symbol Name",
            "shortName": "AnotherSymbol"
          }
        },
        "usageExamples": [
          "Example 1: dotnet mycommand",
          "Example 2: dotnet mycommand --option1",
          "Example 3: dotnet mycommand --option1 --option2"
        ]
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"tru\" is not valid under any of the schemas listed in the 'anyOf' keyword",
      "python_error": "123 is not of type 'string'\n\nFailed validating 'type' in schema['properties']['usageExamples']['items']:\n    {'type': 'string'}\n\nOn instance['usageExamples'][3]:\n    123",
      "data": {
        "symbolInfo": {
          "MySymbol": {
            "isHidden": "tru",
            "longName": "My Long Symbol Name",
            "shortName": "MySymbol"
          },
          "AnotherSymbol": {
            "isHidden": "true",
            "longName": "Another Long Symbol Name",
            "shortName": "AnotherSymbol"
          }
        },
        "usageExamples": [
          "Example 1: dotnet mycommand",
          "Example 2: dotnet mycommand --option1",
          "Example 3: dotnet mycommand --option1 --option2",
          123
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on pattern keyword",
      "valid": false,
      "rust_error": "\"TrUe\" is not valid under any of the schemas listed in the 'anyOf' keyword",
      "python_error": "'TrUe' is not valid under any of the given schemas\n\nFailed validating 'anyOf' in schema['properties']['symbolInfo']['additionalProperties']['properties']['isHidden']:\n    {'anyOf': [{'type': 'boolean'}, {'pattern': '^(true|false)$'}]}\n\nOn instance['symbolInfo']['MySymbol']['isHidden']:\n    'TrUe'",
      "data": {
        "symbolInfo": {
          "MySymbol": {
            "isHidden": "TrUe",
            "longName": "My Long Symbol Name",
            "shortName": "MySymbol"
          },
          "AnotherSymbol": {
            "isHidden": "true",
            "longName": "Another Long Symbol Name",
            "shortName": "AnotherSymbol"
          }
        },
        "usageExamples": [
          "Example 1: dotnet mycommand",
          "Example 2: dotnet mycommand --option1",
          "Example 3: dotnet mycommand --option1 --option2"
        ]
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"True\" is not valid under any of the schemas listed in the 'anyOf' keyword",
      "python_error": "2147483647 is not of type 'string'\n\nFailed validating 'type' in schema['properties']['usageExamples']['items']:\n    {'type': 'string'}\n\nOn instance['usageExamples'][4]:\n    2147483647",
      "data": {
        "symbolInfo": {
          "MySymbol": {
            "isHidden": "True",
            "longName": "My Long Symbol Name",
            "shortName": "MySymbol"
          },
          "AnotherSymbol": {
            "isHidden": false,
            "longName": "Another Long Symbol Name",
            "shortName": "AnotherSymbol"
          }
        },
        "usageExamples": [
          "Example 1: dotnet mycommand",
          "Example 2: dotnet mycommand --option1",
          123,
          -2147483648,
          2147483647
        ]
      }
    }
  ]
}