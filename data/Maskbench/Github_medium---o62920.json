{
  "description": "sample Github_medium/o62920.json",
  "meta": {
    "full_size": 812,
    "stripped_size": 500,
    "features": [
      "@minmaxLength",
      "additionalProperties"
    ],
    "raw_features": [
      "$schema",
      "_boolSchema",
      "maxLength",
      "minLength",
      "properties",
      "required",
      "type",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "title": "UMM-Sub",
    "type": "object",
    "additionalProperties": false,
    "properties": {
      "Name": {
        "description": "The name of a subscription.",
        "type": "string",
        "minLength": 1,
        "maxLength": 80
      },
      "SubscriberId": {
        "description": "The userid of the subscriber.",
        "type": "string",
        "minLength": 1,
        "maxLength": 30
      },
      "EmailAddress": {
        "description": "The email address of the subscriber.",
        "type": "string",
        "minLength": 1,
        "maxLength": 255
      },
      "CollectionConceptId": {
        "description": "The collection concept id of the granules subscribed.",
        "type": "string",
        "minLength": 1,
        "maxLength": 255
      },
      "Query": {
        "description": "The search query for the granules that matches the subscription.",
        "type": "string",
        "minLength": 1,
        "maxLength": 40000
      }
    },
    "required": [
      "Name",
      "SubscriberId",
      "EmailAddress",
      "CollectionConceptId",
      "Query"
    ]
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "Name": "Test Subscription",
        "SubscriberId": "testuser123",
        "EmailAddress": "test@example.com",
        "CollectionConceptId": "C123456789-EDSC",
        "Query": "platform=landsat&instrument=OLI_TIRS&cloud_cover=0-10"
      }
    },
    {
      "description": "llama-70b generated negative; focus on minLength keyword or maxLength keyword",
      "valid": false,
      "rust_error": "\"\" is shorter than 1 character",
      "python_error": "'' should be non-empty\n\nFailed validating 'minLength' in schema['properties']['Name']:\n    {'description': 'The name of a subscription.',\n     'type': 'string',\n     'minLength': 1,\n     'maxLength': 80}\n\nOn instance['Name']:\n    ''",
      "data": {
        "Name": "",
        "SubscriberId": "testuser123",
        "EmailAddress": "test@example.com",
        "CollectionConceptId": "C123456789-EDSC",
        "Query": "platform=landsat&instrument=OLI_TIRS&cloud_cover=0-10"
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "Name": "My Subscription",
        "SubscriberId": "johnDoe123",
        "EmailAddress": "john.doe@example.com",
        "CollectionConceptId": "C123456789-EDSC",
        "Query": "platform=landsat-8 AND cloud_cover=0"
      }
    },
    {
      "description": "llama-70b generated negative; focus on minLength keyword or maxLength keyword",
      "valid": false,
      "rust_error": "\"\" is shorter than 1 character",
      "python_error": "'' should be non-empty\n\nFailed validating 'minLength' in schema['properties']['Name']:\n    {'description': 'The name of a subscription.',\n     'type': 'string',\n     'minLength': 1,\n     'maxLength': 80}\n\nOn instance['Name']:\n    ''",
      "data": {
        "Name": "",
        "SubscriberId": "johnDoe123",
        "EmailAddress": "john.doe@example.com",
        "CollectionConceptId": "C123456789-EDSC",
        "Query": "platform=landsat-8 AND cloud_cover=0"
      }
    }
  ]
}