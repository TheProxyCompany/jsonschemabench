{
  "description": "sample Github_easy/o69838.json",
  "meta": {
    "full_size": 261,
    "stripped_size": 261,
    "features": [
      "items"
    ],
    "raw_features": [
      "$schema",
      "properties",
      "type",
      "type:array",
      "type:boolean",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "type": "object",
    "properties": {
      "box-for": {
        "type": "string"
      },
      "multiline": {
        "type": "boolean"
      },
      "boxes": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "label": {
              "type": "string"
            },
            "value": {
              "type": "string"
            }
          }
        }
      }
    }
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "box-for": "example",
        "multiline": true,
        "boxes": [
          {
            "label": "Box 1",
            "value": "Value 1"
          },
          {
            "label": "Box 2",
            "value": "Value 2"
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "123 is not of type \"string\"",
      "python_error": "123 is not of type 'string'\n\nFailed validating 'type' in schema['properties']['box-for']:\n    {'type': 'string'}\n\nOn instance['box-for']:\n    123",
      "data": {
        "box-for": 123,
        "multiline": true,
        "boxes": [
          {
            "label": "Box 1",
            "value": "Value 1"
          },
          {
            "label": "Box 2",
            "value": "Value 2"
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "null is not of type \"string\"",
      "python_error": "None is not of type 'string'\n\nFailed validating 'type' in schema['properties']['box-for']:\n    {'type': 'string'}\n\nOn instance['box-for']:\n    None",
      "data": {
        "box-for": null,
        "multiline": true,
        "boxes": [
          {
            "label": "Box 1",
            "value": "Value 1"
          },
          {
            "label": "Box 2",
            "value": "Value 2"
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "123 is not of type \"string\"",
      "python_error": "123 is not of type 'string'\n\nFailed validating 'type' in schema['properties']['boxes']['items']['properties']['value']:\n    {'type': 'string'}\n\nOn instance['boxes'][0]['value']:\n    123",
      "data": {
        "box-for": "example",
        "multiline": true,
        "boxes": [
          {
            "label": "Box 1",
            "value": 123
          },
          {
            "label": "Box 2",
            "value": "Value 2"
          }
        ]
      }
    }
  ]
}