{
  "description": "sample Github_easy/o76909.json",
  "meta": {
    "full_size": 159,
    "stripped_size": 159,
    "features": [
      "@minmaxLength",
      "format",
      "format:email"
    ],
    "raw_features": [
      "maxLength",
      "minLength",
      "properties",
      "required",
      "type",
      "type:[]",
      "type:null",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "properties": {
      "email": {
        "format": "email",
        "type": [
          "string",
          "null"
        ]
      },
      "name": {
        "maxLength": 255,
        "minLength": 2,
        "type": "string"
      }
    },
    "required": [
      "name"
    ],
    "type": "object"
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "email": "example@example.com",
        "name": "John Doe"
      }
    },
    {
      "description": "llama-70b generated negative; focus on minLength keyword or maxLength keyword",
      "valid": false,
      "rust_error": "\"a\" is shorter than 2 characters",
      "python_error": "'a' is too short\n\nFailed validating 'minLength' in schema['properties']['name']:\n    {'maxLength': 255, 'minLength': 2, 'type': 'string'}\n\nOn instance['name']:\n    'a'",
      "data": {
        "email": "example@example.com",
        "name": "a"
      }
    },
    {
      "description": "llama-70b generated negative; focus on format keyword",
      "valid": false,
      "rust_error": "\"invalid_email\" is not a \"email\"",
      "python_error": "'invalid_email' is not a 'email'\n\nFailed validating 'format' in schema['properties']['email']:\n    {'format': 'email', 'type': ['string', 'null']}\n\nOn instance['email']:\n    'invalid_email'",
      "data": {
        "email": "invalid_email",
        "name": "John Doe"
      }
    },
    {
      "description": "llama-70b generated negative; focus on type keyword with an array of types",
      "valid": false,
      "rust_error": "123 is not of types \"null\", \"string\"",
      "python_error": "123 is not of type 'string', 'null'\n\nFailed validating 'type' in schema['properties']['email']:\n    {'format': 'email', 'type': ['string', 'null']}\n\nOn instance['email']:\n    123",
      "data": {
        "email": 123,
        "name": "John Doe"
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"J\" is shorter than 2 characters",
      "python_error": "'J' is too short\n\nFailed validating 'minLength' in schema['properties']['name']:\n    {'maxLength': 255, 'minLength': 2, 'type': 'string'}\n\nOn instance['name']:\n    'J'",
      "data": {
        "email": "example@example.com",
        "name": "J"
      }
    },
    {
      "description": "llama-70b generated negative; focus on format keyword",
      "valid": false,
      "rust_error": "\"example\" is not a \"email\"",
      "python_error": "'example' is not a 'email'\n\nFailed validating 'format' in schema['properties']['email']:\n    {'format': 'email', 'type': ['string', 'null']}\n\nOn instance['email']:\n    'example'",
      "data": {
        "email": "example",
        "name": "John Doe"
      }
    },
    {
      "description": "llama-70b generated negative; focus on format keyword",
      "valid": false,
      "rust_error": "\"example.example.com\" is not a \"email\"",
      "python_error": "'example.example.com' is not a 'email'\n\nFailed validating 'format' in schema['properties']['email']:\n    {'format': 'email', 'type': ['string', 'null']}\n\nOn instance['email']:\n    'example.example.com'",
      "data": {
        "email": "example.example.com",
        "name": "John Doe"
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"a\" is shorter than 2 characters",
      "python_error": "'a' is too short\n\nFailed validating 'minLength' in schema['properties']['name']:\n    {'maxLength': 255, 'minLength': 2, 'type': 'string'}\n\nOn instance['name']:\n    'a'",
      "data": {
        "email": "example@example",
        "name": "a"
      }
    }
  ]
}