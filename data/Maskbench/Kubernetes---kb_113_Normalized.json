{
  "description": "sample Kubernetes/kb_113_Normalized.json",
  "meta": {
    "full_size": 1094,
    "stripped_size": 280,
    "features": [],
    "raw_features": [
      "properties",
      "required",
      "type",
      "type:[]",
      "type:null",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "description": "ConfigMapNodeConfigSource contains the information to reference a ConfigMap as a config source for the Node.",
    "properties": {
      "kubeletConfigKey": {
        "description": "KubeletConfigKey declares which key of the referenced ConfigMap corresponds to the KubeletConfiguration structure This field is required in all cases.",
        "type": [
          "string",
          "null"
        ]
      },
      "name": {
        "description": "Name is the metadata.name of the referenced ConfigMap. This field is required in all cases.",
        "type": [
          "string",
          "null"
        ]
      },
      "namespace": {
        "description": "Namespace is the metadata.namespace of the referenced ConfigMap. This field is required in all cases.",
        "type": [
          "string",
          "null"
        ]
      },
      "resourceVersion": {
        "description": "ResourceVersion is the metadata.ResourceVersion of the referenced ConfigMap. This field is forbidden in Node.Spec, and required in Node.Status.",
        "type": [
          "string",
          "null"
        ]
      },
      "uid": {
        "description": "UID is the metadata.UID of the referenced ConfigMap. This field is forbidden in Node.Spec, and required in Node.Status.",
        "type": [
          "string",
          "null"
        ]
      }
    },
    "required": [
      "namespace",
      "name",
      "kubeletConfigKey"
    ],
    "type": "object"
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "kubeletConfigKey": "kubelet-config",
        "name": "node-config",
        "namespace": "default",
        "resourceVersion": "123456789",
        "uid": "12345678-1234-1234-1234-123456789012"
      }
    },
    {
      "description": "llama-70b generated negative; focus on type keyword with an array of types",
      "valid": false,
      "rust_error": "123 is not of types \"null\", \"string\"",
      "python_error": "123 is not of type 'string', 'null'\n\nFailed validating 'type' in schema['properties']['kubeletConfigKey']:\n    {'description': 'KubeletConfigKey declares which key of the referenced '\n                    'ConfigMap corresponds to the KubeletConfiguration '\n                    'structure This field is required in all cases.',\n     'type': ['string', 'null']}\n\nOn instance['kubeletConfigKey']:\n    123",
      "data": {
        "kubeletConfigKey": 123,
        "name": "node-config",
        "namespace": "default",
        "resourceVersion": "123456789",
        "uid": "12345678-1234-1234-1234-123456789012"
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "kubeletConfigKey": "kubelet-config",
        "name": "node-config",
        "namespace": "default",
        "resourceVersion": "12345",
        "uid": "1234567890abcdef"
      }
    },
    {
      "description": "llama-70b generated negative; focus on type keyword with an array of types",
      "valid": false,
      "rust_error": "12345 is not of types \"null\", \"string\"",
      "python_error": "12345 is not of type 'string', 'null'\n\nFailed validating 'type' in schema['properties']['kubeletConfigKey']:\n    {'description': 'KubeletConfigKey declares which key of the referenced '\n                    'ConfigMap corresponds to the KubeletConfiguration '\n                    'structure This field is required in all cases.',\n     'type': ['string', 'null']}\n\nOn instance['kubeletConfigKey']:\n    12345",
      "data": {
        "kubeletConfigKey": 12345,
        "name": "node-config",
        "namespace": "default",
        "resourceVersion": "12345",
        "uid": "1234567890abcdef"
      }
    }
  ]
}