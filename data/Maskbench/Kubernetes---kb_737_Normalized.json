{
  "description": "sample Kubernetes/kb_737_Normalized.json",
  "meta": {
    "full_size": 12075,
    "stripped_size": 4272,
    "features": [
      "$ref",
      "items"
    ],
    "raw_features": [
      "definitions",
      "properties",
      "required",
      "type",
      "type:[]",
      "type:array",
      "type:boolean",
      "type:integer",
      "type:null",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "definitions": {
      "https:__kubernetesjsonschema_dev_master__defs_json_defs_io_k8s_api_core_v1_ContainerState": {
        "description": "ContainerState holds a possible state of container. Only one of its members may be specified. If none of them is specified, the default one is ContainerStateWaiting.",
        "properties": {
          "running": {
            "$ref": "#/definitions/https:__kubernetesjsonschema_dev_master__defs_json_defs_io_k8s_api_core_v1_ContainerStateRunning",
            "description": "Details about a running container"
          },
          "terminated": {
            "$ref": "#/definitions/https:__kubernetesjsonschema_dev_master__defs_json_defs_io_k8s_api_core_v1_ContainerStateTerminated",
            "description": "Details about a terminated container"
          },
          "waiting": {
            "$ref": "#/definitions/https:__kubernetesjsonschema_dev_master__defs_json_defs_io_k8s_api_core_v1_ContainerStateWaiting",
            "description": "Details about a waiting container"
          }
        },
        "type": "object"
      },
      "https:__kubernetesjsonschema_dev_master__defs_json_defs_io_k8s_api_core_v1_ContainerStateRunning": {
        "description": "ContainerStateRunning is a running state of a container.",
        "properties": {
          "startedAt": {
            "$ref": "#/definitions/https:__kubernetesjsonschema_dev_master__defs_json_defs_io_k8s_apimachinery_pkg_apis_meta_v1_Time",
            "description": "Time at which the container was last (re-)started"
          }
        },
        "type": "object"
      },
      "https:__kubernetesjsonschema_dev_master__defs_json_defs_io_k8s_api_core_v1_ContainerStateTerminated": {
        "description": "ContainerStateTerminated is a terminated state of a container.",
        "properties": {
          "containerID": {
            "description": "Container's ID in the format 'docker://<container_id>'",
            "type": "string"
          },
          "exitCode": {
            "_format": "int32",
            "description": "Exit status from the last termination of the container",
            "type": "integer"
          },
          "finishedAt": {
            "$ref": "#/definitions/https:__kubernetesjsonschema_dev_master__defs_json_defs_io_k8s_apimachinery_pkg_apis_meta_v1_Time",
            "description": "Time at which the container last terminated"
          },
          "message": {
            "description": "Message regarding the last termination of the container",
            "type": "string"
          },
          "reason": {
            "description": "(brief) reason from the last termination of the container",
            "type": "string"
          },
          "signal": {
            "_format": "int32",
            "description": "Signal from the last termination of the container",
            "type": "integer"
          },
          "startedAt": {
            "$ref": "#/definitions/https:__kubernetesjsonschema_dev_master__defs_json_defs_io_k8s_apimachinery_pkg_apis_meta_v1_Time",
            "description": "Time at which previous execution of the container started"
          }
        },
        "required": [
          "exitCode"
        ],
        "type": "object"
      },
      "https:__kubernetesjsonschema_dev_master__defs_json_defs_io_k8s_api_core_v1_ContainerStateWaiting": {
        "description": "ContainerStateWaiting is a waiting state of a container.",
        "properties": {
          "message": {
            "description": "Message regarding why the container is not yet running.",
            "type": "string"
          },
          "reason": {
            "description": "(brief) reason the container is not yet running.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "https:__kubernetesjsonschema_dev_master__defs_json_defs_io_k8s_api_core_v1_ContainerStatus": {
        "description": "ContainerStatus contains details for the current status of this container.",
        "properties": {
          "containerID": {
            "description": "Container's ID in the format 'docker://<container_id>'.",
            "type": "string"
          },
          "image": {
            "description": "The image the container is running. More info: https://kubernetes.io/docs/concepts/containers/images",
            "type": "string"
          },
          "imageID": {
            "description": "ImageID of the container's image.",
            "type": "string"
          },
          "lastState": {
            "$ref": "#/definitions/https:__kubernetesjsonschema_dev_master__defs_json_defs_io_k8s_api_core_v1_ContainerState",
            "description": "Details about the container's last termination condition."
          },
          "name": {
            "description": "This must be a DNS_LABEL. Each container in a pod must have a unique name. Cannot be updated.",
            "type": "string"
          },
          "ready": {
            "description": "Specifies whether the container has passed its readiness probe.",
            "type": "boolean"
          },
          "restartCount": {
            "_format": "int32",
            "description": "The number of times the container has been restarted, currently based on the number of dead containers that have not yet been removed. Note that this is calculated from dead containers. But those containers are subject to garbage collection. This value will get capped at 5 by GC.",
            "type": "integer"
          },
          "started": {
            "description": "Specifies whether the container has passed its startup probe. Initialized as false, becomes true after startupProbe is considered successful. Resets to false when the container is restarted, or if kubelet loses state temporarily. Is always true when no startupProbe is defined.",
            "type": "boolean"
          },
          "state": {
            "$ref": "#/definitions/https:__kubernetesjsonschema_dev_master__defs_json_defs_io_k8s_api_core_v1_ContainerState",
            "description": "Details about the container's current condition."
          }
        },
        "required": [
          "name",
          "ready",
          "restartCount",
          "image",
          "imageID"
        ],
        "type": "object"
      },
      "https:__kubernetesjsonschema_dev_master__defs_json_defs_io_k8s_api_core_v1_PodCondition": {
        "description": "PodCondition contains details for the current condition of this pod.",
        "properties": {
          "lastProbeTime": {
            "$ref": "#/definitions/https:__kubernetesjsonschema_dev_master__defs_json_defs_io_k8s_apimachinery_pkg_apis_meta_v1_Time",
            "description": "Last time we probed the condition."
          },
          "lastTransitionTime": {
            "$ref": "#/definitions/https:__kubernetesjsonschema_dev_master__defs_json_defs_io_k8s_apimachinery_pkg_apis_meta_v1_Time",
            "description": "Last time the condition transitioned from one status to another."
          },
          "message": {
            "description": "Human-readable message indicating details about last transition.",
            "type": "string"
          },
          "reason": {
            "description": "Unique, one-word, CamelCase reason for the condition's last transition.",
            "type": "string"
          },
          "status": {
            "description": "Status is the status of the condition. Can be True, False, Unknown. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-conditions",
            "type": "string"
          },
          "type": {
            "description": "Type is the type of the condition. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-conditions",
            "type": "string"
          }
        },
        "required": [
          "type",
          "status"
        ],
        "type": "object"
      },
      "https:__kubernetesjsonschema_dev_master__defs_json_defs_io_k8s_api_core_v1_PodIP": {
        "description": "IP address information for entries in the (plural) PodIPs field. Each entry includes:\n   IP: An IP address allocated to the pod. Routable at least within the cluster.",
        "properties": {
          "ip": {
            "description": "ip is an IP address (IPv4 or IPv6) assigned to the pod",
            "type": "string"
          }
        },
        "type": "object"
      },
      "https:__kubernetesjsonschema_dev_master__defs_json_defs_io_k8s_apimachinery_pkg_apis_meta_v1_Time": {
        "_format": "date-time",
        "description": "Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.",
        "type": "string"
      }
    },
    "description": "PodStatus represents information about the status of a pod. Status may trail the actual state of a system, especially if the node that hosts the pod cannot contact the control plane.",
    "properties": {
      "conditions": {
        "description": "Current service state of pod. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-conditions",
        "items": {
          "$ref": "#/definitions/https:__kubernetesjsonschema_dev_master__defs_json_defs_io_k8s_api_core_v1_PodCondition"
        },
        "type": [
          "array",
          "null"
        ],
        "x-kubernetes-patch-merge-key": "type",
        "x-kubernetes-patch-strategy": "merge"
      },
      "containerStatuses": {
        "description": "The list has one entry per container in the manifest. Each entry is currently the output of `docker inspect`. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-and-container-status",
        "items": {
          "$ref": "#/definitions/https:__kubernetesjsonschema_dev_master__defs_json_defs_io_k8s_api_core_v1_ContainerStatus"
        },
        "type": [
          "array",
          "null"
        ]
      },
      "ephemeralContainerStatuses": {
        "description": "Status for any ephemeral containers that have run in this pod. This field is alpha-level and is only populated by servers that enable the EphemeralContainers feature.",
        "items": {
          "$ref": "#/definitions/https:__kubernetesjsonschema_dev_master__defs_json_defs_io_k8s_api_core_v1_ContainerStatus"
        },
        "type": [
          "array",
          "null"
        ]
      },
      "hostIP": {
        "description": "IP address of the host to which the pod is assigned. Empty if not yet scheduled.",
        "type": [
          "string",
          "null"
        ]
      },
      "initContainerStatuses": {
        "description": "The list has one entry per init container in the manifest. The most recent successful init container will have ready = true, the most recently started container will have startTime set. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-and-container-status",
        "items": {
          "$ref": "#/definitions/https:__kubernetesjsonschema_dev_master__defs_json_defs_io_k8s_api_core_v1_ContainerStatus"
        },
        "type": [
          "array",
          "null"
        ]
      },
      "message": {
        "description": "A human readable message indicating details about why the pod is in this condition.",
        "type": [
          "string",
          "null"
        ]
      },
      "nominatedNodeName": {
        "description": "nominatedNodeName is set only when this pod preempts other pods on the node, but it cannot be scheduled right away as preemption victims receive their graceful termination periods. This field does not guarantee that the pod will be scheduled on this node. Scheduler may decide to place the pod elsewhere if other nodes become available sooner. Scheduler may also decide to give the resources on this node to a higher priority pod that is created after preemption. As a result, this field may be different than PodSpec.nodeName when the pod is scheduled.",
        "type": [
          "string",
          "null"
        ]
      },
      "phase": {
        "description": "The phase of a Pod is a simple, high-level summary of where the Pod is in its lifecycle. The conditions array, the reason and message fields, and the individual container status arrays contain more detail about the pod's status. There are five possible phase values:\n\nPending: The pod has been accepted by the Kubernetes system, but one or more of the container images has not been created. This includes time before being scheduled as well as time spent downloading images over the network, which could take a while. Running: The pod has been bound to a node, and all of the containers have been created. At least one container is still running, or is in the process of starting or restarting. Succeeded: All containers in the pod have terminated in success, and will not be restarted. Failed: All containers in the pod have terminated, and at least one container has terminated in failure. The container either exited with non-zero status or was terminated by the system. Unknown: For some reason the state of the pod could not be obtained, typically due to an error in communicating with the host of the pod.\n\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-phase",
        "type": [
          "string",
          "null"
        ]
      },
      "podIP": {
        "description": "IP address allocated to the pod. Routable at least within the cluster. Empty if not yet allocated.",
        "type": [
          "string",
          "null"
        ]
      },
      "podIPs": {
        "description": "podIPs holds the IP addresses allocated to the pod. If this field is specified, the 0th entry must match the podIP field. Pods may be allocated at most 1 value for each of IPv4 and IPv6. This list is empty if no IPs have been allocated yet.",
        "items": {
          "$ref": "#/definitions/https:__kubernetesjsonschema_dev_master__defs_json_defs_io_k8s_api_core_v1_PodIP"
        },
        "type": [
          "array",
          "null"
        ],
        "x-kubernetes-patch-merge-key": "ip",
        "x-kubernetes-patch-strategy": "merge"
      },
      "qosClass": {
        "description": "The Quality of Service (QOS) classification assigned to the pod based on resource requirements See PodQOSClass type for available QOS classes More info: https://git.k8s.io/community/contributors/design-proposals/node/resource-qos.md",
        "type": [
          "string",
          "null"
        ]
      },
      "reason": {
        "description": "A brief CamelCase message indicating details about why the pod is in this state. e.g. 'Evicted'",
        "type": [
          "string",
          "null"
        ]
      },
      "startTime": {
        "$ref": "#/definitions/https:__kubernetesjsonschema_dev_master__defs_json_defs_io_k8s_apimachinery_pkg_apis_meta_v1_Time",
        "description": "RFC 3339 date and time at which the object was acknowledged by the Kubelet. This is before the Kubelet pulled the container image(s) for the pod."
      }
    },
    "type": "object"
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "conditions": [
          {
            "lastProbeTime": "2022-01-01T12:00:00Z",
            "lastTransitionTime": "2022-01-01T12:00:00Z",
            "message": "Pod is running",
            "reason": "PodRunning",
            "status": "True",
            "type": "Ready"
          }
        ],
        "containerStatuses": [
          {
            "containerID": "docker://container_id",
            "image": "image_name",
            "imageID": "image_id",
            "lastState": {
              "running": {
                "startedAt": "2022-01-01T12:00:00Z"
              }
            },
            "name": "container_name",
            "ready": true,
            "restartCount": 0,
            "started": true,
            "state": {
              "running": {
                "startedAt": "2022-01-01T12:00:00Z"
              }
            }
          }
        ],
        "ephemeralContainerStatuses": null,
        "hostIP": "host_ip",
        "initContainerStatuses": null,
        "message": null,
        "nominatedNodeName": null,
        "phase": "Running",
        "podIP": "pod_ip",
        "podIPs": [
          {
            "ip": "pod_ip"
          }
        ],
        "qosClass": "BestEffort",
        "reason": null,
        "startTime": "2022-01-01T12:00:00Z"
      }
    },
    {
      "description": "llama-70b generated negative; focus on type keyword with an array of types",
      "valid": false,
      "rust_error": "\"string\" is not of types \"array\", \"null\"",
      "python_error": "'string' is not of type 'array', 'null'\n\nFailed validating 'type' in schema['properties']['conditions']:\n    {'description': 'Current service state of pod. More info: '\n                    'https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-conditions',\n     'items': {'$ref': '#/definitions/https:__kubernetesjsonschema_dev_master__defs_json_defs_io_k8s_api_core_v1_PodCondition'},\n     'type': ['array', 'null'],\n     'x-kubernetes-patch-merge-key': 'type',\n     'x-kubernetes-patch-strategy': 'merge'}\n\nOn instance['conditions']:\n    'string'",
      "data": {
        "conditions": "string",
        "containerStatuses": [
          {
            "containerID": "docker://container_id",
            "image": "image_name",
            "imageID": "image_id",
            "lastState": {
              "running": {
                "startedAt": "2022-01-01T12:00:00Z"
              }
            },
            "name": "container_name",
            "ready": true,
            "restartCount": 0,
            "started": true,
            "state": {
              "running": {
                "startedAt": "2022-01-01T12:00:00Z"
              }
            }
          }
        ],
        "ephemeralContainerStatuses": null,
        "hostIP": "host_ip",
        "initContainerStatuses": null,
        "message": null,
        "nominatedNodeName": null,
        "phase": "Running",
        "podIP": "pod_ip",
        "podIPs": [
          {
            "ip": "pod_ip"
          }
        ],
        "qosClass": "BestEffort",
        "reason": null,
        "startTime": "2022-01-01T12:00:00Z"
      }
    },
    {
      "description": "llama-70b generated negative; focus on type keyword with an array of types",
      "valid": false,
      "rust_error": "12345 is not of type \"string\"",
      "python_error": "12345 is not of type 'string'\n\nFailed validating 'type' in schema['properties']['podIPs']['items']['properties']['ip']:\n    {'description': 'ip is an IP address (IPv4 or IPv6) assigned to the '\n                    'pod',\n     'type': 'string'}\n\nOn instance['podIPs'][0]['ip']:\n    12345",
      "data": {
        "conditions": [
          {
            "lastProbeTime": "2022-01-01T12:00:00Z",
            "lastTransitionTime": "2022-01-01T12:00:00Z",
            "message": "Pod is running",
            "reason": "PodRunning",
            "status": "True",
            "type": "Ready"
          }
        ],
        "containerStatuses": [
          {
            "containerID": "docker://container_id",
            "image": "image_name",
            "imageID": "image_id",
            "lastState": {
              "running": {
                "startedAt": "2022-01-01T12:00:00Z"
              }
            },
            "name": "container_name",
            "ready": true,
            "restartCount": 0,
            "started": true,
            "state": {
              "running": {
                "startedAt": "2022-01-01T12:00:00Z"
              }
            }
          }
        ],
        "ephemeralContainerStatuses": null,
        "hostIP": "host_ip",
        "initContainerStatuses": null,
        "message": null,
        "nominatedNodeName": null,
        "phase": "Running",
        "podIP": "pod_ip",
        "podIPs": [
          {
            "ip": 12345
          }
        ],
        "qosClass": "BestEffort",
        "reason": null,
        "startTime": "2022-01-01T12:00:00Z"
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "conditions": [
          {
            "lastProbeTime": "2022-01-01T12:00:00Z",
            "lastTransitionTime": "2022-01-01T12:00:00Z",
            "message": "Pod has been scheduled",
            "reason": "Scheduled",
            "status": "True",
            "type": "PodScheduled"
          }
        ],
        "containerStatuses": [
          {
            "containerID": "docker://1234567890",
            "image": "nginx:latest",
            "imageID": "docker-pullable://nginx@sha256:1234567890",
            "lastState": {
              "running": {
                "startedAt": "2022-01-01T12:00:00Z"
              }
            },
            "name": "nginx",
            "ready": true,
            "restartCount": 0,
            "started": true,
            "state": {
              "running": {
                "startedAt": "2022-01-01T12:00:00Z"
              }
            }
          }
        ],
        "ephemeralContainerStatuses": null,
        "hostIP": "192.168.1.100",
        "initContainerStatuses": null,
        "message": null,
        "nominatedNodeName": null,
        "phase": "Running",
        "podIP": "10.0.0.1",
        "podIPs": [
          {
            "ip": "10.0.0.1"
          }
        ],
        "qosClass": "BestEffort",
        "reason": null,
        "startTime": "2022-01-01T12:00:00Z"
      }
    },
    {
      "description": "llama-70b generated negative; focus on type keyword with an array of types",
      "valid": false,
      "rust_error": "\"Invalid\" is not of types \"array\", \"null\"",
      "python_error": "'Invalid' is not of type 'array', 'null'\n\nFailed validating 'type' in schema['properties']['ephemeralContainerStatuses']:\n    {'description': 'Status for any ephemeral containers that have run in '\n                    'this pod. This field is alpha-level and is only '\n                    'populated by servers that enable the '\n                    'EphemeralContainers feature.',\n     'items': {'$ref': '#/definitions/https:__kubernetesjsonschema_dev_master__defs_json_defs_io_k8s_api_core_v1_ContainerStatus'},\n     'type': ['array', 'null']}\n\nOn instance['ephemeralContainerStatuses']:\n    'Invalid'",
      "data": {
        "conditions": [
          {
            "lastProbeTime": "2022-01-01T12:00:00Z",
            "lastTransitionTime": "2022-01-01T12:00:00Z",
            "message": "Pod has been scheduled",
            "reason": "Scheduled",
            "status": "True",
            "type": "PodScheduled"
          }
        ],
        "containerStatuses": [
          {
            "containerID": "docker://1234567890",
            "image": "nginx:latest",
            "imageID": "docker-pullable://nginx@sha256:1234567890",
            "lastState": {
              "running": {
                "startedAt": "2022-01-01T12:00:00Z"
              }
            },
            "name": "nginx",
            "ready": true,
            "restartCount": 0,
            "started": true,
            "state": {
              "running": {
                "startedAt": "2022-01-01T12:00:00Z"
              }
            }
          }
        ],
        "ephemeralContainerStatuses": "Invalid",
        "hostIP": "192.168.1.100",
        "initContainerStatuses": null,
        "message": null,
        "nominatedNodeName": null,
        "phase": "Running",
        "podIP": "10.0.0.1",
        "podIPs": [
          {
            "ip": "10.0.0.1"
          }
        ],
        "qosClass": "BestEffort",
        "reason": null,
        "startTime": "2022-01-01T12:00:00Z"
      }
    }
  ]
}