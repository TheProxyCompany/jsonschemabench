{
  "description": "sample JsonSchemaStore/lintstagedrc.schema.json",
  "meta": {
    "full_size": 2348,
    "stripped_size": 1242,
    "features": [
      "$ref",
      "@minmaxInteger",
      "@minmaxNumber",
      "@siblingKeys",
      "additionalProperties",
      "additionalProperties:object",
      "anyOf",
      "enum",
      "items",
      "not",
      "propertyNames"
    ],
    "raw_features": [
      "$id",
      "$schema",
      "_boolSchema",
      "definitions",
      "minimum",
      "properties",
      "type",
      "type:[]",
      "type:array",
      "type:boolean",
      "type:integer",
      "type:number",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$id": "https://json.schemastore.org/lintstagedrc.schema.json",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "anyOf": [
      {
        "$ref": "#/definitions/advancedConfig"
      },
      {
        "$ref": "#/definitions/basicConfig"
      }
    ],
    "definitions": {
      "$schemaProperty": {
        "type": "string"
      },
      "linter": {
        "type": [
          "string",
          "array"
        ]
      },
      "lintersMap": {
        "description": "keys (String) are glob patterns, values (Array<String> | String) are commands to execute.",
        "type": "object",
        "additionalProperties": {
          "$ref": "#/definitions/linter"
        }
      },
      "globOptions": {
        "description": "micromatch options to customize how glob patterns match files.",
        "type": "object",
        "properties": {
          "matchBase": {
            "type": "boolean",
            "default": true
          },
          "dot": {
            "type": "boolean",
            "default": true
          }
        },
        "additionalProperties": false
      },
      "advancedConfig": {
        "properties": {
          "$schema": {
            "$ref": "#/definitions/$schemaProperty"
          },
          "concurrent": {
            "description": "Controls if linters are run simultaneously for each glob pattern.",
            "type": "boolean",
            "default": true
          },
          "chunkSize": {
            "description": "Max allowed chunk size based on number of files for glob pattern. This option is only applicable on Windows based systems to avoid command length limitations",
            "type": "number",
            "minimum": 1
          },
          "globOptions": {
            "description": "micromatch options to customize how glob patterns match files.",
            "$ref": "#/definitions/globOptions"
          },
          "linters": {
            "description": "keys (String) are glob patterns, values (Array<String> | String) are commands to execute.",
            "$ref": "#/definitions/lintersMap"
          },
          "ignore": {
            "description": "array of glob patterns to entirely ignore from any task.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": "['**/docs/**/*.js']"
          },
          "subTaskConcurrency": {
            "description": "Controls concurrency for processing chunks generated for each linter. This option is only applicable on Windows. Execution is not concurrent by default.",
            "type": "integer",
            "minimum": 1,
            "default": 1
          },
          "renderer": {
            "enum": [
              "update",
              "verbose"
            ],
            "default": "update"
          },
          "relative": {
            "description": "If true it will give the relative path from your package.json directory to your linter arguments.",
            "type": "boolean",
            "default": false
          }
        },
        "additionalProperties": false
      },
      "basicConfig": {
        "properties": {
          "$schema": {
            "$ref": "#/definitions/$schemaProperty"
          }
        },
        "propertyNames": {
          "not": {
            "enum": [
              "concurrent",
              "chunkSize",
              "globOptions",
              "linters",
              "ignore",
              "subTaskConcurrency",
              "renderer",
              "relative"
            ]
          }
        },
        "additionalProperties": {
          "$ref": "#/definitions/linter"
        }
      }
    }
  },
  "tests": [
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "$schema": "https://json.schemastore.org/lintstagedrc.schema.json",
        "linters": {
          "*.js": "eslint --fix",
          "*.md": "markdownlint"
        },
        "ignore": [
          "**/node_modules/**",
          "**/coverage/**"
        ],
        "concurrent": true,
        "chunkSize": 10,
        "globOptions": {
          "matchBase": true,
          "dot": true
        },
        "subTaskConcurrency": 2,
        "renderer": "verbose",
        "relative": true
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "$schema": "https://json.schemastore.org/lintstagedrc.schema.json",
        "linters": {
          "*.js": "eslint --fix",
          "*.md": "markdownlint"
        },
        "ignore": [
          "**/node_modules/**"
        ],
        "concurrent": true,
        "chunkSize": 100,
        "globOptions": {
          "matchBase": true,
          "dot": true
        },
        "subTaskConcurrency": 2,
        "renderer": "verbose",
        "relative": true
      }
    },
    {
      "description": "llama-70b generated negative; focus on minimum keyword",
      "valid": false,
      "rust_error": "{\"$schema\":\"https://json.schemastore.org/lintstagedrc.schema.json\",\"linters\":{\"*.js\":\"eslint --fix\",\"*.md\":\"markdownlint\"},\"ignore\":[\"**/node_modules/**\"],\"concurrent\":true,\"chunkSize\":0,\"globOptions\":{\"matchBase\":true,\"dot\":true},\"subTaskConcurrency\":2,\"renderer\":\"verbose\",\"relative\":true} is not valid under any of the schemas listed in the 'anyOf' keyword",
      "python_error": "0 is less than the minimum of 1\n\nFailed validating 'minimum' in schema[0]['properties']['chunkSize']:\n    {'description': 'Max allowed chunk size based on number of files for '\n                    'glob pattern. This option is only applicable on '\n                    'Windows based systems to avoid command length '\n                    'limitations',\n     'type': 'number',\n     'minimum': 1}\n\nOn instance['chunkSize']:\n    0",
      "data": {
        "$schema": "https://json.schemastore.org/lintstagedrc.schema.json",
        "linters": {
          "*.js": "eslint --fix",
          "*.md": "markdownlint"
        },
        "ignore": [
          "**/node_modules/**"
        ],
        "concurrent": true,
        "chunkSize": 0,
        "globOptions": {
          "matchBase": true,
          "dot": true
        },
        "subTaskConcurrency": 2,
        "renderer": "verbose",
        "relative": true
      }
    },
    {
      "description": "llama-70b generated negative; focus on type keyword with an array of types",
      "valid": false,
      "rust_error": "{\"$schema\":\"https://json.schemastore.org/lintstagedrc.schema.json\",\"linters\":{\"*.js\":123,\"markdownlint\":\"ignore\",\"*node_modules/**\":true,\"relative\":true}} is not valid under any of the schemas listed in the 'anyOf' keyword",
      "python_error": "123 is not of type 'string', 'array'\n\nFailed validating 'type' in schema[0]['properties']['linters']['additionalProperties']:\n    {'type': ['string', 'array']}\n\nOn instance['linters']['*.js']:\n    123",
      "data": {
        "$schema": "https://json.schemastore.org/lintstagedrc.schema.json",
        "linters": {
          "*.js": 123,
          "markdownlint": "ignore",
          "*node_modules/**": true,
          "relative": true
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on additionalProperties keyword with an object schema",
      "valid": false,
      "rust_error": "{\"$schema\":\"https://json.schemastore.org/lintstagedrc.schema.json\",\"linters\":{\"*.js\":\"eslint --fix\",\"*.md\":\"markdownlint\"},\"ignore\":[\"**/node_modules/**\"],\"concurrent\":true,\"chunkSize\":100,\"globOptions\":{\"matchBase\":true,\"dot\":true},\"subTaskConcurrency\":2,\"renderer\":\"verbose\",\"relative\":true,\"lintersMap\":{\"*.txt\":\"echo\"}} is not valid under any of the schemas listed in the 'anyOf' keyword",
      "python_error": "100 is not of type 'string', 'array'\n\nFailed validating 'type' in schema[1]['additionalProperties']:\n    {'type': ['string', 'array']}\n\nOn instance['chunkSize']:\n    100",
      "data": {
        "$schema": "https://json.schemastore.org/lintstagedrc.schema.json",
        "linters": {
          "*.js": "eslint --fix",
          "*.md": "markdownlint"
        },
        "ignore": [
          "**/node_modules/**"
        ],
        "concurrent": true,
        "chunkSize": 100,
        "globOptions": {
          "matchBase": true,
          "dot": true
        },
        "subTaskConcurrency": 2,
        "renderer": "verbose",
        "relative": true,
        "lintersMap": {
          "*.txt": "echo"
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on anyOf keyword",
      "valid": false,
      "rust_error": "{\"$schema\":\"https://json.schemastore.org/lintstagedrc.schema.json\",\"linters\":{\"*.js\":\"eslint --fix\"},\"advanced\":\"some value\",\"$schemaProperty\":\"some other value\"} is not valid under any of the schemas listed in the 'anyOf' keyword",
      "python_error": "{'*.js': 'eslint --fix'} is not of type 'string', 'array'\n\nFailed validating 'type' in schema[1]['additionalProperties']:\n    {'type': ['string', 'array']}\n\nOn instance['linters']:\n    {'*.js': 'eslint --fix'}",
      "data": {
        "$schema": "https://json.schemastore.org/lintstagedrc.schema.json",
        "linters": {
          "*.js": "eslint --fix"
        },
        "advanced": "some value",
        "$schemaProperty": "some other value"
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "{\"$schema\":\"https://json.schemastore.org/lintstagedrc.schema.json\",\"linters\":{\"*.js\":\"eslint --fix\",\"*.md\":123,\"*.txt\":null},\"concurrent\":true,\"chunkSize\":100,\"globOptions\":{\"matchBase\":true,\"dot\":true,\"extra\":\"some extra value\"},\"subTaskConcurrency\":0,\"renderer\":\"invalid\",\"relative\":true,\"invalidKey\":\"some extra value\"} is not valid under any of the schemas listed in the 'anyOf' keyword",
      "python_error": "123 is not of type 'string', 'array'\n\nFailed validating 'type' in schema[0]['properties']['linters']['additionalProperties']:\n    {'type': ['string', 'array']}\n\nOn instance['linters']['*.md']:\n    123",
      "data": {
        "$schema": "https://json.schemastore.org/lintstagedrc.schema.json",
        "linters": {
          "*.js": "eslint --fix",
          "*.md": 123,
          "*.txt": null
        },
        "concurrent": true,
        "chunkSize": 100,
        "globOptions": {
          "matchBase": true,
          "dot": true,
          "extra": "some extra value"
        },
        "subTaskConcurrency": 0,
        "renderer": "invalid",
        "relative": true,
        "invalidKey": "some extra value"
      }
    }
  ]
}