{
  "description": "sample Github_easy/o17543.json",
  "meta": {
    "full_size": 537,
    "stripped_size": 401,
    "features": [
      "$ref",
      "@minmaxLength",
      "enum"
    ],
    "raw_features": [
      "$schema",
      "definitions",
      "maxLength",
      "minLength",
      "properties",
      "required",
      "type",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-06/schema#",
    "title": "WikiDataFormForm",
    "description": "WikiDataFormForm from Tiamat",
    "definitions": {
      "jsonSchema": {
        "type": "object",
        "properties": {
          "type": {
            "enum": [
              "object",
              "string",
              "number",
              "integer",
              "array"
            ]
          },
          "items": {
            "ref": "#/definitions/jsonSchema"
          },
          "properties": {
            "ref": "#/definitions/jsonSchema"
          }
        }
      }
    },
    "type": "object",
    "properties": {
      "name": {
        "type": "string",
        "minLength": 4,
        "maxLength": 10
      },
      "jsonSchema": {
        "$ref": "#/definitions/jsonSchema"
      },
      "uiSchema": {
        "type": "object"
      }
    },
    "required": [
      "name",
      "jsonSchema"
    ]
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "name": "Example",
        "jsonSchema": {
          "type": "object",
          "properties": {
            "title": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "items": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "age": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "uiSchema": {
          "title": {
            "ui:widget": "textarea"
          },
          "description": {
            "ui:widget": "textarea"
          },
          "items": {
            "ui:widget": "array",
            "items": {
              "name": {
                "ui:widget": "text"
              },
              "age": {
                "ui:widget": "number"
              }
            }
          }
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on minLength keyword or maxLength keyword",
      "valid": false,
      "rust_error": "\"Ex\" is shorter than 4 characters",
      "python_error": "'Ex' is too short\n\nFailed validating 'minLength' in schema['properties']['name']:\n    {'type': 'string', 'minLength': 4, 'maxLength': 10}\n\nOn instance['name']:\n    'Ex'",
      "data": {
        "name": "Ex",
        "jsonSchema": {
          "type": "object",
          "properties": {
            "title": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "items": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "age": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "uiSchema": {
          "title": {
            "ui:widget": "textarea"
          },
          "description": {
            "ui:widget": "textarea"
          },
          "items": {
            "ui:widget": "array",
            "items": {
              "name": {
                "ui:widget": "text"
              },
              "age": {
                "ui:widget": "number"
              }
            }
          }
        }
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"A\" is shorter than 4 characters",
      "python_error": "'A' is too short\n\nFailed validating 'minLength' in schema['properties']['name']:\n    {'type': 'string', 'minLength': 4, 'maxLength': 10}\n\nOn instance['name']:\n    'A'",
      "data": {
        "name": "A",
        "jsonSchema": {
          "type": "object",
          "properties": {
            "title": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "items": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "age": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "uiSchema": {
          "title": {
            "ui:widget": "textarea"
          },
          "description": {
            "ui:widget": "textarea"
          },
          "items": {
            "ui:widget": "array",
            "items": {
              "name": {
                "ui:widget": "text"
              },
              "age": {
                "ui:widget": "number"
              }
            }
          }
        }
      }
    }
  ]
}