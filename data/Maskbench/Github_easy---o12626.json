{
  "description": "sample Github_easy/o12626.json",
  "meta": {
    "full_size": 333,
    "stripped_size": 333,
    "features": [],
    "raw_features": [
      "$schema",
      "properties",
      "required",
      "type",
      "type:[]",
      "type:array",
      "type:integer",
      "type:null",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "type": "object",
    "required": [
      "meta",
      "objects"
    ],
    "properties": {
      "meta": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "integer"
          },
          "next": {
            "type": "string"
          },
          "offset": {
            "type": "integer"
          },
          "previous": {
            "type": [
              "integer",
              "null"
            ]
          },
          "total_count": {
            "type": "integer"
          }
        }
      },
      "objects": {
        "type": "array"
      }
    }
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "meta": {
          "limit": 10,
          "next": "https://example.com/api/objects?offset=10",
          "offset": 0,
          "previous": null,
          "total_count": 20
        },
        "objects": [
          {
            "id": 1,
            "name": "Object 1"
          },
          {
            "id": 2,
            "name": "Object 2"
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on type keyword with an array of types",
      "valid": false,
      "rust_error": "\"string\" is not of types \"integer\", \"null\"",
      "python_error": "'string' is not of type 'integer', 'null'\n\nFailed validating 'type' in schema['properties']['meta']['properties']['previous']:\n    {'type': ['integer', 'null']}\n\nOn instance['meta']['previous']:\n    'string'",
      "data": {
        "meta": {
          "limit": 10,
          "next": "https://example.com/api/objects?offset=10",
          "offset": 0,
          "previous": "string",
          "total_count": 20
        },
        "objects": [
          {
            "id": 1,
            "name": "Object 1"
          },
          {
            "id": 2,
            "name": "Object 2"
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"10\" is not of type \"integer\"",
      "python_error": "'10' is not of type 'integer'\n\nFailed validating 'type' in schema['properties']['meta']['properties']['limit']:\n    {'type': 'integer'}\n\nOn instance['meta']['limit']:\n    '10'",
      "data": {
        "meta": {
          "limit": "10",
          "next": "https://example.com/api/objects?offset=10",
          "offset": 0,
          "previous": null,
          "total_count": 20
        },
        "objects": [
          {
            "id": 1,
            "name": "Object 1"
          },
          {
            "id": 2,
            "name": "Object 2"
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on type keyword with an array of types",
      "valid": false,
      "rust_error": "\"string instead of null or integer\" is not of types \"integer\", \"null\"",
      "python_error": "'string instead of null or integer' is not of type 'integer', 'null'\n\nFailed validating 'type' in schema['properties']['meta']['properties']['previous']:\n    {'type': ['integer', 'null']}\n\nOn instance['meta']['previous']:\n    'string instead of null or integer'",
      "data": {
        "meta": {
          "limit": 10,
          "next": "https://example.com/api/objects?offset=10",
          "offset": 0,
          "previous": "string instead of null or integer",
          "total_count": 20
        },
        "objects": [
          {
            "id": 1,
            "name": "Object 1"
          },
          {
            "id": 2,
            "name": "Object 2"
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "10.5 is not of type \"integer\"",
      "python_error": "10.5 is not of type 'integer'\n\nFailed validating 'type' in schema['properties']['meta']['properties']['limit']:\n    {'type': 'integer'}\n\nOn instance['meta']['limit']:\n    10.5",
      "data": {
        "meta": {
          "limit": 10.5,
          "next": "https://example.com/api/objects?offset=10",
          "offset": 0,
          "previous": null,
          "total_count": 20
        },
        "objects": [
          {
            "id": 1,
            "name": "Object 1"
          },
          {
            "id": 2,
            "name": "Object 2"
          }
        ]
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "meta": {
          "limit": 10,
          "next": "https://example.com/api/objects?offset=10",
          "offset": 0,
          "previous": null,
          "total_count": 100
        },
        "objects": [
          {
            "id": 1,
            "name": "Object 1"
          },
          {
            "id": 2,
            "name": "Object 2"
          },
          {
            "id": 3,
            "name": "Object 3"
          },
          {
            "id": 4,
            "name": "Object 4"
          },
          {
            "id": 5,
            "name": "Object 5"
          },
          {
            "id": 6,
            "name": "Object 6"
          },
          {
            "id": 7,
            "name": "Object 7"
          },
          {
            "id": 8,
            "name": "Object 8"
          },
          {
            "id": 9,
            "name": "Object 9"
          },
          {
            "id": 10,
            "name": "Object 10"
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"string\" is not of type \"array\"",
      "python_error": "'string' is not of type 'array'\n\nFailed validating 'type' in schema['properties']['objects']:\n    {'type': 'array'}\n\nOn instance['objects']:\n    'string'",
      "data": {
        "meta": {
          "limit": 10,
          "next": "https://example.com/api/objects?offset=10",
          "offset": 0,
          "previous": null,
          "total_count": 100
        },
        "objects": "string"
      }
    }
  ]
}