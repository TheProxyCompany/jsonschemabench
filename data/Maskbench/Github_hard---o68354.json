{
  "description": "sample Github_hard/o68354.json",
  "meta": {
    "full_size": 3653,
    "stripped_size": 3623,
    "features": [
      "@minmaxInteger",
      "additionalProperties",
      "enum",
      "items",
      "pattern"
    ],
    "raw_features": [
      "$schema",
      "_boolSchema",
      "_requiredEmpty",
      "maximum",
      "minimum",
      "properties",
      "required",
      "type",
      "type:array",
      "type:integer",
      "type:number",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "title": "Event Search Schema",
    "type": "object",
    "additionalProperties": false,
    "properties": {
      "q": {
        "type": "string"
      },
      "id": {
        "type": "string"
      },
      "like": {
        "type": "string"
      },
      "label": {
        "type": "array"
      },
      "label.op": {
        "items": {
          "enum": [
            "all",
            "any"
          ]
        },
        "type": "array"
      },
      "within": {
        "type": "string",
        "pattern": "(\\d+(mm|cm|m|km|in|yd|ft|mi|nmi))@([\\-\\+]?\\d+(\\.\\d+)?),([\\-\\+]?\\d+(\\.\\d+)?)"
      },
      "country": {
        "type": "array"
      },
      "state": {
        "items": {
          "enum": [
            "active",
            "deleted"
          ]
        },
        "type": "array"
      },
      "start.tz": {
        "type": "string"
      },
      "start.gt": {
        "type": "string",
        "pattern": "^([0-9]{4})-[0-9]{2}-[0-9]{2}$"
      },
      "start.gte": {
        "type": "string",
        "pattern": "^([0-9]{4})-[0-9]{2}-[0-9]{2}$"
      },
      "start.lt": {
        "type": "string",
        "pattern": "^([0-9]{4})-[0-9]{2}-[0-9]{2}$"
      },
      "start.lte": {
        "type": "string",
        "pattern": "^([0-9]{4})-[0-9]{2}-[0-9]{2}$"
      },
      "end.tz": {
        "type": "string"
      },
      "end.gt": {
        "type": "string",
        "pattern": "^([0-9]{4})-[0-9]{2}-[0-9]{2}$"
      },
      "end.gte": {
        "type": "string",
        "pattern": "^([0-9]{4})-[0-9]{2}-[0-9]{2}$"
      },
      "end.lt": {
        "type": "string",
        "pattern": "^([0-9]{4})-[0-9]{2}-[0-9]{2}$"
      },
      "end.lte": {
        "type": "string",
        "pattern": "^([0-9]{4})-[0-9]{2}-[0-9]{2}$"
      },
      "updated.tz": {
        "type": "string"
      },
      "updated.gt": {
        "type": "string",
        "pattern": "^([0-9]{4})-[0-9]{2}-[0-9]{2}$"
      },
      "updated.gte": {
        "type": "string",
        "pattern": "^([0-9]{4})-[0-9]{2}-[0-9]{2}$"
      },
      "updated.lt": {
        "type": "string",
        "pattern": "^([0-9]{4})-[0-9]{2}-[0-9]{2}$"
      },
      "updated.lte": {
        "type": "string",
        "pattern": "^([0-9]{4})-[0-9]{2}-[0-9]{2}$"
      },
      "active.tz": {
        "type": "string"
      },
      "active.gt": {
        "type": "string",
        "pattern": "^([0-9]{4})-[0-9]{2}-[0-9]{2}$"
      },
      "active.gte": {
        "type": "string",
        "pattern": "^([0-9]{4})-[0-9]{2}-[0-9]{2}$"
      },
      "active.lt": {
        "type": "string",
        "pattern": "^([0-9]{4})-[0-9]{2}-[0-9]{2}$"
      },
      "active.lte": {
        "type": "string",
        "pattern": "^([0-9]{4})-[0-9]{2}-[0-9]{2}$"
      },
      "start_around.origin": {
        "type": "string",
        "pattern": "^([0-9]{4})-[0-9]{2}-[0-9]{2}$"
      },
      "start_around.offset": {
        "type": "string",
        "pattern": "^([0-9]+)d$"
      },
      "start_around.scale": {
        "type": "string",
        "pattern": "^([0-9]+)d$"
      },
      "start_around.decay": {
        "type": "number"
      },
      "end_around.origin": {
        "type": "string",
        "pattern": "^([0-9]{4})-[0-9]{2}-[0-9]{2}$"
      },
      "end_around.offset": {
        "type": "string",
        "pattern": "^([0-9]+)d$"
      },
      "end_around.scale": {
        "type": "string",
        "pattern": "^([0-9]+)d$"
      },
      "end_around.decay": {
        "type": "number"
      },
      "location_around.origin": {
        "type": "string",
        "pattern": "^(-?\\d+(\\.\\d+)?),(-?\\d+(\\.\\d+)?)$"
      },
      "location_around.offset": {
        "type": "string",
        "pattern": "^\\d+(\\.\\d+)?(cm|m|km|in|ft|mi)$"
      },
      "location_around.scale": {
        "type": "string",
        "pattern": "^\\d+(\\.\\d+)?(cm|m|km|in|ft|mi)$"
      },
      "location_around.decay": {
        "type": "number"
      },
      "place.scope": {
        "type": "array"
      },
      "place.exact": {
        "type": "array"
      },
      "relevance": {
        "type": "array"
      },
      "limit": {
        "type": "integer",
        "minimum": 1
      },
      "top_events.limit": {
        "type": "integer",
        "minimum": 1,
        "maximum": 10
      },
      "offset": {
        "type": "integer",
        "minimum": 0
      },
      "rank_level": {
        "items": {
          "enum": [
            1,
            2,
            3,
            4,
            5
          ]
        },
        "type": "array"
      },
      "local_rank_level": {
        "items": {
          "enum": [
            1,
            2,
            3,
            4,
            5
          ]
        },
        "type": "array"
      },
      "aviation_rank_level": {
        "items": {
          "enum": [
            1,
            2,
            3,
            4,
            5
          ]
        },
        "type": "array"
      },
      "sort": {
        "items": {
          "enum": [
            "id",
            "title",
            "start",
            "end",
            "updated",
            "rank",
            "local_rank",
            "aviation_rank",
            "category",
            "duration",
            "country",
            "labels",
            "relevance",
            "-id",
            "-title",
            "-start",
            "-end",
            "-updated",
            "-rank",
            "-local_rank",
            "-aviation_rank",
            "-category",
            "-duration",
            "-country",
            "-labels",
            "-relevance"
          ]
        },
        "type": "array"
      },
      "top_events.sort": {
        "items": {
          "enum": [
            "id",
            "title",
            "start",
            "end",
            "rank",
            "local_rank",
            "aviation_rank",
            "category",
            "duration",
            "country",
            "labels",
            "-id",
            "-title",
            "-start",
            "-end",
            "-rank",
            "-local_rank",
            "-aviation_rank",
            "-category",
            "-duration",
            "-country",
            "-labels"
          ]
        },
        "type": "array"
      },
      "category": {
        "type": "array"
      }
    },
    "required": []
  },
  "tests": [
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "q": "example search query",
        "id": "example-id",
        "like": "example-like",
        "label": [
          "example-label-1",
          "example-label-2"
        ],
        "label.op": [
          "all",
          "any"
        ],
        "within": "10km@37.7749,-122.4194",
        "country": [
          "US",
          "CA"
        ],
        "state": [
          "active",
          "deleted"
        ],
        "start.tz": "America/New_York",
        "start.gt": "2020-01-01",
        "start.gte": "2020-01-01",
        "start.lt": "2020-01-31",
        "start.lte": "2020-01-31",
        "end.tz": "America/New_York",
        "end.gt": "2020-01-01",
        "end.gte": "2020-01-01",
        "end.lt": "2020-01-31",
        "end.lte": "2020-01-31",
        "updated.tz": "America/New_York",
        "updated.gt": "2020-01-01",
        "updated.gte": "2020-01-01",
        "updated.lt": "2020-01-31",
        "updated.lte": "2020-01-31",
        "active.tz": "America/New_York",
        "active.gt": "2020-01-01",
        "active.gte": "2020-01-01",
        "active.lt": "2020-01-31",
        "active.lte": "2020-01-31",
        "start_around.origin": "2020-01-01",
        "start_around.offset": "10d",
        "start_around.scale": "10d",
        "start_around.decay": 0.5,
        "end_around.origin": "2020-01-01",
        "end_around.offset": "10d",
        "end_around.scale": "10d",
        "end_around.decay": 0.5,
        "location_around.origin": "37.7749,-122.4194",
        "location_around.offset": "10km",
        "location_around.scale": "10km",
        "location_around.decay": 0.5,
        "place.scope": [
          "city",
          "state"
        ],
        "place.exact": [
          "city",
          "state"
        ],
        "relevance": [
          "title",
          "description"
        ],
        "limit": 10,
        "top_events.limit": 5,
        "offset": 0,
        "rank_level": [
          1,
          2,
          3
        ],
        "local_rank_level": [
          1,
          2,
          3
        ],
        "aviation_rank_level": [
          1,
          2,
          3
        ],
        "sort": [
          "id",
          "-title",
          "start"
        ],
        "top_events.sort": [
          "id",
          "-title",
          "start"
        ],
        "category": [
          "example-category-1",
          "example-category-2"
        ]
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "q": "example query",
        "id": "example id",
        "like": "example like",
        "label": [
          "example label"
        ],
        "label.op": [
          "any"
        ],
        "within": "10km@37.7749,-122.4194",
        "country": [
          "US"
        ],
        "state": [
          "active"
        ],
        "start.tz": "America/New_York",
        "start.gt": "2020-01-01",
        "start.gte": "2020-01-01",
        "start.lt": "2020-01-31",
        "start.lte": "2020-01-31",
        "end.tz": "America/New_York",
        "end.gt": "2020-01-01",
        "end.gte": "2020-01-01",
        "end.lt": "2020-01-31",
        "end.lte": "2020-01-31",
        "updated.tz": "America/New_York",
        "updated.gt": "2020-01-01",
        "updated.gte": "2020-01-01",
        "updated.lt": "2020-01-31",
        "updated.lte": "2020-01-31",
        "active.tz": "America/New_York",
        "active.gt": "2020-01-01",
        "active.gte": "2020-01-01",
        "active.lt": "2020-01-31",
        "active.lte": "2020-01-31",
        "start_around.origin": "2020-01-01",
        "start_around.offset": "10d",
        "start_around.scale": "10d",
        "start_around.decay": 0.5,
        "end_around.origin": "2020-01-01",
        "end_around.offset": "10d",
        "end_around.scale": "10d",
        "end_around.decay": 0.5,
        "location_around.origin": "37.7749,-122.4194",
        "location_around.offset": "10km",
        "location_around.scale": "10km",
        "location_around.decay": 0.5,
        "place.scope": [
          "city"
        ],
        "place.exact": [
          "true"
        ],
        "relevance": [
          "true"
        ],
        "limit": 10,
        "top_events.limit": 5,
        "offset": 0,
        "rank_level": [
          1,
          2,
          3
        ],
        "local_rank_level": [
          1,
          2,
          3
        ],
        "aviation_rank_level": [
          1,
          2,
          3
        ],
        "sort": [
          "id",
          "-title"
        ],
        "top_events.sort": [
          "id",
          "-title"
        ],
        "category": [
          "example category"
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on pattern keyword",
      "valid": false,
      "rust_error": "\"10km@37.7749-122.4194\" does not match \"(\\d+(mm|cm|m|km|in|yd|ft|mi|nmi))@([\\-\\+]?\\d+(\\.\\d+)?),([\\-\\+]?\\d+(\\.\\d+)?)\"",
      "python_error": "Additional properties are not allowed ('-- Invalid: missing comma between latitude and longitude' was unexpected)\n\nFailed validating 'additionalProperties' in schema:\n    {'$schema': 'https://json-schema.org/draft/2020-12/schema',\n     'title': 'Event Search Schema',\n     'type': 'object',\n     'additionalProperties': False,\n     'properties': {'q': {'type': 'string'},\n                    'id': {'type': 'string'},\n                    'like': {'type': 'string'},\n                    'label': {'type': 'array'},\n                    'label.op': {'items': {'enum': ['all', 'any']},\n                                 'type': 'array'},\n                    'within': {'type': 'string',\n                               'pattern': '(\\\\d+(mm|cm|m|km|in|yd|ft|mi|nmi))@([\\\\-\\\\+]?\\\\d+(\\\\.\\\\d+)?),([\\\\-\\\\+]?\\\\d+(\\\\.\\\\d+)?)'},\n                    'country': {'type': 'array'},\n                    'state': {'items': {'enum': ['active', 'deleted']},\n                              'type': 'array'},\n                    'start.tz': {'type'.. (9905 more)",
      "data": {
        "q": "example query",
        "id": "example id",
        "like": "example like",
        "label": [
          "example label"
        ],
        "label.op": [
          "any"
        ],
        "within": "10km@37.7749-122.4194",
        "-- Invalid: missing comma between latitude and longitude": "place",
        "state": [
          "active"
        ],
        "start.tz": "America/New_York",
        "start.gt": "2020-01-01",
        "start.gte": "2020-01-01",
        "start.lt": "2020-01-31",
        "start.lte": "2020-01-31",
        "end.tz": "America/New_York",
        "end.gt": "2020-01-01",
        "end.gte": "2020-01-01",
        "end.lt": "2020-01-31",
        "end.lte": "2020-01-31",
        "updated.tz": "America/New_York",
        "updated.gt": "2020-01-01",
        "updated.gte": "2020-01-01",
        "updated.lt": "2020-01-31",
        "updated.lte": "2020-01-31",
        "active.tz": "America/New_York",
        "active.gt": "2020-01-01",
        "active.gte": "2020-01-01",
        "active.lt": "2020-01-31",
        "active.lte": "2020-01-31",
        "start_around.origin": "2020-01-01",
        "start_around.offset": "10d",
        "start_around.scale": "10d",
        "start_around.decay": 0.5,
        "end_around.origin": "2020-01-01",
        "end_around.offset": "10d",
        "end_around.scale": "10d",
        "end_around.decay": 0.5,
        "location_around.origin": "37.7749-122.4194",
        "location_around.offset": "10km",
        "location_around.scale": "10km",
        "location_around.decay": 0.5,
        "place.scope": [
          "city"
        ],
        "place.exact": [
          "true"
        ],
        "relevance": [
          "true"
        ],
        "limit": 10,
        "top_events.limit": 5,
        "offset": 0,
        "rank_level": [
          1,
          2,
          3
        ],
        "local_rank_level": [
          1,
          2,
          3
        ],
        "aviation_rank_level": [
          1,
          2,
          3
        ],
        "sort": [
          "id",
          "-title"
        ],
        "top_events.sort": [
          "id",
          "-title"
        ],
        "category": [
          "example category"
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on minimum keyword or maximum keyword",
      "valid": false,
      "rust_error": "11 is greater than the maximum of 10",
      "python_error": "11 is greater than the maximum of 10\n\nFailed validating 'maximum' in schema['properties']['top_events.limit']:\n    {'type': 'integer', 'minimum': 1, 'maximum': 10}\n\nOn instance['top_events.limit']:\n    11",
      "data": {
        "top_events.limit": 11
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "123 is not of type \"string\"",
      "python_error": "11 is greater than the maximum of 10\n\nFailed validating 'maximum' in schema['properties']['top_events.limit']:\n    {'type': 'integer', 'minimum': 1, 'maximum': 10}\n\nOn instance['top_events.limit']:\n    11",
      "data": {
        "q": 123,
        "id": "example id",
        "like": "example like",
        "label": [
          "example label"
        ],
        "label.op": [
          "any"
        ],
        "within": "10km@37.7749,-122.4194",
        "country": [
          "US"
        ],
        "state": [
          "active"
        ],
        "start.tz": "America/New_York",
        "start.gt": "2020-01-01",
        "start.gte": "2020-01-01",
        "start.lt": "2020-01-31",
        "start.lte": "2020-01-31",
        "end.tz": "America/New_York",
        "end.gt": "2020-01-01",
        "end.gte": "2020-01-01",
        "end.lt": "2020-01-31",
        "end.lte": "2020-01-31",
        "updated.tz": "America/New_York",
        "updated.gt": "2020-01-01",
        "updated.gte": "2020-01-01",
        "updated.lt": "2020-01-31",
        "updated.lte": "2020-01-31",
        "active.tz": "America/New_York",
        "active.gt": "2020-01-01",
        "active.gte": "2020-01-01",
        "active.lt": "2020-01-31",
        "active.lte": "2020-01-31",
        "start_around.origin": "2020-01-01",
        "start_around.offset": "10d",
        "start_around.scale": "10d",
        "start_around.decay": 0.5,
        "end_around.origin": "2020-01-01",
        "end_around.offset": "10d",
        "end_around.scale": "10d",
        "end_around.decay": 0.5,
        "location_around.origin": "37.7749,-122.4194",
        "location_around.offset": "10km",
        "location_around.scale": "10km",
        "location_around.decay": 0.5,
        "place.scope": [
          "city"
        ],
        "place.exact": [
          "true"
        ],
        "relevance": [
          "true"
        ],
        "limit": 10,
        "top_events.limit": 11,
        "offset": 0,
        "rank_level": [
          1,
          2,
          3
        ],
        "local_rank_level": [
          1,
          2,
          3
        ],
        "aviation_rank_level": [
          1,
          2,
          3
        ],
        "sort": [
          "id",
          "-title"
        ],
        "top_events.sort": [
          "id",
          "-title"
        ],
        "category": [
          "example category"
        ]
      }
    }
  ]
}