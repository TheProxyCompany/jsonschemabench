{
  "description": "sample Github_medium/o61584.json",
  "meta": {
    "full_size": 3461,
    "stripped_size": 849,
    "features": [
      "pattern"
    ],
    "raw_features": [
      "properties",
      "type",
      "type:boolean",
      "type:number",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "properties": {
      "Certificate": {
        "description": "DER-encoded certificate data if an institutional recovery key will be added.",
        "type": "string"
      },
      "Defer": {
        "description": "Set to true to defer enabling FileVault until the designated user logs out. For details, see fdesetup(8). The person enabling FileVault must be either a local user or a mobile account user.",
        "type": "boolean"
      },
      "DeferDontAskAtUserLogout": {
        "description": "When using the Defer option, set this key to true to not request enabling FileVault at user logout time.",
        "type": "number"
      },
      "DeferForceAtUserLoginMaxBypassAttempts": {
        "description": "When using the Defer option you can optionally set this key to the maximum number of times the user can bypass enabling FileVault before it will require that it be enabled before the user can log in. If set to 0, it will always prompt to enable FileVault until it is enabled, though it will allow you to bypass enabling it. Setting this key to â€“1 will disable this feature.",
        "type": "number"
      },
      "Enable": {
        "description": "Set to 'On' to enable FileVault. Set to 'Off' to disable FileVault. This value is required.",
        "type": "boolean"
      },
      "OutputPath": {
        "description": "Path to the location where the recovery key and computer information plist will be stored.",
        "type": "string"
      },
      "Password": {
        "description": "User password of the Open Directory user that will be added to FileVault. Use the UserEntersMissingInfo key if you want to prompt for this information.",
        "type": "string"
      },
      "PayloadCertificateUUID": {
        "description": "UUID of the payload containing the asymmetric recovery key certificate payload.",
        "type": "string"
      },
      "PayloadDescription": {
        "default": "FileVault 2",
        "description": "Description of the payload",
        "type": "string"
      },
      "PayloadDisplayName": {
        "default": "FileVault 2",
        "description": "Name of the payload",
        "type": "string"
      },
      "PayloadIdentifier": {
        "default": "com.apple.MCX.FileVault2",
        "description": "A unique identifier for the payload, dot-delimited.  Usually root PayloadIdentifier+subidentifier",
        "type": "string"
      },
      "PayloadOrganization": {
        "description": "This value describes the issuing organization of the profile, as displayed to the user",
        "type": "string"
      },
      "PayloadType": {
        "default": "com.apple.MCX.FileVault2",
        "description": "The type of the payload, a reverse dns string",
        "type": "string"
      },
      "PayloadUUID": {
        "default": "",
        "description": "Unique identifier for the payload (format 01234567-89AB-CDEF-0123-456789ABCDEF)",
        "pattern": "^[0-9A-Za-z]{8}-[0-9A-Za-z]{4}-[0-9A-Za-z]{4}-[0-9A-Za-z]{4}-[0-9A-Za-z]{12}$",
        "type": "string"
      },
      "PayloadVersion": {
        "default": 1,
        "description": "The version of the whole configuration profile.",
        "type": "number"
      },
      "ShowRecoveryKey": {
        "default": true,
        "description": "Set to false to not display the personal recovery key to the user after FileVault is enabled",
        "type": "boolean"
      },
      "UseKeychain": {
        "description": "If set to true and no certificate information is provided in this payload, the keychain already created at /Library/Keychains/FileVaultMaster.keychain will be used when the institutional recovery key is added.",
        "type": "boolean"
      },
      "UseRecoveryKey": {
        "default": true,
        "description": "Set to true to create a personal recovery key",
        "type": "boolean"
      },
      "UserEntersMissingInfo": {
        "description": "Set to true for manual profile installs to prompt for missing user name or password fields.",
        "type": "boolean"
      },
      "Username": {
        "description": "User name of the Open Directory user that will be added to FileVault.",
        "type": "string"
      }
    },
    "title": "com.apple.MCX.FileVault2",
    "type": "object"
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "Certificate": "MII...==",
        "Defer": true,
        "DeferDontAskAtUserLogout": 1,
        "DeferForceAtUserLoginMaxBypassAttempts": 3,
        "Enable": true,
        "OutputPath": "/Users/Shared/FileVaultRecovery",
        "Password": "password123",
        "PayloadCertificateUUID": "12345678-1234-1234-1234-123456789012",
        "PayloadDescription": "FileVault 2",
        "PayloadDisplayName": "FileVault 2",
        "PayloadIdentifier": "com.apple.MCX.FileVault2",
        "PayloadOrganization": "Apple Inc.",
        "PayloadType": "com.apple.MCX.FileVault2",
        "PayloadUUID": "12345678-1234-1234-1234-123456789012",
        "PayloadVersion": 1,
        "ShowRecoveryKey": true,
        "UseKeychain": false,
        "UseRecoveryKey": true,
        "UserEntersMissingInfo": false,
        "Username": "admin"
      }
    },
    {
      "description": "llama-70b generated negative; focus on pattern keyword",
      "valid": false,
      "rust_error": "\"123456789012\" does not match \"^[0-9A-Za-z]{8}-[0-9A-Za-z]{4}-[0-9A-Za-z]{4}-[0-9A-Za-z]{4}-[0-9A-Za-z]{12}$\"",
      "python_error": "'123456789012' does not match '^[0-9A-Za-z]{8}-[0-9A-Za-z]{4}-[0-9A-Za-z]{4}-[0-9A-Za-z]{4}-[0-9A-Za-z]{12}$'\n\nFailed validating 'pattern' in schema['properties']['PayloadUUID']:\n    {'default': '',\n     'description': 'Unique identifier for the payload (format '\n                    '01234567-89AB-CDEF-0123-456789ABCDEF)',\n     'pattern': '^[0-9A-Za-z]{8}-[0-9A-Za-z]{4}-[0-9A-Za-z]{4}-[0-9A-Za-z]{4}-[0-9A-Za-z]{12}$',\n     'type': 'string'}\n\nOn instance['PayloadUUID']:\n    '123456789012'",
      "data": {
        "Certificate": "MII...==",
        "Defer": true,
        "DeferDontAskAtUserLogout": 1,
        "DeferForceAtUserLoginMaxBypassAttempts": 3,
        "Enable": true,
        "OutputPath": "/Users/Shared/FileVaultRecovery",
        "Password": "password123",
        "PayloadCertificateUUID": "12345678-1234-1234-1234-123456789012",
        "PayloadDescription": "FileVault 2",
        "PayloadDisplayName": "FileVault 2",
        "PayloadIdentifier": "com.apple.MCX.FileVault2",
        "PayloadOrganization": "Apple Inc.",
        "PayloadType": "com.apple.MCX.FileVault2",
        "PayloadUUID": "123456789012",
        "PayloadVersion": 1,
        "ShowRecoveryKey": true,
        "UseKeychain": false,
        "UseRecoveryKey": true,
        "UserEntersMissingInfo": false,
        "Username": "admin"
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"On\" is not of type \"boolean\"",
      "python_error": "123 is not of type 'string'\n\nFailed validating 'type' in schema['properties']['OutputPath']:\n    {'description': 'Path to the location where the recovery key and '\n                    'computer information plist will be stored.',\n     'type': 'string'}\n\nOn instance['OutputPath']:\n    123",
      "data": {
        "Certificate": "MII...==",
        "Defer": true,
        "DeferDontAskAtUserLogout": 1,
        "DeferForceAtUserLoginMaxBypassAttempts": 3,
        "Enable": "On",
        "PayloadCertificateUUID": "12345678-1234-1234-1234-123456789012",
        "PayloadDescription": "FileVault 2",
        "PayloadDisplayName": "FileVault 2",
        "PayloadIdentifier": "com.apple.MCX.FileVault2",
        "PayloadOrganization": "Apple Inc.",
        "PayloadType": "com.apple.MCX.FileVault2",
        "PayloadUUID": "12345678-1234-1234-1234-123456789012",
        "PayloadVersion": 1,
        "ShowRecoveryKey": true,
        "UseKeychain": false,
        "UseRecoveryKey": true,
        "UserEntersMissingInfo": false,
        "Username": "admin",
        "OutputPath": 123,
        "Password": "password123"
      }
    },
    {
      "description": "llama-70b generated negative; focus on pattern keyword",
      "valid": false,
      "rust_error": "\"12345678-1234-1234-1234-12345678901\" does not match \"^[0-9A-Za-z]{8}-[0-9A-Za-z]{4}-[0-9A-Za-z]{4}-[0-9A-Za-z]{4}-[0-9A-Za-z]{12}$\"",
      "python_error": "'12345678-1234-1234-1234-12345678901' does not match '^[0-9A-Za-z]{8}-[0-9A-Za-z]{4}-[0-9A-Za-z]{4}-[0-9A-Za-z]{4}-[0-9A-Za-z]{12}$'\n\nFailed validating 'pattern' in schema['properties']['PayloadUUID']:\n    {'default': '',\n     'description': 'Unique identifier for the payload (format '\n                    '01234567-89AB-CDEF-0123-456789ABCDEF)',\n     'pattern': '^[0-9A-Za-z]{8}-[0-9A-Za-z]{4}-[0-9A-Za-z]{4}-[0-9A-Za-z]{4}-[0-9A-Za-z]{12}$',\n     'type': 'string'}\n\nOn instance['PayloadUUID']:\n    '12345678-1234-1234-1234-12345678901'",
      "data": {
        "Certificate": "MII...==",
        "Defer": true,
        "DeferDontAskAtUserLogout": 1,
        "DeferForceAtUserLoginMaxBypassAttempts": 3,
        "Enable": true,
        "OutputPath": "/Users/Shared/FileVaultRecovery",
        "Password": "password123",
        "PayloadCertificateUUID": "12345678-1234-1234-1234-123456789012",
        "PayloadDescription": "FileVault 2",
        "PayloadDisplayName": "FileVault 2",
        "PayloadIdentifier": "com.apple.MCX.FileVault2",
        "PayloadOrganization": "Apple Inc.",
        "PayloadType": "com.apple.MCX.FileVault2",
        "PayloadUUID": "12345678-1234-1234-1234-12345678901",
        "PayloadVersion": 1,
        "ShowRecoveryKey": true,
        "UseKeychain": false,
        "UseRecoveryKey": true,
        "UserEntersMissingInfo": false,
        "Username": "admin"
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"On\" is not of type \"boolean\"",
      "python_error": "'12345678-1234-1234-1234-12345678901' does not match '^[0-9A-Za-z]{8}-[0-9A-Za-z]{4}-[0-9A-Za-z]{4}-[0-9A-Za-z]{4}-[0-9A-Za-z]{12}$'\n\nFailed validating 'pattern' in schema['properties']['PayloadUUID']:\n    {'default': '',\n     'description': 'Unique identifier for the payload (format '\n                    '01234567-89AB-CDEF-0123-456789ABCDEF)',\n     'pattern': '^[0-9A-Za-z]{8}-[0-9A-Za-z]{4}-[0-9A-Za-z]{4}-[0-9A-Za-z]{4}-[0-9A-Za-z]{12}$',\n     'type': 'string'}\n\nOn instance['PayloadUUID']:\n    '12345678-1234-1234-1234-12345678901'",
      "data": {
        "Certificate": "MII...==",
        "Defer": true,
        "DeferDontAskAtUserLogout": 1,
        "DeferForceAtUserLoginMaxBypassAttempts": 3,
        "Enable": "On",
        "PayloadCertificateUUID": "12345678-1234-1234-1234-123456789012",
        "PayloadDescription": "FileVault 2",
        "PayloadDisplayName": "FileVault 2",
        "PayloadIdentifier": "com.apple.MCX.FileVault2",
        "PayloadOrganization": "Apple Inc.",
        "PayloadType": "com.apple.MCX.FileVault2",
        "PayloadUUID": "12345678-1234-1234-1234-12345678901",
        "PayloadVersion": 1,
        "ShowRecoveryKey": true,
        "UseKeychain": false,
        "UseRecoveryKey": true,
        "UserEntersMissingInfo": false,
        "Username": "admin"
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"yes\" is not of type \"boolean\"",
      "python_error": "'yes' is not of type 'boolean'\n\nFailed validating 'type' in schema['properties']['Enable']:\n    {'description': \"Set to 'On' to enable FileVault. Set to 'Off' to \"\n                    'disable FileVault. This value is required.',\n     'type': 'boolean'}\n\nOn instance['Enable']:\n    'yes'",
      "data": {
        "Certificate": "MII...==",
        "Defer": true,
        "DeferDontAskAtUserLogout": 1,
        "DeferForceAtUserLoginMaxBypassAttempts": 3,
        "Enable": "yes",
        "Invalid type for Enable. It should be a boolean": "OutputPath",
        "Missing value for OutputPath": "Password",
        "Missing value for Password": "PayloadCertificateUUID",
        "Missing value for PayloadCertificateUUID": "PayloadDescription",
        "Missing value for PayloadDescription": "PayloadDisplayName",
        "Missing value for PayloadDisplayName": "PayloadIdentifier",
        "Missing value for PayloadIdentifier": "PayloadOrganization",
        "Missing value for PayloadOrganization": "PayloadType",
        "Missing value for PayloadType": "PayloadUUID",
        "Missing value for PayloadUUID": "PayloadVersion",
        "Missing value for PayloadVersion": "ShowRecoveryKey",
        "Missing value for ShowRecoveryKey": "UseKeychain",
        "Missing value for UseKeychain": "UseRecoveryKey",
        "Missing value for UseRecoveryKey": "UserEntersMissingInfo",
        "Missing value for UserEntersMissingInfo": "Username",
        "Missing value for Username": "InvalidKey",
        "extra key": "InvalidValue"
      }
    }
  ]
}