{
  "description": "sample Github_easy/o17641.json",
  "meta": {
    "full_size": 509,
    "stripped_size": 439,
    "features": [
      "$ref",
      "additionalProperties",
      "additionalProperties:object"
    ],
    "raw_features": [
      "$schema",
      "definitions",
      "properties",
      "required",
      "type",
      "type:[]",
      "type:number",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "definitions": {
      "MyMap1": {
        "additionalProperties": {
          "$ref": "#/definitions/MyType"
        },
        "type": "object"
      },
      "MyMap2": {
        "additionalProperties": {
          "type": [
            "string",
            "number"
          ]
        },
        "description": "The additionalProperties annotation should be ignored",
        "type": "object"
      },
      "MyType": {
        "type": "object"
      }
    },
    "properties": {
      "map1": {
        "$ref": "#/definitions/MyMap1"
      },
      "map2": {
        "$ref": "#/definitions/MyMap2"
      },
      "map3": {
        "$ref": "#/definitions/MyMap2"
      }
    },
    "required": [
      "map1",
      "map2",
      "map3"
    ],
    "type": "object"
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "map1": {
          "key1": {},
          "key2": {}
        },
        "map2": {
          "key1": "value1",
          "key2": 2
        },
        "map3": {
          "key1": "value1",
          "key2": 2
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on additionalProperties keyword with an object schema",
      "valid": false,
      "rust_error": "\"string\" is not of type \"object\"",
      "python_error": "'string' is not of type 'object'\n\nFailed validating 'type' in schema['properties']['map1']['additionalProperties']:\n    {'type': 'object'}\n\nOn instance['map1']['key3']:\n    'string'",
      "data": {
        "map1": {
          "key1": {},
          "key2": {},
          "key3": "string"
        },
        "map2": {
          "key1": "value1",
          "key2": 2
        },
        "map3": {
          "key1": "value1",
          "key2": 2
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on type keyword with an array of types",
      "valid": false,
      "rust_error": "true is not of types \"number\", \"string\"",
      "python_error": "True is not of type 'string', 'number'\n\nFailed validating 'type' in schema['properties']['map2']['additionalProperties']:\n    {'type': ['string', 'number']}\n\nOn instance['map2']['key3']:\n    True",
      "data": {
        "map1": {
          "key1": {},
          "key2": {}
        },
        "map2": {
          "key1": "value1",
          "key2": 2,
          "key3": true
        },
        "map3": {
          "key1": "value1",
          "key2": 2
        }
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"string\" is not of type \"object\"",
      "python_error": "'string' is not of type 'object'\n\nFailed validating 'type' in schema['properties']['map1']['additionalProperties']:\n    {'type': 'object'}\n\nOn instance['map1']['key2']:\n    'string'",
      "data": {
        "map1": {
          "key1": {},
          "key2": "string"
        },
        "map2": {
          "key1": "value1",
          "key2": 2
        },
        "map3": {
          "key1": "value1",
          "key2": 2
        }
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"value2\" is not of type \"object\"",
      "python_error": "'value2' is not of type 'object'\n\nFailed validating 'type' in schema['properties']['map1']['additionalProperties']:\n    {'type': 'object'}\n\nOn instance['map1']['key2']:\n    'value2'",
      "data": {
        "map1": {
          "key1": {},
          "key2": "value2"
        },
        "map2": {
          "key1": "value1",
          "key2": 2
        },
        "map3": {
          "key1": "value1",
          "key2": 2
        }
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "map1": {
          "key1": {
            "key": "value"
          },
          "key2": {
            "key": "value"
          }
        },
        "map2": {
          "key1": "string",
          "key2": 123
        },
        "map3": {
          "key1": "string",
          "key2": 123
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on type keyword with an array of types",
      "valid": false,
      "rust_error": "true is not of types \"number\", \"string\"",
      "python_error": "True is not of type 'string', 'number'\n\nFailed validating 'type' in schema['properties']['map2']['additionalProperties']:\n    {'type': ['string', 'number']}\n\nOn instance['map2']['key3']:\n    True",
      "data": {
        "map1": {
          "key1": {
            "key": "value"
          },
          "key2": {
            "key": "value"
          }
        },
        "map2": {
          "key1": "string",
          "key2": 123,
          "key3": true
        },
        "map3": {
          "key1": "string",
          "key2": 123
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on additionalProperties keyword with an object schema",
      "valid": false,
      "rust_error": "\"string\" is not of type \"object\"",
      "python_error": "'string' is not of type 'object'\n\nFailed validating 'type' in schema['properties']['map1']['additionalProperties']:\n    {'type': 'object'}\n\nOn instance['map1']['key2']:\n    'string'",
      "data": {
        "map1": {
          "key1": {
            "key": "value"
          },
          "key2": "string"
        },
        "map2": {
          "key1": "string",
          "key2": 123
        },
        "map3": {
          "key1": "string",
          "key2": 123
        }
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"string\" is not of type \"object\"",
      "python_error": "True is not of type 'string', 'number'\n\nFailed validating 'type' in schema['properties']['map3']['additionalProperties']:\n    {'type': ['string', 'number']}\n\nOn instance['map3']['key3']:\n    True",
      "data": {
        "map1": {
          "key1": {
            "key": "value"
          },
          "key2": "string"
        },
        "map2": {
          "key1": "string",
          "key2": 123
        },
        "map3": {
          "key1": "string",
          "key2": 123,
          "key3": true
        }
      }
    }
  ]
}