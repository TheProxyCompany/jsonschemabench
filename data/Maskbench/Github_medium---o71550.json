{
  "description": "sample Github_medium/o71550.json",
  "meta": {
    "full_size": 4359,
    "stripped_size": 4359,
    "features": [
      "@siblingKeys",
      "anyOf",
      "items",
      "pattern"
    ],
    "raw_features": [
      "$schema",
      "properties",
      "required",
      "type",
      "type:[]",
      "type:array",
      "type:boolean",
      "type:number",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "type": "object",
    "required": [
      "config"
    ],
    "properties": {
      "config": {
        "type": "object",
        "required": [
          "general"
        ],
        "properties": {
          "general": {
            "type": "object",
            "properties": {
              "planFilePath": {
                "type": "string"
              },
              "plan": {
                "type": "object"
              },
              "executorsPath": {
                "type": "string"
              },
              "notifiersPath": {
                "type": "string"
              },
              "triggersPath": {
                "type": "string"
              },
              "modulesPath": {
                "type": "string"
              },
              "crypto": {
                "type": "object",
                "properties": {
                  "algorithm": {
                    "type": "string"
                  },
                  "iv": {
                    "type": "string"
                  }
                }
              },
              "api": {
                "type": "object",
                "anyOf": [
                  {
                    "required": [
                      "port"
                    ],
                    "properties": {
                      "port": {
                        "type": [
                          "number"
                        ]
                      },
                      "users": {
                        "type": "array"
                      },
                      "secret": {
                        "type": "string"
                      },
                      "limite_req": {
                        "type": "string"
                      },
                      "token_expiration_time": {
                        "type": "number"
                      },
                      "log_display_level": {
                        "type": "string",
                        "pattern": "(combined|common|dev|short|tiny)"
                      },
                      "chainsFieldsResponse": {
                        "type": "array"
                      },
                      "processFieldsResponse": {
                        "type": "array"
                      },
                      "cors": {
                        "type": "object",
                        "properties": {
                          "origin": {
                            "type": [
                              "boolean",
                              "string",
                              "array",
                              "object"
                            ]
                          },
                          "methods": {
                            "type": [
                              "array",
                              "string"
                            ]
                          },
                          "allowedHeaders": {
                            "type": [
                              "array",
                              "string"
                            ]
                          },
                          "exposedHeaders": {
                            "type": [
                              "array",
                              "string"
                            ]
                          },
                          "credentials": {
                            "type": "boolean"
                          },
                          "maxAge": {
                            "type": "number"
                          },
                          "preflightContinue": {
                            "type": "boolean"
                          },
                          "optionsSuccessStatus": {
                            "type": "number"
                          }
                        }
                      }
                    }
                  },
                  {
                    "required": [
                      "unix_socket"
                    ],
                    "properties": {
                      "unix_socket": {
                        "type": "string"
                      },
                      "users": {
                        "type": "array"
                      },
                      "secret": {
                        "type": "string"
                      },
                      "limite_req": {
                        "type": "string"
                      },
                      "token_expiration_time": {
                        "type": "number"
                      },
                      "log_display_level": {
                        "type": "string",
                        "pattern": "(combined|common|dev|short|tiny)"
                      },
                      "chainsFieldsResponse": {
                        "type": "array"
                      },
                      "processFieldsResponse": {
                        "type": "array"
                      },
                      "cors": {
                        "type": "object",
                        "properties": {
                          "origin": {
                            "type": [
                              "boolean",
                              "string",
                              "array",
                              "object"
                            ]
                          },
                          "methods": {
                            "type": [
                              "array",
                              "string"
                            ]
                          },
                          "allowedHeaders": {
                            "type": [
                              "array",
                              "string"
                            ]
                          },
                          "exposedHeaders": {
                            "type": [
                              "array",
                              "string"
                            ]
                          },
                          "credentials": {
                            "type": "boolean"
                          },
                          "maxAge": {
                            "type": "number"
                          },
                          "preflightContinue": {
                            "type": "boolean"
                          },
                          "optionsSuccessStatus": {
                            "type": "number"
                          }
                        }
                      }
                    }
                  },
                  {
                    "required": [
                      "port",
                      "ssl"
                    ],
                    "properties": {
                      "port": {
                        "type": [
                          "string"
                        ]
                      },
                      "ssl": {
                        "type": "boolean"
                      },
                      "key": {
                        "type": "string"
                      },
                      "cert": {
                        "type": "string"
                      },
                      "users": {
                        "type": "array"
                      },
                      "secret": {
                        "type": "string"
                      },
                      "limite_req": {
                        "type": "string"
                      },
                      "token_expiration_time": {
                        "type": "number"
                      },
                      "log_display_level": {
                        "type": "string",
                        "pattern": "(combined|common|dev|short|tiny)"
                      },
                      "chainsFieldsResponse": {
                        "type": "array"
                      },
                      "processFieldsResponse": {
                        "type": "array"
                      },
                      "cors": {
                        "type": "object",
                        "properties": {
                          "origin": {
                            "type": [
                              "boolean",
                              "string",
                              "array",
                              "object"
                            ]
                          },
                          "methods": {
                            "type": [
                              "array",
                              "string"
                            ]
                          },
                          "allowedHeaders": {
                            "type": [
                              "array",
                              "string"
                            ]
                          },
                          "exposedHeaders": {
                            "type": [
                              "array",
                              "string"
                            ]
                          },
                          "credentials": {
                            "type": "boolean"
                          },
                          "maxAge": {
                            "type": "number"
                          },
                          "preflightContinue": {
                            "type": "boolean"
                          },
                          "optionsSuccessStatus": {
                            "type": "number"
                          }
                        }
                      }
                    }
                  }
                ]
              },
              "servers": {
                "type": "array",
                "items": {
                  "type": "object",
                  "anyOf": [
                    {
                      "required": [
                        "id",
                        "endpoint",
                        "port"
                      ],
                      "properties": {
                        "id": {
                          "type": [
                            "string"
                          ]
                        },
                        "endpoint": {
                          "type": [
                            "string"
                          ]
                        },
                        "port": {
                          "type": [
                            "number"
                          ]
                        },
                        "secret": {
                          "type": "string"
                        },
                        "limite_req": {
                          "type": "string"
                        },
                        "token_expiration_time": {
                          "type": "number"
                        },
                        "log_display_level": {
                          "type": "string",
                          "pattern": "(combined|common|dev|short|tiny)"
                        }
                      }
                    },
                    {
                      "required": [
                        "id",
                        "endpoint",
                        "unix_socket"
                      ],
                      "properties": {
                        "id": {
                          "type": [
                            "string"
                          ]
                        },
                        "endpoint": {
                          "type": [
                            "string"
                          ]
                        },
                        "unix_socket": {
                          "type": "string"
                        },
                        "secret": {
                          "type": "string"
                        },
                        "limite_req": {
                          "type": "string"
                        },
                        "token_expiration_time": {
                          "type": "number"
                        },
                        "log_display_level": {
                          "type": "string",
                          "pattern": "(combined|common|dev|short|tiny)"
                        }
                      }
                    },
                    {
                      "required": [
                        "id",
                        "endpoint",
                        "port",
                        "ssl"
                      ],
                      "properties": {
                        "id": {
                          "type": [
                            "string"
                          ]
                        },
                        "endpoint": {
                          "type": [
                            "string"
                          ]
                        },
                        "port": {
                          "type": [
                            "string"
                          ]
                        },
                        "ssl": {
                          "type": "boolean"
                        },
                        "key": {
                          "type": "string"
                        },
                        "cert": {
                          "type": "string"
                        },
                        "secret": {
                          "type": "string"
                        },
                        "limite_req": {
                          "type": "string"
                        },
                        "token_expiration_time": {
                          "type": "number"
                        },
                        "log_display_level": {
                          "type": "string",
                          "pattern": "(combined|common|dev|short|tiny)"
                        }
                      }
                    }
                  ]
                }
              },
              "queues": {
                "type": "object",
                "properties": {
                  "refreshInterval": {
                    "type": "number"
                  }
                }
              },
              "runnerty.io": {
                "type": "object",
                "required": [
                  "apikey"
                ],
                "properties": {
                  "apikey": {
                    "type": "string"
                  },
                  "disable": {
                    "type": "boolean"
                  },
                  "host": {
                    "type": "string"
                  },
                  "healthChecker": {
                    "type": "boolean"
                  },
                  "remoteControl": {
                    "type": "boolean"
                  },
                  "debug": {
                    "type": "boolean"
                  }
                }
              }
            }
          },
          "triggers": {
            "type": "array"
          },
          "executors": {
            "type": "array"
          },
          "notifiers": {
            "type": "array"
          },
          "global_values": {
            "type": "array",
            "items": {
              "type": "object"
            }
          }
        }
      }
    }
  },
  "tests": [
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "config": {
          "general": {
            "planFilePath": "/path/to/plan/file",
            "plan": {},
            "executorsPath": "/path/to/executors",
            "notifiersPath": "/path/to/notifiers",
            "triggersPath": "/path/to/triggers",
            "modulesPath": "/path/to/modules",
            "crypto": {
              "algorithm": "aes-256-cbc",
              "iv": "your_iv_here"
            },
            "api": {
              "port": 8080,
              "users": [
                {
                  "username": "user1",
                  "password": "password1"
                },
                {
                  "username": "user2",
                  "password": "password2"
                }
              ],
              "secret": "your_secret_here",
              "limite_req": "10",
              "token_expiration_time": 3600,
              "log_display_level": "combined",
              "chainsFieldsResponse": [
                "field1",
                "field2"
              ],
              "processFieldsResponse": [
                "field3",
                "field4"
              ],
              "cors": {
                "origin": "*",
                "methods": "GET,POST,PUT,DELETE",
                "allowedHeaders": "Content-Type,Authorization",
                "exposedHeaders": "Content-Type,Authorization",
                "credentials": true,
                "maxAge": 3600,
                "preflightContinue": false,
                "optionsSuccessStatus": 200
              }
            },
            "servers": [
              {
                "id": "server1",
                "endpoint": "http://example.com",
                "port": 8080,
                "secret": "your_secret_here",
                "limite_req": "10",
                "token_expiration_time": 3600,
                "log_display_level": "combined"
              },
              {
                "id": "server2",
                "endpoint": "http://example.com",
                "unix_socket": "/path/to/unix/socket",
                "secret": "your_secret_here",
                "limite_req": "10",
                "token_expiration_time": 3600,
                "log_display_level": "combined"
              },
              {
                "id": "server3",
                "endpoint": "http://example.com",
                "port": 8080,
                "secret": "your_secret_here",
                "limite_req": "10",
                "token_expiration_time": 3600,
                "log_display_level": "combined",
                "ssl": true,
                "key": "/path/to/key",
                "cert": "/path/to/cert"
              }
            ],
            "queues": {
              "refreshInterval": 300
            },
            "runnerty.io": {
              "apikey": "your_api_key_here",
              "disable": false,
              "host": "https://runnerty.io",
              "healthChecker": true,
              "remoteControl": true,
              "debug": false
            }
          },
          "triggers": [
            {
              "id": "trigger1",
              "type": "type1",
              "options": {
                "option1": "value1",
                "option2": "value2"
              }
            },
            {
              "id": "trigger2",
              "type": "type2",
              "options": {
                "option3": "value3",
                "option4": "value4"
              }
            }
          ],
          "executors": [
            {
              "id": "executor1",
              "type": "type1",
              "options": {
                "option1": "value1",
                "option2": "value2"
              }
            },
            {
              "id": "executor2",
              "type": "type2",
              "options": {
                "option3": "value3",
                "option4": "value4"
              }
            }
          ],
          "notifiers": [
            {
              "id": "notifier1",
              "type": "type1",
              "options": {
                "option1": "value1",
                "option2": "value2"
              }
            },
            {
              "id": "notifier2",
              "type": "type2",
              "options": {
                "option3": "value3",
                "option4": "value4"
              }
            }
          ],
          "global_values": [
            {
              "key": "key1",
              "value": "value1"
            },
            {
              "key": "key2",
              "value": "value2"
            }
          ]
        }
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "config": {
          "general": {
            "planFilePath": "/path/to/plan/file",
            "plan": {},
            "executorsPath": "/path/to/executors",
            "notifiersPath": "/path/to/notifiers",
            "triggersPath": "/path/to/triggers",
            "modulesPath": "/path/to/modules",
            "crypto": {
              "algorithm": "aes-256-cbc",
              "iv": "your_iv_here"
            },
            "api": {
              "port": 8080,
              "users": [
                {
                  "username": "user1",
                  "password": "password1"
                },
                {
                  "username": "user2",
                  "password": "password2"
                }
              ],
              "secret": "your_secret_here",
              "limite_req": "100",
              "token_expiration_time": 3600,
              "log_display_level": "combined",
              "chainsFieldsResponse": [
                "field1",
                "field2"
              ],
              "processFieldsResponse": [
                "field3",
                "field4"
              ],
              "cors": {
                "origin": "*",
                "methods": [
                  "GET",
                  "POST",
                  "PUT",
                  "DELETE"
                ],
                "allowedHeaders": [
                  "Content-Type",
                  "Authorization"
                ],
                "exposedHeaders": [
                  "Content-Type",
                  "Authorization"
                ],
                "credentials": true,
                "maxAge": 3600,
                "preflightContinue": false,
                "optionsSuccessStatus": 200
              }
            },
            "servers": [
              {
                "id": "server1",
                "endpoint": "http://localhost:8080",
                "port": 8080,
                "secret": "your_secret_here",
                "limite_req": "100",
                "token_expiration_time": 3600,
                "log_display_level": "combined"
              },
              {
                "id": "server2",
                "endpoint": "http://localhost:8081",
                "unix_socket": "/path/to/unix/socket",
                "secret": "your_secret_here",
                "limite_req": "100",
                "token_expiration_time": 3600,
                "log_display_level": "combined"
              },
              {
                "id": "server3",
                "endpoint": "http://localhost:8082",
                "port": 8082,
                "secret": "your_secret_here",
                "limite_req": "100",
                "token_expiration_time": 3600,
                "log_display_level": "combined",
                "ssl": true,
                "key": "/path/to/key",
                "cert": "/path/to/cert"
              }
            ],
            "queues": {
              "refreshInterval": 300
            },
            "runnerty.io": {
              "apikey": "your_api_key_here",
              "disable": false,
              "host": "https://runnerty.io",
              "healthChecker": true,
              "remoteControl": true,
              "debug": false
            }
          },
          "triggers": [
            {
              "id": "trigger1",
              "type": "timer",
              "params": {
                "interval": "1m"
              }
            },
            {
              "id": "trigger2",
              "type": "http",
              "params": {
                "method": "GET",
                "url": "http://localhost:8080"
              }
            }
          ],
          "executors": [
            {
              "id": "executor1",
              "type": "shell",
              "params": {
                "command": "echo Hello World!"
              }
            },
            {
              "id": "executor2",
              "type": "http",
              "params": {
                "method": "POST",
                "url": "http://localhost:8080"
              }
            }
          ],
          "notifiers": [
            {
              "id": "notifier1",
              "type": "email",
              "params": {
                "to": "user@example.com",
                "subject": "Hello World!"
              }
            },
            {
              "id": "notifier2",
              "type": "slack",
              "params": {
                "channel": "#general",
                "message": "Hello World!"
              }
            }
          ],
          "global_values": [
            {
              "key": "value1",
              "value": "Hello World!"
            },
            {
              "key": "value2",
              "value": " Foo Bar!"
            }
          ]
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on type keyword with an array of types",
      "valid": false,
      "rust_error": "{\"port\":\"8080\",\"users\":[{\"username\":\"user1\",\"password\":\"password1\"},{\"username\":\"user2\",\"password\":\"password2\"}],\"secret\":\"your_secret_here\",\"limite_req\":\"100\",\"token_expiration_time\":3600,\"log_display_level\":\"combined\",\"chainsFieldsResponse\":[\"field1\",\"field2\"],\"processFieldsResponse\":[\"field3\",\"field4\"],\"cors\":{\"origin\":\"*\",\"methods\":[\"GET\",\"POST\",\"PUT\",\"DELETE\"],\"allowedHeaders\":[\"Content-Type\",\"Authorization\"],\"exposedHeaders\":[\"Content-Type\",\"Authorization\"],\"credentials\":true,\"maxAge\":3600,\"preflightContinue\":false,\"optionsSuccessStatus\":200}} is not valid under any of the schemas listed in the 'anyOf' keyword",
      "python_error": "'8080' is not of type 'number'\n\nFailed validating 'type' in schema[0]['properties']['port']:\n    {'type': ['number']}\n\nOn instance['port']:\n    '8080'",
      "data": {
        "config": {
          "general": {
            "planFilePath": "/path/to/plan/file",
            "plan": {},
            "executorsPath": "/path/to/executors",
            "notifiersPath": "/path/to/notifiers",
            "triggersPath": "/path/to/triggers",
            "modulesPath": "/path/to/modules",
            "crypto": {
              "algorithm": "aes-256-cbc",
              "iv": "your_iv_here"
            },
            "api": {
              "port": "8080",
              "users": [
                {
                  "username": "user1",
                  "password": "password1"
                },
                {
                  "username": "user2",
                  "password": "password2"
                }
              ],
              "secret": "your_secret_here",
              "limite_req": "100",
              "token_expiration_time": 3600,
              "log_display_level": "combined",
              "chainsFieldsResponse": [
                "field1",
                "field2"
              ],
              "processFieldsResponse": [
                "field3",
                "field4"
              ],
              "cors": {
                "origin": "*",
                "methods": [
                  "GET",
                  "POST",
                  "PUT",
                  "DELETE"
                ],
                "allowedHeaders": [
                  "Content-Type",
                  "Authorization"
                ],
                "exposedHeaders": [
                  "Content-Type",
                  "Authorization"
                ],
                "credentials": true,
                "maxAge": 3600,
                "preflightContinue": false,
                "optionsSuccessStatus": 200
              }
            },
            "servers": [
              {
                "id": "server1",
                "endpoint": "http://localhost:8080",
                "port": 8080,
                "secret": "your_secret_here",
                "limite_req": "100",
                "token_expiration_time": 3600,
                "log_display_level": "combined"
              },
              {
                "id": "server2",
                "endpoint": "http://localhost:8081",
                "unix_socket": "/path/to/unix/socket",
                "secret": "your_secret_here",
                "limite_req": "100",
                "token_expiration_time": 3600,
                "log_display_level": "combined"
              },
              {
                "id": "server3",
                "endpoint": "http://localhost:8082",
                "port": 8082,
                "ssl": true,
                "key": "/path/to/key",
                "cert": "/path/to/cert",
                "secret": "your_secret_here",
                "limite_req": "100",
                "token_expiration_time": 3600,
                "log_display_level": "combined"
              }
            ],
            "queues": {
              "refreshInterval": 300
            },
            "runnerty.io": {
              "apikey": "your_api_key_here",
              "disable": false,
              "host": "https://runnerty.io",
              "healthChecker": true,
              "remoteControl": true,
              "debug": false
            }
          },
          "triggers": [
            {
              "id": "trigger1",
              "type": "timer",
              "params": {
                "interval": "1m"
              }
            },
            {
              "id": "trigger2",
              "type": "http",
              "params": {
                "method": "GET",
                "url": "http://localhost:8080"
              }
            }
          ],
          "executors": [
            {
              "id": "executor1",
              "type": "shell",
              "params": {
                "command": "echo Hello World!"
              }
            },
            {
              "id": "executor2",
              "type": "http",
              "params": {
                "method": "POST",
                "url": "http://localhost:8080"
              }
            }
          ],
          "notifiers": [
            {
              "id": "notifier1",
              "type": "email",
              "params": {
                "to": "user@example.com",
                "subject": "Hello World!"
              }
            },
            {
              "id": "notifier2",
              "type": "slack",
              "params": {
                "channel": "#general",
                "message": "Hello World!"
              }
            }
          ],
          "global_values": [
            {
              "key": "value1",
              "value": "Hello World!"
            },
            {
              "key": "value2",
              "value": " Foo Bar!"
            }
          ]
        }
      }
    }
  ]
}