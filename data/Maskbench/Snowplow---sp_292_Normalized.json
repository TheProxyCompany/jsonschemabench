{
  "description": "sample Snowplow/sp_292_Normalized.json",
  "meta": {
    "full_size": 1123,
    "stripped_size": 884,
    "features": [
      "@minmaxLength",
      "additionalProperties",
      "enum"
    ],
    "raw_features": [
      "_boolSchema",
      "maxLength",
      "properties",
      "required",
      "type",
      "type:boolean",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "additionalProperties": false,
    "description": "Schema for MaxMind GeoIP2 ip lookups enrichment",
    "properties": {
      "enabled": {
        "type": "boolean"
      },
      "name": {
        "maxLength": 256,
        "type": "string"
      },
      "parameters": {
        "additionalProperties": false,
        "properties": {
          "connectionType": {
            "properties": {
              "database": {
                "enum": [
                  "GeoIP2-Connection-Type.mmdb"
                ]
              },
              "uri": {
                "_format": "uri",
                "type": "string"
              }
            },
            "required": [
              "database",
              "uri"
            ],
            "type": "object"
          },
          "domain": {
            "properties": {
              "database": {
                "enum": [
                  "GeoIP2-Domain.mmdb"
                ]
              },
              "uri": {
                "_format": "uri",
                "type": "string"
              }
            },
            "required": [
              "database",
              "uri"
            ],
            "type": "object"
          },
          "geo": {
            "properties": {
              "database": {
                "enum": [
                  "GeoLite2-City.mmdb",
                  "GeoIP2-City.mmdb"
                ]
              },
              "uri": {
                "_format": "uri",
                "type": "string"
              }
            },
            "required": [
              "database",
              "uri"
            ],
            "type": "object"
          },
          "isp": {
            "properties": {
              "database": {
                "enum": [
                  "GeoIP2-ISP.mmdb"
                ]
              },
              "uri": {
                "_format": "uri",
                "type": "string"
              }
            },
            "required": [
              "database",
              "uri"
            ],
            "type": "object"
          }
        },
        "type": "object"
      },
      "vendor": {
        "maxLength": 256,
        "type": "string"
      }
    },
    "required": [
      "name",
      "vendor",
      "enabled",
      "parameters"
    ],
    "self": {
      "format": "jsonschema",
      "name": "ip_lookups",
      "vendor": "com.snowplowanalytics.snowplow",
      "version": "2-0-0"
    },
    "type": "object"
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "enabled": true,
        "name": "MaxMind GeoIP2 ip lookups enrichment",
        "parameters": {
          "connectionType": {
            "database": "GeoIP2-Connection-Type.mmdb",
            "uri": "file:///path/to/GeoIP2-Connection-Type.mmdb"
          },
          "domain": {
            "database": "GeoIP2-Domain.mmdb",
            "uri": "file:///path/to/GeoIP2-Domain.mmdb"
          },
          "geo": {
            "database": "GeoLite2-City.mmdb",
            "uri": "file:///path/to/GeoLite2-City.mmdb"
          },
          "isp": {
            "database": "GeoIP2-ISP.mmdb",
            "uri": "file:///path/to/GeoIP2-ISP.mmdb"
          }
        },
        "vendor": "com.maxmind"
      }
    },
    {
      "description": "llama-70b generated negative; focus on maxLength keyword",
      "valid": false,
      "rust_error": "\"MaxMind GeoIP2 ip lookups enrichment with a very long name that exceeds the maximum allowed length of 256 characters. This is a test to see if the maxLength keyword is properly validated by the schema validator. If the validator does not support maxLength, it should not flag this as an error, but it is actually invalid according to the schema.\" is longer than 256 characters",
      "python_error": "'MaxMind GeoIP2 ip lookups enrichment with a very long name that exceeds the maximum allowed length of 256 characters. This is a test to see if the maxLength keyword is properly validated by the schema validator. If the validator does not support maxLength, it should not flag this as an error, but it is actually invalid according to the schema.' is too long\n\nFailed validating 'maxLength' in schema['properties']['name']:\n    {'maxLength': 256, 'type': 'string'}\n\nOn instance['name']:\n    ('MaxMind GeoIP2 ip lookups enrichment with a very long name that '\n     'exceeds the maximum allowed length of 256 characters. This is a test '\n     'to see if the maxLength keyword is properly validated by the schema '\n     'validator. If the validator does not support maxLength, it should '\n     'not flag this as an error, but it is actually invalid according to '\n     'the schema.')",
      "data": {
        "enabled": true,
        "name": "MaxMind GeoIP2 ip lookups enrichment with a very long name that exceeds the maximum allowed length of 256 characters. This is a test to see if the maxLength keyword is properly validated by the schema validator. If the validator does not support maxLength, it should not flag this as an error, but it is actually invalid according to the schema.",
        "parameters": {
          "connectionType": {
            "database": "GeoIP2-Connection-Type.mmdb",
            "uri": "file:///path/to/GeoIP2-Connection-Type.mmdb"
          },
          "domain": {
            "database": "GeoIP2-Domain.mmdb",
            "uri": "file:///path/to/GeoIP2-Domain.mmdb"
          },
          "geo": {
            "database": "GeoLite2-City.mmdb",
            "uri": "file:///path/to/GeoLite2-City.mmdb"
          },
          "isp": {
            "database": "GeoIP2-ISP.mmdb",
            "uri": "file:///path/to/GeoIP2-ISP.mmdb"
          }
        },
        "vendor": "com.maxmind"
      }
    }
  ]
}