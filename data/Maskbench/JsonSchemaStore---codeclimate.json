{
  "description": "sample JsonSchemaStore/codeclimate.json",
  "meta": {
    "full_size": 3338,
    "stripped_size": 2320,
    "features": [
      "$ref",
      "@siblingKeys",
      "additionalProperties",
      "additionalProperties:object",
      "format",
      "format:uri",
      "items"
    ],
    "raw_features": [
      "$schema",
      "definitions",
      "id",
      "properties",
      "type",
      "type:[]",
      "type:array",
      "type:boolean",
      "type:integer",
      "type:null",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$comment": "https://docs.codeclimate.com/docs/advanced-configuration",
    "$schema": "http://json-schema.org/draft-04/schema#",
    "definitions": {
      "enabled": {
        "type": "object",
        "properties": {
          "enabled": {
            "title": "Enabled",
            "type": "boolean",
            "default": true
          }
        }
      },
      "config": {
        "title": "Config",
        "type": "object"
      },
      "threshold": {
        "title": "Threshold",
        "type": [
          "integer",
          "null"
        ]
      }
    },
    "description": "Configuration file as an alternative for configuring your repository in the settings page.",
    "id": "https://json.schemastore.org/codeclimate.json",
    "properties": {
      "version": {
        "title": "Version",
        "description": "Required to adjust maintainability checks.",
        "type": "string",
        "default": "2"
      },
      "prepare": {
        "title": "Prepare",
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "url": {
              "title": "URL",
              "type": "string",
              "format": "uri"
            },
            "path": {
              "title": "Path",
              "type": "string"
            }
          }
        }
      },
      "checks": {
        "title": "Checks",
        "type": "object",
        "properties": {
          "argument-count": {
            "title": "Argument Count",
            "$ref": "#/definitions/enabled",
            "properties": {
              "config": {
                "$ref": "#/definitions/config",
                "properties": {
                  "threshold": {
                    "$ref": "#/definitions/threshold",
                    "default": 4
                  }
                }
              }
            }
          },
          "complex-logic": {
            "title": "Complex Logic",
            "$ref": "#/definitions/enabled",
            "properties": {
              "config": {
                "$ref": "#/definitions/config",
                "properties": {
                  "threshold": {
                    "$ref": "#/definitions/threshold",
                    "default": 4
                  }
                }
              }
            }
          },
          "file-lines": {
            "title": "File Lines",
            "$ref": "#/definitions/enabled",
            "properties": {
              "config": {
                "$ref": "#/definitions/config",
                "properties": {
                  "threshold": {
                    "$ref": "#/definitions/threshold",
                    "default": 250
                  }
                }
              }
            }
          },
          "method-complexity": {
            "title": "Method Complexity",
            "$ref": "#/definitions/enabled",
            "properties": {
              "config": {
                "$ref": "#/definitions/config",
                "properties": {
                  "threshold": {
                    "$ref": "#/definitions/threshold",
                    "default": 5
                  }
                }
              }
            }
          },
          "method-count": {
            "title": "Method Count",
            "$ref": "#/definitions/enabled",
            "properties": {
              "config": {
                "$ref": "#/definitions/config",
                "properties": {
                  "threshold": {
                    "$ref": "#/definitions/threshold",
                    "default": 20
                  }
                }
              }
            }
          },
          "method-lines": {
            "title": "Method Lines",
            "$ref": "#/definitions/enabled",
            "properties": {
              "config": {
                "$ref": "#/definitions/config",
                "properties": {
                  "threshold": {
                    "$ref": "#/definitions/threshold",
                    "default": 25
                  }
                }
              }
            }
          },
          "nested-control-flow": {
            "title": "Nested Control Flow",
            "$ref": "#/definitions/enabled",
            "properties": {
              "config": {
                "$ref": "#/definitions/config",
                "properties": {
                  "threshold": {
                    "$ref": "#/definitions/threshold",
                    "default": 4
                  }
                }
              }
            }
          },
          "return-statements": {
            "title": "Return Statements",
            "$ref": "#/definitions/enabled",
            "properties": {
              "config": {
                "$ref": "#/definitions/config",
                "properties": {
                  "threshold": {
                    "$ref": "#/definitions/threshold",
                    "default": 4
                  }
                }
              }
            }
          },
          "similar-code": {
            "title": "Similar Code",
            "$ref": "#/definitions/enabled",
            "properties": {
              "config": {
                "$ref": "#/definitions/config",
                "properties": {
                  "threshold": {
                    "$ref": "#/definitions/threshold"
                  }
                }
              }
            }
          },
          "identical-code": {
            "title": "Identical Code",
            "$ref": "#/definitions/enabled",
            "properties": {
              "config": {
                "$ref": "#/definitions/config",
                "properties": {
                  "threshold": {
                    "$ref": "#/definitions/threshold"
                  }
                }
              }
            }
          }
        }
      },
      "plugins": {
        "title": "Plugins",
        "description": "To add a plugin to your analysis. You can find the complete list of available plugins here: https://docs.codeclimate.com/docs/list-of-engines",
        "type": "object",
        "additionalProperties": {
          "$ref": "#/definitions/enabled"
        }
      },
      "exclude_patterns": {
        "title": "Exclude Patterns",
        "type": "array",
        "items": {
          "title": "Exclude Pattern",
          "type": "string"
        }
      }
    },
    "title": "Code Climate Configuration",
    "type": "object"
  },
  "tests": [
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "version": "2",
        "prepare": [
          {
            "url": "https://example.com/script.js",
            "path": "/path/to/script.js"
          }
        ],
        "checks": {
          "argument-count": {
            "enabled": true,
            "config": {
              "threshold": 4
            }
          },
          "complex-logic": {
            "enabled": true,
            "config": {
              "threshold": 4
            }
          },
          "file-lines": {
            "enabled": true,
            "config": {
              "threshold": 250
            }
          },
          "method-complexity": {
            "enabled": true,
            "config": {
              "threshold": 5
            }
          },
          "method-count": {
            "enabled": true,
            "config": {
              "threshold": 20
            }
          },
          "method-lines": {
            "enabled": true,
            "config": {
              "threshold": 25
            }
          },
          "nested-control-flow": {
            "enabled": true,
            "config": {
              "threshold": 4
            }
          },
          "return-statements": {
            "enabled": true,
            "config": {
              "threshold": 4
            }
          },
          "similar-code": {
            "enabled": true,
            "config": {
              "threshold": 10
            }
          },
          "identical-code": {
            "enabled": true,
            "config": {
              "threshold": 10
            }
          }
        },
        "plugins": {
          "plugin1": {
            "enabled": true
          },
          "plugin2": {
            "enabled": false
          }
        },
        "exclude_patterns": [
          "/path/to/exclude1",
          "/path/to/exclude2"
        ]
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "version": "2",
        "prepare": [
          {
            "url": "https://example.com/script.js",
            "path": "script.js"
          }
        ],
        "checks": {
          "argument-count": {
            "enabled": true,
            "config": {
              "threshold": 5
            }
          },
          "complex-logic": {
            "enabled": false,
            "config": {
              "threshold": 4
            }
          },
          "file-lines": {
            "enabled": true,
            "config": {
              "threshold": 300
            }
          },
          "method-complexity": {
            "enabled": true,
            "config": {
              "threshold": 6
            }
          },
          "method-count": {
            "enabled": true,
            "config": {
              "threshold": 25
            }
          },
          "method-lines": {
            "enabled": true,
            "config": {
              "threshold": 30
            }
          },
          "nested-control-flow": {
            "enabled": true,
            "config": {
              "threshold": 5
            }
          },
          "return-statements": {
            "enabled": true,
            "config": {
              "threshold": 5
            }
          },
          "similar-code": {
            "enabled": true,
            "config": {
              "threshold": 80
            }
          },
          "identical-code": {
            "enabled": true,
            "config": {
              "threshold": 90
            }
          }
        },
        "plugins": {
          "rubocop": {
            "enabled": true
          },
          "eslint": {
            "enabled": false
          }
        },
        "exclude_patterns": [
          "node_modules/*",
          "vendor/*"
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on format keyword",
      "valid": false,
      "rust_error": "\"invalid url\" is not a \"uri\"",
      "python_error": "'invalid url' is not a 'uri'\n\nFailed validating 'format' in schema['properties']['prepare']['items']['properties']['url']:\n    {'title': 'URL', 'type': 'string', 'format': 'uri'}\n\nOn instance['prepare'][0]['url']:\n    'invalid url'",
      "data": {
        "version": "2",
        "prepare": [
          {
            "url": "invalid url",
            "path": "script.js"
          }
        ],
        "checks": {
          "argument-count": {
            "enabled": true,
            "config": {
              "threshold": 5
            }
          }
        },
        "plugins": {
          "rubocop": {
            "enabled": true
          }
        },
        "exclude_patterns": [
          "node_modules/*",
          "vendor/*"
        ]
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "42 is not of type \"string\"",
      "python_error": "42 is not of type 'string'\n\nFailed validating 'type' in schema['properties']['exclude_patterns']['items']:\n    {'title': 'Exclude Pattern', 'type': 'string'}\n\nOn instance['exclude_patterns'][1]:\n    42",
      "data": {
        "version": "2",
        "prepare": [
          {
            "url": "https://example.com/script.js",
            "path": "script.js"
          },
          {
            "url": "https://example.com/script2.js",
            "path": 42
          }
        ],
        "checks": {
          "argument-count": {
            "enabled": true,
            "config": {
              "threshold": "five"
            }
          },
          "complex-logic": {
            "enabled": false,
            "config": {
              "threshold": null
            }
          },
          "file-lines": {
            "enabled": true,
            "config": {
              "threshold": 300
            }
          },
          "method-complexity": {
            "enabled": true,
            "config": {
              "threshold": 6
            }
          },
          "method-count": {
            "enabled": true,
            "config": {
              "threshold": 25
            }
          },
          "method-lines": {
            "enabled": true,
            "config": {
              "threshold": 30
            }
          },
          "nested-control-flow": {
            "enabled": true,
            "config": {
              "threshold": 5
            }
          },
          "return-statements": {
            "enabled": true,
            "config": {
              "threshold": 5
            }
          },
          "similar-code": {
            "enabled": true,
            "config": {
              "threshold": 80
            }
          },
          "identical-code": {
            "enabled": true,
            "config": {
              "threshold": 90
            }
          }
        },
        "plugins": {
          "rubocop": {
            "enabled": true
          },
          "eslint": {
            "enabled": false
          }
        },
        "exclude_patterns": [
          "node_modules/*",
          42
        ]
      }
    }
  ]
}