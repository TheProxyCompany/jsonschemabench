{
  "description": "sample Github_easy/o39081.json",
  "meta": {
    "full_size": 576,
    "stripped_size": 321,
    "features": [
      "@minmaxItems",
      "additionalProperties",
      "const",
      "items"
    ],
    "raw_features": [
      "_boolSchema",
      "minItems",
      "properties",
      "required",
      "type",
      "type:array",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "additionalProperties": false,
    "properties": {
      "$schema": {
        "type": "string"
      },
      "$tool": {
        "const": "go-tag-apis",
        "description": "Must be set to go-tag-apis.",
        "type": "string"
      },
      "dist": {
        "description": "The output dir path (relative to the pwd).",
        "type": "string"
      },
      "src": {
        "description": "Input go files(Glob), expand with env first.",
        "items": {
          "preproccess": "env",
          "type": "string"
        },
        "minItems": 1,
        "type": "array"
      },
      "structs": {
        "description": "Go struct names to parse.",
        "items": {
          "type": "string"
        },
        "type": "array"
      }
    },
    "required": [
      "$tool",
      "src",
      "structs",
      "dist"
    ],
    "title": "go-tag-apis Config",
    "type": "object"
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "$schema": "https://json-schema.org/draft-07/schema#",
        "$tool": "go-tag-apis",
        "dist": "output",
        "src": [
          "input/*.go"
        ],
        "structs": [
          "User",
          "Product"
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on minItems keyword",
      "valid": false,
      "rust_error": "[] has less than 1 item",
      "python_error": "[] should be non-empty\n\nFailed validating 'minItems' in schema['properties']['src']:\n    {'description': 'Input go files(Glob), expand with env first.',\n     'items': {'preproccess': 'env', 'type': 'string'},\n     'minItems': 1,\n     'type': 'array'}\n\nOn instance['src']:\n    []",
      "data": {
        "$schema": "https://json-schema.org/draft-07/schema#",
        "$tool": "go-tag-apis",
        "dist": "output",
        "src": [],
        "structs": [
          "User",
          "Product"
        ]
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "Additional properties are not allowed ('extra' was unexpected)",
      "python_error": "Additional properties are not allowed ('extra' was unexpected)\n\nFailed validating 'additionalProperties' in schema:\n    {'additionalProperties': False,\n     'properties': {'$schema': {'type': 'string'},\n                    '$tool': {'const': 'go-tag-apis',\n                              'description': 'Must be set to go-tag-apis.',\n                              'type': 'string'},\n                    'dist': {'description': 'The output dir path (relative '\n                                            'to the pwd).',\n                             'type': 'string'},\n                    'src': {'description': 'Input go files(Glob), expand '\n                                           'with env first.',\n                            'items': {'preproccess': 'env',\n                                      'type': 'string'},\n                            'minItems': 1,\n                            'type': 'array'},\n                    'structs': {'description': 'Go struct names to parse.',\n                                'items.. (402 more)",
      "data": {
        "$schema": "https://json-schema.org/draft-07/schema#",
        "$tool": "go-tag-apis",
        "dist": "output",
        "src": [
          "input/*.go"
        ],
        "structs": [
          "User",
          "Product"
        ],
        "extra": "invalid"
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "123 is not of type \"string\"",
      "python_error": "123 is not of type 'string'\n\nFailed validating 'type' in schema['properties']['src']['items']:\n    {'preproccess': 'env', 'type': 'string'}\n\nOn instance['src'][1]:\n    123",
      "data": {
        "$schema": "https://json-schema.org/draft-07/schema#",
        "$tool": "go-tag-apis",
        "dist": "output",
        "src": [
          "input/*.go",
          123
        ],
        "structs": [
          "User",
          "Product"
        ]
      }
    }
  ]
}