{
  "description": "sample Github_medium/o42889.json",
  "meta": {
    "full_size": 1945,
    "stripped_size": 1587,
    "features": [
      "@minmaxInteger",
      "@minmaxLength",
      "additionalProperties",
      "enum",
      "pattern",
      "patternProperties"
    ],
    "raw_features": [
      "$schema",
      "_boolSchema",
      "id",
      "maxLength",
      "maximum",
      "minLength",
      "minimum",
      "properties",
      "required",
      "type",
      "type:boolean",
      "type:integer",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "id": "http://schemas.gdbots.io/json-schema/gdbots/pbjx/envelope/1-0-1.json#",
    "$schema": "http://json-schema.org/draft-04/schema#",
    "type": "object",
    "properties": {
      "_schema": {
        "type": "string",
        "pattern": "^pbj:([a-z0-9-]+):([a-z0-9\\.-]+):([a-z0-9-]+)?:([a-z0-9-]+):([0-9]+-[0-9]+-[0-9]+)$",
        "default": "pbj:gdbots:pbjx::envelope:1-0-1"
      },
      "envelope_id": {
        "type": "string",
        "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
      },
      "ok": {
        "type": "boolean",
        "default": true
      },
      "code": {
        "type": "integer",
        "default": 0,
        "minimum": 0,
        "maximum": 65535
      },
      "http_code": {
        "type": "integer",
        "default": 200,
        "enum": [
          0,
          100,
          101,
          102,
          200,
          201,
          202,
          203,
          204,
          205,
          206,
          207,
          208,
          226,
          300,
          301,
          302,
          303,
          304,
          305,
          306,
          307,
          308,
          400,
          401,
          402,
          403,
          404,
          405,
          406,
          407,
          408,
          409,
          410,
          411,
          412,
          413,
          414,
          415,
          416,
          417,
          418,
          422,
          423,
          424,
          425,
          426,
          428,
          429,
          499,
          431,
          451,
          500,
          501,
          502,
          503,
          504,
          505,
          506,
          507,
          508,
          510,
          511
        ]
      },
      "etag": {
        "type": "string",
        "pattern": "^[\\w\\.:-]+$"
      },
      "error_name": {
        "type": "string",
        "pattern": "^[\\w\\/\\.:-]+$"
      },
      "error_message": {
        "type": "string",
        "minLength": 0,
        "maxLength": 65535
      },
      "message_ref": {
        "type": "object",
        "properties": {
          "curie": {
            "type": "string",
            "pattern": "^([a-z0-9-]+):([a-z0-9\\.-]+):([a-z0-9-]+)?:([a-z0-9-]+)$",
            "minLength": 0,
            "maxLength": 146
          },
          "id": {
            "type": "string",
            "pattern": "^[A-Za-z0-9:_\\-]+$",
            "minLength": 0,
            "maxLength": 255
          },
          "tag": {
            "type": "string",
            "pattern": "^([\\w\\/-]|[\\w-][\\w\\/-]*[\\w-])$",
            "minLength": 0,
            "maxLength": 255
          }
        },
        "required": [
          "curie",
          "id"
        ],
        "additionalProperties": false
      },
      "message": {
        "type": "object"
      },
      "derefs": {
        "type": "object",
        "patternProperties": {
          "^[a-zA-Z_]{1}[\\w\\.:-]+$": {
            "type": "object"
          }
        },
        "additionalProperties": false,
        "description": "Some pbjx operations (normally requests) can include \"dereferenced\" messages on the envelope to prevent the consumer from needing to make multiple HTTP requests. It is up to the consumer to make use of the dereferenced messages if/when they are provided."
      }
    },
    "required": [
      "_schema",
      "envelope_id"
    ],
    "additionalProperties": false
  },
  "tests": [
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "_schema": "pbj:gdbots:pbjx::envelope:1-0-1",
        "envelope_id": "12345678-1234-1234-1234-123456789012",
        "ok": true,
        "code": 0,
        "http_code": 200,
        "etag": "some-etag-value",
        "message_ref": {
          "curie": "gdbots:ncr:node:article",
          "id": "some-node-id"
        },
        "message": {
          "some": "message"
        },
        "derefs": {
          "some_deref": {
            "some": "dereferenced message"
          }
        }
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "_schema": "pbj:gdbots:pbjx::envelope:1-0-1",
        "envelope_id": "12345678-1234-1234-1234-123456789012",
        "ok": true,
        "code": 0,
        "http_code": 200,
        "etag": "some-etag-value",
        "message_ref": {
          "curie": "gdbots:ncr:node:article",
          "id": "some-node-id"
        },
        "message": {
          "some": "message"
        },
        "derefs": {
          "some-deref-key": {
            "some": "deref-value"
          }
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on patternProperties keyword",
      "valid": false,
      "rust_error": "Additional properties are not allowed ('123some-deref-key' was unexpected)",
      "python_error": "'123some-deref-key' does not match any of the regexes: '^[a-zA-Z_]{1}[\\\\w\\\\.:-]+$'\n\nFailed validating 'additionalProperties' in schema['properties']['derefs']:\n    {'type': 'object',\n     'patternProperties': {'^[a-zA-Z_]{1}[\\\\w\\\\.:-]+$': {'type': 'object'}},\n     'additionalProperties': False,\n     'description': 'Some pbjx operations (normally requests) can include '\n                    '\"dereferenced\" messages on the envelope to prevent '\n                    'the consumer from needing to make multiple HTTP '\n                    'requests. It is up to the consumer to make use of the '\n                    'dereferenced messages if/when they are provided.'}\n\nOn instance['derefs']:\n    {'123some-deref-key': {'non-allowed-key': 'some-value'},\n     'some-deref-key': {'some': 'deref-value'}}",
      "data": {
        "_schema": "pbj:gdbots:pbjx::envelope:1-0-1",
        "envelope_id": "12345678-1234-1234-1234-123456789012",
        "ok": true,
        "code": 0,
        "http_code": 200,
        "etag": "some-etag-value",
        "message_ref": {
          "curie": "gdbots:ncr:node:article",
          "id": "some-node-id"
        },
        "message": {
          "some": "message"
        },
        "derefs": {
          "123some-deref-key": {
            "non-allowed-key": "some-value"
          },
          "some-deref-key": {
            "some": "deref-value"
          }
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on pattern keyword",
      "valid": false,
      "rust_error": "\"tag_value#\" does not match \"^([\\w\\/-]|[\\w-][\\w\\/-]*[\\w-])$\"",
      "python_error": "'tag_value#' does not match '^([\\\\w\\\\/-]|[\\\\w-][\\\\w\\\\/-]*[\\\\w-])$'\n\nFailed validating 'pattern' in schema['properties']['message_ref']['properties']['tag']:\n    {'type': 'string',\n     'pattern': '^([\\\\w\\\\/-]|[\\\\w-][\\\\w\\\\/-]*[\\\\w-])$',\n     'minLength': 0,\n     'maxLength': 255}\n\nOn instance['message_ref']['tag']:\n    'tag_value#'",
      "data": {
        "_schema": "pbj:gdbots:pbjx::envelope:1-0-1",
        "envelope_id": "12345678-1234-1234-1234-123456789012",
        "ok": true,
        "code": 0,
        "http_code": 200,
        "etag": "some-etag-value",
        "message_ref": {
          "curie": "gdbots:ncr:node:article",
          "id": "some-node-id",
          "tag": "tag_value#"
        },
        "message": {
          "some": "message"
        },
        "derefs": {
          "some-deref-key": {
            "some": "deref-value"
          }
        }
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "65536 is greater than the maximum of 65535",
      "python_error": "'!some-etag-value' does not match '^[\\\\w\\\\.:-]+$'\n\nFailed validating 'pattern' in schema['properties']['etag']:\n    {'type': 'string', 'pattern': '^[\\\\w\\\\.:-]+$'}\n\nOn instance['etag']:\n    '!some-etag-value'",
      "data": {
        "_schema": "pbj:gdbots:pbjx::envelope:1-0-1",
        "envelope_id": "12345678-1234-1234-1234-123456789012",
        "ok": true,
        "code": 65536,
        "http_code": 200,
        "etag": "!some-etag-value",
        "message_ref": {
          "curie": "gdbots:ncr:node:article",
          "id": "some-node-id"
        },
        "message": {
          "some": "message"
        },
        "derefs": {
          "some-deref-key": {
            "some": "deref-value"
          }
        }
      }
    }
  ]
}