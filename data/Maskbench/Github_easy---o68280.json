{
  "description": "sample Github_easy/o68280.json",
  "meta": {
    "full_size": 764,
    "stripped_size": 342,
    "features": [
      "enum",
      "pattern"
    ],
    "raw_features": [
      "$schema",
      "properties",
      "required",
      "type",
      "type:[]",
      "type:integer",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "title": "Adform Adapter Params",
    "description": "A schema which validates params accepted by the Adform adapter",
    "type": "object",
    "properties": {
      "mid": {
        "type": [
          "integer",
          "string"
        ],
        "description": "An ID which identifies the placement selling the impression"
      },
      "priceType": {
        "type": "string",
        "enum": [
          "gross",
          "net"
        ],
        "description": "An expected price type (net or gross) of bids."
      },
      "mkv": {
        "type": "string",
        "description": "Comma-separated key-value pairs. Forbidden symbols: &. Example: mkv='color:blue,length:350'",
        "pattern": "^(\\s*|((\\s*[^,:&\\s]+\\s*:[^,:&]*)(,\\s*[^,:&\\s]+\\s*:[^,:&]*)*))$"
      },
      "mkw": {
        "type": "string",
        "description": "Comma-separated keywords. Forbidden symbols: &.",
        "pattern": "^[^&]*$"
      }
    },
    "required": [
      "mid"
    ]
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "mid": 12345,
        "priceType": "gross",
        "mkv": "color:blue,length:350",
        "mkw": "sports,football,basketball"
      }
    },
    {
      "description": "llama-70b generated negative; focus on pattern keyword",
      "valid": false,
      "rust_error": "\"color:blue&length:350\" does not match \"^(\\s*|((\\s*[^,:&\\s]+\\s*:[^,:&]*)(,\\s*[^,:&\\s]+\\s*:[^,:&]*)*))$\"",
      "python_error": "'color:blue&length:350' does not match '^(\\\\s*|((\\\\s*[^,:&\\\\s]+\\\\s*:[^,:&]*)(,\\\\s*[^,:&\\\\s]+\\\\s*:[^,:&]*)*))$'\n\nFailed validating 'pattern' in schema['properties']['mkv']:\n    {'type': 'string',\n     'description': 'Comma-separated key-value pairs. Forbidden symbols: '\n                    \"&. Example: mkv='color:blue,length:350'\",\n     'pattern': '^(\\\\s*|((\\\\s*[^,:&\\\\s]+\\\\s*:[^,:&]*)(,\\\\s*[^,:&\\\\s]+\\\\s*:[^,:&]*)*))$'}\n\nOn instance['mkv']:\n    'color:blue&length:350'",
      "data": {
        "mid": 12345,
        "priceType": "gross",
        "mkv": "color:blue&length:350",
        "mkw": "sports,football,basketball"
      }
    },
    {
      "description": "llama-70b generated negative; focus on type keyword with an array of types",
      "valid": false,
      "rust_error": "12345.67 is not of types \"integer\", \"string\"",
      "python_error": "12345.67 is not of type 'integer', 'string'\n\nFailed validating 'type' in schema['properties']['mid']:\n    {'type': ['integer', 'string'],\n     'description': 'An ID which identifies the placement selling the '\n                    'impression'}\n\nOn instance['mid']:\n    12345.67",
      "data": {
        "mid": 12345.67,
        "priceType": "gross",
        "mkv": "color:blue,length:350",
        "mkw": "sports,football,basketball"
      }
    },
    {
      "description": "llama-70b generated negative; focus on type keyword with an array of types",
      "valid": false,
      "rust_error": "true is not of types \"integer\", \"string\"",
      "python_error": "True is not of type 'integer', 'string'\n\nFailed validating 'type' in schema['properties']['mid']:\n    {'type': ['integer', 'string'],\n     'description': 'An ID which identifies the placement selling the '\n                    'impression'}\n\nOn instance['mid']:\n    True",
      "data": {
        "mid": true,
        "priceType": "gross",
        "mkv": "color:blue,length:350",
        "mkw": "sports,football,basketball"
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "mid": 12345,
        "priceType": "gross",
        "mkv": "color:blue,length:350",
        "mkw": "sports,football,advertising"
      }
    },
    {
      "description": "llama-70b generated negative; focus on pattern keyword",
      "valid": false,
      "rust_error": "\"color:blue&length:350\" does not match \"^(\\s*|((\\s*[^,:&\\s]+\\s*:[^,:&]*)(,\\s*[^,:&\\s]+\\s*:[^,:&]*)*))$\"",
      "python_error": "'color:blue&length:350' does not match '^(\\\\s*|((\\\\s*[^,:&\\\\s]+\\\\s*:[^,:&]*)(,\\\\s*[^,:&\\\\s]+\\\\s*:[^,:&]*)*))$'\n\nFailed validating 'pattern' in schema['properties']['mkv']:\n    {'type': 'string',\n     'description': 'Comma-separated key-value pairs. Forbidden symbols: '\n                    \"&. Example: mkv='color:blue,length:350'\",\n     'pattern': '^(\\\\s*|((\\\\s*[^,:&\\\\s]+\\\\s*:[^,:&]*)(,\\\\s*[^,:&\\\\s]+\\\\s*:[^,:&]*)*))$'}\n\nOn instance['mkv']:\n    'color:blue&length:350'",
      "data": {
        "mid": 12345,
        "priceType": "gross",
        "mkv": "color:blue&length:350",
        "mkw": "sports,football,advertising"
      }
    },
    {
      "description": "llama-70b generated negative; focus on type keyword with an array of types",
      "valid": false,
      "rust_error": "true is not of types \"integer\", \"string\"",
      "python_error": "True is not of type 'integer', 'string'\n\nFailed validating 'type' in schema['properties']['mid']:\n    {'type': ['integer', 'string'],\n     'description': 'An ID which identifies the placement selling the '\n                    'impression'}\n\nOn instance['mid']:\n    True",
      "data": {
        "mid": true,
        "priceType": "gross",
        "mkv": "color:blue,length:350",
        "mkw": "sports,football,advertising"
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"color:blue&length:350\" does not match \"^(\\s*|((\\s*[^,:&\\s]+\\s*:[^,:&]*)(,\\s*[^,:&\\s]+\\s*:[^,:&]*)*))$\"",
      "python_error": "'sports,football,advertising&more' does not match '^[^&]*$'\n\nFailed validating 'pattern' in schema['properties']['mkw']:\n    {'type': 'string',\n     'description': 'Comma-separated keywords. Forbidden symbols: &.',\n     'pattern': '^[^&]*$'}\n\nOn instance['mkw']:\n    'sports,football,advertising&more'",
      "data": {
        "mid": 12345,
        "priceType": "gross",
        "mkv": "color:blue&length:350",
        "mkw": "sports,football,advertising&more"
      }
    }
  ]
}