{
  "description": "sample Kubernetes/kb_653_Normalized.json",
  "meta": {
    "full_size": 1786,
    "stripped_size": 296,
    "features": [],
    "raw_features": [
      "properties",
      "type",
      "type:[]",
      "type:null",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "description": "ObjectReference contains enough information to let you inspect or modify the referred object.",
    "properties": {
      "apiVersion": {
        "description": "API version of the referent.",
        "type": [
          "string",
          "null"
        ]
      },
      "fieldPath": {
        "description": "If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered the event) or if no container name is specified \"spec.containers[2]\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object.",
        "type": [
          "string",
          "null"
        ]
      },
      "kind": {
        "description": "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
        "type": [
          "string",
          "null"
        ]
      },
      "name": {
        "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
        "type": [
          "string",
          "null"
        ]
      },
      "namespace": {
        "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
        "type": [
          "string",
          "null"
        ]
      },
      "resourceVersion": {
        "description": "Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
        "type": [
          "string",
          "null"
        ]
      },
      "uid": {
        "description": "UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids",
        "type": [
          "string",
          "null"
        ]
      }
    },
    "type": "object"
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "apiVersion": "v1",
        "fieldPath": "spec.containers{name}",
        "kind": "Pod",
        "name": "example-pod",
        "namespace": "default",
        "resourceVersion": "123456",
        "uid": "12345678-1234-1234-1234-123456789012"
      }
    },
    {
      "description": "llama-70b generated negative; focus on type keyword with an array of types",
      "valid": false,
      "rust_error": "123 is not of types \"null\", \"string\"",
      "python_error": "123 is not of type 'string', 'null'\n\nFailed validating 'type' in schema['properties']['apiVersion']:\n    {'description': 'API version of the referent.',\n     'type': ['string', 'null']}\n\nOn instance['apiVersion']:\n    123",
      "data": {
        "apiVersion": 123,
        "fieldPath": "spec.containers{name}",
        "kind": "Pod",
        "name": "example-pod",
        "namespace": "default",
        "resourceVersion": "123456",
        "uid": "12345678-1234-1234-1234-123456789012"
      }
    },
    {
      "description": "llama-70b generated negative; focus on type keyword with an array of types",
      "valid": false,
      "rust_error": "true is not of types \"null\", \"string\"",
      "python_error": "True is not of type 'string', 'null'\n\nFailed validating 'type' in schema['properties']['apiVersion']:\n    {'description': 'API version of the referent.',\n     'type': ['string', 'null']}\n\nOn instance['apiVersion']:\n    True",
      "data": {
        "apiVersion": true,
        "fieldPath": "spec.containers{name}",
        "kind": "Pod",
        "name": "example-pod",
        "namespace": "default",
        "resourceVersion": "123456",
        "uid": "12345678-1234-1234-1234-123456789012"
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "apiVersion": "v1",
        "fieldPath": "spec.containers{name}",
        "kind": "Pod",
        "name": "example-pod",
        "namespace": "default",
        "resourceVersion": "12345",
        "uid": "12345678-1234-1234-1234-123456789012"
      }
    },
    {
      "description": "llama-70b generated negative; focus on type keyword with an array of types",
      "valid": false,
      "rust_error": "123 is not of types \"null\", \"string\"",
      "python_error": "123 is not of type 'string', 'null'\n\nFailed validating 'type' in schema['properties']['apiVersion']:\n    {'description': 'API version of the referent.',\n     'type': ['string', 'null']}\n\nOn instance['apiVersion']:\n    123",
      "data": {
        "apiVersion": 123,
        "fieldPath": "spec.containers{name}",
        "kind": "Pod",
        "name": "example-pod",
        "namespace": "default",
        "resourceVersion": "12345",
        "uid": "12345678-1234-1234-1234-123456789012"
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "true is not of types \"null\", \"string\"",
      "python_error": "True is not of type 'string', 'null'\n\nFailed validating 'type' in schema['properties']['apiVersion']:\n    {'description': 'API version of the referent.',\n     'type': ['string', 'null']}\n\nOn instance['apiVersion']:\n    True",
      "data": {
        "apiVersion": true,
        "fieldPath": "spec.containers{name}",
        "kind": "Pod",
        "name": "example-pod",
        "namespace": "default",
        "resourceVersion": "12345",
        "uid": "12345678-1234-1234-1234-123456789012",
        "extraneousProperty": "a"
      }
    }
  ]
}