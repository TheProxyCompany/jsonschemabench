{
  "description": "sample Kubernetes/kb_1039_Normalized.json",
  "meta": {
    "full_size": 1073,
    "stripped_size": 204,
    "features": [],
    "raw_features": [
      "properties",
      "required",
      "type",
      "type:[]",
      "type:null",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "description": "Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference, or a value for non-objects such as user and group names.",
    "properties": {
      "apiGroup": {
        "description": "APIGroup holds the API group of the referenced subject. Defaults to \"\" for ServiceAccount subjects. Defaults to \"rbac.authorization.k8s.io\" for User and Group subjects.",
        "type": [
          "string",
          "null"
        ]
      },
      "kind": {
        "description": "Kind of object being referenced. Values defined by this API group are \"User\", \"Group\", and \"ServiceAccount\". If the Authorizer does not recognized the kind value, the Authorizer should report an error.",
        "type": [
          "string",
          "null"
        ]
      },
      "name": {
        "description": "Name of the object being referenced.",
        "type": [
          "string",
          "null"
        ]
      },
      "namespace": {
        "description": "Namespace of the referenced object.  If the object kind is non-namespace, such as \"User\" or \"Group\", and this value is not empty the Authorizer should report an error.",
        "type": [
          "string",
          "null"
        ]
      }
    },
    "required": [
      "kind",
      "name"
    ],
    "type": "object"
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "apiGroup": "rbac.authorization.k8s.io",
        "kind": "User",
        "name": "john-doe",
        "namespace": null
      }
    },
    {
      "description": "llama-70b generated negative; focus on type keyword with an array of types",
      "valid": false,
      "rust_error": "123 is not of types \"null\", \"string\"",
      "python_error": "123 is not of type 'string', 'null'\n\nFailed validating 'type' in schema['properties']['apiGroup']:\n    {'description': 'APIGroup holds the API group of the referenced '\n                    'subject. Defaults to \"\" for ServiceAccount subjects. '\n                    'Defaults to \"rbac.authorization.k8s.io\" for User and '\n                    'Group subjects.',\n     'type': ['string', 'null']}\n\nOn instance['apiGroup']:\n    123",
      "data": {
        "apiGroup": 123,
        "kind": "User",
        "name": "john-doe",
        "namespace": null
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "123 is not of types \"null\", \"string\"",
      "python_error": "123 is not of type 'string', 'null'\n\nFailed validating 'type' in schema['properties']['name']:\n    {'description': 'Name of the object being referenced.',\n     'type': ['string', 'null']}\n\nOn instance['name']:\n    123",
      "data": {
        "apiGroup": "rbac.authorization.k8s.io",
        "kind": "User",
        "name": 123,
        "namespace": null
      }
    }
  ]
}