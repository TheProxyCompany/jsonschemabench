{
  "description": "sample Github_medium/o56748.json",
  "meta": {
    "full_size": 1619,
    "stripped_size": 513,
    "features": [
      "$ref",
      "@siblingKeys",
      "allOf"
    ],
    "raw_features": [
      "$schema",
      "definitions",
      "properties",
      "type",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "@type": "ContactPoint",
    "@context": "http://schema.org/",
    "description": "Schema.org ContactPoint",
    "type": "object",
    "definitions": {
      "Thing": {
        "@type": "Thing",
        "type": "object",
        "properties": {
          "additionalType": {
            "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.",
            "type": "string",
            "_format": "uri"
          },
          "description": {
            "description": "A short description of the item.",
            "type": "string"
          },
          "image": {
            "description": "URL of an image of the item.",
            "type": "string",
            "_format": "uri"
          },
          "name": {
            "description": "The name of the item.",
            "type": "string"
          },
          "url": {
            "description": "URL of the item.",
            "type": "string",
            "_format": "uri"
          }
        }
      },
      "ContactPoint": {
        "@type": "ContactPoint",
        "type": "object",
        "properties": {
          "contactType": {
            "description": "A person or organization can have different contact points, for different purposes. For example, a sales contact point, a PR contact point and so on. This property is used to specify the kind of contact point.",
            "type": "string"
          },
          "email": {
            "description": "Email address.",
            "type": "string"
          },
          "faxNumber": {
            "description": "The fax number.",
            "type": "string"
          },
          "telephone": {
            "description": "The telephone number.",
            "type": "string"
          }
        }
      }
    },
    "allOf": [
      {
        "$ref": "#/definitions/Thing"
      },
      {
        "$ref": "#/definitions/ContactPoint"
      }
    ]
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "@type": "ContactPoint",
        "@context": "http://schema.org/",
        "additionalType ": "http://www.productontology.org/id/Contact_point",
        "description ": "Contact us for more information",
        "image ": "https://example.com/image.jpg",
        "name ": "Example Company",
        "url ": "https://example.com",
        "contactType ": "Customer Support",
        "email ": "support@example.com",
        "faxNumber ": "+1-123-456-7890",
        "telephone ": "+1-987-654-3210"
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "additionalType": "http://schema.org/ContactPoint",
        "description": "Main contact point for the company",
        "image": "https://example.com/image.jpg",
        "name": "Main Contact",
        "url": "https://example.com/contact",
        "contactType": "customer service",
        "email": "info@example.com",
        "faxNumber": "+1-202-555-1234",
        "telephone": "+1-202-555-1234",
        "@type": "ContactPoint",
        "@context": "http://schema.org/"
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "123 is not of type \"string\"",
      "python_error": "123 is not of type 'string'\n\nFailed validating 'type' in schema['allOf'][0]['properties']['additionalType']:\n    {'description': 'An additional type for the item, typically used for '\n                    'adding more specific types from external vocabularies '\n                    'in microdata syntax. This is a relationship between '\n                    'something and a class that the thing is in. In RDFa '\n                    'syntax, it is better to use the native RDFa syntax - '\n                    \"the 'typeof' attribute - for multiple types. \"\n                    'Schema.org tools may have only weaker understanding '\n                    'of extra types, in particular those defined '\n                    'externally.',\n     'type': 'string',\n     '_format': 'uri'}\n\nOn instance['additionalType']:\n    123",
      "data": {
        "@type": "ContactPoint",
        "@context": "http://schema.org/",
        "additionalType": 123,
        "description": "",
        "image": "image.jpg",
        "name": "",
        "url": "https://example.com/contact",
        "contactType": "customer service",
        "email": "info@example.com",
        "faxNumber": "1234567890",
        "telephone": "+1-202-555-1234",
        "extraProperty": "extraValue"
      }
    }
  ]
}