{
  "description": "sample Github_trivial/o41609.json",
  "meta": {
    "full_size": 151,
    "stripped_size": 151,
    "features": [
      "pattern"
    ],
    "raw_features": [
      "$schema",
      "type",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "type": "string",
    "pattern": "^-?P([0-9]+Y)?([0-9]+M)?([0-9]+D)?(T([0-9]+H)?([0-9]+M)?([0-9]+S)?)?$"
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": "PT1H30M45S"
    },
    {
      "description": "llama-70b generated negative; focus on pattern keyword",
      "valid": false,
      "rust_error": "{\"PT1H30M45X\":\"PT1H30M45S\"} is not of type \"string\"",
      "python_error": "{'PT1H30M45X': 'PT1H30M45S'} is not of type 'string'\n\nFailed validating 'type' in schema:\n    {'$schema': 'http://json-schema.org/draft-04/schema#',\n     'type': 'string',\n     'pattern': '^-?P([0-9]+Y)?([0-9]+M)?([0-9]+D)?(T([0-9]+H)?([0-9]+M)?([0-9]+S)?)?$'}\n\nOn instance:\n    {'PT1H30M45X': 'PT1H30M45S'}",
      "data": {
        "PT1H30M45X": "PT1H30M45S"
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "{\"instance\":\"PT1H30M45\"} is not of type \"string\"",
      "python_error": "{'instance': 'PT1H30M45'} is not of type 'string'\n\nFailed validating 'type' in schema:\n    {'$schema': 'http://json-schema.org/draft-04/schema#',\n     'type': 'string',\n     'pattern': '^-?P([0-9]+Y)?([0-9]+M)?([0-9]+D)?(T([0-9]+H)?([0-9]+M)?([0-9]+S)?)?$'}\n\nOn instance:\n    {'instance': 'PT1H30M45'}",
      "data": {
        "instance": "PT1H30M45"
      }
    },
    {
      "description": "llama-70b generated negative; focus on pattern keyword",
      "valid": false,
      "rust_error": "{\"instance\":\"PT1H30M45SX\"} is not of type \"string\"",
      "python_error": "{'instance': 'PT1H30M45SX'} is not of type 'string'\n\nFailed validating 'type' in schema:\n    {'$schema': 'http://json-schema.org/draft-04/schema#',\n     'type': 'string',\n     'pattern': '^-?P([0-9]+Y)?([0-9]+M)?([0-9]+D)?(T([0-9]+H)?([0-9]+M)?([0-9]+S)?)?$'}\n\nOn instance:\n    {'instance': 'PT1H30M45SX'}",
      "data": {
        "instance": "PT1H30M45SX"
      }
    },
    {
      "description": "llama-70b generated negative; focus on pattern keyword",
      "valid": false,
      "rust_error": "{\"PT1H30M45SX\":\"extra key\"} is not of type \"string\"",
      "python_error": "{'PT1H30M45SX': 'extra key'} is not of type 'string'\n\nFailed validating 'type' in schema:\n    {'$schema': 'http://json-schema.org/draft-04/schema#',\n     'type': 'string',\n     'pattern': '^-?P([0-9]+Y)?([0-9]+M)?([0-9]+D)?(T([0-9]+H)?([0-9]+M)?([0-9]+S)?)?$'}\n\nOn instance:\n    {'PT1H30M45SX': 'extra key'}",
      "data": {
        "PT1H30M45SX": "extra key"
      }
    },
    {
      "description": "llama-70b generated negative; focus on pattern keyword",
      "valid": false,
      "rust_error": "{\"PT1H30M45S\":null} is not of type \"string\"",
      "python_error": "{'PT1H30M45S': None} is not of type 'string'\n\nFailed validating 'type' in schema:\n    {'$schema': 'http://json-schema.org/draft-04/schema#',\n     'type': 'string',\n     'pattern': '^-?P([0-9]+Y)?([0-9]+M)?([0-9]+D)?(T([0-9]+H)?([0-9]+M)?([0-9]+S)?)?$'}\n\nOn instance:\n    {'PT1H30M45S': None}",
      "data": {
        "PT1H30M45S": null
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "{\"instance\":\"PT1H30MX45S\"} is not of type \"string\"",
      "python_error": "{'instance': 'PT1H30MX45S'} is not of type 'string'\n\nFailed validating 'type' in schema:\n    {'$schema': 'http://json-schema.org/draft-04/schema#',\n     'type': 'string',\n     'pattern': '^-?P([0-9]+Y)?([0-9]+M)?([0-9]+D)?(T([0-9]+H)?([0-9]+M)?([0-9]+S)?)?$'}\n\nOn instance:\n    {'instance': 'PT1H30MX45S'}",
      "data": {
        "instance": "PT1H30MX45S"
      }
    }
  ]
}