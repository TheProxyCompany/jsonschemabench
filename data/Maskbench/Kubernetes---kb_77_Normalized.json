{
  "description": "sample Kubernetes/kb_77_Normalized.json",
  "meta": {
    "full_size": 1713,
    "stripped_size": 494,
    "features": [
      "$ref"
    ],
    "raw_features": [
      "definitions",
      "properties",
      "required",
      "type",
      "type:[]",
      "type:boolean",
      "type:null",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "definitions": {
      "https:__kubernetesjsonschema_dev_master__defs_json_defs_io_k8s_api_core_v1_SecretReference": {
        "description": "SecretReference represents a Secret Reference. It has enough information to retrieve secret in any namespace",
        "properties": {
          "name": {
            "description": "Name is unique within a namespace to reference a secret resource.",
            "type": "string"
          },
          "namespace": {
            "description": "Namespace defines the space within which the secret name must be unique.",
            "type": "string"
          }
        },
        "type": "object"
      }
    },
    "description": "Represents a cinder volume resource in Openstack. A Cinder volume must exist before mounting to a container. The volume must also be in the same region as the kubelet. Cinder volumes support ownership management and SELinux relabeling.",
    "properties": {
      "fsType": {
        "description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: https://examples.k8s.io/mysql-cinder-pd/README.md",
        "type": [
          "string",
          "null"
        ]
      },
      "readOnly": {
        "description": "Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://examples.k8s.io/mysql-cinder-pd/README.md",
        "type": [
          "boolean",
          "null"
        ]
      },
      "secretRef": {
        "$ref": "#/definitions/https:__kubernetesjsonschema_dev_master__defs_json_defs_io_k8s_api_core_v1_SecretReference",
        "description": "Optional: points to a secret object containing parameters used to connect to OpenStack."
      },
      "volumeID": {
        "description": "volume id used to identify the volume in cinder. More info: https://examples.k8s.io/mysql-cinder-pd/README.md",
        "type": [
          "string",
          "null"
        ]
      }
    },
    "required": [
      "volumeID"
    ],
    "type": "object"
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "fsType": "ext4",
        "readOnly": false,
        "secretRef": {
          "name": "my-secret",
          "namespace": "default"
        },
        "volumeID": "12345678-1234-1234-1234-123456789012"
      }
    },
    {
      "description": "llama-70b generated negative; focus on type keyword with an array of types",
      "valid": false,
      "rust_error": "123 is not of types \"null\", \"string\"",
      "python_error": "123 is not of type 'string', 'null'\n\nFailed validating 'type' in schema['properties']['fsType']:\n    {'description': 'Filesystem type to mount. Must be a filesystem type '\n                    'supported by the host operating system. Examples: '\n                    '\"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be '\n                    '\"ext4\" if unspecified. More info: '\n                    'https://examples.k8s.io/mysql-cinder-pd/README.md',\n     'type': ['string', 'null']}\n\nOn instance['fsType']:\n    123",
      "data": {
        "fsType": 123,
        "readOnly": false,
        "secretRef": {
          "name": "my-secret",
          "namespace": "default"
        },
        "volumeID": "12345678-1234-1234-1234-123456789012"
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "12345 is not of type \"string\"",
      "python_error": "12345 is not of type 'string'\n\nFailed validating 'type' in schema['properties']['secretRef']['properties']['name']:\n    {'description': 'Name is unique within a namespace to reference a '\n                    'secret resource.',\n     'type': 'string'}\n\nOn instance['secretRef']['name']:\n    12345",
      "data": {
        "fsType": "ext4",
        "readOnly": false,
        "secretRef": {
          "name": 12345,
          "namespace": "default"
        },
        "volumeID": "12345678-1234-1234-1234-123456789012"
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "123 is not of types \"null\", \"string\"",
      "python_error": "'not a boolean' is not of type 'boolean', 'null'\n\nFailed validating 'type' in schema['properties']['readOnly']:\n    {'description': 'Optional: Defaults to false (read/write). ReadOnly '\n                    'here will force the ReadOnly setting in VolumeMounts. '\n                    'More info: '\n                    'https://examples.k8s.io/mysql-cinder-pd/README.md',\n     'type': ['boolean', 'null']}\n\nOn instance['readOnly']:\n    'not a boolean'",
      "data": {
        "fsType": 123,
        "readOnly": "not a boolean",
        "secretRef": {
          "name": 123
        },
        "volumeID": "12345678-1234-1234-1234-123456789012"
      }
    }
  ]
}