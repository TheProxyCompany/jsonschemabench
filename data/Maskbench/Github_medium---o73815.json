{
  "description": "sample Github_medium/o73815.json",
  "meta": {
    "full_size": 780,
    "stripped_size": 750,
    "features": [
      "enum",
      "items",
      "pattern"
    ],
    "raw_features": [
      "$schema",
      "properties",
      "required",
      "type",
      "type:array",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "title": "channon plan schema",
    "type": "object",
    "properties": {
      "name": {
        "type": "string"
      },
      "description": {
        "type": "string"
      },
      "steps": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "payload": {
              "type": "string",
              "pattern": "^#!"
            }
          },
          "required": [
            "name",
            "payload"
          ]
        }
      },
      "notifications": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "target": {
              "type": "string",
              "enum": [
                "every-run",
                "every-failure",
                "result-changed"
              ]
            },
            "payload": {
              "type": "string",
              "pattern": "^#!"
            }
          },
          "required": [
            "target",
            "payload"
          ]
        }
      },
      "triggers": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string"
            },
            "schedule": {
              "type": "string"
            }
          },
          "required": [
            "type"
          ]
        }
      },
      "tags": {
        "type": "array",
        "items": {
          "type": "string"
        }
      }
    },
    "required": [
      "name"
    ]
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "name": "Example Channon Plan",
        "description": "This is an example plan.",
        "steps": [
          {
            "name": "Step 1",
            "payload": "#!"
          },
          {
            "name": "Step 2",
            "payload": "#!"
          }
        ],
        "notifications": [
          {
            "target": "every-run",
            "payload": "#!"
          },
          {
            "target": "every-failure",
            "payload": "#!"
          }
        ],
        "triggers": [
          {
            "type": "cron",
            "schedule": "* * * * *"
          }
        ],
        "tags": [
          "example",
          "channon"
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on pattern keyword",
      "valid": false,
      "rust_error": "\"Invalid\" does not match \"^#!\"",
      "python_error": "'Invalid' does not match '^#!'\n\nFailed validating 'pattern' in schema['properties']['steps']['items']['properties']['payload']:\n    {'type': 'string', 'pattern': '^#!'}\n\nOn instance['steps'][0]['payload']:\n    'Invalid'",
      "data": {
        "name": "Example Channon Plan",
        "description": "This is an example plan.",
        "steps": [
          {
            "name": "Step 1",
            "payload": "Invalid"
          },
          {
            "name": "Step 2",
            "payload": "#!"
          }
        ],
        "notifications": [
          {
            "target": "every-run",
            "payload": "#!"
          },
          {
            "target": "every-failure",
            "payload": "Invalid"
          }
        ],
        "triggers": [
          {
            "type": "cron",
            "schedule": "* * * * *"
          }
        ],
        "tags": [
          "example",
          "channon"
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on pattern keyword",
      "valid": false,
      "rust_error": "\"!\" does not match \"^#!\"",
      "python_error": "'!' does not match '^#!'\n\nFailed validating 'pattern' in schema['properties']['steps']['items']['properties']['payload']:\n    {'type': 'string', 'pattern': '^#!'}\n\nOn instance['steps'][0]['payload']:\n    '!'",
      "data": {
        "name": "Example Channon Plan",
        "description": "This is an example plan.",
        "steps": [
          {
            "name": "Step 1",
            "payload": "!"
          },
          {
            "name": "Step 2",
            "payload": "#!"
          }
        ],
        "notifications": [
          {
            "target": "every-run",
            "payload": "#!"
          },
          {
            "target": "every-failure",
            "payload": "#!"
          }
        ],
        "triggers": [
          {
            "type": "cron",
            "schedule": "* * * * *"
          }
        ],
        "tags": [
          "example",
          "channon"
        ]
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"\" does not match \"^#!\"",
      "python_error": "'' does not match '^#!'\n\nFailed validating 'pattern' in schema['properties']['steps']['items']['properties']['payload']:\n    {'type': 'string', 'pattern': '^#!'}\n\nOn instance['steps'][0]['payload']:\n    ''",
      "data": {
        "name": "Example Channon Plan",
        "description": "This is an example plan.",
        "steps": [
          {
            "name": "Step 1",
            "payload": ""
          }
        ],
        "notifications": [
          {
            "target": "every-run",
            "payload": "#!"
          },
          {
            "target": "every-failure",
            "payload": "#!"
          }
        ],
        "triggers": [
          {
            "type": "cron",
            "schedule": "* * * * *"
          }
        ],
        "tags": [
          "example",
          "channon"
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on pattern keyword",
      "valid": false,
      "rust_error": "\"invalid\" does not match \"^#!\"",
      "python_error": "'invalid' does not match '^#!'\n\nFailed validating 'pattern' in schema['properties']['steps']['items']['properties']['payload']:\n    {'type': 'string', 'pattern': '^#!'}\n\nOn instance['steps'][0]['payload']:\n    'invalid'",
      "data": {
        "name": "Example Channon Plan",
        "description": "This is an example plan.",
        "steps": [
          {
            "name": "Step 1",
            "payload": "invalid"
          }
        ],
        "notifications": [
          {
            "target": "every-run",
            "payload": "#!"
          },
          {
            "target": "every-failure",
            "payload": "#!"
          }
        ],
        "triggers": [
          {
            "type": "cron",
            "schedule": "* * * * *"
          }
        ],
        "tags": [
          "example",
          "channon"
        ]
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "name": "Example Channon Plan",
        "description": "This is an example plan.",
        "steps": [
          {
            "name": "Step 1",
            "payload": "#!echo 'Hello World'"
          },
          {
            "name": "Step 2",
            "payload": "#!echo 'This is step 2'"
          }
        ],
        "notifications": [
          {
            "target": "every-run",
            "payload": "#!echo 'Notification sent on every run'"
          },
          {
            "target": "every-failure",
            "payload": "#!echo 'Notification sent on every failure'"
          }
        ],
        "triggers": [
          {
            "type": "cron",
            "schedule": "0 0 * * *"
          }
        ],
        "tags": [
          "example",
          "channon-plan"
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on pattern keyword",
      "valid": false,
      "rust_error": "\"echo 'Hello World'\" does not match \"^#!\"",
      "python_error": "\"echo 'Hello World'\" does not match '^#!'\n\nFailed validating 'pattern' in schema['properties']['steps']['items']['properties']['payload']:\n    {'type': 'string', 'pattern': '^#!'}\n\nOn instance['steps'][0]['payload']:\n    \"echo 'Hello World'\"",
      "data": {
        "name": "Example Channon Plan",
        "description": "This is an example plan.",
        "steps": [
          {
            "name": "Step 1",
            "payload": "echo 'Hello World'"
          },
          {
            "name": "Step 2",
            "payload": "#!echo 'This is step 2'"
          }
        ],
        "notifications": [
          {
            "target": "every-run",
            "payload": "#!echo 'Notification sent on every run'"
          },
          {
            "target": "every-failure",
            "payload": "#!echo 'Notification sent on every failure'"
          }
        ],
        "triggers": [
          {
            "type": "cron",
            "schedule": "0 0 * * *"
          }
        ],
        "tags": [
          "example",
          "channon-plan"
        ]
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"!echo 'This is step 2'\" does not match \"^#!\"",
      "python_error": "12345 is not of type 'string'\n\nFailed validating 'type' in schema['properties']['tags']['items']:\n    {'type': 'string'}\n\nOn instance['tags'][1]:\n    12345",
      "data": {
        "name": "Example Channon Plan",
        "description": "This is an example plan.",
        "steps": [
          {
            "name": "Step 1",
            "payload": "#!echo 'Hello World'"
          },
          {
            "name": "Step 2",
            "payload": "!echo 'This is step 2'"
          }
        ],
        "notifications": [
          {
            "target": "every-run",
            "payload": "#!echo 'Notification sent on every run'"
          },
          {
            "target": "custom-target",
            "payload": "#!echo 'Notification sent on every failure'"
          }
        ],
        "triggers": [
          {
            "type": "cron",
            "schedule": "0 0 * *"
          }
        ],
        "tags": [
          "example",
          12345,
          "channon-plan"
        ]
      }
    }
  ]
}