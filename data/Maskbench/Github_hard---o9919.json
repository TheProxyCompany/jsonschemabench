{
  "description": "sample Github_hard/o9919.json",
  "meta": {
    "full_size": 2514,
    "stripped_size": 2514,
    "features": [
      "@minmaxLength",
      "@minmaxNumber",
      "additionalProperties",
      "enum",
      "format",
      "format:date-time",
      "items",
      "pattern"
    ],
    "raw_features": [
      "$schema",
      "_boolSchema",
      "maxLength",
      "maximum",
      "minLength",
      "minimum",
      "properties",
      "required",
      "type",
      "type:[]",
      "type:array",
      "type:boolean",
      "type:null",
      "type:number",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "pattern": "^[A-Fa-f\\d]{24}$"
      },
      "integrationId": {
        "type": "string",
        "pattern": "^[A-Fa-f\\d]{24}$"
      },
      "applicationId": {
        "type": "string",
        "pattern": "^[A-Fa-f\\d]{24}$"
      },
      "creationDate": {
        "type": "string",
        "format": "date-time"
      },
      "lastUpdated": {
        "type": "string",
        "format": "date-time"
      },
      "name": {
        "type": "string",
        "minLength": 1,
        "maxLength": 1024
      },
      "integrationType": {
        "type": "string",
        "enum": [
          "googlePubSub",
          "meridian",
          "mqtt",
          "particle"
        ]
      },
      "enabled": {
        "type": "boolean"
      },
      "topics": {
        "type": "array",
        "items": {
          "type": "string",
          "minLength": 1,
          "maxLength": 1024
        }
      },
      "googlePubSubConfig": {
        "type": "object",
        "properties": {
          "projectId": {
            "type": "string",
            "minLength": 1,
            "maxLength": 1024
          },
          "keyJson": {
            "type": "string",
            "maxLength": 32767,
            "minLength": 4
          }
        },
        "additionalProperties": false,
        "required": [
          "projectId",
          "keyJson"
        ]
      },
      "mqttConfig": {
        "type": "object",
        "properties": {
          "clientId": {
            "type": "string",
            "minLength": 1,
            "maxLength": 1024
          },
          "username": {
            "type": "string",
            "minLength": 1,
            "maxLength": 1024
          },
          "password": {
            "type": "string",
            "minLength": 1,
            "maxLength": 1024
          },
          "clean": {
            "type": "boolean"
          },
          "port": {
            "type": "number",
            "minimum": 1,
            "maximum": 65535
          },
          "protocol": {
            "type": "string",
            "enum": [
              "mqtt",
              "mqtts",
              "ws",
              "wss"
            ]
          },
          "host": {
            "type": "string",
            "minLength": 1,
            "maxLength": 1024
          },
          "privateKey": {
            "type": "string",
            "maxLength": 32767,
            "minLength": 4
          },
          "certificate": {
            "type": "string",
            "maxLength": 32767,
            "minLength": 4
          },
          "caCertificate": {
            "type": "string",
            "maxLength": 32767,
            "minLength": 4
          }
        },
        "additionalProperties": false,
        "required": [
          "port",
          "protocol",
          "host"
        ]
      },
      "particleConfig": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string",
            "minLength": 1,
            "maxLength": 1024
          },
          "productSlugOrId": {
            "type": "string",
            "minLength": 1,
            "maxLength": 1024
          },
          "orgSlugOrId": {
            "type": "string",
            "minLength": 1,
            "maxLength": 1024
          },
          "deviceNameOrId": {
            "type": "string",
            "minLength": 1,
            "maxLength": 1024
          }
        },
        "additionalProperties": false,
        "required": [
          "accessToken"
        ]
      },
      "meridianConfig": {
        "type": "object",
        "properties": {
          "authenticationToken": {
            "type": "string",
            "minLength": 1,
            "maxLength": 1024
          },
          "locationId": {
            "type": "string",
            "minLength": 1,
            "maxLength": 1024
          },
          "assetUpdates": {
            "type": "boolean"
          },
          "zoneUpdates": {
            "type": "boolean"
          }
        },
        "additionalProperties": false,
        "required": [
          "authenticationToken",
          "locationId"
        ]
      },
      "status": {
        "lastKeepAlive": {
          "type": [
            "number"
          ]
        },
        "nextAttempt": {
          "type": [
            "number"
          ]
        },
        "connectInfo": {
          "type": "object",
          "properties": {
            "ts": {
              "type": [
                "number",
                "null"
              ]
            }
          }
        },
        "disconnectInfo": {
          "type": "object",
          "properties": {
            "ts": {
              "type": [
                "number",
                "null"
              ]
            },
            "error": {
              "type": "string"
            }
          }
        }
      }
    }
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "id": "507f1f77bcf86cd799439011",
        "integrationId": "507f1f77bcf86cd799439012",
        "applicationId": "507f1f77bcf86cd799439013",
        "creationDate": "2022-01-01T12:00:00.000Z",
        "lastUpdated": "2022-01-01T12:00:00.000Z",
        "name": "Example Integration",
        "integrationType": "googlePubSub",
        "enabled": true,
        "topics": [
          "example/topic"
        ],
        "googlePubSubConfig": {
          "projectId": "example-project",
          "keyJson": "{\"type\":\"service_account\",\"project_id\":\"example-project\",\"private_key_id\":\"example-key-id\",\"private_key\":\"-----BEGIN RSA PRIVATE KEY-----\\nexample-key\\n-----END RSA PRIVATE KEY-----\\n\",\"client_email\":\"example-email@example-project.iam.gserviceaccount.com\",\"client_id\":\"example-client-id\",\"auth_uri\":\"https://accounts.google.com/o/oauth2/auth\",\"token_uri\":\"https://oauth2.googleapis.com/token\",\"auth_provider_x509_cert_url\":\"https://www.googleapis.com/oauth2/v1/certs\",\"client_x509_cert_url\":\"https://www.googleapis.com/robot/v1/metadata/x509/example-email%40example-project.iam.gserviceaccount.com\"}"
        },
        "status": {
          "lastKeepAlive": 1641044400,
          "nextAttempt": 1641044400,
          "connectInfo": {
            "ts": 1641044400
          },
          "disconnectInfo": {
            "ts": null,
            "error": null
          }
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on minLength keyword or maxLength keyword",
      "valid": false,
      "rust_error": "\"\" is shorter than 1 character",
      "python_error": "'' should be non-empty\n\nFailed validating 'minLength' in schema['properties']['name']:\n    {'type': 'string', 'minLength': 1, 'maxLength': 1024}\n\nOn instance['name']:\n    ''",
      "data": {
        "id": "507f1f77bcf86cd799439011",
        "integrationId": "507f1f77bcf86cd799439012",
        "applicationId": "507f1f77bcf86cd799439013",
        "creationDate": "2022-01-01T12:00:00.000Z",
        "lastUpdated": "2022-01-01T12:00:00.000Z",
        "name": "",
        "integrationType": "googlePubSub",
        "enabled": true,
        "topics": [
          ""
        ],
        "googlePubSubConfig": {
          "projectId": "",
          "keyJson": "abc"
        },
        "status": {
          "lastKeepAlive": 1641044400,
          "nextAttempt": 1641044400,
          "connectInfo": {
            "ts": 1641044400
          },
          "disconnectInfo": {
            "ts": null,
            "error": null
          }
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on format keyword",
      "valid": false,
      "rust_error": "\"Invalid Date\" is not a \"date-time\"",
      "python_error": "'Invalid Date' is not a 'date-time'\n\nFailed validating 'format' in schema['properties']['creationDate']:\n    {'type': 'string', 'format': 'date-time'}\n\nOn instance['creationDate']:\n    'Invalid Date'",
      "data": {
        "id": "507f1f77bcf86cd799439011",
        "integrationId": "507f1f77bcf86cd799439012",
        "applicationId": "507f1f77bcf86cd799439013",
        "creationDate": "Invalid Date",
        "lastUpdated": "2022-01-01T12:00:00.000Z",
        "name": "Example Integration",
        "integrationType": "googlePubSub",
        "enabled": true,
        "topics": [
          "example/topic"
        ],
        "googlePubSubConfig": {
          "projectId": "example-project",
          "keyJson": "{\"type\":\"service_account\",\"project_id\":\"example-project\",\"private_key_id\":\"example-key-id\",\"private_key\":\"-----BEGIN RSA PRIVATE KEY-----\\nexample-key\\n-----END RSA PRIVATE KEY-----\\n\",\"client_email\":\"example-email@example-project.iam.gserviceaccount.com\",\"client_id\":\"example-client-id\",\"auth_uri\":\"https://accounts.google.com/o/oauth2/auth\",\"token_uri\":\"https://oauth2.googleapis.com/token\",\"auth_provider_x509_cert_url\":\"https://www.googleapis.com/oauth2/v1/certs\",\"client_x509_cert_url\":\"https://www.googleapis.com/robot/v1/metadata/x509/example-email%40example-project.iam.gserviceaccount.com\"}"
        },
        "status": {
          "lastKeepAlive": 1641044400,
          "nextAttempt": 1641044400,
          "connectInfo": {
            "ts": 1641044400
          },
          "disconnectInfo": {
            "ts": null,
            "error": null
          }
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on pattern keyword",
      "valid": false,
      "rust_error": "\"507f1f77bcf86cd79943901\" does not match \"^[A-Fa-f\\d]{24}$\"",
      "python_error": "'507f1f77bcf86cd79943901' does not match '^[A-Fa-f\\\\d]{24}$'\n\nFailed validating 'pattern' in schema['properties']['id']:\n    {'type': 'string', 'pattern': '^[A-Fa-f\\\\d]{24}$'}\n\nOn instance['id']:\n    '507f1f77bcf86cd79943901'",
      "data": {
        "id": "507f1f77bcf86cd79943901",
        "integrationId": "507f1f77bcf86cd799439012",
        "applicationId": "507f1f77bcf86cd799439013",
        "creationDate": "2022-01-01T12:00:00.000Z",
        "lastUpdated": "2022-01-01T12:00:00.000Z",
        "name": "Example Integration",
        "integrationType": "googlePubSub",
        "enabled": true,
        "topics": [
          "example/topic"
        ],
        "googlePubSubConfig": {
          "projectId": "example-project",
          "keyJson": "{\"type\":\"service_account\",\"project_id\":\"example-project\",\"private_key_id\":\"example-key-id\",\"private_key\":\"-----BEGIN RSA PRIVATE KEY-----\\nexample-key\\n-----END RSA PRIVATE KEY-----\\n\",\"client_email\":\"example-email@example-project.iam.gserviceaccount.com\",\"client_id\":\"example-client-id\",\"auth_uri\":\"https://accounts.google.com/o/oauth2/auth\",\"token_uri\":\"https://oauth2.googleapis.com/token\",\"auth_provider_x509_cert_url\":\"https://www.googleapis.com/oauth2/v1/certs\",\"client_x509_cert_url\":\"https://www.googleapis.com/robot/v1/metadata/x509/example-email%40example-project.iam.gserviceaccount.com\"}"
        },
        "status": {
          "lastKeepAlive": 1641044400,
          "nextAttempt": 1641044400,
          "connectInfo": {
            "ts": 1641044400
          },
          "disconnectInfo": {
            "ts": null,
            "error": null
          }
        }
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"\" is shorter than 1 character",
      "python_error": "'' should be non-empty\n\nFailed validating 'minLength' in schema['properties']['name']:\n    {'type': 'string', 'minLength': 1, 'maxLength': 1024}\n\nOn instance['name']:\n    ''",
      "data": {
        "id": "507f1f77bcf86cd799439011",
        "integrationId": "507f1f77bcf86cd799439012",
        "applicationId": "507f1f77bcf86cd799439013",
        "creationDate": "2022-01-01T12:00:00.000Z",
        "lastUpdated": "2022-01-01T12:00:00.000Z",
        "name": "",
        "integrationType": "googlePubSub",
        "enabled": true,
        "topics": [
          ""
        ],
        "googlePubSubConfig": {
          "projectId": "example-project",
          "keyJson": "{\"type\":\"service_account\",\"project_id\":\"example-project\",\"private_key_id\":\"example-key-id\",\"private_key\":\"-----BEGIN RSA PRIVATE KEY-----\\nexample-key\\n-----END RSA PRIVATE KEY-----\\n\",\"client_email\":\"example-email@example-project.iam.gserviceaccount.com\",\"client_id\":\"example-client-id\",\"auth_uri\":\"https://accounts.google.com/o/oauth2/auth\",\"token_uri\":\"https://oauth2.googleapis.com/token\",\"auth_provider_x509_cert_url\":\"https://www.googleapis.com/oauth2/v1/certs\",\"client_x509_cert_url\":\"https://www.googleapis.com/robot/v1/metadata/x509/example-email%40example-project.iam.gserviceaccount.com\"}"
        },
        "status": {
          "lastKeepAlive": 1641044400,
          "nextAttempt": 1641044400,
          "connectInfo": {
            "ts": 1641044400
          },
          "disconnectInfo": {
            "ts": null,
            "error": null
          }
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on pattern keyword",
      "valid": false,
      "rust_error": "\"507f1f77bcf86cd79943901\" does not match \"^[A-Fa-f\\d]{24}$\"",
      "python_error": "'507f1f77bcf86cd79943901' does not match '^[A-Fa-f\\\\d]{24}$'\n\nFailed validating 'pattern' in schema['properties']['integrationId']:\n    {'type': 'string', 'pattern': '^[A-Fa-f\\\\d]{24}$'}\n\nOn instance['integrationId']:\n    '507f1f77bcf86cd79943901'",
      "data": {
        "id": "507f1f77bcf86cd79943901",
        "integrationId": "507f1f77bcf86cd79943901",
        "applicationId": "507f1f77bcf86cd799439013",
        "creationDate": "2022-01-01T12:00:00.000Z",
        "lastUpdated": "2022-01-01T12:00:00.000Z",
        "name": "Example Integration",
        "integrationType": "googlePubSub",
        "enabled": true,
        "topics": [
          "example/topic"
        ],
        "googlePubSubConfig": {
          "projectId": "example-project",
          "keyJson": "{\"type\":\"service_account\",\"project_id\":\"example-project\",\"private_key_id\":\"example-key-id\",\"private_key\":\"-----BEGIN RSA PRIVATE KEY-----\\nexample-key\\n-----END RSA PRIVATE KEY-----\\n\",\"client_email\":\"example-email@example-project.iam.gserviceaccount.com\",\"client_id\":\"example-client-id\",\"auth_uri\":\"https://accounts.google.com/o/oauth2/auth\",\"token_uri\":\"https://oauth2.googleapis.com/token\",\"auth_provider_x509_cert_url\":\"https://www.googleapis.com/oauth2/v1/certs\",\"client_x509_cert_url\":\"https://www.googleapis.com/robot/v1/metadata/x509/example-email%40example-project.iam.gserviceaccount.com\"}"
        },
        "status": {
          "lastKeepAlive": 1641044400,
          "nextAttempt": 1641044400,
          "connectInfo": {
            "ts": 1641044400
          },
          "disconnectInfo": {
            "ts": null,
            "error": null
          }
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on format keyword",
      "valid": false,
      "rust_error": "\"2022-01-01T12:00:00\" is not a \"date-time\"",
      "python_error": "'2022-01-01T12:00:00' is not a 'date-time'\n\nFailed validating 'format' in schema['properties']['lastUpdated']:\n    {'type': 'string', 'format': 'date-time'}\n\nOn instance['lastUpdated']:\n    '2022-01-01T12:00:00'",
      "data": {
        "id": "507f1f77bcf86cd799439011",
        "integrationId": "507f1f77bcf86cd799439012",
        "applicationId": "507f1f77bcf86cd799439013",
        "creationDate": "2022-01-01T12:00:00",
        "lastUpdated": "2022-01-01T12:00:00",
        "name": "Example Integration",
        "integrationType": "googlePubSub",
        "enabled": true,
        "topics": [
          "example/topic"
        ],
        "googlePubSubConfig": {
          "projectId": "example-project",
          "keyJson": "{\"type\":\"service_account\",\"project_id\":\"example-project\",\"private_key_id\":\"example-key-id\",\"private_key\":\"-----BEGIN RSA PRIVATE KEY-----\\nexample-key\\n-----END RSA PRIVATE KEY-----\\n\",\"client_email\":\"example-email@example-project.iam.gserviceaccount.com\",\"client_id\":\"example-client-id\",\"auth_uri\":\"https://accounts.google.com/o/oauth2/auth\",\"token_uri\":\"https://oauth2.googleapis.com/token\",\"auth_provider_x509_cert_url\":\"https://www.googleapis.com/oauth2/v1/certs\",\"client_x509_cert_url\":\"https://www.googleapis.com/robot/v1/metadata/x509/example-email%40example-project.iam.gserviceaccount.com\"}"
        },
        "status": {
          "lastKeepAlive": 1641044400,
          "nextAttempt": 1641044400,
          "connectInfo": {
            "ts": 1641044400
          },
          "disconnectInfo": {
            "ts": null,
            "error": null
          }
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on minLength keyword or maxLength keyword",
      "valid": false,
      "rust_error": "\"\" is shorter than 1 character",
      "python_error": "'' should be non-empty\n\nFailed validating 'minLength' in schema['properties']['name']:\n    {'type': 'string', 'minLength': 1, 'maxLength': 1024}\n\nOn instance['name']:\n    ''",
      "data": {
        "id": "507f1f77bcf86cd799439011",
        "integrationId": "507f1f77bcf86cd799439012",
        "applicationId": "507f1f77bcf86cd799439013",
        "creationDate": "2022-01-01T12:00:00.000Z",
        "lastUpdated": "2022-01-01T12:00:00.000Z",
        "name": "",
        "integrationType": "googlePubSub",
        "enabled": true,
        "topics": [
          ""
        ],
        "googlePubSubConfig": {
          "projectId": "",
          "keyJson": "a"
        },
        "status": {
          "lastKeepAlive": 1641044400,
          "nextAttempt": 1641044400,
          "connectInfo": {
            "ts": 1641044400
          },
          "disconnectInfo": {
            "ts": null,
            "error": null
          }
        }
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "id": "507f191e810c19729de860ea",
        "integrationId": "507f191e810c19729de860eb",
        "applicationId": "507f191e810c19729de860ec",
        "creationDate": "2022-01-01T12:00:00.000Z",
        "lastUpdated": "2022-01-01T12:00:00.000Z",
        "name": "Example Integration",
        "integrationType": "mqtt",
        "enabled": true,
        "topics": [
          "example/topic"
        ],
        "mqttConfig": {
          "clientId": "example-client",
          "username": "example-username",
          "password": "example-password",
          "clean": true,
          "port": 1883,
          "protocol": "mqtt",
          "host": "example.com",
          "privateKey": "example-private-key",
          "certificate": "example-certificate",
          "caCertificate": "example-ca-certificate"
        },
        "status": {
          "lastKeepAlive": 1643723400,
          "nextAttempt": 1643723400,
          "connectInfo": {
            "ts": 1643723400
          },
          "disconnectInfo": {
            "ts": null,
            "error": null
          }
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on pattern keyword",
      "valid": false,
      "rust_error": "\"507f191e810c19729de860e\" does not match \"^[A-Fa-f\\d]{24}$\"",
      "python_error": "'507f191e810c19729de860e' does not match '^[A-Fa-f\\\\d]{24}$'\n\nFailed validating 'pattern' in schema['properties']['id']:\n    {'type': 'string', 'pattern': '^[A-Fa-f\\\\d]{24}$'}\n\nOn instance['id']:\n    '507f191e810c19729de860e'",
      "data": {
        "id": "507f191e810c19729de860e",
        "integrationId": "507f191e810c19729de860eb",
        "applicationId": "507f191e810c19729de860ec",
        "creationDate": "2022-01-01T12:00:00.000Z",
        "lastUpdated": "2022-01-01T12:00:00.000Z",
        "name": "Example Integration",
        "integrationType": "mqtt",
        "enabled": true,
        "topics": [
          "example/topic"
        ],
        "mqttConfig": {
          "clientId": "example-client",
          "username": "example-username",
          "password": "example-password",
          "clean": true,
          "port": 1883,
          "protocol": "mqtt",
          "host": "example.com",
          "privateKey": "example-private-key",
          "certificate": "example-certificate",
          "caCertificate": "example-ca-certificate"
        },
        "status": {
          "lastKeepAlive": 1643723400,
          "nextAttempt": 1643723400,
          "connectInfo": {
            "ts": 1643723400
          },
          "disconnectInfo": {
            "ts": null,
            "error": null
          }
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on format keyword",
      "valid": false,
      "rust_error": "\"2022-01-01T12:00:00\" is not a \"date-time\"",
      "python_error": "'2022-01-01T12:00:00' is not a 'date-time'\n\nFailed validating 'format' in schema['properties']['creationDate']:\n    {'type': 'string', 'format': 'date-time'}\n\nOn instance['creationDate']:\n    '2022-01-01T12:00:00'",
      "data": {
        "id": "507f191e810c19729de860ea",
        "integrationId": "507f191e810c19729de860eb",
        "applicationId": "507f191e810c19729de860ec",
        "creationDate": "2022-01-01T12:00:00",
        "lastUpdated": "2022-01-01T12:00:00.000Z",
        "name": "Example Integration",
        "integrationType": "mqtt",
        "enabled": true,
        "topics": [
          "example/topic"
        ],
        "mqttConfig": {
          "clientId": "example-client",
          "username": "example-username",
          "password": "example-password",
          "clean": true,
          "port": 1883,
          "protocol": "mqtt",
          "host": "example.com",
          "privateKey": "example-private-key",
          "certificate": "example-certificate",
          "caCertificate": "example-ca-certificate"
        },
        "status": {
          "lastKeepAlive": 1643723400,
          "nextAttempt": 1643723400,
          "connectInfo": {
            "ts": 1643723400
          },
          "disconnectInfo": {
            "ts": null,
            "error": null
          }
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on minLength keyword or maxLength keyword",
      "valid": false,
      "rust_error": "\"\" is shorter than 1 character",
      "python_error": "'' should be non-empty\n\nFailed validating 'minLength' in schema['properties']['name']:\n    {'type': 'string', 'minLength': 1, 'maxLength': 1024}\n\nOn instance['name']:\n    ''",
      "data": {
        "id": "507f191e810c19729de860ea",
        "integrationId": "507f191e810c19729de860eb",
        "applicationId": "507f191e810c19729de860ec",
        "creationDate": "2022-01-01T12:00:00.000Z",
        "lastUpdated": "2022-01-01T12:00:00.000Z",
        "name": "",
        "integrationType": "mqtt",
        "enabled": true,
        "topics": [
          "example/topic"
        ],
        "mqttConfig": {
          "clientId": "example-client",
          "username": "example-username",
          "password": "example-password",
          "clean": true,
          "port": 1883,
          "protocol": "mqtt",
          "host": "example.com",
          "privateKey": "example-private-key",
          "certificate": "example-certificate",
          "caCertificate": "example-ca-certificate"
        },
        "status": {
          "lastKeepAlive": 1643723400,
          "nextAttempt": 1643723400,
          "connectInfo": {
            "ts": 1643723400
          },
          "disconnectInfo": {
            "ts": null,
            "error": null
          }
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on minimum keyword or maximum keyword",
      "valid": false,
      "rust_error": "\"\" is shorter than 1 character",
      "python_error": "'' should be non-empty\n\nFailed validating 'minLength' in schema['properties']['name']:\n    {'type': 'string', 'minLength': 1, 'maxLength': 1024}\n\nOn instance['name']:\n    ''",
      "data": {
        "id": "507f191e810c19729de860ea",
        "integrationId": "507f191e810c19729de860eb",
        "applicationId": "507f191e810c19729de860ec",
        "creationDate": "2022-01-01T12:00:00.000Z",
        "lastUpdated": "2022-01-01T12:00:00.000Z",
        "name": "",
        "integrationType": "mqtt",
        "enabled": true,
        "topics": [
          "example/topic"
        ],
        "mqttConfig": {
          "clientId": "example-client",
          "username": "example-username",
          "password": "example-password",
          "clean": true,
          "port": 0,
          "protocol": "mqtt",
          "host": "example.com",
          "privateKey": "example-private-key",
          "certificate": "example-certificate",
          "caCertificate": "example-ca-certificate"
        },
        "status": {
          "lastKeepAlive": 1643723400,
          "nextAttempt": 1643723400,
          "connectInfo": {
            "ts": 1643723400
          },
          "disconnectInfo": {
            "ts": null,
            "error": null
          }
        }
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"\" is shorter than 1 character",
      "python_error": "'' should be non-empty\n\nFailed validating 'minLength' in schema['properties']['name']:\n    {'type': 'string', 'minLength': 1, 'maxLength': 1024}\n\nOn instance['name']:\n    ''",
      "data": {
        "id": "507f191e810c19729de860ea",
        "integrationId": "507f191e810c19729de860eb",
        "applicationId": "507f191e810c19729de860ec",
        "creationDate": "2022-01-01T12:00:00.000Z",
        "lastUpdated": "2022-01-01T12:00:00.000Z",
        "name": "",
        "integrationType": "mqtt",
        "enabled": true,
        "topics": [
          "example/topic"
        ],
        "mqttConfig": {
          "clientId": "example-client",
          "username": "example-username",
          "password": "example-password",
          "clean": true,
          "port": 65536,
          "protocol": "mqtt",
          "host": "example.com",
          "privateKey": "example-private-key",
          "certificate": "example-certificate",
          "caCertificate": "example-ca-certificate"
        },
        "status": {
          "lastKeepAlive": 1643723400,
          "nextAttempt": 1643723400,
          "connectInfo": {
            "ts": 1643723400
          },
          "disconnectInfo": {
            "ts": null,
            "error": null
          }
        }
      }
    }
  ]
}