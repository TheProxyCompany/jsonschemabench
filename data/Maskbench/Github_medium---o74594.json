{
  "description": "sample Github_medium/o74594.json",
  "meta": {
    "full_size": 1805,
    "stripped_size": 1786,
    "features": [
      "$ref",
      "@siblingKeys",
      "enum",
      "format",
      "format:mongoId",
      "items",
      "oneOf"
    ],
    "raw_features": [
      "$schema",
      "definitions",
      "properties",
      "required",
      "type",
      "type:[]",
      "type:array",
      "type:boolean",
      "type:null",
      "type:number",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "title": "Services",
    "type": "object",
    "definitions": {
      "locations": {
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      "name": {
        "type": "string"
      },
      "checkType": {
        "type": "string",
        "enum": [
          "http",
          "tcp"
        ]
      },
      "timeout": {
        "type": "number"
      },
      "slowThreshold": {
        "type": "number"
      },
      "tags": {
        "type": [
          "array",
          "null"
        ],
        "items": {
          "type": "string",
          "format": "mongoId"
        }
      },
      "group": {
        "type": [
          "string",
          "null"
        ]
      },
      "auth": {
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "tcp": {
        "type": "object",
        "properties": {
          "name": {
            "$ref": "#/definitions/name"
          },
          "checkType": {
            "type": "string",
            "enum": [
              "tcp"
            ]
          },
          "timeout": {
            "$ref": "#/definitions/timeout"
          },
          "checkLocations": {
            "$ref": "#/definitions/locations"
          },
          "slowThreshold": {
            "$ref": "#/definitions/slowThreshold"
          },
          "tags": {
            "$ref": "#/definitions/tags"
          },
          "group": {
            "$ref": "#/definitions/group"
          },
          "auth": {
            "$ref": "#/definitions/auth"
          },
          "host": {
            "type": "string"
          },
          "port": {
            "type": "string"
          },
          "data": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "checkType",
          "timeout",
          "checkLocations",
          "host",
          "port",
          "data"
        ]
      },
      "http": {
        "type": "object",
        "properties": {
          "name": {
            "$ref": "#/definitions/name"
          },
          "checkType": {
            "type": "string",
            "enum": [
              "http"
            ]
          },
          "timeout": {
            "$ref": "#/definitions/timeout"
          },
          "checkLocations": {
            "$ref": "#/definitions/locations"
          },
          "slowThreshold": {
            "$ref": "#/definitions/slowThreshold"
          },
          "tags": {
            "$ref": "#/definitions/tags"
          },
          "group": {
            "$ref": "#/definitions/group"
          },
          "auth": {
            "$ref": "#/definitions/auth"
          },
          "checkMethod": {
            "type": "string",
            "enum": [
              "GET",
              "POST",
              "PUT",
              "DELETE"
            ]
          },
          "checkUrl": {
            "type": "string"
          },
          "body": {
            "type": "string"
          },
          "validateCert": {
            "type": "boolean"
          },
          "headers": {
            "type": [
              "array",
              "null"
            ]
          }
        },
        "required": [
          "name",
          "checkType",
          "timeout",
          "checkUrl",
          "checkLocations",
          "checkMethod",
          "slowThreshold"
        ]
      }
    },
    "oneOf": [
      {
        "$ref": "#/definitions/http"
      },
      {
        "$ref": "#/definitions/tcp"
      }
    ]
  },
  "tests": [
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "name": "Example Service",
        "checkType": "http",
        "timeout": 10,
        "checkLocations": [
          "New York",
          "London",
          "Tokyo"
        ],
        "slowThreshold": 5,
        "tags": [
          "5f7e8b8b8b8b8b8b8b8b8b8b",
          "5f7e8b8b8b8b8b8b8b8b8b9"
        ],
        "group": "Example Group",
        "auth": {
          "username": "example",
          "password": "password"
        },
        "checkMethod": "GET",
        "checkUrl": "https://example.com",
        "body": "",
        "validateCert": true,
        "headers": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ]
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "name": "Example Service",
        "checkType": "http",
        "timeout": 10,
        "checkLocations": [
          "New York",
          "London"
        ],
        "slowThreshold": 5,
        "tags": [
          "tag1",
          "tag2"
        ],
        "group": "Example Group",
        "auth": {
          "username": "exampleUser",
          "password": "examplePassword"
        },
        "checkMethod": "GET",
        "checkUrl": "https://example.com",
        "body": "",
        "validateCert": true,
        "headers": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "{\"name\":123,\"checkType\":\"http\",\"timeout\":10,\"checkLocations\":[\"New York\",\"London\"],\"slowThreshold\":5,\"tags\":[\"tag1\",123],\"group\":null,\"auth\":{\"username\":\"exampleUser\",\"password\":\"examplePassword\"},\"checkMethod\":\"GET\",\"checkUrl\":\"https://example.com\",\"body\":\"\",\"validateCert\":true,\"headers\":[{\"key\":\"Content-Type\",\"value\":\"application/json\"}]} is not valid under any of the schemas listed in the 'oneOf' keyword",
      "python_error": "{'name': 123, 'checkType': 'http', 'timeout': 10, 'checkLocations': ['New York', 'London'], 'slowThreshold': 5, 'tags': ['tag1', 123], 'group': None, 'auth': {'username': 'exampleUser', 'password': 'examplePassword'}, 'checkMethod': 'GET', 'checkUrl': 'https://example.com', 'body': '', 'validateCert': True, 'headers': [{'key': 'Content-Type', 'value': 'application/json'}]} is not valid under any of the given schemas\n\nFailed validating 'oneOf' in schema:\n    {'$schema': 'http://json-schema.org/draft-04/schema#',\n     'title': 'Services',\n     'type': 'object',\n     'definitions': {'locations': {'type': 'array',\n                                   'items': {'type': 'string'}},\n                     'name': {'type': 'string'},\n                     'checkType': {'type': 'string',\n                                   'enum': ['http', 'tcp']},\n                     'timeout': {'type': 'number'},\n                     'slowThreshold': {'type': 'number'},\n                     'tags': {'type': ['array', 'null'],\n           .. (4360 more)",
      "data": {
        "name": 123,
        "checkType": "http",
        "timeout": 10,
        "checkLocations": [
          "New York",
          "London"
        ],
        "slowThreshold": 5,
        "tags": [
          "tag1",
          123
        ],
        "group": null,
        "auth": {
          "username": "exampleUser",
          "password": "examplePassword"
        },
        "checkMethod": "GET",
        "checkUrl": "https://example.com",
        "body": "",
        "validateCert": true,
        "headers": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ]
      }
    }
  ]
}