{
  "description": "sample Github_medium/o39217.json",
  "meta": {
    "full_size": 1768,
    "stripped_size": 1324,
    "features": [
      "$ref",
      "@minmaxItems",
      "additionalProperties",
      "additionalProperties:object",
      "anyOf",
      "const",
      "contains",
      "dependencies",
      "enum",
      "if",
      "items",
      "then"
    ],
    "raw_features": [
      "$id",
      "$schema",
      "definitions",
      "minItems",
      "properties",
      "required",
      "type",
      "type:array"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "https://raw.githubusercontent.com/ajv-validator/ajv/master/lib/refs/json-schema-secure.json#",
    "title": "Meta-schema for the security assessment of JSON Schemas",
    "description": "If a JSON Schema fails validation against this meta-schema, it may be unsafe to validate untrusted data",
    "definitions": {
      "schemaArray": {
        "type": "array",
        "minItems": 1,
        "items": {
          "$ref": "#"
        }
      }
    },
    "dependencies": {
      "patternProperties": {
        "description": "prevent slow validation of large property names",
        "required": [
          "propertyNames"
        ],
        "properties": {
          "propertyNames": {
            "required": [
              "maxLength"
            ]
          }
        }
      },
      "_uniqueItems": {
        "description": "prevent slow validation of large non-scalar arrays",
        "if": {
          "properties": {
            "_uniqueItems": {
              "const": true
            },
            "items": {
              "properties": {
                "type": {
                  "anyOf": [
                    {
                      "enum": [
                        "object",
                        "array"
                      ]
                    },
                    {
                      "type": "array",
                      "contains": {
                        "enum": [
                          "object",
                          "array"
                        ]
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "then": {
          "required": [
            "maxItems"
          ]
        }
      },
      "pattern": {
        "description": "prevent slow pattern matching of large strings",
        "required": [
          "maxLength"
        ]
      },
      "format": {
        "description": "prevent slow format validation of large strings",
        "required": [
          "maxLength"
        ]
      }
    },
    "properties": {
      "additionalItems": {
        "$ref": "#"
      },
      "additionalProperties": {
        "$ref": "#"
      },
      "dependencies": {
        "additionalProperties": {
          "anyOf": [
            {
              "type": "array"
            },
            {
              "$ref": "#"
            }
          ]
        }
      },
      "items": {
        "anyOf": [
          {
            "$ref": "#"
          },
          {
            "$ref": "#/definitions/schemaArray"
          }
        ]
      },
      "definitions": {
        "additionalProperties": {
          "$ref": "#"
        }
      },
      "patternProperties": {
        "additionalProperties": {
          "$ref": "#"
        }
      },
      "properties": {
        "additionalProperties": {
          "$ref": "#"
        }
      },
      "if": {
        "$ref": "#"
      },
      "then": {
        "$ref": "#"
      },
      "else": {
        "$ref": "#"
      },
      "allOf": {
        "$ref": "#/definitions/schemaArray"
      },
      "anyOf": {
        "$ref": "#/definitions/schemaArray"
      },
      "oneOf": {
        "$ref": "#/definitions/schemaArray"
      },
      "not": {
        "$ref": "#"
      },
      "contains": {
        "$ref": "#"
      },
      "propertyNames": {
        "$ref": "#"
      }
    }
  },
  "tests": [
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "Example Schema",
        "description": "This schema is a simple example that validates against the provided meta-schema",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 50
          },
          "age": {
            "type": "integer",
            "minimum": 0,
            "maximum": 150
          }
        },
        "required": [
          "name",
          "age"
        ],
        "additionalProperties": false
      }
    },
    {
      "description": "llama-70b generated negative; focus on if keyword or then keyword",
      "valid": false,
      "rust_error": "{\"type\":\"object\",\"_uniqueItems\":true} is not valid under any of the schemas listed in the 'anyOf' keyword",
      "python_error": "{'type': 'object', '_uniqueItems': True} is not valid under any of the given schemas\n\nFailed validating 'anyOf' in schema['properties']['items']:\n    {'anyOf': [{'$ref': '#'}, {'$ref': '#/definitions/schemaArray'}]}\n\nOn instance['items']:\n    {'type': 'object', '_uniqueItems': True}",
      "data": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "Example Schema",
        "description": "This schema is a simple example that validates against the provided meta-schema",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "pattern": "[a-z]+",
            "maxLength": 1000
          },
          "age": {
            "type": "integer",
            "minimum": 0,
            "maximum": 150
          }
        },
        "required": [
          "name",
          "age"
        ],
        "additionalProperties": false,
        "items": {
          "type": "object",
          "_uniqueItems": true
        }
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"maxLength\" is a required property",
      "python_error": "'maxLength' is a required property\n\nFailed validating 'required' in schema['properties']['properties']['additionalProperties']['dependencies']['pattern']:\n    {'description': 'prevent slow pattern matching of large strings',\n     'required': ['maxLength']}\n\nOn instance['properties']['name']:\n    {'type': 'string',\n     'pattern': 'a',\n     'propertyNames': {'pattern': 'b', 'maxLength': 'maxLength'}}",
      "data": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "Example Schema",
        "description": "This schema is a simple example that validates against the provided meta-schema",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "pattern": "a",
            "propertyNames": {
              "pattern": "b",
              "maxLength": "maxLength"
            }
          }
        },
        "required": [
          "name",
          "age"
        ],
        "additionalProperties": false
      }
    }
  ]
}