{
  "description": "sample Github_medium/o82696.json",
  "meta": {
    "full_size": 1557,
    "stripped_size": 678,
    "features": [
      "additionalProperties",
      "pattern"
    ],
    "raw_features": [
      "$schema",
      "_boolSchema",
      "id",
      "properties",
      "required",
      "type",
      "type:boolean",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "additionalProperties": true,
    "id": "http://schemas.triniti.io/json-schema/triniti/canvas/mixin/spotify-embed-block/1-0-0.json#",
    "properties": {
      "aside": {
        "description": "When true it means this block represents a portion of a document whose content is only indirectly related to the document's main content. Asides are frequently presented as sidebars or call-out boxes.",
        "pbj": {
          "rule": "single",
          "type": "boolean"
        },
        "type": "boolean"
      },
      "css_class": {
        "description": "In rendering environments that support HTML the css_class can be appended to the dom elements' class attribute.",
        "pattern": "^[\\w\\s-]+$",
        "pbj": {
          "rule": "single",
          "type": "string"
        },
        "type": "string"
      },
      "etag": {
        "pattern": "^[\\w\\.:-]+$",
        "pbj": {
          "rule": "single",
          "type": "string"
        },
        "type": "string"
      },
      "spotify_id": {
        "pattern": "^\\w+$",
        "pbj": {
          "rule": "single",
          "type": "string"
        },
        "type": "string"
      },
      "spotify_type": {
        "description": "The type portion of a Spotify URI. @link https://developer.spotify.com/documentation/web-api/#spotify-uris-and-ids",
        "pattern": "^(album|artist|episode|playlist|show|track)$",
        "pbj": {
          "rule": "single",
          "type": "string"
        },
        "type": "string"
      },
      "updated_date": {
        "_format": "date-time",
        "description": "Represents an update that occurred on the node this block is attached to. DOES NOT indicate an update to the block itself. eg an article with a twitter block with updated_date means that the article was updated to include that twitter block.",
        "pbj": {
          "rule": "single",
          "type": "date-time"
        },
        "type": "string"
      }
    },
    "required": [
      "spotify_type",
      "spotify_id"
    ],
    "type": "object"
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "aside": false,
        "css_class": "spotify-embed",
        "etag": "1234567890",
        "spotify_id": "6gdLoMygLxLwQGIkg2aJFz",
        "spotify_type": "track",
        "updated_date": "2022-01-01T12:00:00Z"
      }
    },
    {
      "description": "llama-70b generated negative; focus on pattern keyword",
      "valid": false,
      "rust_error": "\"spotify-embed!\" does not match \"^[\\w\\s-]+$\"",
      "python_error": "'spotify-embed!' does not match '^[\\\\w\\\\s-]+$'\n\nFailed validating 'pattern' in schema['properties']['css_class']:\n    {'description': 'In rendering environments that support HTML the '\n                    \"css_class can be appended to the dom elements' class \"\n                    'attribute.',\n     'pattern': '^[\\\\w\\\\s-]+$',\n     'pbj': {'rule': 'single', 'type': 'string'},\n     'type': 'string'}\n\nOn instance['css_class']:\n    'spotify-embed!'",
      "data": {
        "aside": false,
        "css_class": "spotify-embed!",
        "etag": "1234567890",
        "spotify_id": "6gdLoMygLxLwQGIkg2aJFz",
        "spotify_type": "track",
        "updated_date": "2022-01-01T12:00:00Z"
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"spotify embed!\" does not match \"^[\\w\\s-]+$\"",
      "python_error": "'spotify embed!' does not match '^[\\\\w\\\\s-]+$'\n\nFailed validating 'pattern' in schema['properties']['css_class']:\n    {'description': 'In rendering environments that support HTML the '\n                    \"css_class can be appended to the dom elements' class \"\n                    'attribute.',\n     'pattern': '^[\\\\w\\\\s-]+$',\n     'pbj': {'rule': 'single', 'type': 'string'},\n     'type': 'string'}\n\nOn instance['css_class']:\n    'spotify embed!'",
      "data": {
        "aside": false,
        "css_class": "spotify embed!",
        "etag": "1234567890",
        "spotify_id": "6gdLoMygLxLwQGIkg2aJFz",
        "spotify_type": "track",
        "updated_date": "2022-01-01T12:00:00Z"
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"6gdLoMygLxLwQGIkg2aJFz?\" does not match \"^\\w+$\"",
      "python_error": "'6gdLoMygLxLwQGIkg2aJFz?' does not match '^\\\\w+$'\n\nFailed validating 'pattern' in schema['properties']['spotify_id']:\n    {'pattern': '^\\\\w+$',\n     'pbj': {'rule': 'single', 'type': 'string'},\n     'type': 'string'}\n\nOn instance['spotify_id']:\n    '6gdLoMygLxLwQGIkg2aJFz?'",
      "data": {
        "aside": true,
        "css_class": "spotify-embed-class",
        "etag": "1234567890",
        "spotify_id": "6gdLoMygLxLwQGIkg2aJFz?",
        "spotify_type": "track",
        "updated_date": "2022-01-01T12:00:00Z"
      }
    }
  ]
}