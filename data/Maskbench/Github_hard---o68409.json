{
  "description": "sample Github_hard/o68409.json",
  "meta": {
    "full_size": 3416,
    "stripped_size": 1030,
    "features": [
      "@minmaxInteger",
      "enum",
      "items"
    ],
    "raw_features": [
      "$schema",
      "minimum",
      "properties",
      "required",
      "type",
      "type:array",
      "type:boolean",
      "type:integer",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "description": "Format for the assignment specification json for reference repositories.",
    "properties": {
      "assignment_name": {
        "description": "The identifier for this assignment in your course",
        "title": "Assignment Name schema",
        "type": "string"
      },
      "deadline": {
        "_format": "date-time",
        "default": "2017-02-14T23:59:00.00Z",
        "description": "The due date for the assignment",
        "title": "Deadline schema",
        "type": "string"
      },
      "expected_files": {
        "description": "Minimum files expected from student submissions",
        "items": {
          "description": "Ant-style path to a file or filename pattern, such as **/*.h or resources/foo.c",
          "title": "Expected File schema.",
          "type": "string"
        },
        "title": "Expected Files schema",
        "type": "array"
      },
      "maximum_group_size": {
        "default": 1,
        "description": "If students are allowed to work in groups, enter the max group size, otherwise enter 1.",
        "minimum": 1,
        "title": "Maximum Group Size schema",
        "type": "integer"
      },
      "ready": {
        "default": false,
        "description": "Whether this assignment is ready for students to start or not.",
        "title": "Ready schema",
        "type": "boolean"
      },
      "testables": {
        "description": "A list of logical test groups with common build outputs",
        "items": {
          "description": "A group of test cases sharing a common build command",
          "properties": {
            "build_command": {
              "default": "make",
              "description": "A unix command that compiles/builds the project",
              "title": "Build Command schema.",
              "type": "string"
            },
            "test_cases": {
              "description": "A list of test cases",
              "items": {
                "description": "An individual test case worth some amount of points",
                "properties": {
                  "command": {
                    "default": "echo 'Hello World'",
                    "description": "A unix command to inspect output on",
                    "title": "Command schema.",
                    "type": "string"
                  },
                  "diff_source": {
                    "default": "stdout",
                    "description": "The file that contains test output for diff-ing",
                    "title": "Diff Source schema.",
                    "type": "string"
                  },
                  "expected": {
                    "default": "generate",
                    "description": "The path to the solution output, or 'generate' to have it generated",
                    "title": "Expected schema.",
                    "type": "string"
                  },
                  "hide_expected": {
                    "default": true,
                    "description": "Whether to hide the expected output from students when they fail this test case",
                    "title": "Hide Expected schema.",
                    "type": "boolean"
                  },
                  "kind": {
                    "default": "diff",
                    "description": "What kind of test case this is",
                    "enum": [
                      "diff"
                    ],
                    "title": "Kind schema.",
                    "type": "string"
                  },
                  "points": {
                    "default": 100,
                    "description": "Point value for this test case",
                    "title": "Points schema.",
                    "type": "integer"
                  },
                  "timeout": {
                    "default": 4,
                    "description": "How long (in seconds) to let student code run",
                    "title": "Timeout schema.",
                    "type": "integer"
                  }
                },
                "required": [
                  "command",
                  "points",
                  "kind",
                  "hide_expected",
                  "diff_source",
                  "expected",
                  "timeout"
                ],
                "title": "Test Case schema.",
                "type": "object"
              },
              "title": "Test Cases schema.",
              "type": "array"
            },
            "test_name": {
              "description": "Name of this test group",
              "title": "Test Name schema.",
              "type": "string"
            }
          },
          "required": [
            "test_name",
            "build_command",
            "test_cases"
          ],
          "title": "Testable schema.",
          "type": "object"
        },
        "title": "Testables schema.",
        "type": "array"
      },
      "uneditables": {
        "description": "Files that, when changed, revert to the given default",
        "items": {
          "description": "Ant-style path to a file or filename pattern, such as **/*.h or resources/foo.c",
          "title": "Uneditable File schema.",
          "type": "string"
        },
        "title": "Uneditables schema",
        "type": "array"
      }
    },
    "required": [
      "assignment_name",
      "maximum_group_size",
      "ready",
      "deadline",
      "expected_files",
      "uneditables",
      "testables"
    ],
    "title": "Assignment Spec schema.",
    "type": "object"
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "assignment_name": "Assignment 1",
        "deadline": "2024-12-31T23:59:00.00Z",
        "expected_files": [
          "**/*.c",
          "**/*.h"
        ],
        "maximum_group_size": 2,
        "ready": true,
        "testables": [
          {
            "build_command": "make",
            "test_cases": [
              {
                "command": "echo 'Hello World'",
                "diff_source": "stdout",
                "expected": "generate",
                "hide_expected": true,
                "kind": "diff",
                "points": 100,
                "timeout": 4
              },
              {
                "command": "echo 'Goodbye World'",
                "diff_source": "stdout",
                "expected": "generate",
                "hide_expected": true,
                "kind": "diff",
                "points": 100,
                "timeout": 4
              }
            ],
            "test_name": "Test Group 1"
          },
          {
            "build_command": "make",
            "test_cases": [
              {
                "command": "echo 'Hello World'",
                "diff_source": "stdout",
                "expected": "generate",
                "hide_expected": true,
                "kind": "diff",
                "points": 100,
                "timeout": 4
              },
              {
                "command": "echo 'Goodbye World'",
                "diff_source": "stdout",
                "expected": "generate",
                "hide_expected": true,
                "kind": "diff",
                "points": 100,
                "timeout": 4
              }
            ],
            "test_name": "Test Group 2"
          }
        ],
        "uneditables": [
          "**/*.h"
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on minimum keyword",
      "valid": false,
      "rust_error": "0 is less than the minimum of 1",
      "python_error": "0 is less than the minimum of 1\n\nFailed validating 'minimum' in schema['properties']['maximum_group_size']:\n    {'default': 1,\n     'description': 'If students are allowed to work in groups, enter the '\n                    'max group size, otherwise enter 1.',\n     'minimum': 1,\n     'title': 'Maximum Group Size schema',\n     'type': 'integer'}\n\nOn instance['maximum_group_size']:\n    0",
      "data": {
        "assignment_name": "Assignment 1",
        "deadline": "2024-12-31T23:59:00.00Z",
        "expected_files": [
          "**/*.c",
          "**/*.h"
        ],
        "maximum_group_size": 0,
        "ready": true,
        "testables": [
          {
            "build_command": "make",
            "test_cases": [
              {
                "command": "echo 'Hello World'",
                "diff_source": "stdout",
                "expected": "generate",
                "hide_expected": true,
                "kind": "diff",
                "points": 100,
                "timeout": 4
              },
              {
                "command": "echo 'Goodbye World'",
                "diff_source": "stdout",
                "expected": "generate",
                "hide_expected": true,
                "kind": "diff",
                "points": 100,
                "timeout": 4
              }
            ],
            "test_name": "Test Group 1"
          },
          {
            "build_command": "make",
            "test_cases": [
              {
                "command": "echo 'Hello World'",
                "diff_source": "stdout",
                "expected": "generate",
                "hide_expected": true,
                "kind": "diff",
                "points": 100,
                "timeout": 4
              },
              {
                "command": "echo 'Goodbye World'",
                "diff_source": "stdout",
                "expected": "generate",
                "hide_expected": true,
                "kind": "diff",
                "points": 100,
                "timeout": 4
              }
            ],
            "test_name": "Test Group 2"
          }
        ],
        "uneditables": [
          "**/*.h"
        ]
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "0 is less than the minimum of 1",
      "python_error": "'ready' is a required property\n\nFailed validating 'required' in schema:\n    {'$schema': 'http://json-schema.org/draft-04/schema#',\n     'description': 'Format for the assignment specification json for '\n                    'reference repositories.',\n     'properties': {'assignment_name': {'description': 'The identifier for '\n                                                       'this assignment in '\n                                                       'your course',\n                                        'title': 'Assignment Name schema',\n                                        'type': 'string'},\n                    'deadline': {'_format': 'date-time',\n                                 'default': '2017-02-14T23:59:00.00Z',\n                                 'description': 'The due date for the '\n                                                'assignment',\n                                 'title': 'Deadline schema',\n                                 'type': 'string'},\n                    'expected_files': {'d.. (24867 more)",
      "data": {
        "assignment_name": "Assignment 1",
        "deadline": "2024-12-31T23:59:00.00Z",
        "expected_files": [
          "**/*.c",
          "**/*.h"
        ],
        "maximum_group_size": 0,
        "modified to be less than the minimum of 1": "ready",
        "modified to be a string instead of a boolean": true,
        "testables": [
          {
            "build_command": "make",
            "test_cases": [
              {
                "command": "echo 'Hello World'",
                "diff_source": "stdout",
                "expected": "generate",
                "hide_expected": true,
                "kind": "diff",
                "points": 100,
                "timeout": 4
              },
              {
                "command": "echo 'Goodbye World'",
                "diff_source": "stdout",
                "expected": "generate",
                "hide_expected": true,
                "kind": "diff",
                "points": 100,
                "timeout": 4
              }
            ],
            "test_name": "Test Group 1"
          },
          {
            "build_command": "make",
            "test_cases": [
              {
                "command": "echo 'Hello World'",
                "diff_source": "stdout",
                "expected": "generate",
                "hide_expected": true,
                "kind": "diff",
                "points": 100,
                "timeout": 4
              },
              {
                "command": "echo 'Goodbye World'",
                "diff_source": "stdout",
                "expected": "generate",
                "hide_expected": true,
                "kind": "diff",
                "points": 100,
                "timeout": 4
              }
            ],
            "test_name": "Test Group 2"
          }
        ],
        "uneditables": [
          "**/*.h"
        ]
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "assignment_name": "Assignment 1",
        "deadline": "2024-12-31T23:59:00.00Z",
        "expected_files": [
          "**/*.c",
          "**/*.h"
        ],
        "maximum_group_size": 2,
        "ready": true,
        "testables": [
          {
            "build_command": "make",
            "test_cases": [
              {
                "command": "echo 'Hello World'",
                "diff_source": "stdout",
                "expected": "generate",
                "hide_expected": true,
                "kind": "diff",
                "points": 100,
                "timeout": 4
              },
              {
                "command": "echo 'Hello Universe'",
                "diff_source": "stdout",
                "expected": "generate",
                "hide_expected": true,
                "kind": "diff",
                "points": 100,
                "timeout": 4
              }
            ],
            "test_name": "Test Group 1"
          },
          {
            "build_command": "make",
            "test_cases": [
              {
                "command": "echo 'Hello World'",
                "diff_source": "stdout",
                "expected": "generate",
                "hide_expected": true,
                "kind": "diff",
                "points": 100,
                "timeout": 4
              }
            ],
            "test_name": "Test Group 2"
          }
        ],
        "uneditables": [
          "**/*.h",
          "resources/foo.c"
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on minimum keyword",
      "valid": false,
      "rust_error": "0 is less than the minimum of 1",
      "python_error": "0 is less than the minimum of 1\n\nFailed validating 'minimum' in schema['properties']['maximum_group_size']:\n    {'default': 1,\n     'description': 'If students are allowed to work in groups, enter the '\n                    'max group size, otherwise enter 1.',\n     'minimum': 1,\n     'title': 'Maximum Group Size schema',\n     'type': 'integer'}\n\nOn instance['maximum_group_size']:\n    0",
      "data": {
        "assignment_name": "Assignment 1",
        "deadline": "2024-12-31T23:59:00.00Z",
        "expected_files": [
          "**/*.c",
          "**/*.h"
        ],
        "maximum_group_size": 0,
        "ready": true,
        "testables": [
          {
            "build_command": "make",
            "test_cases": [
              {
                "command": "echo 'Hello World'",
                "diff_source": "stdout",
                "expected": "generate",
                "hide_expected": true,
                "kind": "diff",
                "points": 100,
                "timeout": 4
              },
              {
                "command": "echo 'Hello Universe'",
                "diff_source": "stdout",
                "expected": "generate",
                "hide_expected": true,
                "kind": "diff",
                "points": 100,
                "timeout": 4
              }
            ],
            "test_name": "Test Group 1"
          },
          {
            "build_command": "make",
            "test_cases": [
              {
                "command": "echo 'Hello World'",
                "diff_source": "stdout",
                "expected": "generate",
                "hide_expected": true,
                "kind": "diff",
                "points": 100,
                "timeout": 4
              }
            ],
            "test_name": "Test Group 2"
          }
        ],
        "uneditables": [
          "**/*.h",
          "resources/foo.c"
        ]
      }
    }
  ]
}