{
  "description": "sample Kubernetes/kb_549_Normalized.json",
  "meta": {
    "full_size": 2679,
    "stripped_size": 712,
    "features": [
      "$ref"
    ],
    "raw_features": [
      "definitions",
      "properties",
      "type",
      "type:[]",
      "type:null",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "definitions": {
      "https:__kubernetesjsonschema_dev_master__defs_json_defs_io_k8s_apimachinery_pkg_apis_meta_v1_FieldsV1": {
        "description": "FieldsV1 stores a set of fields in a data structure like a Trie, in JSON format.\n\nEach key is either a '.' representing the field itself, and will always map to an empty set, or a string representing a sub-field or item. The string will follow one of these four formats: 'f:<name>', where <name> is the name of a field in a struct, or key in a map 'v:<value>', where <value> is the exact json formatted value of a list item 'i:<index>', where <index> is position of a item in a list 'k:<keys>', where <keys> is a map of  a list item's key fields to their unique values If a key maps to an empty Fields value, the field that key represents is part of the set.\n\nThe exact format is defined in sigs.k8s.io/structured-merge-diff",
        "type": "object"
      },
      "https:__kubernetesjsonschema_dev_master__defs_json_defs_io_k8s_apimachinery_pkg_apis_meta_v1_Time": {
        "_format": "date-time",
        "description": "Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.",
        "type": "string"
      }
    },
    "description": "ManagedFieldsEntry is a workflow-id, a FieldSet and the group version of the resource that the fieldset applies to.",
    "properties": {
      "apiVersion": {
        "description": "APIVersion defines the version of this resource that this field set applies to. The format is \"group/version\" just like the top-level APIVersion field. It is necessary to track the version of a field set because it cannot be automatically converted.",
        "type": [
          "string",
          "null"
        ]
      },
      "fieldsType": {
        "description": "FieldsType is the discriminator for the different fields format and version. There is currently only one possible value: \"FieldsV1\"",
        "type": [
          "string",
          "null"
        ]
      },
      "fieldsV1": {
        "$ref": "#/definitions/https:__kubernetesjsonschema_dev_master__defs_json_defs_io_k8s_apimachinery_pkg_apis_meta_v1_FieldsV1",
        "description": "FieldsV1 holds the first JSON version format as described in the \"FieldsV1\" type."
      },
      "manager": {
        "description": "Manager is an identifier of the workflow managing these fields.",
        "type": [
          "string",
          "null"
        ]
      },
      "operation": {
        "description": "Operation is the type of operation which lead to this ManagedFieldsEntry being created. The only valid values for this field are 'Apply' and 'Update'.",
        "type": [
          "string",
          "null"
        ]
      },
      "time": {
        "$ref": "#/definitions/https:__kubernetesjsonschema_dev_master__defs_json_defs_io_k8s_apimachinery_pkg_apis_meta_v1_Time",
        "description": "Time is timestamp of when these fields were set. It should always be empty if Operation is 'Apply'"
      }
    },
    "type": "object"
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "apiVersion": "v1",
        "fieldsType": "FieldsV1",
        "fieldsV1": {
          "f:metadata": {},
          "f:spec": {
            "f:containers": {
              "k:{": {
                "f:image": {},
                "f:name": {}
              }
            }
          }
        },
        "manager": "kubectl",
        "operation": "Apply",
        "time": "2022-01-01T00:00:00Z"
      }
    },
    {
      "description": "llama-70b generated negative; focus on type keyword with an array of types",
      "valid": false,
      "rust_error": "123 is not of types \"null\", \"string\"",
      "python_error": "123 is not of type 'string', 'null'\n\nFailed validating 'type' in schema['properties']['apiVersion']:\n    {'description': 'APIVersion defines the version of this resource that '\n                    'this field set applies to. The format is '\n                    '\"group/version\" just like the top-level APIVersion '\n                    'field. It is necessary to track the version of a '\n                    'field set because it cannot be automatically '\n                    'converted.',\n     'type': ['string', 'null']}\n\nOn instance['apiVersion']:\n    123",
      "data": {
        "apiVersion": 123,
        "fieldsType": "FieldsV1",
        "fieldsV1": {
          "f:metadata": {},
          "f:spec": {
            "f:containers": {
              "k:{": {
                "f:image": {},
                "f:name": {}
              }
            }
          }
        },
        "manager": "kubectl",
        "operation": "Apply",
        "time": "2022-01-01T00:00:00Z"
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "apiVersion": "v1",
        "fieldsType": "FieldsV1",
        "fieldsV1": {
          "f:metadata": {},
          "f:spec": {
            "f:containers": {
              "k:{\"name\":\"container1\"}": {
                "f:image": {}
              },
              "k:{\"name\":\"container2\"}": {
                "f:image": {}
              }
            }
          }
        },
        "manager": "kubectl",
        "operation": "Apply",
        "time": "2022-01-01T12:00:00Z"
      }
    },
    {
      "description": "llama-70b generated negative; focus on type keyword with an array of types",
      "valid": false,
      "rust_error": "123 is not of types \"null\", \"string\"",
      "python_error": "123 is not of type 'string', 'null'\n\nFailed validating 'type' in schema['properties']['apiVersion']:\n    {'description': 'APIVersion defines the version of this resource that '\n                    'this field set applies to. The format is '\n                    '\"group/version\" just like the top-level APIVersion '\n                    'field. It is necessary to track the version of a '\n                    'field set because it cannot be automatically '\n                    'converted.',\n     'type': ['string', 'null']}\n\nOn instance['apiVersion']:\n    123",
      "data": {
        "apiVersion": 123,
        "fieldsType": "FieldsV1",
        "fieldsV1": {
          "f:metadata": {},
          "f:spec": {
            "f:containers": {
              "k:{\"name\":\"container1\"}": {
                "f:image": {}
              },
              "k:{\"name\":\"container2\"}": {
                "f:image": {}
              }
            }
          }
        },
        "manager": "kubectl",
        "operation": "Apply",
        "time": "2022-01-01T12:00:00Z"
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "123 is not of types \"null\", \"string\"",
      "python_error": "'v1' is not of type 'object'\n\nFailed validating 'type' in schema['properties']['fieldsV1']:\n    {'description': 'FieldsV1 stores a set of fields in a data structure '\n                    'like a Trie, in JSON format.\\n'\n                    '\\n'\n                    \"Each key is either a '.' representing the field \"\n                    'itself, and will always map to an empty set, or a '\n                    'string representing a sub-field or item. The string '\n                    \"will follow one of these four formats: 'f:<name>', \"\n                    'where <name> is the name of a field in a struct, or '\n                    \"key in a map 'v:<value>', where <value> is the exact \"\n                    \"json formatted value of a list item 'i:<index>', \"\n                    'where <index> is position of a item in a list '\n                    \"'k:<keys>', where <keys> is a map of  a list item's \"\n                    'key fields to their unique values If a key maps to an '\n                    'empty Fields value, t.. (268 more)",
      "data": {
        "apiVersion": 123,
        "fieldsType": "extraValue",
        "fieldsV1": "v1",
        "manager": "kubectl",
        "operation": "Apply",
        "time": "2022-01-01T12:00:00Z",
        "extraField": "extraValue",
        "fieldsV1Extra": "extraValue",
        "fieldsTypeExtra": "v1",
        "extra": {
          "f:metadata": {},
          "f:spec": {
            "f:containers": {
              "k:{\"name\":\"container1\"}": {
                "f:image": {}
              },
              "k:{\"name\":\"container2\"}": {
                "f:image": {}
              }
            }
          }
        },
        "timeExtra": "2022-01-01T12:00:00Z",
        "apiVersionExtra": "v1",
        "managerExtra": "kubectl",
        "operationExtra": "Apply",
        "fieldsTypeExtra2": "FieldsV1Extra",
        "fieldsV1Extra2": {
          "f:metadata": {},
          "f:spec": {
            "f:containers": {
              "k:{\"name\":\"container1\"}": {
                "f:image": {}
              },
              "k:{\"name\":\"container2\"}": {
                "f:image": {}
              }
            }
          }
        },
        "fieldsTypeExtra3": "FieldsV1",
        "fieldsV1Extra3": "extraValue",
        "fieldsV1Extra4": {},
        "fieldsV1Extra5": "extraValue",
        "fieldsTypeExtra4": {},
        "fieldsTypeExtra5": "extraValue",
        "fieldsTypeExtra6": {},
        "fieldsTypeExtra7": {},
        "fieldsTypeExtra8": "extraValue",
        "fieldsTypeExtra9": {},
        "fieldsTypeExtra10": "extraValue",
        "fieldsTypeExtra11": {},
        "fieldsTypeExtra12": {},
        "fieldsTypeExtra13": {},
        "fieldsTypeExtra14": {},
        "fieldsTypeExtra15": "extraValue",
        "fieldsTypeExtra16": {},
        "fieldsTypeExtra17": {},
        "fieldsTypeExtra18": {},
        "fieldsTypeExtra19": {},
        "fieldsTypeExtra20": {},
        "fieldsTypeExtra21": {},
        "fieldsTypeExtra22": {},
        "fieldsTypeExtra23": {},
        "fieldsTypeExtra24": {},
        "fieldsTypeExtra25": {},
        "fieldsTypeExtra26": {},
        "fieldsTypeExtra27": {},
        "fieldsTypeExtra28": {},
        "fieldsTypeExtra29": {},
        "fieldsTypeExtra30": {},
        "fieldsTypeExtra31": "extraValue",
        "fieldsTypeExtra32": {},
        "fieldsTypeExtra33": {},
        "fieldsTypeExtra34": {},
        "fieldsTypeExtra35": {},
        "fieldsTypeExtra36": {},
        "fieldsTypeExtra37": {},
        "fieldsTypeExtra38": {},
        "fieldsTypeExtra39": {},
        "fieldsTypeExtra40": {},
        "fieldsTypeExtra41": {},
        "fieldsTypeExtra42": {},
        "fieldsTypeExtra43": {},
        "fieldsTypeExtra44": {},
        "fieldsTypeExtra45": {},
        "fieldsTypeExtra46": {},
        "fieldsTypeExtra47": {},
        "fieldsTypeExtra48": {},
        "fieldsTypeExtra49": {},
        "fieldsTypeExtra50": {},
        "fieldsTypeExtra51": {},
        "fieldsTypeExtra52": {},
        "fieldsTypeExtra53": {},
        "fieldsTypeExtra54": {},
        "fieldsTypeExtra55": {},
        "fieldsTypeExtra56": {},
        "fieldsTypeExtra57": {},
        "fieldsTypeExtra58": {},
        "fieldsTypeExtra59": {},
        "fieldsTypeExtra60": {},
        "fieldsTypeExtra61": {},
        "fieldsTypeExtra62": {},
        "fieldsTypeExtra63": {},
        "fieldsTypeExtra64": {},
        "fieldsTypeExtra65": {},
        "fieldsTypeExtra66": {},
        "fieldsTypeExtra67": {},
        "fieldsTypeExtra68": {},
        "fieldsTypeExtra69": {},
        "fieldsTypeExtra70": {},
        "fieldsTypeExtra71": {},
        "fieldsTypeExtra72": {},
        "fieldsTypeExtra73": {},
        "fieldsTypeExtra74": {},
        "fieldsTypeExtra75": {},
        "fieldsTypeExtra76": {},
        "fieldsTypeExtra77": {},
        "fieldsTypeExtra78": {},
        "fieldsTypeExtra79": {},
        "fieldsTypeExtra80": {},
        "fieldsTypeExtra81": {},
        "fieldsTypeExtra82": {},
        "fieldsTypeExtra83": {},
        "fieldsTypeExtra84": {},
        "fieldsTypeExtra85": {},
        "fieldsTypeExtra86": {},
        "fieldsTypeExtra87": {},
        "fieldsTypeExtra88": {},
        "fieldsTypeExtra89": {},
        "fieldsTypeExtra90": {},
        "fieldsTypeExtra91": {},
        "fieldsTypeExtra92": {},
        "fieldsTypeExtra93": {},
        "fieldsTypeExtra94": {},
        "fieldsTypeExtra95": {},
        "fieldsTypeExtra96": {},
        "fieldsTypeExtra97": {},
        "fieldsTypeExtra98": {},
        "fieldsTypeExtra99": {},
        "fieldsTypeExtra100": {},
        "fieldsTypeExtra101": {},
        "fieldsTypeExtra102": {},
        "fieldsTypeExtra103": {},
        "fieldsTypeExtra104": {},
        "fieldsTypeExtra105": {},
        "fieldsTypeExtra106": {},
        "fieldsTypeExtra107": {},
        "fieldsTypeExtra108": {},
        "fieldsTypeExtra109": {},
        "fieldsTypeExtra110": {},
        "fieldsTypeExtra111": {},
        "fieldsTypeExtra112": {},
        "fieldsTypeExtra113": {},
        "fieldsTypeExtra114": {},
        "fieldsTypeExtra115": {},
        "fieldsTypeExtra116": {},
        "fieldsTypeExtra117": {},
        "fieldsTypeExtra118": {},
        "fieldsTypeExtra119": {},
        "fieldsTypeExtra120": {},
        "fieldsTypeExtra121": {},
        "fieldsTypeExtra122": {},
        "fieldsTypeExtra123": {},
        "fieldsTypeExtra124": {},
        "fieldsTypeExtra125": {},
        "fieldsTypeExtra126": {},
        "fieldsTypeExtra127": {},
        "fieldsTypeExtra128": {},
        "fieldsTypeExtra129": {},
        "fieldsTypeExtra130": {},
        "fieldsTypeExtra131": {},
        "fieldsTypeExtra132": {},
        "fieldsTypeExtra133": {},
        "fieldsTypeExtra134": {},
        "fieldsTypeExtra135": {},
        "fieldsTypeExtra136": {},
        "fieldsTypeExtra137": {},
        "fieldsTypeExtra138": {},
        "fieldsTypeExtra139": {},
        "fieldsTypeExtra140": {},
        "fieldsTypeExtra141": {},
        "fieldsTypeExtra142": {},
        "fieldsTypeExtra143": {},
        "fieldsTypeExtra144": {},
        "fieldsTypeExtra145": {},
        "fieldsTypeExtra146": {},
        "fieldsTypeExtra147": {},
        "fieldsTypeExtra148": {},
        "fieldsTypeExtra149": {},
        "fieldsTypeExtra150": {},
        "fieldsTypeExtra151": {},
        "fieldsTypeExtra152": {},
        "fieldsTypeExtra153": {},
        "fieldsTypeExtra154": {},
        "fieldsTypeExtra155": {},
        "fieldsTypeExtra156": {},
        "fieldsTypeExtra157": {},
        "fieldsTypeExtra158": {},
        "fieldsTypeExtra159": {},
        "fieldsTypeExtra160": {},
        "fieldsTypeExtra161": {},
        "fieldsTypeExtra162": {},
        "fieldsTypeExtra163": {},
        "fieldsTypeExtra164": {},
        "fieldsTypeExtra165": {},
        "fieldsTypeExtra166": {},
        "fieldsTypeExtra167": {},
        "fieldsTypeExtra168": {},
        "fieldsTypeExtra169": {},
        "fieldsTypeExtra170": {},
        "fieldsTypeExtra171": {},
        "fieldsTypeExtra172": {},
        "fieldsTypeExtra173": {},
        "fieldsTypeExtra174": {},
        "fieldsTypeExtra175": {},
        "fieldsTypeExtra176": {},
        "fieldsTypeExtra177": {},
        "fieldsTypeExtra178": {},
        "fieldsTypeExtra179": {},
        "fieldsTypeExtra180": {},
        "fieldsTypeExtra181": {},
        "fieldsTypeExtra182": {},
        "fieldsTypeExtra183": {},
        "fieldsTypeExtra184": {},
        "fieldsTypeExtra185": {},
        "fieldsTypeExtra186": {},
        "fieldsTypeExtra187": {},
        "fieldsTypeExtra188": {},
        "fieldsTypeExtra189": {},
        "fieldsTypeExtra190": {},
        "fieldsTypeExtra191": {},
        "fieldsTypeExtra192": {},
        "fieldsTypeExtra193": {},
        "fieldsTypeExtra194": {},
        "fieldsTypeExtra195": {},
        "fieldsTypeExtra196": {},
        "fieldsTypeExtra197": {},
        "fieldsTypeExtra198": {},
        "fieldsTypeExtra199": {},
        "fieldsTypeExtra200": {}
      }
    }
  ]
}