{
  "description": "sample Github_medium/o79622.json",
  "meta": {
    "full_size": 1910,
    "stripped_size": 1910,
    "features": [
      "$ref",
      "anyOf",
      "items"
    ],
    "raw_features": [
      "$schema",
      "definitions",
      "properties",
      "required",
      "type",
      "type:array",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "definitions": {
      "state": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "type"
        ]
      },
      "sub": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "states": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/definitions/state"
                },
                {
                  "$ref": "#/definitions/sub"
                },
                {
                  "$ref": "#/definitions/parallel"
                }
              ]
            }
          },
          "type": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "type",
          "states"
        ]
      },
      "parallel": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "regions": {
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "anyOf": [
                  {
                    "$ref": "#/definitions/state"
                  },
                  {
                    "$ref": "#/definitions/sub"
                  },
                  {
                    "$ref": "#/definitions/parallel"
                  }
                ]
              }
            }
          },
          "type": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "type",
          "regions"
        ]
      },
      "transition": {
        "type": "object",
        "properties": {
          "kind": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "source": {
            "type": "string"
          },
          "target": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "kind",
          "type",
          "source",
          "target"
        ]
      },
      "compound_transition": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "vertices": {
            "type": "object",
            "properties": {
              "incoming": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "source": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "source",
                    "name"
                  ]
                }
              },
              "outgoing": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "target": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "target"
                  ]
                }
              }
            }
          },
          "pseudo_state": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "region": {
                "type": "string"
              }
            },
            "required": [
              "name",
              "type",
              "region"
            ]
          }
        },
        "required": [
          "name",
          "type",
          "vertices",
          "pseudo_state"
        ]
      }
    },
    "type": "object",
    "properties": {
      "name": {
        "type": "string"
      },
      "states": {
        "type": "array",
        "items": {
          "anyOf": [
            {
              "$ref": "#/definitions/state"
            },
            {
              "$ref": "#/definitions/sub"
            },
            {
              "$ref": "#/definitions/parallel"
            }
          ]
        }
      },
      "transitions": {
        "type": "array",
        "items": {
          "anyOf": [
            {
              "$ref": "#/definitions/transition"
            },
            {
              "$ref": "#/definitions/compound_transition"
            }
          ]
        }
      }
    }
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "name": "Example State Machine",
        "states": [
          {
            "name": "State 1",
            "type": "state"
          },
          {
            "name": "Sub State Machine",
            "type": "sub",
            "states": [
              {
                "name": "Sub State 1",
                "type": "state"
              },
              {
                "name": "Sub State 2",
                "type": "state"
              }
            ]
          },
          {
            "name": "Parallel State Machine",
            "type": "parallel",
            "regions": [
              [
                {
                  "name": "Parallel State 1",
                  "type": "state"
                },
                {
                  "name": "Parallel State 2",
                  "type": "state"
                }
              ],
              [
                {
                  "name": "Parallel State 3",
                  "type": "state"
                },
                {
                  "name": "Parallel State 4",
                  "type": "state"
                }
              ]
            ]
          }
        ],
        "transitions": [
          {
            "kind": "transition",
            "name": "Transition 1",
            "source": "State 1",
            "target": "Sub State Machine",
            "type": "transition"
          },
          {
            "type": "compound_transition",
            "name": "Compound Transition 1",
            "vertices": {
              "incoming": [
                {
                  "source": "Sub State Machine",
                  "name": "Incoming Transition"
                }
              ],
              "outgoing": [
                {
                  "target": "Parallel State Machine"
                }
              ]
            },
            "pseudo_state": {
              "type": "choice",
              "name": "Choice Pseudo State",
              "region": "Parallel State Machine"
            }
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on anyOf keyword",
      "valid": false,
      "rust_error": "{\"type\":\"invalid_transition\"} is not valid under any of the schemas listed in the 'anyOf' keyword",
      "python_error": "{'type': 'invalid_transition'} is not valid under any of the given schemas\n\nFailed validating 'anyOf' in schema['properties']['transitions']['items']:\n    {'anyOf': [{'$ref': '#/definitions/transition'},\n               {'$ref': '#/definitions/compound_transition'}]}\n\nOn instance['transitions'][2]:\n    {'type': 'invalid_transition'}",
      "data": {
        "name": "Example State Machine",
        "states": [
          {
            "name": "State 1",
            "type": "state"
          },
          {
            "name": "Invalid State Machine",
            "type": "invalid"
          },
          {
            "name": "Sub State Machine",
            "type": "sub",
            "states": [
              {
                "name": "Sub State 1",
                "type": "state"
              },
              {
                "name": "Sub State 2",
                "type": "state"
              }
            ]
          },
          {
            "name": "Parallel State Machine",
            "type": "parallel",
            "regions": [
              [
                {
                  "name": "Parallel State 1",
                  "type": "state"
                },
                {
                  "name": "Parallel State 2",
                  "type": "state"
                }
              ],
              [
                {
                  "name": "Parallel State 3",
                  "type": "state"
                },
                {
                  "name": "Parallel State 4",
                  "type": "state"
                }
              ]
            ]
          }
        ],
        "transitions": [
          {
            "kind": "transition",
            "name": "Transition 1",
            "source": "State 1",
            "target": "Sub State Machine",
            "type": "transition"
          },
          {
            "type": "compound_transition",
            "name": "Compound Transition 1",
            "vertices": {
              "incoming": [
                {
                  "source": "Sub State Machine",
                  "name": "Incoming Transition"
                }
              ],
              "outgoing": [
                {
                  "target": "Parallel State Machine"
                }
              ]
            },
            "pseudo_state": {
              "type": "choice",
              "name": "Choice Pseudo State",
              "region": "Parallel State Machine"
            }
          },
          {
            "type": "invalid_transition"
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on anyOf keyword",
      "valid": false,
      "rust_error": "{\"kind\":\"invalid_transition\",\"name\":\"Invalid Transition\",\"source\":\"State 1\",\"target\":\"Sub State Machine\"} is not valid under any of the schemas listed in the 'anyOf' keyword",
      "python_error": "{'kind': 'invalid_transition', 'name': 'Invalid Transition', 'source': 'State 1', 'target': 'Sub State Machine'} is not valid under any of the given schemas\n\nFailed validating 'anyOf' in schema['properties']['transitions']['items']:\n    {'anyOf': [{'$ref': '#/definitions/transition'},\n               {'$ref': '#/definitions/compound_transition'}]}\n\nOn instance['transitions'][2]:\n    {'kind': 'invalid_transition',\n     'name': 'Invalid Transition',\n     'source': 'State 1',\n     'target': 'Sub State Machine'}",
      "data": {
        "name": "Example State Machine",
        "states": [
          {
            "name": "State 1",
            "type": "state"
          },
          {
            "name": "Sub State Machine",
            "type": "sub",
            "states": [
              {
                "name": "Sub State 1",
                "type": "state"
              },
              {
                "name": "Sub State 2",
                "type": "state"
              },
              {
                "name": "Invalid State",
                "type": "invalid"
              }
            ]
          },
          {
            "name": "Parallel State Machine",
            "type": "parallel",
            "regions": [
              [
                {
                  "name": "Parallel State 1",
                  "type": "state"
                },
                {
                  "name": "Parallel State 2",
                  "type": "state"
                }
              ],
              [
                {
                  "name": "Parallel State 3",
                  "type": "state"
                },
                {
                  "name": "Parallel State 4",
                  "type": "state"
                }
              ],
              {
                "name": "Invalid Region",
                "type": "invalid"
              }
            ]
          }
        ],
        "transitions": [
          {
            "kind": "transition",
            "name": "Transition 1",
            "source": "State 1",
            "target": "Sub State Machine",
            "type": "transition"
          },
          {
            "type": "compound_transition",
            "name": "Compound Transition 1",
            "vertices": {
              "incoming": [
                {
                  "source": "Sub State Machine",
                  "name": "Incoming Transition"
                }
              ],
              "outgoing": [
                {
                  "target": "Parallel State Machine"
                }
              ]
            },
            "pseudo_state": {
              "type": "choice",
              "name": "Choice Pseudo State",
              "region": "Parallel State Machine"
            }
          },
          {
            "kind": "invalid_transition",
            "name": "Invalid Transition",
            "source": "State 1",
            "target": "Sub State Machine"
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "{\"kind\":\"transition\",\"name\":\"Transition 1\",\"source\":\"State 1\",\"target\":\"Sub State Machine\"} is not valid under any of the schemas listed in the 'anyOf' keyword",
      "python_error": "{'kind': 'transition', 'name': 'Transition 1', 'source': 'State 1', 'target': 'Sub State Machine'} is not valid under any of the given schemas\n\nFailed validating 'anyOf' in schema['properties']['transitions']['items']:\n    {'anyOf': [{'$ref': '#/definitions/transition'},\n               {'$ref': '#/definitions/compound_transition'}]}\n\nOn instance['transitions'][0]:\n    {'kind': 'transition',\n     'name': 'Transition 1',\n     'source': 'State 1',\n     'target': 'Sub State Machine'}",
      "data": {
        "name": "Example State Machine",
        "states": [
          {
            "name": "State 1",
            "type": "state"
          },
          {
            "name": "Sub State Machine",
            "type": "sub",
            "states": [
              {
                "name": "Sub State 1"
              }
            ]
          },
          {
            "name": "Parallel State Machine",
            "type": "parallel",
            "regions": [
              [
                {
                  "name": "Parallel State 1",
                  "type": "state"
                },
                {
                  "name": "Parallel State 2",
                  "type": "state"
                }
              ],
              [
                {
                  "name": "Parallel State 3",
                  "type": "state"
                },
                {
                  "name": "Parallel State 4",
                  "type": "state"
                }
              ]
            ]
          }
        ],
        "transitions": [
          {
            "kind": "transition",
            "name": "Transition 1",
            "source": "State 1",
            "target": "Sub State Machine"
          },
          {
            "type": "compound_transition",
            "name": "Compound Transition 1",
            "vertices": {
              "incoming": [
                {
                  "source": "Sub State Machine",
                  "name": "Incoming Transition"
                }
              ],
              "outgoing": [
                {
                  "target": "Parallel State Machine"
                }
              ]
            },
            "pseudo_state": {
              "type": "choice",
              "name": "Choice Pseudo State",
              "region": "Parallel State Machine"
            }
          }
        ]
      }
    }
  ]
}