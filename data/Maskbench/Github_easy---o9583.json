{
  "description": "sample Github_easy/o9583.json",
  "meta": {
    "full_size": 605,
    "stripped_size": 243,
    "features": [
      "@minmaxLength"
    ],
    "raw_features": [
      "$schema",
      "maxLength",
      "minLength",
      "properties",
      "required",
      "type",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "type": "object",
    "properties": {
      "kind": {
        "type": "string",
        "default": "req",
        "readonly": "true",
        "description": "Defines that the message is a request"
      },
      "id": {
        "type": "string",
        "description": "Request ID generated by the client. It should be unique per WebSocket session in order to identify the request. This ID will be reflected by the server in the response to the request.",
        "minLength": 1,
        "maxLength": 64,
        "default": "0"
      },
      "type": {
        "description": "Contains one of the APIs request type names",
        "type": "string"
      },
      "body": {
        "type": "object"
      }
    },
    "required": [
      "kind",
      "id",
      "type"
    ]
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "kind": "req",
        "id": "1234567890",
        "type": "exampleRequest",
        "body": {
          "key": "value"
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on minLength keyword or maxLength keyword",
      "valid": false,
      "rust_error": "\"\" is shorter than 1 character",
      "python_error": "'' should be non-empty\n\nFailed validating 'minLength' in schema['properties']['id']:\n    {'type': 'string',\n     'description': 'Request ID generated by the client. It should be '\n                    'unique per WebSocket session in order to identify the '\n                    'request. This ID will be reflected by the server in '\n                    'the response to the request.',\n     'minLength': 1,\n     'maxLength': 64,\n     'default': '0'}\n\nOn instance['id']:\n    ''",
      "data": {
        "kind": "req",
        "id": "",
        "type": "exampleRequest",
        "body": {
          "key": "value"
        }
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "kind": "req",
        "id": "1234567890",
        "type": "get_user_data",
        "body": {
          "username": "john_doe",
          "fields": [
            "name",
            "email"
          ]
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on minLength keyword or maxLength keyword",
      "valid": false,
      "rust_error": "\"\" is shorter than 1 character",
      "python_error": "'' should be non-empty\n\nFailed validating 'minLength' in schema['properties']['id']:\n    {'type': 'string',\n     'description': 'Request ID generated by the client. It should be '\n                    'unique per WebSocket session in order to identify the '\n                    'request. This ID will be reflected by the server in '\n                    'the response to the request.',\n     'minLength': 1,\n     'maxLength': 64,\n     'default': '0'}\n\nOn instance['id']:\n    ''",
      "data": {
        "kind": "req",
        "id": "",
        "type": "get_user_data",
        "body": {
          "username": "john_doe",
          "fields": [
            "name",
            "email"
          ]
        }
      }
    }
  ]
}