{
  "description": "sample Github_medium/o82377.json",
  "meta": {
    "full_size": 1297,
    "stripped_size": 668,
    "features": [
      "@minmaxLength",
      "additionalProperties",
      "pattern"
    ],
    "raw_features": [
      "$schema",
      "_boolSchema",
      "id",
      "maxLength",
      "minLength",
      "properties",
      "required",
      "type",
      "type:boolean",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "id": "http://schemas.triniti.io/json-schema/gdbots/forms/mixin/field/1-0-0.json#",
    "$schema": "http://json-schema.org/draft-04/schema#",
    "type": "object",
    "properties": {
      "name": {
        "type": "string",
        "pattern": "^[a-zA-Z_]{1}[\\w-]*$",
        "description": "A unique identifier (within the form) for the field. This value is not shown to the user and should NOT change once set.",
        "pbj": {
          "type": "string",
          "rule": "single"
        }
      },
      "maps_to": {
        "type": "string",
        "default": "cf",
        "pattern": "^[a-zA-Z_]{1}\\w*$",
        "description": "The name of the schema field the answer will map to. By default this will go to the \"cf\" field which is a \"dynamic-field\" list containing all answers filled out on the form (ref \"gdbots:forms:mixin:send-submission\").",
        "pbj": {
          "type": "string",
          "rule": "single"
        }
      },
      "label": {
        "type": "string",
        "minLength": 0,
        "maxLength": 255,
        "description": "The main text for the question/field.",
        "pbj": {
          "type": "string",
          "rule": "single"
        }
      },
      "placeholder": {
        "type": "string",
        "minLength": 0,
        "maxLength": 255,
        "pbj": {
          "type": "string",
          "rule": "single"
        }
      },
      "description": {
        "type": "string",
        "minLength": 0,
        "maxLength": 65535,
        "description": "A short description to better explain this field.",
        "pbj": {
          "type": "text",
          "rule": "single"
        }
      },
      "is_required": {
        "type": "boolean",
        "pbj": {
          "type": "boolean",
          "rule": "single"
        }
      }
    },
    "required": [
      "name"
    ],
    "additionalProperties": true
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "name": "username",
        "maps_to": "cf",
        "label": "Enter your username",
        "placeholder": "e.g. john_doe",
        "description": "Please enter your desired username. It should be unique and easy to remember.",
        "is_required": true
      }
    },
    {
      "description": "llama-70b generated negative; focus on pattern keyword",
      "valid": false,
      "rust_error": "\"123username\" does not match \"^[a-zA-Z_]{1}[\\w-]*$\"",
      "python_error": "'123username' does not match '^[a-zA-Z_]{1}[\\\\w-]*$'\n\nFailed validating 'pattern' in schema['properties']['name']:\n    {'type': 'string',\n     'pattern': '^[a-zA-Z_]{1}[\\\\w-]*$',\n     'description': 'A unique identifier (within the form) for the field. '\n                    'This value is not shown to the user and should NOT '\n                    'change once set.',\n     'pbj': {'type': 'string', 'rule': 'single'}}\n\nOn instance['name']:\n    '123username'",
      "data": {
        "name": "123username",
        "maps_to": "cf",
        "label": "Enter your username",
        "placeholder": "e.g. john_doe",
        "description": "Please enter your desired username. It should be unique and easy to remember.",
        "is_required": true
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "name": "example_field",
        "maps_to": "cf",
        "label": "Example Field",
        "placeholder": "Enter your answer here",
        "description": "This is a short description to better explain this field.",
        "is_required": true
      }
    }
  ]
}