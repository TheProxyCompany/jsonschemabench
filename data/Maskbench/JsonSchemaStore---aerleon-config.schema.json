{
  "description": "sample JsonSchemaStore/aerleon-config.schema.json",
  "meta": {
    "full_size": 3196,
    "stripped_size": 484,
    "features": [
      "@minmaxLength",
      "additionalProperties"
    ],
    "raw_features": [
      "$schema",
      "_boolSchema",
      "minLength",
      "properties",
      "type",
      "type:boolean",
      "type:integer",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "title": "aerleon.yml",
    "description": "Configure Aerleon's aclgen, aclcheck, and pol2yaml command line tools",
    "type": "object",
    "properties": {
      "base_directory": {
        "type": "string",
        "description": "aclgen and pol2yaml will search this directory recursively for policy files to process, except if the flag `--policy_file` is used to give a specific input file (aclgen only).\n\nRelative paths that appear in 'include' directives will be resolved against base_directory.\n\nThe default value is './policies'.",
        "minLength": 1
      },
      "definitions_directory": {
        "type": "string",
        "description": "All network and service definition files in this directory will be loaded and used to resolve symbolic network and service names. \n\nUnlike base_directory, definitions_directory is not searched recursively for input files.\n\nThe default value is './def'.",
        "minLength": 1
      },
      "output_directory": {
        "type": "string",
        "description": "aclgen will place all generated ACLs in this directory. For `aclgen` the default value is the current directory.\n\npol2yaml will place each converted file adjacent to its input file by default. If output_directory is given, pol2yaml will mirror the directory structure of the input files in the output_directory, potentially creating directories in the process.",
        "minLength": 1
      },
      "optimize": {
        "type": "boolean",
        "description": "Causes aclgen to produce a more compact address book by collapsing adjacent or overlapping CIDR expressions within the same network.\n\nOn some platforms (Juniper SRX and platforms configured with the 'object-group' option) address book compression is restricted to only collapse addresses that share the same network token (name).\n\nThis flag is not enabled by default, although a secondary address book compression pass is always performed for Juniper SRX and Palo Alto Networks firewalls regardless of this setting."
      },
      "recursive": {
        "type": "boolean",
        "description": "UNUSED. This field is not used."
      },
      "debug": {
        "type": "boolean",
        "description": "Causes aclgen to display very detailed log messages if true. The default value is false."
      },
      "verbose": {
        "type": "boolean",
        "description": "UNUSED. This field is not used. To get detailed log messages, use 'debug'."
      },
      "max_renderers": {
        "type": "integer",
        "description": "Controls the number of parallel processes used by aclgen to render ACLs. The aclgen program uses Python's OS process-based multiprocessing, so setting max_renderers to '2' would cause aclgen to spawn two OS processes that will generate ACLs.\n\nSetting max_renderers to '1' will disable multiprocessing.\n\nBy default, max_renderers is set to '10'. Users may wish to set this to the number of available CPUs on the current system."
      },
      "shade_check": {
        "type": "boolean",
        "description": "Causes aclgen to produce a warning if any unreachable term is encountered if true. The default value is false."
      },
      "exp_info": {
        "type": "integer",
        "description": "aclgen will produce a warning if it encounters a term set to expire in the near future. Expired terms are ignored. Setting exp_info controls the number of weeks ahead that aclgen will check for soon-to-expire terms.\n\nThe default value is '2' (two weeks)."
      }
    },
    "additionalProperties": false
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "base_directory": "/path/to/policies",
        "definitions_directory": "/path/to/definitions",
        "output_directory": "/path/to/output",
        "optimize": true,
        "debug": true,
        "max_renderers": 4,
        "shade_check": true,
        "exp_info": 4
      }
    },
    {
      "description": "llama-70b generated negative; focus on minLength keyword",
      "valid": false,
      "rust_error": "\"\" is shorter than 1 character",
      "python_error": "'' should be non-empty\n\nFailed validating 'minLength' in schema['properties']['base_directory']:\n    {'type': 'string',\n     'description': 'aclgen and pol2yaml will search this directory '\n                    'recursively for policy files to process, except if '\n                    'the flag `--policy_file` is used to give a specific '\n                    'input file (aclgen only).\\n'\n                    '\\n'\n                    \"Relative paths that appear in 'include' directives \"\n                    'will be resolved against base_directory.\\n'\n                    '\\n'\n                    \"The default value is './policies'.\",\n     'minLength': 1}\n\nOn instance['base_directory']:\n    ''",
      "data": {
        "base_directory": "",
        "definitions_directory": "/path/to/definitions",
        "output_directory": "/path/to/output",
        "optimize": true,
        "debug": true,
        "max_renderers": 4,
        "shade_check": true,
        "exp_info": 4
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "Additional properties are not allowed ('extra_property' was unexpected)",
      "python_error": "Additional properties are not allowed ('extra_property' was unexpected)\n\nFailed validating 'additionalProperties' in schema:\n    {'$schema': 'http://json-schema.org/draft-04/schema#',\n     'title': 'aerleon.yml',\n     'description': \"Configure Aerleon's aclgen, aclcheck, and pol2yaml \"\n                    'command line tools',\n     'type': 'object',\n     'properties': {'base_directory': {'type': 'string',\n                                       'description': 'aclgen and pol2yaml '\n                                                      'will search this '\n                                                      'directory '\n                                                      'recursively for '\n                                                      'policy files to '\n                                                      'process, except if '\n                                                      'the flag '\n                                                      '`--policy_file` is '\n                                 .. (11741 more)",
      "data": {
        "base_directory": "/path/to/policies",
        "definitions_directory": "/path/to/definitions",
        "output_directory": "/path/to/output",
        "optimize": true,
        "debug": true,
        "max_renderers": 4,
        "shade_check": true,
        "exp_info": 4,
        "extra_property": "value"
      }
    }
  ]
}