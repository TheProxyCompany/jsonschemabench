{
  "description": "sample Github_medium/o32495.json",
  "meta": {
    "full_size": 1111,
    "stripped_size": 592,
    "features": [
      "@minmaxLength"
    ],
    "raw_features": [
      "$schema",
      "minLength",
      "properties",
      "required",
      "type",
      "type:[]",
      "type:boolean",
      "type:integer",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "The post id"
      },
      "title": {
        "type": "string",
        "description": "The post title",
        "minLength": 1
      },
      "content": {
        "type": "string",
        "description": "The post content",
        "minLength": 1
      },
      "creationDate": {
        "type": "string",
        "description": "The post creation date"
      },
      "isPublished": {
        "type": "boolean",
        "description": "The post publication status"
      },
      "pinned": {
        "type": "boolean",
        "description": "The post pinned status"
      },
      "modificationDate": {
        "type": "string",
        "description": "The post modification date"
      },
      "publicationDate": {
        "type": "string",
        "description": "The post publication date"
      },
      "viewCounter": {
        "type": "integer",
        "description": "The post view number"
      },
      "tags": {
        "type": "string",
        "description": "Post tags, comma separated"
      },
      "author": {
        "type": [
          "object"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Author id"
          },
          "firstName": {
            "type": "string",
            "description": "Author first name"
          },
          "lastName": {
            "type": "string",
            "description": "Author last name"
          },
          "email": {
            "type": "string",
            "description": "Author email"
          }
        }
      }
    },
    "required": [
      "id",
      "title"
    ],
    "claroIds": [
      "id"
    ]
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "id": "post-123",
        "title": "Example Post",
        "content": "This is an example post.",
        "creationDate": "2022-01-01T12:00:00.000Z",
        "isPublished": true,
        "pinned": false,
        "modificationDate": "2022-01-01T12:00:00.000Z",
        "publicationDate": "2022-01-01T12:00:00.000Z",
        "viewCounter": 100,
        "tags": "example, post, test",
        "author": {
          "id": "author-123",
          "firstName": "John",
          "lastName": "Doe",
          "email": "john.doe@example.com"
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on minLength keyword",
      "valid": false,
      "rust_error": "\"\" is shorter than 1 character",
      "python_error": "'' should be non-empty\n\nFailed validating 'minLength' in schema['properties']['title']:\n    {'type': 'string', 'description': 'The post title', 'minLength': 1}\n\nOn instance['title']:\n    ''",
      "data": {
        "id": "post-123",
        "title": "",
        "content": "This is an example post.",
        "creationDate": "2022-01-01T12:00:00.000Z",
        "isPublished": true,
        "pinned": false,
        "modificationDate": "2022-01-01T12:00:00.000Z",
        "publicationDate": "2022-01-01T12:00:00.000Z",
        "viewCounter": 100,
        "tags": "example, post, test",
        "author": {
          "id": "author-123",
          "firstName": "John",
          "lastName": "Doe",
          "email": "john.doe@example.com"
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on type keyword with an array of types",
      "valid": false,
      "rust_error": "\"John Doe\" is not of type \"object\"",
      "python_error": "'John Doe' is not of type 'object'\n\nFailed validating 'type' in schema['properties']['author']:\n    {'type': ['object'],\n     'properties': {'id': {'type': 'string', 'description': 'Author id'},\n                    'firstName': {'type': 'string',\n                                  'description': 'Author first name'},\n                    'lastName': {'type': 'string',\n                                 'description': 'Author last name'},\n                    'email': {'type': 'string',\n                              'description': 'Author email'}}}\n\nOn instance['author']:\n    'John Doe'",
      "data": {
        "id": "post-123",
        "title": "Example Post",
        "content": "This is an example post.",
        "creationDate": "2022-01-01T12:00:00.000Z",
        "isPublished": true,
        "pinned": false,
        "modificationDate": "2022-01-01T12:00:00.000Z",
        "publicationDate": "2022-01-01T12:00:00.000Z",
        "viewCounter": 100,
        "tags": "example, post, test",
        "author": "John Doe"
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "id": "post-123",
        "title": "Example Post Title",
        "content": "This is an example post content.",
        "creationDate": "2022-01-01T12:00:00.000Z",
        "isPublished": true,
        "pinned": false,
        "modificationDate": "2022-01-01T12:00:00.000Z",
        "publicationDate": "2022-01-01T12:00:00.000Z",
        "viewCounter": 100,
        "tags": "example, post, tags",
        "author": {
          "id": "author-123",
          "firstName": "John",
          "lastName": "Doe",
          "email": "john.doe@example.com"
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on type keyword with an array of types",
      "valid": false,
      "rust_error": "123 is not of type \"object\"",
      "python_error": "123 is not of type 'object'\n\nFailed validating 'type' in schema['properties']['author']:\n    {'type': ['object'],\n     'properties': {'id': {'type': 'string', 'description': 'Author id'},\n                    'firstName': {'type': 'string',\n                                  'description': 'Author first name'},\n                    'lastName': {'type': 'string',\n                                 'description': 'Author last name'},\n                    'email': {'type': 'string',\n                              'description': 'Author email'}}}\n\nOn instance['author']:\n    123",
      "data": {
        "id": "post-123",
        "title": "Example Post Title",
        "content": "This is an example post content.",
        "creationDate": "2022-01-01T12:00:00.000Z",
        "isPublished": true,
        "pinned": false,
        "modificationDate": "2022-01-01T12:00:00.000Z",
        "publicationDate": "2022-01-01T12:00:00.000Z",
        "viewCounter": 100,
        "tags": "example, post, tags",
        "author": 123
      }
    },
    {
      "description": "llama-70b generated negative; focus on minLength keyword",
      "valid": false,
      "rust_error": "\"\" is shorter than 1 character",
      "python_error": "'' should be non-empty\n\nFailed validating 'minLength' in schema['properties']['title']:\n    {'type': 'string', 'description': 'The post title', 'minLength': 1}\n\nOn instance['title']:\n    ''",
      "data": {
        "id": "post-123",
        "title": "",
        "content": "This is an example post content.",
        "creationDate": "2022-01-01T12:00:00.000Z",
        "isPublished": true,
        "pinned": false,
        "modificationDate": "2022-01-01T12:00:00.000Z",
        "publicationDate": "2022-01-01T12:00:00.000Z",
        "viewCounter": 100,
        "tags": "example, post, tags",
        "author": {
          "id": "author-123",
          "firstName": "John",
          "lastName": "Doe",
          "email": "john.doe@example.com"
        }
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"\" is shorter than 1 character",
      "python_error": "'' should be non-empty\n\nFailed validating 'minLength' in schema['properties']['title']:\n    {'type': 'string', 'description': 'The post title', 'minLength': 1}\n\nOn instance['title']:\n    ''",
      "data": {
        "id": "post-123",
        "title": "",
        "content": "This is an example post content.",
        "creationDate": "2022-01-01T12:00:00.000Z",
        "isPublished": true,
        "pinned": false,
        "modificationDate": "2022-01-01T12:00:00.000Z",
        "publicationDate": "2022-01-01T12:00:00.000Z",
        "viewCounter": 100,
        "tags": "example, post, tags",
        "author": {
          "id": "author-123",
          "firstName": "John",
          "lastName": "Doe",
          "email": "john.doe@example.com"
        }
      }
    }
  ]
}