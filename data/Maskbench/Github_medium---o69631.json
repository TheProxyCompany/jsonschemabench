{
  "description": "sample Github_medium/o69631.json",
  "meta": {
    "full_size": 1276,
    "stripped_size": 384,
    "features": [
      "additionalProperties",
      "format",
      "format:uri"
    ],
    "raw_features": [
      "_boolSchema",
      "properties",
      "required",
      "type",
      "type:integer",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "additionalProperties": true,
    "description": "The most generic type of item. Schema.org: http://schema.org/Thing",
    "properties": {
      "additionalType": {
        "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.",
        "type": "string"
      },
      "alternateName": {
        "description": "An alias for the item.",
        "type": "string"
      },
      "description": {
        "description": "A short description of the item.",
        "type": "string"
      },
      "id": {
        "type": "string"
      },
      "image": {
        "description": "URL of an image of the item.",
        "format": "uri",
        "type": "string"
      },
      "name": {
        "description": "The name of the item.",
        "type": "string"
      },
      "sameAs": {
        "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Freebase page, or official website.",
        "type": "string"
      },
      "url": {
        "description": "URL of the item.",
        "format": "uri",
        "type": "string"
      },
      "version": {
        "type": "integer"
      }
    },
    "required": [
      "id",
      "name",
      "description"
    ],
    "type": "object"
  },
  "tests": [
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "id": "example-item-1",
        "name": "Example Item",
        "description": "This is an example item.",
        "additionalType": "http://example.com/types/ExampleType",
        "alternateName": "Example Alias",
        "image": "https://example.com/image.jpg",
        "sameAs": "https://en.wikipedia.org/wiki/Example",
        "url": "https://example.com/item",
        "version": 1
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "id": "12345",
        "name": "Example Item",
        "description": "This is an example item.",
        "additionalType": "http://example.com/types/ExampleType",
        "alternateName": "Another Name for the Item",
        "image": "https://example.com/image.jpg",
        "sameAs": "https://en.wikipedia.org/wiki/Example_Item",
        "url": "https://example.com/item",
        "version": 1,
        "customProperty": "This is a custom property"
      }
    },
    {
      "description": "llama-70b generated negative; focus on format keyword",
      "valid": false,
      "rust_error": "\"invalid-image-url\" is not a \"uri\"",
      "python_error": "'invalid-url' is not a 'uri'\n\nFailed validating 'format' in schema['properties']['url']:\n    {'description': 'URL of the item.', 'format': 'uri', 'type': 'string'}\n\nOn instance['url']:\n    'invalid-url'",
      "data": {
        "id": "12345",
        "name": "Example Item",
        "description": "This is an example item.",
        "additionalType": "http://example.com/types/ExampleType",
        "alternateName": "Another Name for the Item",
        "image": "invalid-image-url",
        "sameAs": "https://en.wikipedia.org/wiki/Example_Item",
        "url": "invalid-url",
        "version": 1,
        "customProperty": "This is a custom property"
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "123 is not of type \"string\"",
      "python_error": "'1' is not of type 'integer'\n\nFailed validating 'type' in schema['properties']['version']:\n    {'type': 'integer'}\n\nOn instance['version']:\n    '1'",
      "data": {
        "id": "12345",
        "name": "",
        "description": 123,
        "image": 123,
        "url": 456,
        "version": "1"
      }
    }
  ]
}