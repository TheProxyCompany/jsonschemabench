{
  "description": "sample Github_trivial/o53906.json",
  "meta": {
    "full_size": 269,
    "stripped_size": 122,
    "features": [
      "items",
      "pattern"
    ],
    "raw_features": [
      "$schema",
      "type",
      "type:array",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "description": "10/EPMP get metadata keys response: a set of endpoint metadata keys",
    "type": "array",
    "items": {
      "type": "string",
      "pattern": "^[a-zA-Z0-9_]+$",
      "description": "Endpoint metadata key name"
    },
    "_uniqueItems": true
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": [
        "key1",
        "key2",
        "key3",
        "key4",
        "key5"
      ]
    },
    {
      "description": "llama-70b generated negative; focus on pattern keyword",
      "valid": false,
      "rust_error": "{\"key1-abc\":\"key2\",\"key3@abc\":\"key4\",\"key5\":\"key6\"} is not of type \"array\"",
      "python_error": "{'key1-abc': 'key2', 'key3@abc': 'key4', 'key5': 'key6'} is not of type 'array'\n\nFailed validating 'type' in schema:\n    {'$schema': 'http://json-schema.org/draft-04/schema#',\n     'description': '10/EPMP get metadata keys response: a set of endpoint '\n                    'metadata keys',\n     'type': 'array',\n     'items': {'type': 'string',\n               'pattern': '^[a-zA-Z0-9_]+$',\n               'description': 'Endpoint metadata key name'},\n     '_uniqueItems': True}\n\nOn instance:\n    {'key1-abc': 'key2', 'key3@abc': 'key4', 'key5': 'key6'}",
      "data": {
        "key1-abc": "key2",
        "key3@abc": "key4",
        "key5": "key6"
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "{\"key1\":\"value1\",\"key2\":\"value2\",\"key3\":\"value3\",\"key4\":\"value4\",\"key5\":\"value5\"} is not of type \"array\"",
      "python_error": "{'key1': 'value1', 'key2': 'value2', 'key3': 'value3', 'key4': 'value4', 'key5': 'value5'} is not of type 'array'\n\nFailed validating 'type' in schema:\n    {'$schema': 'http://json-schema.org/draft-04/schema#',\n     'description': '10/EPMP get metadata keys response: a set of endpoint '\n                    'metadata keys',\n     'type': 'array',\n     'items': {'type': 'string',\n               'pattern': '^[a-zA-Z0-9_]+$',\n               'description': 'Endpoint metadata key name'},\n     '_uniqueItems': True}\n\nOn instance:\n    {'key1': 'value1',\n     'key2': 'value2',\n     'key3': 'value3',\n     'key4': 'value4',\n     'key5': 'value5'}",
      "data": {
        "key1": "value1",
        "key2": "value2",
        "key3": "value3",
        "key4": "value4",
        "key5": "value5"
      }
    },
    {
      "description": "llama-70b generated negative; focus on pattern keyword",
      "valid": false,
      "rust_error": "{\"key1-\":\"value1\"} is not of type \"array\"",
      "python_error": "{'key1-': 'value1'} is not of type 'array'\n\nFailed validating 'type' in schema:\n    {'$schema': 'http://json-schema.org/draft-04/schema#',\n     'description': '10/EPMP get metadata keys response: a set of endpoint '\n                    'metadata keys',\n     'type': 'array',\n     'items': {'type': 'string',\n               'pattern': '^[a-zA-Z0-9_]+$',\n               'description': 'Endpoint metadata key name'},\n     '_uniqueItems': True}\n\nOn instance:\n    {'key1-': 'value1'}",
      "data": {
        "key1-": "value1"
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "{\"key1\":\"value1\"} is not of type \"array\"",
      "python_error": "{'key1': 'value1'} is not of type 'array'\n\nFailed validating 'type' in schema:\n    {'$schema': 'http://json-schema.org/draft-04/schema#',\n     'description': '10/EPMP get metadata keys response: a set of endpoint '\n                    'metadata keys',\n     'type': 'array',\n     'items': {'type': 'string',\n               'pattern': '^[a-zA-Z0-9_]+$',\n               'description': 'Endpoint metadata key name'},\n     '_uniqueItems': True}\n\nOn instance:\n    {'key1': 'value1'}",
      "data": {
        "key1": "value1"
      }
    }
  ]
}