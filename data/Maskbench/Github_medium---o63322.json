{
  "description": "sample Github_medium/o63322.json",
  "meta": {
    "full_size": 1723,
    "stripped_size": 390,
    "features": [
      "format",
      "format:path"
    ],
    "raw_features": [
      "_requiredEmpty",
      "properties",
      "required",
      "type",
      "type:boolean",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "properties": {
      "api": {
        "aliases": [
          "a"
        ],
        "default": false,
        "description": "Specifies if effect has api success and failure actions wired up",
        "type": "boolean",
        "x-prompt": "Should we wire up success and failure actions?"
      },
      "creators": {
        "aliases": [
          "c"
        ],
        "default": true,
        "description": "Specifies whether to use creator functions for handling actions, reducers, and effects.",
        "type": "boolean",
        "x-prompt": "Do you want to use the create function?"
      },
      "feature": {
        "default": false,
        "description": "Flag to indicate if part of a feature schematic.",
        "type": "boolean"
      },
      "flat": {
        "default": true,
        "description": "Flag to indicate if a dir is created.",
        "type": "boolean"
      },
      "group": {
        "aliases": [
          "g"
        ],
        "default": false,
        "description": "Group effects file within 'effects' folder",
        "type": "boolean"
      },
      "minimal": {
        "default": false,
        "description": "Setup root effects module without registering initial effects.",
        "type": "boolean"
      },
      "module": {
        "alias": "m",
        "default": "",
        "description": "Allows specification of the declaring module.",
        "subtype": "filepath",
        "type": "string",
        "x-prompt": "To which module (path) should the effect be registered in?"
      },
      "name": {
        "$default": {
          "$source": "argv",
          "index": 0
        },
        "description": "The name of the effect.",
        "type": "string",
        "x-prompt": "What should be the name of the Effect?"
      },
      "path": {
        "description": "The path to create the component.",
        "format": "path",
        "type": "string",
        "visible": false
      },
      "project": {
        "aliases": [
          "p"
        ],
        "description": "The name of the project.",
        "type": "string"
      },
      "root": {
        "default": false,
        "description": "Flag to indicate whether the effects are registered as root.",
        "type": "boolean"
      },
      "skipTests": {
        "default": false,
        "description": "When true, does not create test files.",
        "type": "boolean"
      }
    },
    "required": [],
    "title": "NgRx Effect Options Schema",
    "type": "object"
  },
  "tests": [
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "api": true,
        "creators": true,
        "feature": false,
        "flat": true,
        "group": false,
        "minimal": false,
        "module": "app.module.ts",
        "name": "MyEffect",
        "path": "./src/app/effects",
        "project": "my-ngrx-project",
        "root": false,
        "skipTests": false
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "api": true,
        "creators": true,
        "feature": false,
        "flat": true,
        "group": false,
        "minimal": false,
        "module": "app.module.ts",
        "name": "MyEffect",
        "path": "/src/app/effects",
        "project": "MyProject",
        "root": false,
        "skipTests": false
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"true\" is not of type \"boolean\"",
      "python_error": "'true' is not of type 'boolean'\n\nFailed validating 'type' in schema['properties']['api']:\n    {'aliases': ['a'],\n     'default': False,\n     'description': 'Specifies if effect has api success and failure '\n                    'actions wired up',\n     'type': 'boolean',\n     'x-prompt': 'Should we wire up success and failure actions?'}\n\nOn instance['api']:\n    'true'",
      "data": {
        "api": "true",
        "creators": true,
        "feature": false,
        "flat": true,
        "group": false,
        "minimal": false,
        "module": "app.module.ts",
        "name": "MyEffect",
        "path": "/src/app/effects",
        "project": "MyProject",
        "root": false,
        "skipTests": false
      }
    }
  ]
}