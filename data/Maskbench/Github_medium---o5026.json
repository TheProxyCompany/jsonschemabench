{
  "description": "sample Github_medium/o5026.json",
  "meta": {
    "full_size": 738,
    "stripped_size": 708,
    "features": [
      "@minmaxLength",
      "additionalProperties",
      "enum",
      "items"
    ],
    "raw_features": [
      "$schema",
      "_boolSchema",
      "id",
      "maxLength",
      "minLength",
      "properties",
      "required",
      "type",
      "type:array",
      "type:number",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "id": "http://elasticbox.net/schemas/namespace",
    "type": "object",
    "required": [
      "_id",
      "name",
      "metadata",
      "schema"
    ],
    "additionalProperties": false,
    "properties": {
      "_id": {
        "type": "string",
        "minLength": 1,
        "maxLength": 36
      },
      "metadata": {
        "type": "object",
        "properties": {
          "creationTimestamp": {
            "type": "number"
          },
          "deletionTimestamp": {
            "type": "number"
          },
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 63
          },
          "resourceVersion": {
            "type": "number"
          },
          "uid": {
            "type": "string"
          }
        }
      },
      "name": {
        "type": "string",
        "minLength": 1,
        "maxLength": 63
      },
      "schema": {
        "type": "string",
        "enum": [
          "http://elasticbox.net/schemas/namespace"
        ]
      },
      "members": {
        "type": "array",
        "default": [],
        "items": {
          "type": "string",
          "minLength": 1,
          "maxLength": 256
        }
      }
    },
    "type:": "object"
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "_id": "1234567890abcdef",
        "metadata": {
          "creationTimestamp": 1643723400,
          "deletionTimestamp": 0,
          "name": "example-namespace",
          "resourceVersion": 1,
          "uid": "abcdef1234567890"
        },
        "name": "example-namespace",
        "schema": "http://elasticbox.net/schemas/namespace",
        "members": [
          "user1@example.com",
          "user2@example.com"
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on minLength keyword or maxLength keyword",
      "valid": false,
      "rust_error": "\"\" is shorter than 1 character",
      "python_error": "'' should be non-empty\n\nFailed validating 'minLength' in schema['properties']['name']:\n    {'type': 'string', 'minLength': 1, 'maxLength': 63}\n\nOn instance['name']:\n    ''",
      "data": {
        "_id": "",
        "metadata": {
          "creationTimestamp": 1643723400,
          "deletionTimestamp": 0,
          "name": "",
          "resourceVersion": 1,
          "uid": "abcdef1234567890"
        },
        "name": "",
        "schema": "http://elasticbox.net/schemas/namespace",
        "members": [
          "",
          "user2@example.com"
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on minLength keyword or maxLength keyword",
      "valid": false,
      "rust_error": "\"\" is shorter than 1 character",
      "python_error": "'' should be non-empty\n\nFailed validating 'minLength' in schema['properties']['_id']:\n    {'type': 'string', 'minLength': 1, 'maxLength': 36}\n\nOn instance['_id']:\n    ''",
      "data": {
        "_id": "",
        "metadata": {
          "creationTimestamp": 1643723400,
          "deletionTimestamp": 0,
          "name": "example-namespace",
          "resourceVersion": 1,
          "uid": "abcdef1234567890"
        },
        "name": "example-namespace",
        "schema": "http://elasticbox.net/schemas/namespace",
        "members": [
          "user1@example.com",
          "user2@example.com"
        ]
      }
    }
  ]
}