{
  "description": "sample Github_easy/o90453.json",
  "meta": {
    "full_size": 326,
    "stripped_size": 263,
    "features": [],
    "raw_features": [
      "properties",
      "required",
      "type",
      "type:number",
      "type:string"
    ]
  },
  "schema": {
    "properties": {
      "blocked": {
        "min": -1,
        "type": "number"
      },
      "comment": {
        "type": "string"
      },
      "connect": {
        "min": -1,
        "type": "number"
      },
      "dns": {
        "min": -1,
        "type": "number"
      },
      "receive": {
        "min": -1,
        "type": "number"
      },
      "send": {
        "min": -1,
        "type": "number"
      },
      "ssl": {
        "min": -1,
        "type": "number"
      },
      "wait": {
        "min": -1,
        "type": "number"
      }
    },
    "required": [
      "send",
      "wait",
      "receive"
    ]
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "blocked": 0,
        "comment": "Example data",
        "connect": 10,
        "dns": 20,
        "receive": 30,
        "send": 40,
        "ssl": 50,
        "wait": 60
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"sixty\" is not of type \"number\"",
      "python_error": "'sixty' is not of type 'number'\n\nFailed validating 'type' in schema['properties']['wait']:\n    {'min': -1, 'type': 'number'}\n\nOn instance['wait']:\n    'sixty'",
      "data": {
        "blocked": 0,
        "comment": "Example data",
        "connect": 10,
        "dns": 20,
        "receive": 30,
        "send": 40,
        "ssl": 50,
        "wait": "sixty"
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "blocked": 0,
        "comment": "Example comment",
        "connect": 10,
        "dns": 20,
        "receive": 30,
        "send": 40,
        "ssl": 50,
        "wait": 60
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"40\" is not of type \"number\"",
      "python_error": "'wait' is a required property\n\nFailed validating 'required' in schema:\n    {'properties': {'blocked': {'min': -1, 'type': 'number'},\n                    'comment': {'type': 'string'},\n                    'connect': {'min': -1, 'type': 'number'},\n                    'dns': {'min': -1, 'type': 'number'},\n                    'receive': {'min': -1, 'type': 'number'},\n                    'send': {'min': -1, 'type': 'number'},\n                    'ssl': {'min': -1, 'type': 'number'},\n                    'wait': {'min': -1, 'type': 'number'}},\n     'required': ['send', 'wait', 'receive']}\n\nOn instance:\n    {'blocked': 0,\n     'comment': 'Example comment',\n     'connect': 10,\n     'dns': 20,\n     'receive': 30,\n     'send': '40',\n     ' changed send to string so that it violates the schema type: number': 'ssl',\n     'ssl is missing to check required fields': 'wait',\n     'wait is missing to check required fields': 'newKey',\n     'Adding a newKey to see how schema handles extra fields': 'newKey',\n     ' duplicate key .. (195 more)",
      "data": {
        "blocked": 0,
        "comment": "Example comment",
        "connect": 10,
        "dns": 20,
        "receive": 30,
        "send": "40",
        " changed send to string so that it violates the schema type: number": "ssl",
        "ssl is missing to check required fields": "wait",
        "wait is missing to check required fields": "newKey",
        "Adding a newKey to see how schema handles extra fields": "newKey",
        " duplicate key to see how schema handles duplicate keys": [],
        " added invalid json object value to check if it can parse": "comment",
        " duplicate keys in JSON to check if it can parse": "hello world"
      }
    }
  ]
}