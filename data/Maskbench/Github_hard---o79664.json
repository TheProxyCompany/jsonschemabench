{
  "description": "sample Github_hard/o79664.json",
  "meta": {
    "full_size": 1792,
    "stripped_size": 1753,
    "features": [
      "$ref",
      "@minmaxInteger",
      "enum",
      "items"
    ],
    "raw_features": [
      "$schema",
      "definitions",
      "minimum",
      "properties",
      "required",
      "type",
      "type:array",
      "type:boolean",
      "type:integer",
      "type:null",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "definitions": {
      "cursor": {
        "type": "object",
        "properties": {
          "row": {
            "type": "integer",
            "minimum": 1
          },
          "col": {
            "type": "integer",
            "minimum": 1
          }
        },
        "required": [
          "row",
          "col"
        ]
      },
      "range": {
        "type": "object",
        "properties": {
          "start": {
            "$ref": "#/definitions/cursor"
          },
          "end": {
            "$ref": "#/definitions/cursor"
          }
        },
        "required": [
          "start",
          "end"
        ]
      },
      "token": {
        "type": "object",
        "properties": {
          "lexeme": {
            "type": "string"
          },
          "row": {
            "type": "integer",
            "minimum": 0
          },
          "col": {
            "type": "integer",
            "minimum": 0
          },
          "tokenClass": {
            "type": "string"
          },
          "parent": {
            "type": "null"
          },
          "children": {
            "type": "null"
          },
          "keyword": {
            "type": "boolean"
          }
        },
        "required": [
          "lexeme",
          "row",
          "col",
          "tokenClass",
          "parent",
          "children"
        ]
      },
      "name": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "token": {
            "$ref": "#/definitions/token"
          },
          "name_type": {
            "type": "string",
            "enum": [
              "label",
              "variable",
              "function",
              "typedef",
              "enum_const",
              "member"
            ]
          },
          "variable_type": {
            "type": "string"
          },
          "parameter": {
            "type": "boolean"
          },
          "function_type": {
            "type": "string",
            "enum": [
              "regular",
              "inline"
            ]
          },
          "function_return_type": {
            "type": "string"
          },
          "member_type": {
            "type": "string"
          }
        },
        "require": [
          "name",
          "token",
          "name_type"
        ]
      },
      "namespace": {
        "type": "object",
        "properties": {
          "labels": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/name"
            }
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "token": {
                  "$ref": "#/definitions/token"
                },
                "name_type": {
                  "type": "string",
                  "enum": [
                    "structure",
                    "union",
                    "enum"
                  ]
                },
                "members": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/name"
                  }
                }
              }
            }
          },
          "ordinary_ids": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/name"
            }
          }
        }
      }
    },
    "properties": {
      "scope_name": {
        "type": "string",
        "enum": [
          "file_scope",
          "function_scope",
          "block_scope"
        ]
      },
      "range": {
        "$ref": "#/definitions/range"
      },
      "scopes": {
        "type": "array",
        "items": {
          "$ref": "#"
        }
      },
      "namespace": {
        "$ref": "#/definitions/namespace"
      }
    }
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "scope_name": "file_scope",
        "range": {
          "start": {
            "row": 1,
            "col": 1
          },
          "end": {
            "row": 10,
            "col": 10
          }
        },
        "scopes": [
          {
            "scope_name": "function_scope",
            "range": {
              "start": {
                "row": 2,
                "col": 2
              },
              "end": {
                "row": 8,
                "col": 8
              }
            },
            "scopes": [],
            "namespace": {
              "labels": [
                {
                  "name": "label1",
                  "token": {
                    "lexeme": "label1",
                    "row": 3,
                    "col": 3,
                    "tokenClass": "identifier",
                    "parent": null,
                    "children": null,
                    "keyword": false
                  },
                  "name_type": "label",
                  "variable_type": "",
                  "parameter": false,
                  "function_type": "regular",
                  "function_return_type": "",
                  "member_type": ""
                }
              ],
              "tags": [
                {
                  "name": "struct1",
                  "token": {
                    "lexeme": "struct1",
                    "row": 4,
                    "col": 4,
                    "tokenClass": "identifier",
                    "parent": null,
                    "children": null,
                    "keyword": false
                  },
                  "name_type": "structure",
                  "members": [
                    {
                      "name": "member1",
                      "token": {
                        "lexeme": "member1",
                        "row": 5,
                        "col": 5,
                        "tokenClass": "identifier",
                        "parent": null,
                        "children": null,
                        "keyword": false
                      },
                      "name_type": "member",
                      "variable_type": "",
                      "parameter": false,
                      "function_type": "regular",
                      "function_return_type": "",
                      "member_type": "int"
                    }
                  ]
                }
              ],
              "ordinary_ids": [
                {
                  "name": "var1",
                  "token": {
                    "lexeme": "var1",
                    "row": 6,
                    "col": 6,
                    "tokenClass": "identifier",
                    "parent": null,
                    "children": null,
                    "keyword": false
                  },
                  "name_type": "variable",
                  "variable_type": "int",
                  "parameter": false,
                  "function_type": "regular",
                  "function_return_type": "",
                  "member_type": ""
                }
              ]
            }
          }
        ],
        "namespace": {
          "labels": [],
          "tags": [],
          "ordinary_ids": []
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on minimum keyword",
      "valid": false,
      "rust_error": "0 is less than the minimum of 1",
      "python_error": "0 is less than the minimum of 1\n\nFailed validating 'minimum' in schema['properties']['range']['properties']['start']['properties']['row']:\n    {'type': 'integer', 'minimum': 1}\n\nOn instance['range']['start']['row']:\n    0",
      "data": {
        "scope_name": "file_scope",
        "range": {
          "start": {
            "row": 0,
            "col": 1
          },
          "end": {
            "row": 10,
            "col": 10
          }
        },
        "scopes": [
          {
            "scope_name": "function_scope",
            "range": {
              "start": {
                "row": 2,
                "col": 2
              },
              "end": {
                "row": 8,
                "col": 8
              }
            },
            "scopes": [],
            "namespace": {
              "labels": [
                {
                  "name": "label1",
                  "token": {
                    "lexeme": "label1",
                    "row": 3,
                    "col": 3,
                    "tokenClass": "identifier",
                    "parent": null,
                    "children": null,
                    "keyword": false
                  },
                  "name_type": "label",
                  "variable_type": "",
                  "parameter": false,
                  "function_type": "regular",
                  "function_return_type": "",
                  "member_type": ""
                }
              ],
              "tags": [
                {
                  "name": "struct1",
                  "token": {
                    "lexeme": "struct1",
                    "row": 4,
                    "col": 4,
                    "tokenClass": "identifier",
                    "parent": null,
                    "children": null,
                    "keyword": false
                  },
                  "name_type": "structure",
                  "members": [
                    {
                      "name": "member1",
                      "token": {
                        "lexeme": "member1",
                        "row": 5,
                        "col": 5,
                        "tokenClass": "identifier",
                        "parent": null,
                        "children": null,
                        "keyword": false
                      },
                      "name_type": "member",
                      "variable_type": "",
                      "parameter": false,
                      "function_type": "regular",
                      "function_return_type": "",
                      "member_type": "int"
                    }
                  ]
                }
              ],
              "ordinary_ids": [
                {
                  "name": "var1",
                  "token": {
                    "lexeme": "var1",
                    "row": 6,
                    "col": 6,
                    "tokenClass": "identifier",
                    "parent": null,
                    "children": null,
                    "keyword": false
                  },
                  "name_type": "variable",
                  "variable_type": "int",
                  "parameter": false,
                  "function_type": "regular",
                  "function_return_type": "",
                  "member_type": ""
                }
              ]
            }
          }
        ],
        "namespace": {
          "labels": [],
          "tags": [],
          "ordinary_ids": []
        }
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"invalid_type\" is not one of [\"label\",\"variable\",\"function\",\"typedef\",\"enum_const\",\"member\"]",
      "python_error": "'invalid_type' is not one of ['label', 'variable', 'function', 'typedef', 'enum_const', 'member']\n\nFailed validating 'enum' in schema['properties']['scopes']['items']['properties']['namespace']['properties']['labels']['items']['properties']['name_type']:\n    {'type': 'string',\n     'enum': ['label',\n              'variable',\n              'function',\n              'typedef',\n              'enum_const',\n              'member']}\n\nOn instance['scopes'][0]['namespace']['labels'][0]['name_type']:\n    'invalid_type'",
      "data": {
        "scope_name": "file_scope",
        "range": {
          "start": {
            "row": 1,
            "col": 1
          },
          "end": {
            "row": 10,
            "col": 10
          }
        },
        "scopes": [
          {
            "scope_name": "function_scope",
            "range": {
              "start": {
                "row": 2,
                "col": 2
              },
              "end": {
                "row": 8,
                "col": 8
              }
            },
            "scopes": [],
            "namespace": {
              "labels": [
                {
                  "name": "label1",
                  "token": {
                    "lexeme": "label1",
                    "row": 3,
                    "col": 3,
                    "tokenClass": "identifier",
                    "parent": null,
                    "children": null,
                    "keyword": false
                  },
                  "name_type": "invalid_type",
                  "variable_type": "",
                  "parameter": false,
                  "function_type": "regular",
                  "function_return_type": "",
                  "member_type": ""
                }
              ],
              "tags": [
                {
                  "name": "struct1",
                  "token": {
                    "lexeme": "struct1",
                    "row": 4,
                    "col": 4,
                    "tokenClass": "identifier",
                    "parent": null,
                    "children": null,
                    "keyword": false
                  },
                  "name_type": "structure",
                  "members": [
                    {
                      "name": "member1",
                      "token": {
                        "lexeme": "member1",
                        "row": 5,
                        "col": 5,
                        "tokenClass": "identifier",
                        "parent": null,
                        "children": null,
                        "keyword": false
                      },
                      "name_type": "member",
                      "variable_type": "",
                      "parameter": false,
                      "function_type": "regular",
                      "function_return_type": "",
                      "member_type": "int"
                    }
                  ]
                }
              ],
              "ordinary_ids": [
                {
                  "name": "var1",
                  "token": {
                    "lexeme": "var1",
                    "row": 6,
                    "col": 6,
                    "tokenClass": "identifier",
                    "parent": null,
                    "children": null,
                    "keyword": false
                  },
                  "name_type": "variable",
                  "variable_type": "int",
                  "parameter": false,
                  "function_type": "regular",
                  "function_return_type": "",
                  "member_type": ""
                }
              ]
            }
          }
        ],
        "namespace": {
          "labels": [],
          "tags": [],
          "ordinary_ids": []
        }
      }
    }
  ]
}