{
  "description": "sample Github_easy/o34362.json",
  "meta": {
    "full_size": 570,
    "stripped_size": 363,
    "features": [
      "additionalProperties",
      "pattern"
    ],
    "raw_features": [
      "$schema",
      "_boolSchema",
      "properties",
      "required",
      "type",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "Append to Stream",
    "type": "object",
    "required": [
      "messageId",
      "type",
      "jsonData"
    ],
    "properties": {
      "messageId": {
        "type": "string",
        "pattern": "^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12}$",
        "x-schema-form": {
          "key": "messageId",
          "type": "uuid"
        }
      },
      "type": {
        "type": "string"
      },
      "jsonData": {
        "type": "object",
        "x-schema-form": {
          "key": "jsonData",
          "type": "textarea",
          "rows": 30
        }
      },
      "jsonMetadata": {
        "type": "object",
        "x-schema-form": {
          "key": "jsonMetadata",
          "type": "textarea",
          "rows": 30
        }
      }
    },
    "additionalProperties": false
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "messageId": "123e4567-e89b-12d3-a456-426655440000",
        "type": "exampleType",
        "jsonData": {
          "key": "value",
          "anotherKey": "anotherValue"
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on pattern keyword",
      "valid": false,
      "rust_error": "\"Invalid-Message-Id\" does not match \"^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12}$\"",
      "python_error": "'Invalid-Message-Id' does not match '^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12}$'\n\nFailed validating 'pattern' in schema['properties']['messageId']:\n    {'type': 'string',\n     'pattern': '^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12}$',\n     'x-schema-form': {'key': 'messageId', 'type': 'uuid'}}\n\nOn instance['messageId']:\n    'Invalid-Message-Id'",
      "data": {
        "messageId": "Invalid-Message-Id",
        "type": "exampleType",
        "jsonData": {
          "key": "value",
          "anotherKey": "anotherValue"
        }
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"123e4567-e89b-12d3-a456-42665544000\" does not match \"^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12}$\"",
      "python_error": "Additional properties are not allowed ('extraKey' was unexpected)\n\nFailed validating 'additionalProperties' in schema:\n    {'$schema': 'http://json-schema.org/draft-07/schema#',\n     'title': 'Append to Stream',\n     'type': 'object',\n     'required': ['messageId', 'type', 'jsonData'],\n     'properties': {'messageId': {'type': 'string',\n                                  'pattern': '^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12}$',\n                                  'x-schema-form': {'key': 'messageId',\n                                                    'type': 'uuid'}},\n                    'type': {'type': 'string'},\n                    'jsonData': {'type': 'object',\n                                 'x-schema-form': {'key': 'jsonData',\n                                                   'type': 'textarea',\n                                                   'rows': 30}},\n                    'jsonMetadata': {'type': 'object',\n                                     'x-schema-form': {'k.. (396 more)",
      "data": {
        "messageId": "123e4567-e89b-12d3-a456-42665544000",
        "type": "exampleType",
        "jsonData": {
          "key": "value",
          "anotherKey": "anotherValue"
        },
        "extraKey": "extraValue"
      }
    },
    {
      "description": "llama-70b generated negative; focus on pattern keyword",
      "valid": false,
      "rust_error": "\"123e4567-e89b-12d3-a456-42665544000\" does not match \"^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12}$\"",
      "python_error": "'123e4567-e89b-12d3-a456-42665544000' does not match '^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12}$'\n\nFailed validating 'pattern' in schema['properties']['messageId']:\n    {'type': 'string',\n     'pattern': '^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12}$',\n     'x-schema-form': {'key': 'messageId', 'type': 'uuid'}}\n\nOn instance['messageId']:\n    '123e4567-e89b-12d3-a456-42665544000'",
      "data": {
        "messageId": "123e4567-e89b-12d3-a456-42665544000",
        "type": "exampleType",
        "jsonData": {
          "key": "value",
          "anotherKey": "anotherValue"
        }
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "messageId": "123e4567-e89b-12d3-a456-426655440000",
        "type": "example-type",
        "jsonData": {
          "key": "value",
          "anotherKey": "anotherValue"
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on pattern keyword",
      "valid": false,
      "rust_error": "\"Invalid-UUID\" does not match \"^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12}$\"",
      "python_error": "'Invalid-UUID' does not match '^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12}$'\n\nFailed validating 'pattern' in schema['properties']['messageId']:\n    {'type': 'string',\n     'pattern': '^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12}$',\n     'x-schema-form': {'key': 'messageId', 'type': 'uuid'}}\n\nOn instance['messageId']:\n    'Invalid-UUID'",
      "data": {
        "messageId": "Invalid-UUID",
        "type": "example-type",
        "jsonData": {
          "key": "value",
          "anotherKey": "anotherValue"
        }
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"123e4567-e89b-12d3-a456-42665544000\" does not match \"^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12}$\"",
      "python_error": "'123e4567-e89b-12d3-a456-42665544000' does not match '^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12}$'\n\nFailed validating 'pattern' in schema['properties']['messageId']:\n    {'type': 'string',\n     'pattern': '^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12}$',\n     'x-schema-form': {'key': 'messageId', 'type': 'uuid'}}\n\nOn instance['messageId']:\n    '123e4567-e89b-12d3-a456-42665544000'",
      "data": {
        "messageId": "123e4567-e89b-12d3-a456-42665544000",
        "type": "example-type",
        "jsonData": {
          "key": "value",
          "anotherKey": "anotherValue"
        }
      }
    }
  ]
}