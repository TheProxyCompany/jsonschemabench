{
  "description": "sample JsonSchemaStore/drupal-permissions.json",
  "meta": {
    "full_size": 1004,
    "stripped_size": 431,
    "features": [
      "additionalProperties",
      "additionalProperties:object",
      "items",
      "uniqueItems"
    ],
    "raw_features": [
      "$id",
      "$schema",
      "_boolSchema",
      "properties",
      "required",
      "type",
      "type:array",
      "type:boolean",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$id": "https://json.schemastore.org/drupal-permissions.json",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "additionalProperties": {
      "title": "Permission definition",
      "type": "object",
      "required": [
        "title"
      ],
      "properties": {
        "title": {
          "title": "The human-readable name of the permission",
          "type": "string"
        },
        "description": {
          "title": "A description of what the permission does",
          "type": "string"
        },
        "restrict access": {
          "title": "Restrict access to this permission to trusted users",
          "description": "This should be used for permissions that have inherent security risks across a variety of potential use cases (for example, the \"administer filters\" and \"bypass node access\" permissions provided by Drupal core).",
          "type": "boolean"
        }
      },
      "additionalProperties": false
    },
    "properties": {
      "permission_callbacks": {
        "title": "List of permission callbacks",
        "type": "array",
        "items": {
          "title": "A callback that return array of permissions",
          "type": "string"
        },
        "uniqueItems": true
      }
    },
    "title": "JSON schema for Drupal permissions file",
    "type": "object"
  },
  "tests": [
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "permission_callbacks": [
          "my_module_permissions"
        ],
        "administer content": {
          "title": "Administer content",
          "description": "Allows users to administer content on the site."
        },
        "access user profiles": {
          "title": "Access user profiles",
          "description": "Allows users to access other users' profiles.",
          "restrict access": true
        },
        "administer comments": {
          "title": "Administer comments",
          "description": "Allows users to administer comments on the site."
        }
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "permission_callbacks": [
          "my_module_permissions"
        ],
        "administer content": {
          "title": "Administer content",
          "description": "Allows users to administer content on the site."
        },
        "access content": {
          "title": "Access content",
          "description": "Allows users to access content on the site."
        },
        "bypass node access": {
          "title": "Bypass node access",
          "description": "Allows users to bypass node access restrictions.",
          "restrict access": true
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on additionalProperties keyword with an object schema",
      "valid": false,
      "rust_error": "Additional properties are not allowed ('extra' was unexpected)",
      "python_error": "Additional properties are not allowed ('extra' was unexpected)\n\nFailed validating 'additionalProperties' in schema['additionalProperties']:\n    {'title': 'Permission definition',\n     'type': 'object',\n     'required': ['title'],\n     'properties': {'title': {'title': 'The human-readable name of the '\n                                       'permission',\n                              'type': 'string'},\n                    'description': {'title': 'A description of what the '\n                                             'permission does',\n                                    'type': 'string'},\n                    'restrict access': {'title': 'Restrict access to this '\n                                                 'permission to trusted '\n                                                 'users',\n                                        'description': 'This should be '\n                                                       'used for '\n                                                       'permissions that '\n   .. (1208 more)",
      "data": {
        "permission_callbacks": [
          "my_module_permissions"
        ],
        "administer content": {
          "title": "Administer content",
          "description": "Allows users to administer content on the site.",
          "extra": "This field shouldn't be here."
        },
        "access content": {
          "title": "Access content",
          "description": "Allows users to access content on the site."
        },
        "bypass node access": {
          "title": "Bypass node access",
          "description": "Allows users to bypass node access restrictions.",
          "restrict access": true
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on uniqueItems keyword",
      "valid": false,
      "rust_error": "[\"my_module_permissions\",\"my_module_permissions\"] has non-unique elements",
      "python_error": "['my_module_permissions', 'my_module_permissions'] has non-unique elements\n\nFailed validating 'uniqueItems' in schema['properties']['permission_callbacks']:\n    {'title': 'List of permission callbacks',\n     'type': 'array',\n     'items': {'title': 'A callback that return array of permissions',\n               'type': 'string'},\n     'uniqueItems': True}\n\nOn instance['permission_callbacks']:\n    ['my_module_permissions', 'my_module_permissions']",
      "data": {
        "permission_callbacks": [
          "my_module_permissions",
          "my_module_permissions"
        ],
        "administer content": {
          "title": "Administer content",
          "description": "Allows users to administer content on the site."
        },
        "access content": {
          "title": "Access content",
          "description": "Allows users to access content on the site."
        },
        "bypass node access": {
          "title": "Bypass node access",
          "description": "Allows users to bypass node access restrictions.",
          "restrict access": true
        }
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "[\"my_module_permissions\",\"my_module_permissions\"] has non-unique elements",
      "python_error": "['my_module_permissions', 'my_module_permissions'] has non-unique elements\n\nFailed validating 'uniqueItems' in schema['properties']['permission_callbacks']:\n    {'title': 'List of permission callbacks',\n     'type': 'array',\n     'items': {'title': 'A callback that return array of permissions',\n               'type': 'string'},\n     'uniqueItems': True}\n\nOn instance['permission_callbacks']:\n    ['my_module_permissions', 'my_module_permissions']",
      "data": {
        "permission_callbacks": [
          "my_module_permissions",
          "my_module_permissions"
        ],
        "administer content": {
          "title": "Administer content",
          "description": "Allows users to administer content on the site.",
          "extra_property": "Invalid extra property"
        },
        "access content": {
          "title": "Access content",
          "description": null
        },
        "bypass node access": {
          "title": "Bypass node access",
          "description": "Allows users to bypass node access restrictions.",
          "restrict access": true
        }
      }
    }
  ]
}