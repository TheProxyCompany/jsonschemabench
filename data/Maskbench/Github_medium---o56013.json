{
  "description": "sample Github_medium/o56013.json",
  "meta": {
    "full_size": 1206,
    "stripped_size": 657,
    "features": [
      "@minmaxInteger",
      "@minmaxLength",
      "additionalProperties"
    ],
    "raw_features": [
      "$schema",
      "_boolSchema",
      "maxLength",
      "minimum",
      "properties",
      "required",
      "type",
      "type:integer",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "description": "Fibaro Home Center Room JSON Schema",
    "name": "room",
    "type": "object",
    "properties": {
      "id": {
        "description": "Identifier for the room",
        "type": "integer",
        "minimum": 0
      },
      "name": {
        "description": "Name for the room",
        "type": "string",
        "maxLength": 20
      },
      "sectionID": {
        "description": "Identifier for section room belongs to",
        "type": "integer",
        "minimum": 0
      },
      "icon": {
        "description": "Icon name defined",
        "type": "string",
        "maxLength": 20
      },
      "defaultSensors": {
        "description": "Room default sensors",
        "type": "object",
        "properties": {
          "temperature": {
            "description": "Default temperature sensor",
            "type": "integer",
            "minimum": 0
          },
          "humidity": {
            "description": "Default humidity sensor",
            "type": "integer",
            "minimum": 0
          },
          "light": {
            "description": "Default light sensor",
            "type": "integer",
            "minimum": 0
          }
        }
      },
      "defaultThermostat": {
        "description": "Default thermostat",
        "type": "integer",
        "minimum": 0
      },
      "created": {
        "description": "Room created timestamp",
        "type": "integer",
        "minimum": 0
      },
      "modified": {
        "description": "Room modified timestamp",
        "type": "integer",
        "minimum": 0
      },
      "sortOrder": {
        "description": "Sort order when displayed in GUI",
        "type": "integer",
        "minimum": 0
      }
    },
    "required": [
      "name",
      "sectionID"
    ],
    "additionalProperties": false
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "id": 1,
        "name": "Living Room",
        "sectionID": 1,
        "icon": "room",
        "defaultSensors": {
          "temperature": 10,
          "humidity": 20,
          "light": 30
        },
        "defaultThermostat": 40,
        "created": 1643723400,
        "modified": 1643723400,
        "sortOrder": 1
      }
    },
    {
      "description": "llama-70b generated negative; focus on maxLength keyword",
      "valid": false,
      "rust_error": "\"Living Room with a very long name that exceeds the maxLength limit\" is longer than 20 characters",
      "python_error": "'Living Room with a very long name that exceeds the maxLength limit' is too long\n\nFailed validating 'maxLength' in schema['properties']['name']:\n    {'description': 'Name for the room', 'type': 'string', 'maxLength': 20}\n\nOn instance['name']:\n    'Living Room with a very long name that exceeds the maxLength limit'",
      "data": {
        "id": 1,
        "name": "Living Room with a very long name that exceeds the maxLength limit",
        "sectionID": 1,
        "icon": "room",
        "defaultSensors": {
          "temperature": 10,
          "humidity": 20,
          "light": 30
        },
        "defaultThermostat": 40,
        "created": 1643723400,
        "modified": 1643723400,
        "sortOrder": 1
      }
    },
    {
      "description": "llama-70b generated negative; focus on minimum keyword",
      "valid": false,
      "rust_error": "-1 is less than the minimum of 0",
      "python_error": "-1 is less than the minimum of 0\n\nFailed validating 'minimum' in schema['properties']['sortOrder']:\n    {'description': 'Sort order when displayed in GUI',\n     'type': 'integer',\n     'minimum': 0}\n\nOn instance['sortOrder']:\n    -1",
      "data": {
        "id": -1,
        "name": "Living Room",
        "sectionID": 1,
        "icon": "room",
        "defaultSensors": {
          "temperature": -10,
          "humidity": 20,
          "light": 30
        },
        "defaultThermostat": -40,
        "created": -1643723400,
        "modified": 1643723400,
        "sortOrder": -1
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "Additional properties are not allowed ('extraProperty' was unexpected)",
      "python_error": "Additional properties are not allowed ('extraProperty' was unexpected)\n\nFailed validating 'additionalProperties' in schema:\n    {'$schema': 'http://json-schema.org/draft-04/schema#',\n     'description': 'Fibaro Home Center Room JSON Schema',\n     'name': 'room',\n     'type': 'object',\n     'properties': {'id': {'description': 'Identifier for the room',\n                           'type': 'integer',\n                           'minimum': 0},\n                    'name': {'description': 'Name for the room',\n                             'type': 'string',\n                             'maxLength': 20},\n                    'sectionID': {'description': 'Identifier for section '\n                                                 'room belongs to',\n                                  'type': 'integer',\n                                  'minimum': 0},\n                    'icon': {'description': 'Icon name defined',\n                             'type': 'string',\n                             'maxLength': 20},\n                  .. (2747 more)",
      "data": {
        "id": 1,
        "name": "Living Room",
        "sectionID": 1,
        "icon": "room",
        "defaultSensors": {
          "temperature": 10,
          "humidity": 20,
          "light": 30
        },
        "defaultThermostat": 40,
        "created": 1643723400,
        "modified": 1643723400,
        "sortOrder": 1,
        "extraProperty": "Invalid"
      }
    },
    {
      "description": "llama-70b generated negative; focus on minimum keyword",
      "valid": false,
      "rust_error": "-1 is less than the minimum of 0",
      "python_error": "-1 is less than the minimum of 0\n\nFailed validating 'minimum' in schema['properties']['id']:\n    {'description': 'Identifier for the room',\n     'type': 'integer',\n     'minimum': 0}\n\nOn instance['id']:\n    -1",
      "data": {
        "id": -1,
        "name": "Living Room",
        "sectionID": 1,
        "icon": "room",
        "defaultSensors": {
          "temperature": 10,
          "humidity": 20,
          "light": 30
        },
        "defaultThermostat": 40,
        "created": 1643723400,
        "modified": 1643723400,
        "sortOrder": 1
      }
    },
    {
      "description": "llama-70b generated negative; focus on maxLength keyword",
      "valid": false,
      "rust_error": "\"Living Room with a very long name that exceeds the maxLength constraint\" is longer than 20 characters",
      "python_error": "'Living Room with a very long name that exceeds the maxLength constraint' is too long\n\nFailed validating 'maxLength' in schema['properties']['name']:\n    {'description': 'Name for the room', 'type': 'string', 'maxLength': 20}\n\nOn instance['name']:\n    ('Living Room with a very long name that exceeds the maxLength '\n     'constraint')",
      "data": {
        "id": 1,
        "name": "Living Room with a very long name that exceeds the maxLength constraint",
        "sectionID": 1,
        "icon": "room",
        "defaultSensors": {
          "temperature": 10,
          "humidity": 20,
          "light": 30
        },
        "defaultThermostat": 40,
        "created": 1643723400,
        "modified": 1643723400,
        "sortOrder": 1
      }
    },
    {
      "description": "llama-70b generated negative; focus on maxLength keyword",
      "valid": false,
      "rust_error": "\"Living Room Very Long Name That Should Fail Validation\" is longer than 20 characters",
      "python_error": "'Living Room Very Long Name That Should Fail Validation' is too long\n\nFailed validating 'maxLength' in schema['properties']['name']:\n    {'description': 'Name for the room', 'type': 'string', 'maxLength': 20}\n\nOn instance['name']:\n    'Living Room Very Long Name That Should Fail Validation'",
      "data": {
        "id": 1,
        "name": "Living Room Very Long Name That Should Fail Validation",
        "sectionID": 1,
        "icon": "room",
        "defaultSensors": {
          "temperature": 10,
          "humidity": 20,
          "light": 30
        },
        "defaultThermostat": 40,
        "created": 1643723400,
        "modified": 1643723400,
        "sortOrder": 1
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "id": 1,
        "name": "Living Room",
        "sectionID": 1,
        "icon": "room",
        "defaultSensors": {
          "temperature": 1,
          "humidity": 2,
          "light": 3
        },
        "defaultThermostat": 1,
        "created": 1643723400,
        "modified": 1643723400,
        "sortOrder": 1
      }
    },
    {
      "description": "llama-70b generated negative; focus on minimum keyword",
      "valid": false,
      "rust_error": "-1 is less than the minimum of 0",
      "python_error": "-1 is less than the minimum of 0\n\nFailed validating 'minimum' in schema['properties']['id']:\n    {'description': 'Identifier for the room',\n     'type': 'integer',\n     'minimum': 0}\n\nOn instance['id']:\n    -1",
      "data": {
        "id": -1,
        "name": "Living Room",
        "sectionID": 1,
        "icon": "room",
        "defaultSensors": {
          "temperature": 1,
          "humidity": 2,
          "light": 3
        },
        "defaultThermostat": 1,
        "created": 1643723400,
        "modified": 1643723400,
        "sortOrder": 1
      }
    },
    {
      "description": "llama-70b generated negative; focus on maxLength keyword",
      "valid": false,
      "rust_error": "\"Living Room this name is way too long and should cause issues if maxLength is not implemented in the schema validator\" is longer than 20 characters",
      "python_error": "'Living Room this name is way too long and should cause issues if maxLength is not implemented in the schema validator' is too long\n\nFailed validating 'maxLength' in schema['properties']['name']:\n    {'description': 'Name for the room', 'type': 'string', 'maxLength': 20}\n\nOn instance['name']:\n    ('Living Room this name is way too long and should cause issues if '\n     'maxLength is not implemented in the schema validator')",
      "data": {
        "id": 1,
        "name": "Living Room this name is way too long and should cause issues if maxLength is not implemented in the schema validator",
        "sectionID": 1,
        "icon": "room",
        "defaultSensors": {
          "temperature": 1,
          "humidity": 2,
          "light": 3
        },
        "defaultThermostat": 1,
        "created": 1643723400,
        "modified": 1643723400,
        "sortOrder": 1
      }
    }
  ]
}