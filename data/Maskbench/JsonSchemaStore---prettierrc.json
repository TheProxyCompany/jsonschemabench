{
  "description": "sample JsonSchemaStore/prettierrc.json",
  "meta": {
    "full_size": 7632,
    "stripped_size": 2536,
    "features": [
      "$ref",
      "@siblingKeys",
      "additionalProperties",
      "allOf",
      "anyOf",
      "enum",
      "items",
      "oneOf"
    ],
    "raw_features": [
      "$schema",
      "_boolSchema",
      "definitions",
      "id",
      "properties",
      "required",
      "type",
      "type:array",
      "type:boolean",
      "type:integer",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "definitions": {
      "optionsDefinition": {
        "type": "object",
        "properties": {
          "arrowParens": {
            "description": "Include parentheses around a sole arrow function parameter.",
            "default": "always",
            "oneOf": [
              {
                "enum": [
                  "always"
                ],
                "description": "Always include parens. Example: `(x) => x`"
              },
              {
                "enum": [
                  "avoid"
                ],
                "description": "Omit parens when possible. Example: `x => x`"
              }
            ]
          },
          "bracketSameLine": {
            "description": "Put > of opening tags on the last line instead of on a new line.",
            "default": false,
            "type": "boolean"
          },
          "bracketSpacing": {
            "description": "Print spaces between brackets.",
            "default": true,
            "type": "boolean"
          },
          "cursorOffset": {
            "description": "Print (to stderr) where a cursor at the given position would move to after formatting.\nThis option cannot be used with --range-start and --range-end.",
            "default": -1,
            "type": "integer"
          },
          "editorconfig": {
            "description": "Whether parse the .editorconfig file in your project and convert its properties to the corresponding Prettier configuration. This configuration will be overridden by .prettierrc, etc.",
            "default": false,
            "type": "boolean"
          },
          "embeddedLanguageFormatting": {
            "description": "Control how Prettier formats quoted code embedded in the file.",
            "default": "auto",
            "oneOf": [
              {
                "enum": [
                  "auto"
                ],
                "description": "Format embedded code if Prettier can automatically identify it."
              },
              {
                "enum": [
                  "off"
                ],
                "description": "Never automatically format embedded code."
              }
            ]
          },
          "endOfLine": {
            "description": "Which end of line characters to apply.",
            "default": "lf",
            "oneOf": [
              {
                "enum": [
                  "lf"
                ],
                "description": "Line Feed only (\\n), common on Linux and macOS as well as inside git repos"
              },
              {
                "enum": [
                  "crlf"
                ],
                "description": "Carriage Return + Line Feed characters (\\r\\n), common on Windows"
              },
              {
                "enum": [
                  "cr"
                ],
                "description": "Carriage Return character only (\\r), used very rarely"
              },
              {
                "enum": [
                  "auto"
                ],
                "description": "Maintain existing\n(mixed values within one file are normalised by looking at what's used after the first line)"
              }
            ]
          },
          "filepath": {
            "description": "Specify the input filepath. This will be used to do parser inference.",
            "type": "string"
          },
          "htmlWhitespaceSensitivity": {
            "description": "How to handle whitespaces in HTML.",
            "default": "css",
            "oneOf": [
              {
                "enum": [
                  "css"
                ],
                "description": "Respect the default value of CSS display property."
              },
              {
                "enum": [
                  "strict"
                ],
                "description": "Whitespaces are considered sensitive."
              },
              {
                "enum": [
                  "ignore"
                ],
                "description": "Whitespaces are considered insensitive."
              }
            ]
          },
          "insertPragma": {
            "description": "Insert @format pragma into file's first docblock comment.",
            "default": false,
            "type": "boolean"
          },
          "jsxSingleQuote": {
            "description": "Use single quotes in JSX.",
            "default": false,
            "type": "boolean"
          },
          "parser": {
            "description": "Which parser to use.",
            "anyOf": [
              {
                "enum": [
                  "flow"
                ],
                "description": "Flow"
              },
              {
                "enum": [
                  "babel"
                ],
                "description": "JavaScript"
              },
              {
                "enum": [
                  "babel-flow"
                ],
                "description": "Flow"
              },
              {
                "enum": [
                  "babel-ts"
                ],
                "description": "TypeScript"
              },
              {
                "enum": [
                  "typescript"
                ],
                "description": "TypeScript"
              },
              {
                "enum": [
                  "acorn"
                ],
                "description": "JavaScript"
              },
              {
                "enum": [
                  "espree"
                ],
                "description": "JavaScript"
              },
              {
                "enum": [
                  "meriyah"
                ],
                "description": "JavaScript"
              },
              {
                "enum": [
                  "css"
                ],
                "description": "CSS"
              },
              {
                "enum": [
                  "less"
                ],
                "description": "Less"
              },
              {
                "enum": [
                  "scss"
                ],
                "description": "SCSS"
              },
              {
                "enum": [
                  "json"
                ],
                "description": "JSON"
              },
              {
                "enum": [
                  "json5"
                ],
                "description": "JSON5"
              },
              {
                "enum": [
                  "json-stringify"
                ],
                "description": "JSON.stringify"
              },
              {
                "enum": [
                  "graphql"
                ],
                "description": "GraphQL"
              },
              {
                "enum": [
                  "markdown"
                ],
                "description": "Markdown"
              },
              {
                "enum": [
                  "mdx"
                ],
                "description": "MDX"
              },
              {
                "enum": [
                  "vue"
                ],
                "description": "Vue"
              },
              {
                "enum": [
                  "yaml"
                ],
                "description": "YAML"
              },
              {
                "enum": [
                  "glimmer"
                ],
                "description": "Ember / Handlebars"
              },
              {
                "enum": [
                  "html"
                ],
                "description": "HTML"
              },
              {
                "enum": [
                  "angular"
                ],
                "description": "Angular"
              },
              {
                "enum": [
                  "lwc"
                ],
                "description": "Lightning Web Components"
              },
              {
                "type": "string",
                "description": "Custom parser"
              }
            ]
          },
          "pluginSearchDirs": {
            "description": "Custom directory that contains prettier plugins in node_modules subdirectory.\nOverrides default behavior when plugins are searched relatively to the location of Prettier.\nMultiple values are accepted.",
            "default": [],
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              {
                "enum": [
                  false
                ],
                "description": "Disable plugin autoloading."
              }
            ]
          },
          "plugins": {
            "description": "Add a plugin. Multiple plugins can be passed as separate `--plugin`s.",
            "default": [],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "printWidth": {
            "description": "The line length where Prettier will try wrap.",
            "default": 80,
            "type": "integer"
          },
          "proseWrap": {
            "description": "How to wrap prose.",
            "default": "preserve",
            "oneOf": [
              {
                "enum": [
                  "always"
                ],
                "description": "Wrap prose if it exceeds the print width."
              },
              {
                "enum": [
                  "never"
                ],
                "description": "Do not wrap prose."
              },
              {
                "enum": [
                  "preserve"
                ],
                "description": "Wrap prose as-is."
              }
            ]
          },
          "quoteProps": {
            "description": "Change when properties in objects are quoted.",
            "default": "as-needed",
            "oneOf": [
              {
                "enum": [
                  "as-needed"
                ],
                "description": "Only add quotes around object properties where required."
              },
              {
                "enum": [
                  "consistent"
                ],
                "description": "If at least one property in an object requires quotes, quote all properties."
              },
              {
                "enum": [
                  "preserve"
                ],
                "description": "Respect the input use of quotes in object properties."
              }
            ]
          },
          "rangeEnd": {
            "description": "Format code ending at a given character offset (exclusive).\nThe range will extend forwards to the end of the selected statement.\nThis option cannot be used with --cursor-offset.",
            "default": null,
            "type": "integer"
          },
          "rangeStart": {
            "description": "Format code starting at a given character offset.\nThe range will extend backwards to the start of the first line containing the selected statement.\nThis option cannot be used with --cursor-offset.",
            "default": 0,
            "type": "integer"
          },
          "requirePragma": {
            "description": "Require either '@prettier' or '@format' to be present in the file's first docblock comment\nin order for it to be formatted.",
            "default": false,
            "type": "boolean"
          },
          "semi": {
            "description": "Print semicolons.",
            "default": true,
            "type": "boolean"
          },
          "singleAttributePerLine": {
            "description": "Enforce single attribute per line in HTML, Vue and JSX.",
            "default": false,
            "type": "boolean"
          },
          "singleQuote": {
            "description": "Use single quotes instead of double quotes.",
            "default": false,
            "type": "boolean"
          },
          "tabWidth": {
            "description": "Number of spaces per indentation level.",
            "default": 2,
            "type": "integer"
          },
          "trailingComma": {
            "description": "Print trailing commas wherever possible when multi-line.",
            "default": "es5",
            "oneOf": [
              {
                "enum": [
                  "es5"
                ],
                "description": "Trailing commas where valid in ES5 (objects, arrays, etc.)"
              },
              {
                "enum": [
                  "none"
                ],
                "description": "No trailing commas."
              },
              {
                "enum": [
                  "all"
                ],
                "description": "Trailing commas wherever possible (including function arguments)."
              }
            ]
          },
          "useTabs": {
            "description": "Indent with tabs instead of spaces.",
            "default": false,
            "type": "boolean"
          },
          "vueIndentScriptAndStyle": {
            "description": "Indent script and style tags in Vue files.",
            "default": false,
            "type": "boolean"
          }
        }
      },
      "overridesDefinition": {
        "type": "object",
        "properties": {
          "overrides": {
            "type": "array",
            "description": "Provide a list of patterns to override prettier configuration.",
            "items": {
              "type": "object",
              "required": [
                "files"
              ],
              "properties": {
                "files": {
                  "description": "Include these files in this override.",
                  "oneOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  ]
                },
                "excludeFiles": {
                  "description": "Exclude these files from this override.",
                  "oneOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  ]
                },
                "options": {
                  "type": "object",
                  "description": "The options to apply for this override.",
                  "$ref": "#/definitions/optionsDefinition"
                }
              },
              "additionalProperties": false
            }
          }
        }
      }
    },
    "id": "https://json.schemastore.org/prettierrc.json",
    "oneOf": [
      {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/definitions/optionsDefinition"
          },
          {
            "$ref": "#/definitions/overridesDefinition"
          }
        ]
      },
      {
        "type": "string"
      }
    ],
    "title": "Schema for .prettierrc"
  },
  "tests": [
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "arrowParens": "always",
        "bracketSpacing": true,
        "endOfLine": "lf",
        "htmlWhitespaceSensitivity": "css",
        "printWidth": 80,
        "proseWrap": "preserve",
        "semi": true,
        "singleQuote": false,
        "tabWidth": 2,
        "trailingComma": "es5",
        "useTabs": false,
        "overrides": [
          {
            "files": "*.js",
            "options": {
              "parser": "babel"
            }
          },
          {
            "files": "*.json",
            "options": {
              "parser": "json"
            }
          },
          {
            "files": "*.css",
            "options": {
              "parser": "css"
            }
          }
        ]
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "arrowParens": "always",
        "bracketSameLine": true,
        "bracketSpacing": true,
        "cursorOffset": -1,
        "editorconfig": true,
        "embeddedLanguageFormatting": "auto",
        "endOfLine": "lf",
        "filepath": "path/to/file.js",
        "htmlWhitespaceSensitivity": "css",
        "insertPragma": true,
        "jsxSingleQuote": true,
        "parser": "babel",
        "pluginSearchDirs": [
          "path/to/plugin/dir"
        ],
        "plugins": [
          "plugin1",
          "plugin2"
        ],
        "printWidth": 120,
        "proseWrap": "preserve",
        "quoteProps": "as-needed",
        "rangeEnd": 100,
        "rangeStart": 50,
        "requirePragma": true,
        "semi": true,
        "singleAttributePerLine": true,
        "singleQuote": true,
        "tabWidth": 4,
        "trailingComma": "es5",
        "useTabs": true,
        "vueIndentScriptAndStyle": true,
        "overrides": [
          {
            "files": "*.js",
            "options": {
              "printWidth": 100,
              "tabWidth": 2
            }
          },
          {
            "files": "*.jsx",
            "options": {
              "jsxSingleQuote": true,
              "singleQuote": true
            }
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on allOf keyword",
      "valid": false,
      "rust_error": "{\"arrowParens\":\"always\",\"overrides\":{\"files\":\"file.js\"}} is not valid under any of the schemas listed in the 'oneOf' keyword",
      "python_error": "{'files': 'file.js'} is not of type 'array'\n\nFailed validating 'type' in schema[0]['allOf'][1]['properties']['overrides']:\n    {'type': 'array',\n     'description': 'Provide a list of patterns to override prettier '\n                    'configuration.',\n     'items': {'type': 'object',\n               'required': ['files'],\n               'properties': {'files': {'description': 'Include these '\n                                                       'files in this '\n                                                       'override.',\n                                        'oneOf': [{'type': 'string'},\n                                                  {'type': 'array',\n                                                   'items': {'type': 'string'}}]},\n                              'excludeFiles': {'description': 'Exclude '\n                                                              'these files '\n                                                              'from this '\n                                         .. (741 more)",
      "data": {
        "arrowParens": "always",
        "overrides": {
          "files": "file.js"
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on anyOf keyword",
      "valid": false,
      "rust_error": "{\"arrowParens\":\"always\",\"bracketSameLine\":true,\"bracketSpacing\":true,\"cursorOffset\":-1,\"editorconfig\":true,\"embeddedLanguageFormatting\":\"auto\",\"endOfLine\":\"lf\",\"filepath\":\"path/to/file.js\",\"htmlWhitespaceSensitivity\":\"css\",\"insertPragma\":true,\"jsxSingleQuote\":true,\"parser\":\"babel\",\"pluginSearchDirs\":[\"path/to/plugin/dir\"],\"plugins\":[\"plugin1\",\"plugin2\"],\"printWidth\":120,\"proseWrap\":\"preserve\",\"quoteProps\":\"as-needed\",\"rangeEnd\":100,\"rangeStart\":50,\"requirePragma\":true,\"semi\":true,\"singleAttributePerLine\":true,\"singleQuote\":true,\"tabWidth\":4,\"trailingComma\":\"es5\",\"useTabs\":true,\"vueIndentScriptAndStyle\":true,\"overrides\":[{\"files\":\"*.js\",\"options\":{\"printWidth\":\"large\",\"tabWidth\":2}},{\"files\":\"*.jsx\",\"options\":{\"jsxSingleQuote\":true,\"singleQuote\":true}}]} is not valid under any of the schemas listed in the 'oneOf' keyword",
      "python_error": "'large' is not of type 'integer'\n\nFailed validating 'type' in schema[0]['allOf'][1]['properties']['overrides']['items']['properties']['options']['properties']['printWidth']:\n    {'description': 'The line length where Prettier will try wrap.',\n     'default': 80,\n     'type': 'integer'}\n\nOn instance['overrides'][0]['options']['printWidth']:\n    'large'",
      "data": {
        "arrowParens": "always",
        "bracketSameLine": true,
        "bracketSpacing": true,
        "cursorOffset": -1,
        "editorconfig": true,
        "embeddedLanguageFormatting": "auto",
        "endOfLine": "lf",
        "filepath": "path/to/file.js",
        "htmlWhitespaceSensitivity": "css",
        "insertPragma": true,
        "jsxSingleQuote": true,
        "parser": "babel",
        "pluginSearchDirs": [
          "path/to/plugin/dir"
        ],
        "plugins": [
          "plugin1",
          "plugin2"
        ],
        "printWidth": 120,
        "proseWrap": "preserve",
        "quoteProps": "as-needed",
        "rangeEnd": 100,
        "rangeStart": 50,
        "requirePragma": true,
        "semi": true,
        "singleAttributePerLine": true,
        "singleQuote": true,
        "tabWidth": 4,
        "trailingComma": "es5",
        "useTabs": true,
        "vueIndentScriptAndStyle": true,
        "overrides": [
          {
            "files": "*.js",
            "options": {
              "printWidth": "large",
              "tabWidth": 2
            }
          },
          {
            "files": "*.jsx",
            "options": {
              "jsxSingleQuote": true,
              "singleQuote": true
            }
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on oneOf keyword",
      "valid": false,
      "rust_error": "{\"arrowParens\":\"always\",\"bracketSameLine\":true,\"bracketSpacing\":true,\"cursorOffset\":-1,\"editorconfig\":true,\"embeddedLanguageFormatting\":\"auto\",\"endOfLine\":\"lf\",\"filepath\":\"path/to/file.js\",\"htmlWhitespaceSensitivity\":\"css\",\"insertPragma\":true,\"jsxSingleQuote\":true,\"parser\":\"babel\",\"pluginSearchDirs\":[\"path/to/plugin/dir\"],\"plugins\":[\"plugin1\",\"plugin2\"],\"printWidth\":120,\"proseWrap\":\"preserve\",\"quoteProps\":\"as-needed\",\"rangeEnd\":100,\"rangeStart\":50,\"requirePragma\":true,\"semi\":true,\"singleAttributePerLine\":true,\"singleQuote\":true,\"tabWidth\":4,\"trailingComma\":\"es5\",\"useTabs\":true,\"vueIndentScriptAndStyle\":true,\"overrides\":[{\"files\":\"*.js\",\"options\":{\"printWidth\":\"abc\",\"Invalid type\":\"invalidOption\",\"Invalid option\":\"tabWidth\",\"abc\":\"Invalid type\"}},{\"files\":\"*.jsx\",\"options\":{\"jsxSingleQuote\":\"always\",\"singleQuote\":true,\"endOfLine\":\"linux\",\"Invalid enum value\":\"invalidOption\",\"abc\":\"Invalid option\"}}]} is not valid under any of the schemas listed in the 'oneOf' keyword",
      "python_error": "'abc' is not of type 'integer'\n\nFailed validating 'type' in schema[0]['allOf'][1]['properties']['overrides']['items']['properties']['options']['properties']['printWidth']:\n    {'description': 'The line length where Prettier will try wrap.',\n     'default': 80,\n     'type': 'integer'}\n\nOn instance['overrides'][0]['options']['printWidth']:\n    'abc'",
      "data": {
        "arrowParens": "always",
        "bracketSameLine": true,
        "bracketSpacing": true,
        "cursorOffset": -1,
        "editorconfig": true,
        "embeddedLanguageFormatting": "auto",
        "endOfLine": "lf",
        "filepath": "path/to/file.js",
        "htmlWhitespaceSensitivity": "css",
        "insertPragma": true,
        "jsxSingleQuote": true,
        "parser": "babel",
        "pluginSearchDirs": [
          "path/to/plugin/dir"
        ],
        "plugins": [
          "plugin1",
          "plugin2"
        ],
        "printWidth": 120,
        "proseWrap": "preserve",
        "quoteProps": "as-needed",
        "rangeEnd": 100,
        "rangeStart": 50,
        "requirePragma": true,
        "semi": true,
        "singleAttributePerLine": true,
        "singleQuote": true,
        "tabWidth": 4,
        "trailingComma": "es5",
        "useTabs": true,
        "vueIndentScriptAndStyle": true,
        "overrides": [
          {
            "files": "*.js",
            "options": {
              "printWidth": "abc",
              "Invalid type": "invalidOption",
              "Invalid option": "tabWidth",
              "abc": "Invalid type"
            }
          },
          {
            "files": "*.jsx",
            "options": {
              "jsxSingleQuote": "always",
              "singleQuote": true,
              "endOfLine": "linux",
              "Invalid enum value": "invalidOption",
              "abc": "Invalid option"
            }
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "{\"arrowParens\":\"always\",\"bracketSameLine\":true,\"bracketSpacing\":true,\"cursorOffset\":-1,\"editorconfig\":true,\"embeddedLanguageFormatting\":\"auto\",\"endOfLine\":\"lf\",\"filepath\":\"path/to/file.js\",\"htmlWhitespaceSensitivity\":\"css\",\"insertPragma\":true,\"jsxSingleQuote\":true,\"parser\":\"babel\",\"pluginSearchDirs\":[\"path/to/plugin/dir\"],\"plugins\":[123,\"plugin2\"],\"printWidth\":120,\"proseWrap\":\"preserve\",\"quoteProps\":\"as-needed\",\"rangeEnd\":100,\"rangeStart\":50,\"requirePragma\":true,\"semi\":true,\"singleAttributePerLine\":true,\"singleQuote\":true,\"tabWidth\":4,\"trailingComma\":\"es5\",\"useTabs\":true,\"vueIndentScriptAndStyle\":true,\"overrides\":[{\"files\":\"*.js\",\"options\":{\"printWidth\":100,\"tabWidth\":\"invalid\"}},{\"files\":\"*.jsx\",\"options\":{\"jsxSingleQuote\":true,\"singleQuote\":true}}]} is not valid under any of the schemas listed in the 'oneOf' keyword",
      "python_error": "'invalid' is not of type 'integer'\n\nFailed validating 'type' in schema[0]['allOf'][1]['properties']['overrides']['items']['properties']['options']['properties']['tabWidth']:\n    {'description': 'Number of spaces per indentation level.',\n     'default': 2,\n     'type': 'integer'}\n\nOn instance['overrides'][0]['options']['tabWidth']:\n    'invalid'",
      "data": {
        "arrowParens": "always",
        "bracketSameLine": true,
        "bracketSpacing": true,
        "cursorOffset": -1,
        "editorconfig": true,
        "embeddedLanguageFormatting": "auto",
        "endOfLine": "lf",
        "filepath": "path/to/file.js",
        "htmlWhitespaceSensitivity": "css",
        "insertPragma": true,
        "jsxSingleQuote": true,
        "parser": "babel",
        "pluginSearchDirs": [
          "path/to/plugin/dir"
        ],
        "plugins": [
          123,
          "plugin2"
        ],
        "printWidth": 120,
        "proseWrap": "preserve",
        "quoteProps": "as-needed",
        "rangeEnd": 100,
        "rangeStart": 50,
        "requirePragma": true,
        "semi": true,
        "singleAttributePerLine": true,
        "singleQuote": true,
        "tabWidth": 4,
        "trailingComma": "es5",
        "useTabs": true,
        "vueIndentScriptAndStyle": true,
        "overrides": [
          {
            "files": "*.js",
            "options": {
              "printWidth": 100,
              "tabWidth": "invalid"
            }
          },
          {
            "files": "*.jsx",
            "options": {
              "jsxSingleQuote": true,
              "singleQuote": true
            }
          }
        ]
      }
    }
  ]
}