{
  "description": "sample Github_hard/o76577.json",
  "meta": {
    "full_size": 3983,
    "stripped_size": 3983,
    "features": [
      "$ref",
      "@minmaxInteger",
      "@minmaxItems",
      "@minmaxLength",
      "additionalProperties",
      "anyOf",
      "enum",
      "format",
      "format:ipv4",
      "format:ipv6",
      "items",
      "oneOf",
      "patternProperties"
    ],
    "raw_features": [
      "_boolSchema",
      "definitions",
      "maximum",
      "minItems",
      "minLength",
      "minimum",
      "properties",
      "required",
      "type",
      "type:array",
      "type:integer",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "additionalProperties": false,
    "definitions": {
      "backendType": {
        "additionalProperties": false,
        "properties": {
          "healthMonitors": {
            "items": {
              "$ref": "#/definitions/healthMonitorType"
            },
            "type": "array"
          },
          "serviceName": {
            "minLength": 1,
            "type": "string"
          },
          "servicePort": {
            "$ref": "#/definitions/portType"
          }
        },
        "required": [
          "serviceName",
          "servicePort"
        ],
        "type": "object"
      },
      "frontendIAppType": {
        "additionalProperties": false,
        "properties": {
          "iapp": {
            "minLength": 1,
            "type": "string"
          },
          "iappOptions": {
            "additionalProperties": false,
            "patternProperties": {
              "^[a-zA-Z0-9_-]+$": {
                "minLength": 1,
                "type": "string"
              }
            },
            "type": "object"
          },
          "iappPoolMemberTable": {
            "additionalProperties": false,
            "properties": {
              "columns": {
                "items": {
                  "oneOf": [
                    {
                      "$ref": "#/definitions/iappAddressType"
                    },
                    {
                      "$ref": "#/definitions/iappPortType"
                    },
                    {
                      "$ref": "#/definitions/iappValueType"
                    }
                  ]
                },
                "type": "array"
              },
              "name": {
                "minLength": 1,
                "type": "string"
              }
            },
            "required": [
              "name",
              "columns"
            ],
            "type": "object"
          },
          "iappTables": {
            "additionalProperties": false,
            "patternProperties": {
              "^[a-zA-Z0-9_-]+$": {
                "$ref": "#/definitions/iappTableType"
              }
            },
            "type": "object"
          },
          "iappVariables": {
            "additionalProperties": false,
            "patternProperties": {
              "^[a-zA-Z0-9_-]+$": {
                "minLength": 1,
                "type": "string"
              }
            },
            "type": "object"
          },
          "partition": {
            "minLength": 1,
            "type": "string"
          }
        },
        "required": [
          "partition",
          "iapp",
          "iappOptions",
          "iappVariables",
          "iappPoolMemberTable"
        ],
        "type": "object"
      },
      "frontendVSType": {
        "additionalProperties": false,
        "properties": {
          "balance": {
            "enum": [
              "dynamic-ratio-member",
              "dynamic-ratio-node",
              "fastest-app-response",
              "fastest-node",
              "least-connections-member",
              "least-connections-node",
              "least-sessions",
              "observed-member",
              "observed-node",
              "predictive-member",
              "predictive-node",
              "ratio-least-connections-member",
              "ratio-least-connections-node",
              "ratio-member",
              "ratio-node",
              "round-robin",
              "ratio-session",
              "weighted-least-connections-member",
              "weighted-least-connections-node"
            ],
            "type": "string"
          },
          "mode": {
            "enum": [
              "http",
              "tcp"
            ],
            "type": "string"
          },
          "partition": {
            "minLength": 1,
            "type": "string"
          },
          "sslProfile": {
            "$ref": "#/definitions/sslProfileType"
          },
          "virtualAddress": {
            "$ref": "#/definitions/virtualAddressType"
          }
        },
        "required": [
          "partition",
          "virtualAddress"
        ],
        "type": "object"
      },
      "healthMonitorType": {
        "additionalProperties": false,
        "properties": {
          "interval": {
            "maximum": 86400,
            "minimum": 1,
            "type": "integer"
          },
          "protocol": {
            "enum": [
              "http",
              "tcp"
            ],
            "type": "string"
          },
          "send": {
            "minLength": 1,
            "type": "string"
          },
          "timeout": {
            "maximum": 86400,
            "minimum": 1,
            "type": "integer"
          }
        },
        "required": [
          "protocol"
        ],
        "type": "object"
      },
      "iappAddressType": {
        "additionalProperties": false,
        "properties": {
          "kind": {
            "enum": [
              "IPAddress"
            ],
            "type": "string"
          },
          "name": {
            "minLength": 1,
            "type": "string"
          }
        },
        "required": [
          "name",
          "kind"
        ],
        "type": "object"
      },
      "iappPortType": {
        "additionalProperties": false,
        "properties": {
          "kind": {
            "enum": [
              "Port"
            ],
            "type": "string"
          },
          "name": {
            "minLength": 1,
            "type": "string"
          }
        },
        "required": [
          "name",
          "kind"
        ],
        "type": "object"
      },
      "iappTableType": {
        "additionalProperties": false,
        "properties": {
          "columns": {
            "items": {
              "minLength": 1,
              "type": "string"
            },
            "minItems": 1,
            "type": "array"
          },
          "rows": {
            "items": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "type": "array"
          }
        },
        "required": [
          "columns",
          "rows"
        ],
        "type": "object"
      },
      "iappValueType": {
        "additionalProperties": false,
        "properties": {
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "value": {
            "minLength": 1,
            "type": "string"
          }
        },
        "required": [
          "name",
          "value"
        ],
        "type": "object"
      },
      "portType": {
        "maximum": 65535,
        "minimum": 1,
        "type": "integer"
      },
      "sslProfileType": {
        "additionalProperties": false,
        "properties": {
          "f5ProfileName": {
            "minLength": 1,
            "type": "string"
          }
        },
        "required": [
          "f5ProfileName"
        ],
        "type": "object"
      },
      "virtualAddressType": {
        "additionalProperties": false,
        "properties": {
          "bindAddr": {
            "anyOf": [
              {
                "format": "ipv4"
              },
              {
                "format": "ipv6"
              }
            ]
          },
          "port": {
            "$ref": "#/definitions/portType"
          }
        },
        "required": [
          "bindAddr",
          "port"
        ],
        "type": "object"
      }
    },
    "properties": {
      "virtualServer": {
        "additionalProperties": false,
        "properties": {
          "backend": {
            "$ref": "#/definitions/backendType"
          },
          "frontend": {
            "oneOf": [
              {
                "$ref": "#/definitions/frontendIAppType"
              },
              {
                "$ref": "#/definitions/frontendVSType"
              }
            ]
          }
        },
        "required": [
          "backend",
          "frontend"
        ],
        "type": "object"
      }
    },
    "required": [
      "virtualServer"
    ],
    "type": "object"
  },
  "tests": [
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "virtualServer": {
          "backend": {
            "serviceName": "example-service",
            "servicePort": 80,
            "healthMonitors": [
              {
                "protocol": "http",
                "interval": 10,
                "timeout": 10,
                "send": "GET / HTTP/1.1\r\nHost: example.com\r\n\r\n"
              }
            ]
          },
          "frontend": {
            "partition": "Common",
            "virtualAddress": {
              "bindAddr": "192.168.1.100",
              "port": 80
            },
            "mode": "http",
            "balance": "least-connections-node",
            "sslProfile": {
              "f5ProfileName": "serverssl"
            }
          }
        }
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "virtualServer": {
          "backend": {
            "serviceName": "my_service",
            "servicePort": 80,
            "healthMonitors": [
              {
                "protocol": "http",
                "interval": 10,
                "timeout": 10,
                "send": "GET / HTTP/1.1\r\nHost: example.com\r\n\r\n"
              }
            ]
          },
          "frontend": {
            "partition": "Common",
            "virtualAddress": {
              "bindAddr": "192.168.1.100",
              "port": 80
            },
            "mode": "http",
            "balance": "round-robin",
            "sslProfile": {
              "f5ProfileName": "my_ssl_profile"
            }
          }
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on oneOf keyword",
      "valid": false,
      "rust_error": "{\"partition\":\"Common\",\"iapp\":\"my_iapp\",\"iappOptions\":{},\"iappPoolMemberTable\":{\"name\":\"my_table\",\"columns\":[{\"kind\":\"IPAddress\"},{\"kind\":\"Port\"}]},\"iappVariables\":{},\"virtualAddress\":{\"bindAddr\":\"192.168.1.100\",\"port\":80},\"mode\":\"http\",\"balance\":\"round-robin\",\"sslProfile\":{\"f5ProfileName\":\"my_ssl_profile\"}} is not valid under any of the schemas listed in the 'oneOf' keyword",
      "python_error": "'IPAddress' is not one of ['Port']\n\nFailed validating 'enum' in schema[1]['properties']['kind']:\n    {'enum': ['Port'], 'type': 'string'}\n\nOn instance['kind']:\n    'IPAddress'",
      "data": {
        "virtualServer": {
          "backend": {
            "serviceName": "my_service",
            "servicePort": 80,
            "healthMonitors": [
              {
                "protocol": "http",
                "interval": 10,
                "timeout": 10,
                "send": "GET / HTTP/1.1\r\nHost: example.com\r\n\r\n"
              }
            ]
          },
          "frontend": {
            "partition": "Common",
            "iapp": "my_iapp",
            "iappOptions": {},
            "iappPoolMemberTable": {
              "name": "my_table",
              "columns": [
                {
                  "kind": "IPAddress"
                },
                {
                  "kind": "Port"
                }
              ]
            },
            "iappVariables": {},
            "virtualAddress": {
              "bindAddr": "192.168.1.100",
              "port": 80
            },
            "mode": "http",
            "balance": "round-robin",
            "sslProfile": {
              "f5ProfileName": "my_ssl_profile"
            }
          }
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on minimum keyword or maximum keyword",
      "valid": false,
      "rust_error": "65536 is greater than the maximum of 65535",
      "python_error": "65536 is greater than the maximum of 65535\n\nFailed validating 'maximum' in schema[1]['properties']['virtualAddress']['properties']['port']:\n    {'maximum': 65535, 'minimum': 1, 'type': 'integer'}\n\nOn instance['virtualAddress']['port']:\n    65536",
      "data": {
        "virtualServer": {
          "backend": {
            "serviceName": "my_service",
            "servicePort": 65536,
            "healthMonitors": [
              {
                "protocol": "http",
                "interval": 0,
                "timeout": 0,
                "send": "GET / HTTP/1.1\r\nHost: example.com\r\n\r\n"
              }
            ]
          },
          "frontend": {
            "partition": "Common",
            "virtualAddress": {
              "bindAddr": "192.168.1.100",
              "port": 65536
            },
            "mode": "http",
            "balance": "round-robin",
            "sslProfile": {
              "f5ProfileName": "my_ssl_profile"
            }
          }
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on patternProperties keyword",
      "valid": false,
      "rust_error": "{\"partition\":\"Common\",\"virtualAddress\":{\"bindAddr\":\"192.168.1.100\",\"port\":80},\"mode\":\"http\",\"balance\":\"round-robin\",\"sslProfile\":{\"f5ProfileName\":\"my_ssl_profile\"},\"iappOptions\":{\"!@#$%^&*()\":\"value\"}} is not valid under any of the schemas listed in the 'oneOf' keyword",
      "python_error": "'!@#$%^&*()' does not match any of the regexes: '^[a-zA-Z0-9_-]+$'\n\nFailed validating 'additionalProperties' in schema[0]['properties']['iappOptions']:\n    {'additionalProperties': False,\n     'patternProperties': {'^[a-zA-Z0-9_-]+$': {'minLength': 1,\n                                                'type': 'string'}},\n     'type': 'object'}\n\nOn instance['iappOptions']:\n    {'!@#$%^&*()': 'value'}",
      "data": {
        "virtualServer": {
          "backend": {
            "serviceName": "my_service",
            "servicePort": 80,
            "healthMonitors": [
              {
                "protocol": "http",
                "interval": 10,
                "timeout": 10,
                "send": "GET / HTTP/1.1\r\nHost: example.com\r\n\r\n"
              }
            ]
          },
          "frontend": {
            "partition": "Common",
            "virtualAddress": {
              "bindAddr": "192.168.1.100",
              "port": 80
            },
            "mode": "http",
            "balance": "round-robin",
            "sslProfile": {
              "f5ProfileName": "my_ssl_profile"
            },
            "iappOptions": {
              "!@#$%^&*()": "value"
            }
          }
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on minItems keyword",
      "valid": false,
      "rust_error": "{\"partition\":\"Common\",\"iapp\":\"my_iapp\",\"iappOptions\":{},\"iappVariables\":{},\"iappPoolMemberTable\":{\"name\":\"my_table\",\"columns\":[]},\"iappTables\":{},\"mode\":\"http\",\"balance\":\"round-robin\",\"sslProfile\":{\"f5ProfileName\":\"my_ssl_profile\"},\"virtualAddress\":{\"bindAddr\":\"192.168.1.100\",\"port\":80}} is not valid under any of the schemas listed in the 'oneOf' keyword",
      "python_error": "{'partition': 'Common', 'iapp': 'my_iapp', 'iappOptions': {}, 'iappVariables': {}, 'iappPoolMemberTable': {'name': 'my_table', 'columns': []}, 'iappTables': {}, 'mode': 'http', 'balance': 'round-robin', 'sslProfile': {'f5ProfileName': 'my_ssl_profile'}, 'virtualAddress': {'bindAddr': '192.168.1.100', 'port': 80}} is not valid under any of the given schemas\n\nFailed validating 'oneOf' in schema['properties']['virtualServer']['properties']['frontend']:\n    {'oneOf': [{'$ref': '#/definitions/frontendIAppType'},\n               {'$ref': '#/definitions/frontendVSType'}]}\n\nOn instance['virtualServer']['frontend']:\n    {'partition': 'Common',\n     'iapp': 'my_iapp',\n     'iappOptions': {},\n     'iappVariables': {},\n     'iappPoolMemberTable': {'name': 'my_table', 'columns': []},\n     'iappTables': {},\n     'mode': 'http',\n     'balance': 'round-robin',\n     'sslProfile': {'f5ProfileName': 'my_ssl_profile'},\n     'virtualAddress': {'bindAddr': '192.168.1.100', 'port': 80}}",
      "data": {
        "virtualServer": {
          "backend": {
            "serviceName": "my_service",
            "servicePort": 80,
            "healthMonitors": [
              {
                "protocol": "http",
                "interval": 10,
                "timeout": 10,
                "send": "GET / HTTP/1.1\r\nHost: example.com\r\n\r\n"
              }
            ]
          },
          "frontend": {
            "partition": "Common",
            "iapp": "my_iapp",
            "iappOptions": {},
            "iappVariables": {},
            "iappPoolMemberTable": {
              "name": "my_table",
              "columns": []
            },
            "iappTables": {},
            "mode": "http",
            "balance": "round-robin",
            "sslProfile": {
              "f5ProfileName": "my_ssl_profile"
            },
            "virtualAddress": {
              "bindAddr": "192.168.1.100",
              "port": 80
            }
          }
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on format keyword",
      "valid": false,
      "rust_error": "{\"partition\":\"Common\",\"virtualAddress\":{\"bindAddr\":\"256.1.1.100\",\"port\":80},\"mode\":\"http\",\"balance\":\"round-robin\",\"sslProfile\":{\"f5ProfileName\":\"my_ssl_profile\"}} is not valid under any of the schemas listed in the 'oneOf' keyword",
      "python_error": "'256.1.1.100' is not valid under any of the given schemas\n\nFailed validating 'anyOf' in schema[1]['properties']['virtualAddress']['properties']['bindAddr']:\n    {'anyOf': [{'format': 'ipv4'}, {'format': 'ipv6'}]}\n\nOn instance['virtualAddress']['bindAddr']:\n    '256.1.1.100'",
      "data": {
        "virtualServer": {
          "backend": {
            "serviceName": "my_service",
            "servicePort": 80,
            "healthMonitors": [
              {
                "protocol": "http",
                "interval": 10,
                "timeout": 10,
                "send": "GET / HTTP/1.1\r\nHost: example.com\r\n\r\n"
              }
            ]
          },
          "frontend": {
            "partition": "Common",
            "virtualAddress": {
              "bindAddr": "256.1.1.100",
              "port": 80
            },
            "mode": "http",
            "balance": "round-robin",
            "sslProfile": {
              "f5ProfileName": "my_ssl_profile"
            }
          }
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on minLength keyword",
      "valid": false,
      "rust_error": "\"\" is shorter than 1 character",
      "python_error": "'' should be non-empty\n\nFailed validating 'minLength' in schema['properties']['virtualServer']['properties']['backend']['properties']['serviceName']:\n    {'minLength': 1, 'type': 'string'}\n\nOn instance['virtualServer']['backend']['serviceName']:\n    ''",
      "data": {
        "virtualServer": {
          "backend": {
            "serviceName": "",
            "servicePort": 80,
            "healthMonitors": [
              {
                "protocol": "http",
                "interval": 10,
                "timeout": 10,
                "send": "GET / HTTP/1.1\r\nHost: example.com\r\n\r\n"
              }
            ]
          },
          "frontend": {
            "partition": "Common",
            "virtualAddress": {
              "bindAddr": "192.168.1.100",
              "port": 80
            },
            "mode": "http",
            "balance": "round-robin",
            "sslProfile": {
              "f5ProfileName": "my_ssl_profile"
            }
          }
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on anyOf keyword",
      "valid": false,
      "rust_error": "{\"partition\":\"Common\",\"virtualAddress\":{\"bindAddr\":\"256.1.1.1\",\"port\":80},\"mode\":\"http\",\"balance\":\"round-robin\",\"sslProfile\":{\"f5ProfileName\":\"my_ssl_profile\"}} is not valid under any of the schemas listed in the 'oneOf' keyword",
      "python_error": "'256.1.1.1' is not valid under any of the given schemas\n\nFailed validating 'anyOf' in schema[1]['properties']['virtualAddress']['properties']['bindAddr']:\n    {'anyOf': [{'format': 'ipv4'}, {'format': 'ipv6'}]}\n\nOn instance['virtualAddress']['bindAddr']:\n    '256.1.1.1'",
      "data": {
        "virtualServer": {
          "backend": {
            "serviceName": "my_service",
            "servicePort": 80,
            "healthMonitors": [
              {
                "protocol": "http",
                "interval": 10,
                "timeout": 10,
                "send": "GET / HTTP/1.1\r\nHost: example.com\r\n\r\n"
              }
            ]
          },
          "frontend": {
            "partition": "Common",
            "virtualAddress": {
              "bindAddr": "256.1.1.1",
              "port": 80
            },
            "mode": "http",
            "balance": "round-robin",
            "sslProfile": {
              "f5ProfileName": "my_ssl_profile"
            }
          }
        }
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "0 is less than the minimum of 1",
      "python_error": "'' should be non-empty\n\nFailed validating 'minLength' in schema[1]['properties']['sslProfile']['properties']['f5ProfileName']:\n    {'minLength': 1, 'type': 'string'}\n\nOn instance['sslProfile']['f5ProfileName']:\n    ''",
      "data": {
        "virtualServer": {
          "backend": {
            "serviceName": "my_service",
            "servicePort": 0,
            "healthMonitors": [
              {
                "protocol": "http",
                "interval": 10,
                "timeout": 10,
                "send": ""
              }
            ]
          },
          "frontend": {
            "partition": "Common",
            "virtualAddress": {
              "bindAddr": "192.168.1.256",
              "port": 80
            },
            "mode": "http",
            "balance": "round-robin",
            "sslProfile": {
              "f5ProfileName": ""
            }
          }
        }
      }
    }
  ]
}