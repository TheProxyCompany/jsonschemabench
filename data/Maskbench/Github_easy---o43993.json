{
  "description": "sample Github_easy/o43993.json",
  "meta": {
    "full_size": 878,
    "stripped_size": 842,
    "features": [
      "@minmaxLength",
      "additionalProperties",
      "enum",
      "format",
      "format:date-time"
    ],
    "raw_features": [
      "$schema",
      "_boolSchema",
      "maxLength",
      "properties",
      "required",
      "type",
      "type:integer",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "title": "StatusNotificationRequest",
    "type": "object",
    "properties": {
      "connectorId": {
        "type": "integer"
      },
      "errorCode": {
        "type": "string",
        "enum": [
          "ConnectorLockFailure",
          "EVCommunicationError",
          "GroundFailure",
          "HighTemperature",
          "InternalError",
          "LocalListConflict",
          "NoError",
          "OtherError",
          "OverCurrentFailure",
          "PowerMeterFailure",
          "PowerSwitchFailure",
          "ReaderFailure",
          "ResetFailure",
          "UnderVoltage",
          "OverVoltage",
          "WeakSignal"
        ]
      },
      "info": {
        "type": "string",
        "maxLength": 50
      },
      "status": {
        "type": "string",
        "enum": [
          "Available",
          "Preparing",
          "Charging",
          "SuspendedEVSE",
          "SuspendedEV",
          "Finishing",
          "Reserved",
          "Unavailable",
          "Faulted"
        ]
      },
      "timestamp": {
        "type": "string",
        "format": "date-time"
      },
      "vendorId": {
        "type": "string",
        "maxLength": 255
      },
      "vendorErrorCode": {
        "type": "string",
        "maxLength": 50
      }
    },
    "additionalProperties": false,
    "required": [
      "connectorId",
      "errorCode",
      "status"
    ]
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "connectorId": 1,
        "errorCode": "NoError",
        "info": "Charging initiated successfully",
        "status": "Charging",
        "timestamp": "2022-01-01T12:00:00Z",
        "vendorId": "Vendor123",
        "vendorErrorCode": ""
      }
    },
    {
      "description": "llama-70b generated negative; focus on maxLength keyword",
      "valid": false,
      "rust_error": "\"Charging initiated successfully and this is a very long string that exceeds the maxLength of 50 characters\" is longer than 50 characters",
      "python_error": "'Charging initiated successfully and this is a very long string that exceeds the maxLength of 50 characters' is too long\n\nFailed validating 'maxLength' in schema['properties']['info']:\n    {'type': 'string', 'maxLength': 50}\n\nOn instance['info']:\n    ('Charging initiated successfully and this is a very long string that '\n     'exceeds the maxLength of 50 characters')",
      "data": {
        "connectorId": 1,
        "errorCode": "NoError",
        "info": "Charging initiated successfully and this is a very long string that exceeds the maxLength of 50 characters",
        "status": "Charging",
        "timestamp": "2022-01-01T12:00:00Z",
        "vendorId": "Vendor123",
        "vendorErrorCode": ""
      }
    },
    {
      "description": "llama-70b generated negative; focus on format keyword",
      "valid": false,
      "rust_error": "\"Invalid Date\" is not a \"date-time\"",
      "python_error": "'Invalid Date' is not a 'date-time'\n\nFailed validating 'format' in schema['properties']['timestamp']:\n    {'type': 'string', 'format': 'date-time'}\n\nOn instance['timestamp']:\n    'Invalid Date'",
      "data": {
        "connectorId": 1,
        "errorCode": "NoError",
        "info": "Charging initiated successfully",
        "status": "Charging",
        "timestamp": "Invalid Date",
        "vendorId": "Vendor123",
        "vendorErrorCode": ""
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"one\" is not of type \"integer\"",
      "python_error": "'one' is not of type 'integer'\n\nFailed validating 'type' in schema['properties']['connectorId']:\n    {'type': 'integer'}\n\nOn instance['connectorId']:\n    'one'",
      "data": {
        "connectorId": "one",
        "errorCode": "NoError",
        "info": "Charging initiated successfully",
        "status": "Charging",
        "timestamp": "2022-01-01T12:00:00Z",
        "vendorId": "Vendor123",
        "vendorErrorCode": ""
      }
    },
    {
      "description": "llama-70b generated negative; focus on maxLength keyword",
      "valid": false,
      "rust_error": "\"Charging initiated successfully and this is a very long string that exceeds the maxLength of 50\" is longer than 50 characters",
      "python_error": "'Charging initiated successfully and this is a very long string that exceeds the maxLength of 50' is too long\n\nFailed validating 'maxLength' in schema['properties']['info']:\n    {'type': 'string', 'maxLength': 50}\n\nOn instance['info']:\n    ('Charging initiated successfully and this is a very long string that '\n     'exceeds the maxLength of 50')",
      "data": {
        "connectorId": 1,
        "errorCode": "NoError",
        "info": "Charging initiated successfully and this is a very long string that exceeds the maxLength of 50",
        "status": "Charging",
        "timestamp": "2022-01-01T12:00:00Z",
        "vendorId": "Vendor123",
        "vendorErrorCode": ""
      }
    },
    {
      "description": "llama-70b generated negative; focus on format keyword",
      "valid": false,
      "rust_error": "\"2022-01-01T12:00:00\" is not a \"date-time\"",
      "python_error": "'2022-01-01T12:00:00' is not a 'date-time'\n\nFailed validating 'format' in schema['properties']['timestamp']:\n    {'type': 'string', 'format': 'date-time'}\n\nOn instance['timestamp']:\n    '2022-01-01T12:00:00'",
      "data": {
        "connectorId": 1,
        "errorCode": "NoError",
        "info": "Charging initiated successfully",
        "status": "Charging",
        "timestamp": "2022-01-01T12:00:00",
        "vendorId": "Vendor123",
        "vendorErrorCode": ""
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"Charging initiated successfully and this is a very long string that exceeds the max length of 50 characters and this is still going on and on\" is longer than 50 characters",
      "python_error": "'Charging initiated successfully and this is a very long string that exceeds the max length of 50 characters and this is still going on and on' is too long\n\nFailed validating 'maxLength' in schema['properties']['info']:\n    {'type': 'string', 'maxLength': 50}\n\nOn instance['info']:\n    ('Charging initiated successfully and this is a very long string that '\n     'exceeds the max length of 50 characters and this is still going on '\n     'and on')",
      "data": {
        "connectorId": 1,
        "errorCode": "NoError",
        "info": "Charging initiated successfully and this is a very long string that exceeds the max length of 50 characters and this is still going on and on",
        "status": "Charging",
        "timestamp": "2022-01-01T12:00:00Z",
        "vendorId": "Vendor123",
        "vendorErrorCode": ""
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "connectorId": 1,
        "errorCode": "NoError",
        "info": "Charging started successfully",
        "status": "Charging",
        "timestamp": "2022-01-01T12:00:00Z",
        "vendorId": "Vendor123",
        "vendorErrorCode": "None"
      }
    },
    {
      "description": "llama-70b generated negative; focus on format keyword",
      "valid": false,
      "rust_error": "\"Invalid Date\" is not a \"date-time\"",
      "python_error": "'Invalid Date' is not a 'date-time'\n\nFailed validating 'format' in schema['properties']['timestamp']:\n    {'type': 'string', 'format': 'date-time'}\n\nOn instance['timestamp']:\n    'Invalid Date'",
      "data": {
        "connectorId": 1,
        "errorCode": "NoError",
        "info": "Charging started successfully",
        "status": "Charging",
        "timestamp": "Invalid Date",
        "vendorId": "Vendor123",
        "vendorErrorCode": "None"
      }
    },
    {
      "description": "llama-70b generated negative; focus on maxLength keyword",
      "valid": false,
      "rust_error": "\"This is a very long string that exceeds the maximum allowed length of 50 characters and is intended to test the maxLength keyword in the schema, it should be rejected by a conforming validator.\" is longer than 50 characters",
      "python_error": "'This is a very long string that exceeds the maximum allowed length of 50 characters and is intended to test the maxLength keyword in the schema, it should be rejected by a conforming validator.' is too long\n\nFailed validating 'maxLength' in schema['properties']['info']:\n    {'type': 'string', 'maxLength': 50}\n\nOn instance['info']:\n    ('This is a very long string that exceeds the maximum allowed length '\n     'of 50 characters and is intended to test the maxLength keyword in '\n     'the schema, it should be rejected by a conforming validator.')",
      "data": {
        "connectorId": 1,
        "errorCode": "NoError",
        "info": "This is a very long string that exceeds the maximum allowed length of 50 characters and is intended to test the maxLength keyword in the schema, it should be rejected by a conforming validator.",
        "status": "Charging",
        "timestamp": "2022-01-01T12:00:00Z",
        "vendorId": "Vendor123",
        "vendorErrorCode": "None"
      }
    }
  ]
}