{
  "description": "sample Github_medium/o83341.json",
  "meta": {
    "full_size": 2614,
    "stripped_size": 746,
    "features": [
      "additionalProperties",
      "patternProperties"
    ],
    "raw_features": [
      "$schema",
      "_boolSchema",
      "properties",
      "required",
      "type",
      "type:[]",
      "type:boolean",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "title": "JSON schema for puer-mock _mockserver.json config",
    "type": "object",
    "properties": {
      "api": {
        "type": "object",
        "title": "接口列表",
        "description": "接口列表",
        "patternProperties": {
          "^(GET|POST|PUT|DELETE|PATCH|OPTIONS)\\s+/\\S+$": {
            "type": "object",
            "title": "定义一个接口, 包含 HTTP 动词 + 空格 + 路由, 例如: GET /api/user",
            "description": "定义一个接口, 包含 HTTP 动词 + 空格 + 路由, 例如: GET /api/user",
            "default": "GET /api/user",
            "properties": {
              "request": {
                "type": "object",
                "title": "接口的输入参数",
                "description": "接口的输入参数",
                "properties": {
                  "querystring": {
                    "type": "object",
                    "title": "定义放置在 URL querystring 中的参数",
                    "description": "定义放置在 URL querystring 中的参数"
                  },
                  "header": {
                    "type": "object",
                    "title": "定义 HTTP header",
                    "description": "定义 HTTP header"
                  },
                  "body": {
                    "type": "object",
                    "title": "定义放置在 HTTP body 中的参数",
                    "description": "定义放置在 HTTP body 中的参数"
                  }
                }
              },
              "response": {
                "title": "接口的输出数据, 可以是任意的 JSON 数据类型(number/boolean/string/object/array/null), 但推荐返回固定结构的 object 类型的数据",
                "description": "接口的输出数据, 可以是任意的 JSON 数据类型(number/boolean/string/object/array/null), 但推荐返回固定结构的 object 类型的数据"
              },
              "disabled": {
                "type": "boolean",
                "title": "是否禁用该接口",
                "description": "是否禁用该接口"
              },
              "proxy": {
                "type": [
                  "string",
                  "object"
                ],
                "title": "是否代理接口",
                "description": "直接代理远程的接口, 方便在开发的过程中切换到后端的真实接口"
              },
              "info": {
                "type": "object",
                "title": "接口的介绍信息",
                "description": "接口的介绍信息",
                "properties": {
                  "summary": {
                    "type": "string",
                    "title": "接口介绍",
                    "description": "接口介绍",
                    "default": "接口介绍"
                  },
                  "module": {
                    "type": "string",
                    "title": "接口分组",
                    "description": "接口分组",
                    "default": "接口分组"
                  },
                  "description": {
                    "type": "string",
                    "title": "接口详情",
                    "description": "接口详情",
                    "default": "接口详情"
                  },
                  "author": {
                    "type": "string",
                    "title": "接口作者",
                    "description": "接口作者",
                    "default": "接口作者"
                  }
                }
              }
            },
            "required": [
              "response"
            ]
          }
        },
        "additionalProperties": false
      },
      "info": {
        "type": "object",
        "title": "项目的介绍信息",
        "description": "项目的介绍信息",
        "properties": {
          "summary": {
            "type": "string",
            "title": "项目介绍",
            "description": "项目介绍",
            "default": "xxx 项目接口文档"
          },
          "description": {
            "type": "string",
            "title": "项目详情",
            "description": "项目详情",
            "default": "如此高大上的接口文档 Powered by puer-mock"
          }
        }
      }
    },
    "required": [
      "api"
    ]
  },
  "tests": [
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "api": {
          "GET /api/user": {
            "request": {
              "querystring": {
                "name": "string",
                "age": "number"
              },
              "header": {
                "Content-Type": "application/json"
              },
              "body": {
                "username": "string",
                "password": "string"
              }
            },
            "response": {
              "code": 200,
              "message": "success",
              "data": {
                "id": 1,
                "name": "John Doe",
                "age": 30
              }
            },
            "disabled": false,
            "proxy": "",
            "info": {
              "summary": "Get user information",
              "module": "User Module",
              "description": "This API returns user information",
              "author": "John Doe"
            }
          },
          "POST /api/user": {
            "request": {
              "querystring": {},
              "header": {
                "Content-Type": "application/json"
              },
              "body": {
                "username": "string",
                "password": "string",
                "email": "string"
              }
            },
            "response": {
              "code": 201,
              "message": "User created successfully",
              "data": {
                "id": 1,
                "name": "John Doe",
                "age": 30
              }
            },
            "disabled": false,
            "proxy": "",
            "info": {
              "summary": "Create a new user",
              "module": "User Module",
              "description": "This API creates a new user",
              "author": "John Doe"
            }
          }
        },
        "info": {
          "summary": "User API Documentation",
          "description": "This is a documentation for User API"
        }
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "api": {
          "GET /api/user": {
            "request": {
              "querystring": {
                "name": "string",
                "age": "number"
              },
              "header": {
                "Content-Type": "application/json"
              },
              "body": {
                "username": "string",
                "password": "string"
              }
            },
            "response": {
              "code": 200,
              "message": "success",
              "data": {
                "id": 1,
                "name": "John Doe",
                "age": 30
              }
            },
            "disabled": false,
            "proxy": "",
            "info": {
              "summary": "Get user info",
              "module": "User",
              "description": "Get user info by name and age",
              "author": "John Doe"
            }
          },
          "POST /api/user": {
            "request": {
              "querystring": {},
              "header": {
                "Content-Type": "application/json"
              },
              "body": {
                "username": "string",
                "password": "string",
                "email": "string"
              }
            },
            "response": {
              "code": 201,
              "message": "success",
              "data": {
                "id": 1,
                "name": "John Doe",
                "age": 30
              }
            },
            "disabled": false,
            "proxy": "",
            "info": {
              "summary": "Create user",
              "module": "User",
              "description": "Create a new user",
              "author": "John Doe"
            }
          }
        },
        "info": {
          "summary": "User API",
          "description": "User API documentation"
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on patternProperties keyword",
      "valid": false,
      "rust_error": "Additional properties are not allowed ('POST' was unexpected)",
      "python_error": "'POST' does not match any of the regexes: '^(GET|POST|PUT|DELETE|PATCH|OPTIONS)\\\\s+/\\\\S+$'\n\nFailed validating 'additionalProperties' in schema['properties']['api']:\n    {'type': 'object',\n     'title': '接口列表',\n     'description': '接口列表',\n     'patternProperties': {'^(GET|POST|PUT|DELETE|PATCH|OPTIONS)\\\\s+/\\\\S+$': {'type': 'object',\n                                                                              'title': '定义一个接口, '\n                                                                                       '包含 '\n                                                                                       'HTTP '\n                                                                                       '动词 '\n                                                                                       '+ '\n                                                                                       '空格 '\n                                                                                      .. (14002 more)",
      "data": {
        "api": {
          "GET /api/user": {
            "request": {
              "querystring": {
                "name": "string",
                "age": "number"
              },
              "header": {
                "Content-Type": "application/json"
              },
              "body": {
                "username": "string",
                "password": "string"
              }
            },
            "response": {
              "code": 200,
              "message": "success",
              "data": {
                "id": 1,
                "name": "John Doe",
                "age": 30
              }
            },
            "disabled": false,
            "proxy": "",
            "info": {
              "summary": "Get user info",
              "module": "User",
              "description": "Get user info by name and age",
              "author": "John Doe"
            }
          },
          "POST": {
            "request": {
              "querystring": {},
              "header": {
                "Content-Type": "application/json"
              },
              "body": {
                "username": "string",
                "password": "string",
                "email": "string"
              }
            },
            "response": {
              "code": 201,
              "message": "success",
              "data": {
                "id": 1,
                "name": "John Doe",
                "age": 30
              }
            },
            "disabled": false,
            "proxy": "",
            "info": {
              "summary": "Create user",
              "module": "User",
              "description": "Create a new user",
              "author": "John Doe"
            }
          }
        },
        "info": {
          "summary": "User API",
          "description": "User API documentation"
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on type keyword with an array of types",
      "valid": false,
      "rust_error": "2 is not of types \"object\", \"string\"",
      "python_error": "2 is not of type 'string', 'object'\n\nFailed validating 'type' in schema['properties']['api']['patternProperties']['^(GET|POST|PUT|DELETE|PATCH|OPTIONS)\\\\s+/\\\\S+$']['properties']['proxy']:\n    {'type': ['string', 'object'],\n     'title': '是否代理接口',\n     'description': '直接代理远程的接口, 方便在开发的过程中切换到后端的真实接口'}\n\nOn instance['api']['GET /api/user']['proxy']:\n    2",
      "data": {
        "api": {
          "GET /api/user": {
            "request": {
              "querystring": {
                "name": "string",
                "age": "number"
              },
              "header": {
                "Content-Type": "application/json"
              },
              "body": {
                "username": "string",
                "password": "string"
              }
            },
            "response": 1,
            "proxy": 2,
            "disabled": false,
            "info": {
              "summary": "Get user info",
              "module": "User",
              "description": "Get user info by name and age",
              "author": "John Doe"
            }
          }
        },
        "info": {
          "summary": "User API",
          "description": "User API documentation"
        }
      }
    }
  ]
}