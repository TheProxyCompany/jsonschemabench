{
  "description": "sample Kubernetes/kb_931_Normalized.json",
  "meta": {
    "full_size": 1327,
    "stripped_size": 526,
    "features": [
      "$ref",
      "items"
    ],
    "raw_features": [
      "definitions",
      "properties",
      "required",
      "type",
      "type:[]",
      "type:array",
      "type:null",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "definitions": {
      "https:__kubernetesjsonschema_dev_master__defs_json_defs_io_k8s_api_core_v1_ScopedResourceSelectorRequirement": {
        "description": "A scoped-resource selector requirement is a selector that contains values, a scope name, and an operator that relates the scope name and values.",
        "properties": {
          "operator": {
            "description": "Represents a scope's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist.",
            "type": "string"
          },
          "scopeName": {
            "description": "The name of the scope that the selector applies to.",
            "type": "string"
          },
          "values": {
            "description": "An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "required": [
          "scopeName",
          "operator"
        ],
        "type": "object"
      }
    },
    "description": "A scope selector represents the AND of the selectors represented by the scoped-resource selector requirements.",
    "properties": {
      "matchExpressions": {
        "description": "A list of scope selector requirements by scope of the resources.",
        "items": {
          "$ref": "#/definitions/https:__kubernetesjsonschema_dev_master__defs_json_defs_io_k8s_api_core_v1_ScopedResourceSelectorRequirement"
        },
        "type": [
          "array",
          "null"
        ]
      }
    },
    "type": "object"
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "matchExpressions": [
          {
            "operator": "In",
            "scopeName": "Pod",
            "values": [
              "value1",
              "value2"
            ]
          },
          {
            "operator": "Exists",
            "scopeName": "Namespace",
            "values": []
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on type keyword with an array of types",
      "valid": false,
      "rust_error": "\"string\" is not of types \"array\", \"null\"",
      "python_error": "'string' is not of type 'array', 'null'\n\nFailed validating 'type' in schema['properties']['matchExpressions']:\n    {'description': 'A list of scope selector requirements by scope of the '\n                    'resources.',\n     'items': {'$ref': '#/definitions/https:__kubernetesjsonschema_dev_master__defs_json_defs_io_k8s_api_core_v1_ScopedResourceSelectorRequirement'},\n     'type': ['array', 'null']}\n\nOn instance['matchExpressions']:\n    'string'",
      "data": {
        "matchExpressions": "string"
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "matchExpressions": [
          {
            "operator": "In",
            "scopeName": "Pod",
            "values": [
              "value1",
              "value2"
            ]
          },
          {
            "operator": "Exists",
            "scopeName": "Namespace",
            "values": []
          },
          {
            "operator": "NotIn",
            "scopeName": "Deployment",
            "values": [
              "value3",
              "value4"
            ]
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on type keyword with an array of types",
      "valid": false,
      "rust_error": "123 is not of types \"array\", \"null\"",
      "python_error": "123 is not of type 'array', 'null'\n\nFailed validating 'type' in schema['properties']['matchExpressions']:\n    {'description': 'A list of scope selector requirements by scope of the '\n                    'resources.',\n     'items': {'$ref': '#/definitions/https:__kubernetesjsonschema_dev_master__defs_json_defs_io_k8s_api_core_v1_ScopedResourceSelectorRequirement'},\n     'type': ['array', 'null']}\n\nOn instance['matchExpressions']:\n    123",
      "data": {
        "matchExpressions": 123
      }
    }
  ]
}