{
  "description": "sample Github_hard/o47675.json",
  "meta": {
    "full_size": 2834,
    "stripped_size": 2320,
    "features": [
      "$ref",
      "@minmaxItems",
      "@siblingKeys",
      "additionalProperties",
      "additionalProperties:object",
      "enum",
      "items",
      "oneOf"
    ],
    "raw_features": [
      "$schema",
      "_boolSchema",
      "definitions",
      "minItems",
      "properties",
      "required",
      "type",
      "type:[]",
      "type:array",
      "type:boolean",
      "type:integer",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "Solidarity",
    "description": "A rule-set and config for the Solidarity JSON checker",
    "type": "object",
    "properties": {
      "config": {
        "output": {
          "description": "Identify what kind output should happen when a check is called",
          "type": "string",
          "enum": [
            "moderate",
            "verbose",
            "silent"
          ]
        }
      },
      "requirements": {
        "description": "List of requirement rules for your particular environment",
        "type": "object",
        "additionalProperties": {
          "type": "array",
          "items": {
            "type": "object",
            "oneOf": [
              {
                "$ref": "#/definitions/cli"
              },
              {
                "$ref": "#/definitions/dir"
              },
              {
                "$ref": "#/definitions/file"
              },
              {
                "$ref": "#/definitions/env"
              },
              {
                "$ref": "#/definitions/shell"
              },
              {
                "$ref": "#/definitions/custom"
              }
            ]
          },
          "minItems": 1,
          "_uniqueItems": true
        }
      }
    },
    "required": [
      "requirements"
    ],
    "definitions": {
      "cli": {
        "description": "CLI Rule",
        "type": "object",
        "properties": {
          "rule": {
            "enum": [
              "cli"
            ]
          },
          "binary": {
            "type": "string"
          },
          "semver": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "line": {
            "type": [
              "string",
              "integer"
            ]
          },
          "matchIndex": {
            "type": "integer"
          },
          "platform": {
            "enum": [
              "darwin",
              "macos",
              "freebsd",
              "linux",
              "sunos",
              "win32",
              "windows"
            ]
          },
          "error": {
            "type": "string"
          },
          "ci": {
            "type": "boolean"
          },
          "fix": {
            "type": "string"
          }
        },
        "required": [
          "rule",
          "binary"
        ]
      },
      "dir": {
        "description": "Dir Rule",
        "type": "object",
        "properties": {
          "rule": {
            "enum": [
              "dir",
              "directory"
            ]
          },
          "platform": {
            "enum": [
              "darwin",
              "macos",
              "freebsd",
              "linux",
              "sunos",
              "win32",
              "windows"
            ]
          },
          "error": {
            "type": "string"
          },
          "ci": {
            "type": "boolean"
          },
          "fix": {
            "type": "string"
          }
        },
        "required": [
          "rule",
          "location"
        ]
      },
      "file": {
        "description": "File Rule",
        "type": "object",
        "properties": {
          "rule": {
            "enum": [
              "file"
            ]
          },
          "platform": {
            "enum": [
              "darwin",
              "macos",
              "freebsd",
              "linux",
              "sunos",
              "win32",
              "windows"
            ]
          },
          "error": {
            "type": "string"
          },
          "ci": {
            "type": "boolean"
          },
          "fix": {
            "type": "string"
          }
        },
        "required": [
          "rule",
          "location"
        ]
      },
      "env": {
        "description": "ENV Rule",
        "type": "object",
        "properties": {
          "rule": {
            "enum": [
              "env"
            ]
          },
          "platform": {
            "enum": [
              "darwin",
              "macos",
              "freebsd",
              "linux",
              "sunos",
              "win32",
              "windows"
            ]
          },
          "error": {
            "type": "string"
          },
          "ci": {
            "type": "boolean"
          },
          "fix": {
            "type": "string"
          }
        },
        "required": [
          "rule",
          "variable"
        ]
      },
      "shell": {
        "description": "Shell Rule",
        "type": "object",
        "properties": {
          "rule": {
            "enum": [
              "shell"
            ]
          },
          "platform": {
            "enum": [
              "darwin",
              "macos",
              "freebsd",
              "linux",
              "sunos",
              "win32",
              "windows"
            ]
          },
          "error": {
            "type": "string"
          },
          "ci": {
            "type": "boolean"
          },
          "match": {
            "type": "string",
            "description": "A regexp to search the output."
          },
          "fix": {
            "type": "string"
          }
        },
        "required": [
          "rule",
          "match"
        ]
      },
      "custom": {
        "description": "Custom Rule",
        "type": "object",
        "additionalProperties": true,
        "properties": {
          "rule": {
            "enum": [
              "custom"
            ]
          },
          "plugin": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "platform": {
            "enum": [
              "darwin",
              "macos",
              "freebsd",
              "linux",
              "sunos",
              "win32",
              "windows"
            ]
          },
          "error": {
            "type": "string"
          },
          "ci": {
            "type": "boolean"
          },
          "match": {
            "type": "string",
            "description": "A regexp to search the output."
          },
          "fix": {
            "type": "string"
          }
        },
        "required": [
          "rule",
          "plugin",
          "name"
        ]
      }
    }
  },
  "tests": [
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "config": {
          "output": "verbose"
        },
        "requirements": {
          "rule1": [
            {
              "rule": "cli",
              "binary": "node",
              "semver": "^14.17.0",
              "version": "14.17.0",
              "line": 1,
              "matchIndex": 0,
              "platform": "darwin",
              "error": "Node.js version is not compatible",
              "ci": true,
              "fix": "Update Node.js to version 14.17.0"
            }
          ],
          "rule2": [
            {
              "rule": "dir",
              "platform": "linux",
              "error": "Directory not found",
              "ci": true,
              "fix": "Create directory at /path/to/directory",
              "location": "/path/to/directory"
            }
          ],
          "rule3": [
            {
              "rule": "file",
              "platform": "windows",
              "error": "File not found",
              "ci": true,
              "fix": "Create file at /path/to/file.txt",
              "location": "/path/to/file.txt"
            }
          ],
          "rule4": [
            {
              "rule": "env",
              "platform": "darwin",
              "error": "Environment variable not set",
              "ci": true,
              "fix": "Set NODE_ENV environment variable",
              "variable": "NODE_ENV"
            }
          ],
          "rule5": [
            {
              "rule": "shell",
              "platform": "linux",
              "error": "Shell command failed",
              "ci": true,
              "match": "regexp to search the output",
              "fix": "Run shell command to fix the issue"
            }
          ],
          "rule6": [
            {
              "rule": "custom",
              "plugin": "custom-plugin",
              "name": "custom-rule",
              "platform": "windows",
              "error": "Custom rule failed",
              "ci": true,
              "match": "regexp to search the output",
              "fix": "Run custom command to fix the issue"
            }
          ]
        }
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "config": {
          "output": "verbose"
        },
        "requirements": {
          "node": [
            {
              "rule": "cli",
              "binary": "node",
              "semver": "^14.17.0",
              "version": "14.17.0",
              "line": 1,
              "matchIndex": 0,
              "platform": "darwin",
              "error": "Node.js version is not compatible",
              "ci": true,
              "fix": "Update Node.js to version 14.17.0"
            }
          ],
          "npm": [
            {
              "rule": "cli",
              "binary": "npm",
              "semver": "^6.14.13",
              "version": "6.14.13",
              "line": 1,
              "matchIndex": 0,
              "platform": "darwin",
              "error": "npm version is not compatible",
              "ci": true,
              "fix": "Update npm to version 6.14.13"
            }
          ],
          "python": [
            {
              "rule": "cli",
              "binary": "python",
              "semver": "^3.9.5",
              "version": "3.9.5",
              "line": 1,
              "matchIndex": 0,
              "platform": "darwin",
              "error": "Python version is not compatible",
              "ci": true,
              "fix": "Update Python to version 3.9.5"
            }
          ],
          "pip": [
            {
              "rule": "cli",
              "binary": "pip",
              "semver": "^21.1.1",
              "version": "21.1.1",
              "line": 1,
              "matchIndex": 0,
              "platform": "darwin",
              "error": "pip version is not compatible",
              "ci": true,
              "fix": "Update pip to version 21.1.1"
            }
          ],
          "java": [
            {
              "rule": "cli",
              "binary": "java",
              "semver": "^11.0.11",
              "version": "11.0.11",
              "line": 1,
              "matchIndex": 0,
              "platform": "darwin",
              "error": "Java version is not compatible",
              "ci": true,
              "fix": "Update Java to version 11.0.11"
            }
          ],
          "maven": [
            {
              "rule": "cli",
              "binary": "mvn",
              "semver": "^3.8.1",
              "version": "3.8.1",
              "line": 1,
              "matchIndex": 0,
              "platform": "darwin",
              "error": "Maven version is not compatible",
              "ci": true,
              "fix": "Update Maven to version 3.8.1"
            }
          ],
          "gradle": [
            {
              "rule": "cli",
              "binary": "gradle",
              "semver": "^7.1.1",
              "version": "7.1.1",
              "line": 1,
              "matchIndex": 0,
              "platform": "darwin",
              "error": "Gradle version is not compatible",
              "ci": true,
              "fix": "Update Gradle to version 7.1.1"
            }
          ],
          "go": [
            {
              "rule": "cli",
              "binary": "go",
              "semver": "^1.16.5",
              "version": "1.16.5",
              "line": 1,
              "matchIndex": 0,
              "platform": "darwin",
              "error": "Go version is not compatible",
              "ci": true,
              "fix": "Update Go to version 1.16.5"
            }
          ],
          "rust": [
            {
              "rule": "cli",
              "binary": "rustc",
              "semver": "^1.52.1",
              "version": "1.52.1",
              "line": 1,
              "matchIndex": 0,
              "platform": "darwin",
              "error": "Rust version is not compatible",
              "ci": true,
              "fix": "Update Rust to version 1.52.1"
            }
          ],
          "swift": [
            {
              "rule": "cli",
              "binary": "swift",
              "semver": "^5.4.2",
              "version": "5.4.2",
              "line": 1,
              "matchIndex": 0,
              "platform": "darwin",
              "error": "Swift version is not compatible",
              "ci": true,
              "fix": "Update Swift to version 5.4.2"
            }
          ],
          "ruby": [
            {
              "rule": "cli",
              "binary": "ruby",
              "semver": "^3.0.1",
              "version": "3.0.1",
              "line": 1,
              "matchIndex": 0,
              "platform": "darwin",
              "error": "Ruby version is not compatible",
              "ci": true,
              "fix": "Update Ruby to version 3.0.1"
            }
          ],
          "perl": [
            {
              "rule": "cli",
              "binary": "perl",
              "semver": "^5.34.0",
              "version": "5.34.0",
              "line": 1,
              "matchIndex": 0,
              "platform": "darwin",
              "error": "Perl version is not compatible",
              "ci": true,
              "fix": "Update Perl to version 5.34.0"
            }
          ],
          "php": [
            {
              "rule": "cli",
              "binary": "php",
              "semver": "^8.0.7",
              "version": "8.0.7",
              "line": 1,
              "matchIndex": 0,
              "platform": "darwin",
              "error": "PHP version is not compatible",
              "ci": true,
              "fix": "Update PHP to version 8.0.7"
            }
          ],
          "composer": [
            {
              "rule": "cli",
              "binary": "composer",
              "semver": "^2.1.3",
              "version": "2.1.3",
              "line": 1,
              "matchIndex": 0,
              "platform": "darwin",
              "error": "Composer version is not compatible",
              "ci": true,
              "fix": "Update Composer to version 2.1.3"
            }
          ],
          "git": [
            {
              "rule": "cli",
              "binary": "git",
              "semver": "^2.31.1",
              "version": "2.31.1",
              "line": 1,
              "matchIndex": 0,
              "platform": "darwin",
              "error": "Git version is not compatible",
              "ci": true,
              "fix": "Update Git to version 2.31.1"
            }
          ],
          "svn": [
            {
              "rule": "cli",
              "binary": "svn",
              "semver": "^1.14.1",
              "version": "1.14.1",
              "line": 1,
              "matchIndex": 0,
              "platform": "darwin",
              "error": "SVN version is not compatible",
              "ci": true,
              "fix": "Update SVN to version 1.14.1"
            }
          ],
          "hg": [
            {
              "rule": "cli",
              "binary": "hg",
              "semver": "^5.8",
              "version": "5.8",
              "line": 1,
              "matchIndex": 0,
              "platform": "darwin",
              "error": "Mercurial version is not compatible",
              "ci": true,
              "fix": "Update Mercurial to version 5.8"
            }
          ],
          "aws": [
            {
              "rule": "cli",
              "binary": "aws",
              "semver": "^2.2.34",
              "version": "2.2.34",
              "line": 1,
              "matchIndex": 0,
              "platform": "darwin",
              "error": "AWS CLI version is not compatible",
              "ci": true,
              "fix": "Update AWS CLI to version 2.2.34"
            }
          ],
          "azure": [
            {
              "rule": "cli",
              "binary": "az",
              "semver": "^2.29.0",
              "version": "2.29.0",
              "line": 1,
              "matchIndex": 0,
              "platform": "darwin",
              "error": "Azure CLI version is not compatible",
              "ci": true,
              "fix": "Update Azure CLI to version 2.29.0"
            }
          ],
          "gcloud": [
            {
              "rule": "cli",
              "binary": "gcloud",
              "semver": "^357.0.0",
              "version": "357.0.0",
              "line": 1,
              "matchIndex": 0,
              "platform": "darwin",
              "error": "Google Cloud CLI version is not compatible",
              "ci": true,
              "fix": "Update Google Cloud CLI to version 357.0.0"
            }
          ],
          "kubernetes": [
            {
              "rule": "cli",
              "binary": "kubectl",
              "semver": "^1.21.2",
              "version": "1.21.2",
              "line": 1,
              "matchIndex": 0,
              "platform": "darwin",
              "error": "Kubernetes CLI version is not compatible",
              "ci": true,
              "fix": "Update Kubernetes CLI to version 1.21.2"
            }
          ],
          "docker": [
            {
              "rule": "cli",
              "binary": "docker",
              "semver": "^20.10.7",
              "version": "20.10.7",
              "line": 1,
              "matchIndex": 0,
              "platform": "darwin",
              "error": "Docker version is not compatible",
              "ci": true,
              "fix": "Update Docker to version 20.10.7"
            }
          ],
          "podman": [
            {
              "rule": "cli",
              "binary": "podman",
              "semver": "^3.2.3",
              "version": "3.2.3",
              "line": 1,
              "matchIndex": 0,
              "platform": "darwin",
              "error": "Podman version is not compatible",
              "ci": true,
              "fix": "Update Podman to version 3.2.3"
            }
          ],
          "helm": [
            {
              "rule": "cli",
              "binary": "helm",
              "semver": "^3.6.3",
              "version": "3.6.3",
              "line": 1,
              "matchIndex": 0,
              "platform": "darwin",
              "error": "Helm version is not compatible",
              "ci": true,
              "fix": "Update Helm to version 3.6.3"
            }
          ],
          "terraform": [
            {
              "rule": "cli",
              "binary": "terraform",
              "semver": "^1.1.2",
              "version": "1.1.2",
              "line": 1,
              "matchIndex": 0,
              "platform": "darwin",
              "error": "Terraform version is not compatible",
              "ci": true,
              "fix": "Update Terraform to version 1.1.2"
            }
          ],
          "ansible": [
            {
              "rule": "cli",
              "binary": "ansible",
              "semver": "^4.6.0",
              "version": "4.6.0",
              "line": 1,
              "matchIndex": 0,
              "platform": "darwin",
              "error": "Ansible version is not compatible",
              "ci": true,
              "fix": "Update Ansible to version 4.6.0"
            }
          ],
          "jenkins": [
            {
              "rule": "cli",
              "binary": "jenkins",
              "semver": "^2.303",
              "version": "2.303",
              "line": 1,
              "matchIndex": 0,
              "platform": "darwin",
              "error": "Jenkins version is not compatible",
              "ci": true,
              "fix": "Update Jenkins to version 2.303"
            }
          ],
          "travis": [
            {
              "rule": "cli",
              "binary": "travis",
              "semver": "^1.10.1",
              "version": "1.10.1",
              "line": 1,
              "matchIndex": 0,
              "platform": "darwin",
              "error": "Travis version is not compatible",
              "ci": true,
              "fix": "Update Travis to version 1.10.1"
            }
          ],
          "circleci": [
            {
              "rule": "cli",
              "binary": "circleci",
              "semver": "^0.1.12345",
              "version": "0.1.12345",
              "line": 1,
              "matchIndex": 0,
              "platform": "darwin",
              "error": "CircleCI version is not compatible",
              "ci": true,
              "fix": "Update CircleCI to version 0.1.12345"
            }
          ],
          "github": [
            {
              "rule": "cli",
              "binary": "gh",
              "semver": "^1.10.2",
              "version": "1.10.2",
              "line": 1,
              "matchIndex": 0,
              "platform": "darwin",
              "error": "GitHub CLI version is not compatible",
              "ci": true,
              "fix": "Update GitHub CLI to version 1.10.2"
            }
          ],
          "gitlab": [
            {
              "rule": "cli",
              "binary": "glab",
              "semver": "^1.17.0",
              "version": "1.17.0",
              "line": 1,
              "matchIndex": 0,
              "platform": "darwin",
              "error": "GitLab CLI version is not compatible",
              "ci": true,
              "fix": "Update GitLab CLI to version 1.17.0"
            }
          ],
          "bitbucket": [
            {
              "rule": "cli",
              "binary": "bb",
              "semver": "^1.0.3",
              "version": "1.0.3",
              "line": 1,
              "matchIndex": 0,
              "platform": "darwin",
              "error": "Bitbucket CLI version is not compatible",
              "ci": true,
              "fix": "Update Bitbucket CLI to version 1.0.3"
            }
          ]
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on minItems keyword",
      "valid": false,
      "rust_error": "[] has less than 1 item",
      "python_error": "[] should be non-empty\n\nFailed validating 'minItems' in schema['properties']['requirements']['additionalProperties']:\n    {'type': 'array',\n     'items': {'type': 'object',\n               'oneOf': [{'$ref': '#/definitions/cli'},\n                         {'$ref': '#/definitions/dir'},\n                         {'$ref': '#/definitions/file'},\n                         {'$ref': '#/definitions/env'},\n                         {'$ref': '#/definitions/shell'},\n                         {'$ref': '#/definitions/custom'}]},\n     'minItems': 1,\n     '_uniqueItems': True}\n\nOn instance['requirements']['node']:\n    []",
      "data": {
        "config": {
          "output": "verbose"
        },
        "requirements": {
          "node": [],
          "npm": [
            {
              "rule": "cli",
              "binary": "npm",
              "semver": "^6.14.13",
              "version": "6.14.13",
              "line": 1,
              "matchIndex": 0,
              "platform": "darwin",
              "error": "npm version is not compatible",
              "ci": true,
              "fix": "Update npm to version 6.14.13"
            }
          ]
        }
      }
    }
  ]
}