{
  "description": "sample Github_easy/o17637.json",
  "meta": {
    "full_size": 279,
    "stripped_size": 279,
    "features": [
      "$ref",
      "@siblingKeys",
      "additionalProperties",
      "additionalProperties:object"
    ],
    "raw_features": [
      "$schema",
      "definitions",
      "properties",
      "required",
      "type",
      "type:[]",
      "type:number",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "definitions": {
      "MyObject": {
        "type": "object",
        "properties": {
          "required": {
            "type": "string"
          },
          "optional": {
            "type": "number"
          }
        },
        "required": [
          "required"
        ],
        "additionalProperties": {
          "type": [
            "string",
            "number"
          ]
        }
      }
    },
    "$ref": "#/definitions/MyObject"
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "required": "Hello, World!",
        "optional": 42,
        "additional": "This is an additional property"
      }
    },
    {
      "description": "llama-70b generated negative; focus on additionalProperties keyword with an object schema",
      "valid": false,
      "rust_error": "true is not of types \"number\", \"string\"",
      "python_error": "True is not of type 'string', 'number'\n\nFailed validating 'type' in schema['additionalProperties']:\n    {'type': ['string', 'number']}\n\nOn instance['additional']:\n    True",
      "data": {
        "required": "Hello, World!",
        "optional": 42,
        "additional": true
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "true is not of types \"number\", \"string\"",
      "python_error": "True is not of type 'string', 'number'\n\nFailed validating 'type' in schema['additionalProperties']:\n    {'type': ['string', 'number']}\n\nOn instance['invalid']:\n    True",
      "data": {
        "required": "Hello, World!",
        "optional": 42,
        "additional": "This is an additional property",
        "invalid": true
      }
    },
    {
      "description": "llama-70b generated negative; focus on additionalProperties keyword with an object schema",
      "valid": false,
      "rust_error": "{\"nested\":\"This is an additional property with a nested object\"} is not of types \"number\", \"string\"",
      "python_error": "{'nested': 'This is an additional property with a nested object'} is not of type 'string', 'number'\n\nFailed validating 'type' in schema['additionalProperties']:\n    {'type': ['string', 'number']}\n\nOn instance['additional']:\n    {'nested': 'This is an additional property with a nested object'}",
      "data": {
        "required": "Hello, World!",
        "optional": 42,
        "additional": {
          "nested": "This is an additional property with a nested object"
        }
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "required": "Hello, World!",
        "optional": 42,
        "extra": "This is an extra property"
      }
    },
    {
      "description": "llama-70b generated negative; focus on type keyword with an array of types",
      "valid": false,
      "rust_error": "null is not of types \"number\", \"string\"",
      "python_error": "None is not of type 'string', 'number'\n\nFailed validating 'type' in schema['additionalProperties']:\n    {'type': ['string', 'number']}\n\nOn instance['extra']:\n    None",
      "data": {
        "required": "Hello, World!",
        "optional": 42,
        "extra": null
      }
    },
    {
      "description": "llama-70b generated negative; focus on additionalProperties keyword with an object schema",
      "valid": false,
      "rust_error": "true is not of types \"number\", \"string\"",
      "python_error": "True is not of type 'string', 'number'\n\nFailed validating 'type' in schema['additionalProperties']:\n    {'type': ['string', 'number']}\n\nOn instance['extra']:\n    True",
      "data": {
        "required": "Hello, World!",
        "optional": 42,
        "extra": true
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "null is not of types \"number\", \"string\"",
      "python_error": "None is not of type 'string', 'number'\n\nFailed validating 'type' in schema['additionalProperties']:\n    {'type': ['string', 'number']}\n\nOn instance['extra']:\n    None",
      "data": {
        "required": "Hello, World!",
        "optional": 42,
        "extra": null
      }
    }
  ]
}