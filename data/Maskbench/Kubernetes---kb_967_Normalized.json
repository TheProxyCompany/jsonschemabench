{
  "description": "sample Kubernetes/kb_967_Normalized.json",
  "meta": {
    "full_size": 578,
    "stripped_size": 157,
    "features": [],
    "raw_features": [
      "properties",
      "required",
      "type",
      "type:[]",
      "type:null",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "description": "ServerAddressByClientCIDR helps the client to determine the server address that they should use, depending on the clientCIDR that they match.",
    "properties": {
      "clientCIDR": {
        "description": "The CIDR with which clients can match their IP to figure out the server address that they should use.",
        "type": [
          "string",
          "null"
        ]
      },
      "serverAddress": {
        "description": "Address of this server, suitable for a client that matches the above CIDR. This can be a hostname, hostname:port, IP or IP:port.",
        "type": [
          "string",
          "null"
        ]
      }
    },
    "required": [
      "clientCIDR",
      "serverAddress"
    ],
    "type": "object"
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "clientCIDR": "192.168.1.0/24",
        "serverAddress": "example.com:8080"
      }
    },
    {
      "description": "llama-70b generated negative; focus on type keyword with an array of types",
      "valid": false,
      "rust_error": "123 is not of types \"null\", \"string\"",
      "python_error": "123 is not of type 'string', 'null'\n\nFailed validating 'type' in schema['properties']['clientCIDR']:\n    {'description': 'The CIDR with which clients can match their IP to '\n                    'figure out the server address that they should use.',\n     'type': ['string', 'null']}\n\nOn instance['clientCIDR']:\n    123",
      "data": {
        "clientCIDR": 123,
        "serverAddress": "example.com:8080"
      }
    },
    {
      "description": "llama-70b generated negative; focus on type keyword with an array of types",
      "valid": false,
      "rust_error": "192.168 is not of types \"null\", \"string\"",
      "python_error": "192.168 is not of type 'string', 'null'\n\nFailed validating 'type' in schema['properties']['clientCIDR']:\n    {'description': 'The CIDR with which clients can match their IP to '\n                    'figure out the server address that they should use.',\n     'type': ['string', 'null']}\n\nOn instance['clientCIDR']:\n    192.168",
      "data": {
        "clientCIDR": 192.168,
        "serverAddress": "example.com:8080"
      }
    }
  ]
}