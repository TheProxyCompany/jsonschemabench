{
  "description": "sample Github_easy/o36270.json",
  "meta": {
    "full_size": 997,
    "stripped_size": 220,
    "features": [
      "additionalProperties",
      "additionalProperties:object",
      "oneOf"
    ],
    "raw_features": [
      "$id",
      "$schema",
      "type",
      "type:boolean",
      "type:number",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "http://schemas.digitallinguistics.io/Tags-2.1.0.json",
    "title": "Tags",
    "type": "object",
    "description": "A tag is a piece of metadata that can be applied to almost any DLx object. The tags object contains a set of tags for this resource as pairs of attributes and values. For example, a researcher might tag a suffix with the attribute `person`, and a value of `3`, to indicate that the particular suffix is 3rd Person. If no value is needed, the value may also be set to `true` or `false` (but not `null`), however users are encouraged to use both attribute and value for every tag, since this helps identify the larger category that the tag value belongs to. Note: The Tags object does not have a `type` property.",
    "additionalProperties": {
      "title": "Tag",
      "description": "A single tag, as an attribute-value pair.",
      "oneOf": [
        {
          "type": "string"
        },
        {
          "type": "boolean"
        },
        {
          "type": "number"
        }
      ]
    },
    "examples": [
      {
        "role": "subject",
        "activated": true
      },
      {
        "VOT": 0.012
      }
    ]
  },
  "tests": [
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "person": 3,
        "activated": true,
        "VOT": 0.012,
        "case": "nominative"
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "person": 3,
        "activated": true,
        "VOT": 0.012,
        "isNoun": false,
        "partOfSpeech": "verb"
      }
    },
    {
      "description": "llama-70b generated negative; focus on oneOf keyword",
      "valid": false,
      "rust_error": "null is not valid under any of the schemas listed in the 'oneOf' keyword",
      "python_error": "None is not valid under any of the given schemas\n\nFailed validating 'oneOf' in schema['additionalProperties']:\n    {'title': 'Tag',\n     'description': 'A single tag, as an attribute-value pair.',\n     'oneOf': [{'type': 'string'}, {'type': 'boolean'}, {'type': 'number'}]}\n\nOn instance['nullValue']:\n    None",
      "data": {
        "person": 3,
        "activated": true,
        "VOT": 0.012,
        "isNoun": false,
        "partOfSpeech": "verb",
        "nullValue": null
      }
    },
    {
      "description": "llama-70b generated negative; focus on additionalProperties keyword with an object schema",
      "valid": false,
      "rust_error": "{\"nestedProp\":\"value\"} is not valid under any of the schemas listed in the 'oneOf' keyword",
      "python_error": "{'nestedProp': 'value'} is not valid under any of the given schemas\n\nFailed validating 'oneOf' in schema['additionalProperties']:\n    {'title': 'Tag',\n     'description': 'A single tag, as an attribute-value pair.',\n     'oneOf': [{'type': 'string'}, {'type': 'boolean'}, {'type': 'number'}]}\n\nOn instance['invalidProperty']:\n    {'nestedProp': 'value'}",
      "data": {
        "person": 3,
        "activated": true,
        "VOT": 0.012,
        "isNoun": false,
        "partOfSpeech": "verb",
        "invalidProperty": {
          "nestedProp": "value"
        }
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "null is not valid under any of the schemas listed in the 'oneOf' keyword",
      "python_error": "None is not valid under any of the given schemas\n\nFailed validating 'oneOf' in schema['additionalProperties']:\n    {'title': 'Tag',\n     'description': 'A single tag, as an attribute-value pair.',\n     'oneOf': [{'type': 'string'}, {'type': 'boolean'}, {'type': 'number'}]}\n\nOn instance['partOfSpeech']:\n    None",
      "data": {
        "person": 3,
        "activated": true,
        "VOT": 0.012,
        "isNoun": false,
        "partOfSpeech": null,
        "emptyString": ""
      }
    }
  ]
}