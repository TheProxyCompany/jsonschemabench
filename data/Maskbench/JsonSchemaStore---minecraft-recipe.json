{
  "description": "sample JsonSchemaStore/minecraft-recipe.json",
  "meta": {
    "full_size": 6244,
    "stripped_size": 3717,
    "features": [
      "$ref",
      "@minmaxItems",
      "@minmaxLength",
      "@siblingKeys",
      "additionalProperties",
      "additionalProperties:object",
      "allOf",
      "anyOf",
      "const",
      "enum",
      "if",
      "items",
      "oneOf",
      "then"
    ],
    "raw_features": [
      "$id",
      "$schema",
      "definitions",
      "maxItems",
      "maxLength",
      "minItems",
      "properties",
      "type",
      "type:[]",
      "type:array",
      "type:boolean",
      "type:integer",
      "type:number",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$comment": "https://minecraft.fandom.com/wiki/Recipe#JSON_format",
    "$id": "https://json.schemastore.org/minecraft-recipe.json",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "allOf": [
      {
        "if": {
          "properties": {
            "type": {
              "const": "minecraft:blasting"
            }
          }
        },
        "then": {
          "description": "Represents a recipe in a blast furnace.",
          "anyOf": [
            {
              "$ref": "#/definitions/tagsCommonToAllRecipes"
            },
            {
              "$ref": "#/definitions/tagsCommonToAllCookingRecipes"
            },
            {
              "$ref": "#/definitions/cookingRecipeCategory"
            }
          ]
        }
      },
      {
        "if": {
          "properties": {
            "type": {
              "const": "minecraft:campfire_cooking"
            }
          }
        },
        "then": {
          "description": "Represents a recipe in a campfire.",
          "anyOf": [
            {
              "$ref": "#/definitions/tagsCommonToAllRecipes"
            },
            {
              "$ref": "#/definitions/tagsCommonToAllCookingRecipes"
            },
            {
              "$ref": "#/definitions/cookingRecipeCategory"
            }
          ]
        }
      },
      {
        "if": {
          "properties": {
            "type": {
              "const": "minecraft:crafting_shaped"
            }
          }
        },
        "then": {
          "description": "Represents a shaped crafting recipe in a crafting table.",
          "anyOf": [
            {
              "$ref": "#/definitions/tagsCommonToAllRecipes"
            },
            {
              "$ref": "#/definitions/commonRecipeCategory"
            }
          ],
          "properties": {
            "pattern": {
              "description": "A list of single-character keys used to describe a pattern for shaped crafting.",
              "type": "array",
              "items": {
                "type": "string",
                "maxLength": 3
              },
              "maxItems": 3
            },
            "key": {
              "title": "key",
              "description": "All keys used for this shaped crafting recipe.",
              "additionalProperties": {
                "type": [
                  "object",
                  "array"
                ],
                "description": "The ingredient corresponding to this key.",
                "properties": {
                  "item": {
                    "description": "An item ID.",
                    "type": "string"
                  },
                  "tag": {
                    "description": "An item tag.",
                    "type": "string"
                  }
                },
                "items": {
                  "properties": {
                    "item": {
                      "description": "An item ID.",
                      "type": "string"
                    },
                    "tag": {
                      "description": "An item tag.",
                      "type": "string"
                    }
                  }
                }
              }
            },
            "result": {
              "$ref": "#/definitions/result"
            }
          }
        }
      },
      {
        "if": {
          "properties": {
            "type": {
              "const": "minecraft:crafting_shapeless"
            }
          }
        },
        "then": {
          "description": "Represents a shapeless crafting recipe in a crafting table.",
          "anyOf": [
            {
              "$ref": "#/definitions/tagsCommonToAllRecipes"
            },
            {
              "$ref": "#/definitions/commonRecipeCategory"
            }
          ],
          "properties": {
            "ingredients": {
              "description": "A list of entries for this shapeless crafting recipe.",
              "type": "array",
              "items": {
                "oneOf": [
                  {
                    "title": "ingredient",
                    "description": "An entry made of a single ingredient.",
                    "type": "object",
                    "$ref": "#/definitions/ingredient"
                  },
                  {
                    "description": "An entry made of a list of acceptable ingredients.",
                    "type": "array",
                    "minItems": 1,
                    "maxItems": 9,
                    "items": {
                      "$ref": "#/definitions/ingredient"
                    }
                  }
                ]
              }
            },
            "result": {
              "$ref": "#/definitions/result"
            }
          }
        }
      },
      {
        "if": {
          "properties": {
            "type": {
              "const": "minecraft:smelting"
            }
          }
        },
        "then": {
          "description": "Represents a recipe in a furnace.",
          "anyOf": [
            {
              "$ref": "#/definitions/tagsCommonToAllRecipes"
            },
            {
              "$ref": "#/definitions/tagsCommonToAllCookingRecipes"
            },
            {
              "$ref": "#/definitions/cookingRecipeCategory"
            }
          ]
        }
      },
      {
        "if": {
          "properties": {
            "type": {
              "const": "minecraft:smithing"
            }
          }
        },
        "then": {
          "description": "Represents a recipe in a smithing table.",
          "$ref": "#/definitions/tagsCommonToAllRecipes",
          "properties": {
            "base": {
              "title": "base",
              "description": "Ingredient specifying an item to be upgraded.",
              "$ref": "#/definitions/item"
            },
            "addition": {
              "title": "addition",
              "$ref": "#/definitions/item"
            },
            "result": {
              "title": "result",
              "type": "object"
            }
          }
        }
      },
      {
        "if": {
          "properties": {
            "type": {
              "const": "minecraft:smoking"
            }
          }
        },
        "then": {
          "description": "Represents a recipe in a smoker.",
          "anyOf": [
            {
              "$ref": "#/definitions/tagsCommonToAllRecipes"
            },
            {
              "$ref": "#/definitions/tagsCommonToAllCookingRecipes"
            },
            {
              "$ref": "#/definitions/cookingRecipeCategory"
            }
          ]
        }
      },
      {
        "if": {
          "properties": {
            "type": {
              "const": "minecraft:stonecutting"
            }
          }
        },
        "then": {
          "description": "Represents a recipe in a stonecutter.",
          "$ref": "#/definitions/tagsCommonToAllRecipes",
          "oneOf": [
            {
              "title": "ingredient",
              "description": "The ingredient for the recipe.",
              "$ref": "#/definitions/item"
            },
            {
              "title": "ingredient",
              "description": "The list of ingredients for the recipe.",
              "type": "array",
              "items": {
                "title": "ingredient",
                "$ref": "#/definitions/item"
              }
            }
          ],
          "properties": {
            "result": {
              "description": "An item ID. The output item of the recipe.",
              "type": "string"
            },
            "count": {
              "description": "The amount of the output item.",
              "type": "integer"
            }
          }
        }
      }
    ],
    "definitions": {
      "item": {
        "type": "object",
        "properties": {
          "item": {
            "description": "An item ID.",
            "type": "string"
          },
          "tag": {
            "description": "An item tag.",
            "type": "string"
          }
        }
      },
      "ingredient": {
        "title": "ingredient",
        "description": "An acceptable ingredient.",
        "type": "object",
        "$ref": "#/definitions/item"
      },
      "tagsCommonToAllRecipes": {
        "type": "object",
        "properties": {
          "type": {
            "description": "A namespaced ID indicating the type of serializer of the recipe.",
            "type": "string"
          },
          "group": {
            "description": "A string identifier. Used to group multiple recipes together in the recipe book.",
            "type": "string"
          },
          "show_notification": {
            "description": "If a notification is shown when the recipe is unlocked.",
            "type": "boolean"
          }
        }
      },
      "tagsCommonToAllCookingRecipes": {
        "type": "object",
        "properties": {
          "ingredient": {
            "title": "ingredients",
            "description": "The ingredients.",
            "type": [
              "object",
              "array"
            ],
            "$ref": "#/definitions/ingredient",
            "items": {
              "$ref": "#/definitions/ingredient"
            }
          },
          "result": {
            "description": "An item ID. The output item of the recipe.",
            "type": "string"
          },
          "experience": {
            "description": "The output experience of the recipe.",
            "type": "number"
          },
          "cookingtime": {
            "description": "The cook time of the recipe in ticks.",
            "type": "integer"
          }
        }
      },
      "commonRecipeCategory": {
        "title": "category",
        "description": "Category of common recipes (in recipe book).",
        "type": "object",
        "properties": {
          "category": {
            "type": "string",
            "enum": [
              "building",
              "redstone",
              "equipment",
              "misc"
            ]
          }
        }
      },
      "cookingRecipeCategory": {
        "title": "category",
        "description": "Category of cooking recipes (in recipe book).",
        "type": "object",
        "properties": {
          "category": {
            "type": "string",
            "enum": [
              "food",
              "blocks",
              "misc "
            ]
          }
        }
      },
      "result": {
        "title": "result",
        "description": "The output item of the recipe.",
        "type": "object",
        "properties": {
          "count": {
            "description": "The amount of the item.",
            "type": "integer",
            "default": 1
          },
          "item": {
            "description": "An item ID.",
            "type": "string"
          }
        }
      }
    },
    "description": "Configuration file defining a recipe for a data pack for Minecraft.",
    "properties": {
      "type": {
        "description": "The type of recipe.",
        "type": "string",
        "enum": [
          "minecraft:blasting",
          "minecraft:campfire_cooking",
          "minecraft:crafting_shaped",
          "minecraft:crafting_shapeless",
          "minecraft:smelting",
          "minecraft:smithing",
          "minecraft:smoking",
          "minecraft:stonecutting"
        ]
      }
    },
    "title": "minecraft data pack recipe",
    "type": "object"
  },
  "tests": [
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "type": "minecraft:crafting_shaped",
        "pattern": [
          "X X",
          " X ",
          "X X"
        ],
        "key": {
          "X": {
            "item": "minecraft:stone"
          }
        },
        "result": {
          "item": "minecraft:stone_slab",
          "count": 4
        }
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "type": "minecraft:crafting_shaped",
        "pattern": [
          " X ",
          "X X",
          " X "
        ],
        "key": {
          "X": {
            "item": "minecraft:stone"
          }
        },
        "result": {
          "item": "minecraft:stone_slab",
          "count": 4
        },
        "group": "stone_slab"
      }
    },
    {
      "description": "llama-70b generated negative; focus on maxLength keyword",
      "valid": false,
      "rust_error": "\" XXX\" is longer than 3 characters",
      "python_error": "' XXX' is too long\n\nFailed validating 'maxLength' in schema['allOf'][2]['then']['properties']['pattern']['items']:\n    {'type': 'string', 'maxLength': 3}\n\nOn instance['pattern'][2]:\n    ' XXX'",
      "data": {
        "type": "minecraft:crafting_shaped",
        "pattern": [
          " X ",
          "X X",
          " XXX"
        ],
        "key": {
          "X": {
            "item": "minecraft:stone"
          }
        },
        "result": {
          "item": "minecraft:stone_slab",
          "count": 4
        },
        "group": "stone_slab"
      }
    },
    {
      "description": "llama-70b generated negative; focus on type keyword with an array of types",
      "valid": false,
      "rust_error": "[\"minecraft:stone\",\"minecraft:dirt\"] is not of type \"string\"",
      "python_error": "['minecraft:stone', 'minecraft:dirt'] is not of type 'string'\n\nFailed validating 'type' in schema['allOf'][2]['then']['properties']['key']['additionalProperties']['properties']['item']:\n    {'description': 'An item ID.', 'type': 'string'}\n\nOn instance['key']['X']['item']:\n    ['minecraft:stone', 'minecraft:dirt']",
      "data": {
        "type": "minecraft:crafting_shaped",
        "pattern": [
          " X ",
          "X X",
          " X "
        ],
        "key": {
          "X": {
            "item": [
              "minecraft:stone",
              "minecraft:dirt"
            ]
          }
        },
        "result": {
          "count": 4,
          "tag": "minecraft:slabs"
        },
        "group": "stone_slab",
        "another_group": "stone_slab"
      }
    },
    {
      "description": "llama-70b generated negative; focus on allOf keyword",
      "valid": false,
      "rust_error": "\" XXX \" is longer than 3 characters",
      "python_error": "'X  X' is too long\n\nFailed validating 'maxLength' in schema['allOf'][2]['then']['properties']['pattern']['items']:\n    {'type': 'string', 'maxLength': 3}\n\nOn instance['pattern'][2]:\n    'X  X'",
      "data": {
        "type": "minecraft:crafting_shaped",
        "pattern": [
          " XXX ",
          "XXX",
          "X  X"
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on if keyword or then keyword",
      "valid": false,
      "rust_error": "\"4\" is not of type \"integer\"",
      "python_error": "'4' is not of type 'integer'\n\nFailed validating 'type' in schema['allOf'][2]['then']['properties']['result']['properties']['count']:\n    {'description': 'The amount of the item.',\n     'type': 'integer',\n     'default': 1}\n\nOn instance['result']['count']:\n    '4'",
      "data": {
        "type": "minecraft:crafting_shaped",
        "pattern": [
          " X ",
          "X X",
          " X "
        ],
        "key": {
          "X": {
            "item": "minecraft:stone"
          }
        },
        "result": {
          "item": "minecraft:stone_slab",
          "count": "4"
        },
        "group": "stone_slab",
        "addition": "Invalid item added here",
        "cookingtime": 100,
        "experience": 0,
        "ingredient": "Invalid ingredient added here",
        "base": "Invalid base added here",
        "show_notification": true,
        "category": "Invalid category added here",
        "ingredients": "Invalid ingredients added here",
        "items": "Invalid items added here",
        "tag": "Invalid tag added here",
        "oneOf": "Invalid oneOf added here",
        "anyOf": "Invalid anyOf added here",
        "allOf": "Invalid allOf added here",
        "type2": "Invalid type2 added here",
        "type3": "Invalid type3 added here",
        "type4": "Invalid type4 added here",
        "type5": "Invalid type5 added here",
        "type6": "Invalid type6 added here",
        "type7": "Invalid type7 added here",
        "type8": "Invalid type8 added here",
        "type9": "Invalid type9 added here",
        "type10": "Invalid type10 added here",
        "not": "Invalid not added here",
        "const": "Invalid const added here",
        "enum": "Invalid enum added here",
        "dependencies": "Invalid dependencies added here",
        "properties": "Invalid properties added here",
        "pattern2": "Invalid pattern2 added here",
        "pattern3": "Invalid pattern3 added here",
        "pattern4": "Invalid pattern4 added here",
        "pattern5": "Invalid pattern5 added here",
        "pattern6": "Invalid pattern6 added here",
        "pattern7": "Invalid pattern7 added here",
        "pattern8": "Invalid pattern8 added here",
        "pattern9": "Invalid pattern9 added here",
        "pattern10": "Invalid pattern10 added here",
        "key2": "Invalid key2 added here",
        "key3": "Invalid key3 added here",
        "key4": "Invalid key4 added here",
        "key5": "Invalid key5 added here",
        "key6": "Invalid key6 added here",
        "key7": "Invalid key7 added here",
        "key8": "Invalid key8 added here",
        "key9": "Invalid key9 added here",
        "key10": "Invalid key10 added here",
        "result2": "Invalid result2 added here",
        "result3": "Invalid result3 added here",
        "result4": "Invalid result4 added here",
        "result5": "Invalid result5 added here",
        "result6": "Invalid result6 added here",
        "result7": "Invalid result7 added here",
        "result8": "Invalid result8 added here",
        "result9": "Invalid result9 added here",
        "result10": "Invalid result10 added here",
        "group2": "Invalid group2 added here",
        "group3": "Invalid group3 added here",
        "group4": "Invalid group4 added here",
        "group5": "Invalid group5 added here",
        "group6": "Invalid group6 added here",
        "group7": "Invalid group7 added here",
        "group8": "Invalid group8 added here",
        "group9": "Invalid group9 added here",
        "group10": "Invalid group10 added here",
        "category2": "Invalid category2 added here",
        "category3": "Invalid category3 added here",
        "category4": "Invalid category4 added here",
        "category5": "Invalid category5 added here",
        "category6": "Invalid category6 added here",
        "category7": "Invalid category7 added here",
        "category8": "Invalid category8 added here",
        "category9": "Invalid category9 added here",
        "category10": "Invalid category10 added here",
        "additionalProperties": "Invalid additionalProperties added here",
        "items2": "Invalid items2 added here",
        "properties2": "Invalid properties2 added here",
        "properties3": "Invalid properties3 added here",
        "properties4": "Invalid properties4 added here",
        "properties5": "Invalid properties5 added here",
        "properties6": "Invalid properties6 added here",
        "properties7": "Invalid properties7 added here",
        "properties8": "Invalid properties8 added here",
        "properties9": "Invalid properties9 added here",
        "properties10": "Invalid properties10 added here",
        "allOf2": "Invalid allOf2 added here",
        "allOf3": "Invalid allOf3 added here",
        "allOf4": "Invalid allOf4 added here",
        "allOf5": "Invalid allOf5 added here",
        "allOf6": "Invalid allOf6 added here",
        "allOf7": "Invalid allOf7 added here",
        "allOf8": "Invalid allOf8 added here",
        "allOf9": "Invalid allOf9 added here",
        "allOf10": "Invalid allOf10 added here",
        "anyOf2": "Invalid anyOf2 added here",
        "anyOf3": "Invalid anyOf3 added here",
        "anyOf4": "Invalid anyOf4 added here",
        "anyOf5": "Invalid anyOf5 added here",
        "anyOf6": "Invalid anyOf6 added here",
        "anyOf7": "Invalid anyOf7 added here",
        "anyOf8": "Invalid anyOf8 added here",
        "anyOf9": "Invalid anyOf9 added here",
        "anyOf10": "Invalid anyOf10 added here",
        "oneOf2": "Invalid oneOf2 added here",
        "oneOf3": "Invalid oneOf3 added here",
        "oneOf4": "Invalid oneOf4 added here",
        "oneOf5": "Invalid oneOf5 added here",
        "oneOf6": "Invalid oneOf6 added here",
        "oneOf7": "Invalid oneOf7 added here",
        "oneOf8": "Invalid oneOf8 added here",
        "oneOf9": "Invalid oneOf9 added here",
        "oneOf10": "Invalid oneOf10 added here",
        "not2": "Invalid not2 added here",
        "not3": "Invalid not3 added here",
        "not4": "Invalid not4 added here",
        "not5": "Invalid not5 added here",
        "not6": "Invalid not6 added here",
        "not7": "Invalid not7 added here",
        "not8": "Invalid not8 added here",
        "not9": "Invalid not9 added here",
        "not10": "Invalid not10 added here",
        "const2": "Invalid const2 added here",
        "const3": "Invalid const3 added here",
        "const4": "Invalid const4 added here",
        "const5": "Invalid const5 added here",
        "const6": "Invalid const6 added here",
        "const7": "Invalid const7 added here",
        "const8": "Invalid const8 added here",
        "const9": "Invalid const9 added here",
        "const10": "Invalid const10 added here",
        "enum2": "Invalid enum2 added here",
        "enum3": "Invalid enum3 added here",
        "enum4": "Invalid enum4 added here",
        "enum5": "Invalid enum5 added here",
        "enum6": "Invalid enum6 added here",
        "enum7": "Invalid enum7 added here",
        "enum8": "Invalid enum8 added here",
        "enum9": "Invalid enum9 added here",
        "enum10": "Invalid enum10 added here",
        "dependencies2": "Invalid dependencies2 added here",
        "dependencies3": "Invalid dependencies3 added here",
        "dependencies4": "Invalid dependencies4 added here",
        "dependencies5": "Invalid dependencies5 added here",
        "dependencies6": "Invalid dependencies6 added here",
        "dependencies7": "Invalid dependencies7 added here",
        "dependencies8": "Invalid dependencies8 added here",
        "dependencies9": "Invalid dependencies9 added here",
        "dependencies10": "Invalid dependencies10 added here",
        "title2": "Invalid title2 added here",
        "title3": "Invalid title3 added here",
        "title4": "Invalid title4 added here",
        "title5": "Invalid title5 added here",
        "title6": "Invalid title6 added here",
        "title7": "Invalid title7 added here",
        "title8": "Invalid title8 added here",
        "title9": "Invalid title9 added here",
        "title10": "Invalid title10 added here",
        "description2": "Invalid description2 added here",
        "description3": "Invalid description3 added here",
        "description4": "Invalid description4 added here",
        "description5": "Invalid description5 added here",
        "description6": "Invalid description6 added here",
        "description7": "Invalid description7 added here",
        "description8": "Invalid description8 added here",
        "description9": "Invalid description9 added here",
        "description10": "Invalid description10 added here",
        "if2": "Invalid if2 added here",
        "if3": "Invalid if3 added here",
        "if4": "Invalid if4 added here",
        "if5": "Invalid if5 added here",
        "if6": "Invalid if6 added here",
        "if7": "Invalid if7 added here",
        "if8": "Invalid if8 added here",
        "if9": "Invalid if9 added here",
        "if10": "Invalid if10 added here",
        "then2": "Invalid then2 added here",
        "then3": "Invalid then3 added here",
        "then4": "Invalid then4 added here",
        "then5": "Invalid then5 added here",
        "then6": "Invalid then6 added here",
        "then7": "Invalid then7 added here",
        "then8": "Invalid then8 added here",
        "then9": "Invalid then9 added here",
        "then10": "Invalid then10 added here",
        "else2": "Invalid else2 added here",
        "else3": "Invalid else3 added here",
        "else4": "Invalid else4 added here",
        "else5": "Invalid else5 added here",
        "else6": "Invalid else6 added here",
        "else7": "Invalid else7 added here",
        "else8": "Invalid else8 added here",
        "else9": "Invalid else9 added here",
        "else10": "Invalid else10 added here",
        "dependenciesSchemas": "Invalid dependenciesSchemas added here",
        "dependenciesSchemas2": "Invalid dependenciesSchemas2 added here",
        "dependenciesSchemas3": "Invalid dependenciesSchemas3 added here",
        "dependenciesSchemas4": "Invalid dependenciesSchemas4 added here",
        "dependenciesSchemas5": "Invalid dependenciesSchemas5 added here",
        "dependenciesSchemas6": "Invalid dependenciesSchemas6 added here",
        "dependenciesSchemas7": "Invalid dependenciesSchemas7 added here",
        "dependenciesSchemas8": "Invalid dependenciesSchemas8 added here",
        "dependenciesSchemas9": "Invalid dependenciesSchemas9 added here",
        "dependenciesSchemas10": "Invalid dependenciesSchemas10 added here"
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "[\" X \",\"X X\",\" X \",\"X\"] has more than 3 items",
      "python_error": "[' X ', 'X X', ' X ', 'X'] is too long\n\nFailed validating 'maxItems' in schema['allOf'][2]['then']['properties']['pattern']:\n    {'description': 'A list of single-character keys used to describe a '\n                    'pattern for shaped crafting.',\n     'type': 'array',\n     'items': {'type': 'string', 'maxLength': 3},\n     'maxItems': 3}\n\nOn instance['pattern']:\n    [' X ', 'X X', ' X ', 'X']",
      "data": {
        "type": "minecraft:crafting_shaped",
        "pattern": [
          " X ",
          "X X",
          " X ",
          "X"
        ],
        "key": {
          "X": {
            "item": "minecraft:stone"
          }
        },
        "result": {
          "item": "minecraft:stone_slab",
          "count": 4
        },
        "group": "stone_slab"
      }
    }
  ]
}