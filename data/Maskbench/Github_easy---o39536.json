{
  "description": "sample Github_easy/o39536.json",
  "meta": {
    "full_size": 563,
    "stripped_size": 292,
    "features": [
      "additionalProperties",
      "additionalProperties:object",
      "enum",
      "format",
      "format:uri",
      "items"
    ],
    "raw_features": [
      "properties",
      "type",
      "type:array",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "additionalProperties": {
      "additionalProperties": {
        "description": "predicate (subject object)",
        "items": {
          "description": "object (value array)",
          "properties": {
            "datatype": {
              "format": "uri",
              "type": "string"
            },
            "lang": {
              "description": "See ftp://ftp.isi.edu/in-notes/bcp/bcp47.txt",
              "type": "string"
            },
            "type": {
              "enum": [
                "uri",
                "bnode",
                "literal"
              ],
              "type": "string"
            },
            "value": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "type": "array"
      },
      "description": "subject (root object)",
      "type": "object"
    },
    "description": "RDF JSON definition, see https://github.com/iand/rdf-json",
    "type": "object",
    "version": "0.3.0"
  },
  "tests": [
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "http://example.org/subject1": {
          "http://example.org/predicate1": [
            {
              "datatype": "http://www.w3.org/2001/XMLSchema#integer",
              "type": "literal",
              "value": "42"
            }
          ],
          "http://example.org/predicate2": [
            {
              "lang": "en",
              "type": "literal",
              "value": "Hello, World!"
            }
          ],
          "http://example.org/predicate3": [
            {
              "type": "uri",
              "value": "http://example.org/object1"
            }
          ]
        },
        "http://example.org/subject2": {
          "http://example.org/predicate4": [
            {
              "datatype": "http://www.w3.org/2001/XMLSchema#boolean",
              "type": "literal",
              "value": "true"
            }
          ]
        }
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "http://example.org/subject1": {
          "http://example.org/predicate1": [
            {
              "datatype": "http://www.w3.org/2001/XMLSchema#integer",
              "type": "literal",
              "value": "42"
            }
          ],
          "http://example.org/predicate2": [
            {
              "lang": "en",
              "type": "literal",
              "value": "Hello, World!"
            }
          ],
          "http://example.org/predicate3": [
            {
              "type": "uri",
              "value": "http://example.org/object1"
            }
          ]
        },
        "http://example.org/subject2": {
          "http://example.org/predicate4": [
            {
              "datatype": "http://www.w3.org/2001/XMLSchema#boolean",
              "type": "literal",
              "value": "true"
            }
          ],
          "http://example.org/predicate5": [
            {
              "lang": "fr",
              "type": "literal",
              "value": "Bonjour, monde!"
            }
          ],
          "http://example.org/predicate6": [
            {
              "type": "bnode",
              "value": "bnode:1234567890"
            }
          ]
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on format keyword",
      "valid": false,
      "rust_error": "\" invalid_uri\" is not a \"uri\"",
      "python_error": "' invalid_uri' is not a 'uri'\n\nFailed validating 'format' in schema['additionalProperties']['additionalProperties']['items']['properties']['datatype']:\n    {'format': 'uri', 'type': 'string'}\n\nOn instance['http://example.org/subject1']['http://example.org/predicate1'][0]['datatype']:\n    ' invalid_uri'",
      "data": {
        "http://example.org/subject1": {
          "http://example.org/predicate1": [
            {
              "datatype": " invalid_uri",
              "type": "literal",
              "value": "42"
            }
          ],
          "http://example.org/predicate2": [
            {
              "lang": "en",
              "type": "literal",
              "value": "Hello, World!"
            }
          ],
          "http://example.org/predicate3": [
            {
              "type": "uri",
              "value": "http://example.org/object1"
            }
          ]
        },
        "http://example.org/subject2": {
          "http://example.org/predicate4": [
            {
              "datatype": "http://www.w3.org/2001/XMLSchema#boolean",
              "type": "literal",
              "value": "true"
            }
          ],
          "http://example.org/predicate5": [
            {
              "lang": "fr",
              "type": "literal",
              "value": "Bonjour, monde!"
            }
          ],
          "http://example.org/predicate6": [
            {
              "type": "bnode",
              "value": "bnode:1234567890"
            }
          ]
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on additionalProperties keyword with an object schema",
      "valid": false,
      "rust_error": "\"extra property\" is not of type \"object\"",
      "python_error": "'extra property' is not of type 'object'\n\nFailed validating 'type' in schema['additionalProperties']['additionalProperties']['items']:\n    {'description': 'object (value array)',\n     'properties': {'datatype': {'format': 'uri', 'type': 'string'},\n                    'lang': {'description': 'See '\n                                            'ftp://ftp.isi.edu/in-notes/bcp/bcp47.txt',\n                             'type': 'string'},\n                    'type': {'enum': ['uri', 'bnode', 'literal'],\n                             'type': 'string'},\n                    'value': {'type': 'string'}},\n     'type': 'object'}\n\nOn instance['http://example.org/subject1']['http://example.org/predicate3'][1]:\n    'extra property'",
      "data": {
        "http://example.org/subject1": {
          "http://example.org/predicate1": [
            {
              "datatype": "http://www.w3.org/2001/XMLSchema#integer",
              "type": "literal",
              "value": "42"
            }
          ],
          "http://example.org/predicate2": [
            {
              "lang": "en",
              "type": "literal",
              "value": "Hello, World!"
            }
          ],
          "http://example.org/predicate3": [
            {
              "type": "uri",
              "value": "http://example.org/object1"
            },
            "extra property",
            {
              "type": "uri",
              "value": "http://example.org/object2"
            }
          ]
        },
        "http://example.org/subject2": {
          "http://example.org/predicate4": [
            {
              "datatype": "http://www.w3.org/2001/XMLSchema#boolean",
              "type": "literal",
              "value": "true"
            }
          ],
          "http://example.org/predicate5": [
            {
              "lang": "fr",
              "type": "literal",
              "value": "Bonjour, monde!"
            }
          ],
          "http://example.org/predicate6": [
            {
              "type": "bnode",
              "value": "bnode:1234567890"
            }
          ]
        }
      }
    }
  ]
}