{
  "description": "sample JsonSchemaStore/utam-page-object.json",
  "meta": {
    "full_size": 11056,
    "stripped_size": 7938,
    "features": [
      "$ref",
      "@siblingKeys",
      "additionalProperties",
      "additionalProperties:object",
      "allOf",
      "anyOf",
      "const",
      "contains",
      "dependencies",
      "enum",
      "if",
      "items",
      "not",
      "oneOf",
      "then"
    ],
    "raw_features": [
      "$defs",
      "$id",
      "$schema",
      "_boolSchema",
      "definitions",
      "properties",
      "required",
      "type",
      "type:[]",
      "type:array",
      "type:boolean",
      "type:integer",
      "type:number",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$id": "https://json.schemastore.org/utam-page-object.json",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "allOf": [
      {
        "if": {
          "properties": {
            "interface": {
              "const": false
            }
          }
        },
        "then": {
          "$ref": "#/definitions/pageObject"
        }
      },
      {
        "if": {
          "properties": {
            "interface": {
              "const": true
            }
          },
          "required": [
            "interface"
          ]
        },
        "then": {
          "$ref": "#/definitions/pageObjectInterface"
        }
      }
    ],
    "definitions": {
      "pageObject": {
        "type": "object",
        "additionalProperties": false,
        "title": "Page Object",
        "description": "An object representing a page or a UI element in a web page",
        "properties": {
          "description": {
            "$ref": "#/definitions/rootDescription"
          },
          "root": {
            "$ref": "#/definitions/root"
          },
          "selector": {
            "$ref": "#/definitions/selector"
          },
          "exposeRootElement": {
            "$ref": "#/definitions/exposeRootElement"
          },
          "type": {
            "$ref": "#/definitions/type"
          },
          "implements": {
            "description": "reference to the interface implemented by the page object",
            "type": "string"
          },
          "profile": {
            "title": "Page Object Profile",
            "description": "list of profiles that can use this page object implementation.",
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "contains": {
                  "type": "string"
                }
              }
            }
          },
          "platform": {
            "title": "Page Object Platform",
            "description": "Declares the page context type (WebView or native).",
            "enum": [
              "web",
              "native"
            ],
            "default": "web"
          },
          "beforeLoad": {
            "title": "Preload Criteria",
            "description": "The beforeLoad array sets the criteria to be satisfied before the load method completes. If you don't specify a beforeLoad array, the load method finds a root element for a regular page object, or waits for the root element to be present for a root page object), by default.",
            "type": [
              "array"
            ],
            "items": {
              "allOf": [
                {
                  "$ref": "#/definitions/predicateStatement"
                },
                {
                  "properties": {
                    "element": {
                      "type": "string",
                      "enum": [
                        "document",
                        "root",
                        "navigation"
                      ]
                    }
                  }
                }
              ]
            }
          },
          "elements": {
            "$ref": "#/definitions/elementsArray"
          },
          "methods": {
            "title": "Methods",
            "description": "An array of methods performing actions on this page object's elements.",
            "type": "array",
            "items": {
              "$ref": "#/definitions/composeMethod"
            }
          },
          "shadow": {
            "title": "Shadow Boundary",
            "description": "A shadow boundary at the root of the page object.",
            "type": "object",
            "properties": {
              "elements": {
                "$ref": "#/definitions/elementsArray"
              }
            },
            "default": {
              "elements": []
            }
          },
          "metadata": {
            "$ref": "#/definitions/metadata"
          }
        },
        "dependencies": {
          "selector": [
            "root"
          ],
          "root": [
            "selector"
          ],
          "profile": [
            "implements"
          ]
        }
      },
      "pageObjectInterface": {
        "type": "object",
        "additionalProperties": false,
        "title": "Page Object Inferface",
        "description": "An interace to abstract page object APIs for page objects with similar structure and function.",
        "properties": {
          "interface": {
            "description": "Indicates that this page object describes an interface.",
            "type": "boolean",
            "default": false
          },
          "root": {
            "$ref": "#/definitions/root"
          },
          "exposeRootElement": {
            "$ref": "#/definitions/exposeRootElement"
          },
          "type": {
            "$ref": "#/definitions/type"
          },
          "methods": {
            "title": "Interface Methods",
            "description": "An array of method declarations that page objects implementing this interface must define.",
            "type": "array",
            "items": {
              "$ref": "#/definitions/interfaceMethod"
            }
          },
          "description": {
            "$ref": "#/definitions/rootDescription"
          },
          "metadata": {
            "$ref": "#/definitions/metadata"
          }
        }
      },
      "element": {
        "title": "Element",
        "description": "An interace to abstract page object APIs for page objects with similar structure and function.",
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "type": {
            "type": [
              "string",
              "array"
            ],
            "items": {
              "enum": [
                "actionable",
                "clickable",
                "editable",
                "draggable",
                "touchable"
              ]
            }
          },
          "selector": {
            "$ref": "#/definitions/selector"
          },
          "nullable": {
            "type": "boolean"
          },
          "shadow": {
            "type": "object",
            "properties": {
              "elements": {
                "$ref": "#/definitions/elementsArray"
              }
            }
          },
          "elements": {
            "$ref": "#/definitions/elementsArray"
          },
          "public": {
            "type": "boolean"
          },
          "filter": {
            "$ref": "#/definitions/filter"
          },
          "description": {
            "$ref": "#/definitions/methodDescription"
          }
        },
        "required": [
          "name"
        ],
        "additionalProperties": false
      },
      "elementsArray": {
        "title": "Elements",
        "description": "A nested tree of element objects.",
        "type": "array",
        "items": {
          "$ref": "#/definitions/element"
        }
      },
      "selector": {
        "title": "Selector",
        "description": "An object that locates an element or a list of elements at run time.",
        "type": "object",
        "$defs": {
          "args": {
            "description": "Parameters to the methods that access this element or its nested elements.",
            "type": "array",
            "items": {
              "$ref": "#/definitions/arg"
            }
          },
          "returnAll": {
            "description": "Returns a list of elements",
            "type": "boolean",
            "default": true
          }
        },
        "oneOf": [
          {
            "type": "object",
            "properties": {
              "css": {
                "description": "Standard CSS selector.",
                "type": "string"
              },
              "args": {
                "$ref": "#/definitions/selector/$defs/args"
              },
              "returnAll": {
                "$ref": "#/definitions/selector/$defs/returnAll"
              }
            },
            "required": [
              "css"
            ],
            "additionalProperties": false
          },
          {
            "type": "object",
            "properties": {
              "accessid": {
                "description": "Accessibility ID selector, a unique identifier for a UI element for Mobile Platform only.",
                "type": "string"
              },
              "args": {
                "$ref": "#/definitions/selector/$defs/args"
              },
              "returnAll": {
                "$ref": "#/definitions/selector/$defs/returnAll"
              }
            },
            "required": [
              "accessid"
            ],
            "additionalProperties": false
          },
          {
            "type": "object",
            "properties": {
              "classchain": {
                "description": "Class chain selector, a unique identifier for a window element from the root of the page for iOS platform only.",
                "type": "string"
              },
              "args": {
                "$ref": "#/definitions/selector/$defs/args"
              },
              "returnAll": {
                "$ref": "#/definitions/selector/$defs/returnAll"
              }
            },
            "required": [
              "classchain"
            ],
            "additionalProperties": false
          },
          {
            "type": "object",
            "properties": {
              "uiautomator": {
                "description": "A UIAutomator selector to enable search through UiSelectors for Android platform only",
                "type": "string"
              },
              "args": {
                "$ref": "#/definitions/selector/$defs/args"
              },
              "returnAll": {
                "$ref": "#/definitions/selector/$defs/returnAll"
              }
            },
            "required": [
              "uiautomator"
            ],
            "additionalProperties": false
          }
        ]
      },
      "pageObjectType": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "URI-like type value of the page object"
          }
        },
        "required": [
          "type"
        ],
        "additionalProperties": false
      },
      "filter": {
        "type": "object",
        "properties": {
          "args": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/arg"
            }
          },
          "apply": {
            "type": "string"
          },
          "matcher": {
            "$ref": "#/definitions/matcher"
          },
          "findFirst": {
            "description": "Return only the first match result.",
            "type": "boolean",
            "default": true
          }
        },
        "additionalProperties": false
      },
      "matcher": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "isTrue",
              "isFalse",
              "notNull",
              "stringContains",
              "stringEquals"
            ]
          },
          "args": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/arg"
            }
          }
        },
        "additionalProperties": false
      },
      "interfaceMethod": {
        "title": "Interface Method",
        "description": "A declarative, interface method definition.",
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "args": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/arg"
            }
          },
          "returnType": {
            "type": [
              "string",
              "array"
            ],
            "items": {
              "enum": [
                "actionable",
                "clickable",
                "editable",
                "draggable",
                "touchable"
              ]
            }
          },
          "returnAll": {
            "type": "boolean",
            "default": false
          },
          "description": {
            "$ref": "#/definitions/methodDescription"
          }
        },
        "required": [
          "name"
        ],
        "dependencies": {
          "returnAll": [
            "returnType"
          ]
        },
        "additionalProperties": false
      },
      "composeMethod": {
        "title": "Method",
        "description": "A method definition, composed of element actions.",
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "args": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/arg"
            }
          },
          "compose": {
            "type": "array",
            "items": {
              "type": "object",
              "$ref": "#/definitions/action"
            }
          },
          "description": {
            "$ref": "#/definitions/methodDescription"
          }
        },
        "required": [
          "name",
          "compose"
        ],
        "additionalProperties": false
      },
      "action": {
        "type": "object",
        "title": "Element Action",
        "description": "An action to be performed on an element.",
        "additionalProperties": false,
        "properties": {
          "element": {
            "type": "string"
          },
          "apply": {
            "type": "string"
          },
          "applyExternal": {
            "type": "object"
          },
          "args": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/arg"
            }
          },
          "matcher": {
            "type": "object",
            "$ref": "#/definitions/matcher"
          },
          "chain": {
            "type": "boolean"
          },
          "returnType": {
            "type": "string",
            "default": "void"
          },
          "returnAll": {
            "type": "boolean",
            "default": false
          }
        },
        "allOf": [
          {
            "if": {
              "required": [
                "apply"
              ]
            },
            "then": {
              "not": {
                "required": [
                  "applyExternal"
                ]
              }
            }
          },
          {
            "if": {
              "required": [
                "applyExternal"
              ]
            },
            "then": {
              "properties": {
                "applyExternal": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "invoke": {
                      "type": "string"
                    },
                    "args": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/arg"
                      }
                    }
                  },
                  "required": [
                    "type",
                    "invoke"
                  ],
                  "additionalProperties": false
                }
              },
              "required": [
                "applyExternal"
              ],
              "not": {
                "required": [
                  "apply"
                ]
              }
            }
          }
        ]
      },
      "arg": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "string",
              "boolean",
              "number",
              "elementReference",
              "argumentReference",
              "function",
              "locator",
              "frame",
              "pageObject",
              "rootPageObject"
            ]
          },
          "value": {
            "type": [
              "integer",
              "string",
              "boolean",
              "number",
              "object"
            ]
          },
          "predicate": {
            "type": "array"
          },
          "args": {
            "description": "element reference can have nested literal args (hardcoded values for its getter)",
            "type": "array",
            "items": {
              "$ref": "#/definitions/arg"
            }
          },
          "description": {
            "type": "string"
          }
        },
        "oneOf": [
          {
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "string",
                  "boolean",
                  "number",
                  "locator",
                  "pageObject",
                  "rootPageObject",
                  "frame",
                  "argumentReference"
                ]
              },
              "name": {
                "type": [
                  "string"
                ]
              }
            },
            "required": [
              "type",
              "name"
            ]
          },
          {
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "locator",
                  "elementReference",
                  "pageObject",
                  "rootPageObject"
                ]
              },
              "value": {
                "anyOf": [
                  {
                    "type": [
                      "integer",
                      "string",
                      "boolean",
                      "number"
                    ]
                  },
                  {
                    "type": "object",
                    "$ref": "#/definitions/selector"
                  },
                  {
                    "type": "object",
                    "$ref": "#/definitions/pageObjectType"
                  }
                ]
              }
            },
            "required": [
              "value"
            ]
          },
          {
            "properties": {
              "type": {
                "const": "function"
              },
              "name": {
                "type": "string"
              },
              "predicate": {
                "type": [
                  "array"
                ],
                "items": {
                  "$ref": "#/definitions/predicateStatement"
                }
              }
            },
            "required": [
              "type",
              "predicate"
            ]
          }
        ],
        "additionalProperties": false
      },
      "predicateStatement": {
        "$ref": "#/definitions/action"
      },
      "root": {
        "type": "boolean",
        "default": false
      },
      "exposeRootElement": {
        "type": "boolean",
        "default": true
      },
      "name": {
        "type": "string"
      },
      "type": {
        "type": [
          "string",
          "array"
        ],
        "items": {
          "enum": [
            "actionable",
            "clickable",
            "editable",
            "draggable",
            "touchable"
          ]
        }
      },
      "shadow": {
        "type": "object",
        "title": "Shadow Root",
        "description": "A shadow boundary at the root of the page object.",
        "properties": {
          "elements": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/element"
            }
          }
        },
        "default": {
          "elements": []
        }
      },
      "elements": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/element"
        }
      },
      "methods": {
        "type": "array"
      },
      "rootDescription": {
        "title": "Root element description",
        "description": "summary of the functionality and use cases",
        "type": [
          "object",
          "string"
        ],
        "properties": {
          "text": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "author": {
            "type": "string"
          },
          "deprecated": {
            "type": "string"
          }
        },
        "required": [
          "text"
        ],
        "additionalProperties": false
      },
      "metadata": {
        "title": "Page Object Metadata",
        "description": "track miscellaneous information for the page object",
        "type": [
          "object"
        ],
        "properties": {
          "status": {
            "type": "string"
          },
          "teamOwner": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "methodDescription": {
        "title": "Method description",
        "description": "summary at the method or element level",
        "type": [
          "object",
          "string"
        ],
        "properties": {
          "text": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "return": {
            "type": "string"
          },
          "throws": {
            "type": "string"
          },
          "deprecated": {
            "type": "string"
          }
        },
        "required": [
          "text"
        ],
        "additionalProperties": false
      }
    },
    "properties": {
      "interface": {
        "type": "boolean"
      }
    },
    "title": "UI Test Automation Model Page Object",
    "type": "object"
  },
  "tests": [
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "description": "Example Page Object",
        "root": true,
        "selector": {
          "css": ".example-page-object"
        },
        "exposeRootElement": true,
        "type": "actionable",
        "platform": "web",
        "beforeLoad": [
          {
            "element": "root",
            "apply": "isVisible"
          }
        ],
        "elements": [
          {
            "name": "exampleButton",
            "type": "clickable",
            "selector": {
              "css": ".example-button"
            },
            "public": true,
            "description": "Example button"
          },
          {
            "name": "exampleInput",
            "type": "editable",
            "selector": {
              "css": ".example-input"
            },
            "public": true,
            "description": "Example input"
          }
        ],
        "methods": [
          {
            "name": "clickExampleButton",
            "args": [
              {
                "name": "exampleButton",
                "type": "elementReference",
                "value": {
                  "css": ".example-button"
                }
              }
            ],
            "compose": [
              {
                "element": "exampleButton",
                "apply": "click"
              }
            ],
            "description": "Clicks the example button"
          },
          {
            "name": "enterTextInExampleInput",
            "args": [
              {
                "name": "exampleInput",
                "type": "elementReference",
                "value": {
                  "css": ".example-input"
                }
              },
              {
                "name": "text",
                "type": "string"
              }
            ],
            "compose": [
              {
                "element": "exampleInput",
                "apply": "sendKeys",
                "args": [
                  {
                    "name": "text",
                    "type": "argumentReference"
                  }
                ]
              }
            ],
            "description": "Enters text in the example input"
          }
        ],
        "metadata": {
          "status": "stable",
          "teamOwner": "example-team"
        }
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "description": {
          "text": [
            "This is a sample page object for a login page."
          ]
        },
        "root": true,
        "selector": {
          "css": ".login-page"
        },
        "exposeRootElement": true,
        "type": "actionable",
        "platform": "web",
        "beforeLoad": [
          {
            "element": "root",
            "apply": "isVisible"
          }
        ],
        "elements": [
          {
            "name": "usernameInput",
            "type": "editable",
            "selector": {
              "css": "#username"
            }
          },
          {
            "name": "passwordInput",
            "type": "editable",
            "selector": {
              "css": "#password"
            }
          },
          {
            "name": "loginButton",
            "type": "clickable",
            "selector": {
              "css": "#login"
            }
          }
        ],
        "methods": [
          {
            "name": "login",
            "args": [
              {
                "name": "username",
                "type": "string"
              },
              {
                "name": "password",
                "type": "string"
              }
            ],
            "compose": [
              {
                "element": "usernameInput",
                "apply": "sendKeys",
                "args": [
                  {
                    "name": "username",
                    "type": "string"
                  }
                ]
              },
              {
                "element": "passwordInput",
                "apply": "sendKeys",
                "args": [
                  {
                    "name": "password",
                    "type": "string"
                  }
                ]
              },
              {
                "element": "loginButton",
                "apply": "click"
              }
            ]
          }
        ],
        "shadow": {
          "elements": []
        },
        "metadata": {
          "status": "stable",
          "teamOwner": "QA Team"
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on oneOf keyword",
      "valid": false,
      "rust_error": "{\"css\":\".login-page\",\"accessid\":\"#login\"} is not valid under any of the schemas listed in the 'oneOf' keyword",
      "python_error": "{'css': '.login-page', 'accessid': '#login'} is not valid under any of the given schemas\n\nFailed validating 'oneOf' in schema['allOf'][0]['then']['properties']['selector']:\n    {'title': 'Selector',\n     'description': 'An object that locates an element or a list of '\n                    'elements at run time.',\n     'type': 'object',\n     '$defs': {'args': {'description': 'Parameters to the methods that '\n                                       'access this element or its nested '\n                                       'elements.',\n                        'type': 'array',\n                        'items': {'$ref': '#/definitions/arg'}},\n               'returnAll': {'description': 'Returns a list of elements',\n                             'type': 'boolean',\n                             'default': True}},\n     'oneOf': [{'type': 'object',\n                'properties': {'css': {'description': 'Standard CSS '\n                                                      'selector.',\n                                       .. (3494 more)",
      "data": {
        "description": {
          "text": [
            "This is a sample page object for a login page."
          ]
        },
        "root": true,
        "selector": {
          "css": ".login-page",
          "accessid": "#login"
        },
        "exposeRootElement": true,
        "type": "actionable",
        "platform": "web",
        "beforeLoad": [
          {
            "element": "root",
            "apply": "isVisible"
          }
        ],
        "elements": [
          {
            "name": "usernameInput",
            "type": "editable",
            "selector": {
              "css": "#username"
            }
          },
          {
            "name": "passwordInput",
            "type": "editable",
            "selector": {
              "css": "#password"
            }
          },
          {
            "name": "loginButton",
            "type": "clickable",
            "selector": {
              "css": "#login"
            }
          }
        ],
        "methods": [
          {
            "name": "login",
            "args": [
              {
                "name": "username",
                "type": "string"
              },
              {
                "name": "password",
                "type": "string"
              }
            ],
            "compose": [
              {
                "element": "usernameInput",
                "apply": "sendKeys",
                "args": [
                  {
                    "name": "username",
                    "type": "string"
                  }
                ]
              },
              {
                "element": "passwordInput",
                "apply": "sendKeys",
                "args": [
                  {
                    "name": "password",
                    "type": "string"
                  }
                ]
              },
              {
                "element": "loginButton",
                "apply": "click"
              }
            ]
          }
        ],
        "shadow": {
          "elements": []
        },
        "metadata": {
          "status": "stable",
          "teamOwner": "QA Team"
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on type keyword with an array of types",
      "valid": false,
      "rust_error": "\"invalidType\" is not one of [\"actionable\",\"clickable\",\"editable\",\"draggable\",\"touchable\"]",
      "python_error": "'invalidType' is not one of ['actionable', 'clickable', 'editable', 'draggable', 'touchable']\n\nFailed validating 'enum' in schema['allOf'][0]['then']['properties']['type']['items']:\n    {'enum': ['actionable',\n              'clickable',\n              'editable',\n              'draggable',\n              'touchable']}\n\nOn instance['type'][5]:\n    'invalidType'",
      "data": {
        "description": {
          "text": [
            "This is a sample page object for a login page."
          ]
        },
        "root": true,
        "selector": {
          "css": ".login-page"
        },
        "exposeRootElement": true,
        "type": [
          "actionable",
          "clickable",
          "editable",
          "draggable",
          "touchable",
          "invalidType"
        ],
        "platform": "web",
        "beforeLoad": [
          {
            "element": "root",
            "apply": "isVisible"
          }
        ],
        "elements": [
          {
            "name": "usernameInput",
            "type": "editable",
            "selector": {
              "css": "#username"
            }
          },
          {
            "name": "passwordInput",
            "type": "editable",
            "selector": {
              "css": "#password"
            }
          },
          {
            "name": "loginButton",
            "type": "clickable",
            "selector": {
              "css": "#login"
            }
          }
        ],
        "methods": [
          {
            "name": "login",
            "args": [
              {
                "name": "username",
                "type": "string"
              },
              {
                "name": "password",
                "type": "string"
              }
            ],
            "compose": [
              {
                "element": "usernameInput",
                "apply": "sendKeys",
                "args": [
                  {
                    "name": "username",
                    "type": "string"
                  }
                ]
              },
              {
                "element": "passwordInput",
                "apply": "sendKeys",
                "args": [
                  {
                    "name": "password",
                    "type": "string"
                  }
                ]
              },
              {
                "element": "loginButton",
                "apply": "click"
              }
            ]
          }
        ],
        "shadow": {
          "elements": []
        },
        "metadata": {
          "status": "stable",
          "teamOwner": "QA Team"
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on contains keyword",
      "valid": false,
      "rust_error": "\"Windows\" is not of type \"array\"",
      "python_error": "'implements' is a dependency of 'profile'\n\nFailed validating 'dependencies' in schema['allOf'][0]['then']:\n    {'type': 'object',\n     'additionalProperties': False,\n     'title': 'Page Object',\n     'description': 'An object representing a page or a UI element in a '\n                    'web page',\n     'properties': {'description': {'$ref': '#/definitions/rootDescription'},\n                    'root': {'$ref': '#/definitions/root'},\n                    'selector': {'$ref': '#/definitions/selector'},\n                    'exposeRootElement': {'$ref': '#/definitions/exposeRootElement'},\n                    'type': {'$ref': '#/definitions/type'},\n                    'implements': {'description': 'reference to the '\n                                                  'interface implemented '\n                                                  'by the page object',\n                                   'type': 'string'},\n                    'profile': {'title': 'Page Object Profile',\n                                'des.. (5226 more)",
      "data": {
        "description": {
          "text": [
            "This is a sample page object for a login page."
          ]
        },
        "root": true,
        "selector": {
          "css": ".login-page"
        },
        "exposeRootElement": true,
        "type": "actionable",
        "platform": "web",
        "beforeLoad": [
          {
            "element": "document",
            "apply": "isVisible"
          }
        ],
        "profile": [
          {
            "browser": [
              "Chrome",
              "Firefox"
            ],
            "os": "Windows"
          },
          {
            "browser": "Safari",
            "os": [
              "MacOS"
            ]
          }
        ],
        "elements": [
          {
            "name": "usernameInput",
            "type": "editable",
            "selector": {
              "css": "#username"
            }
          },
          {
            "name": "passwordInput",
            "type": "editable",
            "selector": {
              "css": "#password"
            }
          },
          {
            "name": "loginButton",
            "type": "clickable",
            "selector": {
              "css": "#login"
            }
          }
        ],
        "methods": [
          {
            "name": "login",
            "args": [
              {
                "name": "username",
                "type": "string"
              },
              {
                "name": "password",
                "type": "string"
              }
            ],
            "compose": [
              {
                "element": "usernameInput",
                "apply": "sendKeys",
                "args": [
                  {
                    "name": "username",
                    "type": "string"
                  }
                ]
              },
              {
                "element": "passwordInput",
                "apply": "sendKeys",
                "args": [
                  {
                    "name": "password",
                    "type": "string"
                  }
                ]
              },
              {
                "element": "loginButton",
                "apply": "click"
              }
            ]
          }
        ],
        "shadow": {
          "elements": []
        },
        "metadata": {
          "status": "stable",
          "teamOwner": "QA Team"
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on additionalProperties keyword with an object schema",
      "valid": false,
      "rust_error": "Additional properties are not allowed ('interface' was unexpected)",
      "python_error": "Additional properties are not allowed ('interface' was unexpected)\n\nFailed validating 'additionalProperties' in schema['allOf'][0]['then']:\n    {'type': 'object',\n     'additionalProperties': False,\n     'title': 'Page Object',\n     'description': 'An object representing a page or a UI element in a '\n                    'web page',\n     'properties': {'description': {'$ref': '#/definitions/rootDescription'},\n                    'root': {'$ref': '#/definitions/root'},\n                    'selector': {'$ref': '#/definitions/selector'},\n                    'exposeRootElement': {'$ref': '#/definitions/exposeRootElement'},\n                    'type': {'$ref': '#/definitions/type'},\n                    'implements': {'description': 'reference to the '\n                                                  'interface implemented '\n                                                  'by the page object',\n                                   'type': 'string'},\n                    'profile': {'title': 'Page Object Profile',\n   .. (5219 more)",
      "data": {
        "interface": false,
        "description": {
          "text": [
            "This is a sample page object for a login page."
          ]
        },
        "root": true,
        "selector": {
          "css": ".login-page"
        },
        "exposeRootElement": true,
        "type": "actionable",
        "platform": "web",
        "beforeLoad": [
          {
            "element": "root",
            "apply": "isVisible"
          }
        ],
        "elements": [
          {
            "name": "usernameInput",
            "type": "editable",
            "selector": {
              "css": "#username",
              "invalidProperty": "invalidValue"
            }
          },
          {
            "name": "passwordInput",
            "type": "editable",
            "selector": {
              "css": "#password"
            }
          },
          {
            "name": "loginButton",
            "type": "clickable",
            "selector": {
              "css": "#login"
            }
          }
        ],
        "methods": [
          {
            "name": "login",
            "args": [
              {
                "name": "username",
                "type": "string"
              },
              {
                "name": "password",
                "type": "string"
              }
            ],
            "compose": [
              {
                "element": "usernameInput",
                "apply": "sendKeys",
                "args": [
                  {
                    "name": "username",
                    "type": "string"
                  }
                ]
              },
              {
                "element": "passwordInput",
                "apply": "sendKeys",
                "args": [
                  {
                    "name": "password",
                    "type": "string"
                  }
                ]
              },
              {
                "element": "loginButton",
                "apply": "click"
              }
            ]
          }
        ],
        "shadow": {
          "elements": []
        },
        "metadata": {
          "status": "stable",
          "teamOwner": "QA Team"
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on allOf keyword",
      "valid": false,
      "rust_error": "Additional properties are not allowed ('selector' was unexpected)",
      "python_error": "Additional properties are not allowed ('beforeLoad', 'elements', 'implements', 'platform', 'profile', 'selector', 'shadow' were unexpected)\n\nFailed validating 'additionalProperties' in schema['allOf'][1]['then']:\n    {'type': 'object',\n     'additionalProperties': False,\n     'title': 'Page Object Inferface',\n     'description': 'An interace to abstract page object APIs for page '\n                    'objects with similar structure and function.',\n     'properties': {'interface': {'description': 'Indicates that this page '\n                                                 'object describes an '\n                                                 'interface.',\n                                  'type': 'boolean',\n                                  'default': False},\n                    'root': {'$ref': '#/definitions/root'},\n                    'exposeRootElement': {'$ref': '#/definitions/exposeRootElement'},\n                    'type': {'$ref': '#/definitions/type'},\n                    'methods': {'title': 'Interf.. (2256 more)",
      "data": {
        "description": {
          "text": [
            "This is a sample page object for a login page."
          ]
        },
        "interface": true,
        "selector": {
          "css": ".login-page"
        },
        "exposeRootElement": true,
        "type": "actionable",
        "platform": "web",
        "beforeLoad": [
          {
            "element": "root",
            "apply": "isVisible"
          }
        ],
        "elements": [
          {
            "name": "usernameInput",
            "type": "editable",
            "selector": {
              "css": "#username"
            }
          },
          {
            "name": "passwordInput",
            "type": "editable",
            "selector": {
              "css": "#password"
            }
          },
          {
            "name": "loginButton",
            "type": "clickable",
            "selector": {
              "css": "#login"
            }
          }
        ],
        "methods": [
          {
            "name": "login",
            "args": [
              {
                "name": "username",
                "type": "string"
              },
              {
                "name": "password",
                "type": "string"
              }
            ],
            "compose": [
              {
                "element": "usernameInput",
                "apply": "sendKeys",
                "args": [
                  {
                    "name": "username",
                    "type": "string"
                  }
                ]
              },
              {
                "element": "passwordInput",
                "apply": "sendKeys",
                "args": [
                  {
                    "name": "password",
                    "type": "string"
                  }
                ]
              },
              {
                "element": "loginButton",
                "apply": "click"
              }
            ]
          }
        ],
        "shadow": {
          "elements": []
        },
        "metadata": {
          "status": "stable",
          "teamOwner": "QA Team"
        },
        "implements": "bad-string-value",
        "root": true,
        "profile": []
      }
    },
    {
      "description": "llama-70b generated negative; focus on if keyword or then keyword",
      "valid": false,
      "rust_error": "Additional properties are not allowed ('selector' was unexpected)",
      "python_error": "Additional properties are not allowed ('beforeLoad', 'elements', 'platform', 'selector', 'shadow' were unexpected)\n\nFailed validating 'additionalProperties' in schema['allOf'][1]['then']:\n    {'type': 'object',\n     'additionalProperties': False,\n     'title': 'Page Object Inferface',\n     'description': 'An interace to abstract page object APIs for page '\n                    'objects with similar structure and function.',\n     'properties': {'interface': {'description': 'Indicates that this page '\n                                                 'object describes an '\n                                                 'interface.',\n                                  'type': 'boolean',\n                                  'default': False},\n                    'root': {'$ref': '#/definitions/root'},\n                    'exposeRootElement': {'$ref': '#/definitions/exposeRootElement'},\n                    'type': {'$ref': '#/definitions/type'},\n                    'methods': {'title': 'Interface Methods',\n           .. (2172 more)",
      "data": {
        "interface": true,
        "description": {
          "text": [
            "This is a sample page object for a login page."
          ]
        },
        "root": true,
        "selector": {
          "css": ".login-page"
        },
        "exposeRootElement": true,
        "type": "actionable",
        "platform": "web",
        "beforeLoad": [
          {
            "element": "root",
            "apply": "isVisible"
          }
        ],
        "elements": [
          {
            "name": "usernameInput",
            "type": "editable",
            "selector": {
              "css": "#username"
            }
          },
          {
            "name": "passwordInput",
            "type": "editable",
            "selector": {
              "css": "#password"
            }
          },
          {
            "name": "loginButton",
            "type": "clickable",
            "selector": {
              "css": "#login"
            }
          }
        ],
        "methods": [
          {
            "name": "login",
            "args": [
              {
                "name": "username",
                "type": "string"
              },
              {
                "name": "password",
                "type": "string"
              }
            ],
            "compose": [
              {
                "element": "usernameInput",
                "apply": "sendKeys",
                "args": [
                  {
                    "name": "username",
                    "type": "string"
                  }
                ]
              },
              {
                "element": "passwordInput",
                "apply": "sendKeys",
                "args": [
                  {
                    "name": "password",
                    "type": "string"
                  }
                ]
              },
              {
                "element": "loginButton",
                "apply": "click"
              }
            ]
          }
        ],
        "shadow": {
          "elements": []
        },
        "metadata": {
          "status": "stable",
          "teamOwner": "QA Team"
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on anyOf keyword",
      "valid": false,
      "rust_error": "{\"css\":\".login-page\",\"accessid\":\"login-page\"} is not valid under any of the schemas listed in the 'oneOf' keyword",
      "python_error": "{'css': '.login-page', 'accessid': 'login-page'} is not valid under any of the given schemas\n\nFailed validating 'oneOf' in schema['allOf'][0]['then']['properties']['selector']:\n    {'title': 'Selector',\n     'description': 'An object that locates an element or a list of '\n                    'elements at run time.',\n     'type': 'object',\n     '$defs': {'args': {'description': 'Parameters to the methods that '\n                                       'access this element or its nested '\n                                       'elements.',\n                        'type': 'array',\n                        'items': {'$ref': '#/definitions/arg'}},\n               'returnAll': {'description': 'Returns a list of elements',\n                             'type': 'boolean',\n                             'default': True}},\n     'oneOf': [{'type': 'object',\n                'properties': {'css': {'description': 'Standard CSS '\n                                                      'selector.',\n                                   .. (3502 more)",
      "data": {
        "description": {
          "text": [
            "This is a sample page object for a login page."
          ]
        },
        "root": true,
        "selector": {
          "css": ".login-page",
          "accessid": "login-page"
        },
        "exposeRootElement": true,
        "type": "actionable",
        "platform": "web",
        "beforeLoad": [
          {
            "element": "root",
            "apply": "isVisible"
          }
        ],
        "elements": [
          {
            "name": "usernameInput",
            "type": "editable",
            "selector": {
              "css": "#username"
            }
          },
          {
            "name": "passwordInput",
            "type": "editable",
            "selector": {
              "css": "#password"
            }
          },
          {
            "name": "loginButton",
            "type": "clickable",
            "selector": {
              "css": "#login"
            }
          }
        ],
        "methods": [
          {
            "name": "login",
            "args": [
              {
                "name": "username",
                "type": "string"
              },
              {
                "name": "password",
                "type": "string"
              }
            ],
            "compose": [
              {
                "element": "usernameInput",
                "apply": "sendKeys",
                "args": [
                  {
                    "name": "username",
                    "type": "string"
                  }
                ]
              },
              {
                "element": "passwordInput",
                "apply": "sendKeys",
                "args": [
                  {
                    "name": "password",
                    "type": "string"
                  }
                ]
              },
              {
                "element": "loginButton",
                "apply": "click"
              }
            ]
          }
        ],
        "shadow": {
          "elements": []
        },
        "metadata": {
          "status": "stable",
          "teamOwner": "QA Team"
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on dependencies keyword",
      "valid": false,
      "rust_error": "\"test\" is not of type \"array\"",
      "python_error": "'test' is not of type 'array'\n\nFailed validating 'type' in schema['allOf'][0]['then']['properties']['profile']:\n    {'title': 'Page Object Profile',\n     'description': 'list of profiles that can use this page object '\n                    'implementation.',\n     'type': 'array',\n     'items': {'type': 'object',\n               'additionalProperties': {'type': 'array',\n                                        'contains': {'type': 'string'}}}}\n\nOn instance['profile']:\n    'test'",
      "data": {
        "description": {
          "text": [
            "This is a sample page object for a login page."
          ]
        },
        "root": true,
        "selector": {
          "css": ".login-page"
        },
        "exposeRootElement": true,
        "type": "actionable",
        "platform": "web",
        "beforeLoad": [
          {
            "element": "root",
            "apply": "isVisible"
          }
        ],
        "elements": [
          {
            "name": "usernameInput",
            "type": "editable",
            "selector": {
              "css": "#username"
            }
          },
          {
            "name": "passwordInput",
            "type": "editable",
            "selector": {
              "css": "#password"
            }
          },
          {
            "name": "loginButton",
            "type": "clickable",
            "selector": {
              "css": "#login"
            }
          }
        ],
        "methods": [
          {
            "name": "login",
            "args": [
              {
                "name": "username",
                "type": "string"
              },
              {
                "name": "password",
                "type": "string"
              }
            ],
            "compose": [
              {
                "element": "usernameInput",
                "apply": "sendKeys",
                "args": [
                  {
                    "name": "username",
                    "type": "string"
                  }
                ]
              },
              {
                "element": "passwordInput",
                "apply": "sendKeys",
                "args": [
                  {
                    "name": "password",
                    "type": "string"
                  }
                ]
              },
              {
                "element": "loginButton",
                "apply": "click"
              }
            ]
          }
        ],
        "profile": "test",
        "implements": true,
        "shadow": {
          "elements": []
        },
        "metadata": {
          "status": "stable",
          "teamOwner": "QA Team"
        }
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "{\"css\":123} is not valid under any of the schemas listed in the 'oneOf' keyword",
      "python_error": "123 is not of type 'string'\n\nFailed validating 'type' in schema[0]['properties']['css']:\n    {'description': 'Standard CSS selector.', 'type': 'string'}\n\nOn instance['css']:\n    123",
      "data": {
        "description": {
          "text": [
            "This is a sample page object for a login page."
          ]
        },
        "root": true,
        "selector": {
          "css": 123
        },
        "exposeRootElement": true,
        "type": "actionable",
        "platform": "web",
        "beforeLoad": [
          {
            "element": "root",
            "apply": "isVisible"
          }
        ],
        "elements": [
          {
            "name": "usernameInput",
            "type": "editable",
            "selector": {
              "css": "#username"
            }
          },
          {
            "name": "passwordInput",
            "type": "editable",
            "selector": {
              "css": "#password"
            }
          },
          {
            "name": "loginButton",
            "type": "clickable",
            "selector": {
              "css": "#login"
            }
          }
        ],
        "methods": [
          {
            "name": "login",
            "args": [
              {
                "name": "username",
                "type": "string"
              },
              {
                "name": "password",
                "type": "string"
              }
            ],
            "compose": [
              {
                "element": "usernameInput",
                "apply": "sendKeys",
                "args": [
                  {
                    "name": "username",
                    "type": "integer",
                    "value": 123
                  }
                ]
              },
              {
                "element": "passwordInput",
                "apply": "sendKeys",
                "args": [
                  {
                    "name": "password",
                    "type": "string"
                  }
                ]
              },
              {
                "element": "loginButton",
                "apply": "click"
              }
            ]
          }
        ],
        "shadow": {
          "elements": []
        },
        "metadata": {
          "status": "stable",
          "teamOwner": "QA Team"
        }
      }
    }
  ]
}