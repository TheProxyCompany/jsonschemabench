{
  "description": "sample Github_medium/o9887.json",
  "meta": {
    "full_size": 1076,
    "stripped_size": 1076,
    "features": [
      "@minmaxLength",
      "additionalProperties",
      "format",
      "format:date-time",
      "format:email",
      "format:url",
      "items",
      "pattern",
      "patternProperties"
    ],
    "raw_features": [
      "$schema",
      "_boolSchema",
      "maxLength",
      "minLength",
      "properties",
      "type",
      "type:array",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "pattern": "^[A-Fa-f\\d]{24}$"
      },
      "experienceUserId": {
        "type": "string",
        "pattern": "^[A-Fa-f\\d]{24}$"
      },
      "applicationId": {
        "type": "string",
        "pattern": "^[A-Fa-f\\d]{24}$"
      },
      "creationDate": {
        "type": "string",
        "format": "date-time"
      },
      "lastUpdated": {
        "type": "string",
        "format": "date-time"
      },
      "passwordLastUpdated": {
        "type": "string",
        "format": "date-time"
      },
      "lastLogin": {
        "type": "string",
        "format": "date-time"
      },
      "email": {
        "type": "string",
        "format": "email",
        "maxLength": 1024
      },
      "firstName": {
        "type": "string",
        "maxLength": 1024
      },
      "lastName": {
        "type": "string",
        "maxLength": 1024
      },
      "avatarUrl": {
        "type": "string",
        "format": "url"
      },
      "tokenCutoff": {
        "type": "string",
        "format": "date-time"
      },
      "userTags": {
        "type": "object",
        "patternProperties": {
          "^[0-9a-zA-Z_-]{1,255}$": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255
          }
        },
        "additionalProperties": false
      },
      "experienceGroups": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "minLength": 1,
              "maxLength": 255
            },
            "id": {
              "type": "string",
              "pattern": "^[A-Fa-f\\d]{24}$"
            }
          }
        }
      }
    }
  },
  "tests": [
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "id": "507f191e810c19729de860ea",
        "experienceUserId": "507f191e810c19729de860eb",
        "applicationId": "507f191e810c19729de860ec",
        "creationDate": "2022-01-01T12:00:00.000Z",
        "lastUpdated": "2022-01-01T12:00:00.000Z",
        "passwordLastUpdated": "2022-01-01T12:00:00.000Z",
        "lastLogin": "2022-01-01T12:00:00.000Z",
        "email": "user@example.com",
        "firstName": "John",
        "lastName": "Doe",
        "avatarUrl": "https://example.com/avatar.jpg",
        "tokenCutoff": "2022-01-01T12:00:00.000Z",
        "userTags": {
          "tag1": "value1",
          "tag2": "value2"
        },
        "experienceGroups": [
          {
            "name": "Group 1",
            "id": "507f191e810c19729de860ed"
          },
          {
            "name": "Group 2",
            "id": "507f191e810c19729de860ee"
          }
        ]
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "id": "5f5f5f5f5f5f5f5f5f5f5f5f",
        "experienceUserId": "5f5f5f5f5f5f5f5f5f5f5f5f",
        "applicationId": "5f5f5f5f5f5f5f5f5f5f5f5f",
        "creationDate": "2022-01-01T12:00:00.000Z",
        "lastUpdated": "2022-01-01T12:00:00.000Z",
        "passwordLastUpdated": "2022-01-01T12:00:00.000Z",
        "lastLogin": "2022-01-01T12:00:00.000Z",
        "email": "user@example.com",
        "firstName": "John",
        "lastName": "Doe",
        "avatarUrl": "https://example.com/avatar.jpg",
        "tokenCutoff": "2022-01-01T12:00:00.000Z",
        "userTags": {
          "tag1": "value1",
          "tag2": "value2"
        },
        "experienceGroups": [
          {
            "name": "Group 1",
            "id": "5f5f5f5f5f5f5f5f5f5f5f5f"
          },
          {
            "name": "Group 2",
            "id": "5f5f5f5f5f5f5f5f5f5f5f5f"
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on patternProperties keyword",
      "valid": false,
      "rust_error": "Additional properties are not allowed ('!@#$' was unexpected)",
      "python_error": "'!@#$' does not match any of the regexes: '^[0-9a-zA-Z_-]{1,255}$'\n\nFailed validating 'additionalProperties' in schema['properties']['userTags']:\n    {'type': 'object',\n     'patternProperties': {'^[0-9a-zA-Z_-]{1,255}$': {'type': 'string',\n                                                      'minLength': 1,\n                                                      'maxLength': 255}},\n     'additionalProperties': False}\n\nOn instance['userTags']:\n    {'!@#$': 'value'}",
      "data": {
        "id": "5f5f5f5f5f5f5f5f5f5f5f5f",
        "experienceUserId": "5f5f5f5f5f5f5f5f5f5f5f5f",
        "applicationId": "5f5f5f5f5f5f5f5f5f5f5f5f",
        "creationDate": "2022-01-01T12:00:00.000Z",
        "lastUpdated": "2022-01-01T12:00:00.000Z",
        "passwordLastUpdated": "2022-01-01T12:00:00.000Z",
        "lastLogin": "2022-01-01T12:00:00.000Z",
        "email": "user@example.com",
        "firstName": "John",
        "lastName": "Doe",
        "avatarUrl": "https://example.com/avatar.jpg",
        "tokenCutoff": "2022-01-01T12:00:00.000Z",
        "userTags": {
          "!@#$": "value"
        },
        "experienceGroups": [
          {
            "name": "Group 1",
            "id": "5f5f5f5f5f5f5f5f5f5f5f5f"
          },
          {
            "name": "Group 2",
            "id": "5f5f5f5f5f5f5f5f5f5f5f5f"
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on pattern keyword",
      "valid": false,
      "rust_error": "\"5f5f5f5f5f5f5f5f5f5f5f5\" does not match \"^[A-Fa-f\\d]{24}$\"",
      "python_error": "'5f5f5f5f5f5f5f5f5f5f5f5' does not match '^[A-Fa-f\\\\d]{24}$'\n\nFailed validating 'pattern' in schema['properties']['id']:\n    {'type': 'string', 'pattern': '^[A-Fa-f\\\\d]{24}$'}\n\nOn instance['id']:\n    '5f5f5f5f5f5f5f5f5f5f5f5'",
      "data": {
        "id": "5f5f5f5f5f5f5f5f5f5f5f5",
        "experienceUserId": "5f5f5f5f5f5f5f5f5f5f5f5f",
        "applicationId": "5f5f5f5f5f5f5f5f5f5f5f5f",
        "creationDate": "2022-01-01T12:00:00.000Z",
        "lastUpdated": "2022-01-01T12:00:00.000Z",
        "passwordLastUpdated": "2022-01-01T12:00:00.000Z",
        "lastLogin": "2022-01-01T12:00:00.000Z",
        "email": "user@example.com",
        "firstName": "John",
        "lastName": "Doe",
        "avatarUrl": "https://example.com/avatar.jpg",
        "tokenCutoff": "2022-01-01T12:00:00.000Z",
        "userTags": {
          "tag1": "value1",
          "tag2": "value2"
        },
        "experienceGroups": [
          {
            "name": "Group 1",
            "id": "5f5f5f5f5f5f5f5f5f5f5f5f"
          },
          {
            "name": "Group 2",
            "id": "5f5f5f5f5f5f5f5f5f5f5f5f"
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on format keyword",
      "valid": false,
      "rust_error": "\"2022-01-01T12:00:00.000\" is not a \"date-time\"",
      "python_error": "'2022-01-01T12:00:00.000' is not a 'date-time'\n\nFailed validating 'format' in schema['properties']['creationDate']:\n    {'type': 'string', 'format': 'date-time'}\n\nOn instance['creationDate']:\n    '2022-01-01T12:00:00.000'",
      "data": {
        "id": "5f5f5f5f5f5f5f5f5f5f5f5f",
        "experienceUserId": "5f5f5f5f5f5f5f5f5f5f5f5f",
        "applicationId": "5f5f5f5f5f5f5f5f5f5f5f5f",
        "creationDate": "2022-01-01T12:00:00.000",
        "lastUpdated": "2022-01-01T12:00:00.000Z",
        "passwordLastUpdated": "2022-01-01T12:00:00.000Z",
        "lastLogin": "2022-01-01T12:00:00.000Z",
        "email": "user@example.com",
        "firstName": "John",
        "lastName": "Doe",
        "avatarUrl": "https://example.com/avatar.jpg",
        "tokenCutoff": "2022-01-01T12:00:00.000Z",
        "userTags": {
          "tag1": "value1",
          "tag2": "value2"
        },
        "experienceGroups": [
          {
            "name": "Group 1",
            "id": "5f5f5f5f5f5f5f5f5f5f5f5f"
          },
          {
            "name": "Group 2",
            "id": "5f5f5f5f5f5f5f5f5f5f5f5f"
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on minLength keyword or maxLength keyword",
      "valid": false,
      "rust_error": "\"\" is shorter than 1 character",
      "python_error": "'' should be non-empty\n\nFailed validating 'minLength' in schema['properties']['experienceGroups']['items']['properties']['name']:\n    {'type': 'string', 'minLength': 1, 'maxLength': 255}\n\nOn instance['experienceGroups'][1]['name']:\n    ''",
      "data": {
        "id": "5f5f5f5f5f5f5f5f5f5f5f5f",
        "experienceUserId": "5f5f5f5f5f5f5f5f5f5f5f5f",
        "applicationId": "5f5f5f5f5f5f5f5f5f5f5f5f",
        "creationDate": "2022-01-01T12:00:00.000Z",
        "lastUpdated": "2022-01-01T12:00:00.000Z",
        "passwordLastUpdated": "2022-01-01T12:00:00.000Z",
        "lastLogin": "2022-01-01T12:00:00.000Z",
        "email": "user@example.com",
        "firstName": "",
        "lastName": "Doe",
        "avatarUrl": "https://example.com/avatar.jpg",
        "tokenCutoff": "2022-01-01T12:00:00.000Z",
        "userTags": {
          "tag1": "value1",
          "tag2": "value2"
        },
        "experienceGroups": [
          {
            "name": "Group 1",
            "id": "5f5f5f5f5f5f5f5f5f5f5f5f"
          },
          {
            "name": "",
            "id": "5f5f5f5f5f5f5f5f5f5f5f5f"
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"5f5f5f5f5f5f5f5f5f5f5f5\" does not match \"^[A-Fa-f\\d]{24}$\"",
      "python_error": "'5f5f5f5f5f5f5f5f5f5f5f5' does not match '^[A-Fa-f\\\\d]{24}$'\n\nFailed validating 'pattern' in schema['properties']['id']:\n    {'type': 'string', 'pattern': '^[A-Fa-f\\\\d]{24}$'}\n\nOn instance['id']:\n    '5f5f5f5f5f5f5f5f5f5f5f5'",
      "data": {
        "id": "5f5f5f5f5f5f5f5f5f5f5f5",
        "Invalid ID, does not match the 24 character pattern": "experienceUserId",
        "Missing double quote after experienceUserId property": {
          "experienceUserId": "5f5f5f5f5f5f5f5f5f5f5f5f",
          "applicationId": "5f5f5f5f5f5f5f5f5f5f5f5f",
          "creationDate": "2022-01-01T12:00:00.000",
          "lastUpdated": "2022-01-01T12:00:00.000",
          "passwordLastUpdated": "2022-01-01T12:00:00.000",
          "lastLogin": "2022-01-01T12:00:00.000",
          "email": "user@example.com",
          "firstName": "John",
          "lastName": "Doe",
          "avatarUrl": "https://example.com/avatar.jpg",
          "tokenCutoff": "2022-01-01T12:00:00.000",
          "userTags": {
            "tag1": "",
            "tag2": "value2"
          },
          "experienceGroups": [
            {
              "name": "",
              "id": "5f5f5f5f5f5f5f5f5f5f5f5f"
            },
            {
              "name": "Group 2",
              "id": "5f5f5f5f5f5f5f5f5f5f5f5f"
            }
          ]
        },
        "Additional comma outside of an object": [],
        "Additional array outside of an object": "Invalid JSON"
      }
    }
  ]
}