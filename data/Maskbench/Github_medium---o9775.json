{
  "description": "sample Github_medium/o9775.json",
  "meta": {
    "full_size": 930,
    "stripped_size": 930,
    "features": [
      "@minmaxItems",
      "@minmaxLength",
      "additionalProperties",
      "enum",
      "items",
      "oneOf",
      "pattern"
    ],
    "raw_features": [
      "$schema",
      "_boolSchema",
      "maxItems",
      "maxLength",
      "minLength",
      "properties",
      "required",
      "type",
      "type:array",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "type": "object",
    "properties": {
      "status": {
        "type": "string",
        "enum": [
          "active",
          "inactive"
        ]
      },
      "description": {
        "type": "string",
        "maxLength": 32767
      },
      "deviceIds": {
        "type": "array",
        "items": {
          "type": "string",
          "pattern": "^[A-Fa-f\\d]{24}$"
        },
        "maxItems": 1000
      },
      "deviceTags": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "pattern": "^[0-9a-zA-Z_-]{1,255}$"
            },
            "value": {
              "type": "string",
              "minLength": 1,
              "maxLength": 255
            }
          },
          "additionalProperties": false
        },
        "maxItems": 100
      },
      "certificate": {
        "type": "string",
        "maxLength": 32767,
        "minLength": 50
      },
      "filterType": {
        "oneOf": [
          {
            "type": "string",
            "enum": [
              "all",
              "whitelist",
              "blacklist"
            ]
          },
          {
            "type": "string",
            "enum": [
              "none"
            ]
          }
        ]
      },
      "pubTopics": {
        "type": "array",
        "items": {
          "type": "string",
          "minLength": 1,
          "maxLength": 1024
        }
      },
      "subTopics": {
        "type": "array",
        "items": {
          "type": "string",
          "minLength": 1,
          "maxLength": 1024
        }
      }
    },
    "required": [
      "certificate"
    ],
    "additionalProperties": false
  },
  "tests": [
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "status": "active",
        "description": "Example description",
        "deviceIds": [
          "1234567890abcdef12345678",
          "fedcba9876543210fedcba98"
        ],
        "deviceTags": [
          {
            "key": "example-key",
            "value": "example-value"
          },
          {
            "key": "another-key",
            "value": "another-value"
          }
        ],
        "certificate": "-----BEGIN CERTIFICATE-----\nMIIDdTCCAl2gAwIBAgIVAMIIujUoNQAAAAAAAjANBgkqhkiG9w0BAQUFADBVMQsw\nCQYDVQQGEwJVUzEXMBUGA1UECAwOTm9ydGggQ2Fyb2xpbmExEDAOBgNVBAcMB1Jl\nZG1vbmRvbjEXMBUGA1UECwwOUGVyc29uYWwgRGV2aWNlczEXMBUGA1UEAwwOUGVy\nb25hbCBkZXZpY2UgQ0ExJjAkBgkqhkiG9w0BCQEWF2V4YW1wbGUuY29tMB4XDTIw\nMDUwNjE5MjIwMFoXDTI1MDUwNjE5MjIwMFowVjELMAkGA1UEBhMCVVMxFzAVBgNV\nBAgMDk5vcnRoIENhcm9saW5hMRAwDgYDVQQHDAdSZW1vbmRvbjEXMBUGA1UECgwO\nUGVyc29uYWwgRGV2aWNlczEXMBUGA1UEAwwOUGVyc29uYWwgRGV2aWNlczELMAkG\nA1UEKRMCSVQxJjAkBgkqhkiG9w0BCQEWF2V4YW1wbGUuY29tMIGfMA0GCSqGSIb3\nDQEBAQUAA4GNADCBiQKBgQCqGKukO1De7zhZj6+H0qtjTkVxwTCpvKe4eCZ0FPqri\nWf42w3w9+M4vwHt9bAZfalfMHDfS8z2rUxOPW+lItRJRcCXrDSUJAHC+uw47l2C\nU/tT6WSQbQSNDrvNEXNPcgrwvPM1xA6W9+5lluMF5OZJHUdN/zv4DZinlPeyQIDA\nQABMA0GCSqGSIb3DQEBBQUAA4GBAFiOarq1yco5OL0ND1QjwK3O5xjTWaoF9KWB9\nPZQ5v0LgTjHl0MYdX8G+qO9Z8M1hK9aXjq74HraAobSPCbPjICMC1NqNUbPoHYFZ\nPfl2jjkjc2y2t2r6rF+QmQqHcD1SolnRhg6+1+4bBm9d8dR/ElT0HxhARIA\n-----END CERTIFICATE-----",
        "filterType": "whitelist",
        "pubTopics": [
          "example/pub/topic"
        ],
        "subTopics": [
          "example/sub/topic"
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on pattern keyword",
      "valid": false,
      "rust_error": "\"1234567890abcdef123456789\" does not match \"^[A-Fa-f\\d]{24}$\"",
      "python_error": "-1 is not of type 'string'\n\nFailed validating 'type' in schema['properties']['deviceIds']['items']:\n    {'type': 'string', 'pattern': '^[A-Fa-f\\\\d]{24}$'}\n\nOn instance['deviceIds'][1]:\n    -1",
      "data": {
        "status": "active",
        "description": "Example description",
        "deviceIds": [
          "1234567890abcdef123456789",
          -1
        ],
        "deviceTags": [
          {
            "key": "example-key",
            "value": "example-value"
          }
        ],
        "certificate": "-----BEGIN CERTIFICATE-----\nMIIDdTCCAl2gAwIBAgIVAMIIujUoNQAAAAAAAjANBgkqhkiG9w0BAQUFADBVMQsw\nCQYDVQQGEwJVUzEXMBUGA1UECAwOTm9ydGggQ2Fyb2xpbmExEDAOBgNVBAcMB1Jl\nZG1vbmRvbjEXMBUGA1UECwwOUGVyc29uYWwgRGV2aWNlczEXMBUGA1UEAwwOUGVy\nb25hbCBkZXZpY2UgQ0ExJjAkBgkqhkiG9w0BCQEWF2V4YW1wbGUuY29tMB4XDTIw\nMDUwNjE5MjIwMFoXDTI1MDUwNjE5MjIwMFowVjELMAkGA1UEBhMCVVMxFzAVBgNV\nBAgMDk5vcnRoIENhcm9saW5hMRAwDgYDVQQHDAdSZW1vbmRvbjEXMBUGA1UECgwO\nUGVyc29uYWwgRGV2aWNlczEXMBUGA1UEAwwOUGVyc29uYWwgRGV2aWNlczELMAkG\nA1UEKRMCSVQxJjAkBgkqhkiG9w0BCQEWF2V4YW1wbGUuY29tMIGfMA0GCSqGSIb3\nDQEBAQUAA4GNADCBiQKBgQCqGKukO1De7zhZj6+H0qtjTkVxwTCpvKe4eCZ0FPqri\nWf42w3w9+M4vwHt9bAZfalfMHDfS8z2rUxOPW+lItRJRcCXrDSUJAHC+uw47l2C\nU/tT6WSQbQSNDrvNEXNPcgrwvPM1xA6W9+5lluMF5OZJHUdN/zv4DZinlPeyQIDA\nQABMA0GCSqGSIb3DQEBBQUAA4GBAFiOarq1yco5OL0ND1QjwK3O5xjTWaoF9KWB9\nPZQ5v0LgTjHl0MYdX8G+qO9Z8M1hK9aXjq74HraAobSPCbPjICMC1NqNUbPoHYFZ\nPfl2jjkjc2y2t2r6rF+QmQqHcD1SolnRhg6+1+4bBm9d8dR/ElT0HxhARIA\n-----END CERTIFICATE-----",
        "filterType": "whitelist",
        "pubTopics": [
          "example/pub/topic"
        ],
        "subTopics": [
          "example/sub/topic"
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on minLength keyword or maxLength keyword",
      "valid": false,
      "rust_error": "\"\" is shorter than 1 character",
      "python_error": "'' should be non-empty\n\nFailed validating 'minLength' in schema['properties']['deviceTags']['items']['properties']['value']:\n    {'type': 'string', 'minLength': 1, 'maxLength': 255}\n\nOn instance['deviceTags'][0]['value']:\n    ''",
      "data": {
        "status": "active",
        "description": "Example description",
        "deviceIds": [
          "1234567890abcdef12345678",
          "fedcba9876543210fedcba98"
        ],
        "deviceTags": [
          {
            "key": "example-key",
            "value": ""
          },
          {
            "key": "another-key",
            "value": "another-value"
          }
        ],
        "certificate": "-----BEGIN CERTIFICATE-----\nMIIDdTCCAl2gAwIBAgIVAMIIujUoNQAAAAAAAjANBgkqhkiG9w0BAQUFADBVMQsw\nCQYDVQQGEwJVUzEXMBUGA1UECAwOTm9ydGggQ2Fyb2xpbmExEDAOBgNVBAcMB1Jl\nZG1vbmRvbjEXMBUGA1UECwwOUGVyc29uYWwgRGV2aWNlczEXMBUGA1UEAwwOUGVy\nb25hbCBkZXZpY2UgQ0ExJjAkBgkqhkiG9w0BCQEWF2V4YW1wbGUuY29tMB4XDTIw\nMDUwNjE5MjIwMFoXDTI1MDUwNjE5MjIwMFowVjELMAkGA1UEBhMCVVMxFzAVBgNV\nBAgMDk5vcnRoIENhcm9saW5hMRAwDgYDVQQHDAdSZW1vbmRvbjEXMBUGA1UECgwO\nUGVyc29uYWwgRGV2aWNlczEXMBUGA1UEAwwOUGVyc29uYWwgRGV2aWNlczELMAkG\nA1UEKRMCSVQxJjAkBgkqhkiG9w0BCQEWF2V4YW1wbGUuY29tMIGfMA0GCSqGSIb3\nDQEBAQUAA4GNADCBiQKBgQCqGKukO1De7zhZj6+H0qtjTkVxwTCpvKe4eCZ0FPqri\nWf42w3w9+M4vwHt9bAZfalfMHDfS8z2rUxOPW+lItRJRcCXrDSUJAHC+uw47l2C\nU/tT6WSQbQSNDrvNEXNPcgrwvPM1xA6W9+5lluMF5OZJHUdN/zv4DZinlPeyQIDA\nQABMA0GCSqGSIb3DQEBBQUAA4GBAFiOarq1yco5OL0ND1QjwK3O5xjTWaoF9KWB9\nPZQ5v0LgTjHl0MYdX8G+qO9Z8M1hK9aXjq74HraAobSPCbPjICMC1NqNUbPoHYFZ\nPfl2jjkjc2y2t2r6rF+QmQqHcD1SolnRhg6+1+4bBm9d8dR/ElT0HxhARIA\n-----END CERTIFICATE-----",
        "filterType": "whitelist",
        "pubTopics": [
          "example/pub/topic"
        ],
        "subTopics": [
          "example/sub/topic"
        ]
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"invalidDeviceId\" does not match \"^[A-Fa-f\\d]{24}$\"",
      "python_error": "'invalidCertificate' is too short\n\nFailed validating 'minLength' in schema['properties']['certificate']:\n    {'type': 'string', 'maxLength': 32767, 'minLength': 50}\n\nOn instance['certificate']:\n    'invalidCertificate'",
      "data": {
        "status": "active",
        "description": "Example description",
        "deviceIds": [
          "1234567890abcdef12345678",
          "fedcba9876543210fedcba98",
          "invalidDeviceId"
        ],
        "deviceTags": [
          {
            "key": "example-key",
            "value": "example-value"
          },
          {
            "key": "another-key",
            "value": ""
          }
        ],
        "certificate": "invalidCertificate",
        "filterType": "whitelist",
        "pubTopics": [
          "example/pub/topic"
        ],
        "subTopics": [
          "example/sub/topic"
        ]
      }
    }
  ]
}