{
  "description": "sample Kubernetes/kb_509_Normalized.json",
  "meta": {
    "full_size": 1887,
    "stripped_size": 623,
    "features": [
      "$ref",
      "additionalProperties",
      "additionalProperties:object",
      "items"
    ],
    "raw_features": [
      "definitions",
      "properties",
      "required",
      "type",
      "type:[]",
      "type:array",
      "type:null",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "definitions": {
      "https:__kubernetesjsonschema_dev_master__defs_json_defs_io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelectorRequirement": {
        "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
        "properties": {
          "key": {
            "description": "key is the label key that the selector applies to.",
            "type": "string",
            "x-kubernetes-patch-merge-key": "key",
            "x-kubernetes-patch-strategy": "merge"
          },
          "operator": {
            "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
            "type": "string"
          },
          "values": {
            "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "required": [
          "key",
          "operator"
        ],
        "type": "object"
      }
    },
    "description": "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.",
    "properties": {
      "matchExpressions": {
        "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
        "items": {
          "$ref": "#/definitions/https:__kubernetesjsonschema_dev_master__defs_json_defs_io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelectorRequirement"
        },
        "type": [
          "array",
          "null"
        ]
      },
      "matchLabels": {
        "additionalProperties": {
          "type": [
            "string",
            "null"
          ]
        },
        "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
        "type": [
          "object",
          "null"
        ]
      }
    },
    "type": "object"
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "matchExpressions": [
          {
            "key": "app",
            "operator": "In",
            "values": [
              "nginx",
              "apache"
            ]
          },
          {
            "key": "env",
            "operator": "Exists"
          }
        ],
        "matchLabels": {
          "tier": "frontend"
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on additionalProperties keyword with an object schema",
      "valid": false,
      "rust_error": "123 is not of types \"null\", \"string\"",
      "python_error": "123 is not of type 'string', 'null'\n\nFailed validating 'type' in schema['properties']['matchLabels']['additionalProperties']:\n    {'type': ['string', 'null']}\n\nOn instance['matchLabels']['invalidKey']:\n    123",
      "data": {
        "matchExpressions": [
          {
            "key": "app",
            "operator": "In",
            "values": [
              "nginx",
              "apache"
            ]
          },
          {
            "key": "env",
            "operator": "Exists"
          }
        ],
        "matchLabels": {
          "tier": "frontend",
          "invalidKey": 123
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on type keyword with an array of types",
      "valid": false,
      "rust_error": "\"not an array\" is not of types \"array\", \"null\"",
      "python_error": "'not an array' is not of type 'array', 'null'\n\nFailed validating 'type' in schema['properties']['matchExpressions']:\n    {'description': 'matchExpressions is a list of label selector '\n                    'requirements. The requirements are ANDed.',\n     'items': {'$ref': '#/definitions/https:__kubernetesjsonschema_dev_master__defs_json_defs_io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelectorRequirement'},\n     'type': ['array', 'null']}\n\nOn instance['matchExpressions']:\n    'not an array'",
      "data": {
        "matchExpressions": "not an array",
        "matchLabels": {
          "tier": 123
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on additionalProperties keyword with an object schema",
      "valid": false,
      "rust_error": "123 is not of types \"null\", \"string\"",
      "python_error": "123 is not of type 'string', 'null'\n\nFailed validating 'type' in schema['properties']['matchLabels']['additionalProperties']:\n    {'type': ['string', 'null']}\n\nOn instance['matchLabels']['extraProperty']:\n    123",
      "data": {
        "matchExpressions": [
          {
            "key": "app",
            "operator": "In",
            "values": [
              "nginx",
              "apache"
            ]
          },
          {
            "key": "env",
            "operator": "Exists"
          }
        ],
        "matchLabels": {
          "tier": "frontend",
          "extraProperty": 123
        }
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "matchExpressions": [
          {
            "key": "app",
            "operator": "In",
            "values": [
              "nginx",
              "apache"
            ]
          },
          {
            "key": "env",
            "operator": "NotIn",
            "values": [
              "dev",
              "test"
            ]
          },
          {
            "key": "tier",
            "operator": "Exists",
            "values": []
          }
        ],
        "matchLabels": {
          "component": "database",
          "release": "stable"
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on type keyword with an array of types",
      "valid": false,
      "rust_error": "123 is not of type \"string\"",
      "python_error": "123 is not of type 'string'\n\nFailed validating 'type' in schema['properties']['matchExpressions']['items']['properties']['values']['items']:\n    {'type': 'string'}\n\nOn instance['matchExpressions'][0]['values'][1]:\n    123",
      "data": {
        "matchExpressions": [
          {
            "key": "app",
            "operator": "In",
            "values": [
              "nginx",
              123
            ]
          },
          {
            "key": "env",
            "operator": "NotIn",
            "values": [
              "dev",
              "test"
            ]
          },
          {
            "key": "tier",
            "operator": "Exists",
            "values": []
          }
        ],
        "matchLabels": {
          "component": "database",
          "release": "stable"
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on additionalProperties keyword with an object schema",
      "valid": false,
      "rust_error": "123 is not of types \"null\", \"string\"",
      "python_error": "123 is not of type 'string', 'null'\n\nFailed validating 'type' in schema['properties']['matchLabels']['additionalProperties']:\n    {'type': ['string', 'null']}\n\nOn instance['matchLabels']['otherProperty']:\n    123",
      "data": {
        "matchExpressions": [
          {
            "key": "app",
            "operator": "In",
            "values": [
              "nginx",
              "apache"
            ]
          },
          {
            "key": "env",
            "operator": "NotIn",
            "values": [
              "dev",
              "test"
            ]
          },
          {
            "key": "tier",
            "operator": "Exists",
            "values": []
          }
        ],
        "matchLabels": {
          "component": "database",
          "release": "stable",
          "otherProperty": 123
        }
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "123 is not of type \"string\"",
      "python_error": "456 is not of type 'string', 'null'\n\nFailed validating 'type' in schema['properties']['matchLabels']['additionalProperties']:\n    {'type': ['string', 'null']}\n\nOn instance['matchLabels']['extraKey']:\n    456",
      "data": {
        "matchExpressions": [
          {
            "key": "app",
            "operator": "In",
            "values": [
              "nginx",
              123
            ]
          },
          {
            "key": "env",
            "operator": "NotIn",
            "values": [
              "dev",
              "test"
            ]
          },
          {
            "key": "tier",
            "operator": "Exists",
            "values": [
              "tier"
            ]
          },
          {
            "key": "tier",
            "operator": "InvalidOperator",
            "values": []
          }
        ],
        "matchLabels": {
          "component": "database",
          "release": "stable",
          "extraKey": 456
        }
      }
    }
  ]
}