{
  "description": "sample Github_easy/o66299.json",
  "meta": {
    "full_size": 982,
    "stripped_size": 234,
    "features": [
      "additionalProperties"
    ],
    "raw_features": [
      "$schema",
      "_boolSchema",
      "id",
      "properties",
      "required",
      "type",
      "type:boolean",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "copyright": [
      "Copyright 2013 Red Hat, Inc. and/or its affiliates.",
      "This file is part of lightblue.",
      "This program is free software: you can redistribute it and/or modify",
      "it under the terms of the GNU General Public License as published by",
      "the Free Software Foundation, either version 3 of the License, or",
      "(at your option) any later version.",
      "This program is distributed in the hope that it will be useful,",
      "but WITHOUT ANY WARRANTY; without even the implied warranty of",
      "MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the",
      "GNU General Public License for more details.",
      "You should have received a copy of the GNU General Public License",
      "along with this program.  If not, see <http://www.gnu.org/licenses/>."
    ],
    "id": "#field",
    "$schema": "http://json-schema.org/draft-04/schema#",
    "type": "object",
    "properties": {
      "field": {
        "type": "string"
      },
      "include": {
        "type": "boolean"
      },
      "recursive": {
        "type": "boolean",
        "default": false
      }
    },
    "required": [
      "field"
    ],
    "additionalProperties": false
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "field": "example_field",
        "include": true,
        "recursive": true
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "123 is not of type \"string\"",
      "python_error": "123 is not of type 'string'\n\nFailed validating 'type' in schema['properties']['field']:\n    {'type': 'string'}\n\nOn instance['field']:\n    123",
      "data": {
        "field": 123,
        "include": true,
        "recursive": true
      }
    }
  ]
}