{
  "description": "sample Github_easy/o75094.json",
  "meta": {
    "full_size": 804,
    "stripped_size": 804,
    "features": [
      "$ref",
      "@minmaxItems",
      "enum",
      "items",
      "oneOf"
    ],
    "raw_features": [
      "$schema",
      "definitions",
      "id",
      "minItems",
      "properties",
      "required",
      "type",
      "type:array",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "id": "http://www.52north.org/schema/json/ExceptionReport#",
    "type": "object",
    "required": [
      "version",
      "exceptions"
    ],
    "properties": {
      "version": {
        "type": "string"
      },
      "exceptions": {
        "type": "array",
        "minItems": 1,
        "items": {
          "$ref": "#/definitions/exception"
        }
      }
    },
    "definitions": {
      "exception": {
        "type": "object",
        "required": [
          "code"
        ],
        "properties": {
          "code": {
            "type": "string",
            "enum": [
              "InvalidParameterValue",
              "InvalidUpdateSequence",
              "MissingParameterValue",
              "NoApplicableCode",
              "OperationNotSupported",
              "OptionNotSupported",
              "VersionNegotiationFailed",
              "InvalidRequest",
              "RequestExtensionNotSupported",
              "ResponseExceedsSizeLimit",
              "InvalidPropertyOfferingCombination"
            ]
          },
          "locator": {
            "type": "string"
          },
          "text": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "minItems": 1,
                "items": {
                  "type": "string"
                }
              }
            ]
          }
        }
      }
    }
  },
  "tests": [
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "version": "1.0",
        "exceptions": [
          {
            "code": "InvalidParameterValue",
            "locator": "parameter1",
            "text": "Invalid value for parameter1"
          },
          {
            "code": "MissingParameterValue",
            "locator": "parameter2",
            "text": [
              "Missing value for parameter2",
              "Please provide a valid value for parameter2"
            ]
          }
        ]
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "version": "1.0",
        "exceptions": [
          {
            "code": "InvalidParameterValue",
            "locator": "parameter1",
            "text": "Invalid value for parameter1"
          },
          {
            "code": "MissingParameterValue",
            "locator": "parameter2",
            "text": [
              "Missing value for parameter2",
              "Please provide a valid value"
            ]
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on minItems keyword",
      "valid": false,
      "rust_error": "[] has less than 1 item",
      "python_error": "[] should be non-empty\n\nFailed validating 'minItems' in schema['properties']['exceptions']:\n    {'type': 'array',\n     'minItems': 1,\n     'items': {'$ref': '#/definitions/exception'}}\n\nOn instance['exceptions']:\n    []",
      "data": {
        "version": "1.0",
        "exceptions": []
      }
    },
    {
      "description": "llama-70b generated negative; focus on oneOf keyword",
      "valid": false,
      "rust_error": "{\"key\":\"value\"} is not valid under any of the schemas listed in the 'oneOf' keyword",
      "python_error": "{'key': 'value'} is not valid under any of the given schemas\n\nFailed validating 'oneOf' in schema['properties']['exceptions']['items']['properties']['text']:\n    {'oneOf': [{'type': 'string'},\n               {'type': 'array',\n                'minItems': 1,\n                'items': {'type': 'string'}}]}\n\nOn instance['exceptions'][0]['text']:\n    {'key': 'value'}",
      "data": {
        "version": "1.0",
        "exceptions": [
          {
            "code": "InvalidParameterValue",
            "locator": "parameter1",
            "text": {
              "key": "value"
            }
          },
          {
            "code": "MissingParameterValue",
            "locator": "parameter2",
            "text": [
              "Missing value for parameter2",
              "Please provide a valid value"
            ]
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"InvalidCode\" is not one of [\"InvalidParameterValue\",\"InvalidUpdateSequence\",\"MissingParameterValue\",\"NoApplicableCode\",\"OperationNotSupported\",\"OptionNotSupported\",\"VersionNegotiationFailed\",\"InvalidRequest\",\"RequestExtensionNotSupported\",\"ResponseExceedsSizeLimit\",\"InvalidPropertyOfferingCombination\"]",
      "python_error": "'InvalidCode' is not one of ['InvalidParameterValue', 'InvalidUpdateSequence', 'MissingParameterValue', 'NoApplicableCode', 'OperationNotSupported', 'OptionNotSupported', 'VersionNegotiationFailed', 'InvalidRequest', 'RequestExtensionNotSupported', 'ResponseExceedsSizeLimit', 'InvalidPropertyOfferingCombination']\n\nFailed validating 'enum' in schema['properties']['exceptions']['items']['properties']['code']:\n    {'type': 'string',\n     'enum': ['InvalidParameterValue',\n              'InvalidUpdateSequence',\n              'MissingParameterValue',\n              'NoApplicableCode',\n              'OperationNotSupported',\n              'OptionNotSupported',\n              'VersionNegotiationFailed',\n              'InvalidRequest',\n              'RequestExtensionNotSupported',\n              'ResponseExceedsSizeLimit',\n              'InvalidPropertyOfferingCombination']}\n\nOn instance['exceptions'][0]['code']:\n    'InvalidCode'",
      "data": {
        "version": "1.0",
        "exceptions": [
          {
            "code": "InvalidCode",
            "InvalidCode": "InvalidParameterValue"
          }
        ]
      }
    }
  ]
}