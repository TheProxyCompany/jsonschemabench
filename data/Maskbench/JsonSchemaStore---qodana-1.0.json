{
  "description": "sample JsonSchemaStore/qodana-1.0.json",
  "meta": {
    "full_size": 6926,
    "stripped_size": 3551,
    "features": [
      "$ref",
      "@minmaxInteger",
      "@minmaxItems",
      "@minmaxLength",
      "@siblingKeys",
      "additionalProperties",
      "additionalProperties:object",
      "anyOf",
      "enum",
      "items",
      "oneOf"
    ],
    "raw_features": [
      "$id",
      "$schema",
      "_boolSchema",
      "definitions",
      "minItems",
      "minLength",
      "minimum",
      "properties",
      "required",
      "type",
      "type:array",
      "type:integer",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$comment": "https://www.jetbrains.com/help/qodana/qodana-yaml.html",
    "$id": "https://json.schemastore.org/qodana-1.0.json",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "additionalProperties": true,
    "definitions": {
      "profile": {
        "description": "A profile is some template set of checks to run with Qodana analysis",
        "type": "object",
        "oneOf": [
          {
            "properties": {
              "name": {
                "description": "The profile name (embedded or located in the project)",
                "type": "string"
              }
            },
            "required": [
              "name"
            ],
            "additionalProperties": false
          },
          {
            "properties": {
              "path": {
                "description": "The path to the profile file relative to the project root",
                "type": "string"
              }
            },
            "required": [
              "path"
            ],
            "additionalProperties": false
          }
        ],
        "additionalProperties": true
      },
      "include": {
        "description": "The inspections to run in addition to those from the profile",
        "type": "object",
        "properties": {
          "name": {
            "description": "The ID of the inspection to be added",
            "type": "string"
          }
        },
        "required": [
          "name"
        ],
        "additionalProperties": false
      },
      "exclude": {
        "description": "The inspections or paths to exclude from analysis",
        "type": "object",
        "properties": {
          "name": {
            "description": "The ID of the inspection to exclude, or 'All'",
            "type": "string"
          },
          "paths": {
            "description": "The path in which to disable the inspection, relative to the project root. Omitting the paths disables the inspection everywhere",
            "type": "array",
            "minItems": 0,
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "name"
        ],
        "additionalProperties": false
      },
      "script": {
        "description": "The default running scenario",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "description": "The name of the script",
            "enum": [
              "default",
              "php-migration"
            ]
          },
          "parameters": {
            "description": "The parameters to pass to the script",
            "type": "object",
            "additionalProperties": true
          }
        }
      },
      "licenseRule": {
        "description": "A license rule to apply for license compatibility checks in Qodana",
        "type": "object",
        "properties": {
          "keys": {
            "description": "The list of project license SPDX IDs",
            "type": "array",
            "minItems": 0,
            "items": {
              "type": "string"
            }
          },
          "allowed": {
            "description": "The list of allowed dependency licenses for the project",
            "type": "array",
            "minItems": 0,
            "items": {
              "type": "string"
            }
          },
          "prohibited": {
            "description": "The list of prohibited dependency licenses for the project",
            "type": "array",
            "minItems": 0,
            "items": {
              "type": "string"
            }
          }
        },
        "additionalProperties": false
      },
      "dependencyIgnore": {
        "description": "A dependency to ignore for license checks in Qodana",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "description": "The name of a dependency to ignore",
            "type": "string"
          }
        }
      },
      "dependencyOverride": {
        "description": "A dependency metadata to override for license checks in Qodana",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "description": "The dependency name",
            "type": "string"
          },
          "version": {
            "description": "The dependency version",
            "type": "string"
          },
          "url": {
            "description": "The dependency homepage",
            "type": "string"
          },
          "licenses": {
            "description": "The dependency licenses",
            "type": "array",
            "minItems": 0,
            "items": {
              "$ref": "#/definitions/license"
            }
          }
        },
        "required": [
          "name",
          "version",
          "licenses"
        ]
      },
      "customDependency": {
        "description": "A dependency to add to license checks to Qodana",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "description": "The dependency name",
            "type": "string"
          },
          "version": {
            "description": "The dependency version",
            "type": "string"
          },
          "url": {
            "description": "The dependency homepage",
            "type": "string"
          },
          "licenses": {
            "description": "The dependency licenses",
            "type": "array",
            "minItems": 0,
            "items": {
              "$ref": "#/definitions/license"
            }
          }
        },
        "required": [
          "name",
          "version",
          "licenses"
        ]
      },
      "license": {
        "description": "A license to apply for license compatibility checks in Qodana",
        "type": "object",
        "properties": {
          "key": {
            "description": "The SPDX ID of the license",
            "type": "string"
          },
          "url": {
            "description": "The license homepage",
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "dotnet": {
        "description": "Configuration for .NET solutions and projects",
        "anyOf": [
          {
            "type": "object",
            "properties": {
              "solution": {
                "description": "The name of a .NET solution inside the Qodana project",
                "type": "string",
                "minLength": 1
              }
            },
            "additionalProperties": false
          },
          {
            "type": "object",
            "properties": {
              "project": {
                "description": "The name of a .NET project inside the Qodana project",
                "type": "string",
                "minLength": 1
              }
            },
            "additionalProperties": false
          },
          {
            "type": "object",
            "properties": {
              "configuration": {
                "description": "The name of a configuration to be used for .NET solution or project",
                "type": "string",
                "minLength": 1
              }
            },
            "additionalProperties": false
          },
          {
            "type": "object",
            "properties": {
              "platform": {
                "description": "The name of a platform to be used for .NET solution or project",
                "type": "string",
                "minLength": 1
              }
            },
            "additionalProperties": false
          }
        ]
      },
      "dot-net": {
        "description": "Configuration for .NET solutions and projects",
        "deprecated": true,
        "anyOf": [
          {
            "type": "object",
            "properties": {
              "solution": {
                "description": "The name of a .NET solution inside the Qodana project",
                "type": "string",
                "minLength": 1
              }
            },
            "additionalProperties": false
          },
          {
            "type": "object",
            "properties": {
              "project": {
                "description": "The name of a .NET project inside the Qodana project",
                "type": "string",
                "minLength": 1
              }
            },
            "additionalProperties": false
          }
        ]
      }
    },
    "description": "A configuration file for Qodana (https://jetbrains.com/qodana), named qodana.yaml or qodana.yml",
    "properties": {
      "version": {
        "description": "The version of the file format",
        "enum": [
          "1.0"
        ]
      },
      "profile": {
        "description": "The profile configuration for Qodana analysis",
        "$ref": "#/definitions/profile"
      },
      "failThreshold": {
        "description": "The number of problems that causes Qodana to exit with code 255",
        "type": "integer",
        "minimum": 0
      },
      "script": {
        "description": "The run scenario. 'default' by default",
        "$ref": "#/definitions/script"
      },
      "exclude": {
        "description": "The inspections and paths that are excluded from analysis",
        "type": "array",
        "minItems": 0,
        "items": {
          "$ref": "#/definitions/exclude"
        }
      },
      "include": {
        "description": "The inspections and paths that are added to those from the profile",
        "type": "array",
        "minItems": 0,
        "items": {
          "$ref": "#/definitions/include"
        }
      },
      "linter": {
        "description": "The linter (Docker image) to run for Qodana CLI / any CI extensions",
        "type": "string"
      },
      "bootstrap": {
        "type": "string",
        "description": "The command to run inside Docker before the analysis starts"
      },
      "properties": {
        "type": "object",
        "description": "Set JVM properties to be used while running Qodana",
        "additionalProperties": {
          "type": "string"
        }
      },
      "licenseRules": {
        "description": "A list of license rules to apply for license checks",
        "type": "array",
        "minItems": 0,
        "items": {
          "$ref": "#/definitions/licenseRule"
        }
      },
      "dependencyIgnores": {
        "description": "",
        "type": "array",
        "minItems": 0,
        "items": {
          "$ref": "#/definitions/dependencyIgnore"
        }
      },
      "dependencyOverrides": {
        "description": "",
        "type": "array",
        "minItems": 0,
        "items": {
          "$ref": "#/definitions/dependencyOverride"
        }
      },
      "customDependencies": {
        "description": "",
        "type": "array",
        "minItems": 0,
        "items": {
          "$ref": "#/definitions/customDependency"
        }
      },
      "dot-net": {
        "description": "The configuration for .NET solutions and projects",
        "$ref": "#/definitions/dot-net"
      }
    },
    "required": [
      "version"
    ],
    "title": "Qodana",
    "type": "object"
  },
  "tests": [
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "version": "1.0",
        "profile": {
          "name": "Default"
        },
        "failThreshold": 10,
        "script": {
          "name": "default",
          "parameters": {
            "param1": "value1",
            "param2": "value2"
          }
        },
        "exclude": [
          {
            "name": "Inspection1",
            "paths": [
              "/path/to/exclude1",
              "/path/to/exclude2"
            ]
          },
          {
            "name": "All",
            "paths": []
          }
        ],
        "include": [
          {
            "name": "Inspection2"
          }
        ],
        "linter": "docker-image",
        "bootstrap": "command-to-run",
        "properties": {
          "property1": "value1",
          "property2": "value2"
        },
        "licenseRules": [
          {
            "keys": [
              "license-key-1",
              "license-key-2"
            ],
            "allowed": [
              "allowed-license-1",
              "allowed-license-2"
            ],
            "prohibited": [
              "prohibited-license-1",
              "prohibited-license-2"
            ]
          }
        ],
        "dependencyIgnores": [
          {
            "name": "dependency-to-ignore"
          }
        ],
        "dependencyOverrides": [
          {
            "name": "dependency-to-override",
            "version": "version-to-override",
            "url": "url-to-override",
            "licenses": [
              {
                "key": "license-key",
                "url": "license-url"
              }
            ]
          }
        ],
        "customDependencies": [
          {
            "name": "custom-dependency",
            "version": "custom-version",
            "url": "custom-url",
            "licenses": [
              {
                "key": "custom-license-key",
                "url": "custom-license-url"
              }
            ]
          }
        ],
        "$schema": "http://json-schema.org/draft-07/schema#",
        "dotnet": {
          "solution": "solution-name"
        }
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "version": "1.0",
        "profile": {
          "name": "Inspections"
        },
        "failThreshold": 10,
        "script": {
          "name": "default"
        },
        "exclude": [
          {
            "name": "All",
            "paths": [
              "/src/main/java/com/example/ExcludeAll.java"
            ]
          },
          {
            "name": "UnusedVariable",
            "paths": [
              "/src/main/java/com/example/UnusedVariable.java"
            ]
          }
        ],
        "include": [
          {
            "name": "UnusedMethod"
          }
        ],
        "linter": "jetbrains/qodana-jvm-linter:latest",
        "bootstrap": "echo 'Bootstrap command executed'",
        "properties": {
          "java.awt.headless": "true"
        },
        "licenseRules": [
          {
            "keys": [
              "Apache-2.0"
            ],
            "allowed": [
              "MIT"
            ],
            "prohibited": [
              "GPL-3.0"
            ]
          }
        ],
        "dependencyIgnores": [
          {
            "name": "ignored-dependency"
          }
        ],
        "dependencyOverrides": [
          {
            "name": "overridden-dependency",
            "version": "1.0.0",
            "licenses": [
              {
                "key": "MIT",
                "url": "https://opensource.org/licenses/MIT"
              }
            ]
          }
        ],
        "customDependencies": [
          {
            "name": "custom-dependency",
            "version": "1.0.0",
            "url": "https://example.com/custom-dependency",
            "licenses": [
              {
                "key": "Apache-2.0",
                "url": "https://www.apache.org/licenses/LICENSE-2.0"
              }
            ]
          }
        ],
        "dot-net": {
          "solution": "MySolution.sln"
        },
        "$schema": "http://json-schema.org/draft-07/schema#"
      }
    },
    {
      "description": "llama-70b generated negative; focus on oneOf keyword",
      "valid": false,
      "rust_error": "{\"name\":\"Inspections\",\"path\":\"/some/path\"} is not valid under any of the schemas listed in the 'oneOf' keyword",
      "python_error": "{'name': 'Inspections', 'path': '/some/path'} is not valid under any of the given schemas\n\nFailed validating 'oneOf' in schema['properties']['profile']:\n    {'description': 'A profile is some template set of checks to run with '\n                    'Qodana analysis',\n     'type': 'object',\n     'oneOf': [{'properties': {'name': {'description': 'The profile name '\n                                                       '(embedded or '\n                                                       'located in the '\n                                                       'project)',\n                                        'type': 'string'}},\n                'required': ['name'],\n                'additionalProperties': False},\n               {'properties': {'path': {'description': 'The path to the '\n                                                       'profile file '\n                                                       'relative to the '\n                                                       'project root',\n           .. (245 more)",
      "data": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "version": "1.0",
        "profile": {
          "name": "Inspections",
          "path": "/some/path"
        },
        "failThreshold": 10,
        "script": {
          "name": "default"
        },
        "exclude": [
          {
            "name": "All",
            "paths": [
              "/src/main/java/com/example/ExcludeAll.java"
            ]
          },
          {
            "name": "UnusedVariable",
            "paths": [
              "/src/main/java/com/example/UnusedVariable.java"
            ]
          }
        ],
        "include": [
          {
            "name": "UnusedMethod"
          }
        ],
        "linter": "jetbrains/qodana-jvm-linter:latest",
        "bootstrap": "echo 'Bootstrap command executed'",
        "properties": {
          "java.awt.headless": "true"
        },
        "licenseRules": [
          {
            "keys": [
              "Apache-2.0"
            ],
            "allowed": [
              "MIT"
            ],
            "prohibited": [
              "GPL-3.0"
            ]
          }
        ],
        "dependencyIgnores": [
          {
            "name": "ignored-dependency"
          }
        ],
        "dependencyOverrides": [
          {
            "name": "overridden-dependency",
            "version": "1.0.0",
            "licenses": [
              {
                "key": "MIT",
                "url": "https://opensource.org/licenses/MIT"
              }
            ]
          }
        ],
        "customDependencies": [
          {
            "name": "custom-dependency",
            "version": "1.0.0",
            "url": "https://example.com/custom-dependency",
            "licenses": [
              {
                "key": "Apache-2.0",
                "url": "https://www.apache.org/licenses/LICENSE-2.0"
              }
            ]
          }
        ],
        "dot-net": {
          "solution": "MySolution.sln"
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on minimum keyword",
      "valid": false,
      "rust_error": "-1 is less than the minimum of 0",
      "python_error": "-1 is less than the minimum of 0\n\nFailed validating 'minimum' in schema['properties']['failThreshold']:\n    {'description': 'The number of problems that causes Qodana to exit '\n                    'with code 255',\n     'type': 'integer',\n     'minimum': 0}\n\nOn instance['failThreshold']:\n    -1",
      "data": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "version": "1.0",
        "profile": {
          "name": "Inspections"
        },
        "failThreshold": -1,
        "script": {
          "name": "default"
        },
        "exclude": [
          {
            "name": "All",
            "paths": [
              "/src/main/java/com/example/ExcludeAll.java"
            ]
          },
          {
            "name": "UnusedVariable",
            "paths": [
              "/src/main/java/com/example/UnusedVariable.java"
            ]
          }
        ],
        "include": [
          {
            "name": "UnusedMethod"
          }
        ],
        "linter": "jetbrains/qodana-jvm-linter:latest",
        "bootstrap": "echo 'Bootstrap command executed'",
        "properties": {
          "java.awt.headless": "true"
        },
        "licenseRules": [
          {
            "keys": [
              "Apache-2.0"
            ],
            "allowed": [
              "MIT"
            ],
            "prohibited": [
              "GPL-3.0"
            ]
          }
        ],
        "dependencyIgnores": [
          {
            "name": "ignored-dependency"
          }
        ],
        "dependencyOverrides": [
          {
            "name": "overridden-dependency",
            "version": "1.0.0",
            "licenses": [
              {
                "key": "MIT",
                "url": "https://opensource.org/licenses/MIT"
              }
            ]
          }
        ],
        "customDependencies": [
          {
            "name": "custom-dependency",
            "version": "1.0.0",
            "url": "https://example.com/custom-dependency",
            "licenses": [
              {
                "key": "Apache-2.0",
                "url": "https://www.apache.org/licenses/LICENSE-2.0"
              }
            ]
          }
        ],
        "dot-net": {
          "solution": ""
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on additionalProperties keyword with an object schema",
      "valid": false,
      "rust_error": "{\"path\":\"profile.xml\",\"foo\":\"bar\"} is not valid under any of the schemas listed in the 'oneOf' keyword",
      "python_error": "{'path': 'profile.xml', 'foo': 'bar'} is not valid under any of the given schemas\n\nFailed validating 'oneOf' in schema['properties']['profile']:\n    {'description': 'A profile is some template set of checks to run with '\n                    'Qodana analysis',\n     'type': 'object',\n     'oneOf': [{'properties': {'name': {'description': 'The profile name '\n                                                       '(embedded or '\n                                                       'located in the '\n                                                       'project)',\n                                        'type': 'string'}},\n                'required': ['name'],\n                'additionalProperties': False},\n               {'properties': {'path': {'description': 'The path to the '\n                                                       'profile file '\n                                                       'relative to the '\n                                                       'project root',\n                   .. (229 more)",
      "data": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "version": "1.0",
        "profile": {
          "path": "profile.xml",
          "foo": "bar"
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on minLength keyword",
      "valid": false,
      "rust_error": "{\"solution\":\"\"} is not valid under any of the schemas listed in the 'anyOf' keyword",
      "python_error": "'' should be non-empty\n\nFailed validating 'minLength' in schema[0]['properties']['solution']:\n    {'description': 'The name of a .NET solution inside the Qodana project',\n     'type': 'string',\n     'minLength': 1}\n\nOn instance['solution']:\n    ''",
      "data": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "version": "1.0",
        "profile": {
          "name": "Inspections"
        },
        "failThreshold": 10,
        "script": {
          "name": "default"
        },
        "exclude": [
          {
            "name": "All",
            "paths": [
              "/src/main/java/com/example/ExcludeAll.java"
            ]
          },
          {
            "name": "UnusedVariable",
            "paths": [
              "/src/main/java/com/example/UnusedVariable.java"
            ]
          }
        ],
        "include": [
          {
            "name": "UnusedMethod"
          }
        ],
        "linter": "jetbrains/qodana-jvm-linter:latest",
        "bootstrap": "echo 'Bootstrap command executed'",
        "properties": {
          "java.awt.headless": "true"
        },
        "licenseRules": [
          {
            "keys": [
              "Apache-2.0"
            ],
            "allowed": [
              "MIT"
            ],
            "prohibited": [
              "GPL-3.0"
            ]
          }
        ],
        "dependencyIgnores": [
          {
            "name": "ignored-dependency"
          }
        ],
        "dependencyOverrides": [
          {
            "name": "overridden-dependency",
            "version": "1.0.0",
            "licenses": [
              {
                "key": "MIT",
                "url": "https://opensource.org/licenses/MIT"
              }
            ]
          }
        ],
        "customDependencies": [
          {
            "name": "custom-dependency",
            "version": "1.0.0",
            "url": "https://example.com/custom-dependency",
            "licenses": [
              {
                "key": "Apache-2.0",
                "url": "https://www.apache.org/licenses/LICENSE-2.0"
              }
            ]
          }
        ],
        "dot-net": {
          "solution": ""
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on anyOf keyword",
      "valid": false,
      "rust_error": "{\"solution\":\"MySolution.sln\",\"project\":\"MyProject.csproj\",\"configuration\":\"Release\",\"platform\":\"AnyCPU\"} is not valid under any of the schemas listed in the 'anyOf' keyword",
      "python_error": "{'solution': 'MySolution.sln', 'project': 'MyProject.csproj', 'configuration': 'Release', 'platform': 'AnyCPU'} is not valid under any of the given schemas\n\nFailed validating 'anyOf' in schema['properties']['dot-net']:\n    {'description': 'Configuration for .NET solutions and projects',\n     'deprecated': True,\n     'anyOf': [{'type': 'object',\n                'properties': {'solution': {'description': 'The name of a '\n                                                           '.NET solution '\n                                                           'inside the '\n                                                           'Qodana project',\n                                            'type': 'string',\n                                            'minLength': 1}},\n                'additionalProperties': False},\n               {'type': 'object',\n                'properties': {'project': {'description': 'The name of a '\n                                                          '.NET project '\n                    .. (454 more)",
      "data": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "version": "1.0",
        "profile": {
          "name": "Inspections"
        },
        "failThreshold": 10,
        "script": {
          "name": "default"
        },
        "exclude": [
          {
            "name": "All",
            "paths": [
              "/src/main/java/com/example/ExcludeAll.java"
            ]
          },
          {
            "name": "UnusedVariable",
            "paths": [
              "/src/main/java/com/example/UnusedVariable.java"
            ]
          }
        ],
        "include": [
          {
            "name": "UnusedMethod"
          }
        ],
        "linter": "jetbrains/qodana-jvm-linter:latest",
        "bootstrap": "echo 'Bootstrap command executed'",
        "properties": {
          "java.awt.headless": "true"
        },
        "licenseRules": [
          {
            "keys": [
              "Apache-2.0"
            ],
            "allowed": [
              "MIT"
            ],
            "prohibited": [
              "GPL-3.0"
            ]
          }
        ],
        "dependencyIgnores": [
          {
            "name": "ignored-dependency"
          }
        ],
        "dependencyOverrides": [
          {
            "name": "overridden-dependency",
            "version": "1.0.0",
            "licenses": [
              {
                "key": "MIT",
                "url": "https://opensource.org/licenses/MIT"
              }
            ]
          }
        ],
        "customDependencies": [
          {
            "name": "custom-dependency",
            "version": "1.0.0",
            "url": "https://example.com/custom-dependency",
            "licenses": [
              {
                "key": "Apache-2.0",
                "url": "https://www.apache.org/licenses/LICENSE-2.0"
              }
            ]
          }
        ],
        "dot-net": {
          "solution": "MySolution.sln",
          "project": "MyProject.csproj",
          "configuration": "Release",
          "platform": "AnyCPU"
        }
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "{\"name\":123} is not valid under any of the schemas listed in the 'oneOf' keyword",
      "python_error": "123 is not of type 'string'\n\nFailed validating 'type' in schema[0]['properties']['name']:\n    {'description': 'The profile name (embedded or located in the project)',\n     'type': 'string'}\n\nOn instance['name']:\n    123",
      "data": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "version": "1.0",
        "profile": {
          "name": 123
        },
        "failThreshold": "10",
        "script": {
          "name": "default",
          "parameters": {
            "key": true
          }
        },
        "exclude": [
          {
            "name": "All",
            "paths": [
              "/src/main/java/com/example/ExcludeAll.java",
              123
            ]
          },
          {
            "name": "UnusedVariable"
          }
        ],
        "include": [
          {
            "name": "UnusedMethod"
          },
          {
            "name": 123
          }
        ],
        "linter": "jetbrains/qodana-jvm-linter:latest",
        "bootstrap": "echo 'Bootstrap command executed'",
        "properties": {
          "java.awt.headless": 123
        },
        "licenseRules": [
          {
            "keys": [
              "Apache-2.0"
            ],
            "allowed": [
              "MIT"
            ],
            "prohibited": [
              123
            ]
          }
        ],
        "dependencyIgnores": [
          {
            "name": 123
          }
        ],
        "dependencyOverrides": [
          {
            "name": "overridden-dependency",
            "version": "1.0.0",
            "licenses": [
              {
                "key": "MIT"
              }
            ]
          }
        ],
        "customDependencies": [
          {
            "name": "custom-dependency",
            "version": "1.0.0",
            "url": "https://example.com/custom-dependency",
            "licenses": [
              {
                "key": "Apache-2.0"
              }
            ]
          }
        ],
        "dot-net": {
          "solution": ""
        }
      }
    }
  ]
}