{
  "description": "sample Github_easy/o28269.json",
  "meta": {
    "full_size": 311,
    "stripped_size": 280,
    "features": [
      "@minmaxInteger",
      "additionalProperties",
      "format",
      "format:hostname"
    ],
    "raw_features": [
      "_boolSchema",
      "minimum",
      "properties",
      "type",
      "type:integer",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "additionalProperties": false,
    "description": "",
    "properties": {
      "fragment": {
        "type": "string"
      },
      "host": {
        "format": "hostname",
        "type": "string"
      },
      "path": {
        "type": "string"
      },
      "port": {
        "minimum": 0,
        "type": "integer"
      },
      "query": {
        "type": "string"
      },
      "scheme": {
        "type": "string"
      },
      "userinfo": {
        "type": "string"
      }
    },
    "title": "uri",
    "type": "object"
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "fragment": "anchor",
        "host": "example.com",
        "path": "/path/to/resource",
        "port": 8080,
        "query": "key=value",
        "scheme": "https",
        "userinfo": "user:password"
      }
    },
    {
      "description": "llama-70b generated negative; focus on format keyword",
      "valid": false,
      "rust_error": "\"Invalid Host\" is not a \"hostname\"",
      "python_error": "'Invalid Host' is not a 'hostname'\n\nFailed validating 'format' in schema['properties']['host']:\n    {'format': 'hostname', 'type': 'string'}\n\nOn instance['host']:\n    'Invalid Host'",
      "data": {
        "fragment": "anchor",
        "host": "Invalid Host",
        "path": "/path/to/resource",
        "port": 8080,
        "query": "key=value",
        "scheme": "https",
        "userinfo": "user:password"
      }
    },
    {
      "description": "llama-70b generated negative; focus on minimum keyword",
      "valid": false,
      "rust_error": "-1 is less than the minimum of 0",
      "python_error": "-1 is less than the minimum of 0\n\nFailed validating 'minimum' in schema['properties']['port']:\n    {'minimum': 0, 'type': 'integer'}\n\nOn instance['port']:\n    -1",
      "data": {
        "fragment": "anchor",
        "host": "example.com",
        "path": "/path/to/resource",
        "port": -1,
        "query": "key=value",
        "scheme": "https",
        "userinfo": "user:password"
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "-1 is less than the minimum of 0",
      "python_error": "Additional properties are not allowed ('extraProperty' was unexpected)\n\nFailed validating 'additionalProperties' in schema:\n    {'additionalProperties': False,\n     'description': '',\n     'properties': {'fragment': {'type': 'string'},\n                    'host': {'format': 'hostname', 'type': 'string'},\n                    'path': {'type': 'string'},\n                    'port': {'minimum': 0, 'type': 'integer'},\n                    'query': {'type': 'string'},\n                    'scheme': {'type': 'string'},\n                    'userinfo': {'type': 'string'}},\n     'title': 'uri',\n     'type': 'object'}\n\nOn instance:\n    {'fragment': 'anchor',\n     'host': 'example.com',\n     'path': '/path/to/resource',\n     'port': -1,\n     'query': 'key=value',\n     'scheme': 'https',\n     'userinfo': 'user:password',\n     'extraProperty': 'extraValue'}",
      "data": {
        "fragment": "anchor",
        "host": "example.com",
        "path": "/path/to/resource",
        "port": -1,
        "query": "key=value",
        "scheme": "https",
        "userinfo": "user:password",
        "extraProperty": "extraValue"
      }
    },
    {
      "description": "llama-70b generated negative; focus on format keyword",
      "valid": false,
      "rust_error": "\"example.com:8080\" is not a \"hostname\"",
      "python_error": "'example.com:8080' is not a 'hostname'\n\nFailed validating 'format' in schema['properties']['host']:\n    {'format': 'hostname', 'type': 'string'}\n\nOn instance['host']:\n    'example.com:8080'",
      "data": {
        "fragment": "anchor",
        "host": "example.com:8080",
        "path": "/path/to/resource",
        "port": 8080,
        "query": "key=value",
        "scheme": "https",
        "userinfo": "user:password"
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "fragment": "anchor",
        "host": "example.com",
        "path": "/path/to/resource",
        "port": 8080,
        "query": "key=value",
        "scheme": "https",
        "userinfo": "username:password"
      }
    },
    {
      "description": "llama-70b generated negative; focus on minimum keyword",
      "valid": false,
      "rust_error": "-1 is less than the minimum of 0",
      "python_error": "-1 is less than the minimum of 0\n\nFailed validating 'minimum' in schema['properties']['port']:\n    {'minimum': 0, 'type': 'integer'}\n\nOn instance['port']:\n    -1",
      "data": {
        "fragment": "anchor",
        "host": "example.com",
        "path": "/path/to/resource",
        "port": -1,
        "query": "key=value",
        "scheme": "https",
        "userinfo": "username:password"
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"\" is not a \"hostname\"",
      "python_error": "fqdn must be str",
      "data": {
        "fragment": "",
        "host": "",
        "path": "/path/to/resource",
        "port": -1,
        "query": "key=value",
        "scheme": "https",
        "userinfo": "username:password",
        "extraKey": "extraValue"
      }
    }
  ]
}