{
  "description": "sample Github_hard/o82273.json",
  "meta": {
    "full_size": 3618,
    "stripped_size": 3283,
    "features": [
      "$ref",
      "additionalProperties",
      "items",
      "oneOf",
      "pattern",
      "patternProperties"
    ],
    "raw_features": [
      "$schema",
      "_boolSchema",
      "definitions",
      "properties",
      "required",
      "type",
      "type:array",
      "type:boolean",
      "type:integer",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "tree-sitter grammar specification",
    "type": "object",
    "required": [
      "name",
      "rules"
    ],
    "additionalProperties": false,
    "properties": {
      "name": {
        "description": "the name of the grammar",
        "type": "string",
        "pattern": "^[a-zA-Z_]\\w*"
      },
      "rules": {
        "type": "object",
        "patternProperties": {
          "^[a-zA-Z_]\\w*$": {
            "$ref": "#/definitions/rule"
          }
        },
        "additionalProperties": false
      },
      "extras": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/rule"
        }
      },
      "externals": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/rule"
        }
      },
      "inline": {
        "type": "array",
        "items": {
          "type": "string",
          "pattern": "^[a-zA-Z_]\\w*$"
        }
      },
      "conflicts": {
        "type": "array",
        "items": {
          "type": "array",
          "items": {
            "type": "string",
            "pattern": "^[a-zA-Z_]\\w*$"
          }
        }
      },
      "word": {
        "type": "string",
        "pattern": "^[a-zA-Z_]\\w*"
      },
      "supertypes": {
        "description": "A list of hidden rule names that should be considered supertypes in the generated node types file. See http://tree-sitter.github.io/tree-sitter/using-parsers#static-node-types.",
        "type": "array",
        "items": {
          "description": "the name of a rule in `rules` or `extras`",
          "type": "string"
        }
      }
    },
    "definitions": {
      "blank-rule": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "pattern": "^BLANK$"
          }
        },
        "required": [
          "type"
        ]
      },
      "string-rule": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "pattern": "^STRING$"
          },
          "value": {
            "type": "string"
          }
        },
        "required": [
          "type",
          "value"
        ]
      },
      "pattern-rule": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "pattern": "^PATTERN$"
          },
          "value": {
            "type": "string"
          }
        },
        "required": [
          "type",
          "value"
        ]
      },
      "symbol-rule": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "pattern": "^SYMBOL$"
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "type",
          "name"
        ]
      },
      "seq-rule": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "pattern": "^SEQ$"
          },
          "members": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/rule"
            }
          }
        },
        "required": [
          "type",
          "members"
        ]
      },
      "choice-rule": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "pattern": "^CHOICE$"
          },
          "members": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/rule"
            }
          }
        },
        "required": [
          "type",
          "members"
        ]
      },
      "alias-rule": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "pattern": "^ALIAS$"
          },
          "value": {
            "type": "string"
          },
          "named": {
            "type": "boolean"
          },
          "content": {
            "$ref": "#/definitions/rule"
          }
        },
        "required": [
          "type",
          "named",
          "content",
          "value"
        ]
      },
      "repeat-rule": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "pattern": "^REPEAT$"
          },
          "content": {
            "$ref": "#/definitions/rule"
          }
        },
        "required": [
          "type",
          "content"
        ]
      },
      "repeat1-rule": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "pattern": "^REPEAT1$"
          },
          "content": {
            "$ref": "#/definitions/rule"
          }
        },
        "required": [
          "type",
          "content"
        ]
      },
      "token-rule": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "pattern": "^(TOKEN|IMMEDIATE_TOKEN)$"
          },
          "content": {
            "$ref": "#/definitions/rule"
          }
        },
        "required": [
          "type",
          "content"
        ]
      },
      "field-rule": {
        "properties": {
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "pattern": "^FIELD$"
          },
          "content": {
            "$ref": "#/definitions/rule"
          }
        },
        "required": [
          "name",
          "type",
          "content"
        ]
      },
      "prec-rule": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "pattern": "^(PREC|PREC_LEFT|PREC_RIGHT|PREC_DYNAMIC)$"
          },
          "value": {
            "type": "integer"
          },
          "content": {
            "$ref": "#/definitions/rule"
          }
        },
        "required": [
          "type",
          "content",
          "value"
        ]
      },
      "rule": {
        "oneOf": [
          {
            "$ref": "#/definitions/alias-rule"
          },
          {
            "$ref": "#/definitions/blank-rule"
          },
          {
            "$ref": "#/definitions/string-rule"
          },
          {
            "$ref": "#/definitions/pattern-rule"
          },
          {
            "$ref": "#/definitions/symbol-rule"
          },
          {
            "$ref": "#/definitions/seq-rule"
          },
          {
            "$ref": "#/definitions/choice-rule"
          },
          {
            "$ref": "#/definitions/repeat1-rule"
          },
          {
            "$ref": "#/definitions/repeat-rule"
          },
          {
            "$ref": "#/definitions/token-rule"
          },
          {
            "$ref": "#/definitions/field-rule"
          },
          {
            "$ref": "#/definitions/prec-rule"
          }
        ]
      }
    }
  },
  "tests": [
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "name": "example_grammar",
        "rules": {
          "root": {
            "type": "SEQ",
            "members": [
              {
                "type": "SYMBOL",
                "name": "expression"
              },
              {
                "type": "SYMBOL",
                "name": "expression"
              }
            ]
          },
          "expression": {
            "type": "CHOICE",
            "members": [
              {
                "type": "SYMBOL",
                "name": "term"
              },
              {
                "type": "SEQ",
                "members": [
                  {
                    "type": "SYMBOL",
                    "name": "expression"
                  },
                  {
                    "type": "SYMBOL",
                    "name": "operator"
                  },
                  {
                    "type": "SYMBOL",
                    "name": "term"
                  }
                ]
              }
            ]
          },
          "term": {
            "type": "CHOICE",
            "members": [
              {
                "type": "SYMBOL",
                "name": "factor"
              },
              {
                "type": "SEQ",
                "members": [
                  {
                    "type": "SYMBOL",
                    "name": "term"
                  },
                  {
                    "type": "SYMBOL",
                    "name": "factor"
                  }
                ]
              }
            ]
          },
          "factor": {
            "type": "CHOICE",
            "members": [
              {
                "type": "SYMBOL",
                "name": "number"
              },
              {
                "type": "SYMBOL",
                "name": "variable"
              }
            ]
          },
          "operator": {
            "type": "CHOICE",
            "members": [
              {
                "type": "SYMBOL",
                "name": "plus"
              },
              {
                "type": "SYMBOL",
                "name": "minus"
              }
            ]
          },
          "number": {
            "type": "STRING",
            "value": "[0-9]+"
          },
          "variable": {
            "type": "STRING",
            "value": "[a-zA-Z]+"
          },
          "plus": {
            "type": "STRING",
            "value": "\\+"
          },
          "minus": {
            "type": "STRING",
            "value": "-"
          }
        },
        "extras": [
          {
            "type": "SYMBOL",
            "name": "expression"
          }
        ],
        "externals": [
          {
            "type": "SYMBOL",
            "name": "expression"
          }
        ],
        "inline": [
          "expression"
        ],
        "conflicts": [
          [
            "expression",
            "term"
          ]
        ],
        "word": "expression",
        "supertypes": [
          "expression"
        ]
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "name": "example_grammar",
        "rules": {
          "rule1": {
            "type": "SEQ",
            "members": [
              {
                "type": "SYMBOL",
                "name": "symbol1"
              },
              {
                "type": "STRING",
                "value": "hello"
              }
            ]
          },
          "rule2": {
            "type": "CHOICE",
            "members": [
              {
                "type": "SYMBOL",
                "name": "symbol2"
              },
              {
                "type": "STRING",
                "value": "world"
              }
            ]
          }
        },
        "extras": [
          {
            "type": "SYMBOL",
            "name": "symbol3"
          }
        ],
        "externals": [
          {
            "type": "STRING",
            "value": "external"
          }
        ],
        "inline": [
          "inline1",
          "inline2"
        ],
        "conflicts": [
          [
            "rule1",
            "rule2"
          ]
        ],
        "word": "example_word",
        "supertypes": [
          "rule1",
          "rule2"
        ]
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "{\"type\":\"SEQ\",\"members\":[{\"type\":\"SYMBOL\",\"name\":\"symbol1\"},{\"type\":\"STRING\",\"value\":null}]} is not valid under any of the schemas listed in the 'oneOf' keyword",
      "python_error": "Additional properties are not allowed ('unknown_property' was unexpected)\n\nFailed validating 'additionalProperties' in schema:\n    {'$schema': 'http://json-schema.org/draft-07/schema#',\n     'title': 'tree-sitter grammar specification',\n     'type': 'object',\n     'required': ['name', 'rules'],\n     'additionalProperties': False,\n     'properties': {'name': {'description': 'the name of the grammar',\n                             'type': 'string',\n                             'pattern': '^[a-zA-Z_]\\\\w*'},\n                    'rules': {'type': 'object',\n                              'patternProperties': {'^[a-zA-Z_]\\\\w*$': {'$ref': '#/definitions/rule'}},\n                              'additionalProperties': False},\n                    'extras': {'type': 'array',\n                               'items': {'$ref': '#/definitions/rule'}},\n                    'externals': {'type': 'array',\n                                  'items': {'$ref': '#/definitions/rule'}},\n                    'inline': {'type': 'array',\n     .. (8423 more)",
      "data": {
        "name": "example_grammar",
        "rules": {
          "rule1": {
            "type": "SEQ",
            "members": [
              {
                "type": "SYMBOL",
                "name": "symbol1"
              },
              {
                "type": "STRING",
                "value": null
              }
            ]
          },
          "rule2": {
            "type": "CHOICE",
            "members": [
              {
                "type": "SYMBOL",
                "name": "symbol2"
              },
              {
                "type": "STRING",
                "value": "world"
              }
            ]
          }
        },
        "extras": [
          {
            "type": "SYMBOL",
            "name": "symbol3"
          }
        ],
        "externals": [
          {
            "type": "STRING",
            "value": "external"
          }
        ],
        "inline": [
          "inline1",
          "inline2"
        ],
        "conflicts": [
          [
            "rule1",
            "rule2"
          ]
        ],
        "word": "example_word",
        "supertypes": [
          "rule1",
          "rule2",
          "rule3"
        ],
        "unknown_property": "unknown_value"
      }
    }
  ]
}