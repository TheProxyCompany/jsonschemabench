{
  "description": "sample JsonSchemaStore/xs-app.json",
  "meta": {
    "full_size": 4471,
    "stripped_size": 4256,
    "features": [
      "$ref",
      "@minmaxInteger",
      "@minmaxItems",
      "@minmaxLength",
      "@minmaxProperties",
      "additionalProperties",
      "additionalProperties:object",
      "enum",
      "format",
      "format:destinations-rules",
      "format:local-file",
      "format:logout-rules",
      "format:regex",
      "format:relative-uri",
      "format:route-rules",
      "format:services-rules",
      "format:uri",
      "format:valid-header-value",
      "items",
      "uniqueItems"
    ],
    "raw_features": [
      "$id",
      "$schema",
      "_boolSchema",
      "definitions",
      "minItems",
      "minLength",
      "minProperties",
      "minimum",
      "properties",
      "required",
      "type",
      "type:[]",
      "type:array",
      "type:boolean",
      "type:integer",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$comment": "Based on https://github.wdf.sap.corp/xs2/approuter.js/blob/master/lib/configuration/schemas/xs-app-schema.json",
    "$id": "http://example.com/xsapp.schema.json",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "definitions": {
      "sourceSchema": {
        "type": [
          "string",
          "object"
        ],
        "minLength": 1,
        "format": "regex",
        "additionalProperties": false,
        "properties": {
          "path": {
            "type": "string",
            "minLength": 1,
            "format": "regex"
          },
          "matchCase": {
            "type": "boolean"
          }
        },
        "required": [
          "path"
        ]
      },
      "scopesSchema": {
        "type": [
          "string",
          "array",
          "object"
        ],
        "minProperties": 1,
        "additionalProperties": false,
        "properties": {
          "GET": {
            "$ref": "#/definitions/scopeTemplate"
          },
          "POST": {
            "$ref": "#/definitions/scopeTemplate"
          },
          "HEAD": {
            "$ref": "#/definitions/scopeTemplate"
          },
          "PUT": {
            "$ref": "#/definitions/scopeTemplate"
          },
          "DELETE": {
            "$ref": "#/definitions/scopeTemplate"
          },
          "TRACE": {
            "$ref": "#/definitions/scopeTemplate"
          },
          "PATCH": {
            "$ref": "#/definitions/scopeTemplate"
          },
          "OPTIONS": {
            "$ref": "#/definitions/scopeTemplate"
          },
          "CONNECT": {
            "$ref": "#/definitions/scopeTemplate"
          },
          "default": {
            "$ref": "#/definitions/scopeTemplate"
          }
        },
        "minLength": 1,
        "minItems": 1,
        "items": {
          "type": "string",
          "minLength": 1
        }
      },
      "scopeTemplate": {
        "$id": "scopeTemplate",
        "type": [
          "string",
          "array"
        ],
        "minLength": 1,
        "minItems": 1,
        "items": {
          "type": "string",
          "minLength": 1
        }
      }
    },
    "description": "Application Router Configuration Schema",
    "properties": {
      "welcomeFile": {
        "type": "string",
        "minLength": 1
      },
      "authenticationMethod": {
        "type": "string",
        "enum": [
          "none",
          "route"
        ]
      },
      "sessionTimeout": {
        "type": "integer",
        "minimum": 1
      },
      "pluginMetadataEndpoint": {
        "type": "string",
        "minLength": 1,
        "format": "relative-uri"
      },
      "routes": {
        "type": "array",
        "items": {
          "type": "object",
          "additionalProperties": false,
          "format": "route-rules",
          "properties": {
            "source": {
              "$ref": "#/definitions/sourceSchema"
            },
            "httpMethods": {
              "type": "array",
              "minItems": 1,
              "items": {
                "type": "string",
                "enum": [
                  "DELETE",
                  "GET",
                  "HEAD",
                  "OPTIONS",
                  "POST",
                  "PUT",
                  "TRACE",
                  "PATCH"
                ]
              }
            },
            "target": {
              "type": "string",
              "minLength": 1,
              "format": "relative-uri"
            },
            "destination": {
              "type": "string",
              "minLength": 1
            },
            "localDir": {
              "type": "string",
              "minLength": 1
            },
            "csrfProtection": {
              "type": "boolean"
            },
            "service": {
              "type": "string"
            },
            "endpoint": {
              "type": "string"
            },
            "authenticationType": {
              "type": "string",
              "enum": [
                "xsuaa",
                "basic",
                "none"
              ]
            },
            "identityProvider": {
              "type": "string",
              "minLength": 1
            },
            "scope": {
              "$ref": "#/definitions/scopesSchema"
            },
            "replace": {
              "type": "object",
              "required": [
                "pathSuffixes"
              ],
              "additionalProperties": false,
              "properties": {
                "pathSuffixes": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "minLength": 1,
                    "format": "relative-uri"
                  }
                },
                "vars": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "minLength": 1
                  }
                },
                "services": {
                  "type": "object"
                }
              }
            },
            "cacheControl": {
              "type": "string",
              "minLength": 1,
              "format": "valid-header-value"
            }
          },
          "required": [
            "source"
          ]
        }
      },
      "destinations": {
        "type": "object",
        "format": "destinations-rules",
        "additionalProperties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "logoutPath": {
              "type": "string",
              "minLength": 1,
              "format": "relative-uri"
            },
            "logoutMethod": {
              "type": "string",
              "enum": [
                "PUT",
                "POST",
                "GET"
              ]
            }
          }
        }
      },
      "services": {
        "type": "object",
        "format": "services-rules",
        "additionalProperties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "endpoint": {
              "type": "string",
              "minLength": 1
            },
            "logoutPath": {
              "type": "string",
              "minLength": 1,
              "format": "relative-uri"
            },
            "logoutMethod": {
              "type": "string",
              "enum": [
                "PUT",
                "POST",
                "GET"
              ]
            }
          }
        }
      },
      "logout": {
        "type": "object",
        "additionalProperties": false,
        "format": "logout-rules",
        "properties": {
          "logoutEndpoint": {
            "type": "string",
            "minLength": 1,
            "format": "relative-uri"
          },
          "logoutPage": {
            "type": "string",
            "minLength": 1,
            "format": "uri"
          }
        }
      },
      "login": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "callbackEndpoint": {
            "type": "string",
            "minLength": 1,
            "format": "relative-uri"
          }
        },
        "required": [
          "callbackEndpoint"
        ]
      },
      "whitelistService": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "endpoint": {
            "type": "string",
            "minLength": 1,
            "format": "relative-uri"
          }
        },
        "required": [
          "endpoint"
        ]
      },
      "compression": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "enabled": {
            "type": "boolean"
          },
          "minSize": {
            "type": "integer",
            "minimum": 1
          }
        }
      },
      "websockets": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "enabled": {
            "type": "boolean"
          }
        },
        "required": [
          "enabled"
        ]
      },
      "errorPage": {
        "type": "array",
        "additionalProperties": false,
        "items": {
          "type": "object",
          "required": [
            "status",
            "file"
          ],
          "properties": {
            "status": {
              "type": [
                "integer",
                "array"
              ],
              "minimum": 1,
              "minItems": 1,
              "uniqueItems": true,
              "items": {
                "type": "integer",
                "minimum": 1
              }
            },
            "file": {
              "type": "string",
              "minLength": 1,
              "format": "local-file"
            }
          }
        }
      }
    },
    "title": "com.sap.xsapp.schema_8.2",
    "type": "object"
  },
  "tests": [
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "welcomeFile": "index.html",
        "authenticationMethod": "route",
        "sessionTimeout": 30,
        "pluginMetadataEndpoint": "/pluginMetadata",
        "routes": [
          {
            "source": "^/api/(.*)$",
            "httpMethods": [
              "GET",
              "POST"
            ],
            "target": "/$1",
            "destination": "my-destination",
            "csrfProtection": true,
            "service": "my-service",
            "endpoint": "/my-endpoint",
            "authenticationType": "xsuaa",
            "identityProvider": "my-idp",
            "scope": {
              "GET": [
                "$XSAPPNAME.my-scope"
              ],
              "POST": [
                "$XSAPPNAME.my-scope"
              ]
            },
            "replace": {
              "pathSuffixes": [
                "/suffix1",
                "/suffix2"
              ],
              "vars": [
                "var1",
                "var2"
              ],
              "services": {
                "my-service": {
                  "endpoint": "/my-endpoint"
                }
              }
            },
            "cacheControl": "max-age=3600"
          }
        ],
        "destinations": {
          "my-destination": {
            "logoutPath": "/logout",
            "logoutMethod": "POST"
          }
        },
        "services": {
          "my-service": {
            "endpoint": "/my-endpoint",
            "logoutPath": "/logout",
            "logoutMethod": "POST"
          }
        },
        "logout": {
          "logoutEndpoint": "/logout",
          "logoutPage": "https://example.com/logout.html"
        },
        "login": {
          "callbackEndpoint": "/login/callback"
        },
        "whitelistService": {
          "endpoint": "/whitelist"
        },
        "compression": {
          "enabled": true,
          "minSize": 1024
        },
        "websockets": {
          "enabled": true
        },
        "errorPage": [
          {
            "status": 404,
            "file": "404.html"
          },
          {
            "status": [
              500,
              501
            ],
            "file": "500.html"
          }
        ]
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "$schema": "http://example.com/xsapp.schema.json",
        "welcomeFile": "index.html",
        "authenticationMethod": "route",
        "sessionTimeout": 30,
        "pluginMetadataEndpoint": "/pluginMetadata",
        "routes": [
          {
            "source": "^/api/(.*)$",
            "httpMethods": [
              "GET",
              "POST"
            ],
            "target": "/api/$1",
            "destination": "my-destination",
            "csrfProtection": true,
            "authenticationType": "xsuaa",
            "identityProvider": "my-idp",
            "scope": {
              "GET": [
                "$XSAPPNAME.Display"
              ],
              "POST": [
                "$XSAPPNAME.Modify"
              ]
            },
            "replace": {
              "pathSuffixes": [
                "/api/v1",
                "/api/v2"
              ],
              "vars": [
                "var1",
                "var2"
              ],
              "services": {
                "service1": "service1-endpoint"
              }
            },
            "cacheControl": "max-age=3600"
          },
          {
            "source": "^/public/(.*)$",
            "httpMethods": [
              "GET"
            ],
            "target": "/public/$1",
            "localDir": "public",
            "csrfProtection": false,
            "authenticationType": "none"
          }
        ],
        "destinations": {
          "my-destination": {
            "logoutPath": "/logout",
            "logoutMethod": "POST"
          }
        },
        "services": {
          "my-service": {
            "endpoint": "/my-service",
            "logoutPath": "/logout",
            "logoutMethod": "POST"
          }
        },
        "logout": {
          "logoutEndpoint": "/logout",
          "logoutPage": "https://example.com/logout.html"
        },
        "login": {
          "callbackEndpoint": "/login/callback"
        },
        "whitelistService": {
          "endpoint": "/whitelist-service"
        },
        "compression": {
          "enabled": true,
          "minSize": 1024
        },
        "websockets": {
          "enabled": true
        },
        "errorPage": [
          {
            "status": 404,
            "file": "404.html"
          },
          {
            "status": [
              500,
              501
            ],
            "file": "500.html"
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on uniqueItems keyword",
      "valid": false,
      "rust_error": "[500,500] has non-unique elements",
      "python_error": "[500, 500] has non-unique elements\n\nFailed validating 'uniqueItems' in schema['properties']['errorPage']['items']['properties']['status']:\n    {'type': ['integer', 'array'],\n     'minimum': 1,\n     'minItems': 1,\n     'uniqueItems': True,\n     'items': {'type': 'integer', 'minimum': 1}}\n\nOn instance['errorPage'][0]['status']:\n    [500, 500]",
      "data": {
        "$schema": "http://example.com/xsapp.schema.json",
        "welcomeFile": "index.html",
        "authenticationMethod": "route",
        "sessionTimeout": 30,
        "pluginMetadataEndpoint": "/pluginMetadata",
        "routes": [
          {
            "source": "^/api/(.*)$",
            "httpMethods": [
              "GET",
              "POST"
            ],
            "target": "/api/$1",
            "destination": "my-destination",
            "csrfProtection": true,
            "authenticationType": "xsuaa",
            "identityProvider": "my-idp",
            "scope": {
              "GET": [
                "$XSAPPNAME.Display"
              ],
              "POST": [
                "$XSAPPNAME.Modify"
              ]
            },
            "replace": {
              "pathSuffixes": [
                "/api/v1",
                "/api/v2"
              ],
              "vars": [
                "var1",
                "var2"
              ],
              "services": {
                "service1": "service1-endpoint"
              }
            },
            "cacheControl": "max-age=3600"
          },
          {
            "source": "^/public/(.*)$",
            "httpMethods": [
              "GET"
            ],
            "target": "/public/$1",
            "localDir": "public",
            "csrfProtection": false,
            "authenticationType": "none"
          }
        ],
        "destinations": {
          "my-destination": {
            "logoutPath": "/logout",
            "logoutMethod": "POST"
          }
        },
        "services": {
          "my-service": {
            "endpoint": "/my-service",
            "logoutPath": "/logout",
            "logoutMethod": "POST"
          }
        },
        "logout": {
          "logoutEndpoint": "/logout",
          "logoutPage": "https://example.com/logout.html"
        },
        "login": {
          "callbackEndpoint": "/login/callback"
        },
        "whitelistService": {
          "endpoint": "/whitelist-service"
        },
        "compression": {
          "enabled": true,
          "minSize": 1024
        },
        "websockets": {
          "enabled": true
        },
        "errorPage": [
          {
            "status": [
              500,
              500
            ],
            "file": "500.html"
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on minimum keyword",
      "valid": false,
      "rust_error": "0 is less than the minimum of 1",
      "python_error": "0 is less than the minimum of 1\n\nFailed validating 'minimum' in schema['properties']['sessionTimeout']:\n    {'type': 'integer', 'minimum': 1}\n\nOn instance['sessionTimeout']:\n    0",
      "data": {
        "$schema": "http://example.com/xsapp.schema.json",
        "welcomeFile": "index.html",
        "authenticationMethod": "route",
        "sessionTimeout": 0,
        "pluginMetadataEndpoint": "/pluginMetadata",
        "routes": [
          {
            "source": "^/api/(.*)$",
            "httpMethods": [
              "GET",
              "POST"
            ],
            "target": "/api/$1",
            "destination": "my-destination",
            "csrfProtection": true,
            "authenticationType": "xsuaa",
            "identityProvider": "my-idp",
            "scope": {
              "GET": [
                "$XSAPPNAME.Display"
              ],
              "POST": [
                "$XSAPPNAME.Modify"
              ]
            },
            "replace": {
              "pathSuffixes": [
                "/api/v1",
                "/api/v2"
              ],
              "vars": [
                "var1",
                "var2"
              ],
              "services": {
                "service1": "service1-endpoint"
              }
            },
            "cacheControl": "max-age=3600"
          },
          {
            "source": "^/public/(.*)$",
            "httpMethods": [
              "GET"
            ],
            "target": "/public/$1",
            "localDir": "public",
            "csrfProtection": false,
            "authenticationType": "none"
          }
        ],
        "destinations": {
          "my-destination": {
            "logoutPath": "/logout",
            "logoutMethod": "POST"
          }
        },
        "services": {
          "my-service": {
            "endpoint": "/my-service",
            "logoutPath": "/logout",
            "logoutMethod": "POST"
          }
        },
        "logout": {
          "logoutEndpoint": "/logout",
          "logoutPage": "https://example.com/logout.html"
        },
        "login": {
          "callbackEndpoint": "/login/callback"
        },
        "whitelistService": {
          "endpoint": "/whitelist-service"
        },
        "compression": {
          "enabled": true,
          "minSize": 0
        },
        "websockets": {
          "enabled": true
        },
        "errorPage": [
          {
            "status": 404,
            "file": "404.html"
          },
          {
            "status": [
              500,
              501
            ],
            "file": "500.html"
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on type keyword with an array of types",
      "valid": false,
      "rust_error": "12345 is not of type \"string\"",
      "python_error": "12345 is not of type 'string'\n\nFailed validating 'type' in schema['properties']['welcomeFile']:\n    {'type': 'string', 'minLength': 1}\n\nOn instance['welcomeFile']:\n    12345",
      "data": {
        "$schema": "http://example.com/xsapp.schema.json",
        "welcomeFile": 12345,
        "authenticationMethod": "route",
        "sessionTimeout": 30,
        "pluginMetadataEndpoint": "/pluginMetadata",
        "routes": [
          {
            "source": "some-source",
            "httpMethods": [
              "GET",
              "POST"
            ],
            "target": "/api/$1",
            "destination": "my-destination",
            "csrfProtection": true,
            "authenticationType": "xsuaa",
            "identityProvider": "my-idp",
            "scope": {
              "GET": [
                "$XSAPPNAME.Display"
              ],
              "POST": [
                "$XSAPPNAME.Modify"
              ]
            },
            "replace": {
              "pathSuffixes": [
                "/api/v1",
                "/api/v2"
              ],
              "vars": [
                "var1",
                "var2"
              ],
              "services": {
                "service1": "service1-endpoint"
              }
            },
            "cacheControl": "max-age=3600"
          },
          {
            "source": "^/public/(.*)$",
            "httpMethods": [
              "GET"
            ],
            "target": "/public/$1",
            "localDir": "public",
            "csrfProtection": false,
            "authenticationType": "none"
          }
        ],
        "destinations": {
          "my-destination": {
            "logoutPath": "/logout",
            "logoutMethod": "POST"
          }
        },
        "services": {
          "my-service": {
            "endpoint": "/my-service",
            "logoutPath": "/logout",
            "logoutMethod": "POST"
          }
        },
        "logout": {
          "logoutEndpoint": "/logout",
          "logoutPage": "https://example.com/logout.html"
        },
        "login": {
          "callbackEndpoint": "/login/callback"
        },
        "whitelistService": {
          "endpoint": "/whitelist-service"
        },
        "compression": {
          "enabled": true,
          "minSize": 1024
        },
        "websockets": {
          "enabled": true
        },
        "errorPage": [
          {
            "status": 404,
            "file": "404.html"
          },
          {
            "status": [
              500,
              501
            ],
            "file": "500.html"
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on minLength keyword",
      "valid": false,
      "rust_error": "\"\" is shorter than 1 character",
      "python_error": "'' should be non-empty\n\nFailed validating 'minLength' in schema['properties']['welcomeFile']:\n    {'type': 'string', 'minLength': 1}\n\nOn instance['welcomeFile']:\n    ''",
      "data": {
        "$schema": "http://example.com/xsapp.schema.json",
        "welcomeFile": "",
        "authenticationMethod": "route",
        "sessionTimeout": 30,
        "pluginMetadataEndpoint": "/pluginMetadata",
        "routes": [
          {
            "source": "^/api/(.*)$",
            "httpMethods": [
              "GET",
              "POST"
            ],
            "target": "/api/$1",
            "destination": "my-destination",
            "csrfProtection": true,
            "authenticationType": "xsuaa",
            "identityProvider": "my-idp",
            "scope": {
              "GET": [
                "$XSAPPNAME.Display"
              ],
              "POST": [
                "$XSAPPNAME.Modify"
              ]
            },
            "replace": {
              "pathSuffixes": [
                "/api/v1",
                "/api/v2"
              ],
              "vars": [
                "var1",
                "var2"
              ],
              "services": {
                "service1": "service1-endpoint"
              }
            },
            "cacheControl": "max-age=3600"
          },
          {
            "source": "^/public/(.*)$",
            "httpMethods": [
              "GET"
            ],
            "target": "/public/$1",
            "localDir": "public",
            "csrfProtection": false,
            "authenticationType": "none"
          }
        ],
        "destinations": {
          "my-destination": {
            "logoutPath": "/logout",
            "logoutMethod": "POST"
          }
        },
        "services": {
          "my-service": {
            "endpoint": "/my-service",
            "logoutPath": "/logout",
            "logoutMethod": "POST"
          }
        },
        "logout": {
          "logoutEndpoint": "/logout",
          "logoutPage": "https://example.com/logout.html"
        },
        "login": {
          "callbackEndpoint": "/login/callback"
        },
        "whitelistService": {
          "endpoint": "/whitelist-service"
        },
        "compression": {
          "enabled": true,
          "minSize": 1024
        },
        "websockets": {
          "enabled": true
        },
        "errorPage": [
          {
            "status": 404,
            "file": "404.html"
          },
          {
            "status": [
              500,
              501
            ],
            "file": "500.html"
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on minItems keyword",
      "valid": false,
      "rust_error": "[] has less than 1 item",
      "python_error": "[] should be non-empty\n\nFailed validating 'minItems' in schema['properties']['routes']['items']['properties']['httpMethods']:\n    {'type': 'array',\n     'minItems': 1,\n     'items': {'type': 'string',\n               'enum': ['DELETE',\n                        'GET',\n                        'HEAD',\n                        'OPTIONS',\n                        'POST',\n                        'PUT',\n                        'TRACE',\n                        'PATCH']}}\n\nOn instance['routes'][0]['httpMethods']:\n    []",
      "data": {
        "$schema": "http://example.com/xsapp.schema.json",
        "welcomeFile": "index.html",
        "authenticationMethod": "route",
        "sessionTimeout": 30,
        "pluginMetadataEndpoint": "/pluginMetadata",
        "routes": [
          {
            "source": "^/api/(.*)$",
            "httpMethods": [],
            "target": "/api/$1",
            "destination": "my-destination",
            "csrfProtection": true,
            "authenticationType": "xsuaa",
            "identityProvider": "my-idp",
            "scope": {
              "GET": [
                "$XSAPPNAME.Display"
              ],
              "POST": [
                "$XSAPPNAME.Modify"
              ]
            },
            "replace": {
              "pathSuffixes": [
                "/api/v1",
                "/api/v2"
              ],
              "vars": [
                "var1",
                "var2"
              ],
              "services": {
                "service1": "service1-endpoint"
              }
            },
            "cacheControl": "max-age=3600"
          },
          {
            "source": "^/public/(.*)$",
            "httpMethods": [
              "GET"
            ],
            "target": "/public/$1",
            "localDir": "public",
            "csrfProtection": false,
            "authenticationType": "none"
          }
        ],
        "destinations": {
          "my-destination": {
            "logoutPath": "/logout",
            "logoutMethod": "POST"
          }
        },
        "services": {
          "my-service": {
            "endpoint": "/my-service",
            "logoutPath": "/logout",
            "logoutMethod": "POST"
          }
        },
        "logout": {
          "logoutEndpoint": "/logout",
          "logoutPage": "https://example.com/logout.html"
        },
        "login": {
          "callbackEndpoint": "/login/callback"
        },
        "whitelistService": {
          "endpoint": "/whitelist-service"
        },
        "compression": {
          "enabled": true,
          "minSize": 1024
        },
        "websockets": {
          "enabled": true
        },
        "errorPage": [
          {
            "status": 404,
            "file": "404.html"
          },
          {
            "status": [
              500,
              501
            ],
            "file": "500.html"
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "Additional properties are not allowed ('nonExistingProperty' was unexpected)",
      "python_error": "Additional properties are not allowed ('nonExistingProperty' was unexpected)\n\nFailed validating 'additionalProperties' in schema['properties']['routes']['items']:\n    {'type': 'object',\n     'additionalProperties': False,\n     'format': 'route-rules',\n     'properties': {'source': {'$ref': '#/definitions/sourceSchema'},\n                    'httpMethods': {'type': 'array',\n                                    'minItems': 1,\n                                    'items': {'type': 'string',\n                                              'enum': ['DELETE',\n                                                       'GET',\n                                                       'HEAD',\n                                                       'OPTIONS',\n                                                       'POST',\n                                                       'PUT',\n                                                       'TRACE',\n                                                       'PATCH']}},\n                    't.. (2511 more)",
      "data": {
        "$schema": "http://example.com/xsapp.schema.json",
        "welcomeFile": "index.html",
        "authenticationMethod": "route",
        "sessionTimeout": 30,
        "pluginMetadataEndpoint": "/pluginMetadata",
        "routes": [
          {
            "source": "^/api/(.*)$",
            "httpMethods": [
              "GET",
              "POST"
            ],
            "target": "/api/$1",
            "destination": "my-destination",
            "csrfProtection": true,
            "authenticationType": "xsuaa",
            "identityProvider": "my-idp",
            "scope": {
              "GET": [
                "$XSAPPNAME.Display"
              ],
              "POST": [
                "$XSAPPNAME.Modify"
              ]
            },
            "replace": {
              "pathSuffixes": [
                "/api/v1",
                "/api/v2"
              ],
              "vars": [
                "var1",
                "var2"
              ],
              "services": {
                "service1": "service1-endpoint"
              }
            },
            "cacheControl": "max-age=3600",
            "nonExistingProperty": "this should cause validation error"
          },
          {
            "source": "^/public/(.*)$",
            "httpMethods": [
              "nonExistingMethod"
            ],
            "target": "/public/$1",
            "localDir": "public",
            "csrfProtection": false,
            "authenticationType": "none"
          }
        ],
        "destinations": {
          "my-destination": {
            "logoutPath": "/logout",
            "logoutMethod": "POST"
          }
        },
        "services": {
          "my-service": {
            "endpoint": "/my-service",
            "logoutPath": "/logout",
            "logoutMethod": "POST"
          }
        },
        "logout": {
          "logoutEndpoint": "/logout",
          "logoutPage": "https://example.com/logout.html"
        },
        "login": {
          "callbackEndpoint": "/login/callback"
        },
        "whitelistService": {
          "endpoint": "/whitelist-service"
        },
        "compression": {
          "enabled": true,
          "minSize": 0
        },
        "websockets": {
          "enabled": true
        },
        "errorPage": [
          {
            "status": -1,
            "file": "404.html"
          },
          {
            "status": [
              500,
              501
            ],
            "file": "500.html"
          }
        ]
      }
    }
  ]
}