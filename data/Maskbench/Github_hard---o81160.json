{
  "description": "sample Github_hard/o81160.json",
  "meta": {
    "full_size": 4092,
    "stripped_size": 3788,
    "features": [
      "$ref",
      "@siblingKeys",
      "additionalProperties",
      "allOf",
      "anyOf",
      "dependencies",
      "format",
      "format:bool-value-in-mapping",
      "format:expose",
      "format:ports",
      "items",
      "oneOf",
      "patternProperties"
    ],
    "raw_features": [
      "_boolSchema",
      "definitions",
      "properties",
      "required",
      "type",
      "type:[]",
      "type:array",
      "type:boolean",
      "type:integer",
      "type:null",
      "type:number",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "allOf": [
      {
        "$ref": "#/definitions/service"
      },
      {
        "$ref": "#/definitions/constraints"
      }
    ],
    "definitions": {
      "constraints": {
        "_id": "#/definitions/constraints",
        "anyOf": [
          {
            "required": [
              "build"
            ]
          },
          {
            "required": [
              "image"
            ]
          }
        ],
        "properties": {
          "build": {
            "required": [
              "context"
            ]
          }
        }
      },
      "list_of_strings": {
        "items": {
          "type": "string"
        },
        "type": "array",
        "_uniqueItems": true
      },
      "list_or_dict": {
        "oneOf": [
          {
            "additionalProperties": false,
            "patternProperties": {
              ".+": {
                "format": "bool-value-in-mapping",
                "type": [
                  "string",
                  "number",
                  "boolean",
                  "null"
                ]
              }
            },
            "type": "object"
          },
          {
            "items": {
              "type": "string"
            },
            "type": "array",
            "_uniqueItems": true
          }
        ]
      },
      "service": {
        "_id": "#/definitions/service",
        "additionalProperties": false,
        "dependencies": {
          "memswap_limit": [
            "mem_limit"
          ]
        },
        "properties": {
          "build": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "additionalProperties": false,
                "properties": {
                  "args": {
                    "oneOf": [
                      {
                        "$ref": "#/definitions/list_of_strings"
                      },
                      {
                        "additionalProperties": false,
                        "patternProperties": {
                          "^.+$": {
                            "type": [
                              "string",
                              "number"
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ]
                  },
                  "context": {
                    "type": "string"
                  },
                  "dockerfile": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            ]
          },
          "cap_add": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "_uniqueItems": true
          },
          "cap_drop": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "_uniqueItems": true
          },
          "cgroup_parent": {
            "type": "string"
          },
          "command": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              }
            ]
          },
          "container_name": {
            "type": "string"
          },
          "cpu_quota": {
            "type": [
              "number",
              "string"
            ]
          },
          "cpu_shares": {
            "type": [
              "number",
              "string"
            ]
          },
          "cpuset": {
            "type": "string"
          },
          "depends_on": {
            "$ref": "#/definitions/list_of_strings"
          },
          "devices": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "_uniqueItems": true
          },
          "dns": {
            "$ref": "#/definitions/string_or_list"
          },
          "dns_search": {
            "$ref": "#/definitions/string_or_list"
          },
          "domainname": {
            "type": "string"
          },
          "entrypoint": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              }
            ]
          },
          "env_file": {
            "$ref": "#/definitions/string_or_list"
          },
          "environment": {
            "$ref": "#/definitions/list_or_dict"
          },
          "expose": {
            "items": {
              "format": "expose",
              "type": [
                "string",
                "number"
              ]
            },
            "type": "array",
            "_uniqueItems": true
          },
          "extends": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "additionalProperties": false,
                "properties": {
                  "file": {
                    "type": "string"
                  },
                  "service": {
                    "type": "string"
                  }
                },
                "required": [
                  "service"
                ],
                "type": "object"
              }
            ]
          },
          "external_links": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "_uniqueItems": true
          },
          "extra_hosts": {
            "$ref": "#/definitions/list_or_dict"
          },
          "hostname": {
            "type": "string"
          },
          "image": {
            "type": "string"
          },
          "ipc": {
            "type": "string"
          },
          "labels": {
            "$ref": "#/definitions/list_or_dict"
          },
          "links": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "_uniqueItems": true
          },
          "logging": {
            "additionalProperties": false,
            "properties": {
              "driver": {
                "type": "string"
              },
              "options": {
                "type": "object"
              }
            },
            "type": "object"
          },
          "mac_address": {
            "type": "string"
          },
          "mem_limit": {
            "type": [
              "number",
              "string"
            ]
          },
          "memswap_limit": {
            "type": [
              "number",
              "string"
            ]
          },
          "network_mode": {
            "type": "string"
          },
          "networks": {
            "oneOf": [
              {
                "$ref": "#/definitions/list_of_strings"
              },
              {
                "additionalProperties": false,
                "patternProperties": {
                  "^[a-zA-Z0-9._-]+$": {
                    "oneOf": [
                      {
                        "additionalProperties": false,
                        "properties": {
                          "aliases": {
                            "$ref": "#/definitions/list_of_strings"
                          }
                        },
                        "type": "object"
                      },
                      {
                        "type": "null"
                      }
                    ]
                  }
                },
                "type": "object"
              }
            ]
          },
          "pid": {
            "type": [
              "string",
              "null"
            ]
          },
          "ports": {
            "items": {
              "format": "ports",
              "type": [
                "string",
                "number"
              ]
            },
            "type": "array",
            "_uniqueItems": true
          },
          "privileged": {
            "type": "boolean"
          },
          "read_only": {
            "type": "boolean"
          },
          "restart": {
            "type": "string"
          },
          "security_opt": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "_uniqueItems": true
          },
          "shm_size": {
            "type": [
              "number",
              "string"
            ]
          },
          "stdin_open": {
            "type": "boolean"
          },
          "stop_signal": {
            "type": "string"
          },
          "tty": {
            "type": "boolean"
          },
          "ulimits": {
            "patternProperties": {
              "^[a-z]+$": {
                "oneOf": [
                  {
                    "type": "integer"
                  },
                  {
                    "additionalProperties": false,
                    "properties": {
                      "hard": {
                        "type": "integer"
                      },
                      "soft": {
                        "type": "integer"
                      }
                    },
                    "required": [
                      "soft",
                      "hard"
                    ],
                    "type": "object"
                  }
                ]
              }
            },
            "type": "object"
          },
          "user": {
            "type": "string"
          },
          "volume_driver": {
            "type": "string"
          },
          "volumes": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "_uniqueItems": true
          },
          "volumes_from": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "_uniqueItems": true
          },
          "working_dir": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "string_or_list": {
        "oneOf": [
          {
            "type": "string"
          },
          {
            "$ref": "#/definitions/list_of_strings"
          }
        ]
      }
    },
    "type": "object"
  },
  "tests": [
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "build": {
          "context": "/path/to/context",
          "dockerfile": "Dockerfile",
          "args": {
            "key": "value"
          }
        },
        "cap_add": [
          "NET_ADMIN"
        ],
        "cap_drop": [
          "SYS_ADMIN"
        ],
        "cgroup_parent": "cgroup-parent",
        "command": "command",
        "container_name": "container-name",
        "cpu_quota": 10000,
        "cpu_shares": 1024,
        "cpuset": "0-3",
        "depends_on": [
          "service1",
          "service2"
        ],
        "devices": [
          "/dev/ttyUSB0:/dev/ttyUSB0"
        ],
        "dns": [
          "8.8.8.8",
          "8.8.4.4"
        ],
        "dns_search": [
          "example.com",
          "example.net"
        ],
        "domainname": "example.com",
        "entrypoint": "/bin/bash",
        "env_file": [
          "env1.env",
          "env2.env"
        ],
        "environment": {
          "key": "value"
        },
        "expose": [
          "80",
          "443"
        ],
        "extends": {
          "file": "docker-compose.yml",
          "service": "service"
        },
        "external_links": [
          "service1:service1",
          "service2:service2"
        ],
        "extra_hosts": {
          "host1": "192.168.1.100",
          "host2": "192.168.1.101"
        },
        "hostname": "example.com",
        "image": "image:latest",
        "ipc": "host",
        "labels": {
          "key": "value"
        },
        "links": [
          "service1:service1",
          "service2:service2"
        ],
        "logging": {
          "driver": "json-file",
          "options": {
            "labels": "key=value",
            "env": "key=value"
          }
        },
        "mac_address": "00:11:22:33:44:55",
        "mem_limit": "1024m",
        "memswap_limit": "2048m",
        "network_mode": "host",
        "networks": {
          "network1": {
            "aliases": [
              "alias1",
              "alias2"
            ]
          }
        },
        "pid": "host",
        "ports": [
          "80:80",
          "443:443"
        ],
        "privileged": true,
        "read_only": true,
        "restart": "always",
        "security_opt": [
          "label:disable"
        ],
        "shm_size": "64m",
        "stdin_open": true,
        "stop_signal": "SIGKILL",
        "tty": true,
        "ulimits": {
          "nofile": {
            "hard": 65535,
            "soft": 65535
          }
        },
        "user": "user:group",
        "volume_driver": "volume-driver",
        "volumes": [
          "/path/to/volume:/path/to/container"
        ],
        "volumes_from": [
          "service1:service1",
          "service2:service2"
        ],
        "working_dir": "/path/to/working/directory"
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "build": {
          "args": {
            "key1": "value1",
            "key2": 123
          },
          "context": "/path/to/context",
          "dockerfile": "Dockerfile"
        },
        "cap_add": [
          "NET_ADMIN"
        ],
        "cap_drop": [
          "SYS_ADMIN"
        ],
        "command": [
          "bash",
          "-c",
          "echo Hello World"
        ],
        "container_name": "my_container",
        "cpu_quota": 100000,
        "cpu_shares": 1024,
        "cpuset": "0-3",
        "depends_on": [
          "service1",
          "service2"
        ],
        "devices": [
          "/dev/ttyUSB0:/dev/ttyUSB0"
        ],
        "dns": [
          "8.8.8.8"
        ],
        "dns_search": [
          "example.com"
        ],
        "domainname": "example.com",
        "entrypoint": [
          "bash",
          "-c"
        ],
        "env_file": [
          "env_file1.env",
          "env_file2.env"
        ],
        "environment": {
          "VARIABLE1": "value1",
          "VARIABLE2": "value2"
        },
        "expose": [
          "8080"
        ],
        "extends": {
          "file": "docker-compose.yml",
          "service": "service1"
        },
        "external_links": [
          "service1:service1"
        ],
        "extra_hosts": {
          "host1": "192.168.1.100",
          "host2": "192.168.1.101"
        },
        "hostname": "my_hostname",
        "image": "my_image:latest",
        "ipc": "host",
        "labels": {
          "label1": "value1",
          "label2": "value2"
        },
        "links": [
          "service1:service1"
        ],
        "logging": {
          "driver": "json-file",
          "options": {
            "labels": "my_label",
            "env": "my_env"
          }
        },
        "mac_address": "00:11:22:33:44:55",
        "mem_limit": "1g",
        "memswap_limit": "2g",
        "network_mode": "host",
        "networks": {
          "my_network": {
            "aliases": [
              "my_alias"
            ]
          }
        },
        "pid": "host",
        "ports": [
          "8080:8080"
        ],
        "privileged": true,
        "read_only": true,
        "restart": "always",
        "security_opt": [
          "label:disable"
        ],
        "shm_size": "128m",
        "stdin_open": true,
        "stop_signal": "SIGTERM",
        "tty": true,
        "ulimits": {
          "nofile": {
            "hard": 1024,
            "soft": 512
          }
        },
        "user": "my_user",
        "volume_driver": "local",
        "volumes": [
          "/path/to/volume:/path/to/container"
        ],
        "volumes_from": [
          "service1:service1"
        ],
        "working_dir": "/path/to/working/dir"
      }
    },
    {
      "description": "llama-70b generated negative; focus on type keyword with an array of types",
      "valid": false,
      "rust_error": "true is not of types \"number\", \"string\"",
      "python_error": "True is not of type 'number', 'string'\n\nFailed validating 'type' in schema['allOf'][0]['properties']['shm_size']:\n    {'type': ['number', 'string']}\n\nOn instance['shm_size']:\n    True",
      "data": {
        "build": {
          "args": {
            "key1": "value1",
            "key2": 123
          },
          "context": "/path/to/context",
          "dockerfile": "Dockerfile"
        },
        "cap_add": [
          "NET_ADMIN"
        ],
        "cap_drop": [
          "SYS_ADMIN"
        ],
        "command": [
          "bash",
          "-c",
          "echo Hello World"
        ],
        "container_name": "my_container",
        "cpu_quota": true,
        "cpu_shares": true,
        "cpuset": "0-3",
        "depends_on": [
          "service1",
          "service2"
        ],
        "devices": [
          "/dev/ttyUSB0:/dev/ttyUSB0"
        ],
        "dns": [
          "8.8.8.8"
        ],
        "dns_search": [
          "example.com"
        ],
        "domainname": "example.com",
        "entrypoint": [
          "bash",
          "-c"
        ],
        "env_file": [
          "env_file1.env",
          "env_file2.env"
        ],
        "environment": {
          "VARIABLE1": null,
          "VARIABLE2": "value2"
        },
        "expose": [
          "8080"
        ],
        "extends": {
          "file": "docker-compose.yml",
          "service": "service1"
        },
        "external_links": [
          "service1:service1"
        ],
        "extra_hosts": {
          "host1": "192.168.1.100",
          "host2": "192.168.1.101"
        },
        "hostname": "my_hostname",
        "image": "my_image:latest",
        "ipc": "host",
        "labels": {
          "label1": "value1",
          "label2": "value2"
        },
        "links": [
          "service1:service1"
        ],
        "logging": {
          "driver": "json-file",
          "options": {
            "labels": "my_label",
            "env": "my_env"
          }
        },
        "mac_address": "00:11:22:33:44:55",
        "mem_limit": true,
        "memswap_limit": true,
        "network_mode": "host",
        "networks": {
          "my_network": {
            "aliases": [
              "my_alias"
            ]
          }
        },
        "pid": "host",
        "ports": [
          "8080:8080"
        ],
        "privileged": true,
        "read_only": true,
        "restart": "always",
        "security_opt": [
          "label:disable"
        ],
        "shm_size": true,
        "stdin_open": true,
        "stop_signal": "SIGTERM",
        "tty": true,
        "ulimits": {
          "nofile": {
            "hard": "abc",
            "soft": 512
          }
        },
        "user": "my_user",
        "volume_driver": "local",
        "volumes": [
          "/path/to/volume:/path/to/container"
        ],
        "volumes_from": [
          "service1:service1"
        ],
        "working_dir": "/path/to/working/dir"
      }
    },
    {
      "description": "llama-70b generated negative; focus on allOf keyword",
      "valid": false,
      "rust_error": "Additional properties are not allowed ('allOf' was unexpected)",
      "python_error": "Additional properties are not allowed ('allOf' was unexpected)\n\nFailed validating 'additionalProperties' in schema['allOf'][0]:\n    {'_id': '#/definitions/service',\n     'additionalProperties': False,\n     'dependencies': {'memswap_limit': ['mem_limit']},\n     'properties': {'build': {'oneOf': [{'type': 'string'},\n                                        {'additionalProperties': False,\n                                         'properties': {'args': {'oneOf': [{'$ref': '#/definitions/list_of_strings'},\n                                                                           {'additionalProperties': False,\n                                                                            'patternProperties': {'^.+$': {'type': ['string',\n                                                                                                                    'number']}},\n                                                                            'type': 'object'}]},\n                                                        'co.. (6695 more)",
      "data": {
        "allOf": [
          {
            "$ref": "#/definitions/service"
          },
          {
            "$ref": "#/definitions/constraints"
          }
        ]
      }
    }
  ]
}