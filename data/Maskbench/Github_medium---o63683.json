{
  "description": "sample Github_medium/o63683.json",
  "meta": {
    "full_size": 1302,
    "stripped_size": 607,
    "features": [],
    "raw_features": [
      "properties",
      "required",
      "type",
      "type:number",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "description": "Configuration file for making 'db' from 'spk' and 'vstim'.[dataflow](./dataflow.vsdx)",
    "properties": {
      "inputs": {
        "properties": {
          "path": {
            "description": "path of input file contains 'spk' and 'vstim'",
            "type": "string"
          }
        },
        "required": [
          "path"
        ],
        "type": "object"
      },
      "outputs": {
        "properties": {
          "path": {
            "description": "path of output file.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "params": {
        "properties": {
          "dt_sec": {
            "description": "time resolution, in seconds.",
            "type": "number"
          },
          "kernel_size_sec": {
            "description": "length of gaussian kernel for smoothing psth, in seconds.",
            "type": "number"
          },
          "sample_intersection_sec": {
            "description": "length of intersection between each two input/output samples, in seconds.",
            "type": "number"
          },
          "sample_size_sec": {
            "description": "length of each input/output sample, in seconds.",
            "type": "number"
          },
          "trial_length_sec": {
            "description": "length of each trial, in seconds. for dividing 'spk' or 'vstim' to sub-trials.",
            "type": "number"
          },
          "window_size_sec": {
            "description": "length of the window of computing the psth, in seconds.",
            "type": "number"
          }
        },
        "required": [
          "dt_sec",
          "trial_length_sec",
          "window_size_sec",
          "kernel_size_sec",
          "sample_size_sec",
          "sample_intersection_sec"
        ],
        "type": "object"
      }
    },
    "required": [
      "inputs",
      "params",
      "outputs"
    ],
    "title": "JSON schema for 'DataUtils.mkdata' function",
    "type": "object"
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "inputs": {
          "path": "/path/to/input/file"
        },
        "outputs": {
          "path": "/path/to/output/file"
        },
        "params": {
          "dt_sec": 0.01,
          "kernel_size_sec": 0.1,
          "sample_intersection_sec": 0.05,
          "sample_size_sec": 0.1,
          "trial_length_sec": 10,
          "window_size_sec": 1
        }
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "123 is not of type \"string\"",
      "python_error": "123 is not of type 'string'\n\nFailed validating 'type' in schema['properties']['inputs']['properties']['path']:\n    {'description': \"path of input file contains 'spk' and 'vstim'\",\n     'type': 'string'}\n\nOn instance['inputs']['path']:\n    123",
      "data": {
        "inputs": {
          "path": 123
        },
        "outputs": {
          "path": "/path/to/output/file"
        },
        "params": {
          "dt_sec": 0.01,
          "kernel_size_sec": 0.1,
          "sample_intersection_sec": 0.05,
          "sample_size_sec": 0.1,
          "trial_length_sec": 10,
          "window_size_sec": 1
        }
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "inputs": {
          "path": "/path/to/input/file"
        },
        "outputs": {
          "path": "/path/to/output/file"
        },
        "params": {
          "dt_sec": 0.01,
          "kernel_size_sec": 0.1,
          "sample_intersection_sec": 0.05,
          "sample_size_sec": 0.2,
          "trial_length_sec": 10,
          "window_size_sec": 5
        },
        "description": "Configuration file for making 'db' from 'spk' and 'vstim'."
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "null is not of type \"string\"",
      "python_error": "None is not of type 'string'\n\nFailed validating 'type' in schema['properties']['inputs']['properties']['path']:\n    {'description': \"path of input file contains 'spk' and 'vstim'\",\n     'type': 'string'}\n\nOn instance['inputs']['path']:\n    None",
      "data": {
        "description": "Configuration file for making 'db' from 'spk' and 'vstim'.",
        "inputs": {
          "path": null
        },
        "outputs": {
          "path": "/path/to/output/file"
        },
        "params": {
          "dt_sec": 0.01,
          "kernel_size_sec": 0.1,
          "sample_intersection_sec": 0.05,
          "sample_size_sec": 0.2,
          "trial_length_sec": 10,
          "window_size_sec": 5
        }
      }
    }
  ]
}