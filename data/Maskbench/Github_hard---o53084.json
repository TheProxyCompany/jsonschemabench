{
  "description": "sample Github_hard/o53084.json",
  "meta": {
    "full_size": 2405,
    "stripped_size": 2206,
    "features": [
      "$ref",
      "@minmaxInteger",
      "@minmaxItems",
      "@minmaxNumber",
      "additionalProperties",
      "additionalProperties:object",
      "allOf",
      "anyOf",
      "enum",
      "format",
      "format:regex",
      "format:uri",
      "format:uri-reference",
      "items"
    ],
    "raw_features": [
      "definitions",
      "exclusiveMinimum",
      "minItems",
      "minimum",
      "properties",
      "type",
      "type:[]",
      "type:array",
      "type:boolean",
      "type:integer",
      "type:number",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "default": {},
    "definitions": {
      "nonNegativeInteger": {
        "minimum": 0,
        "type": "integer"
      },
      "nonNegativeIntegerDefault0": {
        "allOf": [
          {
            "$ref": "#/definitions/nonNegativeInteger"
          },
          {
            "default": 0
          }
        ]
      },
      "schemaArray": {
        "items": {
          "$ref": "#"
        },
        "minItems": 1,
        "type": "array"
      },
      "simpleTypes": {
        "enum": [
          "array",
          "boolean",
          "integer",
          "null",
          "number",
          "object",
          "string"
        ]
      },
      "stringArray": {
        "default": [],
        "items": {
          "type": "string"
        },
        "type": "array",
        "_uniqueItems": true
      }
    },
    "properties": {
      "$id": {
        "format": "uri-reference",
        "type": "string"
      },
      "$ref": {
        "format": "uri-reference",
        "type": "string"
      },
      "$schema": {
        "format": "uri",
        "type": "string"
      },
      "additionalItems": {
        "$ref": "#"
      },
      "additionalProperties": {
        "$ref": "#"
      },
      "allOf": {
        "$ref": "#/definitions/schemaArray"
      },
      "anyOf": {
        "$ref": "#/definitions/schemaArray"
      },
      "const": {},
      "contains": {
        "$ref": "#"
      },
      "default": {},
      "definitions": {
        "additionalProperties": {
          "$ref": "#"
        },
        "default": {},
        "type": "object"
      },
      "dependencies": {
        "additionalProperties": {
          "anyOf": [
            {
              "$ref": "#"
            },
            {
              "$ref": "#/definitions/stringArray"
            }
          ]
        },
        "type": "object"
      },
      "description": {
        "type": "string"
      },
      "enum": {
        "minItems": 1,
        "type": "array",
        "_uniqueItems": true
      },
      "exclusiveMaximum": {
        "type": "number"
      },
      "exclusiveMinimum": {
        "type": "number"
      },
      "format": {
        "type": "string"
      },
      "items": {
        "anyOf": [
          {
            "$ref": "#"
          },
          {
            "$ref": "#/definitions/schemaArray"
          }
        ],
        "default": {}
      },
      "maxItems": {
        "$ref": "#/definitions/nonNegativeInteger"
      },
      "maxLength": {
        "$ref": "#/definitions/nonNegativeInteger"
      },
      "maxProperties": {
        "$ref": "#/definitions/nonNegativeInteger"
      },
      "maximum": {
        "type": "number"
      },
      "minItems": {
        "$ref": "#/definitions/nonNegativeIntegerDefault0"
      },
      "minLength": {
        "$ref": "#/definitions/nonNegativeIntegerDefault0"
      },
      "minProperties": {
        "$ref": "#/definitions/nonNegativeIntegerDefault0"
      },
      "minimum": {
        "type": "number"
      },
      "multipleOf": {
        "exclusiveMinimum": 0,
        "type": "number"
      },
      "my_keyword": {
        "type": "boolean"
      },
      "not": {
        "$ref": "#"
      },
      "oneOf": {
        "$ref": "#/definitions/schemaArray"
      },
      "pattern": {
        "format": "regex",
        "type": "string"
      },
      "patternProperties": {
        "additionalProperties": {
          "$ref": "#"
        },
        "default": {},
        "type": "object"
      },
      "properties": {
        "additionalProperties": {
          "$ref": "#"
        },
        "default": {},
        "type": "object"
      },
      "propertyNames": {
        "$ref": "#"
      },
      "required": {
        "$ref": "#/definitions/stringArray"
      },
      "title": {
        "type": "string"
      },
      "type": {
        "anyOf": [
          {
            "$ref": "#/definitions/simpleTypes"
          },
          {
            "items": {
              "$ref": "#/definitions/simpleTypes"
            },
            "minItems": 1,
            "type": "array",
            "_uniqueItems": true
          }
        ]
      },
      "_uniqueItems": {
        "default": false,
        "type": "boolean"
      }
    },
    "title": "Core schema meta-schema",
    "type": [
      "object",
      "boolean"
    ]
  },
  "tests": [
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "$id": "https://example.com/schema",
        "$schema": "https://json-schema.org/draft-07/schema#",
        "additionalProperties": false,
        "allOf": [
          {
            "$ref": "#"
          }
        ],
        "anyOf": [
          {
            "$ref": "#"
          }
        ],
        "const": "constant",
        "contains": {
          "$ref": "#"
        },
        "default": {},
        "definitions": {
          "example": {
            "type": "string"
          }
        },
        "dependencies": {
          "example": {
            "properties": {
              "example": {
                "type": "string"
              }
            },
            "required": [
              "example"
            ]
          }
        },
        "description": "Example schema",
        "enum": [
          "value1",
          "value2"
        ],
        "exclusiveMaximum": 10,
        "exclusiveMinimum": 5,
        "format": "email",
        "items": {
          "$ref": "#"
        },
        "maxItems": 10,
        "maxLength": 10,
        "maxProperties": 10,
        "maximum": 10,
        "minItems": 1,
        "minLength": 1,
        "minProperties": 1,
        "minimum": 5,
        "multipleOf": 2,
        "my_keyword": true,
        "not": {
          "$ref": "#"
        },
        "oneOf": [
          {
            "$ref": "#"
          }
        ],
        "pattern": "^example$",
        "patternProperties": {
          "^example$": {
            "$ref": "#"
          }
        },
        "properties": {
          "example": {
            "type": "string"
          }
        },
        "propertyNames": {
          "$ref": "#"
        },
        "required": [
          "example"
        ],
        "title": "Example schema",
        "type": [
          "object",
          "boolean"
        ],
        "_uniqueItems": true
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "$id": "https://example.com/schema",
        "$schema": "https://json-schema.org/draft-07/schema#",
        "title": "Example Schema",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the person"
          },
          "age": {
            "type": "integer",
            "minimum": 0,
            "maximum": 100
          },
          "hobbies": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "minItems": 1,
            "uniqueItems": true
          }
        },
        "required": [
          "name",
          "age"
        ],
        "additionalProperties": false
      }
    },
    {
      "description": "llama-70b generated negative; focus on format keyword",
      "valid": false,
      "rust_error": "\"!not a uri-reference!\" is not a \"uri-reference\"",
      "python_error": "'!not a uri-reference!' is not a 'uri-reference'\n\nFailed validating 'format' in schema['properties']['$ref']:\n    {'format': 'uri-reference', 'type': 'string'}\n\nOn instance['$ref']:\n    '!not a uri-reference!'",
      "data": {
        "$id": "https://example.com/schema",
        "$schema": "https://json-schema.org/draft-07/schema#",
        "title": "Example Schema",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the person"
          },
          "age": {
            "type": "integer",
            "minimum": 0,
            "maximum": 100
          },
          "hobbies": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "minItems": 1,
            "uniqueItems": true
          }
        },
        "required": [
          "name",
          "age"
        ],
        "additionalProperties": false,
        "$ref": "!not a uri-reference!"
      }
    },
    {
      "description": "llama-70b generated negative; focus on anyOf keyword",
      "valid": false,
      "rust_error": "5 is not valid under any of the schemas listed in the 'anyOf' keyword",
      "python_error": "5 is not valid under any of the given schemas\n\nFailed validating 'anyOf' in schema['properties']['dependencies']['additionalProperties']:\n    {'anyOf': [{'$ref': '#'}, {'$ref': '#/definitions/stringArray'}]}\n\nOn instance['dependencies']['name']:\n    5",
      "data": {
        "$id": "https://example.com/schema",
        "$schema": "https://json-schema.org/draft-07/schema#",
        "title": "Example Schema",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the person"
          },
          "age": {
            "type": "integer",
            "minimum": 0,
            "maximum": 100
          },
          "hobbies": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "minItems": 1,
            "_uniqueItems": true
          }
        },
        "required": [
          "name",
          "age"
        ],
        "additionalProperties": false,
        "dependencies": {
          "name": 5
        }
      }
    }
  ]
}