{
  "description": "sample Snowplow/sp_347_Normalized.json",
  "meta": {
    "full_size": 2431,
    "stripped_size": 2225,
    "features": [
      "@minmaxInteger",
      "@minmaxItems",
      "@minmaxProperties",
      "additionalProperties",
      "enum",
      "items",
      "pattern"
    ],
    "raw_features": [
      "_boolSchema",
      "maxProperties",
      "maximum",
      "minItems",
      "minProperties",
      "minimum",
      "properties",
      "required",
      "type",
      "type:array",
      "type:boolean",
      "type:integer",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "additionalProperties": false,
    "description": "Schema for API Request Enrichment configuration",
    "properties": {
      "enabled": {
        "type": "boolean"
      },
      "name": {
        "type": "string"
      },
      "parameters": {
        "additionalProperties": false,
        "properties": {
          "api": {
            "additionalProperties": false,
            "maxProperties": 1,
            "minProperties": 1,
            "properties": {
              "http": {
                "additionalProperties": false,
                "properties": {
                  "authentication": {
                    "additionalProperties": false,
                    "properties": {
                      "httpBasic": {
                        "additionalProperties": false,
                        "properties": {
                          "password": {
                            "type": "string"
                          },
                          "username": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "username",
                          "password"
                        ],
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "method": {
                    "enum": [
                      "GET",
                      "POST",
                      "PUT"
                    ],
                    "type": "string"
                  },
                  "timeout": {
                    "maximum": 60000,
                    "minimum": 1,
                    "type": "integer"
                  },
                  "uri": {
                    "type": "string"
                  }
                },
                "required": [
                  "method",
                  "uri",
                  "timeout",
                  "authentication"
                ],
                "type": "object"
              }
            },
            "type": "object"
          },
          "cache": {
            "additionalProperties": false,
            "properties": {
              "size": {
                "minimum": 1,
                "type": "integer"
              },
              "ttl": {
                "maximum": 86400,
                "minimum": 0,
                "type": "integer"
              }
            },
            "required": [
              "size",
              "ttl"
            ],
            "type": "object"
          },
          "inputs": {
            "items": {
              "additionalProperties": false,
              "maxProperties": 2,
              "minProperties": 2,
              "properties": {
                "json": {
                  "additionalProperties": false,
                  "properties": {
                    "field": {
                      "enum": [
                        "unstruct_event",
                        "contexts",
                        "derived_contexts"
                      ],
                      "type": "string"
                    },
                    "jsonPath": {
                      "pattern": "^\\$.*$",
                      "type": "string"
                    },
                    "schemaCriterion": {
                      "pattern": "^iglu:[a-zA-Z0-9-_.]+/[a-zA-Z0-9-_]+/[a-zA-Z0-9-_]+/([1-9][0-9]*|\\*)-((?:0|[1-9][0-9]*)|\\*)-((?:0|[1-9][0-9]*)|\\*)$",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "key": {
                  "pattern": "^[A-Za-z0-9_-]+$",
                  "type": "string"
                },
                "pojo": {
                  "additionalProperties": false,
                  "properties": {
                    "field": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "required": [
                "key"
              ],
              "type": "object"
            },
            "type": "array"
          },
          "outputs": {
            "items": {
              "additionalProperties": false,
              "maxProperties": 2,
              "minProperties": 2,
              "properties": {
                "json": {
                  "additionalProperties": false,
                  "properties": {
                    "jsonPath": {
                      "pattern": "^\\$.*$",
                      "type": "string"
                    }
                  },
                  "required": [
                    "jsonPath"
                  ],
                  "type": "object"
                },
                "schema": {
                  "pattern": "^iglu:([a-zA-Z0-9-_.]+)/([a-zA-Z0-9-_]+)/([a-zA-Z0-9-_]+)/([1-9][0-9]*(?:-(?:0|[1-9][0-9]*)){2})$",
                  "type": "string"
                }
              },
              "required": [
                "schema"
              ],
              "type": "object"
            },
            "minItems": 1,
            "type": "array"
          }
        },
        "required": [
          "inputs",
          "api",
          "outputs",
          "cache"
        ],
        "type": "object"
      },
      "vendor": {
        "type": "string"
      }
    },
    "required": [
      "name",
      "vendor",
      "enabled",
      "parameters"
    ],
    "self": {
      "format": "jsonschema",
      "name": "api_request_enrichment_config",
      "vendor": "com.snowplowanalytics.snowplow.enrichments",
      "version": "1-0-0"
    },
    "type": "object"
  },
  "tests": [
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "enabled": true,
        "name": "Example Enrichment",
        "parameters": {
          "api": {
            "http": {
              "authentication": {
                "httpBasic": {
                  "password": "password123",
                  "username": "user123"
                }
              },
              "method": "GET",
              "timeout": 30000,
              "uri": "https://example.com/api/endpoint"
            }
          },
          "cache": {
            "size": 100,
            "ttl": 3600
          },
          "inputs": [
            {
              "json": {
                "field": "unstruct_event",
                "jsonPath": "$.key",
                "schemaCriterion": "iglu:com.example/event/jsonschema/1-0-0"
              },
              "key": "input1"
            },
            {
              "key": "input2",
              "pojo": {
                "field": "field1"
              }
            }
          ],
          "outputs": [
            {
              "json": {
                "jsonPath": "$.key"
              },
              "schema": "iglu:com.example/output/jsonschema/1-0-0"
            }
          ]
        },
        "vendor": "com.example.vendor"
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "enabled": true,
        "name": "Example Enrichment",
        "parameters": {
          "api": {
            "http": {
              "authentication": {
                "httpBasic": {
                  "password": "password",
                  "username": "username"
                }
              },
              "method": "GET",
              "timeout": 10000,
              "uri": "https://example.com/api"
            }
          },
          "cache": {
            "size": 100,
            "ttl": 3600
          },
          "inputs": [
            {
              "json": {
                "field": "unstruct_event",
                "jsonPath": "$.data",
                "schemaCriterion": "iglu:com.example/event/jsonschema/1-0-0"
              },
              "key": "example_input"
            }
          ],
          "outputs": [
            {
              "json": {
                "jsonPath": "$.data.example_output"
              },
              "schema": "iglu:com.example/output/jsonschema/1-0-0"
            }
          ]
        },
        "vendor": "com.example"
      }
    },
    {
      "description": "llama-70b generated negative; focus on minItems keyword",
      "valid": false,
      "rust_error": "[] has less than 1 item",
      "python_error": "[] should be non-empty\n\nFailed validating 'minItems' in schema['properties']['parameters']['properties']['outputs']:\n    {'items': {'additionalProperties': False,\n               'maxProperties': 2,\n               'minProperties': 2,\n               'properties': {'json': {'additionalProperties': False,\n                                       'properties': {'jsonPath': {'pattern': '^\\\\$.*$',\n                                                                   'type': 'string'}},\n                                       'required': ['jsonPath'],\n                                       'type': 'object'},\n                              'schema': {'pattern': '^iglu:([a-zA-Z0-9-_.]+)/([a-zA-Z0-9-_]+)/([a-zA-Z0-9-_]+)/([1-9][0-9]*(?:-(?:0|[1-9][0-9]*)){2})$',\n                                         'type': 'string'}},\n               'required': ['schema'],\n               'type': 'object'},\n     'minItems': 1,\n     'type': 'array'}\n\nOn instance['parameters']['outputs']:\n    []",
      "data": {
        "enabled": true,
        "name": "Example Enrichment",
        "parameters": {
          "api": {
            "http": {
              "authentication": {
                "httpBasic": {
                  "password": "password",
                  "username": "username"
                }
              },
              "method": "GET",
              "timeout": 10000,
              "uri": "https://example.com/api"
            }
          },
          "cache": {
            "size": 100,
            "ttl": 3600
          },
          "inputs": [
            {
              "json": {
                "field": "unstruct_event",
                "jsonPath": "$.data",
                "schemaCriterion": "iglu:com.example/event/jsonschema/1-0-0"
              },
              "key": "example_input"
            }
          ],
          "outputs": []
        },
        "vendor": "com.example"
      }
    },
    {
      "description": "llama-70b generated negative; focus on pattern keyword",
      "valid": false,
      "rust_error": "\"invalid_json_path\" does not match \"^\\$.*$\"",
      "python_error": "'invalid_json_path' does not match '^\\\\$.*$'\n\nFailed validating 'pattern' in schema['properties']['parameters']['properties']['inputs']['items']['properties']['json']['properties']['jsonPath']:\n    {'pattern': '^\\\\$.*$', 'type': 'string'}\n\nOn instance['parameters']['inputs'][0]['json']['jsonPath']:\n    'invalid_json_path'",
      "data": {
        "enabled": true,
        "name": "Example Enrichment",
        "parameters": {
          "api": {
            "http": {
              "authentication": {
                "httpBasic": {
                  "password": "password",
                  "username": "username"
                }
              },
              "method": "GET",
              "timeout": 10000,
              "uri": "https://example.com/api"
            }
          },
          "cache": {
            "size": 100,
            "ttl": 3600
          },
          "inputs": [
            {
              "json": {
                "field": "unstruct_event",
                "jsonPath": "invalid_json_path",
                "schemaCriterion": "iglu:com.example/event/jsonschema/1-0-0"
              },
              "key": "example_input"
            }
          ],
          "outputs": [
            {
              "json": {
                "jsonPath": "$.data.example_output"
              },
              "schema": "iglu:com.example/output/jsonschema/1-0-0"
            }
          ]
        },
        "vendor": "com.example"
      }
    },
    {
      "description": "llama-70b generated negative; focus on minimum keyword or maximum keyword",
      "valid": false,
      "rust_error": "0 is less than the minimum of 1",
      "python_error": "0 is less than the minimum of 1\n\nFailed validating 'minimum' in schema['properties']['parameters']['properties']['api']['properties']['http']['properties']['timeout']:\n    {'maximum': 60000, 'minimum': 1, 'type': 'integer'}\n\nOn instance['parameters']['api']['http']['timeout']:\n    0",
      "data": {
        "enabled": true,
        "name": "Example Enrichment",
        "parameters": {
          "api": {
            "http": {
              "authentication": {
                "httpBasic": {
                  "password": "password",
                  "username": "username"
                }
              },
              "method": "GET",
              "timeout": 0,
              "uri": "https://example.com/api"
            }
          },
          "cache": {
            "size": 100,
            "ttl": 3600
          },
          "inputs": [
            {
              "json": {
                "field": "unstruct_event",
                "jsonPath": "$.data",
                "schemaCriterion": "iglu:com.example/event/jsonschema/1-0-0"
              },
              "key": "example_input"
            }
          ],
          "outputs": [
            {
              "json": {
                "jsonPath": "$.data.example_output"
              },
              "schema": "iglu:com.example/output/jsonschema/1-0-0"
            }
          ]
        },
        "vendor": "com.example"
      }
    },
    {
      "description": "llama-70b generated negative; focus on minProperties keyword or maxProperties keyword",
      "valid": false,
      "rust_error": "Additional properties are not allowed ('extraProperty' was unexpected)",
      "python_error": "Additional properties are not allowed ('extraProperty' was unexpected)\n\nFailed validating 'additionalProperties' in schema['properties']['parameters']['properties']['api']:\n    {'additionalProperties': False,\n     'maxProperties': 1,\n     'minProperties': 1,\n     'properties': {'http': {'additionalProperties': False,\n                             'properties': {'authentication': {'additionalProperties': False,\n                                                               'properties': {'httpBasic': {'additionalProperties': False,\n                                                                                            'properties': {'password': {'type': 'string'},\n                                                                                                           'username': {'type': 'string'}},\n                                                                                            'required': ['username',\n                                                                                            .. (1414 more)",
      "data": {
        "enabled": true,
        "name": "Example Enrichment",
        "parameters": {
          "api": {
            "http": {
              "authentication": {
                "httpBasic": {
                  "password": "password",
                  "username": "username"
                }
              },
              "method": "GET",
              "timeout": 10000,
              "uri": "https://example.com/api"
            },
            "extraProperty": "extraValue"
          },
          "cache": {
            "size": 100,
            "ttl": 3600
          },
          "inputs": [
            {
              "json": {
                "field": "unstruct_event",
                "jsonPath": "$.data",
                "schemaCriterion": "iglu:com.example/event/jsonschema/1-0-0"
              },
              "key": "example_input",
              "extraProperty": "extraValue"
            }
          ],
          "outputs": [
            {
              "json": {
                "jsonPath": "$.data.example_output"
              },
              "schema": "iglu:com.example/output/jsonschema/1-0-0",
              "extraProperty": "extraValue"
            }
          ]
        },
        "vendor": "com.example"
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "60001 is greater than the maximum of 60000",
      "python_error": "{'json': {'field': 'unstruct_event', 'jsonPath': '$.data', 'schemaCriterion': 'iglu:com.example/event/jsonschema/1-0-0'}} does not have enough properties\n\nFailed validating 'minProperties' in schema['properties']['parameters']['properties']['inputs']['items']:\n    {'additionalProperties': False,\n     'maxProperties': 2,\n     'minProperties': 2,\n     'properties': {'json': {'additionalProperties': False,\n                             'properties': {'field': {'enum': ['unstruct_event',\n                                                               'contexts',\n                                                               'derived_contexts'],\n                                                      'type': 'string'},\n                                            'jsonPath': {'pattern': '^\\\\$.*$',\n                                                         'type': 'string'},\n                                            'schemaCriterion': {'pattern': '^iglu:[a-zA-Z0-9-_.]+/[a-zA-Z0-9-_]+/[a-zA-Z0-9-_]+/([1-9][0-9]*|\\\\*)-((?.. (712 more)",
      "data": {
        "enabled": true,
        "name": "Example Enrichment",
        "parameters": {
          "api": {
            "http": {
              "authentication": {
                "httpBasic": {
                  "password": "password",
                  "username": "username"
                }
              },
              "method": "GET",
              "timeout": 60001,
              "uri": "https://example.com/api"
            }
          },
          "cache": {
            "size": 100,
            "ttl": 86401
          },
          "inputs": [
            {
              "json": {
                "field": "unstruct_event",
                "jsonPath": "$.data",
                "schemaCriterion": "iglu:com.example/event/jsonschema/1-0-0"
              },
              "key": "example_input"
            },
            {
              "json": {
                "field": "unstruct_event",
                "jsonPath": "$.data",
                "schemaCriterion": "iglu:com.example/event/jsonschema/1-0-0"
              }
            }
          ],
          "outputs": [
            {
              "json": {
                "jsonPath": "$.data.example_output"
              },
              "schema": "iglu:com.example/output/jsonschema/1-0-0"
            }
          ]
        },
        "vendor": "com.example"
      }
    }
  ]
}