{
  "description": "sample Github_medium/o69887.json",
  "meta": {
    "full_size": 528,
    "stripped_size": 491,
    "features": [
      "@minmaxItems",
      "@minmaxLength",
      "items"
    ],
    "raw_features": [
      "$schema",
      "_requiredEmpty",
      "minItems",
      "minLength",
      "properties",
      "required",
      "type",
      "type:array",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "description": "",
    "type": "object",
    "properties": {
      "regionData": {
        "type": "array",
        "_uniqueItems": true,
        "minItems": 1,
        "items": {
          "required": [
            "id",
            "subId"
          ],
          "properties": {
            "id": {
              "type": "string",
              "minLength": 1
            },
            "subId": {
              "type": "string",
              "minLength": 1
            },
            "states": {
              "type": "array",
              "items": {
                "required": [],
                "properties": {}
              }
            }
          }
        }
      },
      "seasonIds": {
        "type": "array",
        "items": {
          "required": [],
          "properties": {}
        }
      },
      "updateTime": {
        "type": "string",
        "minLength": 1
      }
    },
    "required": [
      "regionData",
      "seasonIds",
      "updateTime"
    ]
  },
  "tests": [
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "regionData": [
          {
            "id": "region1",
            "subId": "subRegion1",
            "states": []
          },
          {
            "id": "region2",
            "subId": "subRegion2",
            "states": []
          }
        ],
        "seasonIds": [
          "season1",
          "season2"
        ],
        "updateTime": "2022-01-01 12:00:00"
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "regionData": [
          {
            "id": "region-1",
            "subId": "sub-region-1",
            "states": []
          },
          {
            "id": "region-2",
            "subId": "sub-region-2",
            "states": []
          }
        ],
        "seasonIds": [],
        "updateTime": "2022-01-01T12:00:00Z"
      }
    },
    {
      "description": "llama-70b generated negative; focus on minItems keyword",
      "valid": false,
      "rust_error": "[] has less than 1 item",
      "python_error": "[] should be non-empty\n\nFailed validating 'minItems' in schema['properties']['regionData']:\n    {'type': 'array',\n     '_uniqueItems': True,\n     'minItems': 1,\n     'items': {'required': ['id', 'subId'],\n               'properties': {'id': {'type': 'string', 'minLength': 1},\n                              'subId': {'type': 'string', 'minLength': 1},\n                              'states': {'type': 'array',\n                                         'items': {'required': [],\n                                                   'properties': {}}}}}}\n\nOn instance['regionData']:\n    []",
      "data": {
        "regionData": [],
        "seasonIds": [],
        "updateTime": "2022-01-01T12:00:00Z"
      }
    },
    {
      "description": "llama-70b generated negative; focus on minLength keyword",
      "valid": false,
      "rust_error": "\"\" is shorter than 1 character",
      "python_error": "'' should be non-empty\n\nFailed validating 'minLength' in schema['properties']['updateTime']:\n    {'type': 'string', 'minLength': 1}\n\nOn instance['updateTime']:\n    ''",
      "data": {
        "regionData": [
          {
            "id": "",
            "subId": "sub-region-1",
            "states": []
          },
          {
            "id": "region-2",
            "subId": "sub-region-2",
            "states": []
          }
        ],
        "seasonIds": [],
        "updateTime": ""
      }
    }
  ]
}