{
  "description": "sample Github_medium/o48339.json",
  "meta": {
    "full_size": 1498,
    "stripped_size": 1278,
    "features": [
      "@minmaxItems",
      "additionalProperties",
      "additionalProperties:object",
      "items"
    ],
    "raw_features": [
      "$schema",
      "_boolSchema",
      "maxItems",
      "minItems",
      "properties",
      "required",
      "type",
      "type:array",
      "type:number",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "type": "object",
    "properties": {
      "version": {
        "type": "object"
      },
      "notes": {
        "type": "string"
      },
      "include": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "_uniqueItems": true
      },
      "molecules": {
        "type": "object",
        "additionalProperties": {
          "type": "object",
          "properties": {
            "polymer_type": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "_uniqueItems": true
            },
            "comment": {
              "type": "string"
            },
            "atoms": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string"
                  },
                  "charge": {
                    "type": "number"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "name",
                  "type"
                ]
              },
              "_uniqueItems": true
            },
            "lengths": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string"
                  },
                  "atoms": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "minItems": 2,
                    "maxItems": 2,
                    "_uniqueItems": true
                  }
                }
              },
              "_uniqueItems": true
            },
            "angles": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string"
                  },
                  "atoms": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "minItems": 3,
                    "maxItems": 3,
                    "_uniqueItems": true
                  }
                }
              },
              "_uniqueItems": true
            },
            "dihedrals": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string"
                  },
                  "atoms": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "minItems": 4,
                    "maxItems": 4,
                    "_uniqueItems": true
                  }
                }
              },
              "_uniqueItems": true
            },
            "impropers": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string"
                  },
                  "atoms": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "minItems": 4,
                    "maxItems": 4,
                    "_uniqueItems": true
                  }
                }
              },
              "_uniqueItems": true
            }
          }
        }
      }
    },
    "required": [
      "notes",
      "molecules"
    ]
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "version": {},
        "notes": "Example data for the given schema.",
        "include": [
          "molecule1",
          "molecule2"
        ],
        "molecules": {
          "molecule1": {
            "polymer_type": [
              "polymer_type1",
              "polymer_type2"
            ],
            "comment": "This is a comment for molecule1.",
            "atoms": [
              {
                "name": "atom1",
                "type": "atom_type1",
                "charge": 0.5
              },
              {
                "name": "atom2",
                "type": "atom_type2",
                "charge": 0.3
              }
            ],
            "lengths": [
              {
                "type": "length_type1",
                "atoms": [
                  "atom1",
                  "atom2"
                ]
              }
            ],
            "angles": [
              {
                "type": "angle_type1",
                "atoms": [
                  "atom1",
                  "atom2",
                  "atom3"
                ]
              }
            ],
            "dihedrals": [
              {
                "type": "dihedral_type1",
                "atoms": [
                  "atom1",
                  "atom2",
                  "atom3",
                  "atom4"
                ]
              }
            ],
            "impropers": [
              {
                "type": "improper_type1",
                "atoms": [
                  "atom1",
                  "atom2",
                  "atom3",
                  "atom4"
                ]
              }
            ]
          },
          "molecule2": {
            "polymer_type": [
              "polymer_type3",
              "polymer_type4"
            ],
            "comment": "This is a comment for molecule2.",
            "atoms": [
              {
                "name": "atom5",
                "type": "atom_type3",
                "charge": 0.2
              },
              {
                "name": "atom6",
                "type": "atom_type4",
                "charge": 0.1
              }
            ],
            "lengths": [
              {
                "type": "length_type2",
                "atoms": [
                  "atom5",
                  "atom6"
                ]
              }
            ],
            "angles": [
              {
                "type": "angle_type2",
                "atoms": [
                  "atom5",
                  "atom6",
                  "atom7"
                ]
              }
            ],
            "dihedrals": [
              {
                "type": "dihedral_type2",
                "atoms": [
                  "atom5",
                  "atom6",
                  "atom7",
                  "atom8"
                ]
              }
            ],
            "impropers": [
              {
                "type": "improper_type2",
                "atoms": [
                  "atom5",
                  "atom6",
                  "atom7",
                  "atom8"
                ]
              }
            ]
          }
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on additionalProperties keyword with an object schema",
      "valid": false,
      "rust_error": "Additional properties are not allowed ('extra_property' was unexpected)",
      "python_error": "Additional properties are not allowed ('extra_property' was unexpected)\n\nFailed validating 'additionalProperties' in schema['properties']['molecules']['additionalProperties']['properties']['atoms']['items']:\n    {'type': 'object',\n     'properties': {'name': {'type': 'string'},\n                    'type': {'type': 'string'},\n                    'charge': {'type': 'number'}},\n     'additionalProperties': False,\n     'required': ['name', 'type']}\n\nOn instance['molecules']['molecule1']['atoms'][0]:\n    {'name': 'atom1',\n     'type': 'atom_type1',\n     'charge': 0.5,\n     'extra_property': 'extra_value'}",
      "data": {
        "version": {},
        "notes": "Example data for the given schema.",
        "include": [
          "molecule1",
          "molecule2"
        ],
        "molecules": {
          "molecule1": {
            "polymer_type": [
              "polymer_type1",
              "polymer_type2"
            ],
            "comment": "This is a comment for molecule1.",
            "atoms": [
              {
                "name": "atom1",
                "type": "atom_type1",
                "charge": 0.5,
                "extra_property": "extra_value"
              },
              {
                "name": "atom2",
                "type": "atom_type2",
                "charge": 0.3
              }
            ],
            "lengths": [
              {
                "type": "length_type1",
                "atoms": [
                  "atom1",
                  "atom2"
                ]
              }
            ],
            "angles": [
              {
                "type": "angle_type1",
                "atoms": [
                  "atom1",
                  "atom2",
                  "atom3"
                ]
              }
            ],
            "dihedrals": [
              {
                "type": "dihedral_type1",
                "atoms": [
                  "atom1",
                  "atom2",
                  "atom3",
                  "atom4"
                ]
              }
            ],
            "impropers": [
              {
                "type": "improper_type1",
                "atoms": [
                  "atom1",
                  "atom2",
                  "atom3",
                  "atom4"
                ]
              }
            ]
          },
          "molecule2": {
            "polymer_type": [
              "polymer_type3",
              "polymer_type4"
            ],
            "comment": "This is a comment for molecule2.",
            "atoms": [
              {
                "name": "atom5",
                "type": "atom_type3",
                "charge": 0.2
              },
              {
                "name": "atom6",
                "type": "atom_type4",
                "charge": 0.1
              }
            ],
            "lengths": [
              {
                "type": "length_type2",
                "atoms": [
                  "atom5",
                  "atom6"
                ]
              }
            ],
            "angles": [
              {
                "type": "angle_type2",
                "atoms": [
                  "atom5",
                  "atom6",
                  "atom7"
                ]
              }
            ],
            "dihedrals": [
              {
                "type": "dihedral_type2",
                "atoms": [
                  "atom5",
                  "atom6",
                  "atom7",
                  "atom8"
                ]
              }
            ],
            "impropers": [
              {
                "type": "improper_type2",
                "atoms": [
                  "atom5",
                  "atom6",
                  "atom7",
                  "atom8"
                ]
              }
            ]
          }
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on minItems keyword or maxItems keyword",
      "valid": false,
      "rust_error": "[\"atom1\"] has less than 2 items",
      "python_error": "['atom1'] is too short\n\nFailed validating 'minItems' in schema['properties']['molecules']['additionalProperties']['properties']['lengths']['items']['properties']['atoms']:\n    {'type': 'array',\n     'items': {'type': 'string'},\n     'minItems': 2,\n     'maxItems': 2,\n     '_uniqueItems': True}\n\nOn instance['molecules']['molecule1']['lengths'][0]['atoms']:\n    ['atom1']",
      "data": {
        "version": {},
        "notes": "Example data for the given schema.",
        "include": [
          "molecule1",
          "molecule2"
        ],
        "molecules": {
          "molecule1": {
            "polymer_type": [
              "polymer_type1",
              "polymer_type2"
            ],
            "comment": "This is a comment for molecule1.",
            "atoms": [
              {
                "name": "atom1",
                "type": "atom_type1",
                "charge": 0.5
              },
              {
                "name": "atom2",
                "type": "atom_type2",
                "charge": 0.3
              }
            ],
            "lengths": [
              {
                "type": "length_type1",
                "atoms": [
                  "atom1"
                ]
              }
            ],
            "angles": [
              {
                "type": "angle_type1",
                "atoms": [
                  "atom1",
                  "atom2",
                  "atom3",
                  "atom4"
                ]
              }
            ],
            "dihedrals": [
              {
                "type": "dihedral_type1",
                "atoms": [
                  "atom1",
                  "atom2",
                  "atom3"
                ]
              }
            ],
            "impropers": [
              {
                "type": "improper_type1",
                "atoms": [
                  "atom1",
                  "atom2",
                  "atom3"
                ]
              }
            ]
          },
          "molecule2": {
            "polymer_type": [
              "polymer_type3",
              "polymer_type4"
            ],
            "comment": "This is a comment for molecule2.",
            "atoms": [
              {
                "name": "atom5",
                "type": "atom_type3",
                "charge": 0.2
              },
              {
                "name": "atom6",
                "type": "atom_type4",
                "charge": 0.1
              }
            ],
            "lengths": [
              {
                "type": "length_type2",
                "atoms": [
                  "atom5",
                  "atom6"
                ]
              }
            ],
            "angles": [
              {
                "type": "angle_type2",
                "atoms": [
                  "atom5",
                  "atom6",
                  "atom7"
                ]
              }
            ],
            "dihedrals": [
              {
                "type": "dihedral_type2",
                "atoms": [
                  "atom5",
                  "atom6",
                  "atom7",
                  "atom8"
                ]
              }
            ],
            "impropers": [
              {
                "type": "improper_type2",
                "atoms": [
                  "atom5",
                  "atom6",
                  "atom7",
                  "atom8"
                ]
              }
            ]
          }
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on minItems keyword or maxItems keyword",
      "valid": false,
      "rust_error": "[\"atom1\"] has less than 2 items",
      "python_error": "['atom1'] is too short\n\nFailed validating 'minItems' in schema['properties']['molecules']['additionalProperties']['properties']['lengths']['items']['properties']['atoms']:\n    {'type': 'array',\n     'items': {'type': 'string'},\n     'minItems': 2,\n     'maxItems': 2,\n     '_uniqueItems': True}\n\nOn instance['molecules']['molecule1']['lengths'][0]['atoms']:\n    ['atom1']",
      "data": {
        "version": {},
        "notes": "Example data for the given schema.",
        "include": [
          "molecule1",
          "molecule2"
        ],
        "molecules": {
          "molecule1": {
            "polymer_type": [
              "polymer_type1",
              "polymer_type2"
            ],
            "comment": "This is a comment for molecule1.",
            "atoms": [
              {
                "name": "atom1",
                "type": "atom_type1",
                "charge": 0.5
              },
              {
                "name": "atom2",
                "type": "atom_type2",
                "charge": 0.3
              }
            ],
            "lengths": [
              {
                "type": "length_type1",
                "atoms": [
                  "atom1"
                ]
              }
            ],
            "angles": [
              {
                "type": "angle_type1",
                "atoms": [
                  "atom1",
                  "atom2"
                ]
              }
            ],
            "dihedrals": [
              {
                "type": "dihedral_type1",
                "atoms": [
                  "atom1",
                  "atom2",
                  "atom3"
                ]
              }
            ],
            "impropers": [
              {
                "type": "improper_type1",
                "atoms": [
                  "atom1",
                  "atom2",
                  "atom3"
                ]
              }
            ]
          },
          "molecule2": {
            "polymer_type": [
              "polymer_type3",
              "polymer_type4"
            ],
            "comment": "This is a comment for molecule2.",
            "atoms": [
              {
                "name": "atom5",
                "type": "atom_type3",
                "charge": 0.2
              },
              {
                "name": "atom6",
                "type": "atom_type4",
                "charge": 0.1
              }
            ],
            "lengths": [
              {
                "type": "length_type2",
                "atoms": [
                  "atom5",
                  "atom6"
                ]
              }
            ],
            "angles": [
              {
                "type": "angle_type2",
                "atoms": [
                  "atom5",
                  "atom6",
                  "atom7"
                ]
              }
            ],
            "dihedrals": [
              {
                "type": "dihedral_type2",
                "atoms": [
                  "atom5",
                  "atom6",
                  "atom7",
                  "atom8"
                ]
              }
            ],
            "impropers": [
              {
                "type": "improper_type2",
                "atoms": [
                  "atom5",
                  "atom6",
                  "atom7",
                  "atom8"
                ]
              }
            ]
          }
        }
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "[\"atom1\",\"atom2\"] has less than 3 items",
      "python_error": "['atom1', 'atom2', 'atom3'] is too short\n\nFailed validating 'minItems' in schema['properties']['molecules']['additionalProperties']['properties']['impropers']['items']['properties']['atoms']:\n    {'type': 'array',\n     'items': {'type': 'string'},\n     'minItems': 4,\n     'maxItems': 4,\n     '_uniqueItems': True}\n\nOn instance['molecules']['molecule1']['impropers'][0]['atoms']:\n    ['atom1', 'atom2', 'atom3']",
      "data": {
        "version": {},
        "notes": "Example data for the given schema.",
        "include": [
          "molecule1",
          "molecule1"
        ],
        "molecules": {
          "molecule1": {
            "polymer_type": [
              "polymer_type1",
              "polymer_type2"
            ],
            "comment": "This is a comment for molecule1.",
            "atoms": [
              {
                "name": "atom1",
                "type": "atom_type1",
                "charge": 0.5
              },
              {
                "name": "atom2",
                "type": "atom_type2",
                "charge": 0.3
              }
            ],
            "lengths": [
              {
                "type": "length_type1",
                "atoms": [
                  "atom1",
                  "atom1"
                ]
              }
            ],
            "angles": [
              {
                "type": "angle_type1",
                "atoms": [
                  "atom1",
                  "atom2"
                ]
              }
            ],
            "dihedrals": [
              {
                "type": "dihedral_type1",
                "atoms": [
                  "atom1",
                  "atom2",
                  "atom3"
                ]
              }
            ],
            "impropers": [
              {
                "type": "improper_type1",
                "atoms": [
                  "atom1",
                  "atom2",
                  "atom3"
                ]
              }
            ]
          }
        }
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "version": {},
        "notes": "This is a sample molecule configuration",
        "include": [
          "file1",
          "file2"
        ],
        "molecules": {
          "molecule1": {
            "polymer_type": [
              "polymer1",
              "polymer2"
            ],
            "comment": "This is a sample molecule",
            "atoms": [
              {
                "name": "atom1",
                "type": "atom_type1",
                "charge": 0.5
              },
              {
                "name": "atom2",
                "type": "atom_type2",
                "charge": 0.3
              }
            ],
            "lengths": [
              {
                "type": "length_type1",
                "atoms": [
                  "atom1",
                  "atom2"
                ]
              }
            ],
            "angles": [
              {
                "type": "angle_type1",
                "atoms": [
                  "atom1",
                  "atom2",
                  "atom3"
                ]
              }
            ],
            "dihedrals": [
              {
                "type": "dihedral_type1",
                "atoms": [
                  "atom1",
                  "atom2",
                  "atom3",
                  "atom4"
                ]
              }
            ],
            "impropers": [
              {
                "type": "improper_type1",
                "atoms": [
                  "atom1",
                  "atom2",
                  "atom3",
                  "atom4"
                ]
              }
            ]
          }
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on additionalProperties keyword with an object schema",
      "valid": false,
      "rust_error": "Additional properties are not allowed ('extra_property' was unexpected)",
      "python_error": "Additional properties are not allowed ('extra_property' was unexpected)\n\nFailed validating 'additionalProperties' in schema['properties']['molecules']['additionalProperties']['properties']['atoms']['items']:\n    {'type': 'object',\n     'properties': {'name': {'type': 'string'},\n                    'type': {'type': 'string'},\n                    'charge': {'type': 'number'}},\n     'additionalProperties': False,\n     'required': ['name', 'type']}\n\nOn instance['molecules']['molecule1']['atoms'][0]:\n    {'name': 'atom1',\n     'type': 'atom_type1',\n     'charge': 0.5,\n     'extra_property': 'extra_value'}",
      "data": {
        "version": {},
        "notes": "This is a sample molecule configuration",
        "include": [
          "file1",
          "file2"
        ],
        "molecules": {
          "molecule1": {
            "polymer_type": [
              "polymer1",
              "polymer2"
            ],
            "comment": "This is a sample molecule",
            "atoms": [
              {
                "name": "atom1",
                "type": "atom_type1",
                "charge": 0.5,
                "extra_property": "extra_value"
              },
              {
                "name": "atom2",
                "type": "atom_type2",
                "charge": 0.3
              }
            ],
            "lengths": [
              {
                "type": "length_type1",
                "atoms": [
                  "atom1",
                  "atom2"
                ]
              }
            ],
            "angles": [
              {
                "type": "angle_type1",
                "atoms": [
                  "atom1",
                  "atom2",
                  "atom3"
                ]
              }
            ],
            "dihedrals": [
              {
                "type": "dihedral_type1",
                "atoms": [
                  "atom1",
                  "atom2",
                  "atom3",
                  "atom4"
                ]
              }
            ],
            "impropers": [
              {
                "type": "improper_type1",
                "atoms": [
                  "atom1",
                  "atom2",
                  "atom3",
                  "atom4"
                ]
              }
            ]
          }
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on minItems keyword or maxItems keyword",
      "valid": false,
      "rust_error": "[\"atom1\"] has less than 2 items",
      "python_error": "['atom1'] is too short\n\nFailed validating 'minItems' in schema['properties']['molecules']['additionalProperties']['properties']['lengths']['items']['properties']['atoms']:\n    {'type': 'array',\n     'items': {'type': 'string'},\n     'minItems': 2,\n     'maxItems': 2,\n     '_uniqueItems': True}\n\nOn instance['molecules']['molecule1']['lengths'][0]['atoms']:\n    ['atom1']",
      "data": {
        "version": {},
        "notes": "This is a sample molecule configuration",
        "include": [
          "file1",
          "file2"
        ],
        "molecules": {
          "molecule1": {
            "polymer_type": [
              "polymer1",
              "polymer2"
            ],
            "comment": "This is a sample molecule",
            "atoms": [
              {
                "name": "atom1",
                "type": "atom_type1",
                "charge": 0.5
              },
              {
                "name": "atom2",
                "type": "atom_type2",
                "charge": 0.3
              }
            ],
            "lengths": [
              {
                "type": "length_type1",
                "atoms": [
                  "atom1"
                ]
              }
            ],
            "angles": [
              {
                "type": "angle_type1",
                "atoms": [
                  "atom1",
                  "atom2",
                  "atom3",
                  "atom4"
                ]
              }
            ],
            "dihedrals": [
              {
                "type": "dihedral_type1",
                "atoms": [
                  "atom1",
                  "atom2",
                  "atom3",
                  "atom4",
                  "atom5"
                ]
              }
            ],
            "impropers": [
              {
                "type": "improper_type1",
                "atoms": [
                  "atom1",
                  "atom2",
                  "atom3",
                  "atom4",
                  "atom5"
                ]
              }
            ]
          }
        }
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"0.5\" is not of type \"number\"",
      "python_error": "['atom1'] is too short\n\nFailed validating 'minItems' in schema['properties']['molecules']['additionalProperties']['properties']['lengths']['items']['properties']['atoms']:\n    {'type': 'array',\n     'items': {'type': 'string'},\n     'minItems': 2,\n     'maxItems': 2,\n     '_uniqueItems': True}\n\nOn instance['molecules']['molecule1']['lengths'][0]['atoms']:\n    ['atom1']",
      "data": {
        "version": {},
        "notes": "This is a sample molecule configuration",
        "include": [
          "file1",
          "file1"
        ],
        "molecules": {
          "molecule1": {
            "polymer_type": [
              "polymer1",
              "polymer2"
            ],
            "comment": "This is a sample molecule",
            "atoms": [
              {
                "name": "atom1",
                "type": "atom_type1",
                "charge": "0.5"
              },
              {
                "name": "atom2",
                "type": "atom_type2",
                "charge": 0.3
              }
            ],
            "lengths": [
              {
                "type": "length_type1",
                "atoms": [
                  "atom1"
                ]
              }
            ],
            "angles": [
              {
                "type": "angle_type1",
                "atoms": [
                  "atom1",
                  "atom2"
                ]
              }
            ],
            "dihedrals": [
              {
                "type": "dihedral_type1",
                "atoms": [
                  "atom1",
                  "atom2",
                  "atom3"
                ]
              }
            ],
            "impropers": [
              {
                "type": "improper_type1",
                "atoms": [
                  "atom1",
                  "atom2",
                  "atom3"
                ]
              }
            ]
          }
        }
      }
    }
  ]
}