{
  "description": "sample Github_trivial/o67205.json",
  "meta": {
    "full_size": 30,
    "stripped_size": 30,
    "features": [
      "@minmaxInteger"
    ],
    "raw_features": [
      "minimum",
      "type",
      "type:integer"
    ]
  },
  "schema": {
    "minimum": 0,
    "type": "integer"
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": 0
    },
    {
      "description": "llama-70b generated negative; focus on minimum keyword",
      "valid": false,
      "rust_error": "{\"-1\":null} is not of type \"integer\"",
      "python_error": "{'-1': None} is not of type 'integer'\n\nFailed validating 'type' in schema:\n    {'minimum': 0, 'type': 'integer'}\n\nOn instance:\n    {'-1': None}",
      "data": {
        "-1": null
      }
    },
    {
      "description": "llama-70b generated negative; focus on minimum keyword",
      "valid": false,
      "rust_error": "{\"minimum\":0,\"type\":\"integer\"} is not of type \"integer\"",
      "python_error": "{'minimum': 0, 'type': 'integer'} is not of type 'integer'\n\nFailed validating 'type' in schema:\n    {'minimum': 0, 'type': 'integer'}\n\nOn instance:\n    {'minimum': 0, 'type': 'integer'}",
      "data": {
        "minimum": 0,
        "type": "integer"
      }
    },
    {
      "description": "llama-70b generated negative; focus on minimum keyword",
      "valid": false,
      "rust_error": "{\"-1\":0} is not of type \"integer\"",
      "python_error": "{'-1': 0} is not of type 'integer'\n\nFailed validating 'type' in schema:\n    {'minimum': 0, 'type': 'integer'}\n\nOn instance:\n    {'-1': 0}",
      "data": {
        "-1": 0
      }
    },
    {
      "description": "llama-70b generated negative; focus on minimum keyword",
      "valid": false,
      "rust_error": "{\"type\":\"integer\"} is not of type \"integer\"",
      "python_error": "{'type': 'integer'} is not of type 'integer'\n\nFailed validating 'type' in schema:\n    {'minimum': 0, 'type': 'integer'}\n\nOn instance:\n    {'type': 'integer'}",
      "data": {
        "type": "integer"
      }
    }
  ]
}