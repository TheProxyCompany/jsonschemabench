{
  "description": "sample Github_hard/o5398.json",
  "meta": {
    "full_size": 2378,
    "stripped_size": 2360,
    "features": [
      "additionalProperties",
      "enum",
      "items",
      "pattern"
    ],
    "raw_features": [
      "$schema",
      "_boolSchema",
      "properties",
      "required",
      "type",
      "type:array",
      "type:integer",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "type": "object",
    "properties": {
      "meta": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
          },
          "type": {
            "type": "string",
            "enum": [
              "EiffelTestCaseFinishedEvent"
            ]
          },
          "version": {
            "type": "string",
            "enum": [
              "1.1.0"
            ],
            "default": "1.1.0"
          },
          "time": {
            "type": "integer"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "source": {
            "type": "object",
            "properties": {
              "domainId": {
                "type": "string"
              },
              "host": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "serializer": {
                "type": "object",
                "properties": {
                  "groupId": {
                    "type": "string"
                  },
                  "artifactId": {
                    "type": "string"
                  },
                  "version": {
                    "type": "string"
                  }
                },
                "required": [
                  "groupId",
                  "artifactId",
                  "version"
                ],
                "additionalProperties": false
              },
              "uri": {
                "type": "string"
              }
            },
            "additionalProperties": false
          },
          "security": {
            "type": "object",
            "properties": {
              "sdm": {
                "type": "object",
                "properties": {
                  "authorIdentity": {
                    "type": "string"
                  },
                  "encryptedDigest": {
                    "type": "string"
                  }
                },
                "required": [
                  "authorIdentity",
                  "encryptedDigest"
                ],
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          }
        },
        "required": [
          "id",
          "type",
          "version",
          "time"
        ],
        "additionalProperties": false
      },
      "data": {
        "type": "object",
        "properties": {
          "outcome": {
            "type": "object",
            "properties": {
              "verdict": {
                "type": "string",
                "enum": [
                  "PASSED",
                  "FAILED",
                  "INCONCLUSIVE"
                ]
              },
              "conclusion": {
                "type": "string",
                "enum": [
                  "SUCCESSFUL",
                  "FAILED",
                  "ABORTED",
                  "TIMED_OUT",
                  "INCONCLUSIVE"
                ]
              },
              "description": {
                "type": "string"
              },
              "metrics": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "value": {}
                  },
                  "required": [
                    "name",
                    "value"
                  ],
                  "additionalProperties": false
                }
              }
            },
            "required": [
              "verdict",
              "conclusion"
            ],
            "additionalProperties": false
          },
          "persistentLogs": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "uri": {
                  "type": "string"
                }
              },
              "required": [
                "name",
                "uri"
              ],
              "additionalProperties": false
            }
          },
          "customData": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "key": {
                  "type": "string"
                },
                "value": {}
              },
              "required": [
                "key",
                "value"
              ],
              "additionalProperties": false
            }
          }
        },
        "required": [
          "outcome"
        ],
        "additionalProperties": false
      },
      "links": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string"
            },
            "target": {
              "type": "string",
              "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
            }
          },
          "required": [
            "type",
            "target"
          ],
          "additionalProperties": false
        }
      }
    },
    "required": [
      "meta",
      "data",
      "links"
    ],
    "additionalProperties": false
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "meta": {
          "id": "12345678-1234-1234-8123-123456789012",
          "type": "EiffelTestCaseFinishedEvent",
          "version": "1.1.0",
          "time": 1643723400,
          "tags": [
            "test-case",
            "finished"
          ],
          "source": {
            "domainId": "test-domain",
            "host": "test-host",
            "name": "test-source",
            "serializer": {
              "groupId": "com.example",
              "artifactId": "example-serializer",
              "version": "1.0.0"
            },
            "uri": "https://example.com/test-source"
          },
          "security": {
            "sdm": {
              "authorIdentity": "test-author",
              "encryptedDigest": "encrypted-digest-value"
            }
          }
        },
        "data": {
          "outcome": {
            "verdict": "PASSED",
            "conclusion": "SUCCESSFUL",
            "description": "Test case passed successfully",
            "metrics": [
              {
                "name": "execution-time",
                "value": 1000
              },
              {
                "name": "memory-usage",
                "value": 1024
              }
            ]
          },
          "persistentLogs": [
            {
              "name": "test-log",
              "uri": "https://example.com/test-log"
            }
          ],
          "customData": [
            {
              "key": "custom-key",
              "value": "custom-value"
            }
          ]
        },
        "links": [
          {
            "type": "SELF",
            "target": "12345678-1234-1234-8123-123456789012"
          },
          {
            "type": "RELATED",
            "target": "23456789-2345-2345-8234-234567890123"
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on pattern keyword",
      "valid": false,
      "rust_error": "\"123456781234-1234-1234-8123-123456789012\" does not match \"^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$\"",
      "python_error": "'123456781234-1234-1234-8123-123456789012' does not match '^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$'\n\nFailed validating 'pattern' in schema['properties']['meta']['properties']['id']:\n    {'type': 'string',\n     'pattern': '^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$'}\n\nOn instance['meta']['id']:\n    '123456781234-1234-1234-8123-123456789012'",
      "data": {
        "meta": {
          "id": "123456781234-1234-1234-8123-123456789012",
          "type": "EiffelTestCaseFinishedEvent",
          "version": "1.1.0",
          "time": 1643723400,
          "tags": [
            "test-case",
            "finished"
          ],
          "source": {
            "domainId": "test-domain",
            "host": "test-host",
            "name": "test-source",
            "serializer": {
              "groupId": "com.example",
              "artifactId": "example-serializer",
              "version": "1.0.0"
            },
            "uri": "https://example.com/test-source"
          },
          "security": {
            "sdm": {
              "authorIdentity": "test-author",
              "encryptedDigest": "encrypted-digest-value"
            }
          }
        },
        "data": {
          "outcome": {
            "verdict": "PASSED",
            "conclusion": "SUCCESSFUL",
            "description": "Test case passed successfully",
            "metrics": [
              {
                "name": "execution-time",
                "value": 1000
              },
              {
                "name": "memory-usage",
                "value": 1024
              }
            ]
          },
          "persistentLogs": [
            {
              "name": "test-log",
              "uri": "https://example.com/test-log"
            }
          ],
          "customData": [
            {
              "key": "custom-key",
              "value": "custom-value"
            }
          ]
        },
        "links": [
          {
            "type": "SELF",
            "target": "123456781234-1234-1234-8123-123456789012"
          },
          {
            "type": "RELATED",
            "target": "23456789-2345-2345-8234-234567890123"
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"data\" is a required property",
      "python_error": "'data' is a required property\n\nFailed validating 'required' in schema:\n    {'$schema': 'http://json-schema.org/draft-04/schema#',\n     'type': 'object',\n     'properties': {'meta': {'type': 'object',\n                             'properties': {'id': {'type': 'string',\n                                                   'pattern': '^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$'},\n                                            'type': {'type': 'string',\n                                                     'enum': ['EiffelTestCaseFinishedEvent']},\n                                            'version': {'type': 'string',\n                                                        'enum': ['1.1.0'],\n                                                        'default': '1.1.0'},\n                                            'time': {'type': 'integer'},\n                                            'tags': {'type': 'array',\n                                                     'items': {'type': 'string'}.. (7855 more)",
      "data": {
        "meta": {
          "id": "12345678-1234-1234-8123-123456789012",
          "type": "EiffelTestCaseFinishedEvent",
          "version": "1.1.0",
          "time": 1643723400,
          "tags": [
            "test-case",
            "finished"
          ],
          "source": {
            "domainId": "test-domain",
            "host": "test-host",
            "name": "test-source",
            "serializer": {
              "groupId": "com.example",
              "artifactId": "example-serializer",
              "version": "1.0.0"
            },
            "uri": "https://example.com/test-source"
          },
          "security": {
            "sdm": {
              "authorIdentity": "test-author",
              "encryptedDigest": "encrypted-digest-value"
            }
          },
          "extraProperty": "extraValue"
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on pattern keyword",
      "valid": false,
      "rust_error": "\"12345678-1234-1234-8123-12345678901\" does not match \"^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$\"",
      "python_error": "'12345678-1234-1234-8123-12345678901' does not match '^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$'\n\nFailed validating 'pattern' in schema['properties']['links']['items']['properties']['target']:\n    {'type': 'string',\n     'pattern': '^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$'}\n\nOn instance['links'][0]['target']:\n    '12345678-1234-1234-8123-12345678901'",
      "data": {
        "meta": {
          "id": "12345678-1234-1234-8123-123456789012",
          "type": "EiffelTestCaseFinishedEvent",
          "version": "1.1.0",
          "time": 1643723400,
          "tags": [
            "test-case",
            "finished"
          ],
          "source": {
            "domainId": "test-domain",
            "host": "test-host",
            "name": "test-source",
            "serializer": {
              "groupId": "com.example",
              "artifactId": "example-serializer",
              "version": "1.0.0"
            },
            "uri": "https://example.com/test-source"
          },
          "security": {
            "sdm": {
              "authorIdentity": "test-author",
              "encryptedDigest": "encrypted-digest-value"
            }
          }
        },
        "data": {
          "outcome": {
            "verdict": "PASSED",
            "conclusion": "SUCCESSFUL",
            "description": "Test case passed successfully",
            "metrics": [
              {
                "name": "execution-time",
                "value": 1000
              },
              {
                "name": "memory-usage",
                "value": 1024
              }
            ]
          },
          "persistentLogs": [
            {
              "name": "test-log",
              "uri": "https://example.com/test-log"
            }
          ],
          "customData": [
            {
              "key": "custom-key",
              "value": "custom-value"
            }
          ]
        },
        "links": [
          {
            "type": "SELF",
            "target": "12345678-1234-1234-8123-12345678901"
          },
          {
            "type": "RELATED",
            "target": "23456789-2345-2345-8234-234567890123"
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on pattern keyword",
      "valid": false,
      "rust_error": "\"invalid-id\" does not match \"^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$\"",
      "python_error": "'invalid-id' does not match '^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$'\n\nFailed validating 'pattern' in schema['properties']['meta']['properties']['id']:\n    {'type': 'string',\n     'pattern': '^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$'}\n\nOn instance['meta']['id']:\n    'invalid-id'",
      "data": {
        "meta": {
          "id": "invalid-id",
          "type": "EiffelTestCaseFinishedEvent",
          "version": "1.1.0",
          "time": 1643723400,
          "tags": [
            "test-case",
            "finished"
          ],
          "source": {
            "domainId": "test-domain",
            "host": "test-host",
            "name": "test-source",
            "serializer": {
              "groupId": "com.example",
              "artifactId": "example-serializer",
              "version": "1.0.0"
            },
            "uri": "https://example.com/test-source"
          },
          "security": {
            "sdm": {
              "authorIdentity": "test-author",
              "encryptedDigest": "encrypted-digest-value"
            }
          }
        },
        "data": {
          "outcome": {
            "verdict": "PASSED",
            "conclusion": "SUCCESSFUL",
            "description": "Test case passed successfully",
            "metrics": [
              {
                "name": "execution-time",
                "value": 1000
              },
              {
                "name": "memory-usage",
                "value": 1024
              }
            ]
          },
          "persistentLogs": [
            {
              "name": "test-log",
              "uri": "https://example.com/test-log"
            }
          ],
          "customData": [
            {
              "key": "custom-key",
              "value": "custom-value"
            }
          ]
        },
        "links": [
          {
            "type": "SELF",
            "target": "12345678-1234-1234-8123-123456789012"
          },
          {
            "type": "RELATED",
            "target": "23456789-2345-2345-8234-234567890123"
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"12345678-1234-1234-8123-12345678901\" does not match \"^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$\"",
      "python_error": "'12345678-1234-1234-8123-12345678901' does not match '^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$'\n\nFailed validating 'pattern' in schema['properties']['meta']['properties']['id']:\n    {'type': 'string',\n     'pattern': '^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$'}\n\nOn instance['meta']['id']:\n    '12345678-1234-1234-8123-12345678901'",
      "data": {
        "meta": {
          "id": "12345678-1234-1234-8123-12345678901",
          "type": "EiffelTestCaseFinishedEvent",
          "version": "1.1.0",
          "time": 1643723400,
          "tags": [
            "test-case",
            "finished",
            123
          ],
          "source": {
            "domainId": "test-domain",
            "host": "test-host",
            "name": "test-source",
            "serializer": {
              "groupId": "com.example",
              "artifactId": "example-serializer",
              "version": "1.0.0"
            },
            "uri": "https://example.com/test-source"
          },
          "security": {
            "sdm": {
              "authorIdentity": "test-author",
              "encryptedDigest": "encrypted-digest-value"
            }
          }
        },
        "data": {
          "outcome": {
            "verdict": "PASSED",
            "conclusion": "SUCCESSFUL",
            "description": "Test case passed successfully",
            "metrics": [
              {
                "name": "execution-time",
                "value": 1000
              },
              {
                "name": "memory-usage",
                "value": 1024
              },
              {
                "name": "unknown-metric",
                "value": "invalid value"
              }
            ]
          },
          "persistentLogs": [
            {
              "name": "test-log",
              "uri": "https://example.com/test-log"
            },
            {
              "name": "unknown-log"
            }
          ],
          "customData": [
            {
              "key": "custom-key",
              "value": "custom-value"
            },
            {
              "key": "unknown-key"
            }
          ]
        },
        "links": [
          {
            "type": "SELF",
            "target": "12345678-1234-1234-8123-123456789012"
          },
          {
            "type": "RELATED",
            "target": "23456789-2345-2345-8234-234567890123"
          },
          {
            "type": "UNKNOWN"
          }
        ]
      }
    }
  ]
}