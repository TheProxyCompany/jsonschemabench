{
  "description": "sample Github_easy/o87861.json",
  "meta": {
    "full_size": 454,
    "stripped_size": 263,
    "features": [],
    "raw_features": [
      "$schema",
      "id",
      "properties",
      "required",
      "type",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "id": "https://raw.githubusercontent.com/washingtonpost/ans-schema/master/src/main/resources/schema/ans/v0_4/trait-version.json",
    "title": "Describes the ANS version of this object",
    "description": "The version of ANS that this object was serialized as.",
    "type": "object",
    "properties": {
      "version": {
        "description": "The version string, with in major.minor.patch format",
        "type": "string"
      }
    },
    "required": [
      "version"
    ]
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "version": "1.2.3"
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "123 is not of type \"string\"",
      "python_error": "123 is not of type 'string'\n\nFailed validating 'type' in schema['properties']['version']:\n    {'description': 'The version string, with in major.minor.patch format',\n     'type': 'string'}\n\nOn instance['version']:\n    123",
      "data": {
        "version": 123
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "1.2 is not of type \"string\"",
      "python_error": "1.2 is not of type 'string'\n\nFailed validating 'type' in schema['properties']['version']:\n    {'description': 'The version string, with in major.minor.patch format',\n     'type': 'string'}\n\nOn instance['version']:\n    1.2",
      "data": {
        "version": 1.2
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "null is not of type \"string\"",
      "python_error": "None is not of type 'string'\n\nFailed validating 'type' in schema['properties']['version']:\n    {'description': 'The version string, with in major.minor.patch format',\n     'type': 'string'}\n\nOn instance['version']:\n    None",
      "data": {
        "version": null
      }
    }
  ]
}