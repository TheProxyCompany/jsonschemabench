{
  "description": "sample Github_easy/o64731.json",
  "meta": {
    "full_size": 494,
    "stripped_size": 382,
    "features": [
      "@minmaxItems",
      "@minmaxProperties",
      "anyOf",
      "patternProperties"
    ],
    "raw_features": [
      "$id",
      "$schema",
      "minItems",
      "minProperties",
      "type",
      "type:array",
      "type:boolean",
      "type:integer",
      "type:number",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$id": "http://raw.githubusercontent.com/oasis-open/cti-stix2-json-schemas/stix2.1/schemas/common/dictionary.json",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "dictionary",
    "description": "A dictionary captures a set of key/value pairs",
    "type": "object",
    "minProperties": 1,
    "patternProperties": {
      "^[a-zA-Z0-9_-]{0,250}$": {
        "anyOf": [
          {
            "type": "array",
            "minItems": 1
          },
          {
            "type": "string"
          },
          {
            "type": "integer"
          },
          {
            "type": "boolean"
          },
          {
            "type": "number"
          },
          {
            "type": "object"
          }
        ]
      }
    },
    "addtionalProperties": false
  },
  "tests": [
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "key1": "value1",
        "key2": 123,
        "key3": true,
        "key4": 45.67,
        "key5": [
          "array_value1",
          "array_value2"
        ],
        "key6": {
          "nested_key1": "nested_value1",
          "nested_key2": 789
        }
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "key1": "value1",
        "key2": 123,
        "key3": true,
        "key4": 45.67,
        "key5": {
          "subkey1": "subvalue1",
          "subkey2": 678
        },
        "key6": [
          "array_value1",
          "array_value2",
          901
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on anyOf keyword",
      "valid": false,
      "rust_error": "null is not valid under any of the schemas listed in the 'anyOf' keyword",
      "python_error": "None is not valid under any of the given schemas\n\nFailed validating 'anyOf' in schema['patternProperties']['^[a-zA-Z0-9_-]{0,250}$']:\n    {'anyOf': [{'type': 'array', 'minItems': 1},\n               {'type': 'string'},\n               {'type': 'integer'},\n               {'type': 'boolean'},\n               {'type': 'number'},\n               {'type': 'object'}]}\n\nOn instance['key7']:\n    None",
      "data": {
        "key1": "value1",
        "key2": 123,
        "key3": true,
        "key4": 45.67,
        "key5": {
          "subkey1": "subvalue1",
          "subkey2": 678
        },
        "key6": [
          "array_value1",
          "array_value2",
          901
        ],
        "key7": null
      }
    },
    {
      "description": "llama-70b generated negative; focus on minItems keyword",
      "valid": false,
      "rust_error": "[] is not valid under any of the schemas listed in the 'anyOf' keyword",
      "python_error": "[] should be non-empty\n\nFailed validating 'minItems' in schema[0]:\n    {'type': 'array', 'minItems': 1}\n\nOn instance:\n    []",
      "data": {
        "key1": "value1",
        "key2": 123,
        "key3": true,
        "key4": 45.67,
        "key5": {
          "subkey1": "subvalue1",
          "subkey2": 678
        },
        "key6": []
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "null is not valid under any of the schemas listed in the 'anyOf' keyword",
      "python_error": "None is not valid under any of the given schemas\n\nFailed validating 'anyOf' in schema['patternProperties']['^[a-zA-Z0-9_-]{0,250}$']:\n    {'anyOf': [{'type': 'array', 'minItems': 1},\n               {'type': 'string'},\n               {'type': 'integer'},\n               {'type': 'boolean'},\n               {'type': 'number'},\n               {'type': 'object'}]}\n\nOn instance['key7']:\n    None",
      "data": {
        "key1": "value1",
        "key2": 123,
        "key3": true,
        "key4": 45.67,
        "key5": {
          "subkey1": "subvalue1",
          "subkey2": 678
        },
        "key6": [
          "array_value1",
          "array_value2",
          901
        ],
        "key7": null
      }
    }
  ]
}