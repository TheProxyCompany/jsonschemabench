{
  "description": "sample Github_hard/o37075.json",
  "meta": {
    "full_size": 3654,
    "stripped_size": 1742,
    "features": [
      "$ref",
      "@minmaxInteger",
      "additionalProperties",
      "additionalProperties:object",
      "format",
      "format:uri",
      "items",
      "oneOf"
    ],
    "raw_features": [
      "$schema",
      "_boolSchema",
      "definitions",
      "maximum",
      "minimum",
      "properties",
      "required",
      "type",
      "type:array",
      "type:boolean",
      "type:integer",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-04/schema",
    "description": "JSON Schema for droplit-edge localsettings",
    "definitions": {
      "plugins-array": {
        "type": "array",
        "items": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "$ref": "#/definitions/plugins-array-item"
            }
          ]
        }
      },
      "plugins-array-item": {
        "description": "Configuration for an individual plugin.",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "enabled": {
            "description": "Set whether the plugin is enabled.",
            "type": "boolean",
            "default": true
          },
          "localServices": {
            "description": "List local services that the plugin manages.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "_uniqueItems": true
          },
          "name": {
            "description": "The name of the plugin.",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      },
      "plugins-object": {
        "description": "Configuration for an individual plugin.",
        "type": "object",
        "additionalProperties": {
          "type": "object",
          "properties": {
            "enabled": {
              "description": "Set whether the plugin is enabled.",
              "type": "boolean",
              "default": true
            },
            "localServices": {
              "description": "List local services that the plugin manages.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "_uniqueItems": true
            }
          }
        }
      }
    },
    "type": "object",
    "additionalProperties": false,
    "properties": {
      "config": {
        "description": "Configures miscellaneous capabilities.",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "LinuxNetInterfaceOverride": {
            "description": "Override the Linux network interface",
            "type": "string"
          },
          "MACAddressOverride": {
            "description": "Override the MAC address used as the Edge Id.",
            "type": "string"
          },
          "provisioningServiceEnabled": {
            "description": "Enables the network provisioning service.",
            "type": "boolean"
          },
          "provisioningServicePort": {
            "description": "Set the port used for network provisioning.",
            "type": "integer",
            "minimum": 0,
            "maximum": 65536,
            "default": 81
          }
        }
      },
      "debug": {
        "description": "Configures debugging options.",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "generateHeapDump": {
            "description": "Periodically generate a heap dump file.",
            "type": "boolean"
          },
          "logToFile": {
            "description": "Whether to log out to a file.",
            "type": "boolean",
            "default": true
          },
          "logPath": {
            "description": "The file path to the file log.",
            "type": "string"
          }
        }
      },
      "diagnostics": {
        "description": "Configures the diagnostics telnet console.",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "enabled": {
            "description": "Determine whether the console should be enabled or not.",
            "type": "boolean"
          },
          "port": {
            "description": "The port the console is opened on.",
            "type": "integer",
            "minimum": 0,
            "maximum": 65536,
            "default": 8888
          }
        }
      },
      "ecosystemId": {
        "description": "The Ecosystem associated with this Edge device. May be omitted if Ecosystem is determined via the claims process.",
        "type": "string"
      },
      "environmentId": {
        "description": "The Environment associated with this Edge device. Specifying this allows for multiple Edge devices within the same environment.",
        "type": "string"
      },
      "router": {
        "description": "Configures the Edge router layer.",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "autodiscover": {
            "description": "Whether or not autodiscover should be enabled.",
            "type": "boolean"
          },
          "autodiscoverCadence": {
            "description": "The amount of time (in ms) between discovery invocations.",
            "type": "integer",
            "minimum": 0
          }
        }
      },
      "plugins": {
        "oneOf": [
          {
            "$ref": "#/definitions/plugins-object"
          },
          {
            "$ref": "#/definitions/plugins-array"
          }
        ]
      },
      "transport": {
        "description": "Configures the Edge transport layer.",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "enableHeartbeat": {
            "description": "Whether or not heartbeat should be enabled. This should only ever be disabled for diagnostic purposes.",
            "type": "boolean",
            "default": true
          },
          "host": {
            "description": "The host service uri.",
            "type": "string",
            "format": "uri"
          }
        }
      }
    },
    "default": {},
    "required": [
      "transport"
    ]
  },
  "tests": [
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "config": {
          "LinuxNetInterfaceOverride": "eth0",
          "MACAddressOverride": "00:11:22:33:44:55",
          "provisioningServiceEnabled": true,
          "provisioningServicePort": 8080
        },
        "debug": {
          "generateHeapDump": false,
          "logToFile": true,
          "logPath": "/var/log/edge.log"
        },
        "diagnostics": {
          "enabled": true,
          "port": 8888
        },
        "ecosystemId": "my-ecosystem",
        "environmentId": "my-environment",
        "plugins": {
          "plugin1": {
            "enabled": true,
            "localServices": [
              "service1",
              "service2"
            ]
          },
          "plugin2": {
            "enabled": false,
            "localServices": [
              "service3"
            ]
          }
        },
        "router": {
          "autodiscover": true,
          "autodiscoverCadence": 10000
        },
        "transport": {
          "enableHeartbeat": true,
          "host": "https://edge.droplit.io"
        }
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "config": {
          "LinuxNetInterfaceOverride": "eth0",
          "MACAddressOverride": "00:11:22:33:44:55",
          "provisioningServiceEnabled": true,
          "provisioningServicePort": 8080
        },
        "debug": {
          "generateHeapDump": false,
          "logToFile": true,
          "logPath": "/var/log/edge.log"
        },
        "diagnostics": {
          "enabled": true,
          "port": 8888
        },
        "ecosystemId": "my-ecosystem",
        "environmentId": "my-environment",
        "plugins": {
          "plugin1": {
            "enabled": true,
            "localServices": [
              "service1",
              "service2"
            ]
          },
          "plugin2": {
            "enabled": false,
            "localServices": [
              "service3"
            ]
          }
        },
        "router": {
          "autodiscover": true,
          "autodiscoverCadence": 10000
        },
        "transport": {
          "enableHeartbeat": true,
          "host": "https://my-edge-service.com"
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on format keyword",
      "valid": false,
      "rust_error": "\" invalid-uri \" is not a \"uri\"",
      "python_error": "' invalid-uri ' is not a 'uri'\n\nFailed validating 'format' in schema['properties']['transport']['properties']['host']:\n    {'description': 'The host service uri.',\n     'type': 'string',\n     'format': 'uri'}\n\nOn instance['transport']['host']:\n    ' invalid-uri '",
      "data": {
        "config": {
          "LinuxNetInterfaceOverride": "eth0",
          "MACAddressOverride": "00:11:22:33:44:55",
          "provisioningServiceEnabled": true,
          "provisioningServicePort": 8080
        },
        "debug": {
          "generateHeapDump": false,
          "logToFile": true,
          "logPath": "/var/log/edge.log"
        },
        "diagnostics": {
          "enabled": true,
          "port": 8888
        },
        "ecosystemId": "my-ecosystem",
        "environmentId": "my-environment",
        "plugins": {
          "plugin1": {
            "enabled": true,
            "localServices": [
              "service1",
              "service2"
            ]
          },
          "plugin2": {
            "enabled": false,
            "localServices": [
              "service3"
            ]
          }
        },
        "router": {
          "autodiscover": true,
          "autodiscoverCadence": 10000
        },
        "transport": {
          "enableHeartbeat": true,
          "host": " invalid-uri "
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on oneOf keyword",
      "valid": false,
      "rust_error": "{\"plugin1\":{\"enabled\":true,\"localServices\":[\"service1\",\"service2\"]},\"plugin2\":{\"enabled\":false,\"localServices\":[\"service3\"]},\"plugin3\":{\"enabled\":true,\"localServices\":[\"service4\",\"service5\"]},\"plugin-array\":[\"plugin-array-item-1\",\"plugin-array-item-2\",{\"enabled\":true,\"localServices\":[\"service6\",\"service7\"]}]} is not valid under any of the schemas listed in the 'oneOf' keyword",
      "python_error": "['plugin-array-item-1', 'plugin-array-item-2', {'enabled': True, 'localServices': ['service6', 'service7']}] is not of type 'object'\n\nFailed validating 'type' in schema[0]['additionalProperties']:\n    {'type': 'object',\n     'properties': {'enabled': {'description': 'Set whether the plugin is '\n                                               'enabled.',\n                                'type': 'boolean',\n                                'default': True},\n                    'localServices': {'description': 'List local services '\n                                                     'that the plugin '\n                                                     'manages.',\n                                      'type': 'array',\n                                      'items': {'type': 'string'},\n                                      '_uniqueItems': True}}}\n\nOn instance['plugin-array']:\n    ['plugin-array-item-1',\n     'plugin-array-item-2',\n     {'enabled': True, 'localServices': ['service6', 'service7']}]",
      "data": {
        "config": {
          "LinuxNetInterfaceOverride": "eth0",
          "MACAddressOverride": "00:11:22:33:44:55",
          "provisioningServiceEnabled": true,
          "provisioningServicePort": 8080
        },
        "debug": {
          "generateHeapDump": false,
          "logToFile": true,
          "logPath": "/var/log/edge.log"
        },
        "diagnostics": {
          "enabled": true,
          "port": 8888
        },
        "ecosystemId": "my-ecosystem",
        "environmentId": "my-environment",
        "plugins": {
          "plugin1": {
            "enabled": true,
            "localServices": [
              "service1",
              "service2"
            ]
          },
          "plugin2": {
            "enabled": false,
            "localServices": [
              "service3"
            ]
          },
          "plugin3": {
            "enabled": true,
            "localServices": [
              "service4",
              "service5"
            ]
          },
          "plugin-array": [
            "plugin-array-item-1",
            "plugin-array-item-2",
            {
              "enabled": true,
              "localServices": [
                "service6",
                "service7"
              ]
            }
          ]
        },
        "router": {
          "autodiscover": true,
          "autodiscoverCadence": 10000
        },
        "transport": {
          "enableHeartbeat": true,
          "host": "https://my-edge-service.com"
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on additionalProperties keyword with an object schema",
      "valid": false,
      "rust_error": "Additional properties are not allowed ('extraProperty' was unexpected)",
      "python_error": "'transport' is a required property\n\nFailed validating 'required' in schema:\n    {'$schema': 'http://json-schema.org/draft-04/schema',\n     'description': 'JSON Schema for droplit-edge localsettings',\n     'definitions': {'plugins-array': {'type': 'array',\n                                       'items': {'oneOf': [{'type': 'string'},\n                                                           {'$ref': '#/definitions/plugins-array-item'}]}},\n                     'plugins-array-item': {'description': 'Configuration '\n                                                           'for an '\n                                                           'individual '\n                                                           'plugin.',\n                                            'type': 'object',\n                                            'additionalProperties': False,\n                                            'properties': {'enabled': {'description': 'Set '\n                                                               .. (18501 more)",
      "data": {
        "config": {
          "LinuxNetInterfaceOverride": "eth0",
          "MACAddressOverride": "00:11:22:33:44:55",
          "provisioningServiceEnabled": true,
          "provisioningServicePort": 8080,
          "extraProperty": "invalid"
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on minimum keyword or maximum keyword",
      "valid": false,
      "rust_error": "-1 is less than the minimum of 0",
      "python_error": "-1 is less than the minimum of 0\n\nFailed validating 'minimum' in schema['properties']['config']['properties']['provisioningServicePort']:\n    {'description': 'Set the port used for network provisioning.',\n     'type': 'integer',\n     'minimum': 0,\n     'maximum': 65536,\n     'default': 81}\n\nOn instance['config']['provisioningServicePort']:\n    -1",
      "data": {
        "config": {
          "LinuxNetInterfaceOverride": "eth0",
          "MACAddressOverride": "00:11:22:33:44:55",
          "provisioningServiceEnabled": true,
          "provisioningServicePort": -1
        },
        "debug": {
          "generateHeapDump": false,
          "logToFile": true,
          "logPath": "/var/log/edge.log"
        },
        "diagnostics": {
          "enabled": true,
          "port": 8888
        },
        "ecosystemId": "my-ecosystem",
        "environmentId": "my-environment",
        "plugins": {
          "plugin1": {
            "enabled": true,
            "localServices": [
              "service1",
              "service2"
            ]
          },
          "plugin2": {
            "enabled": false,
            "localServices": [
              "service3"
            ]
          }
        },
        "router": {
          "autodiscover": true,
          "autodiscoverCadence": 10000
        },
        "transport": {
          "enableHeartbeat": true,
          "host": "https://my-edge-service.com"
        }
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "65537 is greater than the maximum of 65536",
      "python_error": "Additional properties are not allowed ('unknownProperty' was unexpected)\n\nFailed validating 'additionalProperties' in schema:\n    {'$schema': 'http://json-schema.org/draft-04/schema',\n     'description': 'JSON Schema for droplit-edge localsettings',\n     'definitions': {'plugins-array': {'type': 'array',\n                                       'items': {'oneOf': [{'type': 'string'},\n                                                           {'$ref': '#/definitions/plugins-array-item'}]}},\n                     'plugins-array-item': {'description': 'Configuration '\n                                                           'for an '\n                                                           'individual '\n                                                           'plugin.',\n                                            'type': 'object',\n                                            'additionalProperties': False,\n                                            'properties': {'enabled': {'description': 'Set '\n             .. (19297 more)",
      "data": {
        "config": {
          "LinuxNetInterfaceOverride": "eth0",
          "MACAddressOverride": "00:11:22:33:44:55",
          "provisioningServiceEnabled": true,
          "provisioningServicePort": 65537
        },
        "debug": {
          "generateHeapDump": false,
          "logToFile": true,
          "logPath": "/var/log/edge.log"
        },
        "diagnostics": {
          "enabled": true,
          "port": 8888
        },
        "ecosystemId": "my-ecosystem",
        "environmentId": "my-environment",
        "plugins": {
          "plugin1": {
            "enabled": true,
            "localServices": [
              "service1",
              "service2",
              "service2"
            ]
          },
          "plugin2": {
            "enabled": false,
            "localServices": [
              "service3"
            ]
          }
        },
        "router": {
          "autodiscover": true,
          "autodiscoverCadence": -1
        },
        "transport": {
          "enableHeartbeat": true,
          "host": "ftp://my-edge-service.com"
        },
        "unknownProperty": "unknown"
      }
    }
  ]
}