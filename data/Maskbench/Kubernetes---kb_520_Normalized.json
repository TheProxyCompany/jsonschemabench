{
  "description": "sample Kubernetes/kb_520_Normalized.json",
  "meta": {
    "full_size": 1308,
    "stripped_size": 629,
    "features": [
      "$ref",
      "format",
      "format:int32"
    ],
    "raw_features": [
      "definitions",
      "properties",
      "type",
      "type:[]",
      "type:integer",
      "type:null",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "definitions": {
      "https:__kubernetesjsonschema_dev_master__defs_json_defs_io_k8s_apimachinery_pkg_apis_meta_v1_MicroTime": {
        "_format": "date-time",
        "description": "MicroTime is version of Time with microsecond level precision.",
        "type": "string"
      }
    },
    "description": "LeaseSpec is a specification of a Lease.",
    "properties": {
      "acquireTime": {
        "$ref": "#/definitions/https:__kubernetesjsonschema_dev_master__defs_json_defs_io_k8s_apimachinery_pkg_apis_meta_v1_MicroTime",
        "description": "acquireTime is a time when the current lease was acquired."
      },
      "holderIdentity": {
        "description": "holderIdentity contains the identity of the holder of a current lease.",
        "type": [
          "string",
          "null"
        ]
      },
      "leaseDurationSeconds": {
        "description": "leaseDurationSeconds is a duration that candidates for a lease need to wait to force acquire it. This is measure against time of last observed RenewTime.",
        "format": "int32",
        "type": [
          "integer",
          "null"
        ]
      },
      "leaseTransitions": {
        "description": "leaseTransitions is the number of transitions of a lease between holders.",
        "format": "int32",
        "type": [
          "integer",
          "null"
        ]
      },
      "renewTime": {
        "$ref": "#/definitions/https:__kubernetesjsonschema_dev_master__defs_json_defs_io_k8s_apimachinery_pkg_apis_meta_v1_MicroTime",
        "description": "renewTime is a time when the current holder of a lease has last updated the lease."
      }
    },
    "type": "object"
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "acquireTime": "2022-01-01T12:00:00.000000Z",
        "holderIdentity": "node1",
        "leaseDurationSeconds": 30,
        "leaseTransitions": 5,
        "renewTime": "2022-01-01T12:00:10.000000Z"
      }
    },
    {
      "description": "llama-70b generated negative; focus on type keyword with an array of types",
      "valid": false,
      "rust_error": "true is not of types \"null\", \"string\"",
      "python_error": "True is not of type 'string', 'null'\n\nFailed validating 'type' in schema['properties']['holderIdentity']:\n    {'description': 'holderIdentity contains the identity of the holder of '\n                    'a current lease.',\n     'type': ['string', 'null']}\n\nOn instance['holderIdentity']:\n    True",
      "data": {
        "acquireTime": "2022-01-01T12:00:00.000000Z",
        "holderIdentity": true,
        "leaseDurationSeconds": 30,
        "leaseTransitions": 5,
        "renewTime": "2022-01-01T12:00:10.000000Z"
      }
    },
    {
      "description": "llama-70b generated negative; focus on type keyword with an array of types",
      "valid": false,
      "rust_error": "123 is not of types \"null\", \"string\"",
      "python_error": "123 is not of type 'string', 'null'\n\nFailed validating 'type' in schema['properties']['holderIdentity']:\n    {'description': 'holderIdentity contains the identity of the holder of '\n                    'a current lease.',\n     'type': ['string', 'null']}\n\nOn instance['holderIdentity']:\n    123",
      "data": {
        "acquireTime": "2022-01-01T12:00:00.000000Z",
        "holderIdentity": 123,
        "leaseDurationSeconds": 30,
        "leaseTransitions": 5,
        "renewTime": "2022-01-01T12:00:10.000000Z"
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "acquireTime": "2022-01-01T12:00:00.000000Z",
        "holderIdentity": "node-1",
        "leaseDurationSeconds": 30,
        "leaseTransitions": 5,
        "renewTime": "2022-01-01T12:00:05.000000Z"
      }
    },
    {
      "description": "llama-70b generated negative; focus on type keyword with an array of types",
      "valid": false,
      "rust_error": "true is not of types \"null\", \"string\"",
      "python_error": "True is not of type 'string', 'null'\n\nFailed validating 'type' in schema['properties']['holderIdentity']:\n    {'description': 'holderIdentity contains the identity of the holder of '\n                    'a current lease.',\n     'type': ['string', 'null']}\n\nOn instance['holderIdentity']:\n    True",
      "data": {
        "acquireTime": "2022-01-01T12:00:00.000000Z",
        "holderIdentity": true,
        "leaseDurationSeconds": 30,
        "leaseTransitions": 5,
        "renewTime": "2022-01-01T12:00:05.000000Z"
      }
    }
  ]
}