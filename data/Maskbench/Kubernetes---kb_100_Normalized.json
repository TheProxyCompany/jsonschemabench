{
  "description": "sample Kubernetes/kb_100_Normalized.json",
  "meta": {
    "full_size": 669,
    "stripped_size": 203,
    "features": [],
    "raw_features": [
      "properties",
      "required",
      "type",
      "type:[]",
      "type:null",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "description": "Information about the condition of a component.",
    "properties": {
      "error": {
        "description": "Condition error code for a component. For example, a health check error code.",
        "type": [
          "string",
          "null"
        ]
      },
      "message": {
        "description": "Message about the condition for a component. For example, information about a health check.",
        "type": [
          "string",
          "null"
        ]
      },
      "status": {
        "description": "Status of the condition for a component. Valid values for \"Healthy\": \"True\", \"False\", or \"Unknown\".",
        "type": [
          "string",
          "null"
        ]
      },
      "type": {
        "description": "Type of condition for a component. Valid value: \"Healthy\"",
        "type": [
          "string",
          "null"
        ]
      }
    },
    "required": [
      "type",
      "status"
    ],
    "type": "object"
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "error": "E001",
        "message": "The component is experiencing high CPU usage.",
        "status": "False",
        "type": "Healthy"
      }
    },
    {
      "description": "llama-70b generated negative; focus on type keyword with an array of types",
      "valid": false,
      "rust_error": "123 is not of types \"null\", \"string\"",
      "python_error": "123 is not of type 'string', 'null'\n\nFailed validating 'type' in schema['properties']['error']:\n    {'description': 'Condition error code for a component. For example, a '\n                    'health check error code.',\n     'type': ['string', 'null']}\n\nOn instance['error']:\n    123",
      "data": {
        "error": 123,
        "message": "The component is experiencing high CPU usage.",
        "status": "False",
        "type": "Healthy"
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "error": null,
        "message": "The component is functioning correctly.",
        "status": "True",
        "type": "Healthy"
      }
    },
    {
      "description": "llama-70b generated negative; focus on type keyword with an array of types",
      "valid": false,
      "rust_error": "42 is not of types \"null\", \"string\"",
      "python_error": "42 is not of type 'string', 'null'\n\nFailed validating 'type' in schema['properties']['error']:\n    {'description': 'Condition error code for a component. For example, a '\n                    'health check error code.',\n     'type': ['string', 'null']}\n\nOn instance['error']:\n    42",
      "data": {
        "type": "Healthy",
        "status": "True",
        "error": 42,
        "message": "The component is functioning correctly."
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "true is not of types \"null\", \"string\"",
      "python_error": "True is not of type 'string', 'null'\n\nFailed validating 'type' in schema['properties']['status']:\n    {'description': 'Status of the condition for a component. Valid values '\n                    'for \"Healthy\": \"True\", \"False\", or \"Unknown\".',\n     'type': ['string', 'null']}\n\nOn instance['status']:\n    True",
      "data": {
        "type": "",
        "status": true,
        "error": null,
        "message": "The component is functioning correctly."
      }
    }
  ]
}