{
  "description": "sample MCPspec/GetPromptRequest.json",
  "meta": {
    "full_size": 593,
    "stripped_size": 399,
    "features": [
      "$ref",
      "@siblingKeys",
      "additionalProperties",
      "additionalProperties:object",
      "const"
    ],
    "raw_features": [
      "$schema",
      "definitions",
      "properties",
      "required",
      "type",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$ref": "#/definitions/GetPromptRequest",
    "definitions": {
      "GetPromptRequest": {
        "description": "Used by the client to get a prompt provided by the server.",
        "properties": {
          "method": {
            "const": "prompts/get",
            "type": "string"
          },
          "params": {
            "properties": {
              "arguments": {
                "additionalProperties": {
                  "type": "string"
                },
                "description": "Arguments to use for templating the prompt.",
                "type": "object"
              },
              "name": {
                "description": "The name of the prompt or prompt template.",
                "type": "string"
              }
            },
            "required": [
              "name"
            ],
            "type": "object"
          }
        },
        "required": [
          "method",
          "params"
        ],
        "type": "object"
      }
    }
  },
  "tests": [
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "method": "prompts/get",
        "params": {
          "arguments": {
            "user_name": "John Doe"
          },
          "name": "example-prompt"
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on additionalProperties keyword with an object schema",
      "valid": false,
      "rust_error": "42 is not of type \"string\"",
      "python_error": "42 is not of type 'string'\n\nFailed validating 'type' in schema['properties']['params']['properties']['arguments']['additionalProperties']:\n    {'type': 'string'}\n\nOn instance['params']['arguments']['age']:\n    42",
      "data": {
        "method": "prompts/get",
        "params": {
          "name": "example-prompt",
          "arguments": {
            "user_name": "John Doe",
            "age": 42
          }
        }
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "null is not of type \"string\"",
      "python_error": "None is not of type 'string'\n\nFailed validating 'type' in schema['properties']['params']['properties']['arguments']['additionalProperties']:\n    {'type': 'string'}\n\nOn instance['params']['arguments']['user_name']:\n    None",
      "data": {
        "method": "prompts/get",
        "params": {
          "name": "",
          "arguments": {
            "user_name": null
          }
        }
      }
    }
  ]
}