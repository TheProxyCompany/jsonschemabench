{
  "description": "sample Github_medium/o50111.json",
  "meta": {
    "full_size": 1119,
    "stripped_size": 425,
    "features": [
      "items"
    ],
    "raw_features": [
      "$schema",
      "properties",
      "required",
      "type",
      "type:array",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "type": "object",
    "required": [
      "name",
      "author",
      "description",
      "web",
      "pages"
    ],
    "properties": {
      "name": {
        "type": "string",
        "title": "The template's name for display",
        "examples": [
          "My awesome multicolor template"
        ]
      },
      "author": {
        "type": "string",
        "title": "The author's name"
      },
      "description": {
        "type": "string",
        "title": "A brief description of the template to display"
      },
      "web": {
        "type": "string",
        "title": "The web or repository URL of this template"
      },
      "copy": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "title": "An array of globs string used to determine which files to copy from the template folder.",
        "description": "template.json, package.json, package-lock.json, and other type of files will never be copied",
        "default": [
          "**/*"
        ]
      },
      "pages": {
        "type": "object",
        "title": "The pages ",
        "required": [
          "script",
          "folder"
        ],
        "properties": {
          "script": {
            "type": "string",
            "title": "The relative path to the njk file used to render script pages",
            "examples": [
              "src/my-script-page.njk"
            ]
          },
          "folder": {
            "type": "string",
            "title": "The relative path to the njk file used to render folder pages",
            "examples": [
              "src/my-folder-page.njk"
            ]
          }
        }
      }
    }
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "name": "My Awesome Template",
        "author": "John Doe",
        "description": "A brief description of my awesome template",
        "web": "https://example.com/my-template",
        "copy": [
          "**/*.css",
          "**/*.js"
        ],
        "pages": {
          "script": "src/script-page.njk",
          "folder": "src/folder-page.njk"
        }
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"folder\" is a required property",
      "python_error": "'folder' is a required property\n\nFailed validating 'required' in schema['properties']['pages']:\n    {'type': 'object',\n     'title': 'The pages ',\n     'required': ['script', 'folder'],\n     'properties': {'script': {'type': 'string',\n                               'title': 'The relative path to the njk file '\n                                        'used to render script pages',\n                               'examples': ['src/my-script-page.njk']},\n                    'folder': {'type': 'string',\n                               'title': 'The relative path to the njk file '\n                                        'used to render folder pages',\n                               'examples': ['src/my-folder-page.njk']}}}\n\nOn instance['pages']:\n    {'script': 'src/script-page.njk'}",
      "data": {
        "name": "My Awesome Template",
        "author": "John Doe",
        "description": "A brief description of my awesome template",
        "web": "https://example.com/my-template",
        "copy": [
          "**/*.css",
          "**/*.js"
        ],
        "pages": {
          "script": "src/script-page.njk"
        }
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "123 is not of type \"string\"",
      "python_error": "123 is not of type 'string'\n\nFailed validating 'type' in schema['properties']['name']:\n    {'type': 'string',\n     'title': \"The template's name for display\",\n     'examples': ['My awesome multicolor template']}\n\nOn instance['name']:\n    123",
      "data": {
        "name": 123,
        "author": "John Doe",
        "description": "A brief description of my awesome template",
        "web": "https://example.com/my-template",
        "copy": [
          "**/*.css",
          "**/*.js"
        ],
        "pages": {
          "script": "src/script-page.njk",
          "folder": "src/folder-page.njk"
        }
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "name": "My Awesome Template",
        "author": "John Doe",
        "description": "A brief description of my awesome template",
        "web": "https://github.com/johndoe/my-awesome-template",
        "copy": [
          "**/*.njk",
          "**/*.css",
          "**/*.js"
        ],
        "pages": {
          "script": "src/script-page.njk",
          "folder": "src/folder-page.njk"
        }
      }
    }
  ]
}