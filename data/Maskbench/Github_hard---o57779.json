{
  "description": "sample Github_hard/o57779.json",
  "meta": {
    "full_size": 1982,
    "stripped_size": 1426,
    "features": [
      "$ref",
      "@minmaxInteger",
      "@minmaxItems",
      "additionalProperties",
      "additionalProperties:object",
      "enum",
      "format",
      "format:date",
      "items"
    ],
    "raw_features": [
      "$schema",
      "definitions",
      "minItems",
      "minimum",
      "properties",
      "required",
      "type",
      "type:array",
      "type:boolean",
      "type:integer",
      "type:number",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "type": "object",
    "required": [
      "individuals"
    ],
    "properties": {
      "title": {
        "title": "Title",
        "type": "string"
      },
      "individuals": {
        "title": "Individuals",
        "description": "Individuals in a pedigree.",
        "type": "object",
        "additionalProperties": {
          "$ref": "#/definitions/individual"
        }
      },
      "customIndividualPropertySchemas": {
        "additionalProperties": {
          "$ref": "#/definitions/customIndividualPropertySchema"
        }
      }
    },
    "definitions": {
      "individual": {
        "title": "Individual",
        "type": "object",
        "properties": {
          "father": {
            "title": "Father",
            "type": "string"
          },
          "mother": {
            "title": "Mother",
            "type": "string"
          },
          "gender": {
            "title": "Gender",
            "type": "string",
            "enum": [
              "unknown",
              "male",
              "female"
            ],
            "enumNames": [
              "Unknown or ambiguous",
              "Male",
              "Female"
            ]
          },
          "name": {
            "title": "Name",
            "type": "string"
          },
          "monozygote": {
            "title": "Monozygote twin key",
            "type": "string"
          },
          "dizygote": {
            "title": "Dizygote twin key",
            "type": "string"
          },
          "proband": {
            "title": "Proband",
            "type": "boolean"
          },
          "consultand": {
            "title": "Consultand",
            "type": "boolean"
          },
          "dateOfBirth": {
            "title": "Date of birth",
            "type": "string",
            "format": "date"
          },
          "dateOfDeath": {
            "title": "Date of death",
            "type": "string",
            "format": "date"
          },
          "deceased": {
            "title": "Deceased",
            "type": "boolean"
          },
          "sampled": {
            "title": "Sampled",
            "type": "boolean"
          },
          "Carrier": {
            "title": "Carrier",
            "type": "boolean"
          },
          "affected": {
            "title": "Affected",
            "type": "string"
          }
        }
      },
      "customIndividualPropertySchema": {
        "title": "Custom individual property schema",
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "string",
              "boolean",
              "integer",
              "number"
            ]
          },
          "description": {
            "type": "string"
          },
          "format": {
            "type": "string"
          },
          "enum": {
            "type": "array",
            "minItems": 1,
            "_uniqueItems": true
          },
          "enumNames": {
            "type": "array",
            "minItems": 1,
            "_uniqueItems": true,
            "items": {
              "type": "string"
            }
          },
          "maximum": {
            "type": "number"
          },
          "exclusiveMaximum": {
            "type": "boolean",
            "default": false
          },
          "minimum": {
            "type": "number"
          },
          "exclusiveMinimum": {
            "type": "boolean",
            "default": false
          },
          "maxLength": {
            "type": "integer",
            "minimum": 0
          },
          "minLength": {
            "type": "integer",
            "minimum": 0
          }
        }
      }
    }
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "title": "Example Pedigree",
        "individuals": {
          "individual1": {
            "name": "John Doe",
            "gender ": "male",
            "dateOfBirth ": "1990-01-01",
            "father ": "individual2",
            "mother ": "individual3",
            "proband ": true,
            "affected ": "yes"
          },
          "individual2": {
            "name": "John Doe Sr.",
            "gender ": "male",
            "dateOfBirth ": "1960-01-01",
            "deceased ": true,
            "dateOfDeath ": "2010-01-01"
          },
          "individual3": {
            "name": "Jane Doe",
            "gender ": "female",
            "dateOfBirth ": "1965-01-01",
            "sampled ": true,
            "Carrier ": true
          }
        },
        "customIndividualPropertySchemas": {
          "customProperty1": {
            "title": "Custom Property 1",
            "type": "string",
            "description": "This is a custom property",
            "enum": [
              "value1",
              "value2"
            ],
            "enumNames": [
              "Value 1",
              "Value 2"
            ]
          },
          "customProperty2": {
            "title": "Custom Property 2",
            "type": "boolean",
            "description": "This is another custom property"
          }
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on format keyword",
      "valid": false,
      "rust_error": "\"1990-01-32\" is not a \"date\"",
      "python_error": "'2010-02-30' is not a 'date'\n\nFailed validating 'format' in schema['properties']['individuals']['additionalProperties']['properties']['dateOfDeath']:\n    {'title': 'Date of death', 'type': 'string', 'format': 'date'}\n\nOn instance['individuals']['individual2']['dateOfDeath']:\n    '2010-02-30'",
      "data": {
        "title": "Example Pedigree",
        "individuals": {
          "individual1": {
            "name": "John Doe",
            "gender": "male",
            "dateOfBirth": "1990-01-32",
            "father": "individual2",
            "mother": "individual3",
            "proband": true,
            "affected": "yes"
          },
          "individual2": {
            "name": "John Doe Sr.",
            "gender": "male",
            "dateOfBirth": "1960-01-01",
            "deceased": true,
            "dateOfDeath": "2010-02-30"
          },
          "individual3": {
            "name": "Jane Doe",
            "gender": "female",
            "dateOfBirth": "1965-01-01",
            "sampled": true,
            "Carrier": true
          }
        },
        "customIndividualPropertySchemas": {
          "customProperty1": {
            "title": "Custom Property 1",
            "type": "string",
            "description": "This is a custom property",
            "enum": [
              "value1",
              "value2"
            ],
            "enumNames": [
              "Value 1",
              "Value 2"
            ]
          },
          "customProperty2": {
            "title": "Custom Property 2",
            "type": "boolean",
            "description": "This is another custom property"
          }
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on minItems keyword",
      "valid": false,
      "rust_error": "[] has less than 1 item",
      "python_error": "[] should be non-empty\n\nFailed validating 'minItems' in schema['properties']['customIndividualPropertySchemas']['additionalProperties']['properties']['enumNames']:\n    {'type': 'array',\n     'minItems': 1,\n     '_uniqueItems': True,\n     'items': {'type': 'string'}}\n\nOn instance['customIndividualPropertySchemas']['customProperty1']['enumNames']:\n    []",
      "data": {
        "title": "Example Pedigree",
        "individuals": {
          "individual1": {
            "name": "John Doe",
            "gender ": "male",
            "dateOfBirth ": "1990-01-01",
            "father ": "individual2",
            "mother ": "individual3",
            "proband ": true,
            "affected ": "yes"
          },
          "individual2": {
            "name": "John Doe Sr.",
            "gender ": "male",
            "dateOfBirth ": "1960-01-01",
            "deceased ": true,
            "dateOfDeath ": "2010-01-01"
          },
          "individual3": {
            "name": "Jane Doe",
            "gender ": "female",
            "dateOfBirth ": "1965-01-01",
            "sampled ": true,
            "Carrier ": true
          }
        },
        "customIndividualPropertySchemas": {
          "customProperty1": {
            "title": "Custom Property 1",
            "type": "string",
            "description": "This is a custom property",
            "enum": [],
            "enumNames": []
          },
          "customProperty2": {
            "title": "Custom Property 2",
            "type": "boolean",
            "description": "This is another custom property"
          }
        }
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"other\" is not one of [\"unknown\",\"male\",\"female\"]",
      "python_error": "'other' is not one of ['unknown', 'male', 'female']\n\nFailed validating 'enum' in schema['properties']['individuals']['additionalProperties']['properties']['gender']:\n    {'title': 'Gender',\n     'type': 'string',\n     'enum': ['unknown', 'male', 'female'],\n     'enumNames': ['Unknown or ambiguous', 'Male', 'Female']}\n\nOn instance['individuals']['individual1']['gender']:\n    'other'",
      "data": {
        "title": "Example Pedigree",
        "individuals": {
          "individual1": {
            "name": "John Doe",
            "gender": "other",
            "dateOfBirth": "1990-01-01",
            "father": "individual2",
            "mother": "individual3",
            "proband": true,
            "affected": "yes"
          },
          "individual2": {
            "name": "John Doe Sr.",
            "gender": "male",
            "dateOfBirth": "1960-01-01",
            "deceased": true,
            "dateOfDeath": "2010-01-01"
          },
          "individual3": {
            "name": "Jane Doe",
            "gender": "female",
            "dateOfBirth": "1965-01-01",
            "sampled": true,
            "Carrier": true
          }
        },
        "customIndividualPropertySchemas": {
          "customProperty1": {
            "title": "Custom Property 1",
            "type": "string",
            "description": "This is a custom property",
            "enum": [
              "value1",
              "value2"
            ],
            "enumNames": [
              "Value 1",
              "Value 2"
            ]
          },
          "customProperty2": {
            "title": "Custom Property 2",
            "type": "boolean",
            "description": "This is another custom property"
          }
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on minItems keyword",
      "valid": false,
      "rust_error": "[] has less than 1 item",
      "python_error": "[] should be non-empty\n\nFailed validating 'minItems' in schema['properties']['customIndividualPropertySchemas']['additionalProperties']['properties']['enumNames']:\n    {'type': 'array',\n     'minItems': 1,\n     '_uniqueItems': True,\n     'items': {'type': 'string'}}\n\nOn instance['customIndividualPropertySchemas']['customProperty1']['enumNames']:\n    []",
      "data": {
        "title": "Example Pedigree",
        "individuals": {
          "individual1": {
            "father": "individual2",
            "mother": "individual3",
            "gender": "male",
            "name": "John Doe",
            "proband": true,
            "dateOfBirth": "1990-01-01",
            "affected": "yes"
          },
          "individual2": {
            "gender": "male",
            "name": "John Doe Sr.",
            "dateOfBirth": "1960-01-01",
            "dateOfDeath": "2010-01-01",
            "deceased": true
          },
          "individual3": {
            "gender": "female",
            "name": "Jane Doe",
            "dateOfBirth": "1965-01-01",
            "sampled": true,
            "Carrier": true
          }
        },
        "customIndividualPropertySchemas": {
          "customProperty1": {
            "title": "Custom Property 1",
            "type": "string",
            "description": "This is a custom property",
            "enum": [],
            "enumNames": []
          },
          "customProperty2": {
            "title": "Custom Property 2",
            "type": "boolean",
            "description": "This is another custom property"
          }
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on format keyword",
      "valid": false,
      "rust_error": "\"1990-01-32\" is not a \"date\"",
      "python_error": "'2010-01-32' is not a 'date'\n\nFailed validating 'format' in schema['properties']['individuals']['additionalProperties']['properties']['dateOfDeath']:\n    {'title': 'Date of death', 'type': 'string', 'format': 'date'}\n\nOn instance['individuals']['individual2']['dateOfDeath']:\n    '2010-01-32'",
      "data": {
        "title": "Example Pedigree",
        "individuals": {
          "individual1": {
            "name": "John Doe",
            "gender": "male",
            "dateOfBirth": "1990-01-32",
            "date of birth is invalid": "father",
            "individual2": "individual3",
            "proband": true,
            "affected": "yes"
          },
          "individual2": {
            "name": "Jane Doe",
            "gender": "female",
            "dateOfBirth": "1965-01-01",
            "deceased": true,
            "dateOfDeath": "2010-01-32",
            "date of death is invalid": "individual3",
            "sampled": true,
            "Carrier": true
          }
        },
        "customIndividualPropertySchemas": {
          "customProperty1": {
            "title": "Custom Property 1",
            "type": "string",
            "description": "This is a custom property",
            "enum": [
              "value1",
              "value2"
            ],
            "enumNames": [
              "Value 1",
              "Value 2"
            ]
          },
          "customProperty2": {
            "title": "Custom Property 2",
            "type": "boolean",
            "description": "This is another custom property"
          }
        }
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"other\" is not one of [\"unknown\",\"male\",\"female\"]",
      "python_error": "'other' is not one of ['unknown', 'male', 'female']\n\nFailed validating 'enum' in schema['properties']['individuals']['additionalProperties']['properties']['gender']:\n    {'title': 'Gender',\n     'type': 'string',\n     'enum': ['unknown', 'male', 'female'],\n     'enumNames': ['Unknown or ambiguous', 'Male', 'Female']}\n\nOn instance['individuals']['individual1']['gender']:\n    'other'",
      "data": {
        "title": "Example Pedigree",
        "individuals": {
          "individual1": {
            "name": "John Doe",
            "gender": "other",
            "dateOfBirth": "1990-01-01",
            "father": "individual2",
            "mother": "individual3",
            "proband": true,
            "affected": "yes"
          },
          "individual2": {
            "name": "John Doe Sr.",
            "gender": "male",
            "dateOfBirth": "1960-01-01",
            "deceased": true,
            "dateOfDeath": "2010-01-01"
          },
          "individual3": {
            "name": "Jane Doe",
            "gender": "female",
            "dateOfBirth": "1965-01-01",
            "sampled": true,
            "Carrier": true
          }
        },
        "customIndividualPropertySchemas": {
          "customProperty1": {
            "title": "Custom Property 1",
            "type": "string",
            "description": "This is a custom property",
            "enum": [
              "value1",
              "value1"
            ],
            "enumNames": [
              "Value 1",
              "Value 2"
            ]
          },
          "customProperty2": {
            "title": "Custom Property 2",
            "type": "boolean",
            "description": "This is another custom property"
          }
        }
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "title": "Example Pedigree",
        "individuals": {
          "individual1": {
            "gender": "male",
            "name": "John Doe",
            "dateOfBirth": "1990-01-01",
            "sampled": true,
            "affected": "yes"
          },
          "individual2": {
            "gender": "female",
            "name": "Jane Doe",
            "dateOfBirth": "1992-01-01",
            "sampled": false,
            "affected": "no"
          },
          "individual3": {
            "father": "individual1",
            "mother": "individual2",
            "gender": "male",
            "name": "Bob Smith",
            "dateOfBirth": "1980-01-01",
            "sampled": true,
            "affected": "yes"
          }
        },
        "customIndividualPropertySchemas": {
          "customProperty1": {
            "title": "Custom Property 1",
            "type": "string",
            "description": "This is a custom property",
            "enum": [
              "value1",
              "value2"
            ],
            "enumNames": [
              "Value 1",
              "Value 2"
            ]
          },
          "customProperty2": {
            "title": "Custom Property 2",
            "type": "boolean",
            "description": "This is another custom property"
          }
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on minItems keyword",
      "valid": false,
      "rust_error": "[] has less than 1 item",
      "python_error": "[] should be non-empty\n\nFailed validating 'minItems' in schema['properties']['customIndividualPropertySchemas']['additionalProperties']['properties']['enum']:\n    {'type': 'array', 'minItems': 1, '_uniqueItems': True}\n\nOn instance['customIndividualPropertySchemas']['customProperty1']['enum']:\n    []",
      "data": {
        "title": "Example Pedigree",
        "individuals": {
          "individual1": {
            "gender": "male",
            "name": "John Doe",
            "dateOfBirth": "1990-01-01",
            "sampled": true,
            "affected": "yes"
          },
          "individual2": {
            "gender": "female",
            "name": "Jane Doe",
            "dateOfBirth": "1992-01-01",
            "sampled": false,
            "affected": "no"
          },
          "individual3": {
            "father": "individual1",
            "mother": "individual2",
            "gender": "male",
            "name": "Bob Smith",
            "dateOfBirth": "1980-01-01",
            "sampled": true,
            "affected": "yes"
          }
        },
        "customIndividualPropertySchemas": {
          "customProperty1": {
            "title": "Custom Property 1",
            "type": "string",
            "description": "This is a custom property",
            "enum": [],
            "minItems": 1
          }
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on format keyword",
      "valid": false,
      "rust_error": "\"abc\" is not a \"date\"",
      "python_error": "'abc' is not a 'date'\n\nFailed validating 'format' in schema['properties']['individuals']['additionalProperties']['properties']['dateOfBirth']:\n    {'title': 'Date of birth', 'type': 'string', 'format': 'date'}\n\nOn instance['individuals']['individual1']['dateOfBirth']:\n    'abc'",
      "data": {
        "title": "Example Pedigree",
        "individuals": {
          "individual1": {
            "name": "John Doe",
            "gender": "male",
            "dateOfBirth": "abc",
            "sampled": true,
            "affected": "yes"
          },
          "individual2": {
            "name": "Jane Doe",
            "gender": "female",
            "dateOfBirth": "1992-01-01",
            "sampled": false,
            "affected": "no"
          },
          "individual3": {
            "name": "Bob Smith",
            "gender": "male",
            "dateOfBirth": "1980-01-01",
            "sampled": true,
            "affected": "yes",
            "father": "individual1",
            "mother": "individual2"
          }
        },
        "customIndividualPropertySchemas": {
          "customProperty1": {
            "title": "Custom Property 1",
            "type": "string",
            "description": "This is a custom property",
            "enum": [
              "value1",
              "value2"
            ],
            "enumNames": [
              "Value 1",
              "Value 2"
            ]
          },
          "customProperty2": {
            "title": "Custom Property 2",
            "type": "boolean",
            "description": "This is another custom property"
          }
        }
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"other\" is not one of [\"unknown\",\"male\",\"female\"]",
      "python_error": "'other' is not one of ['unknown', 'male', 'female']\n\nFailed validating 'enum' in schema['properties']['individuals']['additionalProperties']['properties']['gender']:\n    {'title': 'Gender',\n     'type': 'string',\n     'enum': ['unknown', 'male', 'female'],\n     'enumNames': ['Unknown or ambiguous', 'Male', 'Female']}\n\nOn instance['individuals']['individual1']['gender']:\n    'other'",
      "data": {
        "title": "Example Pedigree",
        "individuals": {
          "individual1": {
            "name": "John Doe",
            "gender": "other",
            "dateOfBirth": "1990-01-01",
            "sampled": true,
            "affected": "yes"
          },
          "individual2": {
            "name": "Jane Doe",
            "gender": "female",
            "dateOfBirth": "1992-01-01",
            "sampled": false,
            "affected": "no"
          }
        },
        "customIndividualPropertySchemas": {
          "customProperty1": {
            "title": "Custom Property 1",
            "type": "integer",
            "description": "This is a custom property",
            "enum": [
              "value1",
              "value2"
            ],
            "enumNames": [
              "Value 1",
              "Value 2"
            ]
          }
        }
      }
    }
  ]
}