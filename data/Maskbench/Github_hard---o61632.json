{
  "description": "sample Github_hard/o61632.json",
  "meta": {
    "full_size": 3704,
    "stripped_size": 1058,
    "features": [
      "enum",
      "items",
      "pattern"
    ],
    "raw_features": [
      "properties",
      "type",
      "type:array",
      "type:number",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "properties": {
      "PayloadContent": {
        "default": {
          "Key Type": "RSA",
          "Keysize": 1024,
          "Retries": 3,
          "RetryDelay": 10
        },
        "description": "This dictionary contains the payload contents",
        "properties": {
          "CAFingerprint": {
            "description": "Optional. The fingerprint of the Certificate Authority certificate.",
            "type": "string"
          },
          "Challenge": {
            "description": "Used as the pre-shared secret for automatic enrollment",
            "type": "string"
          },
          "GetCACaps": {
            "description": "If you add a dictionary with the key GetCACaps, the device uses the strings you provide as the authoritative source of information about the capabilities of your CA.",
            "properties": {},
            "type": "object"
          },
          "KeyType": {
            "default": "RSA",
            "description": "Optional. Currently always \"RSA\".",
            "enum": [
              "RSA"
            ],
            "type": "string"
          },
          "KeyUsage": {
            "default": 0,
            "description": "A bitmask indicating the use of the ky. 1 - signing, 4 - encryption, 5 - signing and encryption",
            "type": "number"
          },
          "Keysize": {
            "default": 1024,
            "description": "Key size in bits",
            "enum": [
              1024,
              2048
            ],
            "type": "number"
          },
          "Name": {
            "description": "Optional. Any string that is understood by the SCEP server. For example, it could be a domain name like example.org. If a certificate authority has multiple CA certificates this field can be used to distinguish which is required.",
            "type": "string"
          },
          "Retries": {
            "default": 3,
            "description": "The number of times the device should retry if the server sends a PENDING response",
            "type": "number"
          },
          "RetryDelay": {
            "default": 10,
            "description": "The number of seconds to wait between subsequent retries. The first retry is attempted without this delay",
            "type": "number"
          },
          "Subject": {
            "description": "The representation of a X.500 name represented as an array of OID and value. OIDs can be represented as dotted numbers, with shortcuts for country (C), locality (L), state (ST), organization (O), organizational unit (OU), and common name (CN).",
            "items": {
              "description": "This array holds another array which holds an OID value pair",
              "items": {
                "description": "An array representing an OID and value pair.",
                "items": {
                  "description": "One item in the array representing a pair of OID and value",
                  "type": "string"
                },
                "type": "array"
              },
              "type": "array"
            },
            "type": "array"
          },
          "SubjectAltName": {
            "description": "Specifies the Subject Alt Name for the certificate",
            "properties": {
              "dNSName": {
                "description": "DNS Name",
                "type": "string"
              },
              "ntPrincipalName": {
                "description": "NT Principal Name",
                "type": "string"
              },
              "rfc822Name": {
                "description": "RFC 822 (email address) string",
                "type": "string"
              },
              "uniformResourceIdentifier": {
                "description": "Uniform Resource Indentifier",
                "type": "string"
              }
            },
            "type": "object"
          },
          "URL": {
            "description": "The base URL for the SCEP server",
            "type": "string"
          }
        },
        "type": "object"
      },
      "PayloadDescription": {
        "default": "Configures SCEP settings",
        "description": "Description of the payload",
        "type": "string"
      },
      "PayloadDisplayName": {
        "default": "SCEP",
        "description": "Name of the payload",
        "type": "string"
      },
      "PayloadIdentifier": {
        "default": "com.apple.security.scep",
        "description": "A unique identifier for the payload, dot-delimited.  Usually root PayloadIdentifier+subidentifier",
        "type": "string"
      },
      "PayloadOrganization": {
        "description": "This value describes the issuing organization of the profile, as displayed to the user",
        "type": "string"
      },
      "PayloadType": {
        "default": "com.apple.security.scep",
        "description": "The type of the payload, a reverse dns string",
        "type": "string"
      },
      "PayloadUUID": {
        "default": "",
        "description": "Unique identifier for the payload (format 01234567-89AB-CDEF-0123-456789ABCDEF)",
        "pattern": "^[0-9A-Za-z]{8}-[0-9A-Za-z]{4}-[0-9A-Za-z]{4}-[0-9A-Za-z]{4}-[0-9A-Za-z]{12}$",
        "type": "string"
      },
      "PayloadVersion": {
        "default": 1,
        "description": "The version of the whole configuration profile.",
        "type": "number"
      }
    },
    "title": "com.apple.security.scep",
    "type": "object"
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "PayloadContent": {
          "CAFingerprint": "1234567890abcdef",
          "Challenge": "mychallenge",
          "GetCACaps": {},
          "KeyType": "RSA",
          "KeyUsage": 5,
          "Keysize": 2048,
          "Name": "example.org",
          "Retries": 3,
          "RetryDelay": 10,
          "Subject": [
            [
              [
                "C",
                "US"
              ],
              [
                "L",
                "New York"
              ],
              [
                "ST",
                "New York"
              ],
              [
                "O",
                "Example Inc."
              ],
              [
                "OU",
                "IT Department"
              ],
              [
                "CN",
                "example.com"
              ]
            ]
          ],
          "SubjectAltName": {
            "dNSName": "example.com",
            "ntPrincipalName": "example\\user",
            "rfc822Name": "user@example.com",
            "uniformResourceIdentifier": "https://example.com"
          },
          "URL": "https://scep.example.com"
        },
        "PayloadDescription": "Configures SCEP settings",
        "PayloadDisplayName": "SCEP",
        "PayloadIdentifier": "com.apple.security.scep",
        "PayloadOrganization": "Example Inc.",
        "PayloadType": "com.apple.security.scep",
        "PayloadUUID": "01234567-89AB-CDEF-0123-456789ABCDEF",
        "PayloadVersion": 1
      }
    },
    {
      "description": "llama-70b generated negative; focus on pattern keyword",
      "valid": false,
      "rust_error": "\"InvalidUUID\" does not match \"^[0-9A-Za-z]{8}-[0-9A-Za-z]{4}-[0-9A-Za-z]{4}-[0-9A-Za-z]{4}-[0-9A-Za-z]{12}$\"",
      "python_error": "'InvalidUUID' does not match '^[0-9A-Za-z]{8}-[0-9A-Za-z]{4}-[0-9A-Za-z]{4}-[0-9A-Za-z]{4}-[0-9A-Za-z]{12}$'\n\nFailed validating 'pattern' in schema['properties']['PayloadUUID']:\n    {'default': '',\n     'description': 'Unique identifier for the payload (format '\n                    '01234567-89AB-CDEF-0123-456789ABCDEF)',\n     'pattern': '^[0-9A-Za-z]{8}-[0-9A-Za-z]{4}-[0-9A-Za-z]{4}-[0-9A-Za-z]{4}-[0-9A-Za-z]{12}$',\n     'type': 'string'}\n\nOn instance['PayloadUUID']:\n    'InvalidUUID'",
      "data": {
        "PayloadContent": {
          "CAFingerprint": "1234567890abcdef",
          "Challenge": "mychallenge",
          "GetCACaps": {},
          "KeyType": "RSA",
          "KeyUsage": 5,
          "Keysize": 2048,
          "Name": "example.org",
          "Retries": 3,
          "RetryDelay": 10,
          "Subject": [
            [
              [
                "C",
                "US"
              ],
              [
                "L",
                "New York"
              ],
              [
                "ST",
                "New York"
              ],
              [
                "O",
                "Example Inc."
              ],
              [
                "OU",
                "IT Department"
              ],
              [
                "CN",
                "example.com"
              ]
            ]
          ],
          "SubjectAltName": {
            "dNSName": "example.com",
            "ntPrincipalName": "example\\user",
            "rfc822Name": "user@example.com",
            "uniformResourceIdentifier": "https://example.com"
          },
          "URL": "https://scep.example.com"
        },
        "PayloadDescription": "Configures SCEP settings",
        "PayloadDisplayName": "SCEP",
        "PayloadIdentifier": "com.apple.security.scep",
        "PayloadOrganization": "Example Inc.",
        "PayloadType": "com.apple.security.scep",
        "PayloadUUID": "InvalidUUID",
        "PayloadVersion": 1
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"EC\" is not one of [\"RSA\"]",
      "python_error": "'EC' is not one of ['RSA']\n\nFailed validating 'enum' in schema['properties']['PayloadContent']['properties']['KeyType']:\n    {'default': 'RSA',\n     'description': 'Optional. Currently always \"RSA\".',\n     'enum': ['RSA'],\n     'type': 'string'}\n\nOn instance['PayloadContent']['KeyType']:\n    'EC'",
      "data": {
        "PayloadContent": {
          "CAFingerprint": "1234567890abcdef",
          "Challenge": "mychallenge",
          "GetCACaps": {},
          "KeyType": "EC",
          "KeyUsage": 5,
          "Keysize": 2048,
          "Name": "example.org",
          "Retries": 3,
          "RetryDelay": 10,
          "Subject": [
            [
              [
                "C",
                "US"
              ],
              [
                "L",
                "New York"
              ],
              [
                "ST",
                "New York"
              ],
              [
                "O",
                "Example Inc."
              ],
              [
                "OU",
                "IT Department"
              ],
              [
                "CN",
                "example.com"
              ]
            ]
          ],
          "SubjectAltName": {
            "dNSName": "example.com",
            "ntPrincipalName": "example\\user",
            "rfc822Name": "user@example.com",
            "uniformResourceIdentifier": "https://example.com"
          },
          "URL": "https://scep.example.com"
        },
        "PayloadDescription": "Configures SCEP settings",
        "PayloadDisplayName": "SCEP",
        "PayloadIdentifier": "com.apple.security.scep",
        "PayloadOrganization": "Example Inc.",
        "PayloadType": "com.apple.security.scep",
        "PayloadUUID": "01234567-89AB-CDEF-0123-456789ABCDEF",
        "PayloadVersion": 1
      }
    },
    {
      "description": "llama-70b generated negative; focus on pattern keyword",
      "valid": false,
      "rust_error": "\"01234567-89AB-CDEF-0123-456789ABCDEF1\" does not match \"^[0-9A-Za-z]{8}-[0-9A-Za-z]{4}-[0-9A-Za-z]{4}-[0-9A-Za-z]{4}-[0-9A-Za-z]{12}$\"",
      "python_error": "'01234567-89AB-CDEF-0123-456789ABCDEF1' does not match '^[0-9A-Za-z]{8}-[0-9A-Za-z]{4}-[0-9A-Za-z]{4}-[0-9A-Za-z]{4}-[0-9A-Za-z]{12}$'\n\nFailed validating 'pattern' in schema['properties']['PayloadUUID']:\n    {'default': '',\n     'description': 'Unique identifier for the payload (format '\n                    '01234567-89AB-CDEF-0123-456789ABCDEF)',\n     'pattern': '^[0-9A-Za-z]{8}-[0-9A-Za-z]{4}-[0-9A-Za-z]{4}-[0-9A-Za-z]{4}-[0-9A-Za-z]{12}$',\n     'type': 'string'}\n\nOn instance['PayloadUUID']:\n    '01234567-89AB-CDEF-0123-456789ABCDEF1'",
      "data": {
        "PayloadContent": {
          "CAFingerprint": "1234567890abcdef",
          "Challenge": "mychallenge",
          "GetCACaps": {},
          "KeyType": "RSA",
          "KeyUsage": 5,
          "Keysize": 2048,
          "Name": "example.org",
          "Retries": 3,
          "RetryDelay": 10,
          "Subject": [
            [
              [
                "C",
                "US"
              ],
              [
                "L",
                "New York"
              ],
              [
                "ST",
                "New York"
              ],
              [
                "O",
                "Example Inc."
              ],
              [
                "OU",
                "IT Department"
              ],
              [
                "CN",
                "example.com"
              ]
            ]
          ],
          "SubjectAltName": {
            "dNSName": "example.com",
            "ntPrincipalName": "example\\user",
            "rfc822Name": "user@example.com",
            "uniformResourceIdentifier": "https://example.com"
          },
          "URL": "https://scep.example.com"
        },
        "PayloadDescription": "Configures SCEP settings",
        "PayloadDisplayName": "SCEP",
        "PayloadIdentifier": "com.apple.security.scep",
        "PayloadOrganization": "Example Inc.",
        "PayloadType": "com.apple.security.scep",
        "PayloadUUID": "01234567-89AB-CDEF-0123-456789ABCDEF1",
        "PayloadVersion": 1
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "123 is not of type \"string\"",
      "python_error": "123 is not of type 'string'\n\nFailed validating 'type' in schema['properties']['PayloadContent']['properties']['Subject']['items']['items']['items']:\n    {'description': 'One item in the array representing a pair of OID and '\n                    'value',\n     'type': 'string'}\n\nOn instance['PayloadContent']['Subject'][0][0][1]:\n    123",
      "data": {
        "PayloadContent": {
          "CAFingerprint": "1234567890abcdef",
          "Challenge": "mychallenge",
          "GetCACaps": {},
          "KeyType": "RSA",
          "KeyUsage": 5,
          "Keysize": 2048,
          "Name": "example.org",
          "Retries": 3,
          "RetryDelay": 10,
          "Subject": [
            [
              [
                "C",
                123
              ],
              [
                "L",
                "New York"
              ],
              [
                "ST",
                "New York"
              ],
              [
                "O",
                "Example Inc."
              ],
              [
                "OU",
                "IT Department"
              ],
              [
                "CN",
                "example.com"
              ]
            ]
          ],
          "SubjectAltName": {
            "dNSName": "example.com",
            "ntPrincipalName": "example\\user",
            "rfc822Name": "user@example.com",
            "uniformResourceIdentifier": "https://example.com"
          },
          "URL": "https://scep.example.com"
        },
        "PayloadDescription": "Configures SCEP settings",
        "PayloadDisplayName": "SCEP",
        "PayloadIdentifier": "com.apple.security.scep",
        "PayloadOrganization": "Example Inc.",
        "PayloadType": "com.apple.security.scep",
        "PayloadUUID": "01234567-89AB-CDEF-0123-456789ABCDEF",
        "PayloadVersion": 1
      }
    },
    {
      "description": "llama-70b generated negative; focus on pattern keyword",
      "valid": false,
      "rust_error": "\"0123456789ABCDEF\" does not match \"^[0-9A-Za-z]{8}-[0-9A-Za-z]{4}-[0-9A-Za-z]{4}-[0-9A-Za-z]{4}-[0-9A-Za-z]{12}$\"",
      "python_error": "'0123456789ABCDEF' does not match '^[0-9A-Za-z]{8}-[0-9A-Za-z]{4}-[0-9A-Za-z]{4}-[0-9A-Za-z]{4}-[0-9A-Za-z]{12}$'\n\nFailed validating 'pattern' in schema['properties']['PayloadUUID']:\n    {'default': '',\n     'description': 'Unique identifier for the payload (format '\n                    '01234567-89AB-CDEF-0123-456789ABCDEF)',\n     'pattern': '^[0-9A-Za-z]{8}-[0-9A-Za-z]{4}-[0-9A-Za-z]{4}-[0-9A-Za-z]{4}-[0-9A-Za-z]{12}$',\n     'type': 'string'}\n\nOn instance['PayloadUUID']:\n    '0123456789ABCDEF'",
      "data": {
        "PayloadContent": {
          "CAFingerprint": "1234567890abcdef",
          "Challenge": "mychallenge",
          "GetCACaps": {},
          "KeyType": "RSA",
          "KeyUsage": 5,
          "Keysize": 2048,
          "Name": "example.org",
          "Retries": 3,
          "RetryDelay": 10,
          "Subject": [
            [
              [
                "C",
                "US"
              ],
              [
                "L",
                "New York"
              ],
              [
                "ST",
                "New York"
              ],
              [
                "O",
                "Example Inc."
              ],
              [
                "OU",
                "IT Department"
              ],
              [
                "CN",
                "example.com"
              ]
            ]
          ],
          "SubjectAltName": {
            "dNSName": "example.com",
            "ntPrincipalName": "example\\user",
            "rfc822Name": "user@example.com",
            "uniformResourceIdentifier": "https://example.com"
          },
          "URL": "https://scep.example.com"
        },
        "PayloadDescription": "Configures SCEP settings",
        "PayloadDisplayName": "SCEP",
        "PayloadIdentifier": "com.apple.security.scep",
        "PayloadOrganization": "Example Inc.",
        "PayloadType": "com.apple.security.scep",
        "PayloadUUID": "0123456789ABCDEF",
        "PayloadVersion": 1
      }
    }
  ]
}