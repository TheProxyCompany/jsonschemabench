{
  "description": "sample JsonSchemaStore/execution-environment.json",
  "meta": {
    "full_size": 6608,
    "stripped_size": 3393,
    "features": [
      "$ref",
      "@siblingKeys",
      "additionalProperties",
      "anyOf",
      "enum",
      "items",
      "oneOf"
    ],
    "raw_features": [
      "$defs",
      "$id",
      "$schema",
      "_boolSchema",
      "oneOf:trivial",
      "properties",
      "required",
      "type",
      "type:[]",
      "type:array",
      "type:boolean",
      "type:integer",
      "type:null",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$defs": {
      "TYPE_DictOrStringOrListOfStrings": {
        "anyOf": [
          {
            "type": "object"
          },
          {
            "type": "string"
          },
          {
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        ]
      },
      "TYPE_StringOrListOfStrings": {
        "anyOf": [
          {
            "type": "string"
          },
          {
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        ]
      },
      "v1": {
        "additionalProperties": false,
        "properties": {
          "additional_build_steps": {
            "properties": {
              "append": {
                "$ref": "#/$defs/TYPE_StringOrListOfStrings",
                "examples": [
                  "RUN cat /etc/os-release"
                ]
              },
              "prepend": {
                "$ref": "#/$defs/TYPE_StringOrListOfStrings",
                "examples": [
                  "RUN cat /etc/os-release"
                ]
              }
            },
            "title": "Commands to append or prepend to container build process.",
            "type": "object"
          },
          "ansible_config": {
            "examples": [
              "ansible.cfg"
            ],
            "title": "Ansible configuration file",
            "type": "string"
          },
          "build_arg_defaults": {
            "additionalProperties": true,
            "properties": {
              "EE_BASE_IMAGE": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "dependencies": {
            "description": "Allows adding system, python or galaxy dependencies.",
            "properties": {
              "galaxy": {
                "examples": [
                  "requirements.yml"
                ],
                "markdownDescription": "Example `requirements.yml`",
                "title": "Optional galaxy file",
                "type": "string"
              },
              "python": {
                "examples": [
                  "requirements.txt"
                ],
                "markdownDescription": "Example `requirements.txt`",
                "title": "Optional python package dependencies",
                "type": "string"
              },
              "system": {
                "examples": [
                  "bindep.txt"
                ],
                "markdownDescription": "Example `bindep.txt`",
                "title": "Optional system dependencies using bindep format",
                "type": "string"
              }
            },
            "title": "Dependencies",
            "type": "object"
          },
          "version": {
            "enum": [
              1
            ],
            "title": "Version",
            "type": "integer"
          }
        },
        "required": [
          "version",
          "dependencies"
        ],
        "title": "Ansible Execution Environment Schema v1",
        "type": "object"
      },
      "v3": {
        "additionalProperties": false,
        "properties": {
          "additional_build_files": {
            "description": "Describes files to add to the build context",
            "items": {
              "additionalProperties": false,
              "properties": {
                "dest": {
                  "description": "Relative subdirectory under build context to place file",
                  "type": "string"
                },
                "src": {
                  "description": "File to add to build context",
                  "type": "string"
                }
              },
              "required": [
                "src",
                "dest"
              ],
              "type": "object"
            },
            "type": "array"
          },
          "additional_build_steps": {
            "properties": {
              "append_base": {
                "$ref": "#/$defs/TYPE_StringOrListOfStrings",
                "examples": [
                  "RUN cat /etc/os-release"
                ]
              },
              "append_builder": {
                "$ref": "#/$defs/TYPE_StringOrListOfStrings",
                "examples": [
                  "RUN cat /etc/os-release"
                ]
              },
              "append_final": {
                "$ref": "#/$defs/TYPE_StringOrListOfStrings",
                "examples": [
                  "RUN cat /etc/os-release"
                ]
              },
              "append_galaxy": {
                "$ref": "#/$defs/TYPE_StringOrListOfStrings",
                "examples": [
                  "RUN cat /etc/os-release"
                ]
              },
              "prepend_base": {
                "$ref": "#/$defs/TYPE_StringOrListOfStrings",
                "examples": [
                  "RUN cat /etc/os-release"
                ]
              },
              "prepend_builder": {
                "$ref": "#/$defs/TYPE_StringOrListOfStrings",
                "examples": [
                  "RUN cat /etc/os-release"
                ]
              },
              "prepend_final": {
                "$ref": "#/$defs/TYPE_StringOrListOfStrings",
                "examples": [
                  "RUN cat /etc/os-release"
                ]
              },
              "prepend_galaxy": {
                "$ref": "#/$defs/TYPE_StringOrListOfStrings",
                "examples": [
                  "RUN cat /etc/os-release"
                ]
              }
            },
            "title": "Commands to append or prepend to container build process.",
            "type": "object"
          },
          "build_arg_defaults": {
            "additionalProperties": false,
            "properties": {
              "ANSIBLE_GALAXY_CLI_COLLECTION_OPTS": {
                "type": "string"
              },
              "ANSIBLE_GALAXY_CLI_ROLE_OPTS": {
                "type": "string"
              },
              "PKGMGR_PRESERVE_CACHE": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "dependencies": {
            "description": "Allows adding system, python or galaxy dependencies.",
            "properties": {
              "ansible_core": {
                "additionalProperties": false,
                "description": "Ansible package installation",
                "oneOf": [
                  {
                    "required": [
                      "package_pip"
                    ]
                  }
                ],
                "properties": {
                  "package_pip": {
                    "description": "Ansible package to install via pip",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "ansible_runner": {
                "additionalProperties": false,
                "description": "Ansible Runner package installation",
                "oneOf": [
                  {
                    "required": [
                      "package_pip"
                    ]
                  }
                ],
                "properties": {
                  "package_pip": {
                    "description": "Ansible Runner package to install via pip",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "galaxy": {
                "$ref": "#/$defs/TYPE_DictOrStringOrListOfStrings",
                "examples": [
                  "requirements.yml"
                ],
                "markdownDescription": "Example `requirements.yml`",
                "title": "Optional galaxy file"
              },
              "python": {
                "$ref": "#/$defs/TYPE_StringOrListOfStrings",
                "examples": [
                  "requirements.txt"
                ],
                "markdownDescription": "Example `requirements.txt`",
                "title": "Optional python package dependencies"
              },
              "python_interpreter": {
                "additionalProperties": false,
                "description": "Python package name and path",
                "properties": {
                  "package_system": {
                    "description": "The python package to install via system package manager",
                    "type": "string"
                  },
                  "python_path": {
                    "description": "Path to the python interpreter",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "system": {
                "$ref": "#/$defs/TYPE_StringOrListOfStrings",
                "examples": [
                  "bindep.txt"
                ],
                "markdownDescription": "Example `bindep.txt`",
                "title": "Optional system dependencies using bindep format"
              }
            },
            "title": "Dependencies",
            "type": "object"
          },
          "images": {
            "additionalProperties": false,
            "properties": {
              "base_image": {
                "name": {
                  "examples": [
                    "registry.redhat.io/ansible-automation-platform-21/ee-minimal-rhel8:latest"
                  ],
                  "type": "string"
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "options": {
            "additionalProperties": false,
            "description": "Options that effect runtime behavior",
            "properties": {
              "container_init": {
                "additionalProperties": false,
                "description": "Customize container startup behavior",
                "properties": {
                  "cmd": {
                    "description": "literal value for CMD Containerfile directive",
                    "type": "string"
                  },
                  "entrypoint": {
                    "description": "literal value for ENTRYPOINT Containerfile directive",
                    "type": "string"
                  },
                  "package_pip": {
                    "description": "package to install via pip for entrypoint support",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "package_manager_path": {
                "description": "Path to the system package manager to use",
                "type": "string"
              },
              "relax_passwd_permissions": {
                "description": "allows GID0 write access to /etc/passwd; currently necessary for many uses",
                "type": "boolean"
              },
              "skip_ansible_check": {
                "description": "Disables the check for Ansible/Runner in final image",
                "type": "boolean"
              },
              "user": {
                "description": "Sets the username or UID",
                "type": "string"
              },
              "workdir": {
                "description": "Default working directory, also often the homedir for ephemeral UIDs",
                "type": [
                  "string",
                  "null"
                ]
              }
            },
            "type": "object"
          },
          "version": {
            "enum": [
              3
            ],
            "title": "Version",
            "type": "integer"
          }
        },
        "required": [
          "version",
          "dependencies"
        ],
        "title": "Ansible Execution Environment Schema v3",
        "type": "object"
      }
    },
    "$id": "https://raw.githubusercontent.com/ansible/ansible-lint/main/src/ansiblelint/schemas/execution-environment.json",
    "$schema": "http://json-schema.org/draft-07/schema",
    "description": "See \nV1: https://docs.ansible.com/automation-controller/latest/html/userguide/ee_reference.html\nV3: https://ansible-builder.readthedocs.io/en/latest/definition/",
    "examples": [
      "execution-environment.yml"
    ],
    "oneOf": [
      {
        "$ref": "#/$defs/v3"
      },
      {
        "$ref": "#/$defs/v1"
      }
    ],
    "title": "Ansible Execution Environment Schema v1/v3"
  },
  "tests": [
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "version": 3,
        "dependencies": {
          "galaxy": "requirements.yml",
          "python": "requirements.txt",
          "system": "bindep.txt",
          "ansible_core": {
            "package_pip": "ansible-core==2.13.3"
          },
          "ansible_runner": {
            "package_pip": "ansible-runner==2.0.0a4"
          },
          "python_interpreter": {
            "package_system": "python3",
            "python_path": "/usr/bin/python3"
          }
        },
        "images": {
          "base_image": {
            "name": "registry.redhat.io/ansible-automation-platform-21/ee-minimal-rhel8:latest"
          }
        },
        "options": {
          "container_init": {
            "cmd": "/bin/bash",
            "entrypoint": "/usr/bin/ansible-runner",
            "package_pip": "ansible-runner==2.0.0a4"
          },
          "package_manager_path": "/usr/bin/dnf",
          "relax_passwd_permissions": true,
          "skip_ansible_check": false,
          "user": "ansible",
          "workdir": "/home/ansible"
        },
        "additional_build_files": [
          {
            "src": "ansible.cfg",
            "dest": "/home/ansible"
          },
          {
            "src": "requirements.yml",
            "dest": "/home/ansible"
          }
        ],
        "additional_build_steps": {
          "append_base": "RUN cat /etc/os-release",
          "append_builder": "RUN cat /etc/os-release",
          "append_final": "RUN cat /etc/os-release",
          "append_galaxy": "RUN cat /etc/os-release",
          "prepend_base": "RUN cat /etc/os-release",
          "prepend_builder": "RUN cat /etc/os-release",
          "prepend_final": "RUN cat /etc/os-release",
          "prepend_galaxy": "RUN cat /etc/os-release"
        },
        "build_arg_defaults": {
          "ANSIBLE_GALAXY_CLI_COLLECTION_OPTS": "--collections-path /home/ansible/collections",
          "ANSIBLE_GALAXY_CLI_ROLE_OPTS": "--roles-path /home/ansible/roles",
          "PKGMGR_PRESERVE_CACHE": "true"
        }
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "version": 3,
        "dependencies": {
          "galaxy": "requirements.yml",
          "python": "requirements.txt",
          "system": "bindep.txt",
          "ansible_core": {
            "package_pip": "ansible-core==2.12.5"
          },
          "python_interpreter": {
            "package_system": "python3",
            "python_path": "/usr/bin/python3"
          }
        },
        "images": {
          "base_image": {
            "name": "registry.redhat.io/ansible-automation-platform-21/ee-minimal-rhel8:latest"
          }
        },
        "options": {
          "relax_passwd_permissions": true,
          "user": "1001",
          "workdir": "/home/user"
        },
        "additional_build_steps": {
          "append_base": "RUN cat /etc/os-release",
          "prepend_final": "RUN echo 'Hello World!'"
        },
        "build_arg_defaults": {
          "PKGMGR_PRESERVE_CACHE": "true"
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on anyOf keyword",
      "valid": false,
      "rust_error": "{\"version\":3,\"dependencies\":{\"galaxy\":\"requirements.yml\",\"python\":\"requirements.txt\",\"system\":\"bindep.txt\",\"ansible_core\":{\"package_pip\":\"ansible-core==2.12.5\"},\"python_interpreter\":{\"package_system\":\"python3\",\"python_path\":\"/usr/bin/python3\"}},\"images\":{\"base_image\":{\"name\":\"registry.redhat.io/ansible-automation-platform-21/ee-minimal-rhel8:latest\"}},\"options\":{\"relax_passwd_permissions\":true,\"user\":\"1001\",\"workdir\":\"/home/user\"},\"additional_build_steps\":{\"append_base\":\"RUN cat /etc/os-release\",\"prepend_final\":\"RUN echo 'Hello World!'\",\"append_galaxy\":123},\"build_arg_defaults\":{\"PKGMGR_PRESERVE_CACHE\":\"true\"}} is not valid under any of the schemas listed in the 'oneOf' keyword",
      "python_error": "123 is not valid under any of the given schemas\n\nFailed validating 'anyOf' in schema[0]['properties']['additional_build_steps']['properties']['append_galaxy']:\n    {'anyOf': [{'type': 'string'},\n               {'items': {'type': 'string'}, 'type': 'array'}]}\n\nOn instance['additional_build_steps']['append_galaxy']:\n    123",
      "data": {
        "version": 3,
        "dependencies": {
          "galaxy": "requirements.yml",
          "python": "requirements.txt",
          "system": "bindep.txt",
          "ansible_core": {
            "package_pip": "ansible-core==2.12.5"
          },
          "python_interpreter": {
            "package_system": "python3",
            "python_path": "/usr/bin/python3"
          }
        },
        "images": {
          "base_image": {
            "name": "registry.redhat.io/ansible-automation-platform-21/ee-minimal-rhel8:latest"
          }
        },
        "options": {
          "relax_passwd_permissions": true,
          "user": "1001",
          "workdir": "/home/user"
        },
        "additional_build_steps": {
          "append_base": "RUN cat /etc/os-release",
          "prepend_final": "RUN echo 'Hello World!'",
          "append_galaxy": 123
        },
        "build_arg_defaults": {
          "PKGMGR_PRESERVE_CACHE": "true"
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on type keyword with an array of types",
      "valid": false,
      "rust_error": "{\"version\":3,\"dependencies\":{\"galaxy\":[\"requirements.yml\",123],\"additionalProperties\":true,\"python\":\"requirements.txt\",\"system\":\"bindep.txt\",\"ansible_core\":{\"package_pip\":\"ansible-core==2.12.5\"},\"python_interpreter\":{\"package_system\":\"python3\",\"python_path\":\"/usr/bin/python3\"}},\"images\":{\"base_image\":{\"name\":\"registry.redhat.io/ansible-automation-platform-21/ee-minimal-rhel8:latest\"}},\"options\":{\"relax_passwd_permissions\":true,\"user\":\"1001\",\"workdir\":\"/home/user\"},\"additional_build_steps\":{\"append_base\":\"RUN cat /etc/os-release\",\"prepend_final\":\"RUN echo 'Hello World!'\"},\"build_arg_defaults\":{\"PKGMGR_PRESERVE_CACHE\":\"true\"}} is not valid under any of the schemas listed in the 'oneOf' keyword",
      "python_error": "123 is not of type 'string'\n\nFailed validating 'type' in schema[2]['items']:\n    {'type': 'string'}\n\nOn instance[1]:\n    123",
      "data": {
        "version": 3,
        "dependencies": {
          "galaxy": [
            "requirements.yml",
            123
          ],
          "additionalProperties": true,
          "python": "requirements.txt",
          "system": "bindep.txt",
          "ansible_core": {
            "package_pip": "ansible-core==2.12.5"
          },
          "python_interpreter": {
            "package_system": "python3",
            "python_path": "/usr/bin/python3"
          }
        },
        "images": {
          "base_image": {
            "name": "registry.redhat.io/ansible-automation-platform-21/ee-minimal-rhel8:latest"
          }
        },
        "options": {
          "relax_passwd_permissions": true,
          "user": "1001",
          "workdir": "/home/user"
        },
        "additional_build_steps": {
          "append_base": "RUN cat /etc/os-release",
          "prepend_final": "RUN echo 'Hello World!'"
        },
        "build_arg_defaults": {
          "PKGMGR_PRESERVE_CACHE": "true"
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on oneOf keyword",
      "valid": false,
      "rust_error": "{\"version\":1,\"dependencies\":{\"galaxy\":\"requirements.yml\",\"python\":\"requirements.txt\",\"system\":\"bindep.txt\",\"ansible_core\":{\"package_pip\":\"ansible-core==2.12.5\"},\"python_interpreter\":{\"package_system\":\"python3\",\"python_path\":\"/usr/bin/python3\"}},\"images\":{\"base_image\":{\"name\":\"registry.redhat.io/ansible-automation-platform-21/ee-minimal-rhel8:latest\"}},\"options\":{\"relax_passwd_permissions\":true,\"user\":\"1001\",\"workdir\":\"/home/user\"},\"additional_build_steps\":{\"append_base\":\"RUN cat /etc/os-release\",\"prepend_final\":\"RUN echo 'Hello World!'\"},\"build_arg_defaults\":{\"PKGMGR_PRESERVE_CACHE\":\"true\"}} is not valid under any of the schemas listed in the 'oneOf' keyword",
      "python_error": "1 is not one of [3]\n\nFailed validating 'enum' in schema[0]['properties']['version']:\n    {'enum': [3], 'title': 'Version', 'type': 'integer'}\n\nOn instance['version']:\n    1",
      "data": {
        "version": 1,
        "dependencies": {
          "galaxy": "requirements.yml",
          "python": "requirements.txt",
          "system": "bindep.txt",
          "ansible_core": {
            "package_pip": "ansible-core==2.12.5"
          },
          "python_interpreter": {
            "package_system": "python3",
            "python_path": "/usr/bin/python3"
          }
        },
        "images": {
          "base_image": {
            "name": "registry.redhat.io/ansible-automation-platform-21/ee-minimal-rhel8:latest"
          }
        },
        "options": {
          "relax_passwd_permissions": true,
          "user": "1001",
          "workdir": "/home/user"
        },
        "additional_build_steps": {
          "append_base": "RUN cat /etc/os-release",
          "prepend_final": "RUN echo 'Hello World!'"
        },
        "build_arg_defaults": {
          "PKGMGR_PRESERVE_CACHE": "true"
        }
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "{\"version\":4,\"dependencies\":{\"galaxy\":\"requirements.yml\",\"python\":\"requirements.txt\",\"system\":\"bindep.txt\",\"ansible_core\":{\"package_pip\":\"ansible-core==2.12.5\"},\"python_interpreter\":{\"package_system\":\"python3\",\"python_path\":\"/usr/bin/python3\"}},\"images\":{\"base_image\":{\"name\":\"registry.redhat.io/ansible-automation-platform-21/ee-minimal-rhel8:latest\"}},\"options\":{\"relax_passwd_permissions\":true,\"user\":\"1001\",\"workdir\":\"/home/user\"},\"additional_build_steps\":{\"append_base\":\"RUN cat /etc/os-release\",\"prepend_final\":\"RUN echo 'Hello World!'\"},\"build_arg_defaults\":{\"PKGMGR_PRESERVE_CACHE\":\"true\"}} is not valid under any of the schemas listed in the 'oneOf' keyword",
      "python_error": "{'version': 4, 'dependencies': {'galaxy': 'requirements.yml', 'python': 'requirements.txt', 'system': 'bindep.txt', 'ansible_core': {'package_pip': 'ansible-core==2.12.5'}, 'python_interpreter': {'package_system': 'python3', 'python_path': '/usr/bin/python3'}}, 'images': {'base_image': {'name': 'registry.redhat.io/ansible-automation-platform-21/ee-minimal-rhel8:latest'}}, 'options': {'relax_passwd_permissions': True, 'user': '1001', 'workdir': '/home/user'}, 'additional_build_steps': {'append_base': 'RUN cat /etc/os-release', 'prepend_final': \"RUN echo 'Hello World!'\"}, 'build_arg_defaults': {'PKGMGR_PRESERVE_CACHE': 'true'}} is not valid under any of the given schemas\n\nFailed validating 'oneOf' in schema:\n    {'$defs': {'TYPE_DictOrStringOrListOfStrings': {'anyOf': [{'type': 'object'},\n                                                              {'type': 'string'},\n                                                              {'items': {'type': 'string'},\n                                                    .. (37296 more)",
      "data": {
        "version": 4,
        "dependencies": {
          "galaxy": "requirements.yml",
          "python": "requirements.txt",
          "system": "bindep.txt",
          "ansible_core": {
            "package_pip": "ansible-core==2.12.5"
          },
          "python_interpreter": {
            "package_system": "python3",
            "python_path": "/usr/bin/python3"
          }
        },
        "images": {
          "base_image": {
            "name": "registry.redhat.io/ansible-automation-platform-21/ee-minimal-rhel8:latest"
          }
        },
        "options": {
          "relax_passwd_permissions": true,
          "user": "1001",
          "workdir": "/home/user"
        },
        "additional_build_steps": {
          "append_base": "RUN cat /etc/os-release",
          "prepend_final": "RUN echo 'Hello World!'"
        },
        "build_arg_defaults": {
          "PKGMGR_PRESERVE_CACHE": "true"
        }
      }
    }
  ]
}