{
  "description": "sample Github_easy/o79518.json",
  "meta": {
    "full_size": 536,
    "stripped_size": 317,
    "features": [
      "$ref",
      "additionalProperties",
      "items"
    ],
    "raw_features": [
      "$schema",
      "_boolSchema",
      "definitions",
      "properties",
      "required",
      "type",
      "type:array",
      "type:boolean",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "definitions": {
      "apiTest": {
        "type": "object",
        "properties": {
          "api": {
            "type": "string",
            "description": "URL called to perform the api test"
          },
          "message": {
            "type": "string",
            "description": "Describes the outcome of the api test. Includes any exceptions if required"
          },
          "success": {
            "type": "boolean",
            "description": "true if the api test succeeds or false if the api test fails"
          }
        },
        "additionalProperties": false,
        "required": [
          "api",
          "message",
          "success"
        ]
      }
    },
    "type": "array",
    "items": {
      "$ref": "#/definitions/apiTest"
    }
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": [
        {
          "api": "https://api.example.com/test1",
          "message": "API test 1 passed successfully",
          "success": true
        },
        {
          "api": "https://api.example.com/test2",
          "message": "API test 2 failed with exception: Connection timed out",
          "success": false
        },
        {
          "api": "https://api.example.com/test3",
          "message": "API test 3 passed with response code 200",
          "success": true
        }
      ]
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "{\"api\":\"https://api.example.com/test1\",\"message\":\"API test 1 passed successfully\",\"success\":true,\"extraProperty\":\"This is an extra property\"} is not of type \"array\"",
      "python_error": "{'api': 'https://api.example.com/test1', 'message': 'API test 1 passed successfully', 'success': True, 'extraProperty': 'This is an extra property'} is not of type 'array'\n\nFailed validating 'type' in schema:\n    {'$schema': 'http://json-schema.org/draft-04/schema#',\n     'definitions': {'apiTest': {'type': 'object',\n                                 'properties': {'api': {'type': 'string',\n                                                        'description': 'URL '\n                                                                       'called '\n                                                                       'to '\n                                                                       'perform '\n                                                                       'the '\n                                                                       'api '\n                                                                       'test'},\n                                                'message': {'type': 'string',.. (2655 more)",
      "data": {
        "api": "https://api.example.com/test1",
        "message": "API test 1 passed successfully",
        "success": true,
        "extraProperty": "This is an extra property"
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "{\"api\":\"https://api.example.com/test1\",\"message\":\"API test 1 passed successfully\",\"success\":true,\"additionalProperty\":\"some value\"} is not of type \"array\"",
      "python_error": "{'api': 'https://api.example.com/test1', 'message': 'API test 1 passed successfully', 'success': True, 'additionalProperty': 'some value'} is not of type 'array'\n\nFailed validating 'type' in schema:\n    {'$schema': 'http://json-schema.org/draft-04/schema#',\n     'definitions': {'apiTest': {'type': 'object',\n                                 'properties': {'api': {'type': 'string',\n                                                        'description': 'URL '\n                                                                       'called '\n                                                                       'to '\n                                                                       'perform '\n                                                                       'the '\n                                                                       'api '\n                                                                       'test'},\n                                                'message': {'type': 'string',\n         .. (2635 more)",
      "data": {
        "api": "https://api.example.com/test1",
        "message": "API test 1 passed successfully",
        "success": true,
        "additionalProperty": "some value"
      }
    }
  ]
}