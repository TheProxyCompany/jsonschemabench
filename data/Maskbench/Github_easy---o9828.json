{
  "description": "sample Github_easy/o9828.json",
  "meta": {
    "full_size": 734,
    "stripped_size": 714,
    "features": [
      "@minmaxInteger",
      "additionalProperties",
      "enum",
      "items",
      "pattern"
    ],
    "raw_features": [
      "$schema",
      "_boolSchema",
      "minimum",
      "properties",
      "required",
      "type",
      "type:array",
      "type:integer",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "type": "object",
    "properties": {
      "deviceId": {
        "type": "string",
        "pattern": "^[A-Fa-f\\d]{24}$"
      },
      "key": {
        "type": "string"
      },
      "secret": {
        "type": "string"
      },
      "tokenTTL": {
        "type": "integer",
        "minimum": 0
      },
      "requestedScopes": {
        "type": "array",
        "_uniqueItems": true,
        "items": {
          "type": "string",
          "enum": [
            "all.Device",
            "all.Device.read",
            "data.export",
            "data.timeSeriesQuery",
            "data.lastValueQuery",
            "device.commandStream",
            "device.get",
            "device.getCompositeState",
            "device.getState",
            "device.stateStream",
            "device.getLogEntries",
            "device.getCommand",
            "device.debug",
            "device.sendState",
            "device.sendCommand",
            "device.setConnectionStatus",
            "devices.get",
            "devices.sendCommand"
          ]
        }
      }
    },
    "required": [
      "deviceId"
    ],
    "additionalProperties": false
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "deviceId": "1234567890abcdef12345678",
        "key": "my_key",
        "secret": "my_secret",
        "tokenTTL": 3600,
        "requestedScopes": [
          "all.Device",
          "data.export",
          "device.commandStream",
          "device.get",
          "device.getState",
          "device.stateStream"
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on pattern keyword",
      "valid": false,
      "rust_error": "\"1234567890abcdef1234567\" does not match \"^[A-Fa-f\\d]{24}$\"",
      "python_error": "'1234567890abcdef1234567' does not match '^[A-Fa-f\\\\d]{24}$'\n\nFailed validating 'pattern' in schema['properties']['deviceId']:\n    {'type': 'string', 'pattern': '^[A-Fa-f\\\\d]{24}$'}\n\nOn instance['deviceId']:\n    '1234567890abcdef1234567'",
      "data": {
        "deviceId": "1234567890abcdef1234567",
        "key": "my_key",
        "secret": "my_secret",
        "tokenTTL": 3600,
        "requestedScopes": [
          "all.Device",
          "data.export",
          "device.commandStream",
          "device.get",
          "device.getState",
          "device.stateStream"
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on minimum keyword",
      "valid": false,
      "rust_error": "-1 is less than the minimum of 0",
      "python_error": "-1 is less than the minimum of 0\n\nFailed validating 'minimum' in schema['properties']['tokenTTL']:\n    {'type': 'integer', 'minimum': 0}\n\nOn instance['tokenTTL']:\n    -1",
      "data": {
        "deviceId": "1234567890abcdef12345678",
        "key": "my_key",
        "secret": "my_secret",
        "tokenTTL": -1,
        "requestedScopes": [
          "all.Device",
          "data.export",
          "device.commandStream",
          "device.get",
          "device.getState",
          "device.stateStream"
        ]
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"1234567890abcdef1234567\" does not match \"^[A-Fa-f\\d]{24}$\"",
      "python_error": "'1234567890abcdef1234567' does not match '^[A-Fa-f\\\\d]{24}$'\n\nFailed validating 'pattern' in schema['properties']['deviceId']:\n    {'type': 'string', 'pattern': '^[A-Fa-f\\\\d]{24}$'}\n\nOn instance['deviceId']:\n    '1234567890abcdef1234567'",
      "data": {
        "deviceId": "1234567890abcdef1234567",
        "key": "my_key",
        "secret": "my_secret",
        "tokenTTL": 3600,
        "requestedScopes": [
          "all.Device",
          "data.export",
          "device.commandStream",
          "device.get",
          "device.getState",
          "device.stateStream",
          "device.stateStream"
        ]
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "deviceId": "0123456789abcdef01234567",
        "key": "exampleKey",
        "secret": "exampleSecret",
        "tokenTTL": 3600,
        "requestedScopes": [
          "all.Device",
          "data.export",
          "device.commandStream",
          "device.get",
          "device.getState",
          "device.stateStream"
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on minimum keyword",
      "valid": false,
      "rust_error": "-1 is less than the minimum of 0",
      "python_error": "-1 is less than the minimum of 0\n\nFailed validating 'minimum' in schema['properties']['tokenTTL']:\n    {'type': 'integer', 'minimum': 0}\n\nOn instance['tokenTTL']:\n    -1",
      "data": {
        "deviceId": "0123456789abcdef01234567",
        "key": "exampleKey",
        "secret": "exampleSecret",
        "tokenTTL": -1,
        "requestedScopes": [
          "all.Device",
          "data.export",
          "device.commandStream",
          "device.get",
          "device.getState",
          "device.stateStream"
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on pattern keyword",
      "valid": false,
      "rust_error": "\"0123456789abcdef0123456\" does not match \"^[A-Fa-f\\d]{24}$\"",
      "python_error": "'0123456789abcdef0123456' does not match '^[A-Fa-f\\\\d]{24}$'\n\nFailed validating 'pattern' in schema['properties']['deviceId']:\n    {'type': 'string', 'pattern': '^[A-Fa-f\\\\d]{24}$'}\n\nOn instance['deviceId']:\n    '0123456789abcdef0123456'",
      "data": {
        "deviceId": "0123456789abcdef0123456",
        "key": "exampleKey",
        "secret": "exampleSecret",
        "tokenTTL": 3600,
        "requestedScopes": [
          "all.Device",
          "data.export",
          "device.commandStream",
          "device.get",
          "device.getState",
          "device.stateStream"
        ]
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"0123456789abcdef0123456\" does not match \"^[A-Fa-f\\d]{24}$\"",
      "python_error": "'0123456789abcdef0123456' does not match '^[A-Fa-f\\\\d]{24}$'\n\nFailed validating 'pattern' in schema['properties']['deviceId']:\n    {'type': 'string', 'pattern': '^[A-Fa-f\\\\d]{24}$'}\n\nOn instance['deviceId']:\n    '0123456789abcdef0123456'",
      "data": {
        "deviceId": "0123456789abcdef0123456",
        "key": "exampleKey",
        "secret": "exampleSecret",
        "tokenTTL": 3600,
        "requestedScopes": [
          "all.Device",
          "data.export",
          "device.commandStream",
          "device.get",
          "device.getState",
          "device.stateStream"
        ]
      }
    }
  ]
}