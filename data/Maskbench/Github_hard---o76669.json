{
  "description": "sample Github_hard/o76669.json",
  "meta": {
    "full_size": 4536,
    "stripped_size": 2013,
    "features": [
      "@minmaxLength",
      "@minmaxNumber",
      "additionalProperties",
      "anyOf",
      "enum",
      "items",
      "patternProperties"
    ],
    "raw_features": [
      "$schema",
      "_boolSchema",
      "minLength",
      "minimum",
      "properties",
      "required",
      "type",
      "type:[]",
      "type:array",
      "type:boolean",
      "type:null",
      "type:number",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-04/schema",
    "title": "JSON schema for React Cosmos configs",
    "type": "object",
    "additionalProperties": false,
    "properties": {
      "$schema": {
        "type": "string"
      },
      "rootDir": {
        "description": "The root directory that all others paths in this config are relative to. Usually the root of your repo. If omitted, rootDir is equal to the directory containing your Cosmos config. When you don't use a Cosmos config, rootDir defaults to the current working directory.",
        "type": "string",
        "minLength": 1
      },
      "exportPath": {
        "description": "Where to generate static exports on disk. [default: \"cosmos-export\"]",
        "type": "string",
        "minLength": 1
      },
      "staticPath": {
        "description": "Dir path to serve static assets from.",
        "type": "string",
        "minLength": 1
      },
      "publicUrl": {
        "description": "Base URL for static assets. [default: \"/\"]",
        "type": "string"
      },
      "fixturesDir": {
        "description": "Name for directories that contain fixtures (eg. __fixtures__/example.jsx). [default: \"__fixtures__\"]",
        "type": "string",
        "minLength": 1
      },
      "fixtureFileSuffix": {
        "description": "Suffix for fixture files (eg. example.fixture.jsx). [default: \"fixture\"]",
        "type": "string",
        "minLength": 1
      },
      "watchDirs": {
        "description": "Directories where the Cosmos server watches for fixture files changes while running. [default: [\".\"]]",
        "type": "array",
        "items": {
          "type": "string",
          "minLength": 1
        },
        "_uniqueItems": true
      },
      "userDepsFilePath": {
        "description": "Where to generate a file that contains a map to all fixtures and other Cosmos-related user modules. Only used in setups where Cosmos can't piggyback on the user's build (eg. React Native setups). [default: \"cosmos.userdeps.js\"]",
        "type": "string",
        "minLength": 1
      },
      "hostname": {
        "description": "Dev server hostname. Set to null to accept connections with any hostname. [default: null]",
        "anyOf": [
          {
            "type": "string",
            "minLength": 1
          },
          {
            "type": "null"
          }
        ]
      },
      "port": {
        "description": "Dev server port. [default: 5000]",
        "type": "number"
      },
      "https": {
        "description": "Server will be served over HTTPS",
        "type": "boolean"
      },
      "httpsOptions": {
        "description": "Additional options for HTTPS server",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "certPath": {
            "description": "Path of a certificate file",
            "type": "string"
          },
          "keyPath": {
            "description": "Path of a certificate's key file",
            "type": "string"
          }
        }
      },
      "httpProxy": {
        "description": "Proxy some URLs to a different HTTP server (eg. an API backend dev server). Similar to devServer.proxy in webpack config.",
        "type": "object",
        "additionalProperties": true,
        "patternProperties": {
          ".*": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "description": "Advanced HTTP proxy config.",
                "additionalProperties": true,
                "required": [
                  "target"
                ],
                "properties": {
                  "target": {
                    "type": "string"
                  },
                  "secure": {
                    "type": "boolean"
                  },
                  "pathRewrite": {
                    "type": "object",
                    "patternProperties": {
                      ".*": {
                        "type": "string"
                      }
                    }
                  },
                  "logLevel": {
                    "type": "string",
                    "enum": [
                      "error",
                      "debug",
                      "info",
                      "warn",
                      "silent"
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      "globalImports": {
        "description": "Modules to be imported before loading components. Stuff like reset.css, polyfills, etc.",
        "type": "array",
        "items": {
          "type": "string",
          "minLength": 1
        },
        "_uniqueItems": true
      },
      "dom": {
        "description": "DOM-related options",
        "type": "object",
        "properties": {
          "containerQuerySelector": {
            "description": "Document selector for existing element to use as component parent (eg. #root). A blank container element is created from scratch if no selector is provided. [default: null]",
            "type": [
              "string",
              "null"
            ],
            "minLength": 1
          }
        }
      },
      "webpack": {
        "description": "Webpack-related options",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "configPath": {
            "description": "Path to an existing webpack config, which Cosmos will reuse to build your code. Set to null to disable this behavior. [default \"webpack.config.js\"]",
            "anyOf": [
              {
                "type": "string",
                "minLength": 1
              },
              {
                "type": "null"
              }
            ]
          },
          "overridePath": {
            "description": "Path to a user module that customizes the webpack config used by Cosmos. Set to null to disable this behavior. [default \"webpack.override.js\"]",
            "anyOf": [
              {
                "type": "string",
                "minLength": 1
              },
              {
                "type": "null"
              }
            ]
          },
          "hotReload": {
            "description": "Enable webpack's Hot Module Replacement. [default: true]",
            "type": "boolean"
          }
        }
      },
      "ui": {
        "description": "UI plugin options",
        "type": "object",
        "additionalProperties": true,
        "properties": {
          "responsivePreview": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "devices": {
                "description": "List of device viewports",
                "type": "array",
                "items": {
                  "type": "object",
                  "additionalProperties": false,
                  "required": [
                    "label",
                    "width",
                    "height"
                  ],
                  "properties": {
                    "label": {
                      "type": "string",
                      "minLength": 1
                    },
                    "width": {
                      "type": "number",
                      "minimum": 1
                    },
                    "height": {
                      "type": "number",
                      "minimum": 1
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "tests": [
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "$schema": "http://json-schema.org/draft-04/schema",
        "rootDir": "/path/to/project/root",
        "exportPath": "cosmos-export",
        "staticPath": "public",
        "publicUrl": "/",
        "fixturesDir": "__fixtures__",
        "fixtureFileSuffix": "fixture",
        "watchDirs": [
          ".",
          "src"
        ],
        "userDepsFilePath": "cosmos.userdeps.js",
        "hostname": null,
        "port": 5000,
        "https": false,
        "httpsOptions": {
          "certPath": "/path/to/cert",
          "keyPath": "/path/to/key"
        },
        "httpProxy": {
          "/api": "http://localhost:8080"
        },
        "globalImports": [
          "reset.css",
          "polyfills.js"
        ],
        "dom": {
          "containerQuerySelector": "#root"
        },
        "webpack": {
          "configPath": "webpack.config.js",
          "overridePath": "webpack.override.js",
          "hotReload": true
        },
        "ui": {
          "responsivePreview": {
            "devices": [
              {
                "label": "Desktop",
                "width": 1920,
                "height": 1080
              },
              {
                "label": "Tablet",
                "width": 768,
                "height": 1024
              },
              {
                "label": "Mobile",
                "width": 375,
                "height": 667
              }
            ]
          }
        }
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "$schema": "http://json-schema.org/draft-04/schema",
        "rootDir": "/path/to/project",
        "exportPath": "cosmos-export",
        "staticPath": "public",
        "publicUrl": "/",
        "fixturesDir": "__fixtures__",
        "fixtureFileSuffix": "fixture",
        "watchDirs": [
          "."
        ],
        "userDepsFilePath": "cosmos.userdeps.js",
        "hostname": null,
        "port": 5000,
        "https": false,
        "httpsOptions": {
          "certPath": "/path/to/cert",
          "keyPath": "/path/to/key"
        },
        "httpProxy": {
          "/api": {
            "target": "http://localhost:8080",
            "secure": false,
            "pathRewrite": {
              "^/api": ""
            },
            "logLevel": "info"
          }
        },
        "globalImports": [
          "reset.css",
          "polyfills.js"
        ],
        "dom": {
          "containerQuerySelector": "#root"
        },
        "webpack": {
          "configPath": "webpack.config.js",
          "overridePath": "webpack.override.js",
          "hotReload": true
        },
        "ui": {
          "responsivePreview": {
            "devices": [
              {
                "label": "iPhone 12",
                "width": 390,
                "height": 844
              },
              {
                "label": "iPad Pro",
                "width": 1024,
                "height": 1366
              }
            ]
          }
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on minimum keyword",
      "valid": false,
      "rust_error": "0 is less than the minimum of 1",
      "python_error": "0 is less than the minimum of 1\n\nFailed validating 'minimum' in schema['properties']['ui']['properties']['responsivePreview']['properties']['devices']['items']['properties']['width']:\n    {'type': 'number', 'minimum': 1}\n\nOn instance['ui']['responsivePreview']['devices'][0]['width']:\n    0",
      "data": {
        "$schema": "http://json-schema.org/draft-04/schema",
        "rootDir": "/path/to/project",
        "exportPath": "cosmos-export",
        "staticPath": "public",
        "publicUrl": "/",
        "fixturesDir": "__fixtures__",
        "fixtureFileSuffix": "fixture",
        "watchDirs": [
          "."
        ],
        "userDepsFilePath": "cosmos.userdeps.js",
        "hostname": null,
        "port": 5000,
        "https": false,
        "httpsOptions": {
          "certPath": "/path/to/cert",
          "keyPath": "/path/to/key"
        },
        "httpProxy": {
          "/api": {
            "target": "http://localhost:8080",
            "secure": false,
            "pathRewrite": {
              "^/api": ""
            },
            "logLevel": "info"
          }
        },
        "globalImports": [
          "reset.css",
          "polyfills.js"
        ],
        "dom": {
          "containerQuerySelector": "#root"
        },
        "webpack": {
          "configPath": "webpack.config.js",
          "overridePath": "webpack.override.js",
          "hotReload": true
        },
        "ui": {
          "responsivePreview": {
            "devices": [
              {
                "label": "iPhone 12",
                "width": 0,
                "height": 0
              },
              {
                "label": "iPad Pro",
                "width": 1024,
                "height": 1366
              }
            ]
          }
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on type keyword with an array of types",
      "valid": false,
      "rust_error": "123 is not of type \"string\"",
      "python_error": "123 is not of type 'string'\n\nFailed validating 'type' in schema['properties']['ui']['properties']['responsivePreview']['properties']['devices']['items']['properties']['label']:\n    {'type': 'string', 'minLength': 1}\n\nOn instance['ui']['responsivePreview']['devices'][0]['label']:\n    123",
      "data": {
        "$schema": "http://json-schema.org/draft-04/schema",
        "rootDir": "/path/to/project",
        "exportPath": "cosmos-export",
        "staticPath": "public",
        "publicUrl": "/",
        "fixturesDir": "__fixtures__",
        "fixtureFileSuffix": "fixture",
        "watchDirs": [
          "."
        ],
        "userDepsFilePath": "cosmos.userdeps.js",
        "hostname": null,
        "port": 5000,
        "https": false,
        "httpsOptions": {
          "certPath": "/path/to/cert",
          "keyPath": "/path/to/key"
        },
        "httpProxy": {
          "/api": {
            "target": "http://localhost:8080",
            "secure": false,
            "pathRewrite": {
              "^/api": ""
            },
            "logLevel": "info"
          }
        },
        "globalImports": [
          "reset.css",
          "polyfills.js"
        ],
        "dom": {
          "containerQuerySelector": "#root"
        },
        "webpack": {
          "configPath": "webpack.config.js",
          "overridePath": "webpack.override.js",
          "hotReload": true
        },
        "ui": {
          "responsivePreview": {
            "devices": [
              {
                "label": 123,
                "width": 390,
                "height": 844
              },
              {
                "label": "iPad Pro",
                "width": 1024,
                "height": 1366
              }
            ]
          }
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on minLength keyword",
      "valid": false,
      "rust_error": "\"\" is shorter than 1 character",
      "python_error": "'' should be non-empty\n\nFailed validating 'minLength' in schema['properties']['userDepsFilePath']:\n    {'description': 'Where to generate a file that contains a map to all '\n                    'fixtures and other Cosmos-related user modules. Only '\n                    \"used in setups where Cosmos can't piggyback on the \"\n                    \"user's build (eg. React Native setups). [default: \"\n                    '\"cosmos.userdeps.js\"]',\n     'type': 'string',\n     'minLength': 1}\n\nOn instance['userDepsFilePath']:\n    ''",
      "data": {
        "$schema": "http://json-schema.org/draft-04/schema",
        "rootDir": "",
        "exportPath": "",
        "staticPath": "",
        "publicUrl": "/",
        "fixturesDir": "",
        "fixtureFileSuffix": "",
        "watchDirs": [
          ""
        ],
        "userDepsFilePath": "",
        "hostname": null,
        "port": 5000,
        "https": false,
        "httpsOptions": {
          "certPath": "/path/to/cert",
          "keyPath": "/path/to/key"
        },
        "httpProxy": {
          "/api": {
            "target": "http://localhost:8080",
            "secure": false,
            "pathRewrite": {
              "^/api": ""
            },
            "logLevel": "info"
          }
        },
        "globalImports": [
          ""
        ],
        "dom": {
          "containerQuerySelector": ""
        },
        "webpack": {
          "configPath": "",
          "overridePath": "",
          "hotReload": true
        },
        "ui": {
          "responsivePreview": {
            "devices": [
              {
                "label": "",
                "width": 1,
                "height": 1
              }
            ]
          }
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on anyOf keyword",
      "valid": false,
      "rust_error": "123 is not valid under any of the schemas listed in the 'anyOf' keyword",
      "python_error": "123 is not valid under any of the given schemas\n\nFailed validating 'anyOf' in schema['properties']['hostname']:\n    {'description': 'Dev server hostname. Set to null to accept '\n                    'connections with any hostname. [default: null]',\n     'anyOf': [{'type': 'string', 'minLength': 1}, {'type': 'null'}]}\n\nOn instance['hostname']:\n    123",
      "data": {
        "$schema": "http://json-schema.org/draft-04/schema",
        "rootDir": "/path/to/project",
        "exportPath": "cosmos-export",
        "staticPath": "public",
        "publicUrl": "/",
        "fixturesDir": "__fixtures__",
        "fixtureFileSuffix": "fixture",
        "watchDirs": [
          "."
        ],
        "userDepsFilePath": "cosmos.userdeps.js",
        "hostname": 123,
        "port": 5000,
        "https": false,
        "httpsOptions": {
          "certPath": "/path/to/cert",
          "keyPath": "/path/to/key"
        },
        "httpProxy": {
          "/api": {
            "target": "http://localhost:8080",
            "secure": false,
            "pathRewrite": {
              "^/api": ""
            },
            "logLevel": "info"
          }
        },
        "globalImports": [
          "reset.css",
          "polyfills.js"
        ],
        "dom": {
          "containerQuerySelector": "#root"
        },
        "webpack": {
          "configPath": "webpack.config.js",
          "overridePath": "webpack.override.js",
          "hotReload": true
        },
        "ui": {
          "responsivePreview": {
            "devices": [
              {
                "label": "iPhone 12",
                "width": 390,
                "height": 844
              },
              {
                "label": "iPad Pro",
                "width": 1024,
                "height": 1366
              }
            ]
          }
        }
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "123 is not of type \"string\"",
      "python_error": "Additional properties are not allowed ('extraProperty' was unexpected)\n\nFailed validating 'additionalProperties' in schema:\n    {'$schema': 'http://json-schema.org/draft-04/schema',\n     'title': 'JSON schema for React Cosmos configs',\n     'type': 'object',\n     'additionalProperties': False,\n     'properties': {'$schema': {'type': 'string'},\n                    'rootDir': {'description': 'The root directory that '\n                                               'all others paths in this '\n                                               'config are relative to. '\n                                               'Usually the root of your '\n                                               'repo. If omitted, rootDir '\n                                               'is equal to the directory '\n                                               'containing your Cosmos '\n                                               \"config. When you don't use \"\n                                               'a Cosmos config, rootDir '\n   .. (21703 more)",
      "data": {
        "$schema": "http://json-schema.org/draft-04/schema",
        "rootDir": 123,
        "exportPath": "cosmos-export",
        "staticPath": "public",
        "publicUrl": "/",
        "fixturesDir": "__fixtures__",
        "fixtureFileSuffix": "fixture",
        "watchDirs": [
          "."
        ],
        "userDepsFilePath": "cosmos.userdeps.js",
        "hostname": null,
        "port": 5000,
        "https": false,
        "httpsOptions": {
          "certPath": "/path/to/cert",
          "keyPath": "/path/to/key"
        },
        "httpProxy": {
          "/api": {
            "target": "http://localhost:8080",
            "secure": false,
            "pathRewrite": {
              "^/api": ""
            },
            "logLevel": "info"
          }
        },
        "globalImports": [
          "reset.css",
          "polyfills.js",
          123
        ],
        "dom": {
          "containerQuerySelector": "#root"
        },
        "webpack": {
          "configPath": "webpack.config.js",
          "overridePath": "webpack.override.js",
          "hotReload": true
        },
        "ui": {
          "responsivePreview": {
            "devices": [
              {
                "label": "iPhone 12",
                "width": 390,
                "height": 844,
                "aspectRatio": 1.6
              },
              {
                "label": "iPad Pro",
                "width": 1024,
                "height": 1366
              }
            ]
          }
        },
        "extraProperty": "this property is not defined in the schema"
      }
    }
  ]
}