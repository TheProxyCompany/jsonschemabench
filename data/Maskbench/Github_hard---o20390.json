{
  "description": "sample Github_hard/o20390.json",
  "meta": {
    "full_size": 3187,
    "stripped_size": 2909,
    "features": [
      "$ref",
      "additionalProperties",
      "dependencies",
      "format",
      "format:environment",
      "format:ports",
      "items",
      "oneOf",
      "patternProperties"
    ],
    "raw_features": [
      "_boolSchema",
      "definitions",
      "id",
      "properties",
      "required",
      "type",
      "type:[]",
      "type:array",
      "type:boolean",
      "type:integer",
      "type:null",
      "type:number",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "additionalProperties": false,
    "definitions": {
      "list_of_strings": {
        "items": {
          "type": "string"
        },
        "type": "array",
        "_uniqueItems": true
      },
      "list_or_dict": {
        "oneOf": [
          {
            "items": {
              "type": "string"
            },
            "type": "array",
            "_uniqueItems": true
          },
          {
            "type": "object"
          }
        ]
      },
      "service": {
        "additionalProperties": false,
        "dependencies": {
          "memswap_limit": [
            "mem_limit"
          ]
        },
        "id": "#/definitions/service",
        "properties": {
          "build": {
            "type": "string"
          },
          "cap_add": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "_uniqueItems": true
          },
          "cap_drop": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "_uniqueItems": true
          },
          "cgroup_parent": {
            "type": "string"
          },
          "command": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              }
            ]
          },
          "container_name": {
            "type": "string"
          },
          "cpu_shares": {
            "type": [
              "number",
              "string"
            ]
          },
          "cpuset": {
            "type": "string"
          },
          "devices": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "_uniqueItems": true
          },
          "dns": {
            "$ref": "#/definitions/string_or_list"
          },
          "dns_search": {
            "$ref": "#/definitions/string_or_list"
          },
          "dockerfile": {
            "type": "string"
          },
          "domainname": {
            "type": "string"
          },
          "entrypoint": {
            "$ref": "#/definitions/string_or_list"
          },
          "env_file": {
            "$ref": "#/definitions/string_or_list"
          },
          "environment": {
            "oneOf": [
              {
                "additionalProperties": false,
                "patternProperties": {
                  ".+": {
                    "format": "environment",
                    "type": [
                      "string",
                      "number",
                      "boolean",
                      "null"
                    ]
                  }
                },
                "type": "object"
              },
              {
                "items": {
                  "type": "string"
                },
                "type": "array",
                "_uniqueItems": true
              }
            ]
          },
          "expose": {
            "items": {
              "type": [
                "string",
                "number"
              ]
            },
            "type": "array",
            "_uniqueItems": true
          },
          "extends": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "additionalProperties": false,
                "properties": {
                  "file": {
                    "type": "string"
                  },
                  "service": {
                    "type": "string"
                  }
                },
                "required": [
                  "service"
                ],
                "type": "object"
              }
            ]
          },
          "external_links": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "_uniqueItems": true
          },
          "extra_hosts": {
            "$ref": "#/definitions/list_or_dict"
          },
          "hostname": {
            "type": "string"
          },
          "image": {
            "type": "string"
          },
          "ipc": {
            "type": "string"
          },
          "labels": {
            "$ref": "#/definitions/list_or_dict"
          },
          "links": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "_uniqueItems": true
          },
          "log_driver": {
            "type": "string"
          },
          "log_opt": {
            "type": "object"
          },
          "mac_address": {
            "type": "string"
          },
          "mem_limit": {
            "type": [
              "number",
              "string"
            ]
          },
          "memswap_limit": {
            "type": [
              "number",
              "string"
            ]
          },
          "net": {
            "type": "string"
          },
          "pid": {
            "type": [
              "string",
              "null"
            ]
          },
          "ports": {
            "items": {
              "oneOf": [
                {
                  "_format": "ports",
                  "type": "string"
                },
                {
                  "format": "ports",
                  "type": "number"
                }
              ]
            },
            "type": "array",
            "_uniqueItems": true
          },
          "privileged": {
            "type": "boolean"
          },
          "read_only": {
            "type": "boolean"
          },
          "restart": {
            "type": "string"
          },
          "security_opt": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "_uniqueItems": true
          },
          "stdin_open": {
            "type": "boolean"
          },
          "tty": {
            "type": "boolean"
          },
          "ulimits": {
            "patternProperties": {
              "^[a-z]+$": {
                "oneOf": [
                  {
                    "type": "integer"
                  },
                  {
                    "additionalProperties": false,
                    "properties": {
                      "hard": {
                        "type": "integer"
                      },
                      "soft": {
                        "type": "integer"
                      }
                    },
                    "required": [
                      "soft",
                      "hard"
                    ],
                    "type": "object"
                  }
                ]
              }
            },
            "type": "object"
          },
          "user": {
            "type": "string"
          },
          "volume_driver": {
            "type": "string"
          },
          "volumes": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "_uniqueItems": true
          },
          "volumes_from": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "_uniqueItems": true
          },
          "working_dir": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "string_or_list": {
        "oneOf": [
          {
            "type": "string"
          },
          {
            "$ref": "#/definitions/list_of_strings"
          }
        ]
      }
    },
    "patternProperties": {
      "^[a-zA-Z0-9._-]+$": {
        "$ref": "#/definitions/service"
      }
    },
    "type": "object"
  },
  "tests": [
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "my_service": {
          "build": "my_build",
          "cap_add": [
            "NET_ADMIN"
          ],
          "cap_drop": [
            "SYS_ADMIN"
          ],
          "cgroup_parent": "my_cgroup",
          "command": [
            "my_command",
            "arg1",
            "arg2"
          ],
          "container_name": "my_container",
          "cpu_shares": 1024,
          "cpuset": "0-3",
          "devices": [
            "/dev/sda:/dev/sda"
          ],
          "dns": [
            "8.8.8.8",
            "8.8.4.4"
          ],
          "dns_search": [
            "example.com"
          ],
          "dockerfile": "my_dockerfile",
          "domainname": "example.com",
          "entrypoint": [
            "my_entrypoint"
          ],
          "env_file": [
            "my_env_file"
          ],
          "environment": {
            "MY_VAR": "my_value"
          },
          "expose": [
            "8080"
          ],
          "extends": {
            "file": "my_file",
            "service": "my_service"
          },
          "external_links": [
            "my_external_link"
          ],
          "extra_hosts": {
            "my_host": "192.168.1.100"
          },
          "hostname": "my_hostname",
          "image": "my_image",
          "ipc": "host",
          "labels": {
            "my_label": "my_value"
          },
          "links": [
            "my_link"
          ],
          "log_driver": "json-file",
          "log_opt": {
            "labels": "my_labels",
            "env": "my_env"
          },
          "mac_address": "00:11:22:33:44:55",
          "mem_limit": "1024m",
          "memswap_limit": "2048m",
          "net": "host",
          "pid": "host",
          "ports": [
            "8080:8080"
          ],
          "privileged": true,
          "read_only": true,
          "restart": "always",
          "security_opt": [
            "label:disable"
          ],
          "stdin_open": true,
          "tty": true,
          "ulimits": {
            "nofile": {
              "hard": 1024,
              "soft": 1024
            }
          },
          "user": "my_user",
          "volume_driver": "my_volume_driver",
          "volumes": [
            "/my_volume:/my_volume"
          ],
          "volumes_from": [
            "my_volumes_from"
          ],
          "working_dir": "/my_working_dir"
        }
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "my_service": {
          "build": "/path/to/build",
          "cap_add": [
            "NET_ADMIN"
          ],
          "cap_drop": [
            "SYS_ADMIN"
          ],
          "command": [
            "bash",
            "-c",
            "echo Hello World"
          ],
          "container_name": "my_container",
          "cpu_shares": 1024,
          "cpuset": "0,1",
          "devices": [
            "/dev/ttyUSB0:/dev/ttyUSB0"
          ],
          "dns": [
            "8.8.8.8",
            "8.8.4.4"
          ],
          "dns_search": [
            "example.com"
          ],
          "dockerfile": "Dockerfile",
          "domainname": "example.com",
          "entrypoint": [
            "bash",
            "-c"
          ],
          "env_file": [
            ".env"
          ],
          "environment": {
            "MY_VAR": "my_value",
            "MY_VAR2": 123
          },
          "expose": [
            "8080",
            "8081"
          ],
          "extends": {
            "file": "docker-compose.yml",
            "service": "my_service"
          },
          "external_links": [
            "my_service:my_service"
          ],
          "extra_hosts": {
            "example.com": "127.0.0.1"
          },
          "hostname": "example.com",
          "image": "my_image",
          "ipc": "host",
          "labels": {
            "my_label": "my_value"
          },
          "links": [
            "my_service:my_service"
          ],
          "log_driver": "json-file",
          "log_opt": {
            "labels": "my_label",
            "env": "my_env"
          },
          "mac_address": "00:11:22:33:44:55",
          "mem_limit": "1024m",
          "memswap_limit": "2048m",
          "net": "host",
          "pid": "host",
          "ports": [
            "8080:8080",
            "8081:8081"
          ],
          "privileged": true,
          "read_only": true,
          "restart": "always",
          "security_opt": [
            "label:disable"
          ],
          "stdin_open": true,
          "tty": true,
          "ulimits": {
            "nofile": {
              "hard": 1024,
              "soft": 1024
            }
          },
          "user": "my_user",
          "volume_driver": "local",
          "volumes": [
            "/path/to/volume:/path/to/container"
          ],
          "volumes_from": [
            "my_service:my_service"
          ],
          "working_dir": "/path/to/working/dir"
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on oneOf keyword",
      "valid": false,
      "rust_error": "Additional properties are not allowed ('command2' was unexpected)",
      "python_error": "Additional properties are not allowed ('command2' was unexpected)\n\nFailed validating 'additionalProperties' in schema['patternProperties']['^[a-zA-Z0-9._-]+$']:\n    {'additionalProperties': False,\n     'dependencies': {'memswap_limit': ['mem_limit']},\n     'id': '#/definitions/service',\n     'properties': {'build': {'type': 'string'},\n                    'cap_add': {'items': {'type': 'string'},\n                                'type': 'array',\n                                '_uniqueItems': True},\n                    'cap_drop': {'items': {'type': 'string'},\n                                 'type': 'array',\n                                 '_uniqueItems': True},\n                    'cgroup_parent': {'type': 'string'},\n                    'command': {'oneOf': [{'type': 'string'},\n                                          {'items': {'type': 'string'},\n                                           'type': 'array'}]},\n                    'container_name': {'type': 'string'},\n                    'cpu_shares': {'type':.. (5431 more)",
      "data": {
        "my_service": {
          "command": [
            "bash",
            "-c",
            "echo Hello World",
            "extra_value"
          ],
          "command2": "bash -c echo Hello World"
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on patternProperties keyword",
      "valid": false,
      "rust_error": "Additional properties are not allowed ('!invalid!' was unexpected)",
      "python_error": "'!invalid!' does not match any of the regexes: '^[a-zA-Z0-9._-]+$'\n\nFailed validating 'additionalProperties' in schema:\n    {'additionalProperties': False,\n     'definitions': {'list_of_strings': {'items': {'type': 'string'},\n                                         'type': 'array',\n                                         '_uniqueItems': True},\n                     'list_or_dict': {'oneOf': [{'items': {'type': 'string'},\n                                                 'type': 'array',\n                                                 '_uniqueItems': True},\n                                                {'type': 'object'}]},\n                     'service': {'additionalProperties': False,\n                                 'dependencies': {'memswap_limit': ['mem_limit']},\n                                 'id': '#/definitions/service',\n                                 'properties': {'build': {'type': 'string'},\n                                                'cap_add': {'items': {'type': 'string'},\n             .. (13606 more)",
      "data": {
        "my_service": {
          "build": "/path/to/build",
          "cap_add": [
            "NET_ADMIN"
          ],
          "cap_drop": [
            "SYS_ADMIN"
          ],
          "command": [
            "bash",
            "-c",
            "echo Hello World"
          ],
          "container_name": "my_container",
          "cpu_shares": 1024,
          "cpuset": "0,1",
          "devices": [
            "/dev/ttyUSB0:/dev/ttyUSB0"
          ],
          "dns": [
            "8.8.8.8",
            "8.8.4.4"
          ],
          "dns_search": [
            "example.com"
          ],
          "dockerfile": "Dockerfile",
          "domainname": "example.com",
          "entrypoint": [
            "bash",
            "-c"
          ],
          "env_file": [
            ".env"
          ],
          "environment": {
            "MY_VAR": "my_value",
            "MY_VAR2": 123
          },
          "expose": [
            "8080",
            "8081"
          ],
          "extends": {
            "file": "docker-compose.yml",
            "service": "my_service"
          },
          "external_links": [
            "my_service:my_service"
          ],
          "extra_hosts": {
            "example.com": "127.0.0.1"
          },
          "hostname": "example.com",
          "image": "my_image",
          "ipc": "host",
          "labels": {
            "my_label": "my_value"
          },
          "links": [
            "my_service:my_service"
          ],
          "log_driver": "json-file",
          "log_opt": {
            "labels": "my_label",
            "env": "my_env"
          },
          "mac_address": "00:11:22:33:44:55",
          "mem_limit": "1024m",
          "memswap_limit": "2048m",
          "net": "host",
          "pid": "host",
          "ports": [
            "8080:8080",
            "8081:8081"
          ],
          "privileged": true,
          "read_only": true,
          "restart": "always",
          "security_opt": [
            "label:disable"
          ],
          "stdin_open": true,
          "tty": true,
          "ulimits": {
            "nofile": {
              "hard": 1024,
              "soft": 1024
            }
          },
          "user": "my_user",
          "volume_driver": "local",
          "volumes": [
            "/path/to/volume:/path/to/container"
          ],
          "volumes_from": [
            "my_service:my_service"
          ],
          "working_dir": "/path/to/working/dir"
        },
        "!invalid!": {
          "build": "/path/to/build",
          "cap_add": [
            "NET_ADMIN"
          ],
          "cap_drop": [
            "SYS_ADMIN"
          ],
          "command": [
            "bash",
            "-c",
            "echo Hello World"
          ],
          "container_name": "my_container",
          "cpu_shares": 1024,
          "cpuset": "0,1",
          "devices": [
            "/dev/ttyUSB0:/dev/ttyUSB0"
          ],
          "dns": [
            "8.8.8.8",
            "8.8.4.4"
          ],
          "dns_search": [
            "example.com"
          ],
          "dockerfile": "Dockerfile",
          "domainname": "example.com",
          "entrypoint": [
            "bash",
            "-c"
          ],
          "env_file": [
            ".env"
          ],
          "environment": {
            "MY_VAR": "my_value",
            "MY_VAR2": 123
          },
          "expose": [
            "8080",
            "8081"
          ],
          "extends": {
            "file": "docker-compose.yml",
            "service": "my_service"
          },
          "external_links": [
            "my_service:my_service"
          ],
          "extra_hosts": {
            "example.com": "127.0.0.1"
          },
          "hostname": "example.com",
          "image": "my_image",
          "ipc": "host",
          "labels": {
            "my_label": "my_value"
          },
          "links": [
            "my_service:my_service"
          ],
          "log_driver": "json-file",
          "log_opt": {
            "labels": "my_label",
            "env": "my_env"
          },
          "mac_address": "00:11:22:33:44:55",
          "mem_limit": "1024m",
          "memswap_limit": "2048m",
          "net": "host",
          "pid": "host",
          "ports": [
            "8080:8080",
            "8081:8081"
          ],
          "privileged": true,
          "read_only": true,
          "restart": "always",
          "security_opt": [
            "label:disable"
          ],
          "stdin_open": true,
          "tty": true,
          "ulimits": {
            "nofile": {
              "hard": 1024,
              "soft": 1024
            }
          },
          "user": "my_user",
          "volume_driver": "local",
          "volumes": [
            "/path/to/volume:/path/to/container"
          ],
          "volumes_from": [
            "my_service:my_service"
          ],
          "working_dir": "/path/to/working/dir"
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on type keyword with an array of types",
      "valid": false,
      "rust_error": "{\"MY_VAR\":\"my_value\",\"MY_VAR2\":123,\"MY_VAR3\":null,\"MY_VAR4\":true,\"MY_VAR5\":{\"a\":\"b\"}} is not valid under any of the schemas listed in the 'oneOf' keyword",
      "python_error": "{'a': 'b'} is not of type 'string', 'number', 'boolean', 'null'\n\nFailed validating 'type' in schema[0]['patternProperties']['.+']:\n    {'format': 'environment',\n     'type': ['string', 'number', 'boolean', 'null']}\n\nOn instance['MY_VAR5']:\n    {'a': 'b'}",
      "data": {
        "my_service": {
          "build": "/path/to/build",
          "cap_add": [
            "NET_ADMIN"
          ],
          "cap_drop": [
            "SYS_ADMIN"
          ],
          "command": [
            "bash",
            "-c",
            "echo Hello World"
          ],
          "container_name": "my_container",
          "cpu_shares": 1024,
          "cpuset": "0,1",
          "devices": [
            "/dev/ttyUSB0:/dev/ttyUSB0"
          ],
          "dns": [
            "8.8.8.8",
            "8.8.4.4"
          ],
          "dns_search": [
            "example.com"
          ],
          "dockerfile": "Dockerfile",
          "domainname": "example.com",
          "entrypoint": [
            "bash",
            "-c"
          ],
          "env_file": [
            ".env"
          ],
          "environment": {
            "MY_VAR": "my_value",
            "MY_VAR2": 123,
            "MY_VAR3": null,
            "MY_VAR4": true,
            "MY_VAR5": {
              "a": "b"
            }
          },
          "expose": [
            "8080",
            "8081"
          ],
          "extends": {
            "file": "docker-compose.yml",
            "service": "my_service"
          },
          "external_links": [
            "my_service:my_service"
          ],
          "extra_hosts": {
            "example.com": "127.0.0.1"
          },
          "hostname": "example.com",
          "image": "my_image",
          "ipc": "host",
          "labels": {
            "my_label": "my_value"
          },
          "links": [
            "my_service:my_service"
          ],
          "log_driver": "json-file",
          "log_opt": {
            "labels": "my_label",
            "env": "my_env"
          },
          "mac_address": "00:11:22:33:44:55",
          "mem_limit": "1024m",
          "memswap_limit": "2048m",
          "net": "host",
          "pid": "host",
          "ports": [
            "8080:8080",
            "8081:8081",
            8082
          ],
          "privileged": true,
          "read_only": true,
          "restart": "always",
          "security_opt": [
            "label:disable"
          ],
          "stdin_open": true,
          "tty": true,
          "ulimits": {
            "nofile": {
              "hard": 1024,
              "soft": 1024
            }
          },
          "user": "my_user",
          "volume_driver": "local",
          "volumes": [
            "/path/to/volume:/path/to/container"
          ],
          "volumes_from": [
            "my_service:my_service"
          ],
          "working_dir": "/path/to/working/dir"
        }
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "123 is not of type \"string\"",
      "python_error": "8 is not of type 'string'\n\nFailed validating 'type' in schema[1]['items']:\n    {'type': 'string'}\n\nOn instance[1]:\n    8",
      "data": {
        "my_service": {
          "build": "/path/to/build",
          "cap_add": [
            123
          ],
          "cap_drop": [
            "SYS_ADMIN"
          ],
          "command": [
            "bash",
            "-c",
            "echo Hello World"
          ],
          "container_name": "my_container",
          "cpu_shares": 1024,
          "cpuset": "0,1",
          "devices": [
            "/dev/ttyUSB0:/dev/ttyUSB0"
          ],
          "dns": [
            "8.8.8.8",
            8
          ],
          "dns_search": [
            "example.com"
          ],
          "dockerfile": "Dockerfile",
          "domainname": "example.com",
          "entrypoint": [
            "bash",
            "-c"
          ],
          "env_file": [
            ".env"
          ],
          "environment": {
            "MY_VAR": null,
            "MY_VAR2": "my_value"
          },
          "expose": [
            8080,
            8081
          ],
          "extends": {
            "file": "docker-compose.yml",
            "service": "my_service"
          },
          "external_links": [
            "my_service:my_service"
          ],
          "extra_hosts": {
            "example.com": 127
          },
          "hostname": "example.com",
          "image": "my_image",
          "ipc": "host",
          "labels": {
            "my_label": "my_value"
          },
          "links": [
            "my_service:my_service"
          ],
          "log_driver": "json-file",
          "log_opt": {
            "labels": "my_label",
            "env": "my_env"
          },
          "mac_address": "00:11:22:33:44:55",
          "mem_limit": "1024m",
          "memswap_limit": "2048m",
          "net": "host",
          "pid": "host",
          "ports": [
            "8080:8080",
            "8081"
          ],
          "privileged": true,
          "read_only": true,
          "restart": "always",
          "security_opt": [
            "label:disable"
          ],
          "stdin_open": true,
          "tty": true,
          "ulimits": {
            "nofile": {
              "hard": 1024,
              "soft": "1024"
            }
          },
          "user": "my_user",
          "volume_driver": "local",
          "volumes": [
            "/path/to/volume:/path/to/container"
          ],
          "volumes_from": [
            "my_service:my_service"
          ],
          "working_dir": "/path/to/working/dir"
        }
      }
    }
  ]
}