{
  "description": "sample Github_easy/o9945.json",
  "meta": {
    "full_size": 441,
    "stripped_size": 441,
    "features": [
      "@minmaxLength",
      "additionalProperties",
      "format",
      "format:email"
    ],
    "raw_features": [
      "$schema",
      "_boolSchema",
      "maxLength",
      "minLength",
      "properties",
      "required",
      "type",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "type": "object",
    "properties": {
      "name": {
        "type": "string",
        "minLength": 1,
        "maxLength": 255
      },
      "description": {
        "type": "string",
        "maxLength": 32767
      },
      "planId": {
        "type": "string",
        "maxLength": 1024
      },
      "billingEmail": {
        "type": "string",
        "format": "email",
        "maxLength": 1024
      },
      "cardToken": {
        "type": "string",
        "maxLength": 1024
      },
      "iconColor": {
        "type": "string",
        "maxLength": 64
      }
    },
    "additionalProperties": false,
    "required": [
      "name"
    ]
  },
  "tests": [
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "name": "Example Name",
        "description": "This is an example description.",
        "planId": "example-plan-id",
        "billingEmail": "example@example.com",
        "cardToken": "example-card-token",
        "iconColor": "#FF0000"
      }
    },
    {
      "description": "llama-70b generated negative; focus on format keyword",
      "valid": false,
      "rust_error": "\"invalid-email\" is not a \"email\"",
      "python_error": "'invalid-email' is not a 'email'\n\nFailed validating 'format' in schema['properties']['billingEmail']:\n    {'type': 'string', 'format': 'email', 'maxLength': 1024}\n\nOn instance['billingEmail']:\n    'invalid-email'",
      "data": {
        "name": "Example Name",
        "description": "This is an example description.",
        "planId": "example-plan-id",
        "billingEmail": "invalid-email",
        "cardToken": "example-card-token",
        "iconColor": "#FF0000"
      }
    },
    {
      "description": "llama-70b generated negative; focus on minLength keyword or maxLength keyword",
      "valid": false,
      "rust_error": "\"\" is shorter than 1 character",
      "python_error": "'' should be non-empty\n\nFailed validating 'minLength' in schema['properties']['name']:\n    {'type': 'string', 'minLength': 1, 'maxLength': 255}\n\nOn instance['name']:\n    ''",
      "data": {
        "name": "",
        "description": "This is an example description.",
        "planId": "example-plan-id",
        "billingEmail": "example@example.com",
        "cardToken": "example-card-token",
        "iconColor": "#FF0000"
      }
    }
  ]
}