{
  "description": "sample Github_hard/o39233.json",
  "meta": {
    "full_size": 3946,
    "stripped_size": 3003,
    "features": [
      "$ref",
      "additionalProperties",
      "additionalProperties:object",
      "enum",
      "items",
      "propertyNames"
    ],
    "raw_features": [
      "_boolSchema",
      "definitions",
      "properties",
      "type",
      "type:array",
      "type:boolean",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "additionalProperties": false,
    "definitions": {
      "condition": {
        "additionalProperties": false
      },
      "metadata": {
        "additionalProperties": false,
        "properties": {
          "allow-types": {
            "default": [
              "null",
              "boolean",
              "string",
              "number",
              "integer",
              "object",
              "array",
              "any"
            ],
            "description": "allowed types for this keyword",
            "items": {
              "$ref": "#/properties/vocabularies/properties/type/items"
            },
            "type": "array"
          },
          "as-container": {
            "default": false,
            "description": "treat the value for this keyword as containing as-schema values",
            "type": "boolean"
          },
          "as-schema": {
            "default": false,
            "description": "treat the value for this keyword as a schema if possible",
            "type": "boolean"
          },
          "comment": {
            "description": "an optional descriptive comment",
            "type": "string"
          },
          "for-types": {
            "default": [
              "null",
              "boolean",
              "string",
              "number",
              "integer",
              "object",
              "array",
              "any"
            ],
            "description": "which types of value this keyword applies to",
            "items": {
              "$ref": "#/properties/vocabularies/properties/type/items"
            },
            "type": "array"
          },
          "for-undefined": {
            "default": "false",
            "description": "whether this keyword should still be processed if the instance is undefined",
            "type": "boolean"
          },
          "synonym": {
            "default": [],
            "description": "other keywords in the same vocabulary with identical meaning",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      }
    },
    "properties": {
      "metadata": {
        "additionalProperties": false,
        "properties": {
          "core": {
            "additionalProperties": {
              "$ref": "#/definitions/metadata"
            },
            "propertyNames": {
              "$ref": "#/properties/vocabularies/properties/core/items"
            },
            "type": "object"
          },
          "format": {
            "additionalProperties": {
              "$ref": "#/definitions/metadata"
            },
            "propertyNames": {
              "$ref": "#/properties/vocabularies/properties/format/items"
            },
            "type": "object"
          },
          "implementation": {
            "additionalProperties": {
              "$ref": "#/definitions/metadata"
            },
            "propertyNames": {
              "$ref": "#/properties/vocabularies/properties/implementation/items"
            },
            "type": "object"
          },
          "metadata": {
            "additionalProperties": {
              "$ref": "#/definitions/metadata"
            },
            "propertyNames": {
              "$ref": "#/properties/vocabularies/properties/metadata/items"
            },
            "type": "object"
          },
          "type": {
            "additionalProperties": {
              "$ref": "#/definitions/metadata"
            },
            "propertyNames": {
              "$ref": "#/properties/vocabularies/properties/type/items"
            },
            "type": "object"
          },
          "validation": {
            "additionalProperties": {
              "$ref": "#/definitions/metadata"
            },
            "propertyNames": {
              "$ref": "#/properties/vocabularies/properties/validation/items"
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "vocabularies": {
        "additionalProperties": false,
        "properties": {
          "core": {
            "description": "core json-schema keywords",
            "items": {
              "enum": [
                "$ref",
                "$schema",
                "$id",
                "id"
              ],
              "type": "string"
            },
            "type": "array"
          },
          "format": {
            "description": "pre-defined formats",
            "items": {
              "enum": [
                "date-time",
                "date",
                "time",
                "utc-millisec",
                "regex",
                "color",
                "style",
                "phone",
                "uri",
                "uriref",
                "uri-reference",
                "uri-template",
                "json-pointer",
                "email",
                "ip-address",
                "ipv4",
                "ipv6",
                "host-name",
                "hostname"
              ],
              "type": "string"
            },
            "type": "array"
          },
          "implementation": {
            "description": "implementation rules",
            "items": {
              "enum": [
                "allowUndefinedTypes",
                "selfDescriptiveMetaSchema",
                "allowSimpleDependencies",
                "formatSchemaURI",
                "allowSchemaInUnionType",
                "allowBooleanSchema",
                "allowIntegerWithFractionalPart"
              ],
              "type": "string"
            },
            "type": "array"
          },
          "metadata": {
            "description": "metadata keywords, not used for validation",
            "items": {
              "enum": [
                "definitions",
                "title",
                "description",
                "default",
                "examples"
              ],
              "type": "string"
            },
            "type": "array"
          },
          "type": {
            "description": "primitive types",
            "items": {
              "enum": [
                "null",
                "boolean",
                "string",
                "number",
                "integer",
                "object",
                "array",
                "any"
              ],
              "type": "string"
            },
            "type": "array"
          },
          "validation": {
            "description": "validation keywords",
            "items": {
              "enum": [
                "disallow",
                "extends",
                "divisibleBy",
                "multipleOf",
                "minimum",
                "maximum",
                "exclusiveMinimum",
                "exclusiveMaximum",
                "minLength",
                "maxLength",
                "pattern",
                "items",
                "additionalItems",
                "minItems",
                "maxItems",
                "_uniqueItems",
                "contains",
                "properties",
                "patternProperties",
                "additionalProperties",
                "minProperties",
                "maxProperties",
                "required",
                "dependencies",
                "propertyNames",
                "type",
                "const",
                "enum",
                "allOf",
                "anyOf",
                "oneOf",
                "not",
                "format"
              ],
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      }
    },
    "type": "object"
  },
  "tests": [
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "metadata": {
          "core": {
            "$ref": {
              "allow-types": [
                "string",
                "object"
              ],
              "as-container": true,
              "as-schema": true,
              "comment": "Reference to a schema",
              "for-types": [
                "object"
              ],
              "for-undefined": true,
              "synonym": []
            },
            "$schema": {
              "allow-types": [
                "string",
                "object"
              ],
              "as-container": false,
              "as-schema": true,
              "comment": "Schema identifier",
              "for-types": [
                "object"
              ],
              "for-undefined": true,
              "synonym": []
            }
          },
          "format": {
            "date-time": {
              "allow-types": [
                "string"
              ],
              "as-container": false,
              "as-schema": false,
              "comment": "Full-date and time",
              "for-types": [
                "string"
              ],
              "for-undefined": false,
              "synonym": []
            }
          },
          "type": {
            "null": {
              "allow-types": [
                "null"
              ],
              "as-container": false,
              "as-schema": false,
              "comment": "Null type",
              "for-types": [
                "null"
              ],
              "for-undefined": false,
              "synonym": []
            }
          },
          "validation": {
            "type": {
              "allow-types": [
                "string",
                "array"
              ],
              "as-container": false,
              "as-schema": false,
              "comment": "Type of the instance",
              "for-types": [
                "object",
                "array"
              ],
              "for-undefined": false,
              "synonym": []
            }
          }
        },
        "vocabularies": {
          "core": [
            "$ref",
            "$schema"
          ],
          "format": [
            "date-time",
            "date"
          ],
          "implementation": [
            "allowUndefinedTypes"
          ],
          "metadata": [
            "definitions",
            "title"
          ],
          "type": [
            "null",
            "boolean"
          ],
          "validation": [
            "type",
            "disallow"
          ]
        }
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "metadata": {
          "core": {
            "$ref": {
              "allow-types": [
                "string",
                "object"
              ],
              "as-container": true,
              "as-schema": true,
              "comment": "Reference to another schema",
              "for-types": [
                "object"
              ],
              "for-undefined": true,
              "synonym": [
                "$schema"
              ]
            },
            "$schema": {
              "allow-types": [
                "string",
                "object"
              ],
              "as-container": true,
              "as-schema": true,
              "comment": "Schema identifier",
              "for-types": [
                "object"
              ],
              "for-undefined": true,
              "synonym": [
                "$ref"
              ]
            }
          },
          "format": {
            "date-time": {
              "allow-types": [
                "string"
              ],
              "as-container": false,
              "as-schema": false,
              "comment": "Full-date and time",
              "for-types": [
                "string"
              ],
              "for-undefined": false,
              "synonym": []
            },
            "date": {
              "allow-types": [
                "string"
              ],
              "as-container": false,
              "as-schema": false,
              "comment": "Full-date",
              "for-types": [
                "string"
              ],
              "for-undefined": false,
              "synonym": []
            }
          },
          "type": {
            "null": {
              "allow-types": [
                "null"
              ],
              "as-container": false,
              "as-schema": false,
              "comment": "Null type",
              "for-types": [
                "null"
              ],
              "for-undefined": false,
              "synonym": []
            },
            "boolean": {
              "allow-types": [
                "boolean"
              ],
              "as-container": false,
              "as-schema": false,
              "comment": "Boolean type",
              "for-types": [
                "boolean"
              ],
              "for-undefined": false,
              "synonym": []
            }
          },
          "validation": {
            "type": {
              "allow-types": [
                "string",
                "array"
              ],
              "as-container": false,
              "as-schema": false,
              "comment": "Type of the instance",
              "for-types": [
                "object",
                "array"
              ],
              "for-undefined": false,
              "synonym": []
            },
            "required": {
              "allow-types": [
                "array"
              ],
              "as-container": false,
              "as-schema": false,
              "comment": "Required properties",
              "for-types": [
                "object"
              ],
              "for-undefined": false,
              "synonym": []
            }
          }
        },
        "vocabularies": {
          "core": [
            "$ref",
            "$schema",
            "$id",
            "id"
          ],
          "format": [
            "date-time",
            "date",
            "time",
            "utc-millisec",
            "regex",
            "color",
            "style",
            "phone",
            "uri",
            "uriref",
            "uri-reference",
            "uri-template",
            "json-pointer",
            "email",
            "ip-address",
            "ipv4",
            "ipv6",
            "host-name",
            "hostname"
          ],
          "type": [
            "null",
            "boolean",
            "string",
            "number",
            "integer",
            "object",
            "array",
            "any"
          ],
          "validation": [
            "disallow",
            "extends",
            "divisibleBy",
            "multipleOf",
            "minimum",
            "maximum",
            "exclusiveMinimum",
            "exclusiveMaximum",
            "minLength",
            "maxLength",
            "pattern",
            "items",
            "additionalItems",
            "minItems",
            "maxItems",
            "_uniqueItems",
            "contains",
            "properties",
            "patternProperties",
            "additionalProperties",
            "minProperties",
            "maxProperties",
            "required",
            "dependencies",
            "propertyNames",
            "type",
            "const",
            "enum",
            "allOf",
            "anyOf",
            "oneOf",
            "not",
            "format"
          ]
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on propertyNames keyword",
      "valid": false,
      "rust_error": "\"unknown\" is not one of [\"$ref\",\"$schema\",\"$id\",\"id\"]",
      "python_error": "'unknown' is not one of ['$ref', '$schema', '$id', 'id']\n\nFailed validating 'enum' in schema['properties']['metadata']['properties']['core']['propertyNames']:\n    {'enum': ['$ref', '$schema', '$id', 'id'], 'type': 'string'}\n\nOn instance['metadata']['core']:\n    'unknown'",
      "data": {
        "metadata": {
          "core": {
            "$ref": {
              "allow-types": [
                "string",
                "object"
              ],
              "as-container": true,
              "as-schema": true,
              "comment": "Reference to another schema",
              "for-types": [
                "object"
              ],
              "for-undefined": true,
              "synonym": [
                "$schema"
              ]
            },
            "$schema": {
              "allow-types": [
                "string",
                "object"
              ],
              "as-container": true,
              "as-schema": true,
              "comment": "Schema identifier",
              "for-types": [
                "object"
              ],
              "for-undefined": true,
              "synonym": [
                "$ref"
              ]
            },
            "unknown": {}
          }
        },
        "vocabularies": {
          "core": [
            "$ref",
            "$schema",
            "$id",
            "id"
          ],
          "format": [
            "date-time",
            "date",
            "time",
            "utc-millisec",
            "regex",
            "color",
            "style",
            "phone",
            "uri",
            "uriref",
            "uri-reference",
            "uri-template",
            "json-pointer",
            "email",
            "ip-address",
            "ipv4",
            "ipv6",
            "host-name",
            "hostname"
          ],
          "type": [
            "null",
            "boolean",
            "string",
            "number",
            "integer",
            "object",
            "array",
            "any"
          ],
          "validation": [
            "disallow",
            "extends",
            "divisibleBy",
            "multipleOf",
            "minimum",
            "maximum",
            "exclusiveMinimum",
            "exclusiveMaximum",
            "minLength",
            "maxLength",
            "pattern",
            "items",
            "additionalItems",
            "minItems",
            "maxItems",
            "_uniqueItems",
            "contains",
            "properties",
            "patternProperties",
            "additionalProperties",
            "minProperties",
            "maxProperties",
            "required",
            "dependencies",
            "propertyNames",
            "type",
            "const",
            "enum",
            "allOf",
            "anyOf",
            "oneOf",
            "not",
            "format"
          ]
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on additionalProperties keyword with an object schema",
      "valid": false,
      "rust_error": "Additional properties are not allowed ('unsupported-key' was unexpected)",
      "python_error": "Additional properties are not allowed ('unsupported-key' was unexpected)\n\nFailed validating 'additionalProperties' in schema['properties']['metadata']['properties']['core']['additionalProperties']:\n    {'additionalProperties': False,\n     'properties': {'allow-types': {'default': ['null',\n                                                'boolean',\n                                                'string',\n                                                'number',\n                                                'integer',\n                                                'object',\n                                                'array',\n                                                'any'],\n                                    'description': 'allowed types for this '\n                                                   'keyword',\n                                    'items': {'$ref': '#/properties/vocabularies/properties/type/items'},\n                                    'type': 'array'},\n                    'as-contai.. (2784 more)",
      "data": {
        "metadata": {
          "core": {
            "$ref": {
              "allow-types": [
                "string",
                "object"
              ],
              "as-container": true,
              "as-schema": true,
              "comment": "Reference to another schema",
              "for-types": [
                "object"
              ],
              "for-undefined": true,
              "synonym": [
                "$schema"
              ],
              "unsupported-key": "value"
            },
            "$schema": {
              "allow-types": [
                "string",
                "object"
              ],
              "as-container": true,
              "as-schema": true,
              "comment": "Schema identifier",
              "for-types": [
                "object"
              ],
              "for-undefined": true,
              "synonym": [
                "$ref"
              ]
            }
          },
          "format": {
            "date-time": {
              "allow-types": [
                "string"
              ],
              "as-container": false,
              "as-schema": false,
              "comment": "Full-date and time",
              "for-types": [
                "string"
              ],
              "for-undefined": false,
              "synonym": []
            },
            "date": {
              "allow-types": [
                "string"
              ],
              "as-container": false,
              "as-schema": false,
              "comment": "Full-date",
              "for-types": [
                "string"
              ],
              "for-undefined": false,
              "synonym": []
            }
          },
          "type": {
            "null": {
              "allow-types": [
                "null"
              ],
              "as-container": false,
              "as-schema": false,
              "comment": "Null type",
              "for-types": [
                "null"
              ],
              "for-undefined": false,
              "synonym": []
            },
            "boolean": {
              "allow-types": [
                "boolean"
              ],
              "as-container": false,
              "as-schema": false,
              "comment": "Boolean type",
              "for-types": [
                "boolean"
              ],
              "for-undefined": false,
              "synonym": []
            }
          },
          "validation": {
            "type": {
              "allow-types": [
                "string",
                "array"
              ],
              "as-container": false,
              "as-schema": false,
              "comment": "Type of the instance",
              "for-types": [
                "object",
                "array"
              ],
              "for-undefined": false,
              "synonym": []
            },
            "required": {
              "allow-types": [
                "array"
              ],
              "as-container": false,
              "as-schema": false,
              "comment": "Required properties",
              "for-types": [
                "object"
              ],
              "for-undefined": false,
              "synonym": []
            }
          }
        },
        "vocabularies": {
          "core": [
            "$ref",
            "$schema",
            "$id",
            "id"
          ],
          "format": [
            "date-time",
            "date",
            "time",
            "utc-millisec",
            "regex",
            "color",
            "style",
            "phone",
            "uri",
            "uriref",
            "uri-reference",
            "uri-template",
            "json-pointer",
            "email",
            "ip-address",
            "ipv4",
            "ipv6",
            "host-name",
            "hostname"
          ],
          "type": [
            "null",
            "boolean",
            "string",
            "number",
            "integer",
            "object",
            "array",
            "any"
          ],
          "validation": [
            "disallow",
            "extends",
            "divisibleBy",
            "multipleOf",
            "minimum",
            "maximum",
            "exclusiveMinimum",
            "exclusiveMaximum",
            "minLength",
            "maxLength",
            "pattern",
            "items",
            "additionalItems",
            "minItems",
            "maxItems",
            "_uniqueItems",
            "contains",
            "properties",
            "patternProperties",
            "additionalProperties",
            "minProperties",
            "maxProperties",
            "required",
            "dependencies",
            "propertyNames",
            "type",
            "const",
            "enum",
            "allOf",
            "anyOf",
            "oneOf",
            "not",
            "format"
          ]
        }
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"unknown\" is not one of [\"null\",\"boolean\",\"string\",\"number\",\"integer\",\"object\",\"array\",\"any\"]",
      "python_error": "'unknown' is not one of ['disallow', 'extends', 'divisibleBy', 'multipleOf', 'minimum', 'maximum', 'exclusiveMinimum', 'exclusiveMaximum', 'minLength', 'maxLength', 'pattern', 'items', 'additionalItems', 'minItems', 'maxItems', '_uniqueItems', 'contains', 'properties', 'patternProperties', 'additionalProperties', 'minProperties', 'maxProperties', 'required', 'dependencies', 'propertyNames', 'type', 'const', 'enum', 'allOf', 'anyOf', 'oneOf', 'not', 'format']\n\nFailed validating 'enum' in schema['properties']['vocabularies']['properties']['validation']['items']:\n    {'enum': ['disallow',\n              'extends',\n              'divisibleBy',\n              'multipleOf',\n              'minimum',\n              'maximum',\n              'exclusiveMinimum',\n              'exclusiveMaximum',\n              'minLength',\n              'maxLength',\n              'pattern',\n              'items',\n              'additionalItems',\n              'minItems',\n              'maxItems',\n              '_uniqueItems',\n              .. (528 more)",
      "data": {
        "metadata": {
          "core": {
            "$ref": {
              "allow-types": [
                "unknown"
              ],
              "as-container": true,
              "as-schema": true,
              "comment": "Reference to another schema",
              "for-types": [
                "object"
              ],
              "for-undefined": true,
              "synonym": [
                "$schema"
              ]
            },
            "$schema": {
              "allow-types": [
                "string",
                "object"
              ],
              "as-container": true,
              "as-schema": true,
              "comment": "Schema identifier",
              "for-types": [
                "object"
              ],
              "for-undefined": true,
              "synonym": [
                "$ref"
              ]
            }
          },
          "format": {
            "date-time": {
              "allow-types": [
                "string"
              ],
              "as-container": false,
              "as-schema": false,
              "comment": "Full-date and time",
              "for-types": [
                "string"
              ],
              "for-undefined": false,
              "synonym": []
            },
            "date": {
              "allow-types": [
                "string"
              ],
              "as-container": false,
              "as-schema": false,
              "comment": "Full-date",
              "for-types": [
                "string"
              ],
              "for-undefined": false,
              "synonym": []
            }
          },
          "type": {
            "null": {
              "allow-types": [
                "null"
              ],
              "as-container": false,
              "as-schema": false,
              "comment": "Null type",
              "for-types": [
                "null"
              ],
              "for-undefined": false,
              "synonym": []
            },
            "boolean": {
              "allow-types": [
                "boolean"
              ],
              "as-container": false,
              "as-schema": false,
              "comment": "Boolean type",
              "for-types": [
                "boolean"
              ],
              "for-undefined": false,
              "synonym": []
            }
          },
          "validation": {
            "type": {
              "allow-types": [
                "string",
                "array"
              ],
              "as-container": false,
              "as-schema": false,
              "comment": "Type of the instance",
              "for-types": [
                "object",
                "array"
              ],
              "for-undefined": false,
              "synonym": []
            },
            "required": {
              "allow-types": [
                "array"
              ],
              "as-container": false,
              "as-schema": false,
              "comment": "Required properties",
              "for-types": [
                "object"
              ],
              "for-undefined": false,
              "synonym": []
            }
          }
        },
        "vocabularies": {
          "core": [
            "$ref",
            "$schema",
            "$id",
            "id",
            "unknown"
          ],
          "format": [
            "date-time",
            "date",
            "time",
            "utc-millisec",
            "regex",
            "color",
            "style",
            "phone",
            "uri",
            "uriref",
            "uri-reference",
            "uri-template",
            "json-pointer",
            "email",
            "ip-address",
            "ipv4",
            "ipv6",
            "host-name",
            "hostname"
          ],
          "type": [
            "null",
            "boolean",
            "string",
            "number",
            "integer",
            "object",
            "array",
            "any",
            "unknown"
          ],
          "validation": [
            "disallow",
            "extends",
            "divisibleBy",
            "multipleOf",
            "minimum",
            "maximum",
            "exclusiveMinimum",
            "exclusiveMaximum",
            "minLength",
            "maxLength",
            "pattern",
            "items",
            "additionalItems",
            "minItems",
            "maxItems",
            "_uniqueItems",
            "contains",
            "properties",
            "patternProperties",
            "additionalProperties",
            "minProperties",
            "maxProperties",
            "required",
            "dependencies",
            "propertyNames",
            "type",
            "const",
            "enum",
            "allOf",
            "anyOf",
            "oneOf",
            "not",
            "format",
            "unknown"
          ]
        }
      }
    }
  ]
}