{
  "description": "sample Github_medium/o90224.json",
  "meta": {
    "full_size": 3005,
    "stripped_size": 763,
    "features": [
      "@minmaxNumber",
      "@siblingKeys",
      "additionalProperties",
      "anyOf",
      "enum",
      "items",
      "pattern"
    ],
    "raw_features": [
      "$schema",
      "_boolSchema",
      "maximum",
      "minimum",
      "properties",
      "required",
      "type",
      "type:array",
      "type:boolean",
      "type:integer",
      "type:number",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-04/schema",
    "additionalProperties": false,
    "anyOf": [
      {
        "required": [
          "id",
          "layerType",
          "title",
          "url"
        ]
      },
      {
        "required": [
          "id",
          "layerType",
          "path",
          "title"
        ]
      }
    ],
    "description": "Keyhole Markup Language (KML) is an XML-based format for storing geographic data and associated content and is an official Open Geospatial Consortium (OGC) standard. KML is a common format for sharing geographic data with non-GIS users as it can be easily delivered on the Internet.",
    "esriDocumentation": {
      "examples": [
        {
          "code": {
            "operationalLayers": [
              {
                "id": "87a5bcad920440f293a36ff3fea1a4f8",
                "layerType": "KML",
                "path": "file:../commondata/kml/paris.kml",
                "title": "Paris",
                "visibility": true
              }
            ]
          },
          "title": "KML Layer"
        }
      ]
    },
    "properties": {
      "id": {
        "description": "A unique identifying string for the layer.",
        "type": "string"
      },
      "itemId": {
        "description": "A string containing the item ID of the service if it's registered on ArcGIS Online or your organization's portal.",
        "type": "string"
      },
      "layerType": {
        "description": "String indicating the layer type.",
        "enum": [
          "KML"
        ],
        "type": "string"
      },
      "listMode": {
        "description": "To show or hide the sublayer in the layer list.",
        "enum": [
          "hide",
          "show"
        ],
        "type": "string"
      },
      "maxScale": {
        "description": "A number representing the maximum scale at which the layer will be visible. The number is the scale's denominator.",
        "minimum": 0,
        "type": "number"
      },
      "minScale": {
        "description": "A number representing the minimum scale at which the layer will be visible. The number is the scale's denominator.",
        "minimum": 0,
        "type": "number"
      },
      "opacity": {
        "default": 1,
        "description": "The degree of transparency applied to the layer on the client side, where 0 is full transparency and 1 is no transparency.",
        "maximum": 1,
        "minimum": 0,
        "type": "number"
      },
      "path": {
        "description": "For offline data, a path to a KML file. A URI format is used, starting with `file:` followed by a file system path with an extension of `.kml` or `.kmz`.  A relative path must be from the file which defines the layer. For example `file:../commondata/kml/paris.kml`.",
        "pattern": "^file:.+\\.km[lz]$",
        "type": "string"
      },
      "refreshInterval": {
        "description": "Refresh interval of the layer in minutes. Non-zero value indicates automatic layer refresh at the specified interval. Value of 0 indicates auto refresh is not enabled.",
        "type": "number"
      },
      "showLegend": {
        "default": true,
        "description": "Indicates whether to allow scene authors the ability to control what layers should be shown in a client's legend.",
        "type": "boolean"
      },
      "title": {
        "description": "A user-friendly string title for the layer that can be used in a table of contents.",
        "type": "string"
      },
      "url": {
        "_format": "uri",
        "description": "The URL to the layer.",
        "type": "string"
      },
      "visibility": {
        "default": true,
        "description": "Boolean property determining whether the layer is initially visible in the web scene.",
        "type": "boolean"
      },
      "visibleFolders": {
        "description": "Array of numeric IDs of folders that will be made visible.",
        "items": {
          "type": "integer"
        },
        "type": "array",
        "_uniqueItems": true
      }
    },
    "title": "KML Layer (KML)",
    "type": "object"
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "id": "layer1",
        "layerType": "KML",
        "title": "Example Layer",
        "url": "https://example.com/layer.kml"
      }
    },
    {
      "description": "llama-70b generated negative; focus on pattern keyword",
      "valid": false,
      "rust_error": "\"file:example.km\" does not match \"^file:.+\\.km[lz]$\"",
      "python_error": "'file:example.km' does not match '^file:.+\\\\.km[lz]$'\n\nFailed validating 'pattern' in schema['properties']['path']:\n    {'description': 'For offline data, a path to a KML file. A URI format '\n                    'is used, starting with `file:` followed by a file '\n                    'system path with an extension of `.kml` or `.kmz`.  A '\n                    'relative path must be from the file which defines the '\n                    'layer. For example '\n                    '`file:../commondata/kml/paris.kml`.',\n     'pattern': '^file:.+\\\\.km[lz]$',\n     'type': 'string'}\n\nOn instance['path']:\n    'file:example.km'",
      "data": {
        "id": "layer1",
        "layerType": "KML",
        "path": "file:example.km",
        "title": "Example Layer"
      }
    },
    {
      "description": "llama-70b generated negative; focus on minimum keyword or maximum keyword",
      "valid": false,
      "rust_error": "-1 is less than the minimum of 0",
      "python_error": "-1 is less than the minimum of 0\n\nFailed validating 'minimum' in schema['properties']['opacity']:\n    {'default': 1,\n     'description': 'The degree of transparency applied to the layer on '\n                    'the client side, where 0 is full transparency and 1 '\n                    'is no transparency.',\n     'maximum': 1,\n     'minimum': 0,\n     'type': 'number'}\n\nOn instance['opacity']:\n    -1",
      "data": {
        "id": "layer1",
        "layerType": "KML",
        "opacity": -1,
        "title": "Example Layer",
        "url": "https://example.com/layer.kml"
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "Additional properties are not allowed ('extraProperty' was unexpected)",
      "python_error": "Additional properties are not allowed ('extraProperty' was unexpected)\n\nFailed validating 'additionalProperties' in schema:\n    {'$schema': 'http://json-schema.org/draft-04/schema',\n     'additionalProperties': False,\n     'anyOf': [{'required': ['id', 'layerType', 'title', 'url']},\n               {'required': ['id', 'layerType', 'path', 'title']}],\n     'description': 'Keyhole Markup Language (KML) is an XML-based format '\n                    'for storing geographic data and associated content '\n                    'and is an official Open Geospatial Consortium (OGC) '\n                    'standard. KML is a common format for sharing '\n                    'geographic data with non-GIS users as it can be '\n                    'easily delivered on the Internet.',\n     'esriDocumentation': {'examples': [{'code': {'operationalLayers': [{'id': '87a5bcad920440f293a36ff3fea1a4f8',\n                                                                         'layerType': 'KML',\n                                           .. (6764 more)",
      "data": {
        "id": "layer1",
        "layerType": "KML",
        "title": "Example Layer",
        "url": "https://example.com/layer.kmz",
        "extraProperty": "extraValue"
      }
    },
    {
      "description": "llama-70b generated negative; focus on minimum keyword or maximum keyword",
      "valid": false,
      "rust_error": "-1 is less than the minimum of 0",
      "python_error": "-1 is less than the minimum of 0\n\nFailed validating 'minimum' in schema['properties']['minScale']:\n    {'description': 'A number representing the minimum scale at which the '\n                    \"layer will be visible. The number is the scale's \"\n                    'denominator.',\n     'minimum': 0,\n     'type': 'number'}\n\nOn instance['minScale']:\n    -1",
      "data": {
        "id": "layer1",
        "layerType": "KML",
        "minScale": -1,
        "title": "Example Layer",
        "url": "https://example.com/layer.kml"
      }
    },
    {
      "description": "llama-70b generated negative; focus on pattern keyword",
      "valid": false,
      "rust_error": "\"file:../commondata/kml/paris.kmlx\" does not match \"^file:.+\\.km[lz]$\"",
      "python_error": "'file:../commondata/kml/paris.kmlx' does not match '^file:.+\\\\.km[lz]$'\n\nFailed validating 'pattern' in schema['properties']['path']:\n    {'description': 'For offline data, a path to a KML file. A URI format '\n                    'is used, starting with `file:` followed by a file '\n                    'system path with an extension of `.kml` or `.kmz`.  A '\n                    'relative path must be from the file which defines the '\n                    'layer. For example '\n                    '`file:../commondata/kml/paris.kml`.',\n     'pattern': '^file:.+\\\\.km[lz]$',\n     'type': 'string'}\n\nOn instance['path']:\n    'file:../commondata/kml/paris.kmlx'",
      "data": {
        "id": "layer1",
        "layerType": "KML",
        "path": "file:../commondata/kml/paris.kmlx",
        "title": "Example Layer"
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "id": "layer-1",
        "layerType": "KML",
        "title": "Example KML Layer",
        "url": "https://example.com/kml-layer.kml"
      }
    },
    {
      "description": "llama-70b generated negative; focus on anyOf keyword",
      "valid": false,
      "rust_error": "\"file:../commondata/kml/paris.kmlz\" does not match \"^file:.+\\.km[lz]$\"",
      "python_error": "'file:../commondata/kml/paris.kmlz' does not match '^file:.+\\\\.km[lz]$'\n\nFailed validating 'pattern' in schema['properties']['path']:\n    {'description': 'For offline data, a path to a KML file. A URI format '\n                    'is used, starting with `file:` followed by a file '\n                    'system path with an extension of `.kml` or `.kmz`.  A '\n                    'relative path must be from the file which defines the '\n                    'layer. For example '\n                    '`file:../commondata/kml/paris.kml`.',\n     'pattern': '^file:.+\\\\.km[lz]$',\n     'type': 'string'}\n\nOn instance['path']:\n    'file:../commondata/kml/paris.kmlz'",
      "data": {
        "id": "layer-1",
        "layerType": "KML",
        "path": "file:../commondata/kml/paris.kmlz",
        "title": "Example KML Layer",
        "url": "https://example.com/kml-layer.kml"
      }
    },
    {
      "description": "llama-70b generated negative; focus on pattern keyword",
      "valid": false,
      "rust_error": "\"file:invalid-file-path.txt\" does not match \"^file:.+\\.km[lz]$\"",
      "python_error": "'file:invalid-file-path.txt' does not match '^file:.+\\\\.km[lz]$'\n\nFailed validating 'pattern' in schema['properties']['path']:\n    {'description': 'For offline data, a path to a KML file. A URI format '\n                    'is used, starting with `file:` followed by a file '\n                    'system path with an extension of `.kml` or `.kmz`.  A '\n                    'relative path must be from the file which defines the '\n                    'layer. For example '\n                    '`file:../commondata/kml/paris.kml`.',\n     'pattern': '^file:.+\\\\.km[lz]$',\n     'type': 'string'}\n\nOn instance['path']:\n    'file:invalid-file-path.txt'",
      "data": {
        "id": "layer-1",
        "layerType": "KML",
        "path": "file:invalid-file-path.txt",
        "title": "Example KML Layer"
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "Additional properties are not allowed ('invalidKey' was unexpected)",
      "python_error": "Additional properties are not allowed ('invalidKey' was unexpected)\n\nFailed validating 'additionalProperties' in schema:\n    {'$schema': 'http://json-schema.org/draft-04/schema',\n     'additionalProperties': False,\n     'anyOf': [{'required': ['id', 'layerType', 'title', 'url']},\n               {'required': ['id', 'layerType', 'path', 'title']}],\n     'description': 'Keyhole Markup Language (KML) is an XML-based format '\n                    'for storing geographic data and associated content '\n                    'and is an official Open Geospatial Consortium (OGC) '\n                    'standard. KML is a common format for sharing '\n                    'geographic data with non-GIS users as it can be '\n                    'easily delivered on the Internet.',\n     'esriDocumentation': {'examples': [{'code': {'operationalLayers': [{'id': '87a5bcad920440f293a36ff3fea1a4f8',\n                                                                         'layerType': 'KML',\n                                              .. (6748 more)",
      "data": {
        "id": "layer-1",
        "layerType": "KML",
        "title": "Example KML Layer",
        "url": "invalid-url",
        "invalidKey": "Invalid Value"
      }
    }
  ]
}