{
  "description": "sample JsonSchemaStore/adonisrc.schema.json",
  "meta": {
    "full_size": 2478,
    "stripped_size": 2312,
    "features": [
      "@siblingKeys",
      "additionalProperties",
      "additionalProperties:object",
      "enum",
      "items",
      "oneOf",
      "patternProperties",
      "uniqueItems"
    ],
    "raw_features": [
      "$schema",
      "_boolSchema",
      "properties",
      "required",
      "type",
      "type:array",
      "type:boolean",
      "type:number",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "type": "object",
    "properties": {
      "typescript": {
        "description": "Is project written in Typescript or not",
        "type": "boolean"
      },
      "exceptionHandlerNamespace": {
        "description": "Http server exception handler namespace",
        "type": "string"
      },
      "assetsDriver": {
        "description": "The driver to use for assets bundling",
        "type": "string",
        "enum": [
          "encore",
          "vite",
          "fake"
        ]
      },
      "preloads": {
        "type": "array",
        "uniqueItems": true,
        "items": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "object",
              "properties": {
                "file": {
                  "type": "string"
                },
                "environment": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "web",
                      "console",
                      "test",
                      "repl"
                    ]
                  }
                },
                "optional": {
                  "type": "boolean"
                }
              },
              "required": [
                "file"
              ],
              "additionalProperties": false
            }
          ]
        }
      },
      "metaFiles": {
        "type": "array",
        "items": {
          "uniqueItems": true,
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "object",
              "properties": {
                "pattern": {
                  "type": "string"
                },
                "reloadServer": {
                  "type": "boolean"
                }
              },
              "required": [
                "pattern"
              ]
            }
          ]
        }
      },
      "commands": {
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      "providers": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "uniqueItems": true
      },
      "aceProviders": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "uniqueItems": true
      },
      "testProviders": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "uniqueItems": true
      },
      "directories": {
        "type": "object",
        "properties": {
          "config": {
            "type": "string"
          },
          "public": {
            "type": "string"
          },
          "contracts": {
            "type": "string"
          },
          "providers": {
            "type": "string"
          },
          "database": {
            "type": "string"
          },
          "migrations": {
            "type": "string"
          },
          "seeds": {
            "type": "string"
          },
          "resources": {
            "type": "string"
          },
          "views": {
            "type": "string"
          },
          "start": {
            "type": "string"
          },
          "tmp": {
            "type": "string"
          },
          "tests": {
            "type": "string"
          }
        },
        "additionalProperties": {
          "type": "string"
        }
      },
      "commandsAliases": {
        "type": "object",
        "patternProperties": {
          "^.*$": {
            "type": "string"
          }
        }
      },
      "aliases": {
        "type": "object",
        "patternProperties": {
          "^.*$": {
            "type": "string"
          }
        }
      },
      "namespaces": {
        "type": "object",
        "properties": {
          "models": {
            "type": "string"
          },
          "exceptions": {
            "type": "string"
          },
          "middleware": {
            "type": "string"
          },
          "httpControllers": {
            "type": "string"
          },
          "eventListeners": {
            "type": "string"
          },
          "redisListeners": {
            "type": "string"
          },
          "validators": {
            "type": "string"
          }
        },
        "additionalProperties": {
          "type": "string"
        }
      },
      "tests": {
        "type": "object",
        "properties": {
          "suites": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "files": {
                  "oneOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  ]
                },
                "timeout": {
                  "type": "number"
                }
              },
              "required": [
                "name",
                "files"
              ]
            }
          },
          "timeout": {
            "type": "number"
          },
          "forceExit": {
            "type": "boolean"
          }
        },
        "required": [
          "suites"
        ]
      }
    },
    "required": [
      "typescript",
      "providers"
    ]
  },
  "tests": [
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "typescript": true,
        "exceptionHandlerNamespace": "App\\Exceptions",
        "assetsDriver": "encore",
        "preloads": [
          "preloads/file1.js",
          {
            "file": "preloads/file2.js",
            "environment": [
              "web",
              "console"
            ],
            "optional": false
          }
        ],
        "metaFiles": [
          "meta/file1.js",
          {
            "pattern": "meta/file2.js",
            "reloadServer": true
          }
        ],
        "commands": [
          "command1",
          "command2"
        ],
        "providers": [
          "Provider1",
          "Provider2"
        ],
        "aceProviders": [
          "AceProvider1",
          "AceProvider2"
        ],
        "testProviders": [
          "TestProvider1",
          "TestProvider2"
        ],
        "directories": {
          "config": "config",
          "public": "public",
          "contracts": "contracts",
          "providers": "providers",
          "database": "database",
          "migrations": "migrations",
          "seeds": "seeds",
          "resources": "resources",
          "views": "views",
          "start": "start",
          "tmp": "tmp",
          "tests": "tests",
          "customDirectory": "customDirectory"
        },
        "commandsAliases": {
          "command1": "alias1",
          "command2": "alias2"
        },
        "aliases": {
          "alias1": "path1",
          "alias2": "path2"
        },
        "namespaces": {
          "models": "App\\Models",
          "exceptions": "App\\Exceptions",
          "middleware": "App\\Middleware",
          "httpControllers": "App\\Http\\Controllers",
          "eventListeners": "App\\Listeners",
          "redisListeners": "App\\Listeners\\Redis",
          "validators": "App\\Validators",
          "customNamespace": "App\\CustomNamespace"
        },
        "tests": {
          "suites": [
            {
              "name": "TestSuite1",
              "files": "tests/test1.js",
              "timeout": 1000
            },
            {
              "name": "TestSuite2",
              "files": [
                "tests/test2.js",
                "tests/test3.js"
              ],
              "timeout": 2000
            }
          ],
          "timeout": 5000,
          "forceExit": true
        }
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "typescript": true,
        "exceptionHandlerNamespace": "App\\Exceptions",
        "assetsDriver": "encore",
        "preloads": [
          "preload.js",
          {
            "file": "preload.ts",
            "environment": [
              "web",
              "console"
            ],
            "optional": false
          }
        ],
        "metaFiles": [
          "meta.json",
          {
            "pattern": "meta/*.json",
            "reloadServer": true
          }
        ],
        "commands": [
          "start",
          "stop"
        ],
        "providers": [
          "App\\Providers\\AppServiceProvider",
          "App\\Providers\\EventServiceProvider"
        ],
        "aceProviders": [
          "App\\Providers\\AceServiceProvider"
        ],
        "testProviders": [
          "App\\Providers\\TestServiceProvider"
        ],
        "directories": {
          "config": "config",
          "public": "public",
          "contracts": "app/Contracts",
          "providers": "app/Providers",
          "database": "database",
          "migrations": "database/migrations",
          "seeds": "database/seeds",
          "resources": "resources",
          "views": "resources/views",
          "start": "start",
          "tmp": "tmp",
          "tests": "tests",
          "custom": "custom"
        },
        "commandsAliases": {
          "start": "start:server",
          "stop": "stop:server"
        },
        "aliases": {
          "App": "app",
          "Config": "config"
        },
        "namespaces": {
          "models": "App\\Models",
          "exceptions": "App\\Exceptions",
          "middleware": "App\\Http\\Middleware",
          "httpControllers": "App\\Http\\Controllers",
          "eventListeners": "App\\Listeners",
          "redisListeners": "App\\Listeners\\Redis",
          "validators": "App\\Validators",
          "custom": "App\\Custom"
        },
        "tests": {
          "suites": [
            {
              "name": "unit",
              "files": "tests/Unit/*.test.ts",
              "timeout": 10000
            },
            {
              "name": "integration",
              "files": [
                "tests/Integration/*.test.ts",
                "tests/Integration/Api/*.test.ts"
              ],
              "timeout": 20000
            }
          ],
          "timeout": 30000,
          "forceExit": true
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on patternProperties keyword",
      "valid": false,
      "rust_error": "123 is not of type \"string\"",
      "python_error": "123 is not of type 'string'\n\nFailed validating 'type' in schema['properties']['namespaces']['additionalProperties']:\n    {'type': 'string'}\n\nOn instance['namespaces']['123']:\n    123",
      "data": {
        "typescript": true,
        "exceptionHandlerNamespace": "App\\Exceptions",
        "assetsDriver": "encore",
        "preloads": [
          "preload.js",
          {
            "file": "preload.ts",
            "environment": [
              "web",
              "console"
            ],
            "optional": false
          }
        ],
        "metaFiles": [
          "meta.json",
          {
            "pattern": "meta/*.json",
            "reloadServer": true
          }
        ],
        "commands": [
          "start",
          "stop"
        ],
        "providers": [
          "App\\Providers\\AppServiceProvider",
          "App\\Providers\\EventServiceProvider"
        ],
        "aceProviders": [
          "App\\Providers\\AceServiceProvider"
        ],
        "testProviders": [
          "App\\Providers\\TestServiceProvider"
        ],
        "directories": {
          "config": "config",
          "public": "public",
          "contracts": "app/Contracts",
          "providers": "app/Providers",
          "database": "database",
          "migrations": "database/migrations",
          "seeds": "database/seeds",
          "resources": "resources",
          "views": "resources/views",
          "start": "start",
          "tmp": "tmp",
          "tests": "tests",
          "custom": 123
        },
        "commandsAliases": {
          "start": "start:server",
          "stop": "stop:server",
          "123": "hello"
        },
        "aliases": {
          "App": "app",
          "Config": "config",
          "123": 123
        },
        "namespaces": {
          "models": "App\\Models",
          "exceptions": "App\\Exceptions",
          "middleware": "App\\Http\\Middleware",
          "httpControllers": "App\\Http\\Controllers",
          "eventListeners": "App\\Listeners",
          "redisListeners": "App\\Listeners\\Redis",
          "validators": "App\\Validators",
          "custom": "App\\Custom",
          "123": 123
        },
        "tests": {
          "suites": [
            {
              "name": "unit",
              "files": "tests/Unit/*.test.ts",
              "timeout": 10000
            },
            {
              "name": "integration",
              "files": [
                "tests/Integration/*.test.ts",
                "tests/Integration/Api/*.test.ts"
              ],
              "timeout": 20000
            }
          ],
          "timeout": 30000,
          "forceExit": true
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on additionalProperties keyword with an object schema",
      "valid": false,
      "rust_error": "{\"file\":\"preload.ts\",\"environment\":[\"web\",\"console\"],\"optional\":false,\"additionalProperty\":\"This is an invalid property\"} is not valid under any of the schemas listed in the 'oneOf' keyword",
      "python_error": "Additional properties are not allowed ('additionalProperty' was unexpected)\n\nFailed validating 'additionalProperties' in schema[1]:\n    {'type': 'object',\n     'properties': {'file': {'type': 'string'},\n                    'environment': {'type': 'array',\n                                    'items': {'type': 'string',\n                                              'enum': ['web',\n                                                       'console',\n                                                       'test',\n                                                       'repl']}},\n                    'optional': {'type': 'boolean'}},\n     'required': ['file'],\n     'additionalProperties': False}\n\nOn instance:\n    {'file': 'preload.ts',\n     'environment': ['web', 'console'],\n     'optional': False,\n     'additionalProperty': 'This is an invalid property'}",
      "data": {
        "typescript": true,
        "exceptionHandlerNamespace": "App\\Exceptions",
        "assetsDriver": "encore",
        "preloads": [
          "preload.js",
          {
            "file": "preload.ts",
            "environment": [
              "web",
              "console"
            ],
            "optional": false,
            "additionalProperty": "This is an invalid property"
          }
        ],
        "metaFiles": [
          "meta.json",
          {
            "pattern": "meta/*.json",
            "reloadServer": true
          }
        ],
        "commands": [
          "start",
          "stop"
        ],
        "providers": [
          "App\\Providers\\AppServiceProvider",
          "App\\Providers\\EventServiceProvider"
        ],
        "aceProviders": [
          "App\\Providers\\AceServiceProvider"
        ],
        "testProviders": [
          "App\\Providers\\TestServiceProvider"
        ],
        "directories": {
          "config": "config",
          "public": "public",
          "contracts": "app/Contracts",
          "providers": "app/Providers",
          "database": "database",
          "migrations": "database/migrations",
          "seeds": "database/seeds",
          "resources": "resources",
          "views": "resources/views",
          "start": "start",
          "tmp": "tmp",
          "tests": "tests",
          "custom": "custom"
        },
        "commandsAliases": {
          "start": "start:server",
          "stop": "stop:server"
        },
        "aliases": {
          "App": "app",
          "Config": "config"
        },
        "namespaces": {
          "models": "App\\Models",
          "exceptions": "App\\Exceptions",
          "middleware": "App\\Http\\Middleware",
          "httpControllers": "App\\Http\\Controllers",
          "eventListeners": "App\\Listeners",
          "redisListeners": "App\\Listeners\\Redis",
          "validators": "App\\Validators",
          "custom": "App\\Custom",
          "additionalNamespace": "App\\InvalidNamespace"
        },
        "tests": {
          "suites": [
            {
              "name": "unit",
              "files": "tests/Unit/*.test.ts",
              "timeout": 10000
            },
            {
              "name": "integration",
              "files": [
                "tests/Integration/*.test.ts",
                "tests/Integration/Api/*.test.ts"
              ],
              "timeout": 20000
            }
          ],
          "timeout": 30000,
          "forceExit": true
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on uniqueItems keyword",
      "valid": false,
      "rust_error": "[\"preload.js\",{\"file\":\"preload.ts\",\"environment\":[\"web\",\"console\"],\"optional\":false},\"preload.js\"] has non-unique elements",
      "python_error": "['App\\\\Providers\\\\AppServiceProvider', 'App\\\\Providers\\\\AppServiceProvider'] has non-unique elements\n\nFailed validating 'uniqueItems' in schema['properties']['providers']:\n    {'type': 'array', 'items': {'type': 'string'}, 'uniqueItems': True}\n\nOn instance['providers']:\n    ['App\\\\Providers\\\\AppServiceProvider',\n     'App\\\\Providers\\\\AppServiceProvider']",
      "data": {
        "typescript": true,
        "exceptionHandlerNamespace": "App\\Exceptions",
        "assetsDriver": "encore",
        "preloads": [
          "preload.js",
          {
            "file": "preload.ts",
            "environment": [
              "web",
              "console"
            ],
            "optional": false
          },
          "preload.js"
        ],
        "metaFiles": [
          "meta.json",
          {
            "pattern": "meta/*.json",
            "reloadServer": true
          }
        ],
        "commands": [
          "start",
          "stop"
        ],
        "providers": [
          "App\\Providers\\AppServiceProvider",
          "App\\Providers\\AppServiceProvider"
        ],
        "aceProviders": [
          "App\\Providers\\AceServiceProvider"
        ],
        "testProviders": [
          "App\\Providers\\TestServiceProvider"
        ],
        "directories": {
          "config": "config",
          "public": "public",
          "contracts": "app/Contracts",
          "providers": "app/Providers",
          "database": "database",
          "migrations": "database/migrations",
          "seeds": "database/seeds",
          "resources": "resources",
          "views": "resources/views",
          "start": "start",
          "tmp": "tmp",
          "tests": "tests",
          "custom": "custom"
        },
        "commandsAliases": {
          "start": "start:server",
          "stop": "stop:server"
        },
        "aliases": {
          "App": "app",
          "Config": "config"
        },
        "namespaces": {
          "models": "App\\Models",
          "exceptions": "App\\Exceptions",
          "middleware": "App\\Http\\Middleware",
          "httpControllers": "App\\Http\\Controllers",
          "eventListeners": "App\\Listeners",
          "redisListeners": "App\\Listeners\\Redis",
          "validators": "App\\Validators",
          "custom": "App\\Custom"
        },
        "tests": {
          "suites": [
            {
              "name": "unit",
              "files": "tests/Unit/*.test.ts",
              "timeout": 10000
            },
            {
              "name": "integration",
              "files": [
                "tests/Integration/*.test.ts",
                "tests/Integration/Api/*.test.ts"
              ],
              "timeout": 20000
            }
          ],
          "timeout": 30000,
          "forceExit": true
        }
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "{\"file\":\"preload.ts\",\"environment\":[\"web\",\"console\",\"invalid\"],\"optional\":false} is not valid under any of the schemas listed in the 'oneOf' keyword",
      "python_error": "'invalid' is not one of ['web', 'console', 'test', 'repl']\n\nFailed validating 'enum' in schema[1]['properties']['environment']['items']:\n    {'type': 'string', 'enum': ['web', 'console', 'test', 'repl']}\n\nOn instance['environment'][2]:\n    'invalid'",
      "data": {
        "typescript": true,
        "exceptionHandlerNamespace": "App\\Exceptions",
        "assetsDriver": "encore",
        "preloads": [
          "preload.js",
          {
            "file": "preload.ts",
            "environment": [
              "web",
              "console",
              "invalid"
            ],
            "optional": false
          }
        ],
        "metaFiles": [
          "meta.json",
          {
            "pattern": "meta/*.json",
            "reloadServer": true
          }
        ],
        "commands": [
          "start",
          "stop"
        ],
        "providers": [
          "App\\Providers\\AppServiceProvider",
          "App\\Providers\\EventServiceProvider"
        ],
        "aceProviders": [
          "App\\Providers\\AceServiceProvider"
        ],
        "testProviders": [
          "App\\Providers\\TestServiceProvider"
        ],
        "directories": {
          "config": "config",
          "public": "public",
          "contracts": "app/Contracts",
          "providers": "app/Providers",
          "database": "database",
          "migrations": "database/migrations",
          "seeds": "database/seeds",
          "resources": "resources",
          "views": "resources/views",
          "start": "start",
          "tmp": "tmp",
          "tests": "tests",
          "custom": "custom"
        },
        "commandsAliases": {
          "start": "start:server",
          "stop": "stop:server"
        },
        "aliases": {
          "App": "app",
          "Config": "config"
        },
        "namespaces": {
          "models": "App\\Models",
          "exceptions": "App\\Exceptions",
          "middleware": "App\\Http\\Middleware",
          "httpControllers": "App\\Http\\Controllers",
          "eventListeners": "App\\Listeners",
          "redisListeners": "App\\Listeners\\Redis",
          "validators": "App\\Validators",
          "custom": "App\\Custom"
        },
        "tests": {
          "suites": [
            {
              "name": "unit",
              "files": "tests/Unit/*.test.ts",
              "timeout": 10000
            },
            {
              "name": "integration",
              "files": [
                "tests/Integration/*.test.ts",
                "tests/Integration/Api/*.test.ts"
              ],
              "timeout": 20000
            }
          ],
          "timeout": 30000,
          "forceExit": true
        }
      }
    }
  ]
}