{
  "description": "sample Github_hard/o65892.json",
  "meta": {
    "full_size": 13777,
    "stripped_size": 7510,
    "features": [
      "$ref",
      "additionalProperties",
      "additionalProperties:object",
      "items",
      "oneOf"
    ],
    "raw_features": [
      "$schema",
      "_boolSchema",
      "definitions",
      "properties",
      "required",
      "type",
      "type:array",
      "type:boolean",
      "type:number",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "type": "object",
    "properties": {
      "range": {
        "$ref": "#/definitions/Range"
      },
      "position": {
        "$ref": "#/definitions/Position"
      },
      "location": {
        "$ref": "#/definitions/Location"
      },
      "diagnostic": {
        "$ref": "#/definitions/Diagnostic"
      },
      "DiagnosticSeverity": {
        "$ref": "#/definitions/DiagnosticSeverity"
      },
      "command": {
        "$ref": "#/definitions/Command"
      },
      "textEdit": {
        "$ref": "#/definitions/TextEdit"
      },
      "workspaceEdit": {
        "$ref": "#/definitions/WorkspaceEdit"
      },
      "workspaceChange": {
        "$ref": "#/definitions/WorkspaceChange"
      },
      "textEditChange": {
        "$ref": "#/definitions/TextEditChange"
      },
      "textDocumentIdentifier": {
        "$ref": "#/definitions/TextDocumentIdentifier"
      },
      "completionItemKind": {
        "$ref": "#/definitions/CompletionItemKind"
      },
      "completionItem": {
        "$ref": "#/definitions/CompletionItem"
      },
      "completionList": {
        "$ref": "#/definitions/CompletionList"
      },
      "hover": {
        "$ref": "#/definitions/Hover"
      },
      "markedString": {
        "oneOf": [
          {
            "type": "string"
          },
          {
            "type": "object",
            "properties": {
              "language": {
                "type": "string"
              },
              "value": {
                "type": "string"
              }
            },
            "additionalProperties": false,
            "required": [
              "language",
              "value"
            ]
          }
        ]
      },
      "signatureHelp": {
        "$ref": "#/definitions/SignatureHelp"
      },
      "signatureInformation": {
        "$ref": "#/definitions/SignatureInformation"
      },
      "parameterInformation": {
        "$ref": "#/definitions/ParameterInformation"
      },
      "definition": {
        "oneOf": [
          {
            "$ref": "#/definitions/Location",
            "description": "Represents a location inside a resource, such as a line\n\ninside a text file.\n\nThe Location namespace provides helper functions to work with\n\n[Location](#Location) literals."
          },
          {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Location",
              "description": "Represents a location inside a resource, such as a line\n\ninside a text file.\n\nThe Location namespace provides helper functions to work with\n\n[Location](#Location) literals."
            }
          }
        ]
      },
      "codeActionContext": {
        "$ref": "#/definitions/CodeActionContext"
      },
      "documentHighlight": {
        "$ref": "#/definitions/DocumentHighlight"
      },
      "documentHighlightKind": {
        "$ref": "#/definitions/DocumentHighlightKind"
      },
      "symbolInformation": {
        "$ref": "#/definitions/SymbolInformation"
      },
      "symbolKind": {
        "$ref": "#/definitions/SymbolKind"
      },
      "codeLens": {
        "$ref": "#/definitions/CodeLens"
      },
      "formattingOptions": {
        "$ref": "#/definitions/FormattingOptions"
      }
    },
    "additionalProperties": false,
    "required": [
      "range",
      "position",
      "location",
      "diagnostic",
      "DiagnosticSeverity",
      "command",
      "textEdit",
      "workspaceEdit",
      "workspaceChange",
      "textEditChange",
      "textDocumentIdentifier",
      "completionItemKind",
      "completionItem",
      "completionList",
      "hover",
      "markedString",
      "signatureHelp",
      "signatureInformation",
      "parameterInformation",
      "definition",
      "codeActionContext",
      "documentHighlight",
      "documentHighlightKind",
      "symbolInformation",
      "symbolKind",
      "codeLens",
      "formattingOptions"
    ],
    "definitions": {
      "Range": {
        "type": "object",
        "properties": {
          "start": {
            "$ref": "#/definitions/Position",
            "description": "The range's start position"
          },
          "end": {
            "$ref": "#/definitions/Position",
            "description": "The range's end position"
          }
        },
        "additionalProperties": false,
        "required": [
          "start",
          "end"
        ]
      },
      "Position": {
        "description": "Position in a text document expressed as zero-based line and character offset.\n\nThe Position namespace provides helper functions to work with\n\n[Position](#Position) literals.",
        "type": "object",
        "properties": {
          "line": {
            "description": "Line position in a document (zero-based).",
            "type": "number"
          },
          "character": {
            "description": "Character offset on a line in a document (zero-based).",
            "type": "number"
          }
        },
        "additionalProperties": false,
        "required": [
          "line",
          "character"
        ]
      },
      "Location": {
        "type": "object",
        "properties": {
          "uri": {
            "type": "string"
          },
          "range": {
            "$ref": "#/definitions/Range"
          }
        },
        "additionalProperties": false,
        "required": [
          "uri",
          "range"
        ]
      },
      "Diagnostic": {
        "type": "object",
        "properties": {
          "range": {
            "$ref": "#/definitions/Range",
            "description": "The range at which the message applies"
          },
          "severity": {
            "description": "The diagnostic's severity. Can be omitted. If omitted it is up to the\n\nclient to interpret diagnostics as error, warning, info or hint.",
            "type": "number"
          },
          "code": {
            "description": "The diagnostic's code. Can be omitted.",
            "oneOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ]
          },
          "source": {
            "description": "A human-readable string describing the source of this\n\ndiagnostic, e.g. 'typescript' or 'super lint'.",
            "type": "string"
          },
          "message": {
            "description": "The diagnostic's message.",
            "type": "string"
          }
        },
        "additionalProperties": false,
        "required": [
          "range",
          "message"
        ]
      },
      "DiagnosticSeverity": {
        "type": "string"
      },
      "Command": {
        "type": "object",
        "properties": {
          "title": {
            "description": "Title of the command, like `save`.",
            "type": "string"
          },
          "command": {
            "description": "The identifier of the actual command handler.",
            "type": "string"
          },
          "arguments": {
            "description": "Arguments that the command handler should be\n\ninvoked with.",
            "type": "array",
            "items": {}
          }
        },
        "additionalProperties": false,
        "required": [
          "title",
          "command"
        ]
      },
      "TextEdit": {
        "type": "object",
        "properties": {
          "range": {
            "$ref": "#/definitions/Range",
            "description": "The range of the text document to be manipulated. To insert\n\ntext into a document create a range where start === end."
          },
          "newText": {
            "description": "The string to be inserted. For delete operations use an\n\nempty string.",
            "type": "string"
          }
        },
        "additionalProperties": false,
        "required": [
          "range",
          "newText"
        ]
      },
      "WorkspaceEdit": {
        "type": "object",
        "properties": {
          "changes": {
            "description": "Holds changes to existing resources.",
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TextEdit",
                "description": "A text edit applicable to a text document.\n\nThe TextEdit namespace provides helper function to create replace,\n\ninsert and delete edits more easily."
              }
            }
          }
        },
        "additionalProperties": false,
        "required": [
          "changes"
        ]
      },
      "WorkspaceChange": {
        "type": "object",
        "properties": {
          "workspaceEdit": {},
          "textEditChanges": {},
          "edit": {
            "$ref": "#/definitions/WorkspaceEdit",
            "description": "Returns the underlying [WorkspaceEdit](#WorkspaceEdit) literal\n\nuse to be returned from a workspace edit operation like rename."
          },
          "getTextEditChange": {
            "description": "Returns the [TextEditChange](#TextEditChange) to manage text edits\n\nfor resources.",
            "type": "object",
            "properties": {},
            "additionalProperties": false
          }
        },
        "additionalProperties": false,
        "required": [
          "workspaceEdit",
          "textEditChanges",
          "edit",
          "getTextEditChange"
        ]
      },
      "TextEditChange": {
        "type": "object",
        "properties": {
          "all": {
            "description": "Gets all text edits for this change.",
            "type": "object",
            "properties": {},
            "additionalProperties": false
          },
          "clear": {
            "description": "Clears the edits for this change.",
            "type": "object",
            "properties": {},
            "additionalProperties": false
          },
          "insert": {
            "description": "Insert the given text at the given position.",
            "type": "object",
            "properties": {},
            "additionalProperties": false
          },
          "replace": {
            "description": "Replace the given range with given text for the given resource.",
            "type": "object",
            "properties": {},
            "additionalProperties": false
          },
          "delete": {
            "description": "Delete the text at the given range.",
            "type": "object",
            "properties": {},
            "additionalProperties": false
          }
        },
        "additionalProperties": false,
        "required": [
          "all",
          "clear",
          "insert",
          "replace",
          "delete"
        ]
      },
      "TextDocumentIdentifier": {
        "type": "object",
        "properties": {
          "uri": {
            "description": "The text document's uri.",
            "type": "string"
          }
        },
        "additionalProperties": false,
        "required": [
          "uri"
        ]
      },
      "CompletionItemKind": {
        "type": "string"
      },
      "CompletionItem": {
        "type": "object",
        "properties": {
          "label": {
            "description": "The label of this completion item. By default\n\nalso the text that is inserted when selecting\n\nthis completion.",
            "type": "string"
          },
          "kind": {
            "description": "The kind of this completion item. Based of the kind\n\nan icon is chosen by the editor.",
            "type": "number"
          },
          "detail": {
            "description": "A human-readable string with additional information\n\nabout this item, like type or symbol information.",
            "type": "string"
          },
          "documentation": {
            "description": "A human-readable string that represents a doc-comment.",
            "type": "string"
          },
          "sortText": {
            "description": "A string that shoud be used when comparing this item\n\nwith other items. When `falsy` the [label](#CompletionItem.label)\n\nis used.",
            "type": "string"
          },
          "filterText": {
            "description": "A string that should be used when filtering a set of\n\ncompletion items. When `falsy` the [label](#CompletionItem.label)\n\nis used.",
            "type": "string"
          },
          "insertText": {
            "description": "A string that should be inserted a document when selecting\n\nthis completion. When `falsy` the [label](#CompletionItem.label)\n\nis used.",
            "type": "string"
          },
          "textEdit": {
            "$ref": "#/definitions/TextEdit",
            "description": "An [edit](#TextEdit) which is applied to a document when selecting\n\nthis completion. When an edit is provided the value of\n\n[insertText](#CompletionItem.insertText) is ignored."
          },
          "data": {
            "description": "An data entry field that is preserved on a completion item between\n\na [CompletionRequest](#CompletionRequest) and a [CompletionResolveRequest]\n\n(#CompletionResolveRequest)"
          }
        },
        "additionalProperties": false,
        "required": [
          "label"
        ]
      },
      "CompletionList": {
        "type": "object",
        "properties": {
          "isIncomplete": {
            "description": "This list it not complete. Further typing should result in recomputing\n\nthis list.",
            "type": "boolean"
          },
          "items": {
            "description": "The completion items.",
            "type": "array",
            "items": {
              "$ref": "#/definitions/CompletionItem",
              "description": "A completion item represents a text snippet that is\n\nproposed to complete text that is being typed.\n\nThe CompletionItem namespace provides functions to deal with\n\ncompletion items."
            }
          }
        },
        "additionalProperties": false,
        "required": [
          "isIncomplete",
          "items"
        ]
      },
      "Hover": {
        "type": "object",
        "properties": {
          "contents": {
            "description": "The hover's content",
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "language": {
                    "type": "string"
                  },
                  "value": {
                    "type": "string"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "language",
                  "value"
                ]
              },
              {
                "type": "array",
                "items": {
                  "oneOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "language": {
                          "type": "string"
                        },
                        "value": {
                          "type": "string"
                        }
                      },
                      "additionalProperties": false,
                      "required": [
                        "language",
                        "value"
                      ]
                    }
                  ]
                }
              }
            ]
          },
          "range": {
            "$ref": "#/definitions/Range",
            "description": "An optional range"
          }
        },
        "additionalProperties": false,
        "required": [
          "contents"
        ]
      },
      "SignatureHelp": {
        "type": "object",
        "properties": {
          "signatures": {
            "description": "One or more signatures.",
            "type": "array",
            "items": {
              "$ref": "#/definitions/SignatureInformation",
              "description": "Represents the signature of something callable. A signature\n\ncan have a label, like a function-name, a doc-comment, and\n\na set of parameters.\n\nThe SignatureInformation namespace provides helper functions to work with\n\n[SignatureInformation](#SignatureInformation) literals."
            }
          },
          "activeSignature": {
            "description": "The active signature.",
            "type": "number"
          },
          "activeParameter": {
            "description": "The active parameter of the active signature.",
            "type": "number"
          }
        },
        "additionalProperties": false,
        "required": [
          "signatures"
        ]
      },
      "SignatureInformation": {
        "type": "object",
        "properties": {
          "label": {
            "description": "The label of this signature. Will be shown in\n\nthe UI.",
            "type": "string"
          },
          "documentation": {
            "description": "The human-readable doc-comment of this signature. Will be shown\n\nin the UI but can be omitted.",
            "type": "string"
          },
          "parameters": {
            "description": "The parameters of this signature.",
            "type": "array",
            "items": {
              "$ref": "#/definitions/ParameterInformation",
              "description": "Represents a parameter of a callable-signature. A parameter can\n\nhave a label and a doc-comment.\n\nThe ParameterInformation namespace provides helper functions to work with\n\n[ParameterInformation](#ParameterInformation) literals."
            }
          }
        },
        "additionalProperties": false,
        "required": [
          "label"
        ]
      },
      "ParameterInformation": {
        "type": "object",
        "properties": {
          "label": {
            "description": "The label of this signature. Will be shown in\n\nthe UI.",
            "type": "string"
          },
          "documentation": {
            "description": "The human-readable doc-comment of this signature. Will be shown\n\nin the UI but can be omitted.",
            "type": "string"
          }
        },
        "additionalProperties": false,
        "required": [
          "label"
        ]
      },
      "CodeActionContext": {
        "type": "object",
        "properties": {
          "diagnostics": {
            "description": "An array of diagnostics.",
            "type": "array",
            "items": {
              "$ref": "#/definitions/Diagnostic",
              "description": "Represents a diagnostic, such as a compiler error or warning. Diagnostic objects\n\nare only valid in the scope of a resource.\n\nThe Diagnostic namespace provides helper functions to work with\n\n[Diagnostic](#Diagnostic) literals."
            }
          }
        },
        "additionalProperties": false,
        "required": [
          "diagnostics"
        ]
      },
      "DocumentHighlight": {
        "type": "object",
        "properties": {
          "range": {
            "$ref": "#/definitions/Range",
            "description": "The range this highlight applies to."
          },
          "kind": {
            "description": "The highlight kind, default is [text](#DocumentHighlightKind.Text).",
            "type": "number"
          }
        },
        "additionalProperties": false,
        "required": [
          "range"
        ]
      },
      "DocumentHighlightKind": {
        "type": "string"
      },
      "SymbolInformation": {
        "type": "object",
        "properties": {
          "name": {
            "description": "The name of this symbol.",
            "type": "string"
          },
          "kind": {
            "description": "The kind of this symbol.",
            "type": "number"
          },
          "location": {
            "$ref": "#/definitions/Location",
            "description": "The location of this symbol."
          },
          "containerName": {
            "description": "The name of the symbol containing this symbol.",
            "type": "string"
          }
        },
        "additionalProperties": false,
        "required": [
          "name",
          "kind",
          "location"
        ]
      },
      "SymbolKind": {
        "type": "string"
      },
      "CodeLens": {
        "type": "object",
        "properties": {
          "range": {
            "$ref": "#/definitions/Range",
            "description": "The range in which this code lens is valid. Should only span a single line."
          },
          "command": {
            "$ref": "#/definitions/Command",
            "description": "The command this code lens represents."
          },
          "data": {
            "description": "An data entry field that is preserved on a code lens item between\n\na [CodeLensRequest](#CodeLensRequest) and a [CodeLensResolveRequest]\n\n(#CodeLensResolveRequest)"
          }
        },
        "additionalProperties": false,
        "required": [
          "range"
        ]
      },
      "FormattingOptions": {
        "type": "object",
        "properties": {
          "tabSize": {
            "description": "Size of a tab in spaces.",
            "type": "number"
          },
          "insertSpaces": {
            "description": "Prefer spaces over tabs.",
            "type": "boolean"
          }
        },
        "additionalProperties": false,
        "required": [
          "tabSize",
          "insertSpaces"
        ]
      }
    },
    "$schema": "http://json-schema.org/draft-04/schema#"
  },
  "tests": [
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 10,
            "character": 10
          }
        },
        "position": {
          "line": 5,
          "character": 5
        },
        "location": {
          "uri": "file:///path/to/file",
          "range": {
            "start": {
              "line": 0,
              "character": 0
            },
            "end": {
              "line": 10,
              "character": 10
            }
          }
        },
        "diagnostic": {
          "range": {
            "start": {
              "line": 0,
              "character": 0
            },
            "end": {
              "line": 10,
              "character": 10
            }
          },
          "severity": 1,
          "code": "error",
          "source": "compiler",
          "message": "Error message"
        },
        "DiagnosticSeverity": "Error",
        "command": {
          "title": "Command title",
          "command": "command.id",
          "arguments": []
        },
        "textEdit": {
          "range": {
            "start": {
              "line": 0,
              "character": 0
            },
            "end": {
              "line": 10,
              "character": 10
            }
          },
          "newText": "New text"
        },
        "workspaceEdit": {
          "changes": {
            "file:///path/to/file": [
              {
                "range": {
                  "start": {
                    "line": 0,
                    "character": 0
                  },
                  "end": {
                    "line": 10,
                    "character": 10
                  }
                },
                "newText": "New text"
              }
            ]
          }
        },
        "workspaceChange": {
          "workspaceEdit": {
            "changes": {
              "file:///path/to/file": [
                {
                  "range": {
                    "start": {
                      "line": 0,
                      "character": 0
                    },
                    "end": {
                      "line": 10,
                      "character": 10
                    }
                  },
                  "newText": "New text"
                }
              ]
            }
          },
          "textEditChanges": {},
          "edit": {
            "changes": {
              "file:///path/to/file": [
                {
                  "range": {
                    "start": {
                      "line": 0,
                      "character": 0
                    },
                    "end": {
                      "line": 10,
                      "character": 10
                    }
                  },
                  "newText": "New text"
                }
              ]
            }
          },
          "getTextEditChange": {}
        },
        "textEditChange": {
          "all": {},
          "clear": {},
          "insert": {},
          "replace": {},
          "delete": {}
        },
        "textDocumentIdentifier": {
          "uri": "file:///path/to/file"
        },
        "completionItemKind": "Text",
        "completionItem": {
          "label": "Completion item label",
          "kind": 1,
          "detail": "Completion item detail",
          "documentation": "Completion item documentation",
          "sortText": "Completion item sort text",
          "filterText": "Completion item filter text",
          "insertText": "Completion item insert text",
          "textEdit": {
            "range": {
              "start": {
                "line": 0,
                "character": 0
              },
              "end": {
                "line": 10,
                "character": 10
              }
            },
            "newText": "New text"
          },
          "data": {}
        },
        "completionList": {
          "isIncomplete": false,
          "items": [
            {
              "label": "Completion item label",
              "kind": 1,
              "detail": "Completion item detail",
              "documentation": "Completion item documentation",
              "sortText": "Completion item sort text",
              "filterText": "Completion item filter text",
              "insertText": "Completion item insert text",
              "textEdit": {
                "range": {
                  "start": {
                    "line": 0,
                    "character": 0
                  },
                  "end": {
                    "line": 10,
                    "character": 10
                  }
                },
                "newText": "New text"
              },
              "data": {}
            }
          ]
        },
        "hover": {
          "contents": {
            "language": "language",
            "value": "Hover content"
          },
          "range": {
            "start": {
              "line": 0,
              "character": 0
            },
            "end": {
              "line": 10,
              "character": 10
            }
          }
        },
        "markedString": {
          "language": "language",
          "value": "Marked string"
        },
        "signatureHelp": {
          "signatures": [
            {
              "label": "Signature label",
              "documentation": "Signature documentation",
              "parameters": [
                {
                  "label": "Parameter label",
                  "documentation": "Parameter documentation"
                }
              ]
            }
          ],
          "activeSignature": 0,
          "activeParameter": 0
        },
        "signatureInformation": {
          "label": "Signature label",
          "documentation": "Signature documentation",
          "parameters": [
            {
              "label": "Parameter label",
              "documentation": "Parameter documentation"
            }
          ]
        },
        "parameterInformation": {
          "label": "Parameter label",
          "documentation": "Parameter documentation"
        },
        "definition": {
          "uri": "file:///path/to/file",
          "range": {
            "start": {
              "line": 0,
              "character": 0
            },
            "end": {
              "line": 10,
              "character": 10
            }
          }
        },
        "codeActionContext": {
          "diagnostics": [
            {
              "range": {
                "start": {
                  "line": 0,
                  "character": 0
                },
                "end": {
                  "line": 10,
                  "character": 10
                }
              },
              "severity": 1,
              "code": "error",
              "source": "compiler",
              "message": "Error message"
            }
          ]
        },
        "documentHighlight": {
          "range": {
            "start": {
              "line": 0,
              "character": 0
            },
            "end": {
              "line": 10,
              "character": 10
            }
          },
          "kind": 1
        },
        "documentHighlightKind": "Text",
        "symbolInformation": {
          "name": "Symbol name",
          "kind": 1,
          "location": {
            "uri": "file:///path/to/file",
            "range": {
              "start": {
                "line": 0,
                "character": 0
              },
              "end": {
                "line": 10,
                "character": 10
              }
            }
          },
          "containerName": "Container name"
        },
        "symbolKind": "File",
        "codeLens": {
          "range": {
            "start": {
              "line": 0,
              "character": 0
            },
            "end": {
              "line": 10,
              "character": 10
            }
          },
          "command": {
            "title": "Command title",
            "command": "command.id",
            "arguments": []
          },
          "data": {}
        },
        "formattingOptions": {
          "tabSize": 4,
          "insertSpaces": true
        }
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 10,
            "character": 10
          }
        },
        "position": {
          "line": 5,
          "character": 5
        },
        "location": {
          "uri": "file:///path/to/file.txt",
          "range": {
            "start": {
              "line": 0,
              "character": 0
            },
            "end": {
              "line": 10,
              "character": 10
            }
          }
        },
        "diagnostic": {
          "range": {
            "start": {
              "line": 0,
              "character": 0
            },
            "end": {
              "line": 10,
              "character": 10
            }
          },
          "severity": 1,
          "code": 1,
          "source": "source",
          "message": "message"
        },
        "DiagnosticSeverity": "Error",
        "command": {
          "title": "title",
          "command": "command",
          "arguments": []
        },
        "textEdit": {
          "range": {
            "start": {
              "line": 0,
              "character": 0
            },
            "end": {
              "line": 10,
              "character": 10
            }
          },
          "newText": "newText"
        },
        "workspaceEdit": {
          "changes": {
            "file:///path/to/file.txt": [
              {
                "range": {
                  "start": {
                    "line": 0,
                    "character": 0
                  },
                  "end": {
                    "line": 10,
                    "character": 10
                  }
                },
                "newText": "newText"
              }
            ]
          }
        },
        "workspaceChange": {
          "workspaceEdit": {
            "changes": {
              "file:///path/to/file.txt": [
                {
                  "range": {
                    "start": {
                      "line": 0,
                      "character": 0
                    },
                    "end": {
                      "line": 10,
                      "character": 10
                    }
                  },
                  "newText": "newText"
                }
              ]
            }
          },
          "textEditChanges": {},
          "edit": {
            "changes": {
              "file:///path/to/file.txt": [
                {
                  "range": {
                    "start": {
                      "line": 0,
                      "character": 0
                    },
                    "end": {
                      "line": 10,
                      "character": 10
                    }
                  },
                  "newText": "newText"
                }
              ]
            }
          },
          "getTextEditChange": {}
        },
        "textEditChange": {
          "all": {},
          "clear": {},
          "insert": {},
          "replace": {},
          "delete": {}
        },
        "textDocumentIdentifier": {
          "uri": "file:///path/to/file.txt"
        },
        "completionItemKind": "Text",
        "completionItem": {
          "label": "label",
          "kind": 1,
          "detail": "detail",
          "documentation": "documentation",
          "sortText": "sortText",
          "filterText": "filterText",
          "insertText": "insertText",
          "textEdit": {
            "range": {
              "start": {
                "line": 0,
                "character": 0
              },
              "end": {
                "line": 10,
                "character": 10
              }
            },
            "newText": "newText"
          },
          "data": {}
        },
        "completionList": {
          "isIncomplete": false,
          "items": [
            {
              "label": "label",
              "kind": 1,
              "detail": "detail",
              "documentation": "documentation",
              "sortText": "sortText",
              "filterText": "filterText",
              "insertText": "insertText",
              "textEdit": {
                "range": {
                  "start": {
                    "line": 0,
                    "character": 0
                  },
                  "end": {
                    "line": 10,
                    "character": 10
                  }
                },
                "newText": "newText"
              },
              "data": {}
            }
          ]
        },
        "hover": {
          "contents": "contents",
          "range": {
            "start": {
              "line": 0,
              "character": 0
            },
            "end": {
              "line": 10,
              "character": 10
            }
          }
        },
        "markedString": "markedString",
        "signatureHelp": {
          "signatures": [
            {
              "label": "label",
              "documentation": "documentation",
              "parameters": [
                {
                  "label": "label",
                  "documentation": "documentation"
                }
              ]
            }
          ],
          "activeSignature": 1,
          "activeParameter": 1
        },
        "signatureInformation": {
          "label": "label",
          "documentation": "documentation",
          "parameters": [
            {
              "label": "label",
              "documentation": "documentation"
            }
          ]
        },
        "parameterInformation": {
          "label": "label",
          "documentation": "documentation"
        },
        "definition": {
          "uri": "file:///path/to/file.txt",
          "range": {
            "start": {
              "line": 0,
              "character": 0
            },
            "end": {
              "line": 10,
              "character": 10
            }
          }
        },
        "codeActionContext": {
          "diagnostics": [
            {
              "range": {
                "start": {
                  "line": 0,
                  "character": 0
                },
                "end": {
                  "line": 10,
                  "character": 10
                }
              },
              "severity": 1,
              "code": 1,
              "source": "source",
              "message": "message"
            }
          ]
        },
        "documentHighlight": {
          "range": {
            "start": {
              "line": 0,
              "character": 0
            },
            "end": {
              "line": 10,
              "character": 10
            }
          },
          "kind": 1
        },
        "documentHighlightKind": "Text",
        "symbolInformation": {
          "name": "name",
          "kind": 1,
          "location": {
            "uri": "file:///path/to/file.txt",
            "range": {
              "start": {
                "line": 0,
                "character": 0
              },
              "end": {
                "line": 10,
                "character": 10
              }
            }
          },
          "containerName": "containerName"
        },
        "symbolKind": "File",
        "codeLens": {
          "range": {
            "start": {
              "line": 0,
              "character": 0
            },
            "end": {
              "line": 10,
              "character": 10
            }
          },
          "command": {
            "title": "title",
            "command": "command",
            "arguments": []
          },
          "data": {}
        },
        "formattingOptions": {
          "tabSize": 4,
          "insertSpaces": true
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on oneOf keyword",
      "valid": false,
      "rust_error": "{\"language\":\"lang\",\"value\":\"value\",\"extra\":\"extra\"} is not valid under any of the schemas listed in the 'oneOf' keyword",
      "python_error": "Additional properties are not allowed ('extra' was unexpected)\n\nFailed validating 'additionalProperties' in schema[1]:\n    {'type': 'object',\n     'properties': {'language': {'type': 'string'},\n                    'value': {'type': 'string'}},\n     'additionalProperties': False,\n     'required': ['language', 'value']}\n\nOn instance:\n    {'language': 'lang', 'value': 'value', 'extra': 'extra'}",
      "data": {
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 10,
            "character": 10
          }
        },
        "position": {
          "line": 5,
          "character": 5
        },
        "location": {
          "uri": "file:///path/to/file.txt",
          "range": {
            "start": {
              "line": 0,
              "character": 0
            },
            "end": {
              "line": 10,
              "character": 10
            }
          }
        },
        "diagnostic": {
          "range": {
            "start": {
              "line": 0,
              "character": 0
            },
            "end": {
              "line": 10,
              "character": 10
            }
          },
          "severity": 1,
          "code": 1,
          "source": "source",
          "message": "message"
        },
        "DiagnosticSeverity": "Error",
        "command": {
          "title": "title",
          "command": "command",
          "arguments": []
        },
        "textEdit": {
          "range": {
            "start": {
              "line": 0,
              "character": 0
            },
            "end": {
              "line": 10,
              "character": 10
            }
          },
          "newText": "newText"
        },
        "workspaceEdit": {
          "changes": {
            "file:///path/to/file.txt": [
              {
                "range": {
                  "start": {
                    "line": 0,
                    "character": 0
                  },
                  "end": {
                    "line": 10,
                    "character": 10
                  }
                },
                "newText": "newText"
              }
            ]
          }
        },
        "workspaceChange": {
          "workspaceEdit": {
            "changes": {
              "file:///path/to/file.txt": [
                {
                  "range": {
                    "start": {
                      "line": 0,
                      "character": 0
                    },
                    "end": {
                      "line": 10,
                      "character": 10
                    }
                  },
                  "newText": "newText"
                }
              ]
            }
          },
          "textEditChanges": {},
          "edit": {
            "changes": {
              "file:///path/to/file.txt": [
                {
                  "range": {
                    "start": {
                      "line": 0,
                      "character": 0
                    },
                    "end": {
                      "line": 10,
                      "character": 10
                    }
                  },
                  "newText": "newText"
                }
              ]
            }
          },
          "getTextEditChange": {}
        },
        "textEditChange": {
          "all": {},
          "clear": {},
          "insert": {},
          "replace": {},
          "delete": {}
        },
        "textDocumentIdentifier": {
          "uri": "file:///path/to/file.txt"
        },
        "completionItemKind": "Text",
        "completionItem": {
          "label": "label",
          "kind": 1,
          "detail": "detail",
          "documentation": "documentation",
          "sortText": "sortText",
          "filterText": "filterText",
          "insertText": "insertText",
          "textEdit": {
            "range": {
              "start": {
                "line": 0,
                "character": 0
              },
              "end": {
                "line": 10,
                "character": 10
              }
            },
            "newText": "newText"
          },
          "data": {}
        },
        "completionList": {
          "isIncomplete": false,
          "items": [
            {
              "label": "label",
              "kind": 1,
              "detail": "detail",
              "documentation": "documentation",
              "sortText": "sortText",
              "filterText": "filterText",
              "insertText": "insertText",
              "textEdit": {
                "range": {
                  "start": {
                    "line": 0,
                    "character": 0
                  },
                  "end": {
                    "line": 10,
                    "character": 10
                  }
                },
                "newText": "newText"
              },
              "data": {}
            }
          ]
        },
        "hover": {
          "contents": "contents",
          "range": {
            "start": {
              "line": 0,
              "character": 0
            },
            "end": {
              "line": 10,
              "character": 10
            }
          }
        },
        "markedString": {
          "language": "lang",
          "value": "value",
          "extra": "extra"
        },
        "signatureHelp": {
          "signatures": [
            {
              "label": "label",
              "documentation": "documentation",
              "parameters": [
                {
                  "label": "label",
                  "documentation": "documentation"
                }
              ]
            }
          ],
          "activeSignature": 1,
          "activeParameter": 1
        },
        "signatureInformation": {
          "label": "label",
          "documentation": "documentation",
          "parameters": [
            {
              "label": "label",
              "documentation": "documentation"
            }
          ]
        },
        "parameterInformation": {
          "label": "label",
          "documentation": "documentation"
        },
        "definition": {
          "uri": "file:///path/to/file.txt",
          "range": {
            "start": {
              "line": 0,
              "character": 0
            },
            "end": {
              "line": 10,
              "character": 10
            }
          }
        },
        "codeActionContext": {
          "diagnostics": [
            {
              "range": {
                "start": {
                  "line": 0,
                  "character": 0
                },
                "end": {
                  "line": 10,
                  "character": 10
                }
              },
              "severity": 1,
              "code": 1,
              "source": "source",
              "message": "message"
            }
          ]
        },
        "documentHighlight": {
          "range": {
            "start": {
              "line": 0,
              "character": 0
            },
            "end": {
              "line": 10,
              "character": 10
            }
          },
          "kind": 1
        },
        "documentHighlightKind": "Text",
        "symbolInformation": {
          "name": "name",
          "kind": 1,
          "location": {
            "uri": "file:///path/to/file.txt",
            "range": {
              "start": {
                "line": 0,
                "character": 0
              },
              "end": {
                "line": 10,
                "character": 10
              }
            }
          },
          "containerName": "containerName"
        },
        "symbolKind": "File",
        "codeLens": {
          "range": {
            "start": {
              "line": 0,
              "character": 0
            },
            "end": {
              "line": 10,
              "character": 10
            }
          },
          "command": {
            "title": "title",
            "command": "command",
            "arguments": []
          },
          "data": {}
        },
        "formattingOptions": {
          "tabSize": 4,
          "insertSpaces": true
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on additionalProperties keyword with an object schema",
      "valid": false,
      "rust_error": "Additional properties are not allowed ('extra' was unexpected)",
      "python_error": "Additional properties are not allowed ('extra' was unexpected)\n\nFailed validating 'additionalProperties' in schema:\n    {'type': 'object',\n     'properties': {'range': {'$ref': '#/definitions/Range'},\n                    'position': {'$ref': '#/definitions/Position'},\n                    'location': {'$ref': '#/definitions/Location'},\n                    'diagnostic': {'$ref': '#/definitions/Diagnostic'},\n                    'DiagnosticSeverity': {'$ref': '#/definitions/DiagnosticSeverity'},\n                    'command': {'$ref': '#/definitions/Command'},\n                    'textEdit': {'$ref': '#/definitions/TextEdit'},\n                    'workspaceEdit': {'$ref': '#/definitions/WorkspaceEdit'},\n                    'workspaceChange': {'$ref': '#/definitions/WorkspaceChange'},\n                    'textEditChange': {'$ref': '#/definitions/TextEditChange'},\n                    'textDocumentIdentifier': {'$ref': '#/definitions/TextDocumentIdentifier'},\n                    'completionItemKind': {'$ref': '#/def.. (97319 more)",
      "data": {
        "range": {
          "start": {
            "line": 0,
            "character": 0,
            "extra": "value"
          },
          "end": {
            "line": 10,
            "character": 10
          }
        },
        "position": {
          "line": 5,
          "character": 5
        },
        "location": {
          "uri": "file:///path/to/file.txt",
          "range": {
            "start": {
              "line": 0,
              "character": 0
            },
            "end": {
              "line": 10,
              "character": 10
            }
          }
        },
        "diagnostic": {
          "range": {
            "start": {
              "line": 0,
              "character": 0
            },
            "end": {
              "line": 10,
              "character": 10
            }
          },
          "severity": 1,
          "code": 1,
          "source": "source",
          "message": "message"
        },
        "DiagnosticSeverity": "Error",
        "command": {
          "title": "title",
          "command": "command",
          "arguments": []
        },
        "textEdit": {
          "range": {
            "start": {
              "line": 0,
              "character": 0
            },
            "end": {
              "line": 10,
              "character": 10
            }
          },
          "newText": "newText"
        },
        "workspaceEdit": {
          "changes": {
            "file:///path/to/file.txt": [
              {
                "range": {
                  "start": {
                    "line": 0,
                    "character": 0
                  },
                  "end": {
                    "line": 10,
                    "character": 10
                  }
                },
                "newText": "newText"
              }
            ]
          }
        },
        "workspaceChange": {
          "workspaceEdit": {
            "changes": {
              "file:///path/to/file.txt": [
                {
                  "range": {
                    "start": {
                      "line": 0,
                      "character": 0
                    },
                    "end": {
                      "line": 10,
                      "character": 10
                    }
                  },
                  "newText": "newText"
                }
              ]
            }
          },
          "textEditChanges": {},
          "edit": {
            "changes": {
              "file:///path/to/file.txt": [
                {
                  "range": {
                    "start": {
                      "line": 0,
                      "character": 0
                    },
                    "end": {
                      "line": 10,
                      "character": 10
                    }
                  },
                  "newText": "newText"
                }
              ]
            }
          },
          "getTextEditChange": {}
        },
        "textEditChange": {
          "all": {},
          "clear": {},
          "insert": {},
          "replace": {},
          "delete": {}
        },
        "textDocumentIdentifier": {
          "uri": "file:///path/to/file.txt"
        },
        "completionItemKind": "Text",
        "completionItem": {
          "label": "label",
          "kind": 1,
          "detail": "detail",
          "documentation": "documentation",
          "sortText": "sortText",
          "filterText": "filterText",
          "insertText": "insertText",
          "textEdit": {
            "range": {
              "start": {
                "line": 0,
                "character": 0
              },
              "end": {
                "line": 10,
                "character": 10
              }
            },
            "newText": "newText"
          },
          "data": {}
        },
        "completionList": {
          "isIncomplete": false,
          "items": [
            {
              "label": "label",
              "kind": 1,
              "detail": "detail",
              "documentation": "documentation",
              "sortText": "sortText",
              "filterText": "filterText",
              "insertText": "insertText",
              "textEdit": {
                "range": {
                  "start": {
                    "line": 0,
                    "character": 0
                  },
                  "end": {
                    "line": 10,
                    "character": 10
                  }
                },
                "newText": "newText"
              },
              "data": {}
            }
          ]
        },
        "hover": {
          "contents": "contents",
          "range": {
            "start": {
              "line": 0,
              "character": 0
            },
            "end": {
              "line": 10,
              "character": 10
            }
          }
        },
        "markedString": "markedString",
        "signatureHelp": {
          "signatures": [
            {
              "label": "label",
              "documentation": "documentation",
              "parameters": [
                {
                  "label": "label",
                  "documentation": "documentation"
                }
              ]
            }
          ],
          "activeSignature": 1,
          "activeParameter": 1
        },
        "signatureInformation": {
          "label": "label",
          "documentation": "documentation",
          "parameters": [
            {
              "label": "label",
              "documentation": "documentation"
            }
          ]
        },
        "parameterInformation": {
          "label": "label",
          "documentation": "documentation"
        },
        "definition": {
          "uri": "file:///path/to/file.txt",
          "range": {
            "start": {
              "line": 0,
              "character": 0
            },
            "end": {
              "line": 10,
              "character": 10
            }
          }
        },
        "codeActionContext": {
          "diagnostics": [
            {
              "range": {
                "start": {
                  "line": 0,
                  "character": 0
                },
                "end": {
                  "line": 10,
                  "character": 10
                }
              },
              "severity": 1,
              "code": 1,
              "source": "source",
              "message": "message"
            }
          ]
        },
        "documentHighlight": {
          "range": {
            "start": {
              "line": 0,
              "character": 0
            },
            "end": {
              "line": 10,
              "character": 10
            }
          },
          "kind": 1
        },
        "documentHighlightKind": "Text",
        "symbolInformation": {
          "name": "name",
          "kind": 1,
          "location": {
            "uri": "file:///path/to/file.txt",
            "range": {
              "start": {
                "line": 0,
                "character": 0
              },
              "end": {
                "line": 10,
                "character": 10
              }
            }
          },
          "containerName": "containerName"
        },
        "symbolKind": "File",
        "codeLens": {
          "range": {
            "start": {
              "line": 0,
              "character": 0
            },
            "end": {
              "line": 10,
              "character": 10
            }
          },
          "command": {
            "title": "title",
            "command": "command",
            "arguments": []
          },
          "data": {}
        },
        "formattingOptions": {
          "tabSize": 4,
          "insertSpaces": true
        },
        "extra": "value"
      }
    }
  ]
}