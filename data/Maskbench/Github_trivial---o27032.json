{
  "description": "sample Github_trivial/o27032.json",
  "meta": {
    "full_size": 170,
    "stripped_size": 170,
    "features": [
      "$ref",
      "patternProperties"
    ],
    "raw_features": [
      "$schema",
      "definitions",
      "type",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "definitions": {
      "def": {
        "type": "string"
      }
    },
    "type": "object",
    "patternProperties": {
      "^abc.+$": {
        "$ref": "#/definitions/def"
      }
    }
  },
  "tests": [
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "abc123": "Hello",
        "abcdef": "World",
        "abc456": "Example"
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "abc123": "Hello",
        "abc456": "World",
        "abcdef": "Example"
      }
    },
    {
      "description": "llama-70b generated negative; focus on patternProperties keyword",
      "valid": false,
      "rust_error": "123 is not of type \"string\"",
      "python_error": "123 is not of type 'string'\n\nFailed validating 'type' in schema['patternProperties']['^abc.+$']:\n    {'type': 'string'}\n\nOn instance['abc456']:\n    123",
      "data": {
        "abc123": "Hello",
        "abc456": 123,
        "abcdef": "Example"
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "123 is not of type \"string\"",
      "python_error": "123 is not of type 'string'\n\nFailed validating 'type' in schema['patternProperties']['^abc.+$']:\n    {'type': 'string'}\n\nOn instance['abc456']:\n    123",
      "data": {
        "abc123": "Hello",
        "abc456": 123,
        "abcdef": "Example"
      }
    }
  ]
}