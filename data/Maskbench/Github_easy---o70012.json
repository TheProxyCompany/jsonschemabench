{
  "description": "sample Github_easy/o70012.json",
  "meta": {
    "full_size": 439,
    "stripped_size": 419,
    "features": [
      "$ref",
      "@minmaxItems",
      "@minmaxProperties",
      "items"
    ],
    "raw_features": [
      "$schema",
      "definitions",
      "minItems",
      "minProperties",
      "properties",
      "type",
      "type:array",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "definitions": {
      "patterns": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "minItems": 1,
        "_uniqueItems": true
      },
      "filter": {
        "type": "object",
        "properties": {
          "include": {
            "$ref": "#/definitions/patterns"
          },
          "exclude": {
            "$ref": "#/definitions/patterns"
          }
        },
        "minProperties": 1
      }
    },
    "type": "object",
    "properties": {
      "elements": {
        "$ref": "#/definitions/filter"
      },
      "archives": {
        "$ref": "#/definitions/filter"
      }
    },
    "minProperties": 1
  },
  "tests": [
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "elements": {
          "include": [
            "pattern1",
            "pattern2"
          ],
          "exclude": [
            "pattern3"
          ]
        },
        "archives": {
          "include": [
            "archive1",
            "archive2"
          ],
          "exclude": [
            "archive3",
            "archive4"
          ]
        }
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "elements": {
          "include": [
            "pattern1",
            "pattern2"
          ],
          "exclude": [
            "pattern3"
          ]
        },
        "archives": {
          "include": [
            "archive-pattern1"
          ],
          "exclude": [
            "archive-pattern2",
            "archive-pattern3"
          ]
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on minItems keyword",
      "valid": false,
      "rust_error": "[] has less than 1 item",
      "python_error": "[] should be non-empty\n\nFailed validating 'minItems' in schema['properties']['elements']['properties']['include']:\n    {'type': 'array',\n     'items': {'type': 'string'},\n     'minItems': 1,\n     '_uniqueItems': True}\n\nOn instance['elements']['include']:\n    []",
      "data": {
        "elements": {
          "include": [],
          "exclude": [
            "pattern3"
          ]
        },
        "archives": {
          "include": [
            "archive-pattern1"
          ],
          "exclude": [
            "archive-pattern2",
            "archive-pattern3"
          ]
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on minProperties keyword",
      "valid": false,
      "rust_error": "{} has less than 1 property",
      "python_error": "{} should be non-empty\n\nFailed validating 'minProperties' in schema['properties']['elements']:\n    {'type': 'object',\n     'properties': {'include': {'$ref': '#/definitions/patterns'},\n                    'exclude': {'$ref': '#/definitions/patterns'}},\n     'minProperties': 1}\n\nOn instance['elements']:\n    {}",
      "data": {
        "elements": {}
      }
    }
  ]
}