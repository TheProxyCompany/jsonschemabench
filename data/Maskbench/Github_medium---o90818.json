{
  "description": "sample Github_medium/o90818.json",
  "meta": {
    "full_size": 2684,
    "stripped_size": 740,
    "features": [
      "@minmaxNumber"
    ],
    "raw_features": [
      "minimum",
      "properties",
      "required",
      "type",
      "type:boolean",
      "type:number",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "properties": {
      "networking": {
        "description": "PostgreSQL networking configuration properties",
        "properties": {
          "external_access": {
            "description": "Enable access from outside the cluster through Marathon-LB.\nNOTE: this connection is unencrypted.",
            "properties": {
              "enable": {
                "default": false,
                "description": "Enable or disable creating a VIP for external access through a public node running Marathon-LB. Defaults to FALSE.",
                "type": "boolean"
              },
              "external_port": {
                "default": 15432,
                "description": "For external access, port number to be used for clear communication in the external Marathon-LB load balancer",
                "type": "number"
              }
            },
            "type": "object"
          },
          "port": {
            "default": 5432,
            "description": "Port number to be used for clear communication internally to the cluster.",
            "type": "number"
          }
        },
        "type": "object"
      },
      "postgresql": {
        "description": "PostgreSQL service configuration properties",
        "properties": {
          "cpus": {
            "default": 0.3,
            "description": "CPU shares to allocate to each PostgreSQL node.",
            "minimum": 0.3,
            "type": "number"
          },
          "dbname": {
            "default": "admin",
            "description": "Name for the default database that is created when the image is first started.",
            "type": "string"
          },
          "initdbargs": {
            "description": "Arguments to send to postgres initdb. The value is a space separated string of arguments as postgres initdb would expect them.",
            "type": "string"
          },
          "mem": {
            "default": 256.0,
            "description": "Memory to allocate to each PostgreSQL node.",
            "minimum": 256.0,
            "type": "number"
          },
          "password": {
            "default": "password",
            "description": "Postgres password.",
            "type": "string"
          },
          "user": {
            "default": "admin",
            "description": "Postgres user.",
            "type": "string"
          }
        },
        "required": [
          "cpus",
          "mem"
        ],
        "type": "object"
      },
      "service": {
        "description": "DC/OS service configuration properties",
        "properties": {
          "name": {
            "default": "postgresql",
            "description": "Name of this service instance.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "storage": {
        "description": "PostgreSQL storage configuration properties",
        "properties": {
          "host_volume": {
            "default": "/tmp",
            "description": "The location of a volume on the host to be used for persisting PostgreSQL data. The final location will be derived from this value plus the name set in `name` (e.g. `/mnt/host_volume/postgresql`). This can be a mounted NFS drive. Note that this path must be the same on all DCOS agents.",
            "type": "string"
          },
          "persistence": {
            "description": "Enable persistent storage.",
            "properties": {
              "enable": {
                "default": false,
                "description": "Enable or disable persistent storage.",
                "type": "boolean"
              },
              "volume_size": {
                "default": 64,
                "description": "If a new volume is to be created, this controls its size in MBs. Defaults to 64MBs",
                "type": "number"
              }
            },
            "type": "object"
          },
          "pgdata": {
            "default": "pgdata",
            "description": "Location of the database files.",
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "networking": {
          "external_access": {
            "enable": true,
            "external_port": 15432
          },
          "port": 5432
        },
        "postgresql": {
          "cpus": 0.5,
          "dbname": "my_database",
          "initdbargs": "-U admin",
          "mem": 512.0,
          "password": "my_password",
          "user": "my_user"
        },
        "service": {
          "name": "my_postgresql_service"
        },
        "storage": {
          "host_volume": "/mnt/host_volume",
          "persistence": {
            "enable": true,
            "volume_size": 128
          },
          "pgdata": "my_pgdata"
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on minimum keyword",
      "valid": false,
      "rust_error": "0.2 is less than the minimum of 0.3",
      "python_error": "128.0 is less than the minimum of 256.0\n\nFailed validating 'minimum' in schema['properties']['postgresql']['properties']['mem']:\n    {'default': 256.0,\n     'description': 'Memory to allocate to each PostgreSQL node.',\n     'minimum': 256.0,\n     'type': 'number'}\n\nOn instance['postgresql']['mem']:\n    128.0",
      "data": {
        "networking": {
          "external_access": {
            "enable": true,
            "external_port": 15432
          },
          "port": 5432
        },
        "postgresql": {
          "cpus": 0.2,
          "dbname": "my_database",
          "initdbargs": "-U admin",
          "mem": 128.0,
          "password": "my_password",
          "user": "my_user"
        },
        "service": {
          "name": "my_postgresql_service"
        },
        "storage": {
          "host_volume": "/mnt/host_volume",
          "persistence": {
            "enable": true,
            "volume_size": 128
          },
          "pgdata": "my_pgdata"
        }
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "0.2 is less than the minimum of 0.3",
      "python_error": "0.2 is less than the minimum of 0.3\n\nFailed validating 'minimum' in schema['properties']['postgresql']['properties']['cpus']:\n    {'default': 0.3,\n     'description': 'CPU shares to allocate to each PostgreSQL node.',\n     'minimum': 0.3,\n     'type': 'number'}\n\nOn instance['postgresql']['cpus']:\n    0.2",
      "data": {
        "networking": {
          "external_access": {
            "enable": true,
            "external_port": 0
          },
          "port": 5432
        },
        "postgresql": {
          "cpus": 0.2,
          "dbname": "my_database",
          "initdbargs": "-U admin",
          "mem": 512.0,
          "password": "my_password",
          "user": "my_user"
        },
        "service": {
          "name": "my_postgresql_service"
        },
        "storage": {
          "host_volume": "/mnt/host_volume",
          "persistence": {
            "enable": true,
            "volume_size": 128
          },
          "pgdata": "my_pgdata"
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on minimum keyword",
      "valid": false,
      "rust_error": "0.2 is less than the minimum of 0.3",
      "python_error": "0.2 is less than the minimum of 0.3\n\nFailed validating 'minimum' in schema['properties']['postgresql']['properties']['cpus']:\n    {'default': 0.3,\n     'description': 'CPU shares to allocate to each PostgreSQL node.',\n     'minimum': 0.3,\n     'type': 'number'}\n\nOn instance['postgresql']['cpus']:\n    0.2",
      "data": {
        "networking": {
          "external_access": {
            "enable": true,
            "external_port": 15432
          },
          "port": 5432
        },
        "postgresql": {
          "cpus": 0.2,
          "dbname": "my_database",
          "initdbargs": "-U admin",
          "mem": 512.0,
          "password": "my_password",
          "user": "my_user"
        },
        "service": {
          "name": "my_postgresql_service"
        },
        "storage": {
          "host_volume": "/mnt/host_volume",
          "persistence": {
            "enable": true,
            "volume_size": 128
          },
          "pgdata": "my_pgdata"
        }
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "networking": {
          "external_access": {
            "enable": true,
            "external_port": 15432
          },
          "port": 5432
        },
        "postgresql": {
          "cpus": 0.5,
          "dbname": "my_database",
          "initdbargs": "-E UTF8",
          "mem": 512.0,
          "password": "my_password",
          "user": "my_user"
        },
        "service": {
          "name": "my_postgresql_service"
        },
        "storage": {
          "host_volume": "/mnt/host_volume",
          "persistence": {
            "enable": true,
            "volume_size": 128
          },
          "pgdata": "pgdata"
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on minimum keyword",
      "valid": false,
      "rust_error": "0.2 is less than the minimum of 0.3",
      "python_error": "0.2 is less than the minimum of 0.3\n\nFailed validating 'minimum' in schema['properties']['postgresql']['properties']['cpus']:\n    {'default': 0.3,\n     'description': 'CPU shares to allocate to each PostgreSQL node.',\n     'minimum': 0.3,\n     'type': 'number'}\n\nOn instance['postgresql']['cpus']:\n    0.2",
      "data": {
        "networking": {
          "external_access": {
            "enable": true,
            "external_port": 15432
          },
          "port": 5432
        },
        "postgresql": {
          "cpus": 0.2,
          "dbname": "my_database",
          "initdbargs": "-E UTF8",
          "mem": 512.0,
          "password": "my_password",
          "user": "my_user"
        },
        "service": {
          "name": "my_postgresql_service"
        },
        "storage": {
          "host_volume": "/mnt/host_volume",
          "persistence": {
            "enable": true,
            "volume_size": 128
          },
          "pgdata": "pgdata"
        }
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"15432\" is not of type \"number\"",
      "python_error": "0.2 is less than the minimum of 0.3\n\nFailed validating 'minimum' in schema['properties']['postgresql']['properties']['cpus']:\n    {'default': 0.3,\n     'description': 'CPU shares to allocate to each PostgreSQL node.',\n     'minimum': 0.3,\n     'type': 'number'}\n\nOn instance['postgresql']['cpus']:\n    0.2",
      "data": {
        "networking": {
          "external_access": {
            "enable": true,
            "external_port": "15432"
          },
          "port": 5432
        },
        "postgresql": {
          "cpus": 0.2,
          "dbname": "my_database",
          "initdbargs": "-E UTF8",
          "mem": 512.0,
          "password": "my_password",
          "user": "my_user"
        },
        "service": {
          "name": "my_postgresql_service"
        },
        "storage": {
          "host_volume": "/mnt/host_volume",
          "persistence": {
            "enable": true,
            "volume_size": -128
          },
          "pgdata": "pgdata"
        }
      }
    }
  ]
}