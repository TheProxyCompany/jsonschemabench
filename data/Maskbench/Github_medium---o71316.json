{
  "description": "sample Github_medium/o71316.json",
  "meta": {
    "full_size": 705,
    "stripped_size": 481,
    "features": [
      "@minmaxProperties",
      "additionalProperties",
      "enum",
      "items"
    ],
    "raw_features": [
      "$id",
      "$schema",
      "_boolSchema",
      "maxProperties",
      "properties",
      "type",
      "type:array",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-06/schema#",
    "type": "object",
    "additionalProperties": false,
    "properties": {
      "interface_type": {
        "$id": "/properties/interface_type",
        "title": "Interface Type",
        "type": "string",
        "default": "physical",
        "enum": [
          "physical",
          "logical"
        ]
      },
      "interface_filters": {
        "$id": "/properties/interface_filters",
        "title": "Interface Filters",
        "type": "array",
        "items": {
          "$id": "/properties/interface_filters/items",
          "type": "object",
          "title": "Filter",
          "maxProperties": 2,
          "additionalProperties": false,
          "properties": {
            "op": {
              "enum": [
                "regex",
                "startwith"
              ],
              "title": "Filter Type"
            },
            "expr": {
              "type": "string",
              "title": "Filter Expression"
            }
          },
          "default": {},
          "examples": [
            {
              "op": "regex",
              "expr": "^ge-"
            },
            {
              "op": "regex",
              "expr": "^xe"
            }
          ]
        }
      }
    }
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "interface_type": "physical",
        "interface_filters": [
          {
            "op": "regex",
            "expr": "^ge-"
          },
          {
            "op": "regex",
            "expr": "^xe"
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on maxProperties keyword",
      "valid": false,
      "rust_error": "{\"op\":\"regex\",\"expr\":\"^ge-\",\"extra\":\"property\"} has more than 2 properties",
      "python_error": "{'op': 'regex', 'expr': '^ge-', 'extra': 'property'} has too many properties\n\nFailed validating 'maxProperties' in schema['properties']['interface_filters']['items']:\n    {'$id': '/properties/interface_filters/items',\n     'type': 'object',\n     'title': 'Filter',\n     'maxProperties': 2,\n     'additionalProperties': False,\n     'properties': {'op': {'enum': ['regex', 'startwith'],\n                           'title': 'Filter Type'},\n                    'expr': {'type': 'string',\n                             'title': 'Filter Expression'}},\n     'default': {},\n     'examples': [{'op': 'regex', 'expr': '^ge-'},\n                  {'op': 'regex', 'expr': '^xe'}]}\n\nOn instance['interface_filters'][0]:\n    {'op': 'regex', 'expr': '^ge-', 'extra': 'property'}",
      "data": {
        "interface_type": "physical",
        "interface_filters": [
          {
            "op": "regex",
            "expr": "^ge-",
            "extra": "property"
          },
          {
            "op": "regex",
            "expr": "^xe"
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "{\"op\":\"regex\",\"expr\":\"^ge-\",\"extra_property\":\"extra_value\"} has more than 2 properties",
      "python_error": "{'op': 'regex', 'expr': '^ge-', 'extra_property': 'extra_value'} has too many properties\n\nFailed validating 'maxProperties' in schema['properties']['interface_filters']['items']:\n    {'$id': '/properties/interface_filters/items',\n     'type': 'object',\n     'title': 'Filter',\n     'maxProperties': 2,\n     'additionalProperties': False,\n     'properties': {'op': {'enum': ['regex', 'startwith'],\n                           'title': 'Filter Type'},\n                    'expr': {'type': 'string',\n                             'title': 'Filter Expression'}},\n     'default': {},\n     'examples': [{'op': 'regex', 'expr': '^ge-'},\n                  {'op': 'regex', 'expr': '^xe'}]}\n\nOn instance['interface_filters'][0]:\n    {'op': 'regex', 'expr': '^ge-', 'extra_property': 'extra_value'}",
      "data": {
        "interface_type": "physical",
        "interface_filters": [
          {
            "op": "regex",
            "expr": "^ge-",
            "extra_property": "extra_value"
          }
        ]
      }
    }
  ]
}