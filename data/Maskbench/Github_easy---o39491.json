{
  "description": "sample Github_easy/o39491.json",
  "meta": {
    "full_size": 439,
    "stripped_size": 410,
    "features": [
      "items"
    ],
    "raw_features": [
      "$schema",
      "properties",
      "required",
      "type",
      "type:array",
      "type:integer",
      "type:number",
      "type:object"
    ]
  },
  "schema": {
    "title": "TrainingSet Schema",
    "$schema": "http://json-schema.org/draft-04/schema#",
    "type": "object",
    "properties": {
      "error": {
        "type": "number"
      },
      "targetError": {
        "type": "number"
      },
      "epochs": {
        "type": "integer"
      },
      "maxEpochs": {
        "type": "integer"
      },
      "trainingItems": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "input": {
              "type": "array"
            },
            "expectedOutput": {
              "type": "array"
            }
          },
          "required": [
            "input"
          ]
        }
      }
    },
    "required": [
      "maxEpochs",
      "targetError",
      "trainingItems"
    ]
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "error": 0.5,
        "targetError": 0.01,
        "epochs": 100,
        "maxEpochs": 1000,
        "trainingItems": [
          {
            "input": [
              1,
              2,
              3
            ],
            "expectedOutput": [
              4,
              5,
              6
            ]
          },
          {
            "input": [
              7,
              8,
              9
            ],
            "expectedOutput": [
              10,
              11,
              12
            ]
          },
          {
            "input": [
              13,
              14,
              15
            ]
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"not an array\" is not of type \"array\"",
      "python_error": "'not an array' is not of type 'array'\n\nFailed validating 'type' in schema['properties']['trainingItems']['items']['properties']['expectedOutput']:\n    {'type': 'array'}\n\nOn instance['trainingItems'][2]['expectedOutput']:\n    'not an array'",
      "data": {
        "error": 0.5,
        "targetError": 0.01,
        "epochs": 100,
        "maxEpochs": 1000,
        "trainingItems": [
          {
            "input": [
              1,
              2,
              3
            ],
            "expectedOutput": [
              4,
              5,
              6
            ]
          },
          {
            "input": [
              7,
              8,
              9
            ],
            "expectedOutput": [
              10,
              11,
              12
            ]
          },
          {
            "input": [
              13,
              14,
              15
            ],
            "expectedOutput": "not an array"
          }
        ]
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "error": 0.5,
        "targetError": 0.01,
        "epochs": 100,
        "maxEpochs": 1000,
        "trainingItems": [
          {
            "input": [
              1,
              2,
              3
            ],
            "expectedOutput": [
              4,
              5,
              6
            ]
          },
          {
            "input": [
              7,
              8,
              9
            ],
            "expectedOutput": [
              10,
              11,
              12
            ]
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"input\" is a required property",
      "python_error": "'input' is a required property\n\nFailed validating 'required' in schema['properties']['trainingItems']['items']:\n    {'type': 'object',\n     'properties': {'input': {'type': 'array'},\n                    'expectedOutput': {'type': 'array'}},\n     'required': ['input']}\n\nOn instance['trainingItems'][0]:\n    {'expectedOutput': [4, 5, 6]}",
      "data": {
        "error": 0.5,
        "targetError": 0.01,
        "epochs": 100,
        "maxEpochs": 1000,
        "trainingItems": [
          {
            "expectedOutput": [
              4,
              5,
              6
            ]
          }
        ]
      }
    }
  ]
}