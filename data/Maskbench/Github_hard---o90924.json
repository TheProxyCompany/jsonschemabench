{
  "description": "sample Github_hard/o90924.json",
  "meta": {
    "full_size": 3633,
    "stripped_size": 2770,
    "features": [
      "$ref",
      "@minmaxInteger",
      "@minmaxItems",
      "@minmaxNumber",
      "additionalProperties",
      "additionalProperties:object",
      "allOf",
      "anyOf",
      "enum",
      "format",
      "format:regex",
      "format:uri",
      "format:uri-reference",
      "items",
      "oneOf"
    ],
    "raw_features": [
      "definitions",
      "exclusiveMinimum",
      "minItems",
      "minimum",
      "properties",
      "type",
      "type:[]",
      "type:array",
      "type:boolean",
      "type:integer",
      "type:number",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "default": {},
    "definitions": {
      "nonNegativeInteger": {
        "minimum": 0,
        "type": "integer"
      },
      "nonNegativeIntegerDefault0": {
        "allOf": [
          {
            "$ref": "#/definitions/nonNegativeInteger"
          },
          {
            "default": 0
          }
        ]
      },
      "schemaArray": {
        "items": {
          "$ref": "#"
        },
        "minItems": 1,
        "type": "array"
      },
      "simpleTypes": {
        "enum": [
          "array",
          "boolean",
          "integer",
          "null",
          "number",
          "object",
          "string"
        ]
      },
      "stringArray": {
        "default": [],
        "items": {
          "type": "string"
        },
        "type": "array",
        "_uniqueItems": true
      }
    },
    "properties": {
      "$id": {
        "format": "uri-reference",
        "type": "string"
      },
      "$ref": {
        "format": "uri-reference",
        "type": "string"
      },
      "$schema": {
        "format": "uri",
        "type": "string"
      },
      "additionalItems": {
        "$ref": "#"
      },
      "additionalProperties": {
        "$ref": "#"
      },
      "allOf": {
        "$ref": "#/definitions/schemaArray"
      },
      "anyOf": {
        "$ref": "#/definitions/schemaArray"
      },
      "const": {},
      "contains": {
        "$ref": "#"
      },
      "default": {},
      "definitions": {
        "additionalProperties": {
          "$ref": "#"
        },
        "default": {},
        "type": "object"
      },
      "dependencies": {
        "additionalProperties": {
          "anyOf": [
            {
              "$ref": "#"
            },
            {
              "$ref": "#/definitions/stringArray"
            }
          ]
        },
        "type": "object"
      },
      "deprecationMessage": {
        "description": "Non-standard: deprecation message for a property, if it is deprecated",
        "type": "string"
      },
      "description": {
        "type": "string"
      },
      "enum": {
        "minItems": 1,
        "type": "array",
        "_uniqueItems": true
      },
      "examples": {
        "items": {},
        "type": "array"
      },
      "exclusiveMaximum": {
        "type": "number"
      },
      "exclusiveMinimum": {
        "type": "number"
      },
      "format": {
        "type": "string"
      },
      "items": {
        "anyOf": [
          {
            "$ref": "#"
          },
          {
            "$ref": "#/definitions/schemaArray"
          }
        ],
        "default": {}
      },
      "maxItems": {
        "$ref": "#/definitions/nonNegativeInteger"
      },
      "maxLength": {
        "$ref": "#/definitions/nonNegativeInteger"
      },
      "maxProperties": {
        "$ref": "#/definitions/nonNegativeInteger"
      },
      "maximum": {
        "type": "number"
      },
      "minItems": {
        "$ref": "#/definitions/nonNegativeIntegerDefault0"
      },
      "minLength": {
        "$ref": "#/definitions/nonNegativeIntegerDefault0"
      },
      "minProperties": {
        "$ref": "#/definitions/nonNegativeIntegerDefault0"
      },
      "minimum": {
        "type": "number"
      },
      "multipleOf": {
        "exclusiveMinimum": 0,
        "type": "number"
      },
      "not": {
        "$ref": "#"
      },
      "oneOf": {
        "$ref": "#/definitions/schemaArray"
      },
      "pattern": {
        "format": "regex",
        "type": "string"
      },
      "patternProperties": {
        "additionalProperties": {
          "$ref": "#"
        },
        "default": {},
        "type": "object"
      },
      "properties": {
        "additionalProperties": {
          "$ref": "#"
        },
        "default": {},
        "type": "object"
      },
      "propertyNames": {
        "$ref": "#"
      },
      "required": {
        "$ref": "#/definitions/stringArray"
      },
      "title": {
        "type": "string"
      },
      "type": {
        "anyOf": [
          {
            "$ref": "#/definitions/simpleTypes"
          },
          {
            "items": {
              "$ref": "#/definitions/simpleTypes"
            },
            "minItems": 1,
            "type": "array",
            "_uniqueItems": true
          }
        ]
      },
      "_uniqueItems": {
        "default": false,
        "type": "boolean"
      },
      "x-intellij-case-insensitive": {
        "description": "If 'true', enum options for this value will be checked case-insensitively",
        "type": "boolean"
      },
      "x-intellij-enum-metadata": {
        "additionalProperties": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {
                "deprecationMessage": {
                  "description": "Deprecation message for an enum value",
                  "type": "string"
                },
                "description": {
                  "description": "Description for an enum value",
                  "type": "string"
                }
              },
              "type": "object"
            }
          ]
        },
        "description": "Provides description and deprecation data for enum values",
        "type": "object"
      },
      "x-intellij-html-description": {
        "description": "Description in html format",
        "type": "string"
      },
      "x-intellij-language-injection": {
        "description": "IntelliJ language ID for language injection",
        "oneOf": [
          {
            "type": "string"
          },
          {
            "properties": {
              "language": {
                "description": "Language ID. Invoke completion to see all options",
                "type": "string"
              },
              "prefix": {
                "description": "Code fragment that will be appended before the user code",
                "type": "string"
              },
              "suffix": {
                "description": "Code fragment that will be appended after the user code",
                "type": "string"
              }
            },
            "type": "object"
          }
        ]
      }
    },
    "title": "Core schema meta-schema",
    "type": [
      "object",
      "boolean"
    ]
  },
  "tests": [
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "$id": "https://example.com/schema",
        "$schema": "https://json-schema.org/draft-07/schema#",
        "title": "Example Schema",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the person"
          },
          "age": {
            "type": "integer",
            "minimum": 0,
            "description": "The age of the person"
          },
          "address": {
            "type": "object",
            "properties": {
              "street": {
                "type": "string"
              },
              "city": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "zip": {
                "type": "string"
              }
            },
            "required": [
              "street",
              "city",
              "state",
              "zip"
            ]
          }
        },
        "required": [
          "name",
          "age",
          "address"
        ],
        "additionalProperties": false,
        "dependencies": {
          "name": {
            "oneOf": [
              {
                "required": [
                  "age"
                ]
              }
            ]
          }
        },
        "examples": [
          {
            "name": "John Doe",
            "age": 30,
            "address": {
              "street": "123 Main St",
              "city": "Anytown",
              "state": "CA",
              "zip": "12345"
            }
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on minItems keyword",
      "valid": false,
      "rust_error": "{\"oneOf\":[]} is not valid under any of the schemas listed in the 'anyOf' keyword",
      "python_error": "[] should be non-empty\n\nFailed validating 'minItems' in schema[0]['properties']['oneOf']:\n    {'items': {'$ref': '#'}, 'minItems': 1, 'type': 'array'}\n\nOn instance['oneOf']:\n    []",
      "data": {
        "$id": "https://example.com/schema",
        "$schema": "https://json-schema.org/draft-07/schema#",
        "title": "Example Schema",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the person"
          },
          "age": {
            "type": "integer",
            "minimum": 0,
            "description": "The age of the person"
          },
          "address": {
            "type": "object",
            "properties": {
              "street": {
                "type": "string"
              },
              "city": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "zip": {
                "type": "string"
              }
            },
            "required": [
              "street",
              "city",
              "state",
              "zip"
            ]
          }
        },
        "required": [
          "name",
          "age",
          "address"
        ],
        "additionalProperties": false,
        "dependencies": {
          "name": {
            "oneOf": []
          }
        },
        "examples": [
          {
            "name": "John Doe",
            "age": 30,
            "address": {
              "street": "123 Main St",
              "city": "Anytown",
              "state": "CA",
              "zip": "12345"
            }
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on format keyword",
      "valid": false,
      "rust_error": "\"invalid Id\" is not a \"uri-reference\"",
      "python_error": "'invalid Id' is not a 'uri-reference'\n\nFailed validating 'format' in schema['properties']['$id']:\n    {'format': 'uri-reference', 'type': 'string'}\n\nOn instance['$id']:\n    'invalid Id'",
      "data": {
        "$id": "invalid Id",
        "$schema": "https://json-schema.org/draft-07/schema#",
        "title": "Example Schema",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the person"
          },
          "age": {
            "type": "integer",
            "minimum": 0,
            "description": "The age of the person"
          },
          "address": {
            "type": "object",
            "properties": {
              "street": {
                "type": "string"
              },
              "city": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "zip": {
                "type": "string"
              }
            },
            "required": [
              "street",
              "city",
              "state",
              "zip"
            ]
          }
        },
        "required": [
          "name",
          "age",
          "address"
        ],
        "additionalProperties": false,
        "dependencies": {
          "name": {
            "oneOf": [
              {
                "required": [
                  "age"
                ]
              }
            ]
          }
        },
        "examples": [
          {
            "name": "John Doe",
            "age": 30,
            "address": {
              "street": "123 Main St",
              "city": "Anytown",
              "state": "CA",
              "zip": "12345"
            }
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on anyOf keyword",
      "valid": false,
      "rust_error": "{\"oneOf\":[1,{\"required\":[\"age\"]}]} is not valid under any of the schemas listed in the 'anyOf' keyword",
      "python_error": "1 is not of type 'object', 'boolean'\n\nFailed validating 'type' in schema[0]['properties']['oneOf']['items']:\n    {'default': {},\n     'definitions': {'nonNegativeInteger': {'minimum': 0,\n                                            'type': 'integer'},\n                     'nonNegativeIntegerDefault0': {'allOf': [{'$ref': '#/definitions/nonNegativeInteger'},\n                                                              {'default': 0}]},\n                     'schemaArray': {'items': {'$ref': '#'},\n                                     'minItems': 1,\n                                     'type': 'array'},\n                     'simpleTypes': {'enum': ['array',\n                                              'boolean',\n                                              'integer',\n                                              'null',\n                                              'number',\n                                              'object',\n                                              'string']},\n                     'st.. (12515 more)",
      "data": {
        "$id": "https://example.com/schema",
        "$schema": "https://json-schema.org/draft-07/schema#",
        "title": "Example Schema",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the person"
          },
          "age": {
            "type": "integer",
            "minimum": 0,
            "description": "The age of the person"
          },
          "address": {
            "type": "object",
            "properties": {
              "street": {
                "type": "string"
              },
              "city": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "zip": {
                "type": "string"
              }
            },
            "required": [
              "street",
              "city",
              "state",
              "zip"
            ]
          }
        },
        "required": [
          "name",
          "age",
          "address"
        ],
        "additionalProperties": false,
        "dependencies": {
          "name": {
            "oneOf": [
              1,
              {
                "required": [
                  "age"
                ]
              }
            ]
          }
        },
        "examples": [
          {
            "name": "John Doe",
            "age": 30,
            "address": {
              "street": "123 Main St",
              "city": "Anytown",
              "state": "CA",
              "zip": "12345"
            }
          }
        ]
      }
    }
  ]
}