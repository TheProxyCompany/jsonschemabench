{
  "description": "sample Github_hard/o77304.json",
  "meta": {
    "full_size": 10042,
    "stripped_size": 4970,
    "features": [
      "$ref",
      "@minmaxLength",
      "@siblingKeys",
      "additionalItems",
      "additionalProperties",
      "additionalProperties:object",
      "allOf",
      "anyOf",
      "format",
      "format:email",
      "format:uri",
      "items",
      "not",
      "pattern",
      "patternProperties"
    ],
    "raw_features": [
      "$schema",
      "_boolSchema",
      "definitions",
      "maxLength",
      "minLength",
      "properties",
      "required",
      "type",
      "type:[]",
      "type:array",
      "type:boolean",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "JSON schema for NPM package.json files",
    "definitions": {
      "person": {
        "description": "A person who has been involved in creating or maintaining this package",
        "type": [
          "object",
          "string"
        ],
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string"
          },
          "url": {
            "type": "string",
            "format": "uri"
          },
          "email": {
            "type": "string",
            "format": "email"
          }
        }
      },
      "bundledDependency": {
        "description": "Array of package names that will be bundled when publishing the package.",
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      "dependency": {
        "description": "Dependencies are specified with a simple hash of package name to version range. The version range is a string which has one or more space-separated descriptors. Dependencies can also be identified with a tarball or git URL.",
        "type": "object",
        "additionalProperties": {
          "type": "string"
        }
      },
      "scriptsInstallAfter": {
        "description": "Run AFTER the package is installed",
        "type": "string"
      },
      "scriptsPublishAfter": {
        "description": "Run AFTER the package is published",
        "type": "string"
      },
      "scriptsRestart": {
        "description": "Run by the 'npm restart' command. Note: 'npm restart' will run the stop and start scripts if no restart script is provided.",
        "type": "string"
      },
      "scriptsStart": {
        "description": "Run by the 'npm start' command",
        "type": "string"
      },
      "scriptsStop": {
        "description": "Run by the 'npm stop' command",
        "type": "string"
      },
      "scriptsTest": {
        "description": "Run by the 'npm test' command",
        "type": "string"
      },
      "scriptsUninstallBefore": {
        "description": "Run BEFORE the package is uninstalled",
        "type": "string"
      },
      "scriptsVersionBefore": {
        "description": "Run BEFORE bump the package version",
        "type": "string"
      },
      "coreProperties": {
        "type": "object",
        "patternProperties": {
          "^_": {
            "description": "Any property starting with _ is valid.",
            "additionalProperties": true,
            "additionalItems": true
          }
        },
        "properties": {
          "name": {
            "description": "The name of the package.",
            "type": "string",
            "maxLength": 214,
            "minLength": 1,
            "pattern": "^(?:@[a-z0-9-~][a-z0-9-._~]*/)?[a-z0-9-~][a-z0-9-._~]*$"
          },
          "version": {
            "description": "Version must be parseable by node-semver, which is bundled with npm as a dependency.",
            "type": "string"
          },
          "description": {
            "description": "This helps people discover your package, as it's listed in 'npm search'.",
            "type": "string"
          },
          "keywords": {
            "description": "This helps people discover your package as it's listed in 'npm search'.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "homepage": {
            "description": "The url to the project homepage.",
            "type": "string",
            "format": "uri"
          },
          "bugs": {
            "description": "The url to your project's issue tracker and / or the email address to which issues should be reported. These are helpful for people who encounter issues with your package.",
            "type": [
              "object",
              "string"
            ],
            "properties": {
              "url": {
                "type": "string",
                "description": "The url to your project's issue tracker.",
                "format": "uri"
              },
              "email": {
                "type": "string",
                "description": "The email address to which issues should be reported.",
                "format": "email"
              }
            }
          },
          "license": {
            "type": "string",
            "description": "You should specify a license for your package so that people know how they are permitted to use it, and any restrictions you're placing on it."
          },
          "licenses": {
            "description": "You should specify a license for your package so that people know how they are permitted to use it, and any restrictions you're placing on it.",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string"
                },
                "url": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          },
          "author": {
            "$ref": "#/definitions/person"
          },
          "contributors": {
            "description": "A list of people who contributed to this package.",
            "type": "array",
            "items": {
              "$ref": "#/definitions/person"
            }
          },
          "maintainers": {
            "description": "A list of people who maintains this package.",
            "type": "array",
            "items": {
              "$ref": "#/definitions/person"
            }
          },
          "files": {
            "description": "The 'files' field is an array of files to include in your project. If you name a folder in the array, then it will also include the files inside that folder.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "main": {
            "description": "The main field is a module ID that is the primary entry point to your program.",
            "type": "string"
          },
          "bin": {
            "type": [
              "string",
              "object"
            ],
            "additionalProperties": {
              "type": "string"
            }
          },
          "types": {
            "description": "Set the types property to point to your bundled declaration file",
            "type": "string"
          },
          "typings": {
            "description": "Note that the \"typings\" field is synonymous with \"types\", and could be used as well.",
            "type": "string"
          },
          "man": {
            "type": [
              "array",
              "string"
            ],
            "description": "Specify either a single file or an array of filenames to put in place for the man program to find.",
            "items": {
              "type": "string"
            }
          },
          "directories": {
            "type": "object",
            "properties": {
              "bin": {
                "description": "If you specify a 'bin' directory, then all the files in that folder will be used as the 'bin' hash.",
                "type": "string"
              },
              "doc": {
                "description": "Put markdown files in here. Eventually, these will be displayed nicely, maybe, someday.",
                "type": "string"
              },
              "example": {
                "description": "Put example scripts in here. Someday, it might be exposed in some clever way.",
                "type": "string"
              },
              "lib": {
                "description": "Tell people where the bulk of your library is. Nothing special is done with the lib folder in any way, but it's useful meta info.",
                "type": "string"
              },
              "man": {
                "description": "A folder that is full of man pages. Sugar to generate a 'man' array by walking the folder.",
                "type": "string"
              },
              "test": {
                "type": "string"
              }
            }
          },
          "repository": {
            "description": "Specify the place where your code lives. This is helpful for people who want to contribute.",
            "type": [
              "object",
              "string"
            ],
            "properties": {
              "type": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            }
          },
          "scripts": {
            "description": "The 'scripts' member is an object hash of script commands that are run at various times in the lifecycle of your package. The key is the lifecycle event, and the value is the command to run at that point.",
            "type": "object",
            "properties": {
              "prepublish": {
                "type": "string",
                "description": "Run BEFORE the package is published (Also run on local npm install without any arguments)"
              },
              "prepare": {
                "type": "string",
                "description": "Run both BEFORE the package is packed and published, and on local npm install without any arguments. This is run AFTER prepublish, but BEFORE prepublishOnly"
              },
              "prepublishOnly": {
                "type": "string",
                "description": "Run BEFORE the package is prepared and packed, ONLY on npm publish"
              },
              "prepack": {
                "type": "string",
                "description": "run BEFORE a tarball is packed (on npm pack, npm publish, and when installing git dependencies)"
              },
              "postpack": {
                "type": "string",
                "description": "Run AFTER the tarball has been generated and moved to its final destination."
              },
              "publish": {
                "$ref": "#/definitions/scriptsPublishAfter"
              },
              "postpublish": {
                "$ref": "#/definitions/scriptsPublishAfter"
              },
              "preinstall": {
                "type": "string",
                "description": "Run BEFORE the package is installed"
              },
              "install": {
                "$ref": "#/definitions/scriptsInstallAfter"
              },
              "postinstall": {
                "$ref": "#/definitions/scriptsInstallAfter"
              },
              "preuninstall": {
                "$ref": "#/definitions/scriptsUninstallBefore"
              },
              "uninstall": {
                "$ref": "#/definitions/scriptsUninstallBefore"
              },
              "postuninstall": {
                "type": "string",
                "description": "Run AFTER the package is uninstalled"
              },
              "preversion": {
                "$ref": "#/definitions/scriptsVersionBefore"
              },
              "version": {
                "$ref": "#/definitions/scriptsVersionBefore"
              },
              "postversion": {
                "type": "string",
                "description": "Run AFTER bump the package version"
              },
              "pretest": {
                "$ref": "#/definitions/scriptsTest"
              },
              "test": {
                "$ref": "#/definitions/scriptsTest"
              },
              "posttest": {
                "$ref": "#/definitions/scriptsTest"
              },
              "prestop": {
                "$ref": "#/definitions/scriptsStop"
              },
              "stop": {
                "$ref": "#/definitions/scriptsStop"
              },
              "poststop": {
                "$ref": "#/definitions/scriptsStop"
              },
              "prestart": {
                "$ref": "#/definitions/scriptsStart"
              },
              "start": {
                "$ref": "#/definitions/scriptsStart"
              },
              "poststart": {
                "$ref": "#/definitions/scriptsStart"
              },
              "prerestart": {
                "$ref": "#/definitions/scriptsRestart"
              },
              "restart": {
                "$ref": "#/definitions/scriptsRestart"
              },
              "postrestart": {
                "$ref": "#/definitions/scriptsRestart"
              }
            },
            "additionalProperties": {
              "type": "string"
            }
          },
          "config": {
            "description": "A 'config' hash can be used to set configuration parameters used in package scripts that persist across upgrades.",
            "type": "object",
            "additionalProperties": true
          },
          "dependencies": {
            "$ref": "#/definitions/dependency"
          },
          "devDependencies": {
            "$ref": "#/definitions/dependency"
          },
          "optionalDependencies": {
            "$ref": "#/definitions/dependency"
          },
          "peerDependencies": {
            "$ref": "#/definitions/dependency"
          },
          "resolutions": {
            "$ref": "#/definitions/dependency"
          },
          "engines": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "engineStrict": {
            "type": "boolean"
          },
          "os": {
            "description": "You can specify which operating systems your module will run on",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "cpu": {
            "description": "If your code only runs on certain cpu architectures, you can specify which ones.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "preferGlobal": {
            "type": "boolean",
            "description": "If your package is primarily a command-line application that should be installed globally, then set this value to true to provide a warning if it is installed locally."
          },
          "private": {
            "type": "boolean",
            "description": "If set to true, then npm will refuse to publish it."
          },
          "publishConfig": {
            "type": "object",
            "additionalProperties": true
          },
          "dist": {
            "type": "object",
            "properties": {
              "shasum": {
                "type": "string"
              },
              "tarball": {
                "type": "string"
              }
            }
          },
          "readme": {
            "type": "string"
          },
          "module": {
            "description": "An ECMAScript module ID that is the primary entry point to your program.",
            "type": "string"
          },
          "esnext": {
            "description": "A module ID with untranspiled code that is the primary entry point to your program.",
            "type": [
              "string",
              "object"
            ],
            "properties": {
              "main": {
                "type": "string"
              },
              "browser": {
                "type": "string"
              }
            },
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "jspmDefinition": {
        "properties": {
          "jspm": {
            "$ref": "#/definitions/coreProperties"
          }
        }
      }
    },
    "allOf": [
      {
        "$ref": "#/definitions/coreProperties"
      },
      {
        "$ref": "#/definitions/jspmDefinition"
      },
      {
        "anyOf": [
          {
            "properties": {
              "bundleDependencies": {
                "$ref": "#/definitions/bundledDependency"
              }
            },
            "not": {
              "properties": {
                "bundledDependencies": {}
              },
              "required": [
                "bundledDependencies"
              ]
            }
          },
          {
            "properties": {
              "bundledDependencies": {
                "$ref": "#/definitions/bundledDependency"
              }
            },
            "not": {
              "properties": {
                "bundleDependencies": {}
              },
              "required": [
                "bundleDependencies"
              ]
            }
          }
        ]
      }
    ]
  },
  "tests": [
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "name": "example-package",
        "version": "1.0.0",
        "description": "This is an example package",
        "keywords": [
          "example",
          "package"
        ],
        "homepage": "https://example.com",
        "bugs": {
          "url": "https://example.com/bugs",
          "email": "bugs@example.com"
        },
        "license": "MIT",
        "author": {
          "name": "John Doe",
          "url": "https://johndoe.com",
          "email": "john@example.com"
        },
        "contributors": [
          {
            "name": "Jane Doe",
            "url": "https://janedoe.com",
            "email": "jane@example.com"
          }
        ],
        "maintainers": [
          {
            "name": "John Doe",
            "url": "https://johndoe.com",
            "email": "john@example.com"
          }
        ],
        "files": [
          "index.js",
          "lib/"
        ],
        "main": "index.js",
        "bin": {
          "example": "bin/example.js"
        },
        "types": "types/index.d.ts",
        "typings": "types/index.d.ts",
        "man": [
          "man/example.1"
        ],
        "directories": {
          "bin": "bin",
          "doc": "doc",
          "example": "example",
          "lib": "lib",
          "man": "man",
          "test": "test"
        },
        "repository": {
          "type": "git",
          "url": "https://github.com/example/example-package.git"
        },
        "scripts": {
          "prepublish": "npm run build",
          "prepare": "npm run build",
          "prepublishOnly": "npm run build",
          "prepack": "npm run build",
          "postpack": "npm run build",
          "publish": "npm run build",
          "postpublish": "npm run build",
          "preinstall": "npm run build",
          "install": "npm run build",
          "postinstall": "npm run build",
          "preuninstall": "npm run build",
          "uninstall": "npm run build",
          "postuninstall": "npm run build",
          "preversion": "npm run build",
          "version": "npm run build",
          "postversion": "npm run build",
          "pretest": "npm run build",
          "test": "npm run build",
          "posttest": "npm run build",
          "prestop": "npm run build",
          "stop": "npm run build",
          "poststop": "npm run build",
          "prestart": "npm run build",
          "start": "npm run build",
          "poststart": "npm run build",
          "prerestart": "npm run build",
          "restart": "npm run build",
          "postrestart": "npm run build"
        },
        "config": {
          "example": "example"
        },
        "dependencies": {
          "example-dependency": "^1.0.0"
        },
        "devDependencies": {
          "example-dev-dependency": "^1.0.0"
        },
        "optionalDependencies": {
          "example-optional-dependency": "^1.0.0"
        },
        "peerDependencies": {
          "example-peer-dependency": "^1.0.0"
        },
        "resolutions": {
          "example-resolution": "^1.0.0"
        },
        "engines": {
          "node": "^14.17.0"
        },
        "engineStrict": true,
        "os": [
          "linux",
          "darwin",
          "win32"
        ],
        "cpu": [
          "x64",
          "ia32"
        ],
        "preferGlobal": true,
        "private": false,
        "publishConfig": {
          "example": "example"
        },
        "dist": {
          "shasum": "example-shasum",
          "tarball": "example-tarball"
        },
        "readme": "README.md",
        "module": "index.js",
        "esnext": {
          "main": "index.js",
          "browser": "index.js"
        },
        "bundledDependencies": [
          "example-bundled-dependency"
        ]
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "name": "example-package",
        "version": "1.0.0",
        "description": "This is an example package",
        "keywords": [
          "example",
          "package"
        ],
        "homepage": "https://example.com",
        "bugs": {
          "url": "https://example.com/bugs",
          "email": "bugs@example.com"
        },
        "license": "MIT",
        "author": {
          "name": "John Doe",
          "url": "https://johndoe.com",
          "email": "john@example.com"
        },
        "contributors": [
          {
            "name": "Jane Doe",
            "url": "https://janedoe.com",
            "email": "jane@example.com"
          }
        ],
        "maintainers": [
          {
            "name": "John Doe",
            "url": "https://johndoe.com",
            "email": "john@example.com"
          }
        ],
        "files": [
          "index.js",
          "lib/"
        ],
        "main": "index.js",
        "bin": {
          "example": "bin/example.js"
        },
        "types": "types/index.d.ts",
        "typings": "types/index.d.ts",
        "man": [
          "man/example.1"
        ],
        "directories": {
          "bin": "bin",
          "doc": "docs",
          "example": "examples",
          "lib": "lib",
          "man": "man",
          "test": "tests"
        },
        "repository": {
          "type": "git",
          "url": "https://github.com/example/example-package.git"
        },
        "scripts": {
          "start": "node index.js",
          "test": "mocha tests/",
          "prepublish": "npm run build",
          "postpublish": "npm run deploy"
        },
        "config": {
          "port": 3000
        },
        "dependencies": {
          "express": "^4.17.1"
        },
        "devDependencies": {
          "mocha": "^9.2.1"
        },
        "optionalDependencies": {
          "redis": "^3.1.2"
        },
        "peerDependencies": {
          "react": "^17.0.2"
        },
        "resolutions": {
          "express": "^4.17.1"
        },
        "engines": {
          "node": "^14.17.0"
        },
        "engineStrict": true,
        "os": [
          "linux",
          "darwin"
        ],
        "cpu": [
          "x64",
          "arm64"
        ],
        "preferGlobal": true,
        "private": false,
        "publishConfig": {
          "registry": "https://registry.npmjs.org/"
        },
        "dist": {
          "shasum": "1234567890abcdef",
          "tarball": "https://registry.npmjs.org/example-package/-/example-package-1.0.0.tgz"
        },
        "readme": "README.md",
        "module": "index.mjs",
        "esnext": {
          "main": "index.mjs",
          "browser": "index.browser.mjs"
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on minLength keyword or maxLength keyword",
      "valid": false,
      "rust_error": "\"\" is shorter than 1 character",
      "python_error": "'' should be non-empty\n\nFailed validating 'minLength' in schema['allOf'][0]['properties']['name']:\n    {'description': 'The name of the package.',\n     'type': 'string',\n     'maxLength': 214,\n     'minLength': 1,\n     'pattern': '^(?:@[a-z0-9-~][a-z0-9-._~]*/)?[a-z0-9-~][a-z0-9-._~]*$'}\n\nOn instance['name']:\n    ''",
      "data": {
        "name": "",
        "version": "1.0.0",
        "description": "This is an example package",
        "keywords": [
          "example",
          "package"
        ],
        "homepage": "https://example.com",
        "bugs": {
          "url": "https://example.com/bugs",
          "email": "bugs@example.com"
        },
        "license": "MIT",
        "author": {
          "name": "John Doe",
          "url": "https://johndoe.com",
          "email": "john@example.com"
        },
        "contributors": [
          {
            "name": "Jane Doe",
            "url": "https://janedoe.com",
            "email": "jane@example.com"
          }
        ],
        "maintainers": [
          {
            "name": "John Doe",
            "url": "https://johndoe.com",
            "email": "john@example.com"
          }
        ],
        "files": [
          "index.js",
          "lib/"
        ],
        "main": "index.js",
        "bin": {
          "example": "bin/example.js"
        },
        "types": "types/index.d.ts",
        "typings": "types/index.d.ts",
        "man": [
          "man/example.1"
        ],
        "directories": {
          "bin": "bin",
          "doc": "docs",
          "example": "examples",
          "lib": "lib",
          "man": "man",
          "test": "tests"
        },
        "repository": {
          "type": "git",
          "url": "https://github.com/example/example-package.git"
        },
        "scripts": {
          "start": "node index.js",
          "test": "mocha tests/",
          "prepublish": "npm run build",
          "postpublish": "npm run deploy"
        },
        "config": {
          "port": 3000
        },
        "dependencies": {
          "express": "^4.17.1"
        },
        "devDependencies": {
          "mocha": "^9.2.1"
        },
        "optionalDependencies": {
          "redis": "^3.1.2"
        },
        "peerDependencies": {
          "react": "^17.0.2"
        },
        "resolutions": {
          "express": "^4.17.1"
        },
        "engines": {
          "node": "^14.17.0"
        },
        "engineStrict": true,
        "os": [
          "linux",
          "darwin"
        ],
        "cpu": [
          "x64",
          "arm64"
        ],
        "preferGlobal": true,
        "private": false,
        "publishConfig": {
          "registry": "https://registry.npmjs.org/"
        },
        "dist": {
          "shasum": "1234567890abcdef",
          "tarball": "https://registry.npmjs.org/example-package/-/example-package-1.0.0.tgz"
        },
        "readme": "README.md",
        "module": "index.mjs",
        "esnext": {
          "main": "index.mjs",
          "browser": "index.browser.mjs"
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on additionalItems keyword",
      "valid": false,
      "rust_error": "[] is not of type \"string\"",
      "python_error": "[] is not of type 'string'\n\nFailed validating 'type' in schema['allOf'][0]['properties']['keywords']['items']:\n    {'type': 'string'}\n\nOn instance['keywords'][2]:\n    []",
      "data": {
        "name": "example-package",
        "version": "1.0.0",
        "keywords": [
          "example",
          "package",
          []
        ],
        "homepage": "https://example.com",
        "bugs": {
          "url": "https://example.com/bugs",
          "email": "bugs@example.com"
        },
        "license": "MIT",
        "author": {
          "name": "John Doe",
          "url": "https://johndoe.com",
          "email": "john@example.com"
        },
        "maintainers": [
          {
            "name": "John Doe",
            "url": "https://johndoe.com",
            "email": "john@example.com"
          }
        ],
        "files": [
          "index.js",
          "lib/"
        ],
        "main": "index.js",
        "directories": {
          "bin": "bin",
          "doc": "docs",
          "example": "examples",
          "lib": "lib",
          "man": "man",
          "test": "tests",
          "extra": []
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on type keyword with an array of types",
      "valid": false,
      "rust_error": "123 is not of types \"object\", \"string\"",
      "python_error": "123 is not of type 'object', 'string'\n\nFailed validating 'type' in schema['allOf'][0]['properties']['author']:\n    {'description': 'A person who has been involved in creating or '\n                    'maintaining this package',\n     'type': ['object', 'string'],\n     'required': ['name'],\n     'properties': {'name': {'type': 'string'},\n                    'url': {'type': 'string', 'format': 'uri'},\n                    'email': {'type': 'string', 'format': 'email'}}}\n\nOn instance['author']:\n    123",
      "data": {
        "name": "example-package",
        "version": "1.0.0",
        "description": "This is an example package",
        "keywords": [
          "example",
          "package"
        ],
        "homepage": "https://example.com",
        "bugs": {
          "url": "https://example.com/bugs",
          "email": "bugs@example.com"
        },
        "license": "MIT",
        "author": 123,
        "# Changed to integer to test 'type' keyword with array of types (object and string) in the schema": "contributors",
        "maintainers": [
          {
            "name": "John Doe",
            "url": "https://johndoe.com",
            "email": "john@example.com"
          }
        ],
        "files": [
          "index.js",
          "lib/"
        ],
        "main": "index.js",
        "bin": {
          "example": "bin/example.js"
        },
        "types": "types/index.d.ts",
        "typings": "types/index.d.ts",
        "man": [
          "man/example.1"
        ],
        "directories": {
          "bin": "bin",
          "doc": "docs",
          "example": "examples",
          "lib": "lib",
          "man": "man",
          "test": "tests"
        },
        "repository": {
          "type": "git",
          "url": "https://github.com/example/example-package.git"
        },
        "scripts": {
          "start": "node index.js",
          "test": "mocha tests/",
          "prepublish": "npm run build",
          "postpublish": "npm run deploy"
        },
        "config": {
          "port": 3000
        },
        "dependencies": {
          "express": "^4.17.1"
        },
        "devDependencies": {
          "mocha": "^9.2.1"
        },
        "optionalDependencies": {
          "redis": "^3.1.2"
        },
        "peerDependencies": {
          "react": "^17.0.2"
        },
        "resolutions": {
          "express": "^4.17.1"
        },
        "engines": {
          "node": "^14.17.0"
        },
        "engineStrict": true,
        "os": [
          "linux",
          "darwin"
        ],
        "cpu": [
          "x64",
          "arm64"
        ],
        "preferGlobal": true,
        "private": false,
        "publishConfig": {
          "registry": "https://registry.npmjs.org/"
        },
        "dist": {
          "shasum": "1234567890abcdef",
          "tarball": "https://registry.npmjs.org/example-package/-/example-package-1.0.0.tgz"
        },
        "readme": "README.md",
        "module": "index.mjs",
        "esnext": {
          "main": "index.mjs",
          "browser": "index.browser.mjs"
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on allOf keyword",
      "valid": false,
      "rust_error": "{\"name\":\"example-package\",\"version\":\"1.0.0\",\"description\":\"This is an example package\",\"keywords\":[\"example\",\"package\"],\"homepage\":\"https://example.com\",\"bugs\":{\"url\":\"https://example.com/bugs\",\"email\":\"bugs@example.com\"},\"license\":\"MIT\",\"author\":{\"name\":\"John Doe\",\"url\":\"https://johndoe.com\",\"email\":\"john@example.com\"},\"contributors\":[{\"name\":\"Jane Doe\",\"url\":\"https://janedoe.com\",\"email\":\"jane@example.com\"}],\"maintainers\":[{\"name\":\"John Doe\",\"url\":\"https://johndoe.com\",\"email\":\"john@example.com\"}],\"files\":[\"index.js\",\"lib/\"],\"main\":\"index.js\",\"bin\":{\"example\":\"bin/example.js\"},\"types\":\"types/index.d.ts\",\"typings\":\"types/index.d.ts\",\"man\":[\"man/example.1\"],\"directories\":{\"bin\":\"bin\",\"doc\":\"docs\",\"example\":\"examples\",\"lib\":\"lib\",\"man\":\"man\",\"test\":\"tests\"},\"repository\":{\"type\":\"git\",\"url\":\"https://github.com/example/example-package.git\"},\"scripts\":{\"start\":\"node index.js\",\"test\":\"mocha tests/\",\"prepublish\":\"npm run build\",\"postpublish\":\"npm run deploy\"},\"config\":{\"port\":3000},\"dependencies\":{\"express\":\"^4.17... (706 more)",
      "python_error": "{'name': 'example-package', 'version': '1.0.0', 'description': 'This is an example package', 'keywords': ['example', 'package'], 'homepage': 'https://example.com', 'bugs': {'url': 'https://example.com/bugs', 'email': 'bugs@example.com'}, 'license': 'MIT', 'author': {'name': 'John Doe', 'url': 'https://johndoe.com', 'email': 'john@example.com'}, 'contributors': [{'name': 'Jane Doe', 'url': 'https://janedoe.com', 'email': 'jane@example.com'}], 'maintainers': [{'name': 'John Doe', 'url': 'https://johndoe.com', 'email': 'john@example.com'}], 'files': ['index.js', 'lib/'], 'main': 'index.js', 'bin': {'example': 'bin/example.js'}, 'types': 'types/index.d.ts', 'typings': 'types/index.d.ts', 'man': ['man/example.1'], 'directories': {'bin': 'bin', 'doc': 'docs', 'example': 'examples', 'lib': 'lib', 'man': 'man', 'test': 'tests'}, 'repository': {'type': 'git', 'url': 'https://github.com/example/example-package.git'}, 'scripts': {'start': 'node index.js', 'test': 'mocha tests/', 'prepublish': 'npm run build', 'postpubli.. (3648 more)",
      "data": {
        "name": "example-package",
        "version": "1.0.0",
        "description": "This is an example package",
        "keywords": [
          "example",
          "package"
        ],
        "homepage": "https://example.com",
        "bugs": {
          "url": "https://example.com/bugs",
          "email": "bugs@example.com"
        },
        "license": "MIT",
        "author": {
          "name": "John Doe",
          "url": "https://johndoe.com",
          "email": "john@example.com"
        },
        "contributors": [
          {
            "name": "Jane Doe",
            "url": "https://janedoe.com",
            "email": "jane@example.com"
          }
        ],
        "maintainers": [
          {
            "name": "John Doe",
            "url": "https://johndoe.com",
            "email": "john@example.com"
          }
        ],
        "files": [
          "index.js",
          "lib/"
        ],
        "main": "index.js",
        "bin": {
          "example": "bin/example.js"
        },
        "types": "types/index.d.ts",
        "typings": "types/index.d.ts",
        "man": [
          "man/example.1"
        ],
        "directories": {
          "bin": "bin",
          "doc": "docs",
          "example": "examples",
          "lib": "lib",
          "man": "man",
          "test": "tests"
        },
        "repository": {
          "type": "git",
          "url": "https://github.com/example/example-package.git"
        },
        "scripts": {
          "start": "node index.js",
          "test": "mocha tests/",
          "prepublish": "npm run build",
          "postpublish": "npm run deploy"
        },
        "config": {
          "port": 3000
        },
        "dependencies": {
          "express": "^4.17.1"
        },
        "devDependencies": {
          "mocha": "^9.2.1"
        },
        "optionalDependencies": {
          "redis": "^3.1.2"
        },
        "peerDependencies": {
          "react": "^17.0.2"
        },
        "resolutions": {
          "express": "^4.17.1"
        },
        "engines": {
          "node": "^14.17.0"
        },
        "engineStrict": true,
        "os": [
          "linux",
          "darwin"
        ],
        "cpu": [
          "x64",
          "arm64"
        ],
        "preferGlobal": true,
        "private": false,
        "publishConfig": {
          "registry": "https://registry.npmjs.org/"
        },
        "dist": {
          "shasum": "1234567890abcdef",
          "tarball": "https://registry.npmjs.org/example-package/-/example-package-1.0.0.tgz"
        },
        "readme": "README.md",
        "module": "index.mjs",
        "esnext": {
          "main": "index.mjs",
          "browser": "index.browser.mjs"
        },
        "bundledDependencies": [
          "example"
        ],
        "bundleDependencies": [
          "example"
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on format keyword",
      "valid": false,
      "rust_error": "\"not a valid url\" is not a \"uri\"",
      "python_error": "'not a valid url' is not a 'uri'\n\nFailed validating 'format' in schema['allOf'][0]['properties']['homepage']:\n    {'description': 'The url to the project homepage.',\n     'type': 'string',\n     'format': 'uri'}\n\nOn instance['homepage']:\n    'not a valid url'",
      "data": {
        "name": "example-package",
        "version": "1.0.0",
        "description": "This is an example package",
        "keywords": [
          "example",
          "package"
        ],
        "homepage": "not a valid url",
        "bugs": {
          "url": "not a valid url",
          "email": "not a valid email"
        },
        "license": "MIT",
        "author": {
          "name": "John Doe",
          "url": "https://johndoe.com",
          "email": "john@example.com"
        },
        "contributors": [
          {
            "name": "Jane Doe",
            "url": "https://janedoe.com",
            "email": "jane@example.com"
          }
        ],
        "maintainers": [
          {
            "name": "John Doe",
            "url": "https://johndoe.com",
            "email": "john@example.com"
          }
        ],
        "files": [
          "index.js",
          "lib/"
        ],
        "main": "index.js",
        "bin": {
          "example": "bin/example.js"
        },
        "types": "types/index.d.ts",
        "typings": "types/index.d.ts",
        "man": [
          "man/example.1"
        ],
        "directories": {
          "bin": "bin",
          "doc": "docs",
          "example": "examples",
          "lib": "lib",
          "man": "man",
          "test": "tests"
        },
        "repository": {
          "type": "git",
          "url": "not a valid url"
        },
        "scripts": {
          "start": "node index.js",
          "test": "mocha tests/",
          "prepublish": "npm run build",
          "postpublish": "npm run deploy"
        },
        "config": {
          "port": 3000
        },
        "dependencies": {
          "express": "^4.17.1"
        },
        "devDependencies": {
          "mocha": "^9.2.1"
        },
        "optionalDependencies": {
          "redis": "^3.1.2"
        },
        "peerDependencies": {
          "react": "^17.0.2"
        },
        "resolutions": {
          "express": "^4.17.1"
        },
        "engines": {
          "node": "^14.17.0"
        },
        "engineStrict": true,
        "os": [
          "linux",
          "darwin"
        ],
        "cpu": [
          "x64",
          "arm64"
        ],
        "preferGlobal": true,
        "private": false,
        "publishConfig": {
          "registry": "not a valid url"
        },
        "dist": {
          "shasum": "not a valid shasum",
          "tarball": "not a valid url"
        },
        "readme": "README.md",
        "module": "index.mjs",
        "esnext": {
          "main": "index.mjs",
          "browser": "index.browser.mjs"
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on anyOf keyword",
      "valid": false,
      "rust_error": "{\"bundleDependencies\":[\"express\"],\"bundledDependencies\":[\"redis\"]} is not valid under any of the schemas listed in the 'anyOf' keyword",
      "python_error": "{'bundleDependencies': ['express'], 'bundledDependencies': ['redis']} is not valid under any of the given schemas\n\nFailed validating 'anyOf' in schema['allOf'][2]:\n    {'anyOf': [{'properties': {'bundleDependencies': {'$ref': '#/definitions/bundledDependency'}},\n                'not': {'properties': {'bundledDependencies': {}},\n                        'required': ['bundledDependencies']}},\n               {'properties': {'bundledDependencies': {'$ref': '#/definitions/bundledDependency'}},\n                'not': {'properties': {'bundleDependencies': {}},\n                        'required': ['bundleDependencies']}}]}\n\nOn instance:\n    {'bundleDependencies': ['express'], 'bundledDependencies': ['redis']}",
      "data": {
        "bundleDependencies": [
          "express"
        ],
        "bundledDependencies": [
          "redis"
        ]
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "null is not of type \"string\"",
      "python_error": "{'name': 'example-package', 'version': '1.0.0', 'description': 'This is an example package', 'keywords': ['example', 'package'], 'homepage': 'https://example.com', 'bugs': {'url': 'https://example.com/bugs', 'email': 'bugs@example.com'}, 'license': 'MIT', 'author': {'name': 'John Doe', 'url': 'https://johndoe.com', 'email': 'john@example.com'}, 'contributors': [{'name': 'Jane Doe', 'url': 'https://janedoe.com', 'email': 'jane@example.com'}], 'maintainers': [{'name': 'John Doe', 'url': 'https://johndoe.com', 'email': 'john@example.com'}], 'files': ['index.js', 'lib/'], 'main': 'index.js', 'bin': {'example': 'bin/example.js'}, 'types': 'types/index.d.ts', 'typings': 'types/index.d.ts', 'man': ['man/example.1'], 'directories': {'bin': 'bin', 'doc': 'docs', 'example': 'examples', 'lib': 'lib', 'man': 'man', 'test': 'tests'}, 'repository': {'type': 'git', 'url': 'https://github.com/example/example-package.git'}, 'scripts': {'start': 'node index.js', 'test': 'mocha tests/', 'prepublish': 'npm run build', 'postpubli.. (3793 more)",
      "data": {
        "name": "example-package",
        "version": "1.0.0",
        "description": "This is an example package",
        "keywords": [
          "example",
          "package"
        ],
        "homepage": "https://example.com",
        "bugs": {
          "url": "https://example.com/bugs",
          "email": "bugs@example.com"
        },
        "license": "MIT",
        "author": {
          "name": "John Doe",
          "url": "https://johndoe.com",
          "email": "john@example.com"
        },
        "contributors": [
          {
            "name": "Jane Doe",
            "url": "https://janedoe.com",
            "email": "jane@example.com"
          }
        ],
        "maintainers": [
          {
            "name": "John Doe",
            "url": "https://johndoe.com",
            "email": "john@example.com"
          }
        ],
        "files": [
          "index.js",
          "lib/"
        ],
        "main": "index.js",
        "bin": {
          "example": "bin/example.js"
        },
        "types": "types/index.d.ts",
        "typings": "types/index.d.ts",
        "man": [
          "man/example.1"
        ],
        "directories": {
          "bin": "bin",
          "doc": "docs",
          "example": "examples",
          "lib": "lib",
          "man": "man",
          "test": "tests"
        },
        "repository": {
          "type": "git",
          "url": "https://github.com/example/example-package.git"
        },
        "scripts": {
          "start": "node index.js",
          "test": "mocha tests/",
          "prepublish": "npm run build",
          "postpublish": "npm run deploy",
          "invalidScript": null
        },
        "config": {
          "port": "not a number"
        },
        "dependencies": {
          "express": "^4.17.1"
        },
        "devDependencies": {
          "mocha": "^9.2.1"
        },
        "optionalDependencies": {
          "redis": "^3.1.2"
        },
        "peerDependencies": {
          "react": "^17.0.2"
        },
        "resolutions": {
          "express": "^4.17.1"
        },
        "engines": {
          "node": "^14.17.0"
        },
        "engineStrict": "not a boolean",
        "os": "not an array",
        "cpu": "not an array",
        "preferGlobal": "not a boolean",
        "private": "not a boolean",
        "publishConfig": {
          "registry": "https://registry.npmjs.org/"
        },
        "dist": {
          "shasum": "not a string",
          "tarball": "https://registry.npmjs.org/example-package/-/example-package-1.0.0.tgz"
        },
        "readme": "README.md",
        "module": "index.mjs",
        "esnext": {
          "main": "index.mjs",
          "browser": "index.browser.mjs"
        },
        "bundledDependencies": [
          "not a string"
        ],
        "bundleDependencies": [
          "not a string"
        ]
      }
    }
  ]
}