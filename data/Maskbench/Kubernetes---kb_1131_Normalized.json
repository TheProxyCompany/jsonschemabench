{
  "description": "sample Kubernetes/kb_1131_Normalized.json",
  "meta": {
    "full_size": 1275,
    "stripped_size": 300,
    "features": [],
    "raw_features": [
      "properties",
      "required",
      "type",
      "type:[]",
      "type:boolean",
      "type:null",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "description": "VolumeMount describes a mounting of a Volume within a container.",
    "properties": {
      "mountPath": {
        "description": "Path within the container at which the volume should be mounted.  Must not contain ':'.",
        "type": [
          "string",
          "null"
        ]
      },
      "mountPropagation": {
        "description": "mountPropagation determines how mounts are propagated from the host to container and the other way around. When not set, MountPropagationNone is used. This field is beta in 1.10.",
        "type": [
          "string",
          "null"
        ]
      },
      "name": {
        "description": "This must match the Name of a Volume.",
        "type": [
          "string",
          "null"
        ]
      },
      "readOnly": {
        "description": "Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.",
        "type": [
          "boolean",
          "null"
        ]
      },
      "subPath": {
        "description": "Path within the volume from which the container's volume should be mounted. Defaults to \"\" (volume's root).",
        "type": [
          "string",
          "null"
        ]
      },
      "subPathExpr": {
        "description": "Expanded path within the volume from which the container's volume should be mounted. Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment. Defaults to \"\" (volume's root). SubPathExpr and SubPath are mutually exclusive.",
        "type": [
          "string",
          "null"
        ]
      }
    },
    "required": [
      "name",
      "mountPath"
    ],
    "type": "object"
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "mountPath": "/mnt/data",
        "mountPropagation": "Bidirectional",
        "name": "my-volume",
        "readOnly": false,
        "subPath": "path/to/subdir"
      }
    },
    {
      "description": "llama-70b generated negative; focus on type keyword with an array of types",
      "valid": false,
      "rust_error": "123 is not of types \"boolean\", \"null\"",
      "python_error": "123 is not of type 'boolean', 'null'\n\nFailed validating 'type' in schema['properties']['readOnly']:\n    {'description': 'Mounted read-only if true, read-write otherwise '\n                    '(false or unspecified). Defaults to false.',\n     'type': ['boolean', 'null']}\n\nOn instance['readOnly']:\n    123",
      "data": {
        "mountPath": "/mnt/data",
        "mountPropagation": "Bidirectional",
        "name": "my-volume",
        "readOnly": 123,
        "subPath": "path/to/subdir"
      }
    },
    {
      "description": "llama-70b generated negative; focus on type keyword with an array of types",
      "valid": false,
      "rust_error": "\"not a boolean\" is not of types \"boolean\", \"null\"",
      "python_error": "'not a boolean' is not of type 'boolean', 'null'\n\nFailed validating 'type' in schema['properties']['readOnly']:\n    {'description': 'Mounted read-only if true, read-write otherwise '\n                    '(false or unspecified). Defaults to false.',\n     'type': ['boolean', 'null']}\n\nOn instance['readOnly']:\n    'not a boolean'",
      "data": {
        "mountPath": "/mnt/data",
        "mountPropagation": "Bidirectional",
        "name": "my-volume",
        "readOnly": "not a boolean",
        "subPath": "path/to/subdir"
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "mountPath": "/mnt/data",
        "name": "example-volume",
        "readOnly": false,
        "subPath": "example/subpath"
      }
    },
    {
      "description": "llama-70b generated negative; focus on type keyword with an array of types",
      "valid": false,
      "rust_error": "123 is not of types \"null\", \"string\"",
      "python_error": "123 is not of type 'string', 'null'\n\nFailed validating 'type' in schema['properties']['mountPath']:\n    {'description': 'Path within the container at which the volume should '\n                    \"be mounted.  Must not contain ':'.\",\n     'type': ['string', 'null']}\n\nOn instance['mountPath']:\n    123",
      "data": {
        "name": "example-volume",
        "mountPath": 123,
        "readOnly": false,
        "subPath": "example/subpath",
        "subPathExpr": "example/subpath"
      }
    }
  ]
}