{
  "description": "sample JsonSchemaStore/devinit.schema-6.0.json",
  "meta": {
    "full_size": 2023,
    "stripped_size": 1287,
    "features": [
      "$ref",
      "additionalProperties",
      "anyOf",
      "enum",
      "items"
    ],
    "raw_features": [
      "$schema",
      "_boolSchema",
      "allOf:trivial",
      "anyOf:trivial",
      "definitions",
      "id",
      "properties",
      "required",
      "type",
      "type:null",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "additionalProperties": false,
    "definitions": {
      "runObject": {
        "type": "object",
        "required": [
          "tool"
        ],
        "properties": {
          "tool": {
            "title": "The tool name",
            "description": "The name of the tool to run.",
            "type": "string",
            "enum": [
              "apt-get-install",
              "azurecli-login",
              "choco-install",
              "choco-upgrade",
              "dotnet-restore",
              "dotnet-toolinstall",
              "enable-iis",
              "msi-install",
              "npm-install",
              "nuget-restore",
              "require-azureartifactscredentialprovider",
              "require-azurecli",
              "require-choco",
              "require-dotnetcoresdk",
              "require-dotnetframeworksdk",
              "require-gitsubmodule",
              "require-mssql",
              "require-nodejs",
              "require-npm",
              "require-nuget",
              "require-psmodule",
              "require-vcpkg",
              "require-vscomponent",
              "require-winget",
              "set-env",
              "vcpkg-install",
              "windowsfeature-disable",
              "windowsfeature-enable",
              "windowsfeature-list",
              "winget-install",
              "wsl-install"
            ]
          },
          "input": {
            "title": "The tool input",
            "description": "The input varies by tool. For example, the required version number, the package-id, the input source file or source directory.",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "additionalOptions": {
            "title": "Additional options",
            "description": "Additional Options to be appended to the tool's command line.",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "comments": {
            "title": "Comments",
            "description": "Comments for this tool item. For documentation only; ignored by the tool.",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "additionalProperties": false
      }
    },
    "id": "https://json.schemastore.org/devinit.schema-6.0.json",
    "properties": {
      "$schema": {
        "type": "string"
      },
      "run": {
        "title": "The list of tools to run",
        "description": "'devinit.exe init' runs this list of tools sequentially. See also 'devinit.exe run'.",
        "items": {
          "allOf": [
            {
              "$ref": "#/definitions/runObject"
            }
          ],
          "anyOf": [
            {
              "$ref": "#/definitions/runObject"
            }
          ]
        }
      },
      "comments": {
        "title": "Comments",
        "description": "Comments for this file. For documentation only; ignored by the tool.",
        "anyOf": [
          {
            "type": "string"
          },
          {
            "type": "null"
          }
        ]
      }
    },
    "required": [
      "run"
    ],
    "title": "Codespaces DevInit Configuration",
    "type": "object"
  },
  "tests": [
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "$schema": "https://json.schemastore.org/devinit.schema-6.0.json",
        "run": [
          {
            "tool": "dotnet-restore",
            "input": null,
            "additionalOptions": null,
            "comments": "Restore NuGet packages for the .NET project."
          },
          {
            "tool": "dotnet-toolinstall",
            "input": "dotnet-format",
            "additionalOptions": "--global",
            "comments": "Install the dotnet-format tool globally."
          },
          {
            "tool": "npm-install",
            "input": null,
            "additionalOptions": null,
            "comments": "Install npm packages for the project."
          },
          {
            "tool": "require-nodejs",
            "input": "14.17.0",
            "additionalOptions": null,
            "comments": "Require Node.js version 14.17.0."
          }
        ],
        "comments": "This is a sample devinit configuration file."
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "$schema": "https://json.schemastore.org/devinit.schema-6.0.json",
        "run": [
          {
            "tool": "dotnet-restore",
            "input": null,
            "additionalOptions": null,
            "comments": "Restore NuGet packages for the .NET project"
          },
          {
            "tool": "dotnet-toolinstall",
            "input": "dotnet-format",
            "additionalOptions": "--global",
            "comments": "Install the dotnet-format tool globally"
          },
          {
            "tool": "npm-install",
            "input": null,
            "additionalOptions": null,
            "comments": "Install Node.js dependencies"
          },
          {
            "tool": "require-nodejs",
            "input": "14",
            "additionalOptions": null,
            "comments": "Require Node.js version 14"
          }
        ],
        "comments": "This is a sample DevInit configuration file."
      }
    },
    {
      "description": "llama-70b generated negative; focus on anyOf keyword",
      "valid": false,
      "rust_error": "123 is not valid under any of the schemas listed in the 'anyOf' keyword",
      "python_error": "123 is not valid under any of the given schemas\n\nFailed validating 'anyOf' in schema[0]['properties']['input']:\n    {'title': 'The tool input',\n     'description': 'The input varies by tool. For example, the required '\n                    'version number, the package-id, the input source file '\n                    'or source directory.',\n     'anyOf': [{'type': 'string'}, {'type': 'null'}]}\n\nOn instance['input']:\n    123",
      "data": {
        "$schema": "https://json.schemastore.org/devinit.schema-6.0.json",
        "run": [
          {
            "tool": "dotnet-restore",
            "input": null,
            "additionalOptions": null,
            "comments": "Restore NuGet packages for the .NET project"
          },
          {
            "tool": "dotnet-toolinstall",
            "input": 123,
            "additionalOptions": "--global",
            "comments": "Install the dotnet-format tool globally"
          },
          {
            "tool": "npm-install",
            "input": null,
            "additionalOptions": null,
            "comments": "Install Node.js dependencies"
          },
          {
            "tool": "require-nodejs",
            "input": "14",
            "additionalOptions": null,
            "comments": "Require Node.js version 14"
          }
        ],
        "comments": "This is a sample DevInit configuration file."
      }
    }
  ]
}