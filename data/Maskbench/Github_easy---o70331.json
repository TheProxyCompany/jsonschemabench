{
  "description": "sample Github_easy/o70331.json",
  "meta": {
    "full_size": 242,
    "stripped_size": 210,
    "features": [
      "additionalProperties",
      "pattern"
    ],
    "raw_features": [
      "_boolSchema",
      "properties",
      "required",
      "type",
      "type:integer",
      "type:string"
    ]
  },
  "schema": {
    "additionalProperties": false,
    "properties": {
      "algorithm": {
        "max": 2,
        "min": 1,
        "type": "integer"
      },
      "fingerprint": {
        "pattern": "^[0-9A-Fa-f]{40}$",
        "type": "string"
      },
      "type": {
        "max": 1,
        "min": 1,
        "type": "integer"
      }
    },
    "required": [
      "algorithm",
      "type",
      "fingerprint"
    ]
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "algorithm": 1,
        "fingerprint": "0123456789ABCDEF0123456789ABCDEF01234567",
        "type": 1
      }
    },
    {
      "description": "llama-70b generated negative; focus on pattern keyword",
      "valid": false,
      "rust_error": "\"0123456789ABCDEF0123456789ABCDEF0123456G\" does not match \"^[0-9A-Fa-f]{40}$\"",
      "python_error": "'0123456789ABCDEF0123456789ABCDEF0123456G' does not match '^[0-9A-Fa-f]{40}$'\n\nFailed validating 'pattern' in schema['properties']['fingerprint']:\n    {'pattern': '^[0-9A-Fa-f]{40}$', 'type': 'string'}\n\nOn instance['fingerprint']:\n    '0123456789ABCDEF0123456789ABCDEF0123456G'",
      "data": {
        "algorithm": 1,
        "fingerprint": "0123456789ABCDEF0123456789ABCDEF0123456G",
        "type": 1
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"0123456789ABCDEF0123456789ABCDEF0123456\" does not match \"^[0-9A-Fa-f]{40}$\"",
      "python_error": "Additional properties are not allowed ('extraProperty' was unexpected)\n\nFailed validating 'additionalProperties' in schema:\n    {'additionalProperties': False,\n     'properties': {'algorithm': {'max': 2, 'min': 1, 'type': 'integer'},\n                    'fingerprint': {'pattern': '^[0-9A-Fa-f]{40}$',\n                                    'type': 'string'},\n                    'type': {'max': 1, 'min': 1, 'type': 'integer'}},\n     'required': ['algorithm', 'type', 'fingerprint']}\n\nOn instance:\n    {'algorithm': 1,\n     'fingerprint': '0123456789ABCDEF0123456789ABCDEF0123456',\n     'type': 1,\n     'extraProperty': 'extraValue'}",
      "data": {
        "algorithm": 1,
        "fingerprint": "0123456789ABCDEF0123456789ABCDEF0123456",
        "type": 1,
        "extraProperty": "extraValue"
      }
    },
    {
      "description": "llama-70b generated negative; focus on pattern keyword",
      "valid": false,
      "rust_error": "\"0123456789ABCDEF0123456789ABCDEF0123456\" does not match \"^[0-9A-Fa-f]{40}$\"",
      "python_error": "'0123456789ABCDEF0123456789ABCDEF0123456' does not match '^[0-9A-Fa-f]{40}$'\n\nFailed validating 'pattern' in schema['properties']['fingerprint']:\n    {'pattern': '^[0-9A-Fa-f]{40}$', 'type': 'string'}\n\nOn instance['fingerprint']:\n    '0123456789ABCDEF0123456789ABCDEF0123456'",
      "data": {
        "algorithm": 1,
        "fingerprint": "0123456789ABCDEF0123456789ABCDEF0123456",
        "type": 1
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "algorithm": 1,
        "fingerprint": "0123456789ABCDEF0123456789ABCDEF01234567",
        "type": 1
      }
    },
    {
      "description": "llama-70b generated negative; focus on pattern keyword",
      "valid": false,
      "rust_error": "\"0123456789ABCDEF0123456789ABCDEF0123456G\" does not match \"^[0-9A-Fa-f]{40}$\"",
      "python_error": "'0123456789ABCDEF0123456789ABCDEF0123456G' does not match '^[0-9A-Fa-f]{40}$'\n\nFailed validating 'pattern' in schema['properties']['fingerprint']:\n    {'pattern': '^[0-9A-Fa-f]{40}$', 'type': 'string'}\n\nOn instance['fingerprint']:\n    '0123456789ABCDEF0123456789ABCDEF0123456G'",
      "data": {
        "algorithm": 1,
        "fingerprint": "0123456789ABCDEF0123456789ABCDEF0123456G",
        "type": 1
      }
    }
  ]
}