{
  "description": "sample Github_hard/o21318.json",
  "meta": {
    "full_size": 6930,
    "stripped_size": 5121,
    "features": [
      "$ref",
      "@minmaxItems",
      "additionalItems",
      "additionalProperties",
      "anyOf",
      "enum",
      "format",
      "format:date-time",
      "format:uri",
      "items",
      "pattern"
    ],
    "raw_features": [
      "$schema",
      "_boolSchema",
      "anyOf:trivial",
      "definitions",
      "minItems",
      "properties",
      "required",
      "type",
      "type:[]",
      "type:array",
      "type:boolean",
      "type:null",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "type": "object",
    "required": [
      "base_path",
      "details",
      "document_type",
      "publishing_app",
      "rendering_app",
      "routes",
      "schema_name",
      "title"
    ],
    "additionalProperties": false,
    "properties": {
      "access_limited": {
        "$ref": "#/definitions/access_limited"
      },
      "analytics_identifier": {
        "$ref": "#/definitions/analytics_identifier"
      },
      "auth_bypass_ids": {
        "description": "A list of ids that will allow access to this item for non-authenticated users",
        "$ref": "#/definitions/guid_list"
      },
      "base_path": {
        "$ref": "#/definitions/absolute_path"
      },
      "bulk_publishing": {
        "type": "boolean"
      },
      "change_note": {
        "type": [
          "null",
          "string"
        ]
      },
      "description": {
        "$ref": "#/definitions/description_optional"
      },
      "details": {
        "$ref": "#/definitions/details"
      },
      "document_type": {
        "type": "string",
        "enum": [
          "person"
        ]
      },
      "first_published_at": {
        "$ref": "#/definitions/first_published_at"
      },
      "last_edited_at": {
        "description": "Last time when the content received a major or minor update.",
        "type": "string",
        "format": "date-time"
      },
      "links": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "policy_areas": {
            "description": "A largely deprecated tag currently only used to power email alerts.",
            "$ref": "#/definitions/guid_list"
          }
        }
      },
      "locale": {
        "$ref": "#/definitions/locale"
      },
      "need_ids": {
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      "phase": {
        "description": "The service design phase of this content item - https://www.gov.uk/service-manual/phases",
        "type": "string",
        "enum": [
          "alpha",
          "beta",
          "live"
        ]
      },
      "previous_version": {
        "type": "string"
      },
      "public_updated_at": {
        "$ref": "#/definitions/public_updated_at"
      },
      "publishing_app": {
        "$ref": "#/definitions/publishing_app_name"
      },
      "redirects": {
        "type": "array",
        "additionalItems": false,
        "items": {}
      },
      "rendering_app": {
        "$ref": "#/definitions/rendering_app"
      },
      "routes": {
        "$ref": "#/definitions/routes"
      },
      "schema_name": {
        "type": "string",
        "enum": [
          "person"
        ]
      },
      "title": {
        "$ref": "#/definitions/title"
      },
      "update_type": {
        "$ref": "#/definitions/update_type"
      }
    },
    "definitions": {
      "description": {
        "type": "string"
      },
      "absolute_path": {
        "description": "A path only. Query string and/or fragment are not allowed.",
        "type": "string",
        "pattern": "^/(([a-zA-Z0-9._~!$&'()*+,;=:@-]|%[0-9a-fA-F]{2})+(/([a-zA-Z0-9._~!$&'()*+,;=:@-]|%[0-9a-fA-F]{2})*)*)?$"
      },
      "access_limited": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "auth_bypass_ids": {
            "description": "Deprecated: auth_bypass_ids should be sent as a separate field",
            "$ref": "#/definitions/guid_list"
          },
          "organisations": {
            "description": "A list of organisation content ids permitted access to this item",
            "$ref": "#/definitions/guid_list"
          },
          "users": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "analytics_identifier": {
        "description": "A short identifier we send to Google Analytics for multi-valued fields. This means we avoid the truncated values we would get if we sent the path or slug of eg organisations.",
        "anyOf": [
          {
            "type": "string"
          },
          {
            "type": "null"
          }
        ]
      },
      "body_html_and_govspeak": {
        "description": "The main content provided as HTML with the govspeak markdown it's rendered from",
        "anyOf": [
          {
            "$ref": "#/definitions/multiple_content_types"
          }
        ]
      },
      "description_optional": {
        "anyOf": [
          {
            "$ref": "#/definitions/description"
          },
          {
            "type": "null"
          }
        ]
      },
      "details": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "analytics_identifier": {
            "$ref": "#/definitions/analytics_identifier"
          },
          "body": {
            "$ref": "#/definitions/body_html_and_govspeak"
          },
          "full_name": {
            "description": "Name of the person, including titles and any letters, eg: 'Sir Lord Snoopy DOG'",
            "type": "string"
          },
          "image": {
            "$ref": "#/definitions/image"
          },
          "minister": {
            "type": "boolean"
          },
          "privy_counsellor": {
            "type": "boolean"
          }
        }
      },
      "first_published_at": {
        "description": "The date the content was first published.  Automatically determined by the publishing-api, unless overridden by the publishing application.",
        "type": "string",
        "format": "date-time"
      },
      "guid": {
        "type": "string",
        "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[1-5][a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$"
      },
      "guid_list": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/guid"
        },
        "_uniqueItems": true
      },
      "image": {
        "type": "object",
        "required": [
          "url"
        ],
        "additionalProperties": false,
        "properties": {
          "alt_text": {
            "type": "string"
          },
          "caption": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "credit": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "high_resolution_url": {
            "description": "URL to a high resolution version of the image, for use by third parties such as Twitter, Facebook or Slack. Used by the machine readable metadata component. Don't use this on user-facing web pages, as it might be very large.",
            "type": "string",
            "format": "uri"
          },
          "url": {
            "description": "URL to the image. The image should be in a suitable resolution for display on the page.",
            "type": "string",
            "format": "uri"
          }
        }
      },
      "locale": {
        "type": "string",
        "enum": [
          "ar",
          "az",
          "be",
          "bg",
          "bn",
          "cs",
          "cy",
          "da",
          "de",
          "dr",
          "el",
          "en",
          "es",
          "es-419",
          "et",
          "fa",
          "fi",
          "fr",
          "gd",
          "he",
          "hi",
          "hr",
          "hu",
          "hy",
          "id",
          "is",
          "it",
          "ja",
          "ka",
          "kk",
          "ko",
          "lt",
          "lv",
          "ms",
          "mt",
          "nl",
          "no",
          "pl",
          "ps",
          "pt",
          "ro",
          "ru",
          "si",
          "sk",
          "sl",
          "so",
          "sq",
          "sr",
          "sv",
          "sw",
          "ta",
          "th",
          "tk",
          "tr",
          "uk",
          "ur",
          "uz",
          "vi",
          "zh",
          "zh-hk",
          "zh-tw"
        ]
      },
      "multiple_content_types": {
        "type": "array",
        "items": {
          "type": "object",
          "required": [
            "content_type",
            "content"
          ],
          "additionalProperties": false,
          "properties": {
            "content": {
              "type": "string"
            },
            "content_type": {
              "type": "string"
            }
          }
        }
      },
      "public_updated_at": {
        "description": "When the content was last significantly changed (a major update). Shown to users.  Automatically determined by the publishing-api, unless overridden by the publishing application.",
        "type": "string",
        "format": "date-time"
      },
      "publishing_app_name": {
        "description": "The application that published this item.",
        "type": "string",
        "enum": [
          "calculators",
          "calendars",
          "collections-publisher",
          "contacts",
          "content-publisher",
          "content-tagger",
          "email-alert-frontend",
          "external-link-tracker",
          "feedback",
          "frontend",
          "government-frontend",
          "hmrc-manuals-api",
          "info-frontend",
          "licencefinder",
          "local-links-manager",
          "manuals-frontend",
          "manuals-publisher",
          "maslow",
          "performanceplatform-big-screen-view",
          "publisher",
          "rummager",
          "search-admin",
          "search-api",
          "service-manual-publisher",
          "share-sale-publisher",
          "short-url-manager",
          "smartanswers",
          "special-route-publisher",
          "specialist-publisher",
          "static",
          "tariff",
          "travel-advice-publisher",
          "whitehall"
        ]
      },
      "rendering_app": {
        "description": "The application that renders this item.",
        "type": "string",
        "enum": [
          "calculators",
          "calendars",
          "collections",
          "content-store",
          "email-alert-frontend",
          "email-campaign-frontend",
          "feedback",
          "finder-frontend",
          "frontend",
          "government-frontend",
          "info-frontend",
          "licencefinder",
          "manuals-frontend",
          "performanceplatform-big-screen-view",
          "rummager",
          "search-api",
          "service-manual-frontend",
          "smartanswers",
          "spotlight",
          "static",
          "tariff",
          "whitehall-admin",
          "whitehall-frontend"
        ]
      },
      "route": {
        "type": "object",
        "required": [
          "path",
          "type"
        ],
        "additionalProperties": false,
        "properties": {
          "path": {
            "type": "string"
          },
          "type": {
            "enum": [
              "prefix",
              "exact"
            ]
          }
        }
      },
      "routes": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/route"
        },
        "minItems": 1
      },
      "title": {
        "type": "string"
      },
      "update_type": {
        "enum": [
          "major",
          "minor",
          "republish"
        ]
      }
    }
  },
  "tests": [
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "base_path": "/person/john-doe",
        "details": {
          "analytics_identifier": "john-doe",
          "body": [
            {
              "content": "John Doe is a person.",
              "content_type": "text/html"
            },
            {
              "content": "John Doe is a person.",
              "content_type": "text/govspeak"
            }
          ],
          "full_name": "John Doe",
          "image": {
            "alt_text": "John Doe",
            "caption": null,
            "credit": null,
            "high_resolution_url": "https://example.com/high-resolution-image.jpg",
            "url": "https://example.com/image.jpg"
          },
          "minister": false,
          "privy_counsellor": false
        },
        "document_type": "person",
        "publishing_app": "whitehall",
        "rendering_app": "whitehall-frontend",
        "routes": [
          {
            "path": "/person/john-doe",
            "type": "exact"
          }
        ],
        "schema_name": "person",
        "title": "John Doe"
      }
    },
    {
      "description": "llama-70b generated negative; focus on pattern keyword",
      "valid": false,
      "rust_error": "\"/person/john-doe?query=string\" does not match \"^/(([a-zA-Z0-9._~!$&'()*+,;=:@-]|%[0-9a-fA-F]{2})+(/([a-zA-Z0-9._~!$&'()*+,;=:@-]|%[0-9a-fA-F]{2})*)*)?$\"",
      "python_error": "'/person/john-doe?query=string' does not match \"^/(([a-zA-Z0-9._~!$&'()*+,;=:@-]|%[0-9a-fA-F]{2})+(/([a-zA-Z0-9._~!$&'()*+,;=:@-]|%[0-9a-fA-F]{2})*)*)?$\"\n\nFailed validating 'pattern' in schema['properties']['base_path']:\n    {'description': 'A path only. Query string and/or fragment are not '\n                    'allowed.',\n     'type': 'string',\n     'pattern': \"^/(([a-zA-Z0-9._~!$&'()*+,;=:@-]|%[0-9a-fA-F]{2})+(/([a-zA-Z0-9._~!$&'()*+,;=:@-]|%[0-9a-fA-F]{2})*)*)?$\"}\n\nOn instance['base_path']:\n    '/person/john-doe?query=string'",
      "data": {
        "base_path": "/person/john-doe?query=string",
        "details": {
          "analytics_identifier": "john-doe",
          "body": [
            {
              "content": "John Doe is a person.",
              "content_type": "text/html"
            },
            {
              "content": "John Doe is a person.",
              "content_type": "text/govspeak"
            }
          ],
          "full_name": "John Doe",
          "image": {
            "alt_text": "John Doe",
            "caption": null,
            "credit": null,
            "high_resolution_url": "https://example.com/high-resolution-image.jpg",
            "url": "https://example.com/image.jpg"
          },
          "minister": false,
          "privy_counsellor": false
        },
        "document_type": "person",
        "publishing_app": "whitehall",
        "rendering_app": "whitehall-frontend",
        "routes": [
          {
            "path": "/person/john-doe",
            "type": "exact"
          }
        ],
        "schema_name": "person",
        "title": "John Doe"
      }
    },
    {
      "description": "llama-70b generated negative; focus on type keyword with an array of types",
      "valid": false,
      "rust_error": "[{\"content\":\"John Doe is a person.\",\"content_type\":\"text/html\"},{\"content\":null,\"content_type\":\"text/govspeak\"}] is not valid under any of the schemas listed in the 'anyOf' keyword",
      "python_error": "None is not of type 'string'\n\nFailed validating 'type' in schema[0]['items']['properties']['content']:\n    {'type': 'string'}\n\nOn instance[1]['content']:\n    None",
      "data": {
        "base_path": "/person/john-doe",
        "details": {
          "analytics_identifier": "john-doe",
          "body": [
            {
              "content": "John Doe is a person.",
              "content_type": "text/html"
            },
            {
              "content": null,
              "content_type": "text/govspeak"
            }
          ],
          "full_name": "John Doe",
          "image": {
            "alt_text": "John Doe",
            "caption": null,
            "credit": null,
            "high_resolution_url": "https://example.com/high-resolution-image.jpg",
            "url": "https://example.com/image.jpg"
          },
          "minister": false,
          "privy_counsellor": false
        },
        "document_type": "person",
        "publishing_app": "whitehall",
        "rendering_app": "whitehall-frontend",
        "routes": [
          {
            "path": "/person/john-doe",
            "type": "exact"
          }
        ],
        "schema_name": "person",
        "title": "John Doe"
      }
    },
    {
      "description": "llama-70b generated negative; focus on minItems keyword",
      "valid": false,
      "rust_error": "[] has less than 1 item",
      "python_error": "[] should be non-empty\n\nFailed validating 'minItems' in schema['properties']['routes']:\n    {'type': 'array',\n     'items': {'$ref': '#/definitions/route'},\n     'minItems': 1}\n\nOn instance['routes']:\n    []",
      "data": {
        "base_path": "/person/john-doe",
        "details": {
          "analytics_identifier": "john-doe",
          "body": [
            {
              "content": "John Doe is a person.",
              "content_type": "text/html"
            },
            {
              "content": "John Doe is a person.",
              "content_type": "text/govspeak"
            }
          ],
          "full_name": "John Doe",
          "image": {
            "alt_text": "John Doe",
            "caption": null,
            "credit": null,
            "high_resolution_url": "https://example.com/high-resolution-image.jpg",
            "url": "https://example.com/image.jpg"
          },
          "minister": false,
          "privy_counsellor": false
        },
        "document_type": "person",
        "publishing_app": "whitehall",
        "rendering_app": "whitehall-frontend",
        "routes": [],
        "schema_name": "person",
        "title": "John Doe"
      }
    },
    {
      "description": "llama-70b generated negative; focus on format keyword",
      "valid": false,
      "rust_error": "\"invalid_url\" is not a \"uri\"",
      "python_error": "'invalid_url' is not a 'uri'\n\nFailed validating 'format' in schema['properties']['details']['properties']['image']['properties']['high_resolution_url']:\n    {'description': 'URL to a high resolution version of the image, for '\n                    'use by third parties such as Twitter, Facebook or '\n                    'Slack. Used by the machine readable metadata '\n                    \"component. Don't use this on user-facing web pages, \"\n                    'as it might be very large.',\n     'type': 'string',\n     'format': 'uri'}\n\nOn instance['details']['image']['high_resolution_url']:\n    'invalid_url'",
      "data": {
        "base_path": "/person/john-doe",
        "details": {
          "analytics_identifier": "john-doe",
          "body": [
            {
              "content": "John Doe is a person.",
              "content_type": "text/html"
            },
            {
              "content": "John Doe is a person.",
              "content_type": "text/govspeak"
            }
          ],
          "full_name": "John Doe",
          "image": {
            "alt_text": "John Doe",
            "caption": null,
            "credit": null,
            "high_resolution_url": "invalid_url",
            "url": "https://example.com/image.jpg"
          },
          "minister": false,
          "privy_counsellor": false
        },
        "document_type": "person",
        "publishing_app": "whitehall",
        "rendering_app": "whitehall-frontend",
        "routes": [
          {
            "path": "/person/john-doe",
            "type": "exact"
          }
        ],
        "schema_name": "person",
        "title": "John Doe"
      }
    },
    {
      "description": "llama-70b generated negative; focus on anyOf keyword",
      "valid": false,
      "rust_error": "true is not valid under any of the schemas listed in the 'anyOf' keyword",
      "python_error": "True is not valid under any of the given schemas\n\nFailed validating 'anyOf' in schema['properties']['details']['properties']['analytics_identifier']:\n    {'description': 'A short identifier we send to Google Analytics for '\n                    'multi-valued fields. This means we avoid the '\n                    'truncated values we would get if we sent the path or '\n                    'slug of eg organisations.',\n     'anyOf': [{'type': 'string'}, {'type': 'null'}]}\n\nOn instance['details']['analytics_identifier']:\n    True",
      "data": {
        "base_path": "/person/john-doe",
        "details": {
          "analytics_identifier": true,
          "body": [
            {
              "content": "John Doe is a person.",
              "content_type": "text/html"
            },
            {
              "content": "John Doe is a person.",
              "content_type": "text/govspeak"
            }
          ],
          "full_name": "John Doe",
          "image": {
            "alt_text": "John Doe",
            "caption": null,
            "credit": null,
            "high_resolution_url": "https://example.com/high-resolution-image.jpg",
            "url": "https://example.com/image.jpg"
          },
          "minister": false,
          "privy_counsellor": false
        },
        "document_type": "person",
        "publishing_app": "whitehall",
        "rendering_app": "whitehall-frontend",
        "routes": [
          {
            "path": "/person/john-doe",
            "type": "exact"
          }
        ],
        "schema_name": "person",
        "title": "John Doe"
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"/person/john doe\" does not match \"^/(([a-zA-Z0-9._~!$&'()*+,;=:@-]|%[0-9a-fA-F]{2})+(/([a-zA-Z0-9._~!$&'()*+,;=:@-]|%[0-9a-fA-F]{2})*)*)?$\"",
      "python_error": "'/person/john doe' does not match \"^/(([a-zA-Z0-9._~!$&'()*+,;=:@-]|%[0-9a-fA-F]{2})+(/([a-zA-Z0-9._~!$&'()*+,;=:@-]|%[0-9a-fA-F]{2})*)*)?$\"\n\nFailed validating 'pattern' in schema['properties']['base_path']:\n    {'description': 'A path only. Query string and/or fragment are not '\n                    'allowed.',\n     'type': 'string',\n     'pattern': \"^/(([a-zA-Z0-9._~!$&'()*+,;=:@-]|%[0-9a-fA-F]{2})+(/([a-zA-Z0-9._~!$&'()*+,;=:@-]|%[0-9a-fA-F]{2})*)*)?$\"}\n\nOn instance['base_path']:\n    '/person/john doe'",
      "data": {
        "base_path": "/person/john doe",
        "details": {
          "analytics_identifier": "john-doe",
          "body": [
            {
              "content": "John Doe is a person.",
              "content_type": "text/html"
            },
            {
              "content": "John Doe is a person.",
              "content_type": "text/govspeak"
            }
          ],
          "full_name": "John Doe",
          "image": {
            "alt_text": "John Doe",
            "caption": null,
            "credit": null,
            "high_resolution_url": "https://example.com/high-resolution-image.jpg",
            "url": "https://example.com/image.jpg"
          },
          "minister": false,
          "privy_counsellor": false
        },
        "document_type": "person",
        "publishing_app": "whitehall",
        "rendering_app": "whitehall-frontend",
        "routes": [
          {
            "path": "/person/john-doe",
            "type": "exact"
          }
        ],
        "schema_name": "person",
        "title": "John Doe"
      }
    }
  ]
}