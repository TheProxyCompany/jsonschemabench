{
  "description": "sample Github_medium/o67351.json",
  "meta": {
    "full_size": 1083,
    "stripped_size": 424,
    "features": [
      "enum",
      "format",
      "format:tabs",
      "items"
    ],
    "raw_features": [
      "id",
      "properties",
      "required",
      "type",
      "type:array",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "name": "Application Policy",
    "options": {
      "disable_collapse": true,
      "disable_properties": true
    },
    "properties": {
      "_id": {
        "id": "root/id",
        "name": "Application Policy Id",
        "title": "Application Policy Id ",
        "type": "string"
      },
      "algorithm": {
        "_id": "root/algorithm",
        "enum": [
          "one-after-another",
          "all-at-once"
        ],
        "name": "Application Policy Algorithm",
        "title": "Application Policy Algorithm ",
        "type": "string"
      },
      "networkPartitions": {
        "_id": "root/networkPartitions",
        "format": "tabs",
        "items": {
          "_id": "root/networkPartitions/0",
          "name": "Network Partitions",
          "title": "Network Partitions ",
          "type": "string"
        },
        "name": "Network Partitions",
        "title": "Network Partitions ",
        "type": "array"
      },
      "properties": {
        "_id": "root/properties",
        "format": "tabs",
        "items": {
          "_id": "root/properties/0",
          "properties": {
            "name": {
              "_id": "root/properties/0/name",
              "title": "Name",
              "type": "string"
            },
            "value": {
              "_id": "root/properties/0/value",
              "title": "Value",
              "type": "string"
            }
          },
          "title": "Property",
          "type": "object"
        },
        "title": "Properties",
        "type": "array"
      }
    },
    "required": [
      "id",
      "algorithm",
      "networkPartitions",
      "properties"
    ],
    "title": "Application Policy Definition",
    "type": "object"
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "_id": "example-id",
        "algorithm": "one-after-another",
        "networkPartitions": [
          "partition-1",
          "partition-2",
          "partition-3"
        ],
        "properties": [
          {
            "name": "property-1",
            "value": "value-1"
          },
          {
            "name": "property-2",
            "value": "value-2"
          },
          {
            "name": "property-3",
            "value": "value-3"
          }
        ],
        "id": "example-id"
      }
    },
    {
      "description": "llama-70b generated negative; focus on format keyword",
      "valid": false,
      "rust_error": "\"partition-1\" is not of type \"array\"",
      "python_error": "'partition-1' is not of type 'array'\n\nFailed validating 'type' in schema['properties']['networkPartitions']:\n    {'_id': 'root/networkPartitions',\n     'format': 'tabs',\n     'items': {'_id': 'root/networkPartitions/0',\n               'name': 'Network Partitions',\n               'title': 'Network Partitions ',\n               'type': 'string'},\n     'name': 'Network Partitions',\n     'title': 'Network Partitions ',\n     'type': 'array'}\n\nOn instance['networkPartitions']:\n    'partition-1'",
      "data": {
        "_id": "example-id",
        "algorithm": "one-after-another",
        "networkPartitions": "partition-1",
        "properties": [
          {
            "name": "property-1",
            "value": "value-1"
          },
          {
            "name": "property-2",
            "value": "value-2"
          },
          {
            "name": "property-3",
            "value": "value-3"
          }
        ],
        "id": "example-id"
      }
    },
    {
      "description": "llama-70b generated negative; focus on format keyword",
      "valid": false,
      "rust_error": "12345 is not of type \"object\"",
      "python_error": "12345 is not of type 'object'\n\nFailed validating 'type' in schema['properties']['properties']['items']:\n    {'_id': 'root/properties/0',\n     'properties': {'name': {'_id': 'root/properties/0/name',\n                             'title': 'Name',\n                             'type': 'string'},\n                    'value': {'_id': 'root/properties/0/value',\n                              'title': 'Value',\n                              'type': 'string'}},\n     'title': 'Property',\n     'type': 'object'}\n\nOn instance['properties'][3]:\n    12345",
      "data": {
        "_id": "example-id",
        "algorithm": "one-after-another",
        "networkPartitions": [
          "partition-1",
          "partition-2",
          "partition-3"
        ],
        "properties": [
          {
            "name": "property-1",
            "value": "value-1"
          },
          {
            "name": "property-2",
            "value": "value-2"
          },
          {
            "name": "property-3",
            "value": "value-3"
          },
          12345
        ],
        "id": "example-id"
      }
    },
    {
      "description": "llama-70b generated negative; focus on format keyword",
      "valid": false,
      "rust_error": "2 is not of type \"string\"",
      "python_error": "2 is not of type 'string'\n\nFailed validating 'type' in schema['properties']['networkPartitions']['items']:\n    {'_id': 'root/networkPartitions/0',\n     'name': 'Network Partitions',\n     'title': 'Network Partitions ',\n     'type': 'string'}\n\nOn instance['networkPartitions'][1]:\n    2",
      "data": {
        "_id": "example-id",
        "algorithm": "one-after-another",
        "networkPartitions": [
          "partition-1",
          2,
          "partition-3"
        ],
        "properties": [
          {
            "name": "property-1",
            "value": "value-1"
          },
          {
            "name": "property-2",
            "value": "value-2"
          },
          {
            "name": "property-3",
            "value": "value-3"
          }
        ],
        "id": "example-id"
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"wrong-algorithm\" is not one of [\"one-after-another\",\"all-at-once\"]",
      "python_error": "'wrong-algorithm' is not one of ['one-after-another', 'all-at-once']\n\nFailed validating 'enum' in schema['properties']['algorithm']:\n    {'_id': 'root/algorithm',\n     'enum': ['one-after-another', 'all-at-once'],\n     'name': 'Application Policy Algorithm',\n     'title': 'Application Policy Algorithm ',\n     'type': 'string'}\n\nOn instance['algorithm']:\n    'wrong-algorithm'",
      "data": {
        "_id": "example-id",
        "algorithm": "wrong-algorithm",
        "networkPartitions": [
          "partition-1",
          "partition-2",
          "partition-3"
        ],
        "properties": [
          {
            "name": "property-1",
            "value": "value-1"
          },
          {
            "name": "property-2",
            "value": "value-2"
          },
          {
            "name": "property-3",
            "value": "value-3"
          }
        ],
        "id": "example-id",
        "additionalProperty": "this should not be here"
      }
    }
  ]
}