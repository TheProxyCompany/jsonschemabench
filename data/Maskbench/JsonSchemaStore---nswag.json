{
  "description": "sample JsonSchemaStore/nswag.json",
  "meta": {
    "full_size": 3739,
    "stripped_size": 3708,
    "features": [
      "$ref",
      "@siblingKeys",
      "enum",
      "items"
    ],
    "raw_features": [
      "$schema",
      "allOf:trivial",
      "definitions",
      "id",
      "properties",
      "type",
      "type:array",
      "type:boolean",
      "type:null",
      "type:number",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "definitions": {
      "swaggerGenerator": {
        "type": "object",
        "properties": {
          "webApiToSwagger": {
            "$ref": "#/definitions/webApiToSwagger"
          }
        }
      },
      "codeGenerators": {
        "type": "object",
        "properties": {
          "swaggerToTypeScriptClient": {
            "$ref": "#/definitions/swaggerToTypeScriptClient"
          },
          "swaggerToCSharpClient": {
            "$ref": "#/definitions/swaggerToCSharpClient"
          },
          "swaggerToCSharpController": {
            "$ref": "#/definitions/swaggerToCSharpController"
          }
        }
      },
      "webApiToSwagger": {
        "type": "object",
        "properties": {
          "assemblyPaths": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "referencePaths": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "useNuGetCache": {
            "type": "boolean"
          },
          "isAspNetCore": {
            "type": "boolean"
          },
          "controllerNames": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "defaultUrlTemplate": {
            "type": "string"
          },
          "defaultPropertyNameHandling": {
            "type": "string",
            "enum": [
              "Default",
              "CamelCase",
              "SnakeCase"
            ]
          },
          "defaultEnumHandling": {
            "type": "string",
            "enum": [
              "Integer",
              "String",
              "CamelCaseString"
            ]
          },
          "flattenInheritanceHierarchy": {
            "type": "boolean"
          },
          "generateKnownTypes": {
            "type": "boolean"
          },
          "generateXmlObjects": {
            "type": "boolean"
          },
          "addMissingPathParameters": {
            "type": "boolean"
          },
          "infoTitle": {
            "type": "string"
          },
          "infoVersion": {
            "type": "string"
          },
          "output": {
            "type": "null"
          }
        }
      },
      "clientGenerator": {
        "type": "object",
        "properties": {
          "namespace": {
            "type": "string"
          },
          "dateTimeType": {
            "type": "string"
          },
          "wrapDtoExceptions": {
            "type": "boolean"
          },
          "operationGenerationMode": {
            "type": "string",
            "enum": [
              "MultipleClientsFromOperationId",
              "MultipleClientsFromPathSegments",
              "SingleClientFromOperationId",
              "SingleClientFromPathSegments"
            ]
          },
          "generateCloneMethod": {
            "type": "boolean"
          },
          "generateDefaultValues": {
            "type": "boolean"
          },
          "excludedTypeNames": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "handleReferences": {
            "type": "boolean"
          },
          "generateConstructorInterface": {
            "type": "boolean"
          },
          "importRequiredTypes": {
            "type": "string"
          },
          "baseUrlTokenName": {
            "type": "string"
          },
          "output": {},
          "className": {
            "type": "string"
          },
          "generateDtoTypes": {
            "type": "boolean"
          },
          "generateClientInterfaces": {
            "type": "boolean"
          },
          "generateClientClasses": {
            "type": "boolean"
          },
          "generateOptionalParameters": {
            "type": "boolean"
          },
          "wrapResponses": {
            "type": "boolean"
          },
          "wrapResponseMethods": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "generateResponseClasses": {
            "type": "boolean"
          },
          "responseClass": {
            "type": "string"
          }
        }
      },
      "swaggerToCSharpClient": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/definitions/clientGenerator"
          }
        ],
        "properties": {}
      },
      "swaggerToTypeScriptClient": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/definitions/clientGenerator"
          }
        ],
        "properties": {
          "template": {
            "type": "string",
            "enum": [
              "JQueryCallbacks",
              "JQueryPromises",
              "AngularJS",
              "Angular",
              "Fetch",
              "Aurelia"
            ]
          },
          "promiseType": {
            "type": "string",
            "enum": [
              "Promise",
              "QPromise"
            ]
          },
          "wrapDtoExceptions": {
            "type": "boolean"
          },
          "clientBaseClass": {
            "type": "string"
          },
          "configurationClass": {
            "type": "string"
          },
          "useTransformOptionsMethod": {
            "type": "boolean"
          },
          "useTransformResultMethod": {
            "type": "boolean"
          },
          "baseUrlTokenName": {
            "type": "string"
          },
          "protectedMethods": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "importRequiredTypes": {
            "type": "boolean"
          },
          "useGetBaseUrlMethod": {
            "type": "boolean"
          },
          "queryNullValue": {
            "type": "string"
          },
          "httpClass": {
            "type": "string",
            "enum": [
              "Http",
              "HttpClient"
            ]
          },
          "rxJsVersion": {
            "type": "number"
          },
          "useSingletonProvider": {
            "type": "boolean"
          },
          "injectionTokenType": {
            "type": "string",
            "enum": [
              "OpaqueToken",
              "InjectionToken"
            ]
          },
          "markOptionalProperties": {
            "type": "boolean"
          },
          "typeScriptVersion": {
            "type": "number"
          },
          "moduleName": {
            "type": "string"
          },
          "nullValue": {
            "type": "string"
          },
          "typeStyle": {
            "type": "string",
            "enum": [
              "Interface",
              "Class",
              "KnockoutClass"
            ]
          }
        }
      },
      "swaggerToCSharpController": {}
    },
    "id": "https://json.schemastore.org/nswag.json",
    "properties": {
      "swaggerGenerator": {
        "$ref": "#/definitions/swaggerGenerator"
      },
      "codeGenerators": {
        "$ref": "#/definitions/codeGenerators"
      }
    }
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "swaggerGenerator": {
          "webApiToSwagger": {
            "assemblyPaths": [
              "path/to/assembly1.dll",
              "path/to/assembly2.dll"
            ],
            "referencePaths": [
              "path/to/reference1.dll",
              "path/to/reference2.dll"
            ],
            "useNuGetCache": true,
            "isAspNetCore": true,
            "controllerNames": [
              "Controller1",
              "Controller2"
            ],
            "defaultUrlTemplate": "/api/{controller}/{action}",
            "defaultPropertyNameHandling": "CamelCase",
            "defaultEnumHandling": "String",
            "flattenInheritanceHierarchy": true,
            "generateKnownTypes": true,
            "generateXmlObjects": true,
            "addMissingPathParameters": true,
            "infoTitle": "My API",
            "infoVersion": "1.0.0",
            "output": null
          }
        },
        "codeGenerators": {
          "swaggerToTypeScriptClient": {
            "namespace": "MyApi",
            "dateTimeType": "Date",
            "wrapDtoExceptions ": true,
            "operationGenerationMode ": "MultipleClientsFromOperationId",
            "generateCloneMethod ": true,
            "generateDefaultValues ": true,
            "excludedTypeNames ": [],
            "handleReferences ": true,
            "generateConstructorInterface ": true,
            "importRequiredTypes ": true,
            "baseUrlTokenName ": "baseUrl",
            "output ": {},
            "className ": "MyApiClient",
            "generateDtoTypes ": true,
            "generateClientInterfaces ": true,
            "generateClientClasses ": true,
            "generateOptionalParameters ": true,
            "wrapResponses ": true,
            "wrapResponseMethods ": [],
            "generateResponseClasses ": true,
            "responseClass ": "MyApiResponse",
            "template ": "Angular",
            "promiseType ": "Promise",
            "clientBaseClass ": "MyApiClientBase",
            "configurationClass ": "MyApiConfiguration",
            "useTransformOptionsMethod ": true,
            "useTransformResultMethod ": true,
            "protectedMethods ": [],
            "useGetBaseUrlMethod ": true,
            "queryNullValue ": "null",
            "httpClass ": "Http",
            "rxJsVersion ": 6,
            "useSingletonProvider ": true,
            "injectionTokenType ": "InjectionToken",
            "markOptionalProperties ": true,
            "typeScriptVersion ": 3,
            "moduleName ": "my-api",
            "nullValue ": "null",
            "typeStyle ": "Interface"
          },
          "swaggerToCSharpClient": {
            "namespace": "MyApi",
            "dateTimeType": "DateTime",
            "wrapDtoExceptions": true,
            "operationGenerationMode": "MultipleClientsFromOperationId",
            "generateCloneMethod": true,
            "generateDefaultValues": true,
            "excludedTypeNames": [],
            "handleReferences": true,
            "generateConstructorInterface": true,
            "importRequiredTypes": "all",
            "baseUrlTokenName": "baseUrl",
            "output": {},
            "className": "MyApiClient",
            "generateDtoTypes": true,
            "generateClientInterfaces": true,
            "generateClientClasses": true,
            "generateOptionalParameters": true,
            "wrapResponses": true,
            "wrapResponseMethods": [],
            "generateResponseClasses": true,
            "responseClass": "MyApiResponse"
          }
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on allOf keyword",
      "valid": false,
      "rust_error": "true is not of type \"string\"",
      "python_error": "True is not of type 'string'\n\nFailed validating 'type' in schema['properties']['codeGenerators']['properties']['swaggerToTypeScriptClient']['allOf'][0]['properties']['importRequiredTypes']:\n    {'type': 'string'}\n\nOn instance['codeGenerators']['swaggerToTypeScriptClient']['importRequiredTypes']:\n    True",
      "data": {
        "swaggerGenerator": {
          "webApiToSwagger": {
            "assemblyPaths": [
              "path/to/assembly1.dll",
              "path/to/assembly2.dll"
            ],
            "referencePaths": [
              "path/to/reference1.dll",
              "path/to/reference2.dll"
            ],
            "useNuGetCache": true,
            "isAspNetCore": true,
            "controllerNames": [
              "Controller1",
              "Controller2"
            ],
            "defaultUrlTemplate": "/api/{controller}/{action}",
            "defaultPropertyNameHandling": "CamelCase",
            "defaultEnumHandling": "String",
            "flattenInheritanceHierarchy": true,
            "generateKnownTypes": true,
            "generateXmlObjects": true,
            "addMissingPathParameters": true,
            "infoTitle": "My API",
            "infoVersion": "1.0.0",
            "output": null
          }
        },
        "codeGenerators": {
          "swaggerToTypeScriptClient": {
            "namespace": "MyApi",
            "dateTimeType": "Date",
            "wrapDtoExceptions": true,
            "operationGenerationMode": "MultipleClientsFromOperationId",
            "generateCloneMethod": true,
            "generateDefaultValues": true,
            "excludedTypeNames": [],
            "handleReferences": true,
            "generateConstructorInterface": false,
            "importRequiredTypes": true,
            "baseUrlTokenName": "baseUrl",
            "output": {},
            "className": "MyApiClient",
            "generateDtoTypes": true,
            "generateClientInterfaces": true,
            "generateClientClasses": true,
            "generateOptionalParameters": true,
            "wrapResponses": true,
            "wrapResponseMethods": [],
            "generateResponseClasses": true,
            "responseClass": "MyApiResponse",
            "template": "Angular",
            "promiseType": "Promise",
            "clientBaseClass": "MyApiClientBase",
            "configurationClass": "MyApiConfiguration",
            "useTransformOptionsMethod": true,
            "useTransformResultMethod": true,
            "protectedMethods": [],
            "useGetBaseUrlMethod": true,
            "queryNullValue": "null",
            "httpClass": "Http",
            "rxJsVersion": 6,
            "useSingletonProvider": true,
            "injectionTokenType": "InjectionToken",
            "markOptionalProperties": true,
            "typeScriptVersion": 3,
            "moduleName": "my-api",
            "nullValue": "null",
            "typeStyle": "Interface"
          },
          "swaggerToCSharpClient": {
            "namespace": "MyApi",
            "dateTimeType": "DateTime",
            "wrapDtoExceptions": true,
            "operationGenerationMode": "MultipleClientsFromOperationId",
            "generateCloneMethod": true,
            "generateDefaultValues": true,
            "excludedTypeNames": [],
            "handleReferences": true,
            "generateConstructorInterface": true,
            "importRequiredTypes": "all",
            "baseUrlTokenName": "baseUrl",
            "output": {},
            "className": "MyApiClient",
            "generateDtoTypes": true,
            "generateClientInterfaces": true,
            "generateClientClasses": true,
            "generateOptionalParameters": true,
            "wrapResponses": true,
            "wrapResponseMethods": [],
            "generateResponseClasses": true,
            "responseClass": "MyApiResponse"
          }
        }
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "123 is not of type \"string\"",
      "python_error": "'InvalidValue' is not one of ['Default', 'CamelCase', 'SnakeCase']\n\nFailed validating 'enum' in schema['properties']['swaggerGenerator']['properties']['webApiToSwagger']['properties']['defaultPropertyNameHandling']:\n    {'type': 'string', 'enum': ['Default', 'CamelCase', 'SnakeCase']}\n\nOn instance['swaggerGenerator']['webApiToSwagger']['defaultPropertyNameHandling']:\n    'InvalidValue'",
      "data": {
        "swaggerGenerator": {
          "webApiToSwagger": {
            "assemblyPaths": [
              "path/to/assembly1.dll",
              123
            ],
            "referencePaths": [
              "path/to/reference1.dll",
              "path/to/reference2.dll"
            ],
            "useNuGetCache": true,
            "isAspNetCore": true,
            "controllerNames": [
              "Controller1",
              "Controller2"
            ],
            "defaultUrlTemplate": "/api/{controller}/{action}",
            "defaultPropertyNameHandling": "InvalidValue",
            "defaultEnumHandling": "String",
            "flattenInheritanceHierarchy": true,
            "generateKnownTypes": true,
            "generateXmlObjects": true,
            "addMissingPathParameters": true,
            "infoTitle": "My API",
            "infoVersion": "1.0.0",
            "output": null
          }
        },
        "codeGenerators": {
          "swaggerToTypeScriptClient": {
            "namespace": "MyApi",
            "dateTimeType": "InvalidDateTimeType",
            "wrapDtoExceptions": true,
            "operationGenerationMode": "InvalidOperationGenerationMode",
            "generateCloneMethod": true,
            "generateDefaultValues": true,
            "excludedTypeNames": [],
            "handleReferences": true,
            "generateConstructorInterface": true,
            "importRequiredTypes": true,
            "baseUrlTokenName": "baseUrl",
            "output": {},
            "className": "MyApiClient",
            "generateDtoTypes": true,
            "generateClientInterfaces": true,
            "generateClientClasses": true,
            "generateOptionalParameters": true,
            "wrapResponses": true,
            "wrapResponseMethods": [],
            "generateResponseClasses": true,
            "responseClass": "MyApiResponse",
            "template": "InvalidTemplate",
            "promiseType": "InvalidPromiseType",
            "clientBaseClass": "MyApiClientBase",
            "configurationClass": "MyApiConfiguration",
            "useTransformOptionsMethod": true,
            "useTransformResultMethod": true,
            "protectedMethods": [],
            "useGetBaseUrlMethod": true,
            "queryNullValue": "InvalidNullValue",
            "httpClass": "InvalidHttpClass",
            "rxJsVersion": "InvalidRxJsVersion",
            "useSingletonProvider": true,
            "injectionTokenType": "InvalidInjectionTokenType",
            "markOptionalProperties": true,
            "typeScriptVersion": "InvalidTypeScriptVersion",
            "moduleName": "my-api",
            "nullValue": "InvalidNullValue",
            "typeStyle": "InvalidTypeStyle"
          },
          "swaggerToCSharpClient": {
            "namespace": "MyApi",
            "dateTimeType": "DateTime",
            "wrapDtoExceptions": true,
            "operationGenerationMode": "MultipleClientsFromOperationId",
            "generateCloneMethod": true,
            "generateDefaultValues": true,
            "excludedTypeNames": [],
            "handleReferences": true,
            "generateConstructorInterface": true,
            "importRequiredTypes": "InvalidImportRequiredTypes",
            "baseUrlTokenName": "baseUrl",
            "output": {},
            "className": "MyApiClient",
            "generateDtoTypes": true,
            "generateClientInterfaces": true,
            "generateClientClasses": true,
            "generateOptionalParameters": true,
            "wrapResponses": true,
            "wrapResponseMethods": [],
            "generateResponseClasses": true,
            "responseClass": "MyApiResponse"
          }
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on allOf keyword",
      "valid": false,
      "rust_error": "true is not of type \"string\"",
      "python_error": "True is not of type 'string'\n\nFailed validating 'type' in schema['properties']['codeGenerators']['properties']['swaggerToTypeScriptClient']['allOf'][0]['properties']['importRequiredTypes']:\n    {'type': 'string'}\n\nOn instance['codeGenerators']['swaggerToTypeScriptClient']['importRequiredTypes']:\n    True",
      "data": {
        "swaggerGenerator": {
          "webApiToSwagger": {
            "assemblyPaths": [
              "path/to/assembly1.dll",
              "path/to/assembly2.dll"
            ],
            "referencePaths": [
              "path/to/reference1.dll",
              "path/to/reference2.dll"
            ],
            "useNuGetCache": true,
            "isAspNetCore": true,
            "controllerNames": [
              "Controller1",
              "Controller2"
            ],
            "defaultUrlTemplate": "/api/{controller}/{action}",
            "defaultPropertyNameHandling": "CamelCase",
            "defaultEnumHandling": "String",
            "flattenInheritanceHierarchy": true,
            "generateKnownTypes": true,
            "generateXmlObjects": true,
            "addMissingPathParameters": true,
            "infoTitle": "My API",
            "infoVersion": "1.0.0",
            "output": null
          }
        },
        "codeGenerators": {
          "swaggerToTypeScriptClient": {
            "namespace": "MyApi",
            "dateTimeType": "Date",
            "wrapDtoExceptions": true,
            "operationGenerationMode": "MultipleClientsFromOperationId",
            "generateCloneMethod": true,
            "generateDefaultValues": true,
            "excludedTypeNames": [],
            "handleReferences": true,
            "generateConstructorInterface": true,
            "importRequiredTypes": true,
            "baseUrlTokenName": "baseUrl",
            "output": {},
            "className": "MyApiClient",
            "generateDtoTypes": true,
            "generateClientInterfaces": true,
            "generateClientClasses": true,
            "generateOptionalParameters": true,
            "wrapResponses": true,
            "wrapResponseMethods": [],
            "generateResponseClasses": true,
            "responseClass": "MyApiResponse",
            "template": "Angular",
            "promiseType": "Promise",
            "clientBaseClass": "MyApiClientBase",
            "configurationClass": "MyApiConfiguration",
            "useTransformOptionsMethod": true,
            "useTransformResultMethod": true,
            "protectedMethods": [],
            "useGetBaseUrlMethod": true,
            "queryNullValue": "null",
            "httpClass": "Http",
            "rxJsVersion": 6,
            "useSingletonProvider": true,
            "injectionTokenType": "InjectionToken",
            "markOptionalProperties": true,
            "typeScriptVersion": 3,
            "moduleName": "my-api",
            "nullValue": "null",
            "typeStyle": "Interface"
          },
          "swaggerToCSharpClient": {
            "namespace": "MyApi",
            "dateTimeType": "DateTime",
            "wrapDtoExceptions": true,
            "operationGenerationMode": "MultipleClientsFromOperationId",
            "generateCloneMethod": true,
            "generateDefaultValues": true,
            "excludedTypeNames": [],
            "handleReferences": true,
            "generateConstructorInterface": true,
            "importRequiredTypes": "all",
            "baseUrlTokenName": "baseUrl",
            "output": {},
            "className": "MyApiClient",
            "generateDtoTypes": true,
            "generateClientInterfaces": true,
            "generateClientClasses": true,
            "generateOptionalParameters": true,
            "wrapResponses": true,
            "wrapResponseMethods": [],
            "generateResponseClasses": true,
            "responseClass": "MyApiResponse",
            "template": "Angular"
          }
        }
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "123 is not of type \"string\"",
      "python_error": "'Invalid' is not one of ['Default', 'CamelCase', 'SnakeCase']\n\nFailed validating 'enum' in schema['properties']['swaggerGenerator']['properties']['webApiToSwagger']['properties']['defaultPropertyNameHandling']:\n    {'type': 'string', 'enum': ['Default', 'CamelCase', 'SnakeCase']}\n\nOn instance['swaggerGenerator']['webApiToSwagger']['defaultPropertyNameHandling']:\n    'Invalid'",
      "data": {
        "swaggerGenerator": {
          "webApiToSwagger": {
            "assemblyPaths": [
              "path/to/assembly1.dll",
              123
            ],
            "referencePaths": [
              "path/to/reference1.dll",
              "path/to/reference2.dll"
            ],
            "useNuGetCache": true,
            "isAspNetCore": true,
            "controllerNames": [
              "Controller1",
              "Controller2"
            ],
            "defaultUrlTemplate": "/api/{controller}/{action}",
            "defaultPropertyNameHandling": "Invalid",
            "defaultEnumHandling": "String",
            "flattenInheritanceHierarchy": true,
            "generateKnownTypes": true,
            "generateXmlObjects": true,
            "addMissingPathParameters": true,
            "infoTitle": "My API",
            "infoVersion": "1.0.0",
            "output": null
          }
        },
        "codeGenerators": {
          "swaggerToTypeScriptClient": {
            "namespace": "MyApi",
            "dateTimeType": "Invalid",
            "wrapDtoExceptions": true,
            "operationGenerationMode": "Invalid",
            "generateCloneMethod": true,
            "generateDefaultValues": true,
            "excludedTypeNames": [],
            "handleReferences": true,
            "generateConstructorInterface": true,
            "importRequiredTypes": true,
            "baseUrlTokenName": "baseUrl",
            "output": {},
            "className": "MyApiClient",
            "generateDtoTypes": true,
            "generateClientInterfaces": true,
            "generateClientClasses": true,
            "generateOptionalParameters": true,
            "wrapResponses": true,
            "wrapResponseMethods": [],
            "generateResponseClasses": true,
            "responseClass": "MyApiResponse",
            "template": "Invalid",
            "promiseType": "Invalid",
            "clientBaseClass": "MyApiClientBase",
            "configurationClass": "MyApiConfiguration",
            "useTransformOptionsMethod": true,
            "useTransformResultMethod": true,
            "protectedMethods": [],
            "useGetBaseUrlMethod": true,
            "queryNullValue": "Invalid",
            "httpClass": "Invalid",
            "rxJsVersion": "Invalid",
            "useSingletonProvider": true,
            "injectionTokenType": "Invalid",
            "markOptionalProperties": true,
            "typeScriptVersion": "Invalid",
            "moduleName": "my-api",
            "nullValue": "Invalid",
            "typeStyle": "Invalid"
          },
          "swaggerToCSharpClient": {
            "namespace": "MyApi",
            "dateTimeType": "Invalid",
            "wrapDtoExceptions": true,
            "operationGenerationMode": "Invalid",
            "generateCloneMethod": true,
            "generateDefaultValues": true,
            "excludedTypeNames": [],
            "handleReferences": true,
            "generateConstructorInterface": true,
            "importRequiredTypes": "Invalid",
            "baseUrlTokenName": "baseUrl",
            "output": {},
            "className": "MyApiClient",
            "generateDtoTypes": true,
            "generateClientInterfaces": true,
            "generateClientClasses": true,
            "generateOptionalParameters": true,
            "wrapResponses": true,
            "wrapResponseMethods": [],
            "generateResponseClasses": true,
            "responseClass": "MyApiResponse"
          }
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on allOf keyword",
      "valid": false,
      "rust_error": "\"InvalidValue\" is not one of [\"MultipleClientsFromOperationId\",\"MultipleClientsFromPathSegments\",\"SingleClientFromOperationId\",\"SingleClientFromPathSegments\"]",
      "python_error": "'InvalidValue' is not one of ['MultipleClientsFromOperationId', 'MultipleClientsFromPathSegments', 'SingleClientFromOperationId', 'SingleClientFromPathSegments']\n\nFailed validating 'enum' in schema['properties']['codeGenerators']['properties']['swaggerToTypeScriptClient']['allOf'][0]['properties']['operationGenerationMode']:\n    {'type': 'string',\n     'enum': ['MultipleClientsFromOperationId',\n              'MultipleClientsFromPathSegments',\n              'SingleClientFromOperationId',\n              'SingleClientFromPathSegments']}\n\nOn instance['codeGenerators']['swaggerToTypeScriptClient']['operationGenerationMode']:\n    'InvalidValue'",
      "data": {
        "swaggerGenerator": {
          "webApiToSwagger": {
            "assemblyPaths": [
              "path/to/assembly1.dll",
              "path/to/assembly2.dll"
            ],
            "referencePaths": [
              "path/to/reference1.dll",
              "path/to/reference2.dll"
            ],
            "useNuGetCache": true,
            "isAspNetCore": true,
            "controllerNames": [
              "Controller1",
              "Controller2"
            ],
            "defaultUrlTemplate": "/api/{controller}/{action}",
            "defaultPropertyNameHandling": "CamelCase",
            "defaultEnumHandling": "String",
            "flattenInheritanceHierarchy": true,
            "generateKnownTypes": true,
            "generateXmlObjects": true,
            "addMissingPathParameters": true,
            "infoTitle": "My API",
            "infoVersion": "1.0.0",
            "output": null
          }
        },
        "codeGenerators": {
          "swaggerToTypeScriptClient": {
            "namespace": "MyApi",
            "dateTimeType": "Date",
            "wrapDtoExceptions": false,
            "operationGenerationMode": "InvalidValue",
            "generateCloneMethod": true,
            "generateDefaultValues": true,
            "excludedTypeNames": [],
            "handleReferences": true,
            "generateConstructorInterface": true,
            "importRequiredTypes": true,
            "baseUrlTokenName": "baseUrl",
            "output": {},
            "className": "MyApiClient",
            "generateDtoTypes": true,
            "generateClientInterfaces": true,
            "generateClientClasses": true,
            "generateOptionalParameters": true,
            "wrapResponses": true,
            "wrapResponseMethods": [],
            "generateResponseClasses": true,
            "responseClass": "MyApiResponse",
            "template": "Angular",
            "promiseType": "Promise",
            "clientBaseClass": "MyApiClientBase",
            "configurationClass": "MyApiConfiguration",
            "useTransformOptionsMethod": true,
            "useTransformResultMethod": true,
            "protectedMethods": [],
            "useGetBaseUrlMethod": true,
            "queryNullValue": "null",
            "httpClass": "Http",
            "rxJsVersion": 6,
            "useSingletonProvider": true,
            "injectionTokenType": "InjectionToken",
            "markOptionalProperties": true,
            "typeScriptVersion": 3,
            "moduleName": "my-api",
            "nullValue": "null",
            "typeStyle": "Interface"
          },
          "swaggerToCSharpClient": {
            "namespace": "MyApi",
            "dateTimeType": "DateTime",
            "wrapDtoExceptions": false,
            "operationGenerationMode": "InvalidValue"
          }
        }
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "null is not of type \"string\"",
      "python_error": "'Unknown' is not one of ['Interface', 'Class', 'KnockoutClass']\n\nFailed validating 'enum' in schema['properties']['codeGenerators']['properties']['swaggerToTypeScriptClient']['properties']['typeStyle']:\n    {'type': 'string', 'enum': ['Interface', 'Class', 'KnockoutClass']}\n\nOn instance['codeGenerators']['swaggerToTypeScriptClient']['typeStyle']:\n    'Unknown'",
      "data": {
        "swaggerGenerator": {
          "webApiToSwagger": {
            "assemblyPaths": [
              null,
              "path/to/assembly2.dll"
            ],
            "referencePaths": [
              "path/to/reference1.dll",
              "path/to/reference2.dll"
            ],
            "useNuGetCache": true,
            "isAspNetCore": true,
            "controllerNames": [
              "Controller1",
              null,
              "Controller3"
            ],
            "defaultUrlTemplate": "/api/{controller}/{action}",
            "defaultPropertyNameHandling": "CamelCase",
            "defaultEnumHandling": "String",
            "flattenInheritanceHierarchy": true,
            "generateKnownTypes": true,
            "generateXmlObjects": true,
            "addMissingPathParameters": true,
            "infoTitle": "My API",
            "infoVersion": "1.0.0",
            "output": null
          }
        },
        "codeGenerators": {
          "swaggerToTypeScriptClient": {
            "namespace": "MyApi",
            "dateTimeType": 123,
            "wrapDtoExceptions": true,
            "operationGenerationMode": "MultipleClientsFromOperationId",
            "generateCloneMethod": true,
            "generateDefaultValues": true,
            "excludedTypeNames": [
              "MyType"
            ],
            "handleReferences": true,
            "generateConstructorInterface": true,
            "importRequiredTypes": "all",
            "baseUrlTokenName": "baseUrl",
            "output": {},
            "className": "MyApiClient",
            "generateDtoTypes": true,
            "generateClientInterfaces": true,
            "generateClientClasses": true,
            "generateOptionalParameters": true,
            "wrapResponses": true,
            "wrapResponseMethods": [
              "myMethod"
            ],
            "generateResponseClasses": true,
            "responseClass": "MyApiResponse",
            "template": "Unknown",
            "promiseType": "Promise",
            "clientBaseClass": "MyApiClientBase",
            "configurationClass": "MyApiConfiguration",
            "useTransformOptionsMethod": true,
            "useTransformResultMethod": true,
            "protectedMethods": [
              "myMethod"
            ],
            "useGetBaseUrlMethod": true,
            "queryNullValue": null,
            "httpClass": "Unknown",
            "rxJsVersion": 7,
            "useSingletonProvider": true,
            "injectionTokenType": "Unknown",
            "markOptionalProperties": true,
            "typeScriptVersion": 4,
            "moduleName": "my-api",
            "nullValue": "null",
            "typeStyle": "Unknown"
          },
          "swaggerToCSharpClient": {
            "namespace": "MyApi",
            "dateTimeType": 123,
            "wrapDtoExceptions": true,
            "operationGenerationMode": "MultipleClientsFromOperationId",
            "generateCloneMethod": true,
            "generateDefaultValues": true,
            "excludedTypeNames": [
              "MyType"
            ],
            "handleReferences": true,
            "generateConstructorInterface": true,
            "importRequiredTypes": "unknown",
            "baseUrlTokenName": "baseUrl",
            "output": {},
            "className": "MyApiClient",
            "generateDtoTypes": true,
            "generateClientInterfaces": true,
            "generateClientClasses": true,
            "generateOptionalParameters": true,
            "wrapResponses": true,
            "wrapResponseMethods": [
              "myMethod"
            ],
            "generateResponseClasses": true,
            "responseClass": "MyApiResponse"
          }
        }
      }
    }
  ]
}