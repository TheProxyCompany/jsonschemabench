{
  "description": "sample Github_hard/o63198.json",
  "meta": {
    "full_size": 4048,
    "stripped_size": 4023,
    "features": [
      "$ref",
      "@minmaxItems",
      "@siblingKeys",
      "anyOf",
      "enum",
      "items",
      "oneOf",
      "pattern"
    ],
    "raw_features": [
      "definitions",
      "maxItems",
      "minItems",
      "properties",
      "required",
      "type",
      "type:array",
      "type:number",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "definitions": {
      "contact": {
        "properties": {
          "contact": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "result_limit": {
        "properties": {
          "isotope": {
            "type": "string"
          },
          "type": {
            "enum": [
              "limit"
            ]
          },
          "unit": {
            "$ref": "#/definitions/units"
          },
          "value": {
            "items": {
              "type": "number"
            },
            "maxItems": 2,
            "minItems": 1,
            "type": "array"
          }
        },
        "required": [
          "type",
          "isotope",
          "unit",
          "value"
        ],
        "type": "object"
      },
      "result_measurement": {
        "properties": {
          "isotope": {
            "type": "string"
          },
          "type": {
            "enum": [
              "measurement"
            ]
          },
          "unit": {
            "$ref": "#/definitions/units"
          },
          "value": {
            "items": {
              "type": "number"
            },
            "maxItems": 3,
            "minItems": 1,
            "type": "array"
          }
        },
        "required": [
          "type",
          "isotope",
          "unit",
          "value"
        ],
        "type": "object"
      },
      "result_range": {
        "properties": {
          "isotope": {
            "type": "string"
          },
          "type": {
            "enum": [
              "range"
            ]
          },
          "unit": {
            "$ref": "#/definitions/units"
          },
          "value": {
            "items": {
              "type": "number"
            },
            "maxItems": 3,
            "minItems": 1,
            "type": "array"
          }
        },
        "required": [
          "type",
          "isotope",
          "unit",
          "value"
        ],
        "type": "object"
      },
      "units": {
        "enum": [
          "pct",
          "g/g",
          "ppm",
          "ppb",
          "ppt",
          "ppq",
          "Bq",
          "Bq/kg",
          "Bq/unit",
          "Bq/m",
          "Bq/cm",
          "Bq/m2",
          "Bq/cm2",
          "Bq/m3",
          "Bq/cm3",
          "mBq",
          "mBq/kg",
          "mBq/unit",
          "mBq/m",
          "mBq/cm",
          "mBq/m2",
          "mBq/cm2",
          "mBq/m3",
          "mBq/cm3",
          "uBq",
          "uBq/kg",
          "uBq/unit",
          "uBq/m",
          "uBq/cm",
          "uBq/m2",
          "uBq/cm2",
          "uBq/m3",
          "uBq/cm3",
          "nBq",
          "nBq/kg",
          "nBq/unit",
          "nBq/m",
          "nBq/cm",
          "nBq/m2",
          "nBq/cm2",
          "nBq/m3",
          "nBq/cm3",
          "pBq",
          "pBq/kg",
          "pBq/unit",
          "pBq/m",
          "pBq/cm",
          "pBq/m2",
          "pBq/cm2",
          "pBq/m3",
          "pBq/cm3",
          "g",
          "g/kg",
          "g/unit",
          "g/m",
          "g/cm",
          "g/m2",
          "g/cm2",
          "g/m3",
          "g/cm3",
          "mg",
          "mg/kg",
          "mg/unit",
          "mg/m",
          "mg/cm",
          "mg/m2",
          "mg/cm2",
          "mg/m3",
          "mg/cm3",
          "ug",
          "ug/kg",
          "ug/unit",
          "ug/m",
          "ug/cm",
          "ug/m2",
          "ug/cm2",
          "ug/m3",
          "ug/cm3",
          "ng",
          "ng/kg",
          "ng/unit",
          "ng/m",
          "ng/cm",
          "ng/m2",
          "ng/cm2",
          "ng/m3",
          "ng/cm3",
          "pg",
          "pg/kg",
          "pg/unit",
          "pg/m",
          "pg/cm",
          "pg/m2",
          "pg/cm2",
          "pg/m3",
          "pg/cm3"
        ]
      },
      "user": {
        "properties": {
          "description": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "unit": {
            "type": "string"
          },
          "value": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          }
        },
        "required": [
          "name",
          "type"
        ],
        "type": "object"
      }
    },
    "description": "MADF 3.0",
    "properties": {
      "data_source": {
        "properties": {
          "input": {
            "properties": {
              "contact": {
                "type": "string"
              },
              "date": {
                "anyOf": [
                  {
                    "pattern": "[0-9]{4}-[0-9]{2}-[0-9]{2}",
                    "type": "string"
                  },
                  {
                    "pattern": "[0-9]{4}-[0-9]{2}-[0-9]{1}",
                    "type": "string"
                  },
                  {
                    "pattern": "[0-9]{4}-[1-2]{1}-[0-9]{2}",
                    "type": "string"
                  },
                  {
                    "pattern": "[0-9]{4}-[1-2]{1}-[0-9]{1}",
                    "type": "string"
                  },
                  {
                    "pattern": "[0-9]{4}-[0-9]{2}",
                    "type": "string"
                  },
                  {
                    "pattern": "[0-9]{4}-[0-9]{1}",
                    "type": "string"
                  },
                  {
                    "pattern": "[0-9]{4}",
                    "type": "string"
                  }
                ],
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "notes": {
                "type": "string"
              }
            },
            "required": [
              "name",
              "contact",
              "date"
            ],
            "type": "object"
          },
          "reference": {
            "type": "string"
          },
          "user": {
            "items": {
              "$ref": "#/definitions/user"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "grouping": {
        "type": "string"
      },
      "measurement": {
        "properties": {
          "date": {
            "items": {
              "anyOf": [
                {
                  "pattern": "[0-9]{4}-[0-9]{2}-[0-9]{2}",
                  "type": "string"
                },
                {
                  "pattern": "[0-9]{4}-[0-9]{2}-[0-9]{1}",
                  "type": "string"
                },
                {
                  "pattern": "[0-9]{4}-[1-2]{1}-[0-9]{2}",
                  "type": "string"
                },
                {
                  "pattern": "[0-9]{4}-[1-2]{1}-[0-9]{1}",
                  "type": "string"
                },
                {
                  "pattern": "[0-9]{4}-[0-9]{2}",
                  "type": "string"
                },
                {
                  "pattern": "[0-9]{4}-[0-9]{1}",
                  "type": "string"
                },
                {
                  "pattern": "[0-9]{4}",
                  "type": "string"
                },
                {
                  "pattern": "^$",
                  "type": "string"
                }
              ]
            },
            "maxItems": 2,
            "minItems": 0,
            "type": "array"
          },
          "institution": {
            "type": "string"
          },
          "practitioner": {
            "$ref": "#/definitions/contact"
          },
          "requestor": {
            "$ref": "#/definitions/contact"
          },
          "results": {
            "items": {
              "oneOf": [
                {
                  "$ref": "#/definitions/result_measurement"
                },
                {
                  "$ref": "#/definitions/result_range"
                },
                {
                  "$ref": "#/definitions/result_limit"
                }
              ]
            },
            "type": "array"
          },
          "technique": {
            "type": "string"
          },
          "user": {
            "items": {
              "$ref": "#/definitions/user"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "sample": {
        "properties": {
          "description": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "owner": {
            "$ref": "#/definitions/contact"
          },
          "source": {
            "type": "string"
          },
          "user": {
            "items": {
              "$ref": "#/definitions/user"
            },
            "type": "array"
          }
        },
        "required": [
          "name",
          "description"
        ],
        "type": "object"
      },
      "specification": {
        "type": "string"
      },
      "type": {
        "type": "string"
      }
    },
    "required": [
      "grouping",
      "specification",
      "type",
      "sample",
      "data_source",
      "measurement"
    ],
    "type": "object"
  },
  "tests": [
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "grouping": "Group 1",
        "specification": "Specification 1",
        "type": "Type 1",
        "sample": {
          "name": "Sample 1",
          "description": "This is sample 1",
          "id": "S1",
          "owner": {
            "contact": "John Doe",
            "name": "John Doe"
          },
          "source": "Source 1",
          "user": [
            {
              "name": "User 1",
              "type": "Type 1",
              "unit": "Unit 1",
              "value": "Value 1"
            }
          ]
        },
        "data_source": {
          "input": {
            "name": "Input 1",
            "contact": "John Doe",
            "date": "2022-01-01",
            "notes": "Notes 1"
          },
          "reference": "Reference 1",
          "user": [
            {
              "name": "User 2",
              "type": "Type 2",
              "unit": "Unit 2",
              "value": "Value 2"
            }
          ]
        },
        "measurement": {
          "date": [
            "2022-01-01",
            "2022-01-02"
          ],
          "institution": "Institution 1",
          "practitioner": {
            "contact": "John Doe",
            "name": "John Doe"
          },
          "requestor": {
            "contact": "Jane Doe",
            "name": "Jane Doe"
          },
          "results": [
            {
              "type": "measurement",
              "isotope": "Isotope 1",
              "unit": "ppm",
              "value": [
                1.0,
                2.0,
                3.0
              ]
            },
            {
              "type": "range",
              "isotope": "Isotope 2",
              "unit": "ppt",
              "value": [
                1.0,
                2.0
              ]
            },
            {
              "type": "limit",
              "isotope": "Isotope 3",
              "unit": "ppb",
              "value": [
                1.0
              ]
            }
          ],
          "technique": "Technique 1",
          "user": [
            {
              "name": "User 3",
              "type": "Type 3",
              "unit": "Unit 3",
              "value": "Value 3"
            }
          ]
        }
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "grouping": "Group 1",
        "specification": "Specification 1",
        "type": "Type 1",
        "sample": {
          "name": "Sample 1",
          "description": "This is sample 1",
          "id": "S1",
          "owner": {
            "contact": "John Doe",
            "name": "John Doe"
          },
          "source": "Source 1",
          "user": [
            {
              "name": "User 1",
              "type": "Type 1",
              "description": "This is user 1",
              "unit": "Unit 1",
              "value": "Value 1"
            }
          ]
        },
        "data_source": {
          "input": {
            "name": "Input 1",
            "contact": "John Doe",
            "date": "2022-01-01",
            "notes": "This is input 1"
          },
          "reference": "Reference 1",
          "user": [
            {
              "name": "User 2",
              "type": "Type 2",
              "description": "This is user 2",
              "unit": "Unit 2",
              "value": 2
            }
          ]
        },
        "measurement": {
          "date": [
            "2022-01-01",
            "2022-01-02"
          ],
          "institution": "Institution 1",
          "practitioner": {
            "contact": "John Doe",
            "name": "John Doe"
          },
          "requestor": {
            "contact": "Jane Doe",
            "name": "Jane Doe"
          },
          "results": [
            {
              "type": "measurement",
              "isotope": "Isotope 1",
              "unit": "pct",
              "value": [
                1,
                2,
                3
              ]
            },
            {
              "type": "range",
              "isotope": "Isotope 2",
              "unit": "g/g",
              "value": [
                4,
                5,
                6
              ]
            },
            {
              "type": "limit",
              "isotope": "Isotope 3",
              "unit": "ppm",
              "value": [
                7,
                8
              ]
            }
          ],
          "technique": "Technique 1",
          "user": [
            {
              "name": "User 3",
              "type": "Type 3",
              "description": "This is user 3",
              "unit": "Unit 3",
              "value": "Value 3"
            }
          ]
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on oneOf keyword",
      "valid": false,
      "rust_error": "[1,2] is not valid under any of the schemas listed in the 'oneOf' keyword",
      "python_error": "None is not valid under any of the given schemas\n\nFailed validating 'oneOf' in schema['properties']['sample']['properties']['user']['items']['properties']['value']:\n    {'oneOf': [{'type': 'string'}, {'type': 'number'}]}\n\nOn instance['sample']['user'][0]['value']:\n    None",
      "data": {
        "grouping": "Group 1",
        "specification": "Specification 1",
        "type": "Type 1",
        "sample": {
          "name": "Sample 1",
          "description": "This is sample 1",
          "id": "S1",
          "owner": {
            "contact": "John Doe",
            "name": "John Doe"
          },
          "source": "Source 1",
          "user": [
            {
              "name": "User 1",
              "type": "Type 1",
              "description": "This is user 1",
              "unit": "Unit 1",
              "value": null
            }
          ]
        },
        "data_source": {
          "input": {
            "name": "Input 1",
            "contact": "John Doe",
            "date": "2022-01-01",
            "notes": "This is input 1"
          },
          "reference": "Reference 1",
          "user": [
            {
              "name": "User 2",
              "type": "Type 2",
              "description": "This is user 2",
              "unit": "Unit 2",
              "value": [
                1,
                2
              ]
            }
          ]
        },
        "measurement": {
          "date": [
            "2022-01-01",
            "2022-01-02"
          ],
          "institution": "Institution 1",
          "practitioner": {
            "contact": "John Doe",
            "name": "John Doe"
          },
          "requestor": {
            "contact": "Jane Doe",
            "name": "Jane Doe"
          },
          "results": [
            {
              "type": "measurement",
              "isotope": "Isotope 1",
              "unit": "pct",
              "value": [
                1,
                2,
                3
              ]
            },
            {
              "type": "range",
              "isotope": "Isotope 2",
              "unit": "g/g",
              "value": [
                4,
                5,
                6
              ]
            },
            {
              "type": "limit",
              "isotope": "Isotope 3",
              "unit": "ppm",
              "value": [
                7,
                8
              ]
            }
          ],
          "technique": "Technique 1",
          "user": [
            {
              "name": "User 3",
              "type": "Type 3",
              "description": "This is user 3",
              "unit": "Unit 3",
              "value": "Value 3"
            }
          ]
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on minItems keyword or maxItems keyword",
      "valid": false,
      "rust_error": "[\"2022-01-01\",\"2022-01-02\",\"2022-01-03\",\"2022-01-04\"] has more than 2 items",
      "python_error": "['2022-01-01', '2022-01-02', '2022-01-03', '2022-01-04'] is too long\n\nFailed validating 'maxItems' in schema['properties']['measurement']['properties']['date']:\n    {'items': {'anyOf': [{'pattern': '[0-9]{4}-[0-9]{2}-[0-9]{2}',\n                          'type': 'string'},\n                         {'pattern': '[0-9]{4}-[0-9]{2}-[0-9]{1}',\n                          'type': 'string'},\n                         {'pattern': '[0-9]{4}-[1-2]{1}-[0-9]{2}',\n                          'type': 'string'},\n                         {'pattern': '[0-9]{4}-[1-2]{1}-[0-9]{1}',\n                          'type': 'string'},\n                         {'pattern': '[0-9]{4}-[0-9]{2}', 'type': 'string'},\n                         {'pattern': '[0-9]{4}-[0-9]{1}', 'type': 'string'},\n                         {'pattern': '[0-9]{4}', 'type': 'string'},\n                         {'pattern': '^$', 'type': 'string'}]},\n     'maxItems': 2,\n     'minItems': 0,\n     'type': 'array'}\n\nOn instance['measurement']['date']:\n    ['2022-01-01', '2022-01-02', '2022-01-03', '2022-01-04']",
      "data": {
        "grouping": "Group 1",
        "specification": "Specification 1",
        "type": "Type 1",
        "sample": {
          "name": "Sample 1",
          "description": "This is sample 1",
          "id": "S1",
          "owner": {
            "contact": "John Doe",
            "name": "John Doe"
          },
          "source": "Source 1",
          "user": [
            {
              "name": "User 1",
              "type": "Type 1",
              "description": "This is user 1",
              "unit": "Unit 1",
              "value": "Value 1"
            }
          ]
        },
        "data_source": {
          "input": {
            "name": "Input 1",
            "contact": "John Doe",
            "date": "2022-01-01",
            "notes": "This is input 1"
          },
          "reference": "Reference 1",
          "user": [
            {
              "name": "User 2",
              "type": "Type 2",
              "description": "This is user 2",
              "unit": "Unit 2",
              "value": 2
            }
          ]
        },
        "measurement": {
          "date": [
            "2022-01-01",
            "2022-01-02",
            "2022-01-03",
            "2022-01-04"
          ],
          "institution": "Institution 1",
          "practitioner": {
            "contact": "John Doe",
            "name": "John Doe"
          },
          "requestor": {
            "contact": "Jane Doe",
            "name": "Jane Doe"
          },
          "results": [
            {
              "type": "measurement",
              "isotope": "Isotope 1",
              "unit": "pct",
              "value": [
                1,
                2,
                3,
                4
              ]
            },
            {
              "type": "range",
              "isotope": "Isotope 2",
              "unit": "g/g",
              "value": [
                4,
                5,
                6
              ]
            },
            {
              "type": "limit",
              "isotope": "Isotope 3",
              "unit": "ppm",
              "value": [
                7
              ]
            }
          ],
          "technique": "Technique 1",
          "user": [
            {
              "name": "User 3",
              "type": "Type 3",
              "description": "This is user 3",
              "unit": "Unit 3",
              "value": "Value 3"
            }
          ]
        }
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "[\"2022-01-01\",\"2022-01-02\",\"2022-01-03\",\"2022-01-04\"] has more than 2 items",
      "python_error": "['2022-01-01', '2022-01-02', '2022-01-03', '2022-01-04'] is too long\n\nFailed validating 'maxItems' in schema['properties']['measurement']['properties']['date']:\n    {'items': {'anyOf': [{'pattern': '[0-9]{4}-[0-9]{2}-[0-9]{2}',\n                          'type': 'string'},\n                         {'pattern': '[0-9]{4}-[0-9]{2}-[0-9]{1}',\n                          'type': 'string'},\n                         {'pattern': '[0-9]{4}-[1-2]{1}-[0-9]{2}',\n                          'type': 'string'},\n                         {'pattern': '[0-9]{4}-[1-2]{1}-[0-9]{1}',\n                          'type': 'string'},\n                         {'pattern': '[0-9]{4}-[0-9]{2}', 'type': 'string'},\n                         {'pattern': '[0-9]{4}-[0-9]{1}', 'type': 'string'},\n                         {'pattern': '[0-9]{4}', 'type': 'string'},\n                         {'pattern': '^$', 'type': 'string'}]},\n     'maxItems': 2,\n     'minItems': 0,\n     'type': 'array'}\n\nOn instance['measurement']['date']:\n    ['2022-01-01', '2022-01-02', '2022-01-03', '2022-01-04']",
      "data": {
        "grouping": "Group 1",
        "specification": "Specification 1",
        "type": "Type 1",
        "sample": {
          "name": "Sample 1",
          "description": "This is sample 1",
          "id": "S1",
          "owner": {
            "contact": "John Doe",
            "name": "John Doe"
          },
          "source": "Source 1",
          "user": [
            {
              "name": "User 1",
              "type": "Type 1",
              "description": "This is user 1",
              "unit": "Unit 1",
              "value": [
                1,
                2,
                3
              ]
            }
          ]
        },
        "data_source": {
          "input": {
            "name": "Input 1",
            "contact": "John Doe",
            "date": "2022-01-01",
            "notes": "This is input 1"
          },
          "reference": "Reference 1",
          "user": [
            {
              "name": "User 2",
              "type": "Type 2",
              "description": "This is user 2",
              "unit": "Unit 2",
              "value": 2
            }
          ]
        },
        "measurement": {
          "date": [
            "2022-01-01",
            "2022-01-02",
            "2022-01-03",
            "2022-01-04"
          ],
          "institution": "Institution 1",
          "practitioner": {
            "contact": "John Doe",
            "name": "John Doe"
          },
          "requestor": {
            "contact": "Jane Doe",
            "name": "Jane Doe"
          },
          "results": [
            {
              "type": "measurement",
              "isotope": "Isotope 1",
              "unit": "pct",
              "value": [
                1,
                2,
                3,
                4
              ]
            },
            {
              "type": "range",
              "isotope": "Isotope 2",
              "unit": "g/g",
              "value": [
                4,
                5,
                6
              ]
            },
            {
              "type": "limit",
              "isotope": "Isotope 3",
              "unit": "ppm",
              "value": [
                7,
                8,
                9
              ]
            }
          ],
          "technique": "Technique 1",
          "user": [
            {
              "name": "User 3",
              "type": "Type 3",
              "description": "This is user 3",
              "unit": "Unit 3",
              "value": "Value 3"
            }
          ]
        }
      }
    }
  ]
}