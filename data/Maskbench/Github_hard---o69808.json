{
  "description": "sample Github_hard/o69808.json",
  "meta": {
    "full_size": 4021,
    "stripped_size": 824,
    "features": [
      "items"
    ],
    "raw_features": [
      "definitions",
      "properties",
      "required",
      "type",
      "type:array",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "definitions": {},
    "description": "Full analysis specification including data, sofware, environment and workflow enabling reproducibility on a REANA cluster.",
    "properties": {
      "environments": {
        "_id": "/properties/environments",
        "description": "All container images needed to reproduce the analysis.",
        "items": {
          "_id": "/properties/environments/items",
          "description": "Analysis environments represented by container technology and image name.",
          "optional": true,
          "properties": {
            "image": {
              "_id": "/properties/environments/items/properties/image",
              "default": "busybox",
              "description": "String which represents an image used as environment for one or more steps of an analysis.",
              "title": "Environment image id.",
              "type": "string"
            },
            "type": {
              "_id": "/properties/environments/items/properties/type",
              "default": "docker",
              "description": "Name which represents a supported container technology to provide as a REANA environment.",
              "title": "Container technology.",
              "type": "string"
            }
          },
          "title": "Analysis environments.",
          "type": "object"
        },
        "title": "Set of analysis' environments.",
        "type": "array"
      },
      "inputs": {
        "_id": "/properties/inputs",
        "properties": {
          "directories": {
            "_id": "/properties/inputs/properties/directories",
            "description": "List of directories provided as input for a given analysis.",
            "items": {
              "_id": "/properties/inputs/properties/directories/items",
              "title": "Relative path to the directory.",
              "type": "string"
            },
            "optional": true,
            "title": "Analysis input directories.",
            "type": "array"
          },
          "files": {
            "_id": "/properties/inputs/properties/files",
            "description": "List of files provided as input for a given analysis.",
            "items": {
              "_id": "/properties/inputs/properties/files/items",
              "title": "Relative path to the file.",
              "type": "string"
            },
            "optional": true,
            "title": "Analysis input files.",
            "type": "array"
          },
          "options": {
            "_id": "/properties/workflow/properties/options",
            "description": "Extra operational options accepted by workflow engines.",
            "title": "Workflow operational options.",
            "type": "object"
          },
          "parameters": {
            "_id": "/properties/inputs/properties/parameters",
            "description": "Key value data structure which represents the analysis parameters.",
            "optional": true,
            "title": "Analysis parameters.",
            "type": "object"
          }
        },
        "title": "Analysis inputs.",
        "type": "object"
      },
      "metadata": {
        "_id": "/properties/metadata",
        "properties": {
          "author": {
            "_id": "/properties/metadata/properties/author",
            "default": "@reanahub/developers",
            "description": "User or group who created the analysis.",
            "title": "Analysis author.",
            "type": "string"
          },
          "title": {
            "_id": "/properties/metadata/properties/title",
            "default": "REANA analysis example",
            "title": "Analysis title",
            "type": "string"
          }
        },
        "title": "Analysis metadata.",
        "type": "object"
      },
      "outputs": {
        "_id": "/properties/outputs",
        "properties": {
          "files": {
            "_id": "/properties/outputs/properties/files",
            "description": "Expected output from analysis represented by a set of files.",
            "items": {
              "_id": "/properties/outputs/properties/files/items",
              "title": "Relative path to the file.",
              "type": "string"
            },
            "title": "Analysis results.",
            "type": "array"
          }
        },
        "title": "Analysis outputs.",
        "type": "object"
      },
      "workflow": {
        "_id": "/properties/workflow",
        "description": "Workflow which represents the steps that need to be run to reproduce an analysis.",
        "properties": {
          "file": {
            "_id": "/properties/workflow/properties/file",
            "title": "Workflow file name.",
            "type": "string"
          },
          "resources": {
            "_id": "/properties/workflow/properties/resources",
            "properties": {
              "cvmfs": {
                "_id": "/properties/workflow/properties/resources/properties/cvmfs",
                "items": {
                  "optional": false,
                  "title": "CVMFS repos",
                  "type": "string"
                },
                "type": "array"
              }
            },
            "title": "Workflow resources in yaml format.",
            "type": "object"
          },
          "specification": {
            "_id": "/properties/workflow/properties/specification",
            "title": "Workflow specification in yaml format.",
            "type": "object"
          },
          "type": {
            "_id": "/properties/workflow/properties/type",
            "description": "Name which represents a supported workflow engine to be used to reproduce the analysis.",
            "title": "Workflow engine.",
            "type": "string"
          }
        },
        "required": [
          "type"
        ],
        "title": "Analysis workflow.",
        "type": "object"
      }
    },
    "required": [
      "workflow"
    ],
    "title": "REANA analysis specification",
    "type": "object"
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "environments": [
          {
            "image": "python:3.9",
            "type": "docker"
          },
          {
            "image": "tensorflow/tensorflow:latest",
            "type": "docker"
          }
        ],
        "inputs": {
          "directories": [
            "data/input",
            "data/output"
          ],
          "files": [
            "data/input/file1.txt",
            "data/input/file2.txt"
          ],
          "parameters": {
            "learning_rate": 0.01,
            "batch_size": 32
          }
        },
        "metadata": {
          "author": "John Doe",
          "title": "My Analysis"
        },
        "outputs": {
          "files": [
            "data/output/output1.txt",
            "data/output/output2.txt"
          ]
        },
        "workflow": {
          "file": "workflow.yaml",
          "resources": {
            "cvmfs": [
              "atlas.cern.ch",
              "cms.cern.ch"
            ]
          },
          "specification": {
            "steps": [
              {
                "name": "step1",
                "environment": "python:3.9",
                "commands": [
                  "python script1.py"
                ]
              },
              {
                "name": "step2",
                "environment": "tensorflow/tensorflow:latest",
                "commands": [
                  "python script2.py"
                ]
              }
            ]
          },
          "type": "yadage"
        }
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"type\" is a required property",
      "python_error": "'type' is a required property\n\nFailed validating 'required' in schema['properties']['workflow']:\n    {'_id': '/properties/workflow',\n     'description': 'Workflow which represents the steps that need to be '\n                    'run to reproduce an analysis.',\n     'properties': {'file': {'_id': '/properties/workflow/properties/file',\n                             'title': 'Workflow file name.',\n                             'type': 'string'},\n                    'resources': {'_id': '/properties/workflow/properties/resources',\n                                  'properties': {'cvmfs': {'_id': '/properties/workflow/properties/resources/properties/cvmfs',\n                                                           'items': {'optional': False,\n                                                                     'title': 'CVMFS '\n                                                                              'repos',\n                                                                     'type': 'string'},\n              .. (1585 more)",
      "data": {
        "environments": [
          {
            "image": "python:3.9",
            "type": "docker"
          },
          {
            "image": "tensorflow/tensorflow:latest",
            "type": "docker"
          }
        ],
        "inputs": {
          "directories": [
            "data/input",
            "data/output"
          ],
          "files": [
            "data/input/file1.txt",
            "data/input/file2.txt"
          ],
          "parameters": {
            "learning_rate": 0.01,
            "batch_size": 32
          }
        },
        "metadata": {
          "author": "John Doe",
          "title": "My Analysis"
        },
        "outputs": {
          "files": [
            "data/output/output1.txt",
            "data/output/output2.txt"
          ]
        },
        "workflow": {
          "file": "workflow.yaml",
          "resources": {
            "cvmfs": [
              "atlas.cern.ch",
              "cms.cern.ch"
            ]
          },
          "specification": {
            "steps": [
              {
                "name": "step1",
                "environment": "python:3.9",
                "commands": [
                  "python script1.py"
                ]
              },
              {
                "name": "step2",
                "environment": "tensorflow/tensorflow:latest",
                "commands": [
                  "python script2.py"
                ]
              }
            ]
          }
        }
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"type\" is a required property",
      "python_error": "'type' is a required property\n\nFailed validating 'required' in schema['properties']['workflow']:\n    {'_id': '/properties/workflow',\n     'description': 'Workflow which represents the steps that need to be '\n                    'run to reproduce an analysis.',\n     'properties': {'file': {'_id': '/properties/workflow/properties/file',\n                             'title': 'Workflow file name.',\n                             'type': 'string'},\n                    'resources': {'_id': '/properties/workflow/properties/resources',\n                                  'properties': {'cvmfs': {'_id': '/properties/workflow/properties/resources/properties/cvmfs',\n                                                           'items': {'optional': False,\n                                                                     'title': 'CVMFS '\n                                                                              'repos',\n                                                                     'type': 'string'},\n              .. (1585 more)",
      "data": {
        "environments": [
          {
            "image": "python:3.9",
            "type": "docker"
          },
          {
            "image": "tensorflow/tensorflow:latest",
            "type": "docker"
          },
          {
            "image": "python:3.9"
          }
        ],
        "inputs": {
          "directories": [
            "data/input",
            "data/output"
          ],
          "files": [
            "data/input/file1.txt",
            "data/input/file2.txt"
          ],
          "parameters": {
            "learning_rate": 0.01,
            "batch_size": 32
          }
        },
        "metadata": {
          "author": "John Doe",
          "title": "My Analysis"
        },
        "outputs": {
          "files": [
            "data/output/output1.txt",
            "data/output/output2.txt"
          ]
        },
        "workflow": {
          "file": "workflow.yaml",
          "resources": {
            "cvmfs": [
              "atlas.cern.ch",
              "cms.cern.ch"
            ]
          },
          "specification": {
            "steps": [
              {
                "name": "step1",
                "environment": "python:3.9",
                "commands": [
                  "python script1.py"
                ]
              },
              {
                "name": "step2",
                "environment": "tensorflow/tensorflow:latest",
                "commands": [
                  "python script2.py"
                ]
              }
            ]
          }
        }
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "environments": [
          {
            "image": "python:3.9",
            "type": "docker"
          },
          {
            "image": "tensorflow/tensorflow:2.4.1",
            "type": "docker"
          }
        ],
        "inputs": {
          "directories": [
            "data/input",
            "data/output"
          ],
          "files": [
            "data/input/file1.txt",
            "data/input/file2.txt"
          ],
          "parameters": {
            "learning_rate": 0.01,
            "batch_size": 32
          }
        },
        "metadata": {
          "author": "John Doe",
          "title": "My REANA Analysis"
        },
        "outputs": {
          "files": [
            "data/output/output1.txt",
            "data/output/output2.txt"
          ]
        },
        "workflow": {
          "file": "workflow.yaml",
          "resources": {
            "cvmfs": [
              "atlas.cern.ch",
              "cms.cern.ch"
            ]
          },
          "specification": {
            "steps": [
              {
                "name": "step1",
                "image": "python:3.9",
                "command": "python script1.py"
              },
              {
                "name": "step2",
                "image": "tensorflow/tensorflow:2.4.1",
                "command": "python script2.py"
              }
            ]
          },
          "type": "yadage"
        }
      }
    }
  ]
}