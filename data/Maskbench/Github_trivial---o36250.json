{
  "description": "sample Github_trivial/o36250.json",
  "meta": {
    "full_size": 345,
    "stripped_size": 173,
    "features": [
      "pattern"
    ],
    "raw_features": [
      "$id",
      "$schema",
      "type",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "http://schemas.digitallinguistics.io/Abbreviation-2.1.0.json",
    "title": "Abbreviation",
    "type": "string",
    "pattern": "^[(a-z)|(A-Z)|(0-9)]+$",
    "description": "A human-readable abbreviation, containing on letters `a-z`, `A-Z`, and numbers `0-9` (no spaces allowed).",
    "examples": [
      "chiti",
      "ctm"
    ]
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": "ABC123"
    },
    {
      "description": "llama-70b generated negative; focus on pattern keyword",
      "valid": false,
      "rust_error": "{\"$schema\":\"http://json-schema.org/draft-07/schema#\",\"$id\":\"http://schemas.digitallinguistics.io/Abbreviation-2.1.0.json\",\"title\":\"Abbreviation\",\"type\":\"string\",\"pattern\":\"^[(a-z)|(A-Z)|(0-9)]+$\",\"description\":\"A human-readable abbreviation, containing on letters `a-z`, `A-Z`, and numbers `0-9` (no spaces allowed).\",\"examples\":[\"chiti\",\"ctm\"]} is not of type \"string\"",
      "python_error": "{'$schema': 'http://json-schema.org/draft-07/schema#', '$id': 'http://schemas.digitallinguistics.io/Abbreviation-2.1.0.json', 'title': 'Abbreviation', 'type': 'string', 'pattern': '^[(a-z)|(A-Z)|(0-9)]+$', 'description': 'A human-readable abbreviation, containing on letters `a-z`, `A-Z`, and numbers `0-9` (no spaces allowed).', 'examples': ['chiti', 'ctm']} is not of type 'string'\n\nFailed validating 'type' in schema:\n    {'$schema': 'http://json-schema.org/draft-07/schema#',\n     '$id': 'http://schemas.digitallinguistics.io/Abbreviation-2.1.0.json',\n     'title': 'Abbreviation',\n     'type': 'string',\n     'pattern': '^[(a-z)|(A-Z)|(0-9)]+$',\n     'description': 'A human-readable abbreviation, containing on letters '\n                    '`a-z`, `A-Z`, and numbers `0-9` (no spaces allowed).',\n     'examples': ['chiti', 'ctm']}\n\nOn instance:\n    {'$schema': 'http://json-schema.org/draft-07/schema#',\n     '$id': 'http://schemas.digitallinguistics.io/Abbreviation-2.1.0.json',\n     'title': 'Abbreviation',\n     't.. (244 more)",
      "data": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "$id": "http://schemas.digitallinguistics.io/Abbreviation-2.1.0.json",
        "title": "Abbreviation",
        "type": "string",
        "pattern": "^[(a-z)|(A-Z)|(0-9)]+$",
        "description": "A human-readable abbreviation, containing on letters `a-z`, `A-Z`, and numbers `0-9` (no spaces allowed).",
        "examples": [
          "chiti",
          "ctm"
        ]
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "{\"ABC123-\":\"ABC123-\"} is not of type \"string\"",
      "python_error": "{'ABC123-': 'ABC123-'} is not of type 'string'\n\nFailed validating 'type' in schema:\n    {'$schema': 'http://json-schema.org/draft-07/schema#',\n     '$id': 'http://schemas.digitallinguistics.io/Abbreviation-2.1.0.json',\n     'title': 'Abbreviation',\n     'type': 'string',\n     'pattern': '^[(a-z)|(A-Z)|(0-9)]+$',\n     'description': 'A human-readable abbreviation, containing on letters '\n                    '`a-z`, `A-Z`, and numbers `0-9` (no spaces allowed).',\n     'examples': ['chiti', 'ctm']}\n\nOn instance:\n    {'ABC123-': 'ABC123-'}",
      "data": {
        "ABC123-": "ABC123-"
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "{\"instance\":\"_ABC123\"} is not of type \"string\"",
      "python_error": "{'instance': '_ABC123'} is not of type 'string'\n\nFailed validating 'type' in schema:\n    {'$schema': 'http://json-schema.org/draft-07/schema#',\n     '$id': 'http://schemas.digitallinguistics.io/Abbreviation-2.1.0.json',\n     'title': 'Abbreviation',\n     'type': 'string',\n     'pattern': '^[(a-z)|(A-Z)|(0-9)]+$',\n     'description': 'A human-readable abbreviation, containing on letters '\n                    '`a-z`, `A-Z`, and numbers `0-9` (no spaces allowed).',\n     'examples': ['chiti', 'ctm']}\n\nOn instance:\n    {'instance': '_ABC123'}",
      "data": {
        "instance": "_ABC123"
      }
    },
    {
      "description": "llama-70b generated negative; focus on pattern keyword",
      "valid": false,
      "rust_error": "{\"_\":\"ABC123\"} is not of type \"string\"",
      "python_error": "{'_': 'ABC123'} is not of type 'string'\n\nFailed validating 'type' in schema:\n    {'$schema': 'http://json-schema.org/draft-07/schema#',\n     '$id': 'http://schemas.digitallinguistics.io/Abbreviation-2.1.0.json',\n     'title': 'Abbreviation',\n     'type': 'string',\n     'pattern': '^[(a-z)|(A-Z)|(0-9)]+$',\n     'description': 'A human-readable abbreviation, containing on letters '\n                    '`a-z`, `A-Z`, and numbers `0-9` (no spaces allowed).',\n     'examples': ['chiti', 'ctm']}\n\nOn instance:\n    {'_': 'ABC123'}",
      "data": {
        "_": "ABC123"
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "{\"_\":\"Invalid instance 4: Non-ASCII character\",\"value\":\"ABCé\",\"_description\":\"The schema only allows ASCII letters 'a-z', 'A-Z', and numbers '0-9'.\"} is not of type \"string\"",
      "python_error": "{'_': 'Invalid instance 4: Non-ASCII character', 'value': 'ABCé', '_description': \"The schema only allows ASCII letters 'a-z', 'A-Z', and numbers '0-9'.\"} is not of type 'string'\n\nFailed validating 'type' in schema:\n    {'$schema': 'http://json-schema.org/draft-07/schema#',\n     '$id': 'http://schemas.digitallinguistics.io/Abbreviation-2.1.0.json',\n     'title': 'Abbreviation',\n     'type': 'string',\n     'pattern': '^[(a-z)|(A-Z)|(0-9)]+$',\n     'description': 'A human-readable abbreviation, containing on letters '\n                    '`a-z`, `A-Z`, and numbers `0-9` (no spaces allowed).',\n     'examples': ['chiti', 'ctm']}\n\nOn instance:\n    {'_': 'Invalid instance 4: Non-ASCII character',\n     'value': 'ABCé',\n     '_description': \"The schema only allows ASCII letters 'a-z', 'A-Z', \"\n                     \"and numbers '0-9'.\"}",
      "data": {
        "_": "Invalid instance 4: Non-ASCII character",
        "value": "ABCé",
        "_description": "The schema only allows ASCII letters 'a-z', 'A-Z', and numbers '0-9'."
      }
    }
  ]
}