{
  "description": "sample Github_medium/o36798.json",
  "meta": {
    "full_size": 791,
    "stripped_size": 791,
    "features": [
      "$ref",
      "pattern"
    ],
    "raw_features": [
      "$schema",
      "definitions",
      "properties",
      "required",
      "type",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "definitions": {
      "knx-item": {
        "properties": {
          "read": {
            "pattern": "^\\\\d+/\\\\d+/\\\\d+$",
            "type": "string"
          },
          "write": {
            "pattern": "^\\\\d+/\\\\d+/\\\\d+$",
            "type": "string"
          }
        },
        "required": [
          "read",
          "write"
        ],
        "type": "object"
      }
    },
    "properties": {
      "knx": {
        "properties": {
          "direction": {
            "$ref": "#/definitions/knx-item"
          },
          "fully-down": {
            "$ref": "#/definitions/knx-item"
          },
          "fully-up": {
            "$ref": "#/definitions/knx-item"
          },
          "position": {
            "$ref": "#/definitions/knx-item"
          },
          "stop": {
            "$ref": "#/definitions/knx-item"
          },
          "up-down": {
            "$ref": "#/definitions/knx-item"
          }
        },
        "required": [
          "up-down",
          "stop",
          "position",
          "fully-down",
          "fully-up",
          "direction"
        ],
        "type": "object"
      },
      "uuid": {
        "pattern": "^[A-F0-9]{8}-[A-F0-9]{4}-[A-F0-9]{4}-[A-F0-9]{12}$",
        "type": "string"
      }
    },
    "required": [
      "uuid",
      "knx"
    ],
    "type": "object"
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "knx": {
          "direction": {
            "read": "\\d/\\d/\\d",
            "write": "\\d/\\d/\\d"
          },
          "fully-down": {
            "read": "\\d/\\d/\\d",
            "write": "\\d/\\d/\\d"
          },
          "fully-up": {
            "read": "\\d/\\d/\\d",
            "write": "\\d/\\d/\\d"
          },
          "position": {
            "read": "\\d/\\d/\\d",
            "write": "\\d/\\d/\\d"
          },
          "stop": {
            "read": "\\d/\\d/\\d",
            "write": "\\d/\\d/\\d"
          },
          "up-down": {
            "read": "\\d/\\d/\\d",
            "write": "\\d/\\d/\\d"
          }
        },
        "uuid": "12345678-1234-1234-123456789012"
      }
    },
    {
      "description": "llama-70b generated negative; focus on pattern keyword",
      "valid": false,
      "rust_error": "\"abc/def/ghi\" does not match \"^\\\\d+/\\\\d+/\\\\d+$\"",
      "python_error": "'abc/def/ghi' does not match '^\\\\\\\\d+/\\\\\\\\d+/\\\\\\\\d+$'\n\nFailed validating 'pattern' in schema['properties']['knx']['properties']['direction']['properties']['read']:\n    {'pattern': '^\\\\\\\\d+/\\\\\\\\d+/\\\\\\\\d+$', 'type': 'string'}\n\nOn instance['knx']['direction']['read']:\n    'abc/def/ghi'",
      "data": {
        "knx": {
          "direction": {
            "read": "abc/def/ghi",
            "write": "\\d/\\d/\\d"
          },
          "fully-down": {
            "read": "\\d/\\d/\\d",
            "write": "\\d/\\d/\\d"
          },
          "fully-up": {
            "read": "\\d/\\d/\\d",
            "write": "\\d/\\d/\\d"
          },
          "position": {
            "read": "\\d/\\d/\\d",
            "write": "\\d/\\d/\\d"
          },
          "stop": {
            "read": "\\d/\\d/\\d",
            "write": "\\d/\\d/\\d"
          },
          "up-down": {
            "read": "\\d/\\d/\\d",
            "write": "\\d/\\d/\\d"
          }
        },
        "uuid": "12345678-1234-1234-123456789012"
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"\\\\d/\\\\d\" does not match \"^\\\\d+/\\\\d+/\\\\d+$\"",
      "python_error": "'\\\\d/\\\\d' does not match '^\\\\\\\\d+/\\\\\\\\d+/\\\\\\\\d+$'\n\nFailed validating 'pattern' in schema['properties']['knx']['properties']['up-down']['properties']['read']:\n    {'pattern': '^\\\\\\\\d+/\\\\\\\\d+/\\\\\\\\d+$', 'type': 'string'}\n\nOn instance['knx']['up-down']['read']:\n    '\\\\d/\\\\d'",
      "data": {
        "knx": {
          "direction": {
            "read": "\\d/\\d/\\d",
            "write": "\\d/\\d/\\d"
          },
          "fully-down": {
            "read": "\\d/\\d/\\d",
            "write": "\\d/\\d/\\d"
          },
          "fully-up": {
            "read": "\\d/\\d/\\d",
            "write": "\\d/\\d/\\d"
          },
          "position": {
            "read": "\\d/\\d/\\d",
            "write": "\\d/\\d/\\d"
          },
          "stop": {
            "read": "\\d/\\d/\\d",
            "write": "\\d/\\d/\\d"
          },
          "up-down": {
            "read": "\\d/\\d",
            "write": "\\d/\\d/\\d"
          }
        },
        "uuid": "12345678-1234-1234-123456789012"
      }
    },
    {
      "description": "llama-70b generated negative; focus on pattern keyword",
      "valid": false,
      "rust_error": "\"123/abc/456\" does not match \"^\\\\d+/\\\\d+/\\\\d+$\"",
      "python_error": "'123/456/789' does not match '^\\\\\\\\d+/\\\\\\\\d+/\\\\\\\\d+$'\n\nFailed validating 'pattern' in schema['properties']['knx']['properties']['up-down']['properties']['write']:\n    {'pattern': '^\\\\\\\\d+/\\\\\\\\d+/\\\\\\\\d+$', 'type': 'string'}\n\nOn instance['knx']['up-down']['write']:\n    '123/456/789'",
      "data": {
        "knx": {
          "direction": {
            "read": "123/abc/456",
            "write": "123/456/789"
          },
          "fully-down": {
            "read": "123/456/789",
            "write": "123/456/789"
          },
          "fully-up": {
            "read": "123/456/789",
            "write": "123/456/789"
          },
          "position": {
            "read": "123/456/789",
            "write": "123/456/789"
          },
          "stop": {
            "read": "123/456/789",
            "write": "123/456/789"
          },
          "up-down": {
            "read": "123/456/789",
            "write": "123/456/789"
          }
        },
        "uuid": "12345678-1234-1234-123456789012"
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"\\\\d/\\\\d/\" does not match \"^\\\\d+/\\\\d+/\\\\d+$\"",
      "python_error": "'\\\\d/\\\\d/' does not match '^\\\\\\\\d+/\\\\\\\\d+/\\\\\\\\d+$'\n\nFailed validating 'pattern' in schema['properties']['knx']['properties']['direction']['properties']['read']:\n    {'pattern': '^\\\\\\\\d+/\\\\\\\\d+/\\\\\\\\d+$', 'type': 'string'}\n\nOn instance['knx']['direction']['read']:\n    '\\\\d/\\\\d/'",
      "data": {
        "knx": {
          "direction": {
            "read": "\\d/\\d/",
            "write": "\\d/\\d/\\d"
          },
          "fully-down": {
            "read": "\\d/\\d/\\d",
            "write": "\\d/\\d/\\d"
          },
          "fully-up": {
            "read": "\\d/\\d/\\d",
            "write": "\\d/\\d/\\d"
          },
          "position": {
            "read": "\\d/\\d/\\d",
            "write": "\\d/\\d/\\d"
          },
          "stop": {
            "read": "\\d/\\d/\\d",
            "write": "\\d/\\d/\\d"
          },
          "up-down": {
            "read": "\\d/\\d/\\d",
            "write": "\\d/\\d/\\d"
          }
        },
        "uuid": "12345678-1234-1234-123456789012"
      }
    },
    {
      "description": "llama-70b generated negative; focus on pattern keyword",
      "valid": false,
      "rust_error": "\"123/abc/1\" does not match \"^\\\\d+/\\\\d+/\\\\d+$\"",
      "python_error": "'1/2/3' does not match '^\\\\\\\\d+/\\\\\\\\d+/\\\\\\\\d+$'\n\nFailed validating 'pattern' in schema['properties']['knx']['properties']['direction']['properties']['write']:\n    {'pattern': '^\\\\\\\\d+/\\\\\\\\d+/\\\\\\\\d+$', 'type': 'string'}\n\nOn instance['knx']['direction']['write']:\n    '1/2/3'",
      "data": {
        "knx": {
          "direction": {
            "read": "123/abc/1",
            "write": "1/2/3"
          },
          "fully-down": {
            "read": "\\d/\\d/\\d",
            "write": "\\d/\\d/\\d"
          },
          "fully-up": {
            "read": "\\d/\\d/\\d",
            "write": "\\d/\\d/\\d"
          },
          "position": {
            "read": "\\d/\\d/\\d",
            "write": "\\d/\\d/\\d"
          },
          "stop": {
            "read": "\\d/\\d/\\d",
            "write": "\\d/\\d/\\d"
          },
          "up-down": {
            "read": "\\d/\\d/\\d",
            "write": "\\d/\\d/\\d"
          }
        },
        "uuid": "12345678-1234-1234-123456789012"
      }
    }
  ]
}