{
  "description": "sample Github_medium/o64726.json",
  "meta": {
    "full_size": 868,
    "stripped_size": 757,
    "features": [
      "$ref",
      "@minmaxInteger",
      "additionalProperties",
      "items"
    ],
    "raw_features": [
      "$schema",
      "_boolSchema",
      "definitions",
      "minimum",
      "properties",
      "required",
      "type",
      "type:array",
      "type:integer",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "additionalProperties": false,
    "definitions": {
      "arrayOfString": {
        "items": {
          "type": "string"
        },
        "type": "array"
      },
      "uri": {
        "_format": "uri",
        "type": "string"
      }
    },
    "description": "LAX Schema for metadata returned by DataSources.",
    "properties": {
      "$schema": {
        "$ref": "#/definitions/uri"
      },
      "allow": {
        "$ref": "#/definitions/uri"
      },
      "annotations": {
        "items": {
          "additionalProperties": true,
          "type": "object"
        },
        "type": "array"
      },
      "description": {
        "type": "string"
      },
      "encoding": {
        "type": "string"
      },
      "format": {
        "$ref": "#/definitions/arrayOfString"
      },
      "language": {
        "$ref": "#/definitions/arrayOfString"
      },
      "license": {
        "$ref": "#/definitions/uri"
      },
      "name": {
        "type": "string"
      },
      "size": {
        "minimum": 0,
        "type": "integer"
      },
      "vendor": {
        "$ref": "#/definitions/uri"
      },
      "version": {
        "type": "string"
      }
    },
    "required": [
      "name",
      "vendor",
      "version",
      "allow",
      "license"
    ],
    "title": "DataSource Metadata",
    "type": "object"
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "$schema": "https://example.com/schema",
        "allow": "https://example.com/allow",
        "annotations": [
          {
            "key": "value"
          }
        ],
        "description": "Example metadata",
        "encoding": "UTF-8",
        "format": [
          "application/json",
          "application/xml"
        ],
        "language": [
          "en-US",
          "fr-FR"
        ],
        "license": "https://example.com/license",
        "name": "Example DataSource",
        "size": 1024,
        "vendor": "https://example.com/vendor",
        "version": "1.0.0"
      }
    },
    {
      "description": "llama-70b generated negative; focus on minimum keyword",
      "valid": false,
      "rust_error": "-1 is less than the minimum of 0",
      "python_error": "-1 is less than the minimum of 0\n\nFailed validating 'minimum' in schema['properties']['size']:\n    {'minimum': 0, 'type': 'integer'}\n\nOn instance['size']:\n    -1",
      "data": {
        "$schema": "https://example.com/schema",
        "allow": "https://example.com/allow",
        "annotations": [
          {
            "key": "value"
          }
        ],
        "description": "Example metadata",
        "encoding": "UTF-8",
        "format": [
          "application/json",
          "application/xml"
        ],
        "language": [
          "en-US",
          "fr-FR"
        ],
        "license": "https://example.com/license",
        "name": "Example DataSource",
        "size": -1,
        "vendor": "https://example.com/vendor",
        "version": "1.0.0"
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "$schema": "https://example.com/schema",
        "allow": "https://example.com/allow",
        "annotations": [
          {
            "key": "value"
          }
        ],
        "description": "Example metadata",
        "encoding": "UTF-8",
        "format": [
          "json",
          "csv"
        ],
        "language": [
          "en",
          "fr"
        ],
        "license": "https://example.com/license",
        "name": "Example DataSource",
        "size": 1024,
        "vendor": "https://example.com/vendor",
        "version": "1.0.0"
      }
    },
    {
      "description": "llama-70b generated negative; focus on minimum keyword",
      "valid": false,
      "rust_error": "-1 is less than the minimum of 0",
      "python_error": "-1 is less than the minimum of 0\n\nFailed validating 'minimum' in schema['properties']['size']:\n    {'minimum': 0, 'type': 'integer'}\n\nOn instance['size']:\n    -1",
      "data": {
        "$schema": "https://example.com/schema",
        "allow": "https://example.com/allow",
        "annotations": [
          {
            "key": "value"
          }
        ],
        "description": "Example metadata",
        "encoding": "UTF-8",
        "format": [
          "json",
          "csv"
        ],
        "language": [
          "en",
          "fr"
        ],
        "license": "https://example.com/license",
        "name": "Example DataSource",
        "size": -1,
        "vendor": "https://example.com/vendor",
        "version": "1.0.0"
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "null is not of type \"string\"",
      "python_error": "Additional properties are not allowed ('extra_property' was unexpected)\n\nFailed validating 'additionalProperties' in schema:\n    {'$schema': 'http://json-schema.org/draft-04/schema#',\n     'additionalProperties': False,\n     'definitions': {'arrayOfString': {'items': {'type': 'string'},\n                                       'type': 'array'},\n                     'uri': {'_format': 'uri', 'type': 'string'}},\n     'description': 'LAX Schema for metadata returned by DataSources.',\n     'properties': {'$schema': {'$ref': '#/definitions/uri'},\n                    'allow': {'$ref': '#/definitions/uri'},\n                    'annotations': {'items': {'additionalProperties': True,\n                                              'type': 'object'},\n                                    'type': 'array'},\n                    'description': {'type': 'string'},\n                    'encoding': {'type': 'string'},\n                    'format': {'$ref': '#/definitions/arrayOfString'},\n                    'language': {'$ref': '#/d.. (1069 more)",
      "data": {
        "$schema": "https://example.com/schema",
        "allow": "https://example.com/allow",
        "annotations": [
          {
            "key": "value",
            "nested_key": {
              "invalid_annotation": "nested value"
            }
          }
        ],
        "description": "Example metadata",
        "encoding": null,
        "format": [
          "json",
          42
        ],
        "language": [
          "en",
          "fr"
        ],
        "license": "https://example.com/license",
        "name": "Example DataSource",
        "size": -1,
        "vendor": "https://example.com/vendor",
        "version": "1.0.0",
        "extra_property": "this property is not allowed"
      }
    }
  ]
}