{
  "description": "sample MCPspec/GetPromptResult.json",
  "meta": {
    "full_size": 4915,
    "stripped_size": 2092,
    "features": [
      "$ref",
      "@minmaxNumber",
      "@siblingKeys",
      "additionalProperties",
      "additionalProperties:object",
      "anyOf",
      "const",
      "enum",
      "format",
      "format:byte",
      "format:uri",
      "items"
    ],
    "raw_features": [
      "$schema",
      "definitions",
      "maximum",
      "minimum",
      "properties",
      "required",
      "type",
      "type:array",
      "type:number",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$ref": "#/definitions/GetPromptResult",
    "definitions": {
      "GetPromptResult": {
        "description": "The server's response to a prompts/get request from the client.",
        "properties": {
          "_meta": {
            "additionalProperties": {},
            "description": "This result property is reserved by the protocol to allow clients and servers to attach additional metadata to their responses.",
            "type": "object"
          },
          "description": {
            "description": "An optional description for the prompt.",
            "type": "string"
          },
          "messages": {
            "items": {
              "$ref": "#/definitions/PromptMessage"
            },
            "type": "array"
          }
        },
        "required": [
          "messages"
        ],
        "type": "object"
      },
      "PromptMessage": {
        "description": "Describes a message returned as part of a prompt.\n\nThis is similar to `SamplingMessage`, but also supports the embedding of\nresources from the MCP server.",
        "properties": {
          "content": {
            "anyOf": [
              {
                "$ref": "#/definitions/TextContent"
              },
              {
                "$ref": "#/definitions/ImageContent"
              },
              {
                "$ref": "#/definitions/EmbeddedResource"
              }
            ]
          },
          "role": {
            "$ref": "#/definitions/Role"
          }
        },
        "required": [
          "content",
          "role"
        ],
        "type": "object"
      },
      "TextContent": {
        "description": "Text provided to or from an LLM.",
        "properties": {
          "annotations": {
            "properties": {
              "audience": {
                "description": "Describes who the intended customer of this object or data is.\n\nIt can include multiple entries to indicate content useful for multiple audiences (e.g., `[\"user\", \"assistant\"]`).",
                "items": {
                  "$ref": "#/definitions/Role"
                },
                "type": "array"
              },
              "priority": {
                "description": "Describes how important this data is for operating the server.\n\nA value of 1 means \"most important,\" and indicates that the data is\neffectively required, while 0 means \"least important,\" and indicates that\nthe data is entirely optional.",
                "maximum": 1,
                "minimum": 0,
                "type": "number"
              }
            },
            "type": "object"
          },
          "text": {
            "description": "The text content of the message.",
            "type": "string"
          },
          "type": {
            "const": "text",
            "type": "string"
          }
        },
        "required": [
          "text",
          "type"
        ],
        "type": "object"
      },
      "Role": {
        "description": "The sender or recipient of messages and data in a conversation.",
        "enum": [
          "assistant",
          "user"
        ],
        "type": "string"
      },
      "ImageContent": {
        "description": "An image provided to or from an LLM.",
        "properties": {
          "annotations": {
            "properties": {
              "audience": {
                "description": "Describes who the intended customer of this object or data is.\n\nIt can include multiple entries to indicate content useful for multiple audiences (e.g., `[\"user\", \"assistant\"]`).",
                "items": {
                  "$ref": "#/definitions/Role"
                },
                "type": "array"
              },
              "priority": {
                "description": "Describes how important this data is for operating the server.\n\nA value of 1 means \"most important,\" and indicates that the data is\neffectively required, while 0 means \"least important,\" and indicates that\nthe data is entirely optional.",
                "maximum": 1,
                "minimum": 0,
                "type": "number"
              }
            },
            "type": "object"
          },
          "data": {
            "description": "The base64-encoded image data.",
            "format": "byte",
            "type": "string"
          },
          "mimeType": {
            "description": "The MIME type of the image. Different providers may support different image types.",
            "type": "string"
          },
          "type": {
            "const": "image",
            "type": "string"
          }
        },
        "required": [
          "data",
          "mimeType",
          "type"
        ],
        "type": "object"
      },
      "EmbeddedResource": {
        "description": "The contents of a resource, embedded into a prompt or tool call result.\n\nIt is up to the client how best to render embedded resources for the benefit\nof the LLM and/or the user.",
        "properties": {
          "annotations": {
            "properties": {
              "audience": {
                "description": "Describes who the intended customer of this object or data is.\n\nIt can include multiple entries to indicate content useful for multiple audiences (e.g., `[\"user\", \"assistant\"]`).",
                "items": {
                  "$ref": "#/definitions/Role"
                },
                "type": "array"
              },
              "priority": {
                "description": "Describes how important this data is for operating the server.\n\nA value of 1 means \"most important,\" and indicates that the data is\neffectively required, while 0 means \"least important,\" and indicates that\nthe data is entirely optional.",
                "maximum": 1,
                "minimum": 0,
                "type": "number"
              }
            },
            "type": "object"
          },
          "resource": {
            "anyOf": [
              {
                "$ref": "#/definitions/TextResourceContents"
              },
              {
                "$ref": "#/definitions/BlobResourceContents"
              }
            ]
          },
          "type": {
            "const": "resource",
            "type": "string"
          }
        },
        "required": [
          "resource",
          "type"
        ],
        "type": "object"
      },
      "TextResourceContents": {
        "properties": {
          "mimeType": {
            "description": "The MIME type of this resource, if known.",
            "type": "string"
          },
          "text": {
            "description": "The text of the item. This must only be set if the item can actually be represented as text (not binary data).",
            "type": "string"
          },
          "uri": {
            "description": "The URI of this resource.",
            "format": "uri",
            "type": "string"
          }
        },
        "required": [
          "text",
          "uri"
        ],
        "type": "object"
      },
      "BlobResourceContents": {
        "properties": {
          "blob": {
            "description": "A base64-encoded string representing the binary data of the item.",
            "format": "byte",
            "type": "string"
          },
          "mimeType": {
            "description": "The MIME type of this resource, if known.",
            "type": "string"
          },
          "uri": {
            "description": "The URI of this resource.",
            "format": "uri",
            "type": "string"
          }
        },
        "required": [
          "blob",
          "uri"
        ],
        "type": "object"
      }
    }
  },
  "tests": [
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "_meta": {},
        "description": "Example prompt response",
        "messages": [
          {
            "content": {
              "text": "Hello, world!",
              "type": "text",
              "annotations": {
                "priority": 1,
                "audience": [
                  "assistant"
                ]
              }
            },
            "role": "assistant"
          },
          {
            "content": {
              "data": "iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAYAAAAfFcSJAAAADUlEQVR42mNkYPhfDwADDgH9ABNjgMIGhAAEBA/4rTAAAABJRU5ErkJggg==",
              "mimeType": "image/jpeg",
              "type": "image",
              "annotations": {
                "priority": 1,
                "audience": [
                  "assistant"
                ]
              }
            },
            "role": "assistant"
          },
          {
            "content": {
              "type": "resource",
              "resource": {
                "text": "This is a sample text resource.",
                "uri": "https://example.com/resource",
                "mimeType": "text/plain"
              },
              "annotations": {
                "priority": 1,
                "audience": [
                  "assistant"
                ]
              }
            },
            "role": "assistant"
          },
          {
            "content": {
              "type": "resource",
              "resource": {
                "blob": "iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAYAAAAfFcSJAAAADUlEQVR42mNkYPhfDwADDgH9ABNjgMIGhAAEBA/4rTAAAABJRU5ErkJggg==",
                "uri": "https://example.com/resource",
                "mimeType": "image/jpeg"
              },
              "annotations": {
                "priority": 1,
                "audience": [
                  "assistant"
                ]
              }
            },
            "role": "assistant"
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on format keyword",
      "valid": false,
      "rust_error": "{\"type\":\"resource\",\"resource\":{\"text\":\"This is a sample text resource.\",\"uri\":\"Invalid URI\",\"mimeType\":\"text/plain\"},\"annotations\":{\"priority\":1,\"audience\":[\"assistant\"]}} is not valid under any of the schemas listed in the 'anyOf' keyword",
      "python_error": "{'blob': 'iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAYAAAAfFcSJAAAADUlEQVR42mNkYPhfDwADDgH9ABNjgMIGhAAEBA/4rTAAAABJRU5ErkJggg==', 'uri': 'Invalid URI', 'mimeType': 'image/jpeg'} is not valid under any of the given schemas\n\nFailed validating 'anyOf' in schema[2]['properties']['resource']:\n    {'anyOf': [{'$ref': '#/definitions/TextResourceContents'},\n               {'$ref': '#/definitions/BlobResourceContents'}]}\n\nOn instance['resource']:\n    {'blob': 'iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAYAAAAfFcSJAAAADUlEQVR42mNkYPhfDwADDgH9ABNjgMIGhAAEBA/4rTAAAABJRU5ErkJggg==',\n     'uri': 'Invalid URI',\n     'mimeType': 'image/jpeg'}",
      "data": {
        "_meta": {},
        "description": "Example prompt response",
        "messages": [
          {
            "content": {
              "text": "Hello, world!",
              "type": "text",
              "annotations": {
                "priority": 1,
                "audience": [
                  "assistant"
                ]
              }
            },
            "role": "assistant"
          },
          {
            "content": {
              "data": "Invalid base64 encoded string",
              "mimeType": "image/jpeg",
              "type": "image",
              "annotations": {
                "priority": 1,
                "audience": [
                  "assistant"
                ]
              }
            },
            "role": "assistant"
          },
          {
            "content": {
              "type": "resource",
              "resource": {
                "text": "This is a sample text resource.",
                "uri": "Invalid URI",
                "mimeType": "text/plain"
              },
              "annotations": {
                "priority": 1,
                "audience": [
                  "assistant"
                ]
              }
            },
            "role": "assistant"
          },
          {
            "content": {
              "type": "resource",
              "resource": {
                "blob": "iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAYAAAAfFcSJAAAADUlEQVR42mNkYPhfDwADDgH9ABNjgMIGhAAEBA/4rTAAAABJRU5ErkJggg==",
                "uri": "Invalid URI",
                "mimeType": "image/jpeg"
              },
              "annotations": {
                "priority": 1,
                "audience": [
                  "assistant"
                ]
              }
            },
            "role": "assistant"
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on anyOf keyword",
      "valid": false,
      "rust_error": "{\"data\":\"iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAYAAAAfFcSJAAAADUlEQVR42mNkYPhfDwADDgH9ABNjgMIGhAAEBA/4rTAAAABJRU5ErkJggg==\",\"mimeType\":\"image/jpeg\",\"type\":\"text\",\"annotations\":{\"priority\":1,\"audience\":[\"assistant\"]}} is not valid under any of the schemas listed in the 'anyOf' keyword",
      "python_error": "{'data': 'iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAYAAAAfFcSJAAAADUlEQVR42mNkYPhfDwADDgH9ABNjgMIGhAAEBA/4rTAAAABJRU5ErkJggg==', 'mimeType': 'image/jpeg', 'type': 'text', 'annotations': {'priority': 1, 'audience': ['assistant']}} is not valid under any of the given schemas\n\nFailed validating 'anyOf' in schema['properties']['messages']['items']['properties']['content']:\n    {'anyOf': [{'$ref': '#/definitions/TextContent'},\n               {'$ref': '#/definitions/ImageContent'},\n               {'$ref': '#/definitions/EmbeddedResource'}]}\n\nOn instance['messages'][0]['content']:\n    {'data': 'iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAYAAAAfFcSJAAAADUlEQVR42mNkYPhfDwADDgH9ABNjgMIGhAAEBA/4rTAAAABJRU5ErkJggg==',\n     'mimeType': 'image/jpeg',\n     'type': 'text',\n     'annotations': {'priority': 1, 'audience': ['assistant']}}",
      "data": {
        "_meta": {},
        "description": "Example prompt response",
        "messages": [
          {
            "content": {
              "data": "iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAYAAAAfFcSJAAAADUlEQVR42mNkYPhfDwADDgH9ABNjgMIGhAAEBA/4rTAAAABJRU5ErkJggg==",
              "mimeType": "image/jpeg",
              "type": "text",
              "annotations": {
                "priority": 1,
                "audience": [
                  "assistant"
                ]
              }
            },
            "role": "assistant"
          }
        ]
      }
    }
  ]
}