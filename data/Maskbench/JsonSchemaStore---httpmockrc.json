{
  "description": "sample JsonSchemaStore/httpmockrc.json",
  "meta": {
    "full_size": 1235,
    "stripped_size": 526,
    "features": [
      "patternProperties"
    ],
    "raw_features": [
      "$id",
      "$schema",
      "properties",
      "required",
      "type",
      "type:boolean",
      "type:number",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$id": "https://json.schemastore.org/httpmockrc.json",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "description": "A tool for mock local requests or proxy remote requests.",
    "properties": {
      "mockFileName": {
        "default": "mocks",
        "type": "string",
        "description": "Root of mock files"
      },
      "requestHeaders": {
        "type": "object",
        "description": "Custom request header"
      },
      "responseHeaders": {
        "type": "object",
        "description": "Custom response header"
      },
      "parseBody": {
        "type": "boolean",
        "description": "Parse post body by express.json()"
      },
      "routes": {
        "type": "object",
        "description": "Rules for proxy and mock",
        "patternProperties": {
          "^.*$": {
            "type": "object",
            "description": "Rule of Matching route",
            "properties": {
              "path": {
                "type": "string",
                "description": "Where Mock result file located"
              },
              "ignore": {
                "type": "boolean",
                "description": "Whether to ignore this rule, generally used for remote interfaces instead of mock in the local"
              },
              "delay": {
                "type": "number",
                "description": "How many milliseconds are delayed to return a request, general used for control the request sequence"
              },
              "validate": {
                "type": "object",
                "description": "Validate params in body by key and typeof value"
              }
            },
            "required": [
              "path"
            ]
          }
        }
      }
    },
    "required": [
      "mockFileName",
      "routes"
    ],
    "title": "Http-mocker configuration.",
    "type": "object"
  },
  "tests": [
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "mockFileName": "mocks",
        "requestHeaders": {
          "Content-Type": "application/json"
        },
        "responseHeaders": {
          "Access-Control-Allow-Origin": "*"
        },
        "parseBody": true,
        "routes": {
          "/users": {
            "path": "/users.json",
            "ignore": false,
            "delay": 1000,
            "validate": {
              "name": "string",
              "age": "number"
            }
          },
          "/posts": {
            "path": "/posts.json",
            "ignore": true,
            "delay": 500
          }
        },
        "$id": "https://json.schemastore.org/httpmockrc.json",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "description": "A tool for mock local requests or proxy remote requests."
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "mockFileName": "mocks",
        "requestHeaders": {
          "Content-Type": "application/json"
        },
        "responseHeaders": {
          "Access-Control-Allow-Origin": "*"
        },
        "parseBody": true,
        "routes": {
          "/users": {
            "path": "users.json",
            "ignore": false,
            "delay": 1000,
            "validate": {
              "id": "number",
              "name": "string"
            }
          },
          "/products": {
            "path": "products.json",
            "ignore": true,
            "delay": 500
          }
        },
        "$id": "https://json.schemastore.org/httpmockrc.json"
      }
    },
    {
      "description": "llama-70b generated negative; focus on patternProperties keyword",
      "valid": false,
      "rust_error": "123 is not of type \"string\"",
      "python_error": "123 is not of type 'string'\n\nFailed validating 'type' in schema['properties']['routes']['patternProperties']['^.*$']['properties']['path']:\n    {'type': 'string', 'description': 'Where Mock result file located'}\n\nOn instance['routes']['/users']['path']:\n    123",
      "data": {
        "$id": "https://json.schemastore.org/httpmockrc.json",
        "mockFileName": "mocks",
        "requestHeaders": {
          "Content-Type": "application/json"
        },
        "responseHeaders": {
          "Access-Control-Allow-Origin": "*"
        },
        "parseBody": true,
        "routes": {
          "/users": {
            "path": 123,
            "ignore": false,
            "delay": 1000,
            "validate": {
              "id": "number",
              "name": "string"
            }
          },
          "/products": {
            "path": "products.json",
            "ignore": true,
            "delay": 500
          }
        }
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "12345 is not of type \"string\"",
      "python_error": "12345 is not of type 'string'\n\nFailed validating 'type' in schema['properties']['routes']['patternProperties']['^.*$']['properties']['path']:\n    {'type': 'string', 'description': 'Where Mock result file located'}\n\nOn instance['routes']['/users']['path']:\n    12345",
      "data": {
        "$id": "https://json.schemastore.org/httpmockrc.json",
        "mockFileName": "mocks",
        "requestHeaders": {
          "Content-Type": "application/json"
        },
        "responseHeaders": {
          "Access-Control-Allow-Origin": "*"
        },
        "parseBody": true,
        "routes": {
          "/users": {
            "path": 12345,
            "ignore": false,
            "delay": 1000,
            "validate": {
              "id": "number",
              "name": "string"
            }
          },
          "/products": {
            "path": "products.json",
            "ignore": true,
            "delay": 500
          }
        }
      }
    }
  ]
}