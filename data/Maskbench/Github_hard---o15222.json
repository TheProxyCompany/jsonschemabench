{
  "description": "sample Github_hard/o15222.json",
  "meta": {
    "full_size": 4092,
    "stripped_size": 1430,
    "features": [
      "@minmaxItems",
      "enum",
      "items"
    ],
    "raw_features": [
      "$schema",
      "minItems",
      "properties",
      "required",
      "type",
      "type:array",
      "type:number",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-06/schema#",
    "title": "Result",
    "description": "Represents the result of running CFLint",
    "type": "object",
    "properties": {
      "version": {
        "title": "Version",
        "description": "The version of CFLint that products these results",
        "type": "string"
      },
      "timestamp": {
        "title": "Timestamp",
        "description": "A timestamp representing the Unix epoch time when these results were generated",
        "type": "number"
      },
      "issues": {
        "title": "Issues",
        "description": "A list of issues reported by CFLint",
        "type": "array",
        "items": {
          "title": "Issue",
          "description": "Represents each issue found",
          "type": "object",
          "properties": {
            "severity": {
              "title": "Severity",
              "description": "The severity level of the issue",
              "type": "string",
              "enum": [
                "FATAL",
                "CRITICAL",
                "ERROR",
                "WARNING",
                "CAUTION",
                "INFO",
                "COSMETIC"
              ]
            },
            "id": {
              "title": "ID",
              "description": "Unique identifier of the rule used to find the issue",
              "type": "string"
            },
            "message": {
              "title": "Message",
              "description": "Same as ID",
              "type": "string"
            },
            "category": {
              "title": "Category",
              "description": "Currently always contains CFLINT",
              "type": "string",
              "default": "CFLINT"
            },
            "abbrev": {
              "title": "Abbreviation",
              "description": "An abbreviation of the rule used to find the issue",
              "type": "string"
            },
            "locations": {
              "title": "Locations",
              "description": "A list of locations that the issue occurs",
              "type": "array",
              "items": {
                "title": "Location",
                "description": "Properties of the individual issue reported",
                "type": "object",
                "properties": {
                  "file": {
                    "title": "File",
                    "description": "Full file path to the file in which the issue was found",
                    "type": "string"
                  },
                  "fileName": {
                    "title": "File name",
                    "description": "Just the file name in which the issue was found",
                    "type": "string"
                  },
                  "function": {
                    "title": "Function",
                    "description": "The function in which or for which the issue was found",
                    "type": "string"
                  },
                  "column": {
                    "title": "Column",
                    "description": "The column number of the starting position at which the issue was found",
                    "type": "number"
                  },
                  "line": {
                    "title": "Line",
                    "description": "The line number of the starting position at which the issue was found",
                    "type": "number"
                  },
                  "message": {
                    "title": "Message",
                    "description": "A message describing this specific issue",
                    "type": "string"
                  },
                  "variable": {
                    "title": "Variable",
                    "description": "The variable name for which the issue was found",
                    "type": "string"
                  },
                  "expression": {
                    "title": "Expression",
                    "description": "The expression in which the issue was found",
                    "type": "string"
                  }
                },
                "required": [
                  "file",
                  "fileName",
                  "function",
                  "column",
                  "line",
                  "message",
                  "variable",
                  "expression"
                ]
              },
              "minItems": 1
            }
          },
          "required": [
            "severity",
            "id",
            "message",
            "category",
            "abbrev",
            "locations"
          ]
        },
        "default": []
      },
      "counts": {
        "title": "Counts",
        "description": "Provides counts for the results of running CFLint",
        "type": "object",
        "properties": {
          "totalFiles": {
            "title": "Total Files",
            "description": "The total number of files read during this scan",
            "type": "number",
            "default": 0
          },
          "totalLines": {
            "title": "Total Lines",
            "description": "The total number of lines of code scanned",
            "type": "number",
            "default": 0
          },
          "countByCode": {
            "title": "Count by Code",
            "description": "List of issue codes with their respective issue counts",
            "type": "array",
            "items": {
              "title": "Code Count",
              "description": "The count of issues found for each distinct issue code",
              "type": "object",
              "properties": {
                "code": {
                  "title": "Current Code",
                  "description": "The current issue code being counted",
                  "type": "string"
                },
                "count": {
                  "title": "Current Count",
                  "description": "The issue count for the current issue code",
                  "type": "number"
                }
              },
              "required": [
                "code",
                "count"
              ]
            },
            "default": []
          },
          "countBySeverity": {
            "title": "Count by Severity",
            "description": "List of issue severities with their respective issue counts",
            "type": "array",
            "items": {
              "title": "Severity Count",
              "description": "The count of issues found for each distinct issue severity",
              "type": "object",
              "properties": {
                "severity": {
                  "title": "Current Severity",
                  "description": "The current issue severity being counted",
                  "type": "string"
                },
                "count": {
                  "title": "Current Count",
                  "description": "The issue count for the current severity",
                  "type": "number"
                }
              },
              "required": [
                "severity",
                "count"
              ]
            },
            "default": []
          }
        },
        "required": [
          "totalFiles",
          "totalLines",
          "countByCode",
          "countBySeverity"
        ]
      }
    },
    "required": [
      "version",
      "timestamp",
      "issues",
      "counts"
    ]
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "version": "1.0.0",
        "timestamp": 1643723400,
        "issues": [
          {
            "severity": "ERROR",
            "id": "RULE_001",
            "message": "Invalid syntax",
            "category": "CFLINT",
            "abbrev": "RULE_001",
            "locations": [
              {
                "file": "/path/to/file.cfm",
                "fileName": "file.cfm",
                "function": "myFunction",
                "column": 10,
                "line": 20,
                "message": "Invalid syntax at line 20, column 10",
                "variable": "myVariable",
                "expression": "myVariable = 10"
              }
            ]
          },
          {
            "severity": "WARNING",
            "id": "RULE_002",
            "message": "Unused variable",
            "category": "CFLINT",
            "abbrev": "RULE_002",
            "locations": [
              {
                "file": "/path/to/file.cfm",
                "fileName": "file.cfm",
                "function": "myFunction",
                "column": 15,
                "line": 30,
                "message": "Unused variable at line 30, column 15",
                "variable": "myUnusedVariable",
                "expression": "myUnusedVariable = 20"
              }
            ]
          }
        ],
        "counts": {
          "totalFiles": 1,
          "totalLines": 50,
          "countByCode": [
            {
              "code": "RULE_001",
              "count": 1
            },
            {
              "code": "RULE_002",
              "count": 1
            }
          ],
          "countBySeverity": [
            {
              "severity": "ERROR",
              "count": 1
            },
            {
              "severity": "WARNING",
              "count": 1
            }
          ]
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on minItems keyword",
      "valid": false,
      "rust_error": "[] has less than 1 item",
      "python_error": "[] should be non-empty\n\nFailed validating 'minItems' in schema['properties']['issues']['items']['properties']['locations']:\n    {'title': 'Locations',\n     'description': 'A list of locations that the issue occurs',\n     'type': 'array',\n     'items': {'title': 'Location',\n               'description': 'Properties of the individual issue reported',\n               'type': 'object',\n               'properties': {'file': {'title': 'File',\n                                       'description': 'Full file path to '\n                                                      'the file in which '\n                                                      'the issue was found',\n                                       'type': 'string'},\n                              'fileName': {'title': 'File name',\n                                           'description': 'Just the file '\n                                                          'name in which '\n                                                          'the issue was '\n         .. (3077 more)",
      "data": {
        "version": "1.0.0",
        "timestamp": 1643723400,
        "issues": [
          {
            "severity": "ERROR",
            "id": "RULE_001",
            "message": "Invalid syntax",
            "category": "CFLINT",
            "abbrev": "RULE_001",
            "locations": []
          },
          {
            "severity": "WARNING",
            "id": "RULE_002",
            "message": "Unused variable",
            "category": "CFLINT",
            "abbrev": "RULE_002",
            "locations": [
              {
                "file": "/path/to/file.cfm",
                "fileName": "file.cfm",
                "function": "myFunction",
                "column": 15,
                "line": 30,
                "message": "Unused variable at line 30, column 15",
                "variable": "myUnusedVariable",
                "expression": "myUnusedVariable = 20"
              }
            ]
          }
        ],
        "counts": {
          "totalFiles": 1,
          "totalLines": 50,
          "countByCode": [
            {
              "code": "RULE_001",
              "count": 1
            },
            {
              "code": "RULE_002",
              "count": 1
            }
          ],
          "countBySeverity": [
            {
              "severity": "ERROR",
              "count": 1
            },
            {
              "severity": "WARNING",
              "count": 1
            }
          ]
        }
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"1643723400\" is not of type \"number\"",
      "python_error": "'1643723400' is not of type 'number'\n\nFailed validating 'type' in schema['properties']['timestamp']:\n    {'title': 'Timestamp',\n     'description': 'A timestamp representing the Unix epoch time when '\n                    'these results were generated',\n     'type': 'number'}\n\nOn instance['timestamp']:\n    '1643723400'",
      "data": {
        "version": "1.0.0",
        "timestamp": "1643723400",
        "issues": [
          {
            "severity": "ERROR",
            "id": "RULE_001",
            "message": "Invalid syntax",
            "category": "CFLINT",
            "abbrev": "RULE_001",
            "locations": [
              {
                "file": "/path/to/file.cfm",
                "fileName": "file.cfm",
                "function": "myFunction",
                "column": 10,
                "line": 20,
                "message": "Invalid syntax at line 20, column 10",
                "variable": "myVariable",
                "expression": "myVariable = 10"
              }
            ]
          },
          {
            "severity": "WARNING",
            "id": "RULE_002",
            "message": "Unused variable",
            "category": "CFLINT",
            "abbrev": "RULE_002",
            "locations": [
              {
                "file": "/path/to/file.cfm",
                "fileName": "file.cfm",
                "function": "myFunction",
                "column": 15,
                "line": 30,
                "message": "Unused variable at line 30, column 15",
                "variable": "myUnusedVariable",
                "expression": "myUnusedVariable = 20"
              }
            ]
          }
        ],
        "counts": {
          "totalFiles": 1,
          "totalLines": 50,
          "countByCode": [
            {
              "code": "RULE_001",
              "count": 1
            },
            {
              "code": "RULE_002",
              "count": 1
            }
          ],
          "countBySeverity": [
            {
              "severity": "ERROR",
              "count": 1
            },
            {
              "severity": "WARNING",
              "count": 1
            },
            {
              "severity": "INVALID",
              "count": 1
            }
          ]
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on minItems keyword",
      "valid": false,
      "rust_error": "[] has less than 1 item",
      "python_error": "[] should be non-empty\n\nFailed validating 'minItems' in schema['properties']['issues']['items']['properties']['locations']:\n    {'title': 'Locations',\n     'description': 'A list of locations that the issue occurs',\n     'type': 'array',\n     'items': {'title': 'Location',\n               'description': 'Properties of the individual issue reported',\n               'type': 'object',\n               'properties': {'file': {'title': 'File',\n                                       'description': 'Full file path to '\n                                                      'the file in which '\n                                                      'the issue was found',\n                                       'type': 'string'},\n                              'fileName': {'title': 'File name',\n                                           'description': 'Just the file '\n                                                          'name in which '\n                                                          'the issue was '\n         .. (3077 more)",
      "data": {
        "version": "1.0.0",
        "timestamp": 1643723400,
        "issues": [
          {
            "severity": "ERROR",
            "id": "RULE_001",
            "message": "Invalid syntax",
            "category": "CFLINT",
            "abbrev": "RULE_001",
            "locations": []
          }
        ],
        "counts": {
          "totalFiles": 1,
          "totalLines": 50,
          "countByCode": [
            {
              "code": "RULE_001",
              "count": 1
            },
            {
              "code": "RULE_002",
              "count": 1
            }
          ],
          "countBySeverity": [
            {
              "severity": "ERROR",
              "count": 1
            },
            {
              "severity": "WARNING",
              "count": 1
            }
          ]
        }
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"UNKNOWN\" is not one of [\"FATAL\",\"CRITICAL\",\"ERROR\",\"WARNING\",\"CAUTION\",\"INFO\",\"COSMETIC\"]",
      "python_error": "'UNKNOWN' is not one of ['FATAL', 'CRITICAL', 'ERROR', 'WARNING', 'CAUTION', 'INFO', 'COSMETIC']\n\nFailed validating 'enum' in schema['properties']['issues']['items']['properties']['severity']:\n    {'title': 'Severity',\n     'description': 'The severity level of the issue',\n     'type': 'string',\n     'enum': ['FATAL',\n              'CRITICAL',\n              'ERROR',\n              'WARNING',\n              'CAUTION',\n              'INFO',\n              'COSMETIC']}\n\nOn instance['issues'][2]['severity']:\n    'UNKNOWN'",
      "data": {
        "version": "1.0.0",
        "timestamp": 1643723400,
        "issues": [
          {
            "severity": "ERROR",
            "id": "RULE_001",
            "message": "Invalid syntax",
            "category": "CFLINT",
            "abbrev": "RULE_001",
            "locations": [
              {
                "file": "/path/to/file.cfm",
                "fileName": "file.cfm",
                "function": "myFunction",
                "column": 10,
                "line": 20,
                "message": "Invalid syntax at line 20, column 10",
                "variable": "myVariable",
                "expression": "myVariable = 10"
              }
            ]
          },
          {
            "severity": "WARNING",
            "id": "RULE_002",
            "message": "Unused variable",
            "category": "CFLINT",
            "abbrev": "RULE_002",
            "locations": [
              {
                "file": "/path/to/file.cfm",
                "fileName": "file.cfm",
                "function": "myFunction",
                "column": 15,
                "line": 30,
                "message": "Unused variable at line 30, column 15",
                "variable": "myUnusedVariable",
                "expression": "myUnusedVariable = 20"
              },
              {
                "file": "/path/to/file.cfm",
                "fileName": "file.cfm",
                "function": "myFunction",
                "column": 15,
                "line": 30,
                "message": "Unused variable at line 30, column 15",
                "variable": "myUnusedVariable",
                "expression": "myUnusedVariable = 20"
              }
            ]
          },
          {
            "severity": "UNKNOWN",
            "id": "RULE_003",
            "message": "Unknown issue",
            "category": "CFLINT",
            "abbrev": "RULE_003",
            "locations": [
              {
                "file": "/path/to/file.cfm",
                "fileName": "file.cfm",
                "function": "myFunction",
                "column": 15,
                "line": 30,
                "message": "Unknown issue at line 30, column 15",
                "variable": "myUnknownVariable",
                "expression": "myUnknownVariable = 20"
              }
            ]
          }
        ],
        "counts": {
          "totalFiles": 1,
          "totalLines": 50,
          "countByCode": [
            {
              "code": "RULE_001",
              "count": 1
            },
            {
              "code": "RULE_002",
              "count": 1
            }
          ],
          "countBySeverity": [
            {
              "severity": "ERROR",
              "count": 1
            },
            {
              "severity": "WARNING",
              "count": 1
            }
          ]
        }
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "version": "1.0.0",
        "timestamp": 1643723400,
        "issues": [
          {
            "severity": "ERROR",
            "id": "RULE_001",
            "message": "This is an error message",
            "category": "CFLINT",
            "abbrev": "ERR001",
            "locations": [
              {
                "file": "/path/to/file.cfm",
                "fileName": "file.cfm",
                "function": "myFunction",
                "column": 10,
                "line": 20,
                "message": "This is a specific error message",
                "variable": "myVariable",
                "expression": "myExpression"
              }
            ]
          },
          {
            "severity": "WARNING",
            "id": "RULE_002",
            "message": "This is a warning message",
            "category": "CFLINT",
            "abbrev": "WRN002",
            "locations": [
              {
                "file": "/path/to/file2.cfm",
                "fileName": "file2.cfm",
                "function": "myFunction2",
                "column": 30,
                "line": 40,
                "message": "This is a specific warning message",
                "variable": "myVariable2",
                "expression": "myExpression2"
              }
            ]
          }
        ],
        "counts": {
          "totalFiles": 2,
          "totalLines": 100,
          "countByCode": [
            {
              "code": "RULE_001",
              "count": 1
            },
            {
              "code": "RULE_002",
              "count": 1
            }
          ],
          "countBySeverity": [
            {
              "severity": "ERROR",
              "count": 1
            },
            {
              "severity": "WARNING",
              "count": 1
            }
          ]
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on minItems keyword",
      "valid": false,
      "rust_error": "[] has less than 1 item",
      "python_error": "[] should be non-empty\n\nFailed validating 'minItems' in schema['properties']['issues']['items']['properties']['locations']:\n    {'title': 'Locations',\n     'description': 'A list of locations that the issue occurs',\n     'type': 'array',\n     'items': {'title': 'Location',\n               'description': 'Properties of the individual issue reported',\n               'type': 'object',\n               'properties': {'file': {'title': 'File',\n                                       'description': 'Full file path to '\n                                                      'the file in which '\n                                                      'the issue was found',\n                                       'type': 'string'},\n                              'fileName': {'title': 'File name',\n                                           'description': 'Just the file '\n                                                          'name in which '\n                                                          'the issue was '\n         .. (3077 more)",
      "data": {
        "version": "1.0.0",
        "timestamp": 1643723400,
        "issues": [
          {
            "severity": "ERROR",
            "id": "RULE_001",
            "message": "This is an error message",
            "category": "CFLINT",
            "abbrev": "ERR001",
            "locations": []
          }
        ],
        "counts": {
          "totalFiles": 2,
          "totalLines": 100,
          "countByCode": [
            {
              "code": "RULE_001",
              "count": 1
            }
          ],
          "countBySeverity": [
            {
              "severity": "ERROR",
              "count": 1
            }
          ]
        }
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "null is not of type \"string\"",
      "python_error": "None is not of type 'string'\n\nFailed validating 'type' in schema['properties']['version']:\n    {'title': 'Version',\n     'description': 'The version of CFLint that products these results',\n     'type': 'string'}\n\nOn instance['version']:\n    None",
      "data": {
        "version": null,
        "timestamp": 1643723400,
        "issues": [
          {
            "severity": "INVALID",
            "id": "RULE_001",
            "message": "This is an error message",
            "category": "CFLINT",
            "abbrev": "ERR001",
            "locations": [
              {
                "file": "/path/to/file.cfm",
                "fileName": "file.cfm",
                "function": "myFunction",
                "column": 10,
                "line": 20,
                "message": "This is a specific error message",
                "variable": "myVariable",
                "expression": "myExpression"
              }
            ]
          },
          {
            "severity": "WARNING",
            "id": "RULE_002",
            "message": "This is a warning message",
            "category": "CFLINT",
            "abbrev": "WRN002",
            "locations": [
              {
                "file": "/path/to/file2.cfm",
                "fileName": "file2.cfm",
                "function": "myFunction2",
                "column": 30,
                "line": "Invalid Line",
                "Invalid line number": "This is a specific warning message",
                "variable": "myVariable2",
                "expression": "myExpression2"
              }
            ]
          }
        ],
        "counts": {
          "totalFiles": "Invalid Total Files",
          "Invalid total files count": "totalLines",
          "countByCode": [
            {
              "code": "RULE_001",
              "count": 1
            },
            {
              "code": "RULE_002",
              "count": 1
            }
          ],
          "countBySeverity": [
            {
              "severity": "ERROR",
              "count": 1
            },
            {
              "severity": "WARNING",
              "count": 1
            }
          ]
        }
      }
    }
  ]
}