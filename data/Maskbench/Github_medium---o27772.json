{
  "description": "sample Github_medium/o27772.json",
  "meta": {
    "full_size": 1773,
    "stripped_size": 520,
    "features": [
      "@minmaxLength",
      "enum",
      "pattern"
    ],
    "raw_features": [
      "$schema",
      "maxLength",
      "minLength",
      "properties",
      "required",
      "type",
      "type:boolean",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "description": "Comment describing your JSON Schema",
    "type": "object",
    "properties": {
      "correlationGuid": {
        "type": "string",
        "example": "59bc5c88-15f7-49a7-9687-73b05d2c50a4",
        "pattern": "^[a-f\\d]{8}-[a-f\\d]{4}-4[a-f\\d]{3}-[89ab][a-f\\d]{3}-[a-f\\d]{12}$"
      },
      "responderGLN": {
        "type": "string",
        "minLength": 13,
        "maxLength": 13,
        "example": 9071404000002
      },
      "data": {
        "type": "object",
        "required": [
          "verified"
        ],
        "properties": {
          "verified": {
            "type": "boolean",
            "description": "If ALL 4 elements of the PI were matched, always use 'true'. Else, provide 'false' with optional 'verifiedInfo'.",
            "example": false
          },
          "verifiedInfo": {
            "type": "string",
            "description": "Optional. Only used if 'verified' is 'false' to represent which PI element(s) did not match  Instead of showing empty string or null, do NOT include unless there’s value. Values: 001 – no matching sGTIN, 002 – no matching LOT, 003 – no matching Exp Date, 004 – no matching LOT & Exp date",
            "enum": [
              "001",
              "002",
              "003",
              "004"
            ],
            "example": "002"
          },
          "additionalInfo": {
            "type": "string",
            "description": "Optional. Will be used if response is 'true' to provide additional information of the state of the sGTIN, like shipped, recalled, in-stock, decommissioned etc. These codes can be ranged from 001 to 099 with various statuses.  Instead of showing empty string or null, do NOT include unless there’s value. Values: 001 – do not re-sell; recalled, 002 – placeholder for future use, 003 – placeholder for future use",
            "enum": [
              "001",
              "002",
              "003"
            ]
          },
          "errorMessage": {
            "type": "string",
            "description": "Optional if needed (e.g. not the Responder for PI).  Instead of showing empty string or null, do NOT include unless there’s value."
          }
        }
      }
    },
    "Response001": {
      "required": [
        "correlationGuid",
        "responderGLN",
        "data"
      ]
    }
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "correlationGuid": "59bc5c88-15f7-49a7-9687-73b05d2c50a4",
        "responderGLN": "9071404000002",
        "data": {
          "verified": false,
          "verifiedInfo": "002",
          "additionalInfo": "001",
          "errorMessage": "Error message for the response"
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on minLength keyword or maxLength keyword",
      "valid": false,
      "rust_error": "\"907140400000\" is shorter than 13 characters",
      "python_error": "'907140400000' is too short\n\nFailed validating 'minLength' in schema['properties']['responderGLN']:\n    {'type': 'string',\n     'minLength': 13,\n     'maxLength': 13,\n     'example': 9071404000002}\n\nOn instance['responderGLN']:\n    '907140400000'",
      "data": {
        "correlationGuid": "59bc5c88-15f7-49a7-9687-73b05d2c50a4",
        "responderGLN": "907140400000",
        "data": {
          "verified": false,
          "verifiedInfo": "002",
          "additionalInfo": "001",
          "errorMessage": "Error message for the response"
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on pattern keyword",
      "valid": false,
      "rust_error": "\"59bc5c88-15f7-49a7-9687-73b05d2c50a\" does not match \"^[a-f\\d]{8}-[a-f\\d]{4}-4[a-f\\d]{3}-[89ab][a-f\\d]{3}-[a-f\\d]{12}$\"",
      "python_error": "'59bc5c88-15f7-49a7-9687-73b05d2c50a' does not match '^[a-f\\\\d]{8}-[a-f\\\\d]{4}-4[a-f\\\\d]{3}-[89ab][a-f\\\\d]{3}-[a-f\\\\d]{12}$'\n\nFailed validating 'pattern' in schema['properties']['correlationGuid']:\n    {'type': 'string',\n     'example': '59bc5c88-15f7-49a7-9687-73b05d2c50a4',\n     'pattern': '^[a-f\\\\d]{8}-[a-f\\\\d]{4}-4[a-f\\\\d]{3}-[89ab][a-f\\\\d]{3}-[a-f\\\\d]{12}$'}\n\nOn instance['correlationGuid']:\n    '59bc5c88-15f7-49a7-9687-73b05d2c50a'",
      "data": {
        "correlationGuid": "59bc5c88-15f7-49a7-9687-73b05d2c50a",
        "responderGLN": "9071404000002",
        "data": {
          "verified": false,
          "verifiedInfo": "002",
          "additionalInfo": "001",
          "errorMessage": "Error message for the response"
        }
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "correlationGuid": "59bc5c88-15f7-49a7-9687-73b05d2c50a4",
        "responderGLN": "9071404000002",
        "data": {
          "verified": false,
          "verifiedInfo": "002",
          "additionalInfo": "001",
          "errorMessage": "Not the Responder for PI"
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on pattern keyword",
      "valid": false,
      "rust_error": "\"59bc5c88-15f7-49a7-9687-73b05d2c50a\" does not match \"^[a-f\\d]{8}-[a-f\\d]{4}-4[a-f\\d]{3}-[89ab][a-f\\d]{3}-[a-f\\d]{12}$\"",
      "python_error": "'59bc5c88-15f7-49a7-9687-73b05d2c50a' does not match '^[a-f\\\\d]{8}-[a-f\\\\d]{4}-4[a-f\\\\d]{3}-[89ab][a-f\\\\d]{3}-[a-f\\\\d]{12}$'\n\nFailed validating 'pattern' in schema['properties']['correlationGuid']:\n    {'type': 'string',\n     'example': '59bc5c88-15f7-49a7-9687-73b05d2c50a4',\n     'pattern': '^[a-f\\\\d]{8}-[a-f\\\\d]{4}-4[a-f\\\\d]{3}-[89ab][a-f\\\\d]{3}-[a-f\\\\d]{12}$'}\n\nOn instance['correlationGuid']:\n    '59bc5c88-15f7-49a7-9687-73b05d2c50a'",
      "data": {
        "correlationGuid": "59bc5c88-15f7-49a7-9687-73b05d2c50a",
        "responderGLN": "9071404000002",
        "data": {
          "verified": false,
          "verifiedInfo": "002",
          "additionalInfo": "001",
          "errorMessage": "Not the Responder for PI"
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on minLength keyword or maxLength keyword",
      "valid": false,
      "rust_error": "\"907140400000\" is shorter than 13 characters",
      "python_error": "'907140400000' is too short\n\nFailed validating 'minLength' in schema['properties']['responderGLN']:\n    {'type': 'string',\n     'minLength': 13,\n     'maxLength': 13,\n     'example': 9071404000002}\n\nOn instance['responderGLN']:\n    '907140400000'",
      "data": {
        "correlationGuid": "59bc5c88-15f7-49a7-9687-73b05d2c50a4",
        "responderGLN": "907140400000",
        "data": {
          "verified": false,
          "verifiedInfo": "002",
          "additionalInfo": "001",
          "errorMessage": "Not the Responder for PI"
        }
      }
    }
  ]
}