{
  "description": "sample Github_easy/o90280.json",
  "meta": {
    "full_size": 1204,
    "stripped_size": 236,
    "features": [
      "additionalProperties",
      "enum"
    ],
    "raw_features": [
      "$schema",
      "_boolSchema",
      "properties",
      "type",
      "type:string"
    ]
  },
  "schema": {
    "title": "popupExpressionInfo",
    "$schema": "http://json-schema.org/draft-04/schema",
    "description": "Arcade expression added to the pop-up.",
    "properties": {
      "expression": {
        "type": "string",
        "description": "The Arcade expression."
      },
      "name": {
        "type": "string",
        "description": "Unique identifier for the expression."
      },
      "returnType": {
        "type": "string",
        "description": "Return type of the Arcade expression, can be number or string. Defaults to string value. Number values are assumed to be `double`. This can be determined by the authoring client by executing the expression using a sample feature(s), although it can be corrected by the user. Knowing the returnType allows the authoring client to present fields in relevant contexts. For example, numeric fields in numeric contexts such as charts.",
        "enum": [
          "number",
          "string"
        ]
      },
      "title": {
        "type": "string",
        "description": "Title of the expression."
      }
    },
    "additionalProperties": false,
    "esriDocumentation": {
      "examples": [
        {
          "code": {
            "expressionInfos": [
              {
                "name": "expr1",
                "title": "Population (Expr)",
                "expression": "$feature.pop2000",
                "returnType": "number"
              },
              {
                "name": "expr2",
                "title": "Name (Abbr) (Expr)",
                "expression": "$feature.state_name + ' (' + $feature.state_abbr + ')'",
                "returnType": "string"
              }
            ]
          }
        }
      ]
    }
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "expression": "$feature.pop2000",
        "name": "expr1",
        "returnType": "number",
        "title": "Population (Expr)"
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"integer\" is not one of [\"number\",\"string\"]",
      "python_error": "'integer' is not one of ['number', 'string']\n\nFailed validating 'enum' in schema['properties']['returnType']:\n    {'type': 'string',\n     'description': 'Return type of the Arcade expression, can be number '\n                    'or string. Defaults to string value. Number values '\n                    'are assumed to be `double`. This can be determined by '\n                    'the authoring client by executing the expression '\n                    'using a sample feature(s), although it can be '\n                    'corrected by the user. Knowing the returnType allows '\n                    'the authoring client to present fields in relevant '\n                    'contexts. For example, numeric fields in numeric '\n                    'contexts such as charts.',\n     'enum': ['number', 'string']}\n\nOn instance['returnType']:\n    'integer'",
      "data": {
        "expression": "$feature.pop2000",
        "name": "expr1",
        "returnType": "integer",
        "title": "Population (Expr)"
      }
    }
  ]
}