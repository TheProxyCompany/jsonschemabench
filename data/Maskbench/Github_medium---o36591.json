{
  "description": "sample Github_medium/o36591.json",
  "meta": {
    "full_size": 1479,
    "stripped_size": 1399,
    "features": [
      "$ref",
      "@minmaxInteger",
      "@minmaxItems",
      "@minmaxProperties",
      "enum",
      "items",
      "oneOf",
      "patternProperties"
    ],
    "raw_features": [
      "definitions",
      "minItems",
      "minProperties",
      "minimum",
      "properties",
      "required",
      "type",
      "type:[]",
      "type:array",
      "type:integer",
      "type:null",
      "type:number",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "definitions": {
      "formula": {
        "properties": {
          "equation": {
            "type": "string"
          },
          "variables": {
            "minProperties": 1,
            "patternProperties": {
              "^.+$": {
                "$ref": "#/definitions/variable"
              }
            },
            "type": "object"
          }
        },
        "required": [
          "equation",
          "variables"
        ],
        "type": "object"
      },
      "metric": {
        "properties": {
          "classification": {
            "type": "string"
          },
          "dataType": {
            "enum": [
              "count",
              "percentage",
              "numeric",
              "integer",
              "time"
            ],
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "devices": {
            "oneOf": [
              {
                "$ref": "#/definitions/stringArray"
              },
              {
                "type": "null"
              }
            ]
          },
          "displayName": {
            "type": "string"
          },
          "formula": {
            "$ref": "#/definitions/formula"
          },
          "max": {
            "type": [
              "string",
              "number",
              "null"
            ]
          },
          "min": {
            "type": [
              "string",
              "number",
              "null"
            ]
          },
          "notes": {
            "type": "string"
          },
          "platforms": {
            "type": "object"
          },
          "refs": {
            "$ref": "#/definitions/stringArray"
          },
          "sigFigs": {
            "oneOf": [
              {
                "$ref": "#/definitions/positiveInteger"
              },
              {
                "type": "null"
              }
            ]
          },
          "type": {
            "enum": [
              "raw",
              "derived"
            ],
            "type": "string"
          },
          "units": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "required": [
          "displayName",
          "units",
          "max",
          "min",
          "sigFigs",
          "dataType",
          "type",
          "formula",
          "description",
          "notes",
          "platforms",
          "devices",
          "classification",
          "refs"
        ],
        "type": "object"
      },
      "positiveInteger": {
        "minimum": 0,
        "type": "integer"
      },
      "stringArray": {
        "items": {
          "type": "string"
        },
        "minItems": 1,
        "type": "array",
        "_uniqueItems": true
      },
      "variable": {
        "properties": {
          "description": {
            "type": "string"
          }
        },
        "required": [
          "description"
        ],
        "type": "object"
      }
    },
    "description": "Schema for doc-metrix metric documentation.",
    "minProperties": 1,
    "patternProperties": {
      "^.+$": {
        "$ref": "#/definitions/metric"
      }
    },
    "type": "object"
  },
  "tests": [
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "metric1": {
          "classification": "example",
          "dataType": "numeric",
          "description": "This is an example metric.",
          "devices": [
            "device1",
            "device2"
          ],
          "displayName": "Example Metric",
          "formula": {
            "equation": "x + y",
            "variables": {
              "x": {
                "description": "Variable x"
              },
              "y": {
                "description": "Variable y"
              }
            }
          },
          "max": 100,
          "min": 0,
          "notes": "This is an example note.",
          "platforms": {
            "platform1": true,
            "platform2": true
          },
          "refs": [
            "ref1",
            "ref2"
          ],
          "sigFigs": 2,
          "type": "derived",
          "units": "units"
        },
        "metric2": {
          "classification": "example",
          "dataType": "percentage",
          "description": "This is another example metric.",
          "devices": null,
          "displayName": "Another Example Metric",
          "formula": {
            "equation": "x / y",
            "variables": {
              "x": {
                "description": "Variable x"
              },
              "y": {
                "description": "Variable y"
              }
            }
          },
          "max": null,
          "min": null,
          "notes": "This is another example note.",
          "platforms": {
            "platform1": true,
            "platform2": true
          },
          "refs": [
            "ref3",
            "ref4"
          ],
          "sigFigs": null,
          "type": "raw",
          "units": "%"
        }
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "metric1": {
          "classification": "classification1",
          "dataType": "numeric",
          "description": "This is a metric.",
          "devices": [
            "device1",
            "device2"
          ],
          "displayName": "Metric 1",
          "formula": {
            "equation": "a + b",
            "variables": {
              "a": {
                "description": "Variable a"
              },
              "b": {
                "description": "Variable b"
              }
            }
          },
          "max": 100,
          "min": 0,
          "notes": "Some notes about the metric.",
          "platforms": {
            "platform1": "description1",
            "platform2": "description2"
          },
          "refs": [
            "ref1",
            "ref2"
          ],
          "sigFigs": 2,
          "type": "derived",
          "units": "units1"
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on oneOf keyword",
      "valid": false,
      "rust_error": "{\"device1\":\"device1\",\"device2\":\"device2\"} is not valid under any of the schemas listed in the 'oneOf' keyword",
      "python_error": "{'device1': 'device1', 'device2': 'device2'} is not valid under any of the given schemas\n\nFailed validating 'oneOf' in schema['patternProperties']['^.+$']['properties']['devices']:\n    {'oneOf': [{'$ref': '#/definitions/stringArray'}, {'type': 'null'}]}\n\nOn instance['metric1']['devices']:\n    {'device1': 'device1', 'device2': 'device2'}",
      "data": {
        "metric1": {
          "classification": "classification1",
          "dataType": "numeric",
          "description": "This is a metric.",
          "devices": {
            "device1": "device1",
            "device2": "device2"
          },
          "displayName": "Metric 1",
          "formula": {
            "equation": "a + b",
            "variables": {
              "a": {
                "description": "Variable a"
              },
              "b": {
                "description": "Variable b"
              }
            }
          },
          "max": 100,
          "min": 0,
          "notes": "Some notes about the metric.",
          "platforms": {
            "platform1": "description1",
            "platform2": "description2"
          },
          "refs": [
            "ref1",
            "ref2"
          ],
          "sigFigs": 2,
          "type": "derived",
          "units": "units1"
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on type keyword with an array of types",
      "valid": false,
      "rust_error": "true is not of types \"null\", \"number\", \"string\"",
      "python_error": "True is not of type 'string', 'number', 'null'\n\nFailed validating 'type' in schema['patternProperties']['^.+$']['properties']['max']:\n    {'type': ['string', 'number', 'null']}\n\nOn instance['metric1']['max']:\n    True",
      "data": {
        "metric1": {
          "classification": "classification1",
          "dataType": "numeric",
          "description": "This is a metric.",
          "devices": [
            "device1",
            "device2"
          ],
          "displayName": "Metric 1",
          "formula": {
            "equation": "a + b",
            "variables": {
              "a": {
                "description": "Variable a"
              },
              "b": {
                "description": "Variable b"
              }
            }
          },
          "max": true,
          "min": 0,
          "notes": "Some notes about the metric.",
          "platforms": {
            "platform1": "description1",
            "platform2": "description2"
          },
          "refs": [
            "ref1",
            "ref2"
          ],
          "sigFigs": 2,
          "type": "derived",
          "units": "units1"
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on minProperties keyword",
      "valid": false,
      "rust_error": "{} has less than 1 property",
      "python_error": "{} should be non-empty\n\nFailed validating 'minProperties' in schema['patternProperties']['^.+$']['properties']['formula']['properties']['variables']:\n    {'minProperties': 1,\n     'patternProperties': {'^.+$': {'$ref': '#/definitions/variable'}},\n     'type': 'object'}\n\nOn instance['metric1']['formula']['variables']:\n    {}",
      "data": {
        "metric1": {
          "classification": "classification1",
          "dataType": "numeric",
          "description": "This is a metric.",
          "devices": [
            "device1",
            "device2"
          ],
          "displayName": "Metric 1",
          "formula": {
            "equation": "a + b",
            "variables": {}
          },
          "max": 100,
          "min": 0,
          "notes": "Some notes about the metric.",
          "platforms": {
            "platform1": "description1",
            "platform2": "description2"
          },
          "refs": [
            "ref1",
            "ref2"
          ],
          "sigFigs": 2,
          "type": "derived",
          "units": "units1"
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on minItems keyword",
      "valid": false,
      "rust_error": "[] is not valid under any of the schemas listed in the 'oneOf' keyword",
      "python_error": "[] should be non-empty\n\nFailed validating 'minItems' in schema['patternProperties']['^.+$']['properties']['refs']:\n    {'items': {'type': 'string'},\n     'minItems': 1,\n     'type': 'array',\n     '_uniqueItems': True}\n\nOn instance['metric1']['refs']:\n    []",
      "data": {
        "metric1": {
          "classification": "classification1",
          "dataType": "numeric",
          "description": "This is a metric.",
          "devices": [],
          "displayName": "Metric 1",
          "formula": {
            "equation": "a + b",
            "variables": {
              "a": {
                "description": "Variable a"
              },
              "b": {
                "description": "Variable b"
              }
            }
          },
          "max": 100,
          "min": 0,
          "notes": "Some notes about the metric.",
          "platforms": {
            "platform1": "description1",
            "platform2": "description2"
          },
          "refs": [],
          "sigFigs": 2,
          "type": "derived",
          "units": "units1"
        }
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"\" is not of type \"object\"",
      "python_error": "5 is not of type 'string'\n\nFailed validating 'type' in schema['patternProperties']['^.+$']['properties']['refs']['items']:\n    {'type': 'string'}\n\nOn instance['metric1']['refs'][2]:\n    5",
      "data": {
        "metric1": {
          "classification": "classification1",
          "dataType": "numeric",
          "description": "This is a metric.",
          "devices": [
            "device1",
            "device2",
            "device2",
            "Duplicate value in devices array"
          ],
          "displayName": "Metric 1",
          "formula": {
            "equation": "a + b",
            "variables": {
              "Empty variable description": ""
            }
          },
          "max": 100,
          "min": 0,
          "notes": "Some notes about the metric.",
          "platforms": {},
          "Empty platforms object": "ref1",
          "refs": [
            "ref1",
            "ref2",
            5,
            "Invalid type in refs array, should be string"
          ],
          "sigFigs": null,
          "Invalid type for sigFigs, should be positive integer or null": "derived",
          "type": "derived",
          "Extra property in type": "units1",
          "units": "units1",
          "Extra property in units": "description1",
          "platform1": "description1",
          "Extra property outside of metric definition": "description2",
          "platform2": "description2"
        }
      }
    }
  ]
}