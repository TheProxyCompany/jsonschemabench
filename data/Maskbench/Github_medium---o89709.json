{
  "description": "sample Github_medium/o89709.json",
  "meta": {
    "full_size": 1242,
    "stripped_size": 484,
    "features": [
      "@minmaxItems",
      "@minmaxLength",
      "enum"
    ],
    "raw_features": [
      "minItems",
      "minLength",
      "properties",
      "required",
      "type",
      "type:[]",
      "type:array",
      "type:null",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "description": "Minimum required output for a LogMessage",
    "properties": {
      "application": {
        "description": "Application that raised the log.",
        "minLength": 1,
        "type": "string"
      },
      "datetime": {
        "_format": "date-time",
        "description": "The datetime this log event occured (ISO8601 combined date/time format (including timezone) for storage).",
        "type": "string"
      },
      "extra": {
        "description": "Any extra data to store alongside the log entry.",
        "type": [
          "string",
          "null"
        ]
      },
      "message": {
        "description": "Message for the log but use printf standard for arguments where required.",
        "minLength": 1,
        "type": "string"
      },
      "messageArgs": {
        "description": "Arguments to format into Message.",
        "minItems": 0,
        "type": "array",
        "_uniqueItems": false
      },
      "module": {
        "description": "Optional module in the application that raised the log.",
        "type": "string"
      },
      "severity": {
        "description": "The severity of this log message.",
        "enum": [
          "emergency",
          "alert",
          "critical",
          "error",
          "warning",
          "notice",
          "informational",
          "debug"
        ],
        "type": "string"
      },
      "source": {
        "description": "The identifier of the machine the log came from (IP, DNS name etc, any unique identifier).",
        "minLength": 1,
        "type": "string"
      }
    },
    "required": [
      "severity",
      "datetime",
      "source",
      "application",
      "message"
    ],
    "title": "com.xcitestudios.schema.Logging.LogMessage",
    "type": "object"
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "application": "Example Application",
        "datetime": "2022-01-01T12:00:00+00:00",
        "extra": null,
        "message": "User %s logged in successfully",
        "messageArgs": [
          "John Doe"
        ],
        "module": "Authentication Module",
        "severity": "informational",
        "source": "192.168.1.100"
      }
    },
    {
      "description": "llama-70b generated negative; focus on minLength keyword",
      "valid": false,
      "rust_error": "\"\" is shorter than 1 character",
      "python_error": "'' should be non-empty\n\nFailed validating 'minLength' in schema['properties']['source']:\n    {'description': 'The identifier of the machine the log came from (IP, '\n                    'DNS name etc, any unique identifier).',\n     'minLength': 1,\n     'type': 'string'}\n\nOn instance['source']:\n    ''",
      "data": {
        "application": "",
        "datetime": "2022-01-01T12:00:00+00:00",
        "extra": null,
        "message": "",
        "messageArgs": [
          "John Doe"
        ],
        "module": "Authentication Module",
        "severity": "informational",
        "source": ""
      }
    },
    {
      "description": "llama-70b generated negative; focus on type keyword with an array of types",
      "valid": false,
      "rust_error": "123 is not of types \"null\", \"string\"",
      "python_error": "123 is not of type 'string', 'null'\n\nFailed validating 'type' in schema['properties']['extra']:\n    {'description': 'Any extra data to store alongside the log entry.',\n     'type': ['string', 'null']}\n\nOn instance['extra']:\n    123",
      "data": {
        "application": "Example Application",
        "datetime": "2022-01-01T12:00:00+00:00",
        "extra": 123,
        "message": "User %s logged in successfully",
        "messageArgs": [
          "John Doe"
        ],
        "module": "Authentication Module",
        "severity": "informational",
        "source": "192.168.1.100"
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"\" is shorter than 1 character",
      "python_error": "'' should be non-empty\n\nFailed validating 'minLength' in schema['properties']['application']:\n    {'description': 'Application that raised the log.',\n     'minLength': 1,\n     'type': 'string'}\n\nOn instance['application']:\n    ''",
      "data": {
        "application": "",
        "datetime": "2022-01-01T12:00:00+00:00",
        "extra": null,
        "message": "User %s logged in successfully",
        "messageArgs": [
          "John Doe"
        ],
        "module": "Authentication Module",
        "severity": "informational",
        "source": "192.168.1.100"
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "application": "Example Application",
        "datetime": "2022-01-01T12:00:00+00:00",
        "extra": null,
        "message": "User %s logged in successfully",
        "messageArgs": [
          "John Doe"
        ],
        "module": "Authentication",
        "severity": "informational",
        "source": "192.168.1.100"
      }
    },
    {
      "description": "llama-70b generated negative; focus on type keyword with an array of types",
      "valid": false,
      "rust_error": "123 is not of types \"null\", \"string\"",
      "python_error": "123 is not of type 'string', 'null'\n\nFailed validating 'type' in schema['properties']['extra']:\n    {'description': 'Any extra data to store alongside the log entry.',\n     'type': ['string', 'null']}\n\nOn instance['extra']:\n    123",
      "data": {
        "application": "Example Application",
        "datetime": "2022-01-01T12:00:00+00:00",
        "extra": 123,
        "message": "User %s logged in successfully",
        "messageArgs": [
          "John Doe"
        ],
        "module": "Authentication",
        "severity": "informational",
        "source": "192.168.1.100"
      }
    },
    {
      "description": "llama-70b generated negative; focus on minLength keyword",
      "valid": false,
      "rust_error": "\"\" is shorter than 1 character",
      "python_error": "'' should be non-empty\n\nFailed validating 'minLength' in schema['properties']['application']:\n    {'description': 'Application that raised the log.',\n     'minLength': 1,\n     'type': 'string'}\n\nOn instance['application']:\n    ''",
      "data": {
        "application": "",
        "datetime": "2022-01-01T12:00:00+00:00",
        "extra": null,
        "message": "User %s logged in successfully",
        "messageArgs": [
          "John Doe"
        ],
        "module": "Authentication",
        "severity": "informational",
        "source": "192.168.1.100"
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"\" is shorter than 1 character",
      "python_error": "'' should be non-empty\n\nFailed validating 'minLength' in schema['properties']['application']:\n    {'description': 'Application that raised the log.',\n     'minLength': 1,\n     'type': 'string'}\n\nOn instance['application']:\n    ''",
      "data": {
        "application": "",
        "datetime": "2022-01-01T12:00:00+00:00",
        "extra": null,
        "message": "User %s logged in successfully",
        "messageArgs": [
          "John Doe"
        ],
        "module": "Authentication",
        "severity": "informational",
        "source": "192.168.1.100"
      }
    }
  ]
}