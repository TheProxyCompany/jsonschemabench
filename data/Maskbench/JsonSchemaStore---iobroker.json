{
  "description": "sample JsonSchemaStore/iobroker.json",
  "meta": {
    "full_size": 7918,
    "stripped_size": 5382,
    "features": [
      "$ref",
      "@siblingKeys",
      "additionalProperties",
      "additionalProperties:object",
      "const",
      "enum"
    ],
    "raw_features": [
      "$schema",
      "_boolSchema",
      "definitions",
      "properties",
      "required",
      "type",
      "type:boolean",
      "type:number",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$ref": "#/definitions/IoBJson",
    "definitions": {
      "IoBJson": {
        "type": "object",
        "properties": {
          "system": {
            "type": "object",
            "properties": {
              "memoryLimitMB": {
                "type": "number",
                "description": "do not use more than memory limit mb by ioB process (0 to deactivate)"
              },
              "hostname": {
                "type": "string",
                "description": "if empty, determine use real hostname"
              },
              "statisticsInterval": {
                "type": "number",
                "description": "Interval how often the counters for input/output in adapters and controller will be updated in ms"
              },
              "// statisticsInterval": {
                "type": "string"
              },
              "checkDiskInterval": {
                "type": "number",
                "description": "Interval how often the disk size will be checked in ms"
              },
              "// checkDiskInterval": {
                "type": "string"
              },
              "instanceStartInterval": {
                "type": "number",
                "description": "interval to wait between multiple instances starts"
              },
              "compact": {
                "type": "boolean",
                "description": "Controller will try to start the instances as a part of the same process. No spawn will be done. Only by adapters that support it and have flag compact flag in io-package.json"
              },
              "// compact": {
                "type": "string"
              },
              "allowShellCommands": {
                "type": "boolean",
                "description": "Allow execution of \"shell\" sendToHost commands"
              },
              "// allowShellCommands": {
                "type": "string"
              },
              "memLimitWarn": {
                "type": "number",
                "description": "If the available RAM is below this threshold on adapter start, a warning will be logged."
              },
              "// memLimitWarn": {
                "type": "string"
              },
              "memLimitError": {
                "type": "number",
                "description": "If the available RAM is below this threshold on adapter start, an error will be logged."
              },
              "// memLimitError": {
                "type": "string"
              }
            },
            "required": [
              "memoryLimitMB",
              "hostname",
              "statisticsInterval",
              "// statisticsInterval",
              "checkDiskInterval",
              "// checkDiskInterval",
              "instanceStartInterval",
              "compact",
              "// compact",
              "allowShellCommands",
              "// allowShellCommands",
              "memLimitWarn",
              "// memLimitWarn",
              "memLimitError",
              "// memLimitError"
            ],
            "additionalProperties": false
          },
          "multihostService": {
            "type": "object",
            "properties": {
              "enabled": {
                "type": "boolean"
              },
              "secure": {
                "type": "boolean"
              },
              "password": {
                "type": "string"
              }
            },
            "required": [
              "enabled",
              "secure",
              "password"
            ],
            "additionalProperties": false
          },
          "objects": {
            "$ref": "#/definitions/ObjectsDatabaseOptions"
          },
          "states": {
            "$ref": "#/definitions/DatabaseOptions"
          },
          "log": {
            "type": "object",
            "properties": {
              "level": {
                "type": "string"
              },
              "maxDays": {
                "type": "number"
              },
              "noStdout": {
                "type": "boolean"
              },
              "transport": {
                "type": "object"
              }
            },
            "required": [
              "level",
              "maxDays",
              "noStdout",
              "transport"
            ],
            "additionalProperties": false
          },
          "dataDir": {
            "type": "string",
            "description": "Always relative to iobroker.js-controller/"
          },
          "// dataDir": {
            "type": "string"
          },
          "plugins": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean"
                }
              },
              "required": [
                "enabled"
              ],
              "additionalProperties": {}
            }
          },
          "// dnsResolution": {
            "type": "string"
          },
          "dnsResolution": {
            "type": "string",
            "enum": [
              "verbatim",
              "ipv4first"
            ],
            "description": "Use 'verbatim' for ipv6 first, else use 'ipv4first'"
          }
        },
        "required": [
          "system",
          "multihostService",
          "objects",
          "states",
          "log",
          "dataDir",
          "// dataDir",
          "plugins",
          "// dnsResolution",
          "dnsResolution"
        ],
        "additionalProperties": false,
        "description": "The ioBroker global config"
      },
      "ObjectsDatabaseOptions": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "jsonl",
              "file",
              "redis"
            ],
            "description": "Possible values: 'file' - [port 9001], 'jsonl' - [port 9001], 'redis' - [port 6379 or 26379 for sentinel]."
          },
          "// type": {
            "type": "string"
          },
          "host": {
            "type": "string"
          },
          "port": {
            "type": "number"
          },
          "connectTimeout": {
            "type": "number"
          },
          "writeFileInterval": {
            "type": "number"
          },
          "dataDir": {
            "type": "string"
          },
          "options": {
            "type": "object",
            "properties": {
              "auth_pass": {
                "type": "string"
              },
              "retry_max_delay": {
                "type": "number"
              },
              "retry_max_count": {
                "type": "number"
              },
              "db": {
                "type": "number"
              },
              "family": {
                "type": "number"
              }
            },
            "required": [
              "auth_pass",
              "retry_max_delay",
              "retry_max_count",
              "db",
              "family"
            ],
            "additionalProperties": false
          },
          "backup": {
            "$ref": "#/definitions/DatabaseBackupOptions"
          },
          "jsonlOptions": {
            "$ref": "#/definitions/JsonlOptions"
          },
          "noFileCache": {
            "type": "boolean"
          },
          "maxQueue": {
            "type": "number"
          }
        },
        "required": [
          "// type",
          "backup",
          "connectTimeout",
          "dataDir",
          "host",
          "jsonlOptions",
          "maxQueue",
          "noFileCache",
          "options",
          "port",
          "type",
          "writeFileInterval"
        ],
        "additionalProperties": false
      },
      "DatabaseBackupOptions": {
        "type": "object",
        "properties": {
          "disabled": {
            "type": "boolean"
          },
          "files": {
            "type": "number",
            "description": "Minimal number of backup files, after the deletion will be executed according to backupTime settings"
          },
          "// files": {
            "type": "string"
          },
          "hours": {
            "type": "number",
            "description": "All backups older than configured hours will be deleted. But only if the number of files is greater than of backupNumber"
          },
          "// hours": {
            "type": "string"
          },
          "period": {
            "type": "number",
            "description": "by default backup every 2 hours. Time is in minutes. To disable backup set the value to 0"
          },
          "// period": {
            "type": "string"
          },
          "path": {
            "type": "string",
            "description": "Absolute path to backup directory or empty to backup in data directory"
          },
          "// path": {
            "type": "string"
          }
        },
        "required": [
          "disabled",
          "files",
          "// files",
          "hours",
          "// hours",
          "period",
          "// period",
          "path",
          "// path"
        ],
        "additionalProperties": false
      },
      "JsonlOptions": {
        "type": "object",
        "properties": {
          "// autoCompress (1)": {
            "type": "string"
          },
          "// autoCompress (2)": {
            "type": "string"
          },
          "// autoCompress (3)": {
            "type": "string"
          },
          "autoCompress": {
            "type": "object",
            "properties": {
              "sizeFactor": {
                "type": "number"
              },
              "sizeFactorMinimumSize": {
                "type": "number"
              }
            },
            "required": [
              "sizeFactor",
              "sizeFactorMinimumSize"
            ],
            "additionalProperties": false,
            "description": "The JSONL DB is append-only and will contain unnecessary entries after a while. It will be compressed when the uncompressed size is >= size * sizeFactor AND >= sizeFactorMinimumSize Note that too low values here will cause the DB to be rewritten often."
          },
          "// ignoreReadErrors": {
            "type": "string"
          },
          "ignoreReadErrors": {
            "type": "boolean",
            "const": true,
            "description": "If single lines in the DB are corrupted, they can be ignored without losing the whole DB."
          },
          "// throttleFS (1)": {
            "type": "string"
          },
          "// throttleFS (2)": {
            "type": "string"
          },
          "throttleFS": {
            "type": "object",
            "properties": {
              "// intervalMs": {
                "type": "string"
              },
              "intervalMs": {
                "type": "number",
                "description": "Write to the database file no more than every intervalMs milliseconds."
              },
              "// maxBufferedCommands": {
                "type": "string"
              },
              "maxBufferedCommands": {
                "type": "number",
                "description": "Force writing after this many changes have been buffered. This reduces memory consumption and data loss in case of a crash."
              }
            },
            "required": [
              "// intervalMs",
              "intervalMs",
              "// maxBufferedCommands",
              "maxBufferedCommands"
            ],
            "additionalProperties": false,
            "description": "By default, the database immediately writes to the database file. Write accesses can be reduced using the throttleFS option. Be aware that buffered changes will be lost in case the process crashes"
          }
        },
        "required": [
          "// autoCompress (1)",
          "// autoCompress (2)",
          "// autoCompress (3)",
          "autoCompress",
          "// ignoreReadErrors",
          "ignoreReadErrors",
          "// throttleFS (1)",
          "// throttleFS (2)",
          "throttleFS"
        ],
        "additionalProperties": false
      },
      "DatabaseOptions": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "jsonl",
              "file",
              "redis"
            ],
            "description": "Possible values: 'file' - [port 9001], 'jsonl' - [port 9001], 'redis' - [port 6379 or 26379 for sentinel]."
          },
          "// type": {
            "type": "string"
          },
          "host": {
            "type": "string"
          },
          "port": {
            "type": "number"
          },
          "connectTimeout": {
            "type": "number"
          },
          "writeFileInterval": {
            "type": "number"
          },
          "dataDir": {
            "type": "string"
          },
          "options": {
            "type": "object",
            "properties": {
              "auth_pass": {
                "type": "string"
              },
              "retry_max_delay": {
                "type": "number"
              },
              "retry_max_count": {
                "type": "number"
              },
              "db": {
                "type": "number"
              },
              "family": {
                "type": "number"
              }
            },
            "required": [
              "auth_pass",
              "retry_max_delay",
              "retry_max_count",
              "db",
              "family"
            ],
            "additionalProperties": false
          },
          "backup": {
            "$ref": "#/definitions/DatabaseBackupOptions"
          },
          "jsonlOptions": {
            "$ref": "#/definitions/JsonlOptions"
          }
        },
        "required": [
          "type",
          "// type",
          "host",
          "port",
          "connectTimeout",
          "writeFileInterval",
          "dataDir",
          "options",
          "backup",
          "jsonlOptions"
        ],
        "additionalProperties": false
      }
    }
  },
  "tests": [
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "system": {
          "memoryLimitMB": 1024,
          "hostname": "localhost",
          "statisticsInterval": 1000,
          "// statisticsInterval": "Interval how often the counters for input/output in adapters and controller will be updated in ms",
          "checkDiskInterval": 60000,
          "// checkDiskInterval": "Interval how often the disk size will be checked in ms",
          "instanceStartInterval": 1000,
          "compact": true,
          "// compact": "Controller will try to start the instances as a part of the same process. No spawn will be done. Only by adapters that support it and have flag compact flag in io-package.json",
          "allowShellCommands": false,
          "// allowShellCommands": "Allow execution of \"shell\" sendToHost commands",
          "memLimitWarn": 512,
          "// memLimitWarn": "If the available RAM is below this threshold on adapter start, a warning will be logged.",
          "memLimitError": 256,
          "// memLimitError": "If the available RAM is below this threshold on adapter start, an error will be logged."
        },
        "multihostService": {
          "enabled": true,
          "secure": false,
          "password": "password"
        },
        "objects": {
          "type": "jsonl",
          "// type": "Possible values: 'file' - [port 9001], 'jsonl' - [port 9001], 'redis' - [port 6379 or 26379 for sentinel].",
          "host": "localhost",
          "port": 9001,
          "connectTimeout": 10000,
          "writeFileInterval": 1000,
          "dataDir": "/data/objects",
          "options": {
            "auth_pass": "",
            "retry_max_delay": 1000,
            "retry_max_count": 10,
            "db": 0,
            "family": 4
          },
          "backup": {
            "disabled": false,
            "files": 10,
            "// files": "Minimal number of backup files, after the deletion will be executed according to backupTime settings",
            "hours": 24,
            "// hours": "All backups older than configured hours will be deleted. But only if the number of files is greater than of backupNumber",
            "period": 120,
            "// period": "by default backup every 2 hours. Time is in minutes. To disable backup set the value to 0",
            "path": "/data/objects/backup",
            "// path": "Absolute path to backup directory or empty to backup in data directory"
          },
          "jsonlOptions": {
            "// autoCompress (1)": "The JSONL DB is append-only and will contain unnecessary entries after a while. It will be compressed when the uncompressed size is >= size * sizeFactor AND >= sizeFactorMinimumSize",
            "// autoCompress (2)": "Note that too low values here will cause the DB to be rewritten often.",
            "// autoCompress (3)": "",
            "autoCompress": {
              "sizeFactor": 1.5,
              "sizeFactorMinimumSize": 1000000
            },
            "// ignoreReadErrors": "If single lines in the DB are corrupted, they can be ignored without losing the whole DB.",
            "ignoreReadErrors": true,
            "// throttleFS (1)": "By default, the database immediately writes to the database file. Write accesses can be reduced using the throttleFS option.",
            "// throttleFS (2)": "Be aware that buffered changes will be lost in case the process crashes",
            "throttleFS": {
              "// intervalMs": "Write to the database file no more than every intervalMs milliseconds.",
              "intervalMs": 100,
              "// maxBufferedCommands": "Force writing after this many changes have been buffered. This reduces memory consumption and data loss in case of a crash.",
              "maxBufferedCommands": 1000
            }
          },
          "noFileCache": false,
          "maxQueue": 1000
        },
        "states": {
          "type": "jsonl",
          "// type": "Possible values: 'file' - [port 9001], 'jsonl' - [port 9001], 'redis' - [port 6379 or 26379 for sentinel].",
          "host": "localhost",
          "port": 9001,
          "connectTimeout": 10000,
          "writeFileInterval": 1000,
          "dataDir": "/data/states",
          "options": {
            "auth_pass": "",
            "retry_max_delay": 1000,
            "retry_max_count": 10,
            "db": 0,
            "family": 4
          },
          "backup": {
            "disabled": false,
            "files": 10,
            "// files": "Minimal number of backup files, after the deletion will be executed according to backupTime settings",
            "hours": 24,
            "// hours": "All backups older than configured hours will be deleted. But only if the number of files is greater than of backupNumber",
            "period": 120,
            "// period": "by default backup every 2 hours. Time is in minutes. To disable backup set the value to 0",
            "path": "/data/states/backup",
            "// path": "Absolute path to backup directory or empty to backup in data directory"
          },
          "jsonlOptions": {
            "// autoCompress (1)": "The JSONL DB is append-only and will contain unnecessary entries after a while. It will be compressed when the uncompressed size is >= size * sizeFactor AND >= sizeFactorMinimumSize",
            "// autoCompress (2)": "Note that too low values here will cause the DB to be rewritten often.",
            "// autoCompress (3)": "",
            "autoCompress": {
              "sizeFactor": 1.5,
              "sizeFactorMinimumSize": 1000000
            },
            "// ignoreReadErrors": "If single lines in the DB are corrupted, they can be ignored without losing the whole DB.",
            "ignoreReadErrors": true,
            "// throttleFS (1)": "By default, the database immediately writes to the database file. Write accesses can be reduced using the throttleFS option.",
            "// throttleFS (2)": "Be aware that buffered changes will be lost in case the process crashes",
            "throttleFS": {
              "// intervalMs": "Write to the database file no more than every intervalMs milliseconds.",
              "intervalMs": 100,
              "// maxBufferedCommands": "Force writing after this many changes have been buffered. This reduces memory consumption and data loss in case of a crash.",
              "maxBufferedCommands": 1000
            }
          }
        },
        "log": {
          "level": "info",
          "maxDays": 30,
          "noStdout": false,
          "transport": {}
        },
        "dataDir": "/data",
        "// dataDir": "Always relative to iobroker.js-controller/",
        "plugins": {
          "plugin1": {
            "enabled": true
          },
          "plugin2": {
            "enabled": false
          }
        },
        "// dnsResolution": "Use 'verbatim' for ipv6 first, else use 'ipv4first'",
        "dnsResolution": "ipv4first"
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "system": {
          "memoryLimitMB": 1024,
          "hostname": "localhost",
          "statisticsInterval": 1000,
          "// statisticsInterval": "Interval how often the counters for input/output in adapters and controller will be updated in ms",
          "checkDiskInterval": 10000,
          "// checkDiskInterval": "Interval how often the disk size will be checked in ms",
          "instanceStartInterval": 1000,
          "compact": true,
          "// compact": "Controller will try to start the instances as a part of the same process. No spawn will be done. Only by adapters that support it and have flag compact flag in io-package.json",
          "allowShellCommands": false,
          "// allowShellCommands": "Allow execution of \"shell\" sendToHost commands",
          "memLimitWarn": 512,
          "// memLimitWarn": "If the available RAM is below this threshold on adapter start, a warning will be logged.",
          "memLimitError": 256,
          "// memLimitError": "If the available RAM is below this threshold on adapter start, an error will be logged."
        },
        "multihostService": {
          "enabled": false,
          "secure": false,
          "password": ""
        },
        "objects": {
          "type": "jsonl",
          "// type": "Possible values: 'file' - [port 9001], 'jsonl' - [port 9001], 'redis' - [port 6379 or 26379 for sentinel].",
          "host": "localhost",
          "port": 9001,
          "connectTimeout": 1000,
          "writeFileInterval": 1000,
          "dataDir": "objects",
          "options": {
            "auth_pass": "",
            "retry_max_delay": 1000,
            "retry_max_count": 10,
            "db": 0,
            "family": 4
          },
          "backup": {
            "disabled": false,
            "files": 5,
            "// files": "Minimal number of backup files, after the deletion will be executed according to backupTime settings",
            "hours": 24,
            "// hours": "All backups older than configured hours will be deleted. But only if the number of files is greater than of backupNumber",
            "period": 120,
            "// period": "by default backup every 2 hours. Time is in minutes. To disable backup set the value to 0",
            "path": "",
            "// path": "Absolute path to backup directory or empty to backup in data directory"
          },
          "jsonlOptions": {
            "// autoCompress (1)": "The JSONL DB is append-only and will contain unnecessary entries after a while. It will be compressed when the uncompressed size is >= size * sizeFactor AND >= sizeFactorMinimumSize",
            "// autoCompress (2)": "Note that too low values here will cause the DB to be rewritten often.",
            "// autoCompress (3)": "",
            "autoCompress": {
              "sizeFactor": 2,
              "sizeFactorMinimumSize": 1000000
            },
            "// ignoreReadErrors": "If single lines in the DB are corrupted, they can be ignored without losing the whole DB.",
            "ignoreReadErrors": true,
            "// throttleFS (1)": "By default, the database immediately writes to the database file. Write accesses can be reduced using the throttleFS option.",
            "// throttleFS (2)": "Be aware that buffered changes will be lost in case the process crashes",
            "throttleFS": {
              "// intervalMs": "Write to the database file no more than every intervalMs milliseconds.",
              "intervalMs": 100,
              "// maxBufferedCommands": "Force writing after this many changes have been buffered. This reduces memory consumption and data loss in case of a crash.",
              "maxBufferedCommands": 100
            }
          },
          "noFileCache": false,
          "maxQueue": 1000
        },
        "states": {
          "type": "jsonl",
          "// type": "Possible values: 'file' - [port 9001], 'jsonl' - [port 9001], 'redis' - [port 6379 or 26379 for sentinel].",
          "host": "localhost",
          "port": 9001,
          "connectTimeout": 1000,
          "writeFileInterval": 1000,
          "dataDir": "states",
          "options": {
            "auth_pass": "",
            "retry_max_delay": 1000,
            "retry_max_count": 10,
            "db": 0,
            "family": 4
          },
          "backup": {
            "disabled": false,
            "files": 5,
            "// files": "Minimal number of backup files, after the deletion will be executed according to backupTime settings",
            "hours": 24,
            "// hours": "All backups older than configured hours will be deleted. But only if the number of files is greater than of backupNumber",
            "period": 120,
            "// period": "by default backup every 2 hours. Time is in minutes. To disable backup set the value to 0",
            "path": "",
            "// path": "Absolute path to backup directory or empty to backup in data directory"
          },
          "jsonlOptions": {
            "// autoCompress (1)": "The JSONL DB is append-only and will contain unnecessary entries after a while. It will be compressed when the uncompressed size is >= size * sizeFactor AND >= sizeFactorMinimumSize",
            "// autoCompress (2)": "Note that too low values here will cause the DB to be rewritten often.",
            "// autoCompress (3)": "",
            "autoCompress": {
              "sizeFactor": 2,
              "sizeFactorMinimumSize": 1000000
            },
            "// ignoreReadErrors": "If single lines in the DB are corrupted, they can be ignored without losing the whole DB.",
            "ignoreReadErrors": true,
            "// throttleFS (1)": "By default, the database immediately writes to the database file. Write accesses can be reduced using the throttleFS option.",
            "// throttleFS (2)": "Be aware that buffered changes will be lost in case the process crashes",
            "throttleFS": {
              "// intervalMs": "Write to the database file no more than every intervalMs milliseconds.",
              "intervalMs": 100,
              "// maxBufferedCommands": "Force writing after this many changes have been buffered. This reduces memory consumption and data loss in case of a crash.",
              "maxBufferedCommands": 100
            }
          }
        },
        "log": {
          "level": "info",
          "maxDays": 30,
          "noStdout": false,
          "transport": {}
        },
        "dataDir": "data",
        "// dataDir": "Always relative to iobroker.js-controller/",
        "plugins": {},
        "// dnsResolution": "Use 'verbatim' for ipv6 first, else use 'ipv4first'",
        "dnsResolution": "verbatim"
      }
    },
    {
      "description": "llama-70b generated negative; focus on additionalProperties keyword with an object schema",
      "valid": false,
      "rust_error": "\"multihostService\" is a required property",
      "python_error": "'multihostService' is a required property\n\nFailed validating 'required' in schema:\n    {'type': 'object',\n     'properties': {'system': {'type': 'object',\n                               'properties': {'memoryLimitMB': {'type': 'number',\n                                                                'description': 'do '\n                                                                               'not '\n                                                                               'use '\n                                                                               'more '\n                                                                               'than '\n                                                                               'memory '\n                                                                               'limit '\n                                                                               'mb '\n                                                                               'by '\n         .. (16781 more)",
      "data": {
        "system": {
          "memoryLimitMB": 1024,
          "hostname": "localhost",
          "statisticsInterval": 1000,
          "// statisticsInterval": "Interval how often the counters for input/output in adapters and controller will be updated in ms",
          "checkDiskInterval": 10000,
          "// checkDiskInterval": "Interval how often the disk size will be checked in ms",
          "instanceStartInterval": 1000,
          "compact": true,
          "// compact": "Controller will try to start the instances as a part of the same process. No spawn will be done. Only by adapters that support it and have flag compact flag in io-package.json",
          "allowShellCommands": false,
          "// allowShellCommands": "Allow execution of \"shell\" sendToHost commands",
          "memLimitWarn": 512,
          "// memLimitWarn": "If the available RAM is below this threshold on adapter start, a warning will be logged.",
          "memLimitError": 256,
          "// memLimitError": "If the available RAM is below this threshold on adapter start, an error will be logged.",
          "extraProperty": "extraValue"
        }
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"multihostService\" is a required property",
      "python_error": "'multihostService' is a required property\n\nFailed validating 'required' in schema:\n    {'type': 'object',\n     'properties': {'system': {'type': 'object',\n                               'properties': {'memoryLimitMB': {'type': 'number',\n                                                                'description': 'do '\n                                                                               'not '\n                                                                               'use '\n                                                                               'more '\n                                                                               'than '\n                                                                               'memory '\n                                                                               'limit '\n                                                                               'mb '\n                                                                               'by '\n         .. (16817 more)",
      "data": {
        "system": {
          "memoryLimitMB": 1024,
          "hostname": "localhost",
          "statisticsInterval": 1000,
          "// statisticsInterval": "Interval how often the counters for input/output in adapters and controller will be updated in ms",
          "checkDiskInterval": 10000,
          "// checkDiskInterval": "Interval how often the disk size will be checked in ms",
          "instanceStartInterval": 1000,
          "compact": true,
          "// compact": "Controller will try to start the instances as a part of the same process. No spawn will be done. Only by adapters that support it and have flag compact flag in io-package.json",
          "allowShellCommands": false,
          "// allowShellCommands": "Allow execution of \"shell\" sendToHost commands",
          "memLimitWarn": 512,
          "// memLimitWarn": "If the available RAM is below this threshold on adapter start, a warning will be logged.",
          "memLimitError": 256,
          "// memLimitError": "If the available RAM is below this threshold on adapter start, an error will be logged.",
          "additionalProperty": "value"
        },
        "additionalProperties": false
      }
    }
  ]
}