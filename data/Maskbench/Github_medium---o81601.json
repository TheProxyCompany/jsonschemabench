{
  "description": "sample Github_medium/o81601.json",
  "meta": {
    "full_size": 1419,
    "stripped_size": 1419,
    "features": [
      "additionalProperties",
      "enum",
      "pattern"
    ],
    "raw_features": [
      "$schema",
      "_boolSchema",
      "properties",
      "required",
      "type",
      "type:integer",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "additionalProperties": false,
    "properties": {
      "order": {
        "additionalProperties": false,
        "properties": {
          "customerName": {
            "type": "string"
          },
          "date": {
            "pattern": "^([0][1-9]|[1][0-2])-([0][0-9]|[1][0-9]|[2][0-9]|[3][0-1])-20\\d{2}$",
            "type": "string"
          },
          "drink": {
            "additionalProperties": false,
            "properties": {
              "drinkType": {
                "enum": [
                  "Latte",
                  "Espresso",
                  "Cappuccino",
                  "Chai",
                  "Tea",
                  "Steamer",
                  "Hot Chocolate"
                ],
                "type": "string"
              },
              "flavor": {
                "enum": [
                  "Carmel",
                  "Chocolate",
                  "Hazelnut",
                  "Vanilla",
                  "Peppermint",
                  "White Chocolate"
                ],
                "type": "string"
              },
              "milk": {
                "enum": [
                  "Non-Fat",
                  "Whole",
                  "Breve",
                  "Soy",
                  "Almond"
                ],
                "type": "string"
              },
              "size": {
                "enum": [
                  "Small",
                  "Medium",
                  "Large",
                  "Extra-Large",
                  "Bucket"
                ],
                "type": "string"
              }
            },
            "required": [
              "drinkType",
              "size",
              "milk"
            ],
            "type": "object"
          },
          "espressoConCard": {
            "pattern": "^[A-Fa-f0-9]{8}-([A-Fa-f0-9]{4}-){3}[A-Fa-f0-9]{12}$",
            "type": "string"
          },
          "id": {
            "type": "integer"
          },
          "muffin": {
            "enum": [
              "Blueberry",
              "Double Berry Crumb",
              "Carrot Cake",
              "Chocolate Chip",
              "Double Chocolate Chip",
              "Cherry Cheesecake",
              "Cinnamon Cheesecake",
              "Chocolate Cheesecake",
              "Banana Nut"
            ],
            "type": "string"
          },
          "orderId": {
            "type": "integer"
          },
          "time": {
            "pattern": "^([0-2][0-3]|[0-1][0-9])(:[0-5][0-9]){2}$",
            "type": "string"
          },
          "totalPrice": {
            "pattern": "^\\$[0-9]{1,3}.[0-9]{2}$",
            "type": "string"
          }
        },
        "required": [
          "orderId",
          "id",
          "customerName",
          "date",
          "time",
          "espressoConCard",
          "totalPrice"
        ],
        "type": "object"
      }
    },
    "required": [
      "order"
    ],
    "type": "object"
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "order": {
          "customerName": "John Doe",
          "date": "12-31-2022",
          "drink": {
            "drinkType": "Latte",
            "flavor": "Vanilla",
            "milk": "Whole",
            "size": "Medium"
          },
          "espressoConCard": "12345678-1234-1234-1234-123456789012",
          "id": 1,
          "muffin": "Blueberry",
          "orderId": 1,
          "time": "12:00:00",
          "totalPrice": "$10.00"
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on pattern keyword",
      "valid": false,
      "rust_error": "\"32-31-2022\" does not match \"^([0][1-9]|[1][0-2])-([0][0-9]|[1][0-9]|[2][0-9]|[3][0-1])-20\\d{2}$\"",
      "python_error": "'$10.001' does not match '^\\\\$[0-9]{1,3}.[0-9]{2}$'\n\nFailed validating 'pattern' in schema['properties']['order']['properties']['totalPrice']:\n    {'pattern': '^\\\\$[0-9]{1,3}.[0-9]{2}$', 'type': 'string'}\n\nOn instance['order']['totalPrice']:\n    '$10.001'",
      "data": {
        "order": {
          "customerName": "John Doe",
          "date": "32-31-2022",
          "drink": {
            "drinkType": "Latte",
            "flavor": "Vanilla",
            "milk": "Whole",
            "size": "Medium"
          },
          "espressoConCard": "12345678-1234-1234-1234-12345678901",
          "id": 1,
          "muffin": "Blueberry",
          "orderId": 1,
          "time": "25:00:00",
          "totalPrice": "$10.001"
        }
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"12345678-1234-1234-1234-12345678901\" does not match \"^[A-Fa-f0-9]{8}-([A-Fa-f0-9]{4}-){3}[A-Fa-f0-9]{12}$\"",
      "python_error": "Additional properties are not allowed ('Invalid length' was unexpected)\n\nFailed validating 'additionalProperties' in schema['properties']['order']:\n    {'additionalProperties': False,\n     'properties': {'customerName': {'type': 'string'},\n                    'date': {'pattern': '^([0][1-9]|[1][0-2])-([0][0-9]|[1][0-9]|[2][0-9]|[3][0-1])-20\\\\d{2}$',\n                             'type': 'string'},\n                    'drink': {'additionalProperties': False,\n                              'properties': {'drinkType': {'enum': ['Latte',\n                                                                    'Espresso',\n                                                                    'Cappuccino',\n                                                                    'Chai',\n                                                                    'Tea',\n                                                                    'Steamer',\n                                                                    'Hot '\n                   .. (3412 more)",
      "data": {
        "order": {
          "customerName": "John Doe",
          "date": "12-31-2022",
          "drink": {
            "drinkType": "Latte",
            "flavor": "Vanilla",
            "milk": "Whole",
            "size": "Medium"
          },
          "espressoConCard": "12345678-1234-1234-1234-12345678901",
          "Invalid length": "id"
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on pattern keyword",
      "valid": false,
      "rust_error": "\"32-31-2022\" does not match \"^([0][1-9]|[1][0-2])-([0][0-9]|[1][0-9]|[2][0-9]|[3][0-1])-20\\d{2}$\"",
      "python_error": "'32-31-2022' does not match '^([0][1-9]|[1][0-2])-([0][0-9]|[1][0-9]|[2][0-9]|[3][0-1])-20\\\\d{2}$'\n\nFailed validating 'pattern' in schema['properties']['order']['properties']['date']:\n    {'pattern': '^([0][1-9]|[1][0-2])-([0][0-9]|[1][0-9]|[2][0-9]|[3][0-1])-20\\\\d{2}$',\n     'type': 'string'}\n\nOn instance['order']['date']:\n    '32-31-2022'",
      "data": {
        "order": {
          "customerName": "John Doe",
          "date": "32-31-2022",
          "drink": {
            "drinkType": "Latte",
            "flavor": "Vanilla",
            "milk": "Whole",
            "size": "Medium"
          },
          "espressoConCard": "12345678-1234-1234-1234-123456789012",
          "id": 1,
          "muffin": "Blueberry",
          "orderId": 1,
          "time": "12:00:00",
          "totalPrice": "$10.00"
        }
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"12-31-20222\" does not match \"^([0][1-9]|[1][0-2])-([0][0-9]|[1][0-9]|[2][0-9]|[3][0-1])-20\\d{2}$\"",
      "python_error": "Additional properties are not allowed ('Invalid date format', 'Invalid espressoConCard format', 'Invalid time format', 'Invalid totalPrice format', 'Missing colon after drink', 'Missing colon after id', 'Missing colon after totalPrice', 'espressoConCard', 'muffin', 'orderId', 'time' were unexpected)\n\nFailed validating 'additionalProperties' in schema:\n    {'$schema': 'http://json-schema.org/draft-04/schema#',\n     'additionalProperties': False,\n     'properties': {'order': {'additionalProperties': False,\n                              'properties': {'customerName': {'type': 'string'},\n                                             'date': {'pattern': '^([0][1-9]|[1][0-2])-([0][0-9]|[1][0-9]|[2][0-9]|[3][0-1])-20\\\\d{2}$',\n                                                      'type': 'string'},\n                                             'drink': {'additionalProperties': False,\n                                                       'properties': {'drinkType': {'enum': ['Latte',\n                                   .. (7300 more)",
      "data": {
        "order": {
          "customerName": "John Doe",
          "date": "12-31-20222",
          "Invalid date format": "drink",
          "Missing colon after drink": {
            "drinkType": "Latte",
            "flavor": "Vanilla",
            "milk": "Whole",
            "size": "Medium"
          },
          "espressoConCard": "12345678-1234-1234-1234-12345678901",
          "Invalid espressoConCard format": "id",
          "Missing colon after id": 1,
          "muffin": "Blueberry",
          "orderId": 1,
          "time": "25:00:00",
          "Invalid time format": "totalPrice",
          "Missing colon after totalPrice": "$10.001",
          "Invalid totalPrice format": "Missing closing bracket"
        },
        "Invalid date format": "drink",
        "Missing colon after drink": {
          "drinkType": "Latte",
          "flavor": "Vanilla",
          "milk": "Whole",
          "size": "Medium"
        },
        "espressoConCard": "12345678-1234-1234-1234-12345678901",
        "Invalid espressoConCard format": "id",
        "Missing colon after id": 1,
        "muffin": "Blueberry",
        "orderId": 1,
        "time": "25:00:00",
        "Invalid time format": "totalPrice",
        "Missing colon after totalPrice": "$10.001",
        "Invalid totalPrice format": "Missing closing bracket"
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "order": {
          "customerName": "John Doe",
          "date": "12-31-2022",
          "drink": {
            "drinkType": "Latte",
            "milk": "Whole",
            "size": "Medium"
          },
          "espressoConCard": "12345678-1234-1234-1234-123456789012",
          "id": 1,
          "muffin": "Blueberry",
          "orderId": 123,
          "time": "12:00:00",
          "totalPrice": "$10.00"
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on pattern keyword",
      "valid": false,
      "rust_error": "\"32-31-2022\" does not match \"^([0][1-9]|[1][0-2])-([0][0-9]|[1][0-9]|[2][0-9]|[3][0-1])-20\\d{2}$\"",
      "python_error": "'32-31-2022' does not match '^([0][1-9]|[1][0-2])-([0][0-9]|[1][0-9]|[2][0-9]|[3][0-1])-20\\\\d{2}$'\n\nFailed validating 'pattern' in schema['properties']['order']['properties']['date']:\n    {'pattern': '^([0][1-9]|[1][0-2])-([0][0-9]|[1][0-9]|[2][0-9]|[3][0-1])-20\\\\d{2}$',\n     'type': 'string'}\n\nOn instance['order']['date']:\n    '32-31-2022'",
      "data": {
        "order": {
          "customerName": "John Doe",
          "date": "32-31-2022",
          "drink": {
            "drinkType": "Latte",
            "milk": "Whole",
            "size": "Medium"
          },
          "espressoConCard": "12345678-1234-1234-1234-123456789012",
          "id": 1,
          "muffin": "Blueberry",
          "orderId": 123,
          "time": "12:00:00",
          "totalPrice": "$10.00"
        }
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "123 is not of type \"string\"",
      "python_error": "Additional properties are not allowed ('muffin' was unexpected)\n\nFailed validating 'additionalProperties' in schema:\n    {'$schema': 'http://json-schema.org/draft-04/schema#',\n     'additionalProperties': False,\n     'properties': {'order': {'additionalProperties': False,\n                              'properties': {'customerName': {'type': 'string'},\n                                             'date': {'pattern': '^([0][1-9]|[1][0-2])-([0][0-9]|[1][0-9]|[2][0-9]|[3][0-1])-20\\\\d{2}$',\n                                                      'type': 'string'},\n                                             'drink': {'additionalProperties': False,\n                                                       'properties': {'drinkType': {'enum': ['Latte',\n                                                                                             'Espresso',\n                                                                                             'Cappuccino',\n                                                            .. (6575 more)",
      "data": {
        "order": {
          "orderId": 123,
          "id": 1,
          "customerName": 123,
          "Invalid - customerName should be string": "date",
          "Invalid - date is missing colon between key and value": "12-31-2022",
          "Invalid - date should be a string key-value pair": "12:00:00",
          "espressoConCard": "12345678-1234-12341234-123456789012",
          "Invalid - espressoConCard should be in the format XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX": "$10.01",
          "Invalid - totalPrice should be in the format $XXX.XX": "drinkType",
          "Latte": "Medium",
          "Invalid - size should be a string key-value pair": "Invalid Milk",
          "Invalid - milk should be one of the specified options": "Invalid Flavor"
        },
        "muffin": "Invalid Muffin"
      }
    }
  ]
}