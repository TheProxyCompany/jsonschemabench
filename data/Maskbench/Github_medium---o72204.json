{
  "description": "sample Github_medium/o72204.json",
  "meta": {
    "full_size": 2129,
    "stripped_size": 1117,
    "features": [
      "$ref",
      "additionalProperties",
      "enum",
      "items"
    ],
    "raw_features": [
      "$schema",
      "_boolSchema",
      "definitions",
      "properties",
      "required",
      "type",
      "type:[]",
      "type:array",
      "type:integer",
      "type:null",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-06/schema#",
    "title": "User Metric JSONata Context",
    "description": "Context provided to a custom user metric JSONata filter expression",
    "type": "object",
    "properties": {
      "user": {
        "title": "User Data",
        "type": "object",
        "properties": {
          "firstName": {
            "type": [
              "string",
              "null"
            ],
            "title": "First Name"
          },
          "lastName": {
            "type": [
              "string",
              "null"
            ],
            "title": "Last Name"
          },
          "email": {
            "type": [
              "string",
              "null"
            ],
            "title": "Email Address"
          },
          "locale": {
            "type": [
              "string",
              "null"
            ],
            "title": "Locale"
          },
          "dateCreated": {
            "type": [
              "integer",
              "null"
            ],
            "title": "Date User Created"
          },
          "dateBlocked": {
            "type": [
              "integer",
              "null"
            ],
            "title": "Date User Blocked"
          },
          "segments": {
            "type": "array",
            "title": "Segments",
            "description": "A list of segments this user has been assigned to",
            "items": {
              "type": "string",
              "title": "Segment Key",
              "description": "A segment key this user has been assigned to (e.g. VIP)"
            }
          },
          "fraudFlags": {
            "type": "array",
            "title": "Fraud Flags",
            "description": "Flags indicating whether this user was marked as a potentially fradulent user",
            "items": {
              "type": "object",
              "title": "Fraud Flag",
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Flag Type",
                  "enum": [
                    "IP",
                    "EMAIL",
                    "NAME",
                    "RATE",
                    "DAILY_REFERRAL_REWARD_LIMIT",
                    "TEMP_EMAIL",
                    "BLOCKED_USER",
                    "BLOCKED_IP"
                  ]
                },
                "message": {
                  "type": "string",
                  "title": "Flag Description"
                }
              },
              "required": [
                "type",
                "message"
              ],
              "additionalProperties": false
            }
          },
          "customFields": {
            "$ref": "#/definitions/customFieldsContext"
          }
        }
      },
      "event": {
        "$ref": "#/definitions/eventContext"
      }
    },
    "definitions": {
      "eventContext": {
        "type": "object",
        "title": "Event",
        "description": "The variables for the event that triggered the metric",
        "properties": {
          "key": {
            "type": "string",
            "title": "Event Key",
            "description": "The key of the evaluated event (e.g. purchase)"
          },
          "dateTriggered": {
            "type": "integer",
            "title": "Date Triggered",
            "description": "The date this event was created"
          },
          "fields": {
            "$ref": "#/definitions/eventFieldsContext"
          }
        }
      },
      "eventFieldsContext": {
        "title": "Event Fields",
        "description": "The event's fields",
        "type": "object",
        "additionalProperties": true
      },
      "customFieldsContext": {
        "title": "User Custom Fields",
        "description": "The user's custom fields",
        "type": "object",
        "additionalProperties": true
      }
    }
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "user": {
          "firstName": "John",
          "lastName": "Doe",
          "email": "john.doe@example.com",
          "locale": "en-US",
          "dateCreated": 1643723400,
          "dateBlocked": null,
          "segments": [
            "VIP",
            "Premium"
          ],
          "fraudFlags": [
            {
              "type": "TEMP_EMAIL",
              "message": "User has a temporary email address"
            },
            {
              "type": "RATE",
              "message": "User has exceeded the rate limit"
            }
          ],
          "customFields": {
            "favoriteColor": "blue",
            "numberOfLogins": 10
          }
        },
        "event": {
          "key": "purchase",
          "dateTriggered": 1643723400,
          "fields": {
            "amount": 100.0,
            "product": "Example Product",
            "category": "Electronics"
          }
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on type keyword with an array of types",
      "valid": false,
      "rust_error": "true is not of types \"null\", \"string\"",
      "python_error": "True is not of type 'string', 'null'\n\nFailed validating 'type' in schema['properties']['user']['properties']['firstName']:\n    {'type': ['string', 'null'], 'title': 'First Name'}\n\nOn instance['user']['firstName']:\n    True",
      "data": {
        "user": {
          "firstName": true,
          "lastName": "Doe",
          "email": "john.doe@example.com",
          "locale": "en-US",
          "dateCreated": 1643723400,
          "dateBlocked": null,
          "segments": [
            "VIP",
            "Premium"
          ],
          "fraudFlags": [
            {
              "type": "TEMP_EMAIL",
              "message": "User has a temporary email address"
            },
            {
              "type": "RATE",
              "message": "User has exceeded the rate limit"
            }
          ],
          "customFields": {
            "favoriteColor": "blue",
            "numberOfLogins": 10
          }
        },
        "event": {
          "key": "purchase",
          "dateTriggered": 1643723400,
          "fields": {
            "amount": 100.0,
            "product": "Example Product",
            "category": "Electronics"
          }
        }
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"INVALID_FLAG\" is not one of [\"IP\",\"EMAIL\",\"NAME\",\"RATE\",\"DAILY_REFERRAL_REWARD_LIMIT\",\"TEMP_EMAIL\",\"BLOCKED_USER\",\"BLOCKED_IP\"]",
      "python_error": "'INVALID_FLAG' is not one of ['IP', 'EMAIL', 'NAME', 'RATE', 'DAILY_REFERRAL_REWARD_LIMIT', 'TEMP_EMAIL', 'BLOCKED_USER', 'BLOCKED_IP']\n\nFailed validating 'enum' in schema['properties']['user']['properties']['fraudFlags']['items']['properties']['type']:\n    {'type': 'string',\n     'title': 'Flag Type',\n     'enum': ['IP',\n              'EMAIL',\n              'NAME',\n              'RATE',\n              'DAILY_REFERRAL_REWARD_LIMIT',\n              'TEMP_EMAIL',\n              'BLOCKED_USER',\n              'BLOCKED_IP']}\n\nOn instance['user']['fraudFlags'][2]['type']:\n    'INVALID_FLAG'",
      "data": {
        "user": {
          "firstName": "John",
          "lastName": "Doe",
          "email": "john.doe@example.com",
          "locale": "en-US",
          "dateCreated": 1643723400,
          "dateBlocked": null,
          "segments": [
            "VIP",
            "Premium"
          ],
          "fraudFlags": [
            {
              "type": "TEMP_EMAIL",
              "message": "User has a temporary email address"
            },
            {
              "type": "RATE",
              "message": "User has exceeded the rate limit"
            },
            {
              "type": "INVALID_FLAG",
              "message": "Invalid flag type"
            }
          ],
          "customFields": {
            "favoriteColor": "blue",
            "numberOfLogins": 10
          }
        },
        "event": {
          "key": "purchase",
          "dateTriggered": 1643723400,
          "fields": {
            "amount": 100.0,
            "product": "Example Product",
            "category": "Electronics"
          }
        }
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "123 is not of type \"string\"",
      "python_error": "None is not of type 'string'\n\nFailed validating 'type' in schema['properties']['user']['properties']['segments']['items']:\n    {'type': 'string',\n     'title': 'Segment Key',\n     'description': 'A segment key this user has been assigned to (e.g. '\n                    'VIP)'}\n\nOn instance['user']['segments'][3]:\n    None",
      "data": {
        "user": {
          "firstName": "John",
          "lastName": "Doe",
          "email": "john.doe@example.com",
          "locale": "en-US",
          "dateCreated": 1643723400,
          "dateBlocked": null,
          "segments": [
            "VIP",
            "Premium",
            123,
            null
          ],
          "fraudFlags": [
            {
              "type": "TEMP_EMAIL",
              "message": "User has a temporary email address"
            },
            {
              "type": "RATE",
              "message": "User has exceeded the rate limit"
            },
            {
              "type": "INVALID_FLAG",
              "message": "Invalid flag type"
            }
          ],
          "customFields": {
            "favoriteColor": "blue",
            "numberOfLogins": 10
          }
        },
        "event": {
          "key": "purchase",
          "dateTriggered": 1643723400,
          "fields": {
            "amount": 100.0,
            "product": "Example Product",
            "category": "Electronics"
          }
        }
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "user": {
          "firstName": "John",
          "lastName": "Doe",
          "email": "john.doe@example.com",
          "locale": "en-US",
          "dateCreated": 1643723400,
          "dateBlocked": null,
          "segments": [
            "VIP",
            "Premium"
          ],
          "fraudFlags": [
            {
              "type": "TEMP_EMAIL",
              "message": "User has a temporary email address"
            }
          ],
          "customFields": {
            "age": 30,
            "country": "USA"
          }
        },
        "event": {
          "key": "purchase",
          "dateTriggered": 1643723400,
          "fields": {
            "amount": 100.0,
            "product": "Product A"
          }
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on type keyword with an array of types",
      "valid": false,
      "rust_error": "123 is not of types \"null\", \"string\"",
      "python_error": "123 is not of type 'string', 'null'\n\nFailed validating 'type' in schema['properties']['user']['properties']['firstName']:\n    {'type': ['string', 'null'], 'title': 'First Name'}\n\nOn instance['user']['firstName']:\n    123",
      "data": {
        "user": {
          "firstName": 123,
          "lastName": "Doe",
          "email": "john.doe@example.com",
          "locale": "en-US",
          "dateCreated": 1643723400,
          "dateBlocked": null,
          "segments": [
            "VIP",
            "Premium"
          ],
          "fraudFlags": [
            {
              "type": "TEMP_EMAIL",
              "message": "User has a temporary email address"
            }
          ],
          "customFields": {
            "age": 30,
            "country": "USA"
          }
        },
        "event": {
          "key": "purchase",
          "dateTriggered": 1643723400,
          "fields": {
            "amount": 100.0,
            "product": "Product A"
          }
        }
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "null is not of type \"string\"",
      "python_error": "'1643723400' is not of type 'integer'\n\nFailed validating 'type' in schema['properties']['event']['properties']['dateTriggered']:\n    {'type': 'integer',\n     'title': 'Date Triggered',\n     'description': 'The date this event was created'}\n\nOn instance['event']['dateTriggered']:\n    '1643723400'",
      "data": {
        "user": {
          "firstName": "John",
          "lastName": "Doe",
          "email": "john.doe@example.com",
          "locale": "en-US",
          "dateCreated": 1643723400,
          "dateBlocked": null,
          "segments": [
            "VIP",
            "Premium",
            null
          ],
          "fraudFlags": [
            {
              "type": "TEMP_EMAIL",
              "message": "User has a temporary email address",
              "extraField": "extra value"
            }
          ],
          "customFields": {
            "age": 30,
            "country": "USA"
          }
        },
        "event": {
          "key": "purchase",
          "dateTriggered": "1643723400",
          "fields": {
            "amount": 100.0,
            "product": "Product A"
          }
        }
      }
    }
  ]
}