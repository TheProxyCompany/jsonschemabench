{
  "description": "sample Kubernetes/kb_296_Normalized.json",
  "meta": {
    "full_size": 2697,
    "stripped_size": 629,
    "features": [
      "$ref"
    ],
    "raw_features": [
      "definitions",
      "properties",
      "required",
      "type",
      "type:[]",
      "type:null",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "definitions": {
      "https:__kubernetesjsonschema_dev_master__defs_json_defs_io_k8s_api_core_v1_ObjectReference": {
        "description": "ObjectReference contains enough information to let you inspect or modify the referred object.",
        "properties": {
          "apiVersion": {
            "description": "API version of the referent.",
            "type": "string"
          },
          "fieldPath": {
            "description": "If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered the event) or if no container name is specified \"spec.containers[2]\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object.",
            "type": "string"
          },
          "kind": {
            "description": "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type": "string"
          },
          "name": {
            "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
            "type": "string"
          },
          "namespace": {
            "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
            "type": "string"
          },
          "resourceVersion": {
            "description": "Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
            "type": "string"
          },
          "uid": {
            "description": "UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids",
            "type": "string"
          }
        },
        "type": "object"
      }
    },
    "description": "EndpointAddress is a tuple that describes single IP address.",
    "properties": {
      "hostname": {
        "description": "The Hostname of this endpoint",
        "type": [
          "string",
          "null"
        ]
      },
      "ip": {
        "description": "The IP of this endpoint. May not be loopback (127.0.0.0/8), link-local (169.254.0.0/16), or link-local multicast ((224.0.0.0/24). IPv6 is also accepted but not fully supported on all platforms. Also, certain kubernetes components, like kube-proxy, are not IPv6 ready.",
        "type": [
          "string",
          "null"
        ]
      },
      "nodeName": {
        "description": "Optional: Node hosting this endpoint. This can be used to determine endpoints local to a node.",
        "type": [
          "string",
          "null"
        ]
      },
      "targetRef": {
        "$ref": "#/definitions/https:__kubernetesjsonschema_dev_master__defs_json_defs_io_k8s_api_core_v1_ObjectReference",
        "description": "Reference to object providing the endpoint."
      }
    },
    "required": [
      "ip"
    ],
    "type": "object"
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "hostname": "example.com",
        "ip": "192.168.1.100",
        "nodeName": "node-1",
        "targetRef": {
          "apiVersion": "v1",
          "fieldPath": "spec.containers[0]",
          "kind": "Pod",
          "name": "example-pod",
          "namespace": "default",
          "resourceVersion": "123456",
          "uid": "12345678-1234-1234-1234-123456789012"
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on type keyword with an array of types",
      "valid": false,
      "rust_error": "true is not of types \"null\", \"string\"",
      "python_error": "True is not of type 'string', 'null'\n\nFailed validating 'type' in schema['properties']['hostname']:\n    {'description': 'The Hostname of this endpoint',\n     'type': ['string', 'null']}\n\nOn instance['hostname']:\n    True",
      "data": {
        "hostname": true,
        "ip": "192.168.1.100",
        "nodeName": "node-1",
        "targetRef": {
          "apiVersion": "v1",
          "fieldPath": "spec.containers[0]",
          "kind": "Pod",
          "name": "example-pod",
          "namespace": "default",
          "resourceVersion": "123456",
          "uid": "12345678-1234-1234-1234-123456789012"
        }
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"ip\" is a required property",
      "python_error": "'ip' is a required property\n\nFailed validating 'required' in schema:\n    {'definitions': {'https:__kubernetesjsonschema_dev_master__defs_json_defs_io_k8s_api_core_v1_ObjectReference': {'description': 'ObjectReference '\n                                                                                                                                   'contains '\n                                                                                                                                   'enough '\n                                                                                                                                   'information '\n                                                                                                                                   'to '\n                                                                                                                                   'let '\n                                                                                                    .. (28170 more)",
      "data": {
        "hostname": "example.com",
        "nodeName": "node-1",
        "targetRef": {
          "apiVersion": "v1",
          "fieldPath": "spec.containers[0]",
          "kind": "Pod",
          "name": "example-pod",
          "namespace": "default",
          "resourceVersion": "123456",
          "uid": "12345678-1234-1234-1234-123456789012"
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on type keyword with an array of types",
      "valid": false,
      "rust_error": "123 is not of types \"null\", \"string\"",
      "python_error": "123 is not of type 'string', 'null'\n\nFailed validating 'type' in schema['properties']['hostname']:\n    {'description': 'The Hostname of this endpoint',\n     'type': ['string', 'null']}\n\nOn instance['hostname']:\n    123",
      "data": {
        "hostname": 123,
        "ip": "192.168.1.100",
        "nodeName": "node-1",
        "targetRef": {
          "apiVersion": "v1",
          "fieldPath": "spec.containers[0]",
          "kind": "Pod",
          "name": "example-pod",
          "namespace": "default",
          "resourceVersion": "123456",
          "uid": "12345678-1234-1234-1234-123456789012"
        }
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "hostname": "example-host",
        "ip": "192.168.1.100",
        "nodeName": "node-1",
        "targetRef": {
          "apiVersion": "v1",
          "fieldPath": "",
          "kind": "Pod",
          "name": "example-pod",
          "namespace": "default",
          "resourceVersion": "12345",
          "uid": "12345678-1234-1234-1234-123456789012"
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on type keyword with an array of types",
      "valid": false,
      "rust_error": "123 is not of types \"null\", \"string\"",
      "python_error": "123 is not of type 'string', 'null'\n\nFailed validating 'type' in schema['properties']['hostname']:\n    {'description': 'The Hostname of this endpoint',\n     'type': ['string', 'null']}\n\nOn instance['hostname']:\n    123",
      "data": {
        "hostname": 123,
        "ip": "192.168.1.100",
        "nodeName": "node-1",
        "targetRef": {
          "apiVersion": "v1",
          "fieldPath": "",
          "kind": "Pod",
          "name": "example-pod",
          "namespace": "default",
          "resourceVersion": "12345",
          "uid": "12345678-1234-1234-1234-123456789012"
        }
      }
    }
  ]
}