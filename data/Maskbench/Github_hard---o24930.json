{
  "description": "sample Github_hard/o24930.json",
  "meta": {
    "full_size": 6127,
    "stripped_size": 2972,
    "features": [
      "$ref",
      "additionalProperties",
      "additionalProperties:object",
      "items",
      "oneOf",
      "pattern"
    ],
    "raw_features": [
      "$schema",
      "_boolSchema",
      "definitions",
      "properties",
      "type",
      "type:array",
      "type:boolean",
      "type:integer",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-06/schema#",
    "additionalProperties": false,
    "definitions": {
      "GeneralConfig": {
        "additionalProperties": false,
        "description": "General configuration settings.",
        "properties": {
          "auth": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "AWS authentication section",
            "type": "object"
          },
          "parameters": {
            "additionalProperties": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                },
                {
                  "type": "boolean"
                },
                {
                  "items": {
                    "oneOf": [
                      {
                        "type": "integer"
                      },
                      {
                        "type": "string"
                      }
                    ]
                  },
                  "type": "array"
                }
              ]
            },
            "description": "Parameter key-values to pass to CloudFormation, parameters provided in global config take precedence",
            "type": "object"
          },
          "s3_bucket": {
            "description": "Name of S3 bucket to upload project to, if left out a bucket will be auto-generated",
            "type": "string"
          },
          "s3_regional_buckets": {
            "description": "Enable regional auto-buckets.",
            "type": "boolean"
          },
          "tags": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Tags to apply to CloudFormation template",
            "type": "object"
          }
        },
        "type": "object"
      },
      "ProjectConfig": {
        "additionalProperties": false,
        "description": "Project specific configuration section",
        "properties": {
          "auth": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "AWS authentication section",
            "type": "object"
          },
          "az_blacklist": {
            "description": "List of Availablilty Zones ID's to exclude when generating availability zones",
            "items": {
              "description": "Availability Zone ID, eg.: 'use1-az1'",
              "pattern": "^((ap|eu|us|sa|ca|cn|af|me)(n|s|e|w|c|ne|se|nw|sw)[0-9]-az[0-9]|usw2-lax1-az1)$",
              "type": "string"
            },
            "type": "array"
          },
          "build_submodules": {
            "description": "Build Lambda zips recursively for submodules, set to false to disable",
            "type": "boolean"
          },
          "lambda_source_path": {
            "description": "Path relative to the project root containing Lambda zip files, default is 'lambda_functions/source'",
            "type": "string"
          },
          "lambda_zip_path": {
            "description": "Path relative to the project root to place Lambda zip files, default is 'lambda_functions/zips'",
            "type": "string"
          },
          "name": {
            "description": "Project name, used as s3 key prefix when uploading objects",
            "pattern": "^[a-z0-9-]*$",
            "type": "string"
          },
          "owner": {
            "description": "email address for project owner (not used at present)",
            "type": "string"
          },
          "package_lambda": {
            "description": "Package Lambda functions into zips before uploading to s3, set to false to disable",
            "type": "boolean"
          },
          "parameters": {
            "additionalProperties": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                },
                {
                  "type": "boolean"
                },
                {
                  "items": {
                    "oneOf": [
                      {
                        "type": "integer"
                      },
                      {
                        "type": "string"
                      }
                    ]
                  },
                  "type": "array"
                }
              ]
            },
            "description": "Parameter key-values to pass to CloudFormation, parameters provided in global config take precedence",
            "type": "object"
          },
          "regions": {
            "description": "List of AWS regions",
            "items": {
              "description": "AWS Region name eg.: 'us-east-1'",
              "pattern": "^(ap|eu|us|sa|ca|cn|af|me|us-gov)-(central|south|north|east|west|southeast|southwest|northeast|northwest)-[0-9]$",
              "type": "string"
            },
            "type": "array"
          },
          "s3_bucket": {
            "description": "Name of S3 bucket to upload project to, if left out a bucket will be auto-generated",
            "pattern": "^[a-z0-9-]*$",
            "type": "string"
          },
          "s3_enable_sig_v2": {
            "description": "Enable (deprecated) sigv2 access to auto-generated buckets",
            "type": "boolean"
          },
          "s3_object_acl": {
            "description": "ACL for uploaded s3 objects, defaults to 'private'",
            "pattern": "^(bucket-owner-full-control|bucket-owner-read|authenticated-read|aws-exec-read|public-read-write|public-read|private)$",
            "type": "string"
          },
          "s3_regional_buckets": {
            "description": "Enable regional auto-buckets.",
            "type": "boolean"
          },
          "shorten_stack_name": {
            "description": "Shorten stack names generated for tests, set to true to enable",
            "type": "boolean"
          },
          "tags": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Tags to apply to CloudFormation template",
            "type": "object"
          },
          "template": {
            "description": "path to template file relative to the project config file path",
            "type": "string"
          }
        },
        "type": "object"
      },
      "TestConfig": {
        "additionalProperties": false,
        "description": "Test specific configuration section.",
        "properties": {
          "auth": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "AWS authentication section",
            "type": "object"
          },
          "az_blacklist": {
            "description": "List of Availablilty Zones ID's to exclude when generating availability zones",
            "items": {
              "description": "Availability Zone ID, eg.: 'use1-az1'",
              "pattern": "^((ap|eu|us|sa|ca|cn|af|me)(n|s|e|w|c|ne|se|nw|sw)[0-9]-az[0-9]|usw2-lax1-az1)$",
              "type": "string"
            },
            "type": "array"
          },
          "parameters": {
            "additionalProperties": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                },
                {
                  "type": "boolean"
                },
                {
                  "items": {
                    "oneOf": [
                      {
                        "type": "integer"
                      },
                      {
                        "type": "string"
                      }
                    ]
                  },
                  "type": "array"
                }
              ]
            },
            "default": {},
            "description": "Parameter key-values to pass to CloudFormation, parameters provided in global config take precedence",
            "type": "object"
          },
          "regions": {
            "description": "List of AWS regions",
            "items": {
              "description": "AWS Region name eg.: 'us-east-1'",
              "pattern": "^(ap|eu|us|sa|ca|cn|af|me|us-gov)-(central|south|north|east|west|southeast|southwest|northeast|northwest)-[0-9]$",
              "type": "string"
            },
            "type": "array"
          },
          "s3_bucket": {
            "description": "Name of S3 bucket to upload project to, if left out a bucket will be auto-generated",
            "pattern": "^[a-z0-9-]*$",
            "type": "string"
          },
          "s3_regional_buckets": {
            "description": "Enable regional auto-buckets.",
            "type": "boolean"
          },
          "tags": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Tags to apply to CloudFormation template",
            "type": "object"
          },
          "template": {
            "description": "path to template file relative to the project config file path",
            "type": "string"
          }
        },
        "type": "object"
      }
    },
    "description": "Taskcat configuration file",
    "properties": {
      "general": {
        "$ref": "#/definitions/GeneralConfig",
        "default": {
          "auth": null,
          "parameters": null,
          "s3_bucket": null,
          "s3_regional_buckets": null,
          "tags": null
        }
      },
      "project": {
        "$ref": "#/definitions/ProjectConfig",
        "default": {
          "auth": null,
          "az_blacklist": null,
          "build_submodules": null,
          "lambda_source_path": null,
          "lambda_zip_path": null,
          "name": null,
          "owner": null,
          "package_lambda": null,
          "parameters": null,
          "regions": null,
          "s3_bucket": null,
          "s3_enable_sig_v2": null,
          "s3_object_acl": null,
          "s3_regional_buckets": null,
          "shorten_stack_name": null,
          "tags": null,
          "template": null
        }
      },
      "tests": {
        "additionalProperties": {
          "$ref": "#/definitions/TestConfig"
        },
        "default": {},
        "type": "object"
      }
    },
    "type": "object"
  },
  "tests": [
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "general": {
          "auth": {
            "aws_access_key_id": "YOUR_ACCESS_KEY_ID",
            "aws_secret_access_key": "YOUR_SECRET_ACCESS_KEY"
          },
          "parameters": {
            "Environment": "dev"
          },
          "s3_bucket": "my-taskcat-bucket",
          "s3_regional_buckets": true,
          "tags": {
            "Project": "Taskcat",
            "Environment": "dev"
          }
        },
        "project": {
          "build_submodules": true,
          "lambda_source_path": "lambda_functions/source",
          "lambda_zip_path": "lambda_functions/zips",
          "name": "my-taskcat-project",
          "owner": "john.doe@example.com",
          "package_lambda": true,
          "parameters": {
            "InstanceType": "t2.micro"
          },
          "regions": [
            "us-east-1",
            "us-west-2"
          ],
          "s3_object_acl": "private",
          "shorten_stack_name": true,
          "tags": {
            "Project": "Taskcat",
            "Environment": "dev"
          },
          "template": "path/to/template.yaml"
        },
        "tests": {
          "test1": {
            "parameters": {
              "InstanceType": "t2.micro"
            },
            "regions": [
              "us-east-1"
            ],
            "tags": {
              "Test": "test1",
              "Environment": "dev"
            },
            "template": "path/to/test1/template.yaml"
          },
          "test2": {
            "parameters": {
              "InstanceType": "t2.micro"
            },
            "regions": [
              "us-west-2"
            ],
            "tags": {
              "Test": "test2",
              "Environment": "dev"
            },
            "template": "path/to/test2/template.yaml"
          }
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on pattern keyword",
      "valid": false,
      "rust_error": "\"my-taskcat-project!\" does not match \"^[a-z0-9-]*$\"",
      "python_error": "'my-taskcat-project!' does not match '^[a-z0-9-]*$'\n\nFailed validating 'pattern' in schema['properties']['project']['properties']['name']:\n    {'description': 'Project name, used as s3 key prefix when uploading '\n                    'objects',\n     'pattern': '^[a-z0-9-]*$',\n     'type': 'string'}\n\nOn instance['project']['name']:\n    'my-taskcat-project!'",
      "data": {
        "general": {
          "auth": {
            "aws_access_key_id": "YOUR_ACCESS_KEY_ID",
            "aws_secret_access_key": "YOUR_SECRET_ACCESS_KEY"
          },
          "parameters": {
            "Environment": "dev"
          },
          "s3_bucket": "my-taskcat-bucket",
          "s3_regional_buckets": true,
          "tags": {
            "Project": "Taskcat",
            "Environment": "dev"
          }
        },
        "project": {
          "name": "my-taskcat-project!",
          "owner": "john.doe@example.com",
          "regions": [
            "us-east-1",
            "us-west-2"
          ],
          "template": "path/to/template.yaml",
          "lambda_source_path": "lambda_functions/source",
          "lambda_zip_path": "lambda_functions/zips",
          "package_lambda": true,
          "build_submodules": true,
          "s3_object_acl": "private",
          "shorten_stack_name": true,
          "parameters": {
            "InstanceType": "t2.micro"
          },
          "tags": {
            "Project": "Taskcat",
            "Environment": "dev"
          }
        },
        "tests": {
          "test1": {
            "template": "path/to/test1/template.yaml",
            "parameters": {
              "InstanceType": "t2.micro"
            },
            "regions": [
              "us-east-1"
            ],
            "tags": {
              "Test": "test1",
              "Environment": "dev"
            }
          },
          "test2": {
            "template": "path/to/test2/template.yaml",
            "parameters": {
              "InstanceType": "t2.micro"
            },
            "regions": [
              "us-west-2"
            ],
            "tags": {
              "Test": "test2",
              "Environment": "dev"
            }
          }
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on oneOf keyword",
      "valid": false,
      "rust_error": "1.5 is not valid under any of the schemas listed in the 'oneOf' keyword",
      "python_error": "1.5 is not valid under any of the given schemas\n\nFailed validating 'oneOf' in schema['properties']['general']['properties']['parameters']['additionalProperties']:\n    {'oneOf': [{'type': 'string'},\n               {'type': 'integer'},\n               {'type': 'boolean'},\n               {'items': {'oneOf': [{'type': 'integer'},\n                                    {'type': 'string'}]},\n                'type': 'array'}]}\n\nOn instance['general']['parameters']['InvalidParam']:\n    1.5",
      "data": {
        "general": {
          "auth": {
            "aws_access_key_id": "YOUR_ACCESS_KEY_ID",
            "aws_secret_access_key": "YOUR_SECRET_ACCESS_KEY"
          },
          "parameters": {
            "Environment": "dev",
            "InvalidParam": 1.5
          },
          "s3_bucket": "my-taskcat-bucket",
          "s3_regional_buckets": true,
          "tags": {
            "Project": "Taskcat",
            "Environment": "dev"
          }
        },
        "project": {
          "name": "my-taskcat-project",
          "owner": "john.doe@example.com",
          "regions": [
            "us-east-1",
            "us-west-2"
          ],
          "template": "path/to/template.yaml",
          "lambda_source_path": "lambda_functions/source",
          "lambda_zip_path": "lambda_functions/zips",
          "package_lambda": true,
          "build_submodules": true,
          "s3_object_acl": "private",
          "shorten_stack_name": true,
          "parameters": {
            "InstanceType": "t2.micro"
          },
          "tags": {
            "Project": "Taskcat",
            "Environment": "dev"
          }
        },
        "tests": {
          "test1": {
            "template": "path/to/test1/template.yaml",
            "parameters": {
              "InstanceType": "t2.micro"
            },
            "regions": [
              "us-east-1"
            ],
            "tags": {
              "Test": "test1",
              "Environment": "dev"
            }
          },
          "test2": {
            "template": "path/to/test2/template.yaml",
            "parameters": {
              "InstanceType": "t2.micro"
            },
            "regions": [
              "us-west-2"
            ],
            "tags": {
              "Test": "test2",
              "Environment": "dev"
            }
          }
        }
      }
    },
    {
      "description": "llama-70b generated negative; focus on additionalProperties keyword with an object schema",
      "valid": false,
      "rust_error": "Additional properties are not allowed ('invalid_property' was unexpected)",
      "python_error": "Additional properties are not allowed ('invalid_property' was unexpected)\n\nFailed validating 'additionalProperties' in schema['properties']['tests']['additionalProperties']:\n    {'additionalProperties': False,\n     'description': 'Test specific configuration section.',\n     'properties': {'auth': {'additionalProperties': {'type': 'string'},\n                             'description': 'AWS authentication section',\n                             'type': 'object'},\n                    'az_blacklist': {'description': 'List of Availablilty '\n                                                    \"Zones ID's to exclude \"\n                                                    'when generating '\n                                                    'availability zones',\n                                     'items': {'description': 'Availability '\n                                                              'Zone ID, '\n                                                              'eg.: '\n                                       .. (3347 more)",
      "data": {
        "general": {
          "auth": {
            "aws_access_key_id": "YOUR_ACCESS_KEY_ID",
            "aws_secret_access_key": "YOUR_SECRET_ACCESS_KEY",
            "invalid_property": "I'm invalid"
          },
          "parameters": {
            "Environment": "dev"
          },
          "s3_bucket": "my-taskcat-bucket",
          "s3_regional_buckets": true,
          "tags": {
            "Project": "Taskcat",
            "Environment": "dev"
          }
        },
        "project": {
          "build_submodules": true,
          "lambda_source_path": "lambda_functions/source",
          "lambda_zip_path": "lambda_functions/zips",
          "name": "my-taskcat-project",
          "owner": "john.doe@example.com",
          "package_lambda": true,
          "parameters": {
            "InstanceType": "t2.micro"
          },
          "regions": [
            "us-east-1",
            "us-west-2"
          ],
          "s3_object_acl": "private",
          "shorten_stack_name": true,
          "tags": {
            "Project": "Taskcat",
            "Environment": "dev"
          },
          "template": "path/to/template.yaml"
        },
        "tests": {
          "test1": {
            "parameters": {
              "InstanceType": "t2.micro"
            },
            "regions": [
              "us-east-1"
            ],
            "tags": {
              "Test": "test1",
              "Environment": "dev"
            },
            "template": "path/to/test1/template.yaml"
          },
          "test2": {
            "template": "path/to/test2/template.yaml",
            "parameters": {
              "InstanceType": "t2.micro"
            },
            "regions": [
              "us-west-2"
            ],
            "tags": {
              "Test": "test2",
              "Environment": "dev"
            },
            "invalid_property": "I'm invalid"
          }
        }
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "123 is not of type \"string\"",
      "python_error": "'invalid-acl' does not match '^(bucket-owner-full-control|bucket-owner-read|authenticated-read|aws-exec-read|public-read-write|public-read|private)$'\n\nFailed validating 'pattern' in schema['properties']['project']['properties']['s3_object_acl']:\n    {'description': \"ACL for uploaded s3 objects, defaults to 'private'\",\n     'pattern': '^(bucket-owner-full-control|bucket-owner-read|authenticated-read|aws-exec-read|public-read-write|public-read|private)$',\n     'type': 'string'}\n\nOn instance['project']['s3_object_acl']:\n    'invalid-acl'",
      "data": {
        "general": {
          "auth": {
            "aws_access_key_id": 123,
            "aws_secret_access_key": "YOUR_SECRET_ACCESS_KEY"
          },
          "parameters": {
            "Environment": "dev"
          },
          "s3_bucket": "my-taskcat-bucket",
          "s3_regional_buckets": true,
          "tags": {
            "Project": "Taskcat",
            "Environment": "dev"
          }
        },
        "project": {
          "name": "my-taskcat-project!",
          "owner": "john.doe@example.com",
          "regions": [
            "us-east-1",
            "us-west-2"
          ],
          "template": "path/to/template.yaml",
          "lambda_source_path": "lambda_functions/source",
          "lambda_zip_path": "lambda_functions/zips",
          "package_lambda": true,
          "build_submodules": true,
          "s3_object_acl": "invalid-acl",
          "shorten_stack_name": true,
          "parameters": {
            "InstanceType": "t2.micro"
          },
          "tags": {
            "Project": "Taskcat",
            "Environment": "dev"
          }
        },
        "tests": {
          "test1": {
            "template": "path/to/test1/template.yaml",
            "parameters": {
              "InstanceType": "t2.micro"
            },
            "regions": [
              "us-east-1"
            ],
            "tags": {
              "Test": "test1",
              "Environment": "dev"
            }
          },
          "test2": {
            "template": "path/to/test2/template.yaml",
            "parameters": {
              "InstanceType": "t2.micro"
            },
            "regions": [
              "us-west-2"
            ],
            "tags": {
              "Test": "test2",
              "Environment": "dev"
            }
          }
        }
      }
    }
  ]
}