{
  "description": "sample Github_easy/o70015.json",
  "meta": {
    "full_size": 318,
    "stripped_size": 217,
    "features": [
      "items"
    ],
    "raw_features": [
      "$schema",
      "properties",
      "type",
      "type:array",
      "type:boolean",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "type": "object",
    "properties": {
      "regex": {
        "description": "Whether to understand the annotation names as regular expressions.",
        "type": "boolean",
        "default": "false"
      },
      "include": {
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      "exclude": {
        "type": "array",
        "items": {
          "type": "string"
        }
      }
    }
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "regex": true,
        "include": [
          "annotation1",
          "annotation2"
        ],
        "exclude": [
          "annotation3",
          "annotation4"
        ]
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"true\" is not of type \"boolean\"",
      "python_error": "'true' is not of type 'boolean'\n\nFailed validating 'type' in schema['properties']['regex']:\n    {'description': 'Whether to understand the annotation names as regular '\n                    'expressions.',\n     'type': 'boolean',\n     'default': 'false'}\n\nOn instance['regex']:\n    'true'",
      "data": {
        "regex": "true",
        "include": [
          "annotation1",
          "annotation2"
        ],
        "exclude": [
          "annotation3",
          "annotation4"
        ]
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "123 is not of type \"string\"",
      "python_error": "123 is not of type 'string'\n\nFailed validating 'type' in schema['properties']['include']['items']:\n    {'type': 'string'}\n\nOn instance['include'][1]:\n    123",
      "data": {
        "regex": true,
        "include": [
          "annotation1",
          123
        ],
        "exclude": [
          "annotation3",
          "annotation4"
        ]
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "null is not of type \"string\"",
      "python_error": "None is not of type 'string'\n\nFailed validating 'type' in schema['properties']['include']['items']:\n    {'type': 'string'}\n\nOn instance['include'][1]:\n    None",
      "data": {
        "regex": true,
        "include": [
          "annotation1",
          null
        ],
        "exclude": [
          "annotation3",
          "annotation4"
        ]
      }
    }
  ]
}