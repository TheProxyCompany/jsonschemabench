{
  "description": "sample Github_medium/o61349.json",
  "meta": {
    "full_size": 3601,
    "stripped_size": 3028,
    "features": [
      "$ref",
      "@minmaxInteger",
      "@minmaxItems",
      "additionalProperties",
      "enum",
      "items"
    ],
    "raw_features": [
      "_boolSchema",
      "definitions",
      "maximum",
      "minItems",
      "minimum",
      "properties",
      "required",
      "type",
      "type:[]",
      "type:array",
      "type:boolean",
      "type:integer",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "additionalProperties": false,
    "definitions": {
      "event": {
        "additionalProperties": false,
        "properties": {
          "name": {
            "description": "Event name",
            "type": "string"
          },
          "params": {
            "items": {
              "$ref": "#/definitions/param"
            },
            "minItems": 0,
            "type": "array",
            "_uniqueItems": false
          }
        },
        "type": "object"
      },
      "param": {
        "additionalProperties": false,
        "properties": {
          "doc": {
            "description": "parameter documentation",
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "nullable": {
            "type": "boolean"
          },
          "since": {
            "$ref": "#/definitions/since"
          },
          "type": {
            "enum": [
              "boolean",
              "byte",
              "int",
              "long",
              "UUID",
              "enum",
              "byteArray",
              "longArray",
              "String",
              "Data",
              "EntryList_Integer_UUID",
              "EntryList_Integer_Long",
              "EntryList_Integer_Integer",
              "List_Integer",
              "List_Long",
              "List_UUID",
              "Address",
              "CacheEventData",
              "DistributedObjectInfo",
              "Member",
              "QueryCacheEventData",
              "RaftGroupId",
              "ScheduledTaskHandler",
              "SimpleEntryView",
              "WanReplicationRef",
              "Xid",
              "CacheConfigHolder",
              "CacheSimpleEntryListenerConfig",
              "EventJournalConfig",
              "EvictionConfigHolder",
              "HotRestartConfig",
              "ListenerConfigHolder",
              "AttributeConfig",
              "IndexConfig",
              "MapStoreConfigHolder",
              "MerkleTreeConfig",
              "NearCacheConfigHolder",
              "NearCachePreloaderConfig",
              "PredicateConfigHolder",
              "QueryCacheConfigHolder",
              "QueueStoreConfigHolder",
              "RingbufferStoreConfigHolder",
              "TimedExpiryPolicyFactoryConfig",
              "DurationConfig",
              "ClientBwListEntry",
              "EntryList_String_String",
              "EntryList_String_byteArray",
              "EntryList_Long_byteArray",
              "EntryList_String_EntryList_Integer_Long",
              "EntryList_UUID_Long",
              "EntryList_Address_List_Integer",
              "EntryList_UUID_Address",
              "EntryList_Data_Data",
              "EntryList_Member_List_ScheduledTaskHandler",
              "List_Address",
              "List_byteArray",
              "List_CacheEventData",
              "List_CacheSimpleEntryListenerConfig",
              "List_Data",
              "ListCN_Data",
              "List_DistributedObjectInfo",
              "List_ListenerConfigHolder",
              "List_AttributeConfig",
              "List_IndexConfig",
              "List_MemberInfo",
              "List_QueryCacheConfigHolder",
              "List_QueryCacheEventData",
              "List_ScheduledTaskHandler",
              "List_String",
              "List_Xid",
              "List_StackTraceElement",
              "List_ClientBwListEntry",
              "List_MCEvent",
              "Map_String_String",
              "MergePolicyConfig",
              "MemberVersion",
              "MemberInfo",
              "MCEvent",
              "AnchorDataListHolder",
              "PagingPredicateHolder"
            ]
          }
        },
        "required": [
          "name",
          "type",
          "nullable",
          "since",
          "doc"
        ],
        "type": "object"
      },
      "since": {
        "default": 2.0,
        "enum": [
          2.0
        ]
      }
    },
    "properties": {
      "id": {
        "description": "Service unique id, 0-255",
        "maximum": 255,
        "minimum": 0,
        "type": "integer"
      },
      "methods": {
        "items": {
          "additionalProperties": false,
          "properties": {
            "doc": {
              "description": "method documentation",
              "type": "string"
            },
            "events": {
              "items": {
                "$ref": "#/definitions/event"
              },
              "minItems": 1,
              "type": "array",
              "_uniqueItems": true
            },
            "id": {
              "description": "Method unique id, 1-255",
              "maximum": 255,
              "minimum": 1,
              "type": "integer"
            },
            "name": {
              "description": "Method name",
              "type": "string"
            },
            "request": {
              "additionalProperties": false,
              "description": "Request message definition",
              "properties": {
                "params": {
                  "items": {
                    "$ref": "#/definitions/param"
                  },
                  "minItems": 0,
                  "type": "array",
                  "_uniqueItems": false
                },
                "partitionIdentifier": {
                  "description": "How should the partition Id calculated for this request. Used in documentation.",
                  "type": [
                    "integer",
                    "string"
                  ]
                },
                "retryable": {
                  "description": "Is the request retryable or not",
                  "type": "boolean"
                }
              },
              "required": [
                "retryable",
                "partitionIdentifier"
              ],
              "type": "object"
            },
            "response": {
              "additionalProperties": false,
              "properties": {
                "params": {
                  "items": {
                    "$ref": "#/definitions/param"
                  },
                  "minItems": 0,
                  "type": "array",
                  "_uniqueItems": false
                }
              },
              "type": "object"
            },
            "since": {
              "$ref": "#/definitions/since"
            }
          },
          "required": [
            "name",
            "since",
            "doc",
            "request",
            "response"
          ]
        },
        "type": "array"
      },
      "name": {
        "description": "Service name",
        "type": "string"
      }
    },
    "required": [
      "name",
      "methods"
    ],
    "title": "Hazelcast Client Protocol Definition",
    "type": "object"
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "id": 1,
        "methods": [
          {
            "doc": "This is a test method",
            "events": [
              {
                "name": "TestEvent",
                "params": [
                  {
                    "doc": "This is a test parameter",
                    "name": "testParam",
                    "nullable": false,
                    "since": 2,
                    "type": "String"
                  }
                ]
              }
            ],
            "id": 1,
            "name": "TestMethod",
            "request": {
              "params": [
                {
                  "doc": "This is a test request parameter",
                  "name": "testRequestParam",
                  "nullable": false,
                  "since": 2,
                  "type": "String"
                }
              ],
              "partitionIdentifier": "integer",
              "retryable": true
            },
            "response": {
              "params": [
                {
                  "doc": "This is a test response parameter",
                  "name": "testResponseParam",
                  "nullable": false,
                  "since": 2,
                  "type": "String"
                }
              ]
            },
            "since": 2
          }
        ],
        "name": "TestService"
      }
    },
    {
      "description": "llama-70b generated negative; focus on minItems keyword",
      "valid": false,
      "rust_error": "[] has less than 1 item",
      "python_error": "[] should be non-empty\n\nFailed validating 'minItems' in schema['properties']['methods']['items']['properties']['events']:\n    {'items': {'$ref': '#/definitions/event'},\n     'minItems': 1,\n     'type': 'array',\n     '_uniqueItems': True}\n\nOn instance['methods'][0]['events']:\n    []",
      "data": {
        "id": 1,
        "methods": [
          {
            "doc": "This is a test method",
            "events": [],
            "id": 1,
            "name": "TestMethod",
            "request": {
              "params": [
                {
                  "doc": "This is a test request parameter",
                  "name": "testRequestParam",
                  "nullable": false,
                  "since": 2,
                  "type": "String"
                }
              ],
              "partitionIdentifier": "integer",
              "retryable": true
            },
            "response": {
              "params": [
                {
                  "doc": "This is a test response parameter",
                  "name": "testResponseParam",
                  "nullable": false,
                  "since": 2,
                  "type": "String"
                }
              ]
            },
            "since": 2
          }
        ],
        "name": "TestService"
      }
    },
    {
      "description": "llama-70b generated negative; focus on minimum keyword or maximum keyword",
      "valid": false,
      "rust_error": "256 is greater than the maximum of 255",
      "python_error": "256 is greater than the maximum of 255\n\nFailed validating 'maximum' in schema['properties']['id']:\n    {'description': 'Service unique id, 0-255',\n     'maximum': 255,\n     'minimum': 0,\n     'type': 'integer'}\n\nOn instance['id']:\n    256",
      "data": {
        "id": 256,
        "methods": [
          {
            "doc": "This is a test method",
            "events": [
              {
                "name": "TestEvent",
                "params": [
                  {
                    "doc": "This is a test parameter",
                    "name": "testParam",
                    "nullable": false,
                    "since": 2,
                    "type": "String"
                  }
                ]
              }
            ],
            "id": 0,
            "name": "TestMethod",
            "request": {
              "params": [
                {
                  "doc": "This is a test request parameter",
                  "name": "testRequestParam",
                  "nullable": false,
                  "since": 2,
                  "type": "String"
                }
              ],
              "partitionIdentifier": "integer",
              "retryable": true
            },
            "response": {
              "params": [
                {
                  "doc": "This is a test response parameter",
                  "name": "testResponseParam",
                  "nullable": false,
                  "since": 2,
                  "type": "String"
                }
              ]
            },
            "since": 2
          }
        ],
        "name": "TestService"
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"InvalidType\" is not one of [\"boolean\",\"byte\",\"int\",\"long\",\"UUID\",\"enum\",\"byteArray\",\"longArray\",\"String\",\"Data\",\"EntryList_Integer_UUID\",\"EntryList_Integer_Long\",\"EntryList_Integer_Integer\",\"List_Integer\",\"List_Long\",\"List_UUID\",\"Address\",\"CacheEventData\",\"DistributedObjectInfo\",\"Member\",\"QueryCacheEventData\",\"RaftGroupId\",\"ScheduledTaskHandler\",\"SimpleEntryView\",\"WanReplicationRef\",\"Xid\",\"CacheConfigHolder\",\"CacheSimpleEntryListenerConfig\",\"EventJournalConfig\",\"EvictionConfigHolder\",\"HotRestartConfig\",\"ListenerConfigHolder\",\"AttributeConfig\",\"IndexConfig\",\"MapStoreConfigHolder\",\"MerkleTreeConfig\",\"NearCacheConfigHolder\",\"NearCachePreloaderConfig\",\"PredicateConfigHolder\",\"QueryCacheConfigHolder\",\"QueueStoreConfigHolder\",\"RingbufferStoreConfigHolder\",\"TimedExpiryPolicyFactoryConfig\",\"DurationConfig\",\"ClientBwListEntry\",\"EntryList_String_String\",\"EntryList_String_byteArray\",\"EntryList_Long_byteArray\",\"EntryList_String_EntryList_Integer_Long\",\"EntryList_UUID_Long\",\"EntryList_Address_List_Integer\",\"EntryList_UUI.. (614 more)",
      "python_error": "Additional properties are not allowed ('invalidProperty' was unexpected)\n\nFailed validating 'additionalProperties' in schema:\n    {'additionalProperties': False,\n     'definitions': {'event': {'additionalProperties': False,\n                               'properties': {'name': {'description': 'Event '\n                                                                      'name',\n                                                       'type': 'string'},\n                                              'params': {'items': {'$ref': '#/definitions/param'},\n                                                         'minItems': 0,\n                                                         'type': 'array',\n                                                         '_uniqueItems': False}},\n                               'type': 'object'},\n                     'param': {'additionalProperties': False,\n                               'properties': {'doc': {'description': 'parameter '\n                                                .. (16043 more)",
      "data": {
        "id": 1,
        "methods": [
          {
            "doc": "This is a test method",
            "events": [
              {
                "name": "TestEvent",
                "params": [
                  {
                    "doc": "This is a test parameter",
                    "name": "testParam",
                    "nullable": false,
                    "since": 2,
                    "type": "InvalidType"
                  }
                ]
              }
            ],
            "id": 1,
            "name": "TestMethod",
            "request": {
              "params": [
                {
                  "doc": "This is a test request parameter",
                  "name": "testRequestParam",
                  "nullable": false,
                  "since": 2,
                  "type": "String"
                }
              ],
              "partitionIdentifier": "integer",
              "retryable": true
            },
            "response": {
              "params": [
                {
                  "doc": "This is a test response parameter",
                  "name": "testResponseParam",
                  "nullable": false,
                  "since": 2,
                  "type": "String"
                }
              ]
            },
            "since": 2
          }
        ],
        "name": "TestService",
        "invalidProperty": "Invalid"
      }
    },
    {
      "description": "llama-70b generated negative; focus on minimum keyword or maximum keyword",
      "valid": false,
      "rust_error": "256 is greater than the maximum of 255",
      "python_error": "256 is greater than the maximum of 255\n\nFailed validating 'maximum' in schema['properties']['id']:\n    {'description': 'Service unique id, 0-255',\n     'maximum': 255,\n     'minimum': 0,\n     'type': 'integer'}\n\nOn instance['id']:\n    256",
      "data": {
        "id": 256,
        "methods": [
          {
            "doc": "This is a test method",
            "events": [
              {
                "name": "TestEvent",
                "params": [
                  {
                    "doc": "This is a test parameter",
                    "name": "testParam",
                    "nullable": false,
                    "since": 2,
                    "type": "String"
                  }
                ]
              }
            ],
            "id": 1,
            "name": "TestMethod",
            "request": {
              "params": [
                {
                  "doc": "This is a test request parameter",
                  "name": "testRequestParam",
                  "nullable": false,
                  "since": 2,
                  "type": "String"
                }
              ],
              "partitionIdentifier": "integer",
              "retryable": true
            },
            "response": {
              "params": [
                {
                  "doc": "This is a test response parameter",
                  "name": "testResponseParam",
                  "nullable": false,
                  "since": 2,
                  "type": "String"
                }
              ]
            },
            "since": 2
          }
        ],
        "name": "TestService"
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "256 is greater than the maximum of 255",
      "python_error": "Additional properties are not allowed ('extraProperty' was unexpected)\n\nFailed validating 'additionalProperties' in schema:\n    {'additionalProperties': False,\n     'definitions': {'event': {'additionalProperties': False,\n                               'properties': {'name': {'description': 'Event '\n                                                                      'name',\n                                                       'type': 'string'},\n                                              'params': {'items': {'$ref': '#/definitions/param'},\n                                                         'minItems': 0,\n                                                         'type': 'array',\n                                                         '_uniqueItems': False}},\n                               'type': 'object'},\n                     'param': {'additionalProperties': False,\n                               'properties': {'doc': {'description': 'parameter '\n                                                  .. (16044 more)",
      "data": {
        "id": 256,
        "methods": [
          {
            "doc": "This is a test method",
            "events": [
              {
                "name": "TestEvent",
                "params": [
                  {
                    "doc": "This is a test parameter",
                    "name": "testParam",
                    "nullable": false,
                    "since": 2,
                    "type": "InvalidType"
                  }
                ]
              }
            ],
            "id": 0,
            "name": "TestMethod",
            "request": {
              "params": [
                {
                  "doc": "This is a test request parameter",
                  "name": "testRequestParam",
                  "nullable": false,
                  "since": 2,
                  "type": "String"
                }
              ],
              "partitionIdentifier": "invalid",
              "retryable": true
            },
            "response": {
              "params": [
                {
                  "doc": "This is a test response parameter",
                  "name": "testResponseParam",
                  "nullable": false,
                  "since": 2,
                  "type": "String"
                }
              ]
            },
            "since": 2
          }
        ],
        "name": "TestService",
        "extraProperty": "extraValue"
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "id": 1,
        "name": "ExampleService",
        "methods": [
          {
            "id": 1,
            "name": "exampleMethod",
            "since": 2.0,
            "doc": "This is an example method.",
            "request": {
              "retryable": true,
              "partitionIdentifier": "integer",
              "params": [
                {
                  "name": "param1",
                  "type": "String",
                  "nullable": false,
                  "since": 2.0,
                  "doc": "This is the first parameter."
                },
                {
                  "name": "param2",
                  "type": "int",
                  "nullable": true,
                  "since": 2.0,
                  "doc": "This is the second parameter."
                }
              ]
            },
            "response": {
              "params": [
                {
                  "name": "responseParam1",
                  "type": "String",
                  "nullable": false,
                  "since": 2.0,
                  "doc": "This is the first response parameter."
                },
                {
                  "name": "responseParam2",
                  "type": "int",
                  "nullable": true,
                  "since": 2.0,
                  "doc": "This is the second response parameter."
                }
              ]
            },
            "events": [
              {
                "name": "exampleEvent",
                "params": [
                  {
                    "name": "eventParam1",
                    "type": "String",
                    "nullable": false,
                    "since": 2.0,
                    "doc": "This is the first event parameter."
                  },
                  {
                    "name": "eventParam2",
                    "type": "int",
                    "nullable": true,
                    "since": 2.0,
                    "doc": "This is the second event parameter."
                  }
                ]
              }
            ]
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on minItems keyword",
      "valid": false,
      "rust_error": "[] has less than 1 item",
      "python_error": "[] should be non-empty\n\nFailed validating 'minItems' in schema['properties']['methods']['items']['properties']['events']:\n    {'items': {'$ref': '#/definitions/event'},\n     'minItems': 1,\n     'type': 'array',\n     '_uniqueItems': True}\n\nOn instance['methods'][0]['events']:\n    []",
      "data": {
        "id": 1,
        "name": "ExampleService",
        "methods": [
          {
            "id": 1,
            "name": "exampleMethod",
            "since": 2.0,
            "doc": "This is an example method.",
            "request": {
              "params": [],
              "partitionIdentifier": "integer",
              "retryable": true
            },
            "response": {
              "params": []
            },
            "events": []
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on type keyword with an array of types",
      "valid": false,
      "rust_error": "Additional properties are not allowed ('type' was unexpected)",
      "python_error": "Additional properties are not allowed ('params' was unexpected)\n\nFailed validating 'additionalProperties' in schema['properties']['methods']['items']:\n    {'additionalProperties': False,\n     'properties': {'doc': {'description': 'method documentation',\n                            'type': 'string'},\n                    'events': {'items': {'$ref': '#/definitions/event'},\n                               'minItems': 1,\n                               'type': 'array',\n                               '_uniqueItems': True},\n                    'id': {'description': 'Method unique id, 1-255',\n                           'maximum': 255,\n                           'minimum': 1,\n                           'type': 'integer'},\n                    'name': {'description': 'Method name',\n                             'type': 'string'},\n                    'request': {'additionalProperties': False,\n                                'description': 'Request message definition',\n                                'properties': {'params'.. (3606 more)",
      "data": {
        "id": 1,
        "name": "ExampleService",
        "methods": [
          {
            "id": 1,
            "name": "exampleMethod",
            "since": 2.0,
            "doc": "This is an example method.",
            "request": {
              "retryable": true,
              "partitionIdentifier": "boolean",
              "type": [
                "integer",
                "string"
              ]
            },
            "params": [
              {
                "name": "param1",
                "type": "String",
                "nullable": false,
                "since": 2.0,
                "doc": "This is the first parameter."
              },
              {
                "name": "param2",
                "type": "int",
                "nullable": true,
                "since": 2.0,
                "doc": "This is the second parameter."
              }
            ]
          },
          "response",
          "params"
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on minimum keyword or maximum keyword",
      "valid": false,
      "rust_error": "256 is greater than the maximum of 255",
      "python_error": "256 is greater than the maximum of 255\n\nFailed validating 'maximum' in schema['properties']['id']:\n    {'description': 'Service unique id, 0-255',\n     'maximum': 255,\n     'minimum': 0,\n     'type': 'integer'}\n\nOn instance['id']:\n    256",
      "data": {
        "id": 256,
        "name": "ExampleService",
        "methods": [
          {
            "id": 1,
            "name": "exampleMethod",
            "since": 2.0,
            "doc": "This is an example method.",
            "request": {
              "retryable": true,
              "partitionIdentifier": "integer",
              "params": [
                {
                  "name": "param1",
                  "type": "String",
                  "nullable": false,
                  "since": 2.0,
                  "doc": "This is the first parameter."
                },
                {
                  "name": "param2",
                  "type": "int",
                  "nullable": true,
                  "since": 2.0,
                  "doc": "This is the second parameter."
                }
              ]
            },
            "response": {
              "params": [
                {
                  "name": "responseParam1",
                  "type": "String",
                  "nullable": false,
                  "since": 2.0,
                  "doc": "This is the first response parameter."
                },
                {
                  "name": "responseParam2",
                  "type": "int",
                  "nullable": true,
                  "since": 2.0,
                  "doc": "This is the second response parameter."
                }
              ]
            },
            "events": [
              {
                "name": "exampleEvent",
                "params": [
                  {
                    "name": "eventParam1",
                    "type": "String",
                    "nullable": false,
                    "since": 2.0,
                    "doc": "This is the first event parameter."
                  },
                  {
                    "name": "eventParam2",
                    "type": "int",
                    "nullable": true,
                    "since": 2.0,
                    "doc": "This is the second event parameter."
                  }
                ]
              }
            ]
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "256 is greater than the maximum of 255",
      "python_error": "256 is greater than the maximum of 255\n\nFailed validating 'maximum' in schema['properties']['id']:\n    {'description': 'Service unique id, 0-255',\n     'maximum': 255,\n     'minimum': 0,\n     'type': 'integer'}\n\nOn instance['id']:\n    256",
      "data": {
        "id": 256,
        "name": "ExampleService",
        "methods": [
          {
            "id": 256,
            "name": "exampleMethod",
            "since": 2.0,
            "doc": "This is an example method.",
            "request": {
              "retryable": true,
              "partitionIdentifier": "integer",
              "params": [
                {
                  "name": "param1",
                  "type": "String",
                  "nullable": false,
                  "since": 2.0,
                  "doc": "This is the first parameter."
                },
                {
                  "name": "param1",
                  "type": "int",
                  "nullable": true,
                  "since": 2.0,
                  "doc": "This is the second parameter."
                }
              ]
            },
            "response": {
              "params": []
            },
            "events": []
          }
        ]
      }
    }
  ]
}