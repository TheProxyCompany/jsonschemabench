{
  "description": "sample Github_medium/o6243.json",
  "meta": {
    "full_size": 729,
    "stripped_size": 557,
    "features": [
      "@minmaxItems",
      "@minmaxLength",
      "@siblingKeys",
      "additionalProperties",
      "allOf",
      "anyOf",
      "items"
    ],
    "raw_features": [
      "$schema",
      "_boolSchema",
      "minItems",
      "minLength",
      "properties",
      "required",
      "type",
      "type:array",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "additionalProperties": false,
    "type": "object",
    "properties": {
      "nameTemplate": {
        "title": "Command Name Template",
        "type": "string",
        "minLength": 1
      },
      "payloadTemplate": {
        "title": "Command Payload Template",
        "type": "string"
      },
      "sendToDeviceTags": {
        "title": "Send to Device Tags",
        "type": "array",
        "minItems": 1,
        "items": {
          "title": "Device Tag Pair",
          "type": "object",
          "properties": {
            "key": {
              "type": "string"
            },
            "value": {
              "type": "string"
            }
          },
          "minLength": 1
        }
      },
      "sendToDeviceIds": {
        "title": "Send to Device IDs",
        "type": "array",
        "minItems": 1,
        "items": {
          "title": "Device ID",
          "type": "string",
          "minLength": 1
        }
      }
    },
    "allOf": [
      {
        "required": [
          "nameTemplate"
        ]
      },
      {
        "anyOf": [
          {
            "required": [
              "sendToDeviceIds"
            ]
          },
          {
            "required": [
              "sendToDeviceTags"
            ]
          }
        ]
      }
    ]
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "nameTemplate": "example-template",
        "payloadTemplate": "example-payload",
        "sendToDeviceTags": [
          {
            "key": "example-key",
            "value": "example-value"
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on minLength keyword",
      "valid": false,
      "rust_error": "\"\" is shorter than 1 character",
      "python_error": "'' should be non-empty\n\nFailed validating 'minLength' in schema['properties']['nameTemplate']:\n    {'title': 'Command Name Template', 'type': 'string', 'minLength': 1}\n\nOn instance['nameTemplate']:\n    ''",
      "data": {
        "nameTemplate": "",
        "payloadTemplate": "example-payload",
        "sendToDeviceTags": [
          {
            "key": "example-key",
            "value": "example-value"
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on anyOf keyword",
      "valid": false,
      "rust_error": "{\"nameTemplate\":\"example-template\",\"payloadTemplate\":\"example-payload\"} is not valid under any of the schemas listed in the 'anyOf' keyword",
      "python_error": "{'nameTemplate': 'example-template', 'payloadTemplate': 'example-payload'} is not valid under any of the given schemas\n\nFailed validating 'anyOf' in schema['allOf'][1]:\n    {'anyOf': [{'required': ['sendToDeviceIds']},\n               {'required': ['sendToDeviceTags']}]}\n\nOn instance:\n    {'nameTemplate': 'example-template',\n     'payloadTemplate': 'example-payload'}",
      "data": {
        "nameTemplate": "example-template",
        "payloadTemplate": "example-payload"
      }
    },
    {
      "description": "llama-70b generated negative; focus on minItems keyword",
      "valid": false,
      "rust_error": "[] has less than 1 item",
      "python_error": "[] should be non-empty\n\nFailed validating 'minItems' in schema['properties']['sendToDeviceTags']:\n    {'title': 'Send to Device Tags',\n     'type': 'array',\n     'minItems': 1,\n     'items': {'title': 'Device Tag Pair',\n               'type': 'object',\n               'properties': {'key': {'type': 'string'},\n                              'value': {'type': 'string'}},\n               'minLength': 1}}\n\nOn instance['sendToDeviceTags']:\n    []",
      "data": {
        "nameTemplate": "example-template",
        "payloadTemplate": "example-payload",
        "sendToDeviceTags": []
      }
    },
    {
      "description": "llama-70b generated negative; focus on allOf keyword",
      "valid": false,
      "rust_error": "\"nameTemplate\" is a required property",
      "python_error": "'nameTemplate' is a required property\n\nFailed validating 'required' in schema['allOf'][0]:\n    {'required': ['nameTemplate']}\n\nOn instance:\n    {'payloadTemplate': 'example-payload',\n     'sendToDeviceTags': [{'key': 'example-key', 'value': 'example-value'}]}",
      "data": {
        "payloadTemplate": "example-payload",
        "sendToDeviceTags": [
          {
            "key": "example-key",
            "value": "example-value"
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on allOf keyword",
      "valid": false,
      "rust_error": "[] has less than 1 item",
      "python_error": "[] should be non-empty\n\nFailed validating 'minItems' in schema['properties']['sendToDeviceIds']:\n    {'title': 'Send to Device IDs',\n     'type': 'array',\n     'minItems': 1,\n     'items': {'title': 'Device ID', 'type': 'string', 'minLength': 1}}\n\nOn instance['sendToDeviceIds']:\n    []",
      "data": {
        "nameTemplate": "example-template",
        "payloadTemplate": "example-payload",
        "sendToDeviceTags": [
          {
            "key": "example-key",
            "value": "example-value"
          }
        ],
        "sendToDeviceIds": []
      }
    },
    {
      "description": "llama-70b generated negative; focus on anyOf keyword",
      "valid": false,
      "rust_error": "[] has less than 1 item",
      "python_error": "[] should be non-empty\n\nFailed validating 'minItems' in schema['properties']['sendToDeviceIds']:\n    {'title': 'Send to Device IDs',\n     'type': 'array',\n     'minItems': 1,\n     'items': {'title': 'Device ID', 'type': 'string', 'minLength': 1}}\n\nOn instance['sendToDeviceIds']:\n    []",
      "data": {
        "nameTemplate": "example-template",
        "payloadTemplate": "example-payload",
        "sendToDeviceTags": [
          {
            "key": "example-key",
            "value": "example-value"
          }
        ],
        "sendToDeviceIds": []
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "nameTemplate": "My Command",
        "payloadTemplate": "{\"key\":\"value\"}",
        "sendToDeviceIds": [
          "device-1",
          "device-2"
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on allOf keyword",
      "valid": false,
      "rust_error": "\"\" is shorter than 1 character",
      "python_error": "'' should be non-empty\n\nFailed validating 'minLength' in schema['properties']['nameTemplate']:\n    {'title': 'Command Name Template', 'type': 'string', 'minLength': 1}\n\nOn instance['nameTemplate']:\n    ''",
      "data": {
        "nameTemplate": "",
        "payloadTemplate": "{\"key\":\"value\"}",
        "sendToDeviceIds": [
          "device-1",
          "device-2"
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on minLength keyword",
      "valid": false,
      "rust_error": "\"\" is shorter than 1 character",
      "python_error": "'' should be non-empty\n\nFailed validating 'minLength' in schema['properties']['nameTemplate']:\n    {'title': 'Command Name Template', 'type': 'string', 'minLength': 1}\n\nOn instance['nameTemplate']:\n    ''",
      "data": {
        "nameTemplate": "",
        "payloadTemplate": "{\"key\":\"value\"}",
        "sendToDeviceIds": [
          "device-1",
          "device-2"
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on minItems keyword",
      "valid": false,
      "rust_error": "[] has less than 1 item",
      "python_error": "[] should be non-empty\n\nFailed validating 'minItems' in schema['properties']['sendToDeviceIds']:\n    {'title': 'Send to Device IDs',\n     'type': 'array',\n     'minItems': 1,\n     'items': {'title': 'Device ID', 'type': 'string', 'minLength': 1}}\n\nOn instance['sendToDeviceIds']:\n    []",
      "data": {
        "nameTemplate": "My Command",
        "payloadTemplate": "{\"key\":\"value\"}",
        "sendToDeviceIds": []
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"\" is shorter than 1 character",
      "python_error": "'' should be non-empty\n\nFailed validating 'minLength' in schema['properties']['sendToDeviceIds']['items']:\n    {'title': 'Device ID', 'type': 'string', 'minLength': 1}\n\nOn instance['sendToDeviceIds'][1]:\n    ''",
      "data": {
        "nameTemplate": "My Command",
        "payloadTemplate": "{\"key\":\"value\"}",
        "sendToDeviceIds": [
          "device-1",
          ""
        ]
      }
    }
  ]
}