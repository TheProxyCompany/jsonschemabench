{
  "description": "sample Github_medium/o76474.json",
  "meta": {
    "full_size": 969,
    "stripped_size": 891,
    "features": [
      "@minmaxItems",
      "@minmaxLength",
      "additionalProperties",
      "items"
    ],
    "raw_features": [
      "$schema",
      "_boolSchema",
      "minItems",
      "minLength",
      "properties",
      "required",
      "type",
      "type:array",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "additionalProperties": false,
    "description": "get user response",
    "properties": {
      "credentials": {
        "items": {
          "additionalProperties": false,
          "properties": {
            "createdOn": {
              "minLength": 1,
              "type": "string"
            },
            "expiresOn": {
              "minLength": 1,
              "type": "string"
            },
            "key": {
              "minLength": 1,
              "type": "string"
            },
            "revokedOn": {
              "minLength": 1,
              "type": "string"
            },
            "secret": {
              "minLength": 1,
              "type": "string"
            }
          },
          "required": [
            "key",
            "secret",
            "createdOn",
            "expiresOn"
          ],
          "type": "object"
        },
        "minItems": 1,
        "type": "array"
      },
      "dockerImageName": {
        "minLength": 1,
        "type": "string"
      },
      "email": {
        "minLength": 1,
        "type": "string"
      },
      "links": {
        "properties": {
          "self": {
            "properties": {
              "href": {
                "_format": "uri",
                "type": "string"
              }
            },
            "required": [
              "href"
            ],
            "type": "object"
          }
        },
        "required": [
          "self"
        ],
        "type": "object"
      },
      "password": {
        "minLength": 1,
        "type": "string"
      },
      "userId": {
        "minLength": 1,
        "type": "string"
      }
    },
    "required": [
      "userId",
      "email",
      "password",
      "dockerImageName",
      "credentials",
      "links"
    ],
    "title": "get user response",
    "type": "object"
  },
  "tests": [
    {
      "description": "llama 70b generated valid",
      "valid": true,
      "data": {
        "credentials": [
          {
            "createdOn": "2022-01-01T12:00:00Z",
            "expiresOn": "2023-01-01T12:00:00Z",
            "key": "my-key",
            "revokedOn": "2024-01-01T12:00:00Z",
            "secret": "my-secret"
          }
        ],
        "dockerImageName": "my-docker-image",
        "email": "user@example.com",
        "links": {
          "self": {
            "href": "https://example.com/users/123"
          }
        },
        "password": "my-password",
        "userId": "123"
      }
    },
    {
      "description": "llama-70b generated negative; focus on minLength keyword",
      "valid": false,
      "rust_error": "\"\" is shorter than 1 character",
      "python_error": "'' should be non-empty\n\nFailed validating 'minLength' in schema['properties']['userId']:\n    {'minLength': 1, 'type': 'string'}\n\nOn instance['userId']:\n    ''",
      "data": {
        "credentials": [
          {
            "createdOn": "",
            "expiresOn": "2023-01-01T12:00:00Z",
            "key": "my-key",
            "revokedOn": "2024-01-01T12:00:00Z",
            "secret": "my-secret"
          }
        ],
        "dockerImageName": "",
        "email": "user@example.com",
        "links": {
          "self": {
            "href": "https://example.com/users/123"
          }
        },
        "password": "my-password",
        "userId": ""
      }
    },
    {
      "description": "llama-70b generated negative; focus on minItems keyword",
      "valid": false,
      "rust_error": "[] has less than 1 item",
      "python_error": "[] should be non-empty\n\nFailed validating 'minItems' in schema['properties']['credentials']:\n    {'items': {'additionalProperties': False,\n               'properties': {'createdOn': {'minLength': 1,\n                                            'type': 'string'},\n                              'expiresOn': {'minLength': 1,\n                                            'type': 'string'},\n                              'key': {'minLength': 1, 'type': 'string'},\n                              'revokedOn': {'minLength': 1,\n                                            'type': 'string'},\n                              'secret': {'minLength': 1, 'type': 'string'}},\n               'required': ['key', 'secret', 'createdOn', 'expiresOn'],\n               'type': 'object'},\n     'minItems': 1,\n     'type': 'array'}\n\nOn instance['credentials']:\n    []",
      "data": {
        "credentials": [],
        "dockerImageName": "my-docker-image",
        "email": "user@example.com",
        "links": {
          "self": {
            "href": "https://example.com/users/123"
          }
        },
        "password": "my-password",
        "userId": "123"
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "Additional properties are not allowed ('extraProperty' was unexpected)",
      "python_error": "Additional properties are not allowed ('extraProperty' was unexpected)\n\nFailed validating 'additionalProperties' in schema['properties']['credentials']['items']:\n    {'additionalProperties': False,\n     'properties': {'createdOn': {'minLength': 1, 'type': 'string'},\n                    'expiresOn': {'minLength': 1, 'type': 'string'},\n                    'key': {'minLength': 1, 'type': 'string'},\n                    'revokedOn': {'minLength': 1, 'type': 'string'},\n                    'secret': {'minLength': 1, 'type': 'string'}},\n     'required': ['key', 'secret', 'createdOn', 'expiresOn'],\n     'type': 'object'}\n\nOn instance['credentials'][0]:\n    {'createdOn': '2022-01-01T12:00:00Z',\n     'expiresOn': '2023-01-01T12:00:00Z',\n     'key': 'my-key',\n     'revokedOn': '2024-01-01T12:00:00Z',\n     'secret': 'my-secret',\n     'extraProperty': 'extra-value'}",
      "data": {
        "credentials": [
          {
            "createdOn": "2022-01-01T12:00:00Z",
            "expiresOn": "2023-01-01T12:00:00Z",
            "key": "my-key",
            "revokedOn": "2024-01-01T12:00:00Z",
            "secret": "my-secret",
            "extraProperty": "extra-value"
          }
        ],
        "dockerImageName": "my-docker-image",
        "email": "user@example.com",
        "links": {
          "self": {
            "href": "https://example.com/users/123"
          }
        },
        "password": "my-password",
        "userId": "123"
      }
    },
    {
      "description": "llama-70b generated negative; focus on minLength keyword",
      "valid": false,
      "rust_error": "\"\" is shorter than 1 character",
      "python_error": "'' should be non-empty\n\nFailed validating 'minLength' in schema['properties']['credentials']['items']['properties']['createdOn']:\n    {'minLength': 1, 'type': 'string'}\n\nOn instance['credentials'][0]['createdOn']:\n    ''",
      "data": {
        "credentials": [
          {
            "createdOn": "",
            "expiresOn": "2023-01-01T12:00:00Z",
            "key": "my-key",
            "revokedOn": "2024-01-01T12:00:00Z",
            "secret": "my-secret"
          }
        ],
        "dockerImageName": "my-docker-image",
        "email": "user@example.com",
        "links": {
          "self": {
            "href": "https://example.com/users/123"
          }
        },
        "password": "my-password",
        "userId": "123"
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "credentials": [
          {
            "createdOn": "2022-01-01T00:00:00.000Z",
            "expiresOn": "2023-01-01T00:00:00.000Z",
            "key": "my-key",
            "revokedOn": "2024-01-01T00:00:00.000Z",
            "secret": "my-secret"
          }
        ],
        "dockerImageName": "my-docker-image",
        "email": "user@example.com",
        "links": {
          "self": {
            "href": "https://example.com/users/user123"
          }
        },
        "password": "password123",
        "userId": "user123"
      }
    },
    {
      "description": "llama-70b generated negative; focus on minItems keyword",
      "valid": false,
      "rust_error": "[] has less than 1 item",
      "python_error": "[] should be non-empty\n\nFailed validating 'minItems' in schema['properties']['credentials']:\n    {'items': {'additionalProperties': False,\n               'properties': {'createdOn': {'minLength': 1,\n                                            'type': 'string'},\n                              'expiresOn': {'minLength': 1,\n                                            'type': 'string'},\n                              'key': {'minLength': 1, 'type': 'string'},\n                              'revokedOn': {'minLength': 1,\n                                            'type': 'string'},\n                              'secret': {'minLength': 1, 'type': 'string'}},\n               'required': ['key', 'secret', 'createdOn', 'expiresOn'],\n               'type': 'object'},\n     'minItems': 1,\n     'type': 'array'}\n\nOn instance['credentials']:\n    []",
      "data": {
        "credentials": [],
        "dockerImageName": "my-docker-image",
        "email": "user@example.com",
        "links": {
          "self": {
            "href": "https://example.com/users/user123"
          }
        },
        "password": "password123",
        "userId": "user123"
      }
    },
    {
      "description": "llama-70b generated negative; focus on minLength keyword",
      "valid": false,
      "rust_error": "\"\" is shorter than 1 character",
      "python_error": "'' should be non-empty\n\nFailed validating 'minLength' in schema['properties']['userId']:\n    {'minLength': 1, 'type': 'string'}\n\nOn instance['userId']:\n    ''",
      "data": {
        "credentials": [
          {
            "createdOn": "2022-01-01T00:00:00.000Z",
            "expiresOn": "2023-01-01T00:00:00.000Z",
            "key": "my-key",
            "revokedOn": "2024-01-01T00:00:00.000Z",
            "secret": "my-secret"
          }
        ],
        "dockerImageName": "my-docker-image",
        "email": "user@example.com",
        "links": {
          "self": {
            "href": "https://example.com/users/user123"
          }
        },
        "password": "password123",
        "userId": ""
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "\"\" is shorter than 1 character",
      "python_error": "'' should be non-empty\n\nFailed validating 'minLength' in schema['properties']['userId']:\n    {'minLength': 1, 'type': 'string'}\n\nOn instance['userId']:\n    ''",
      "data": {
        "credentials": [
          {
            "createdOn": "2022-01-01T00:00:00.000Z",
            "expiresOn": "2023-01-01T00:00:00.000Z",
            "key": "my-key",
            "secret": "my-secret"
          }
        ],
        "dockerImageName": "my-docker-image",
        "email": "user@example.com",
        "links": {
          "self": {
            "href": "example.com/users/user123"
          }
        },
        "password": "password123",
        "userId": ""
      }
    }
  ]
}