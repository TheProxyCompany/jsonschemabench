{
  "description": "sample Snowplow/sp_310_Normalized.json",
  "meta": {
    "full_size": 3295,
    "stripped_size": 2103,
    "features": [
      "@minmaxLength",
      "@minmaxProperties",
      "@siblingKeys",
      "additionalProperties",
      "enum",
      "items",
      "oneOf",
      "pattern",
      "patternProperties"
    ],
    "raw_features": [
      "_boolSchema",
      "minLength",
      "minProperties",
      "properties",
      "required",
      "type",
      "type:[]",
      "type:array",
      "type:integer",
      "type:number",
      "type:object",
      "type:string"
    ]
  },
  "schema": {
    "description": "Schema for an array of recovery scenarios",
    "minProperties": 1,
    "patternProperties": {
      "^iglu:": {
        "items": {
          "properties": {
            "conditions": {
              "description": "Conditions required to apply steps for specific Bad Row type",
              "items": {
                "additionalProperties": false,
                "properties": {
                  "from": {
                    "description": "Source type to cast from",
                    "type": "string"
                  },
                  "match": {
                    "description": "An expression applied when replacing field’s values with new value",
                    "type": "string"
                  },
                  "op": {
                    "description": "Transformation operation to perform",
                    "enum": [
                      "Cast",
                      "Remove",
                      "Replace",
                      "Test"
                    ],
                    "type": "string"
                  },
                  "path": {
                    "description": "JSON Path to object",
                    "type": "string"
                  },
                  "to": {
                    "description": "Target type to cast to",
                    "type": "string"
                  },
                  "value": {
                    "description": "A value to match against",
                    "oneOf": [
                      {
                        "type": "string"
                      },
                      {
                        "additionalProperties": false,
                        "description": "Compare against static value",
                        "properties": {
                          "value": {
                            "type": [
                              "array",
                              "number",
                              "object",
                              "string"
                            ]
                          }
                        },
                        "required": [
                          "value"
                        ],
                        "type": "object"
                      },
                      {
                        "additionalProperties": false,
                        "description": "Compare against regular expression",
                        "properties": {
                          "regex": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "regex"
                        ],
                        "type": "object"
                      },
                      {
                        "additionalProperties": false,
                        "description": "Compare size",
                        "properties": {
                          "size": {
                            "oneOf": [
                              {
                                "additionalProperties": false,
                                "properties": {
                                  "eq": {
                                    "type": "integer"
                                  }
                                },
                                "required": [
                                  "eq"
                                ]
                              },
                              {
                                "additionalProperties": false,
                                "properties": {
                                  "lt": {
                                    "type": "integer"
                                  }
                                },
                                "required": [
                                  "lt"
                                ]
                              },
                              {
                                "additionalProperties": false,
                                "properties": {
                                  "gt": {
                                    "type": "integer"
                                  }
                                },
                                "required": [
                                  "gt"
                                ]
                              }
                            ],
                            "type": "object"
                          }
                        },
                        "type": "object"
                      }
                    ]
                  }
                },
                "required": [
                  "op",
                  "path"
                ],
                "type": "object"
              },
              "type": "array"
            },
            "name": {
              "description": "A slug name for recovery flow",
              "minLength": 1,
              "pattern": "^(([a-zA-Z0-9]+)(-?))+$",
              "type": "string"
            },
            "steps": {
              "description": "Steps to be applied for specific Bad Row type",
              "items": {
                "additionalProperties": false,
                "properties": {
                  "from": {
                    "description": "Source type to cast from",
                    "type": "string"
                  },
                  "match": {
                    "description": "An expression applied when replacing field’s values with new value",
                    "type": "string"
                  },
                  "op": {
                    "description": "Transformation operation to perform",
                    "enum": [
                      "Cast",
                      "Remove",
                      "Replace",
                      "Test"
                    ],
                    "type": "string"
                  },
                  "path": {
                    "description": "JSON Path to object",
                    "type": "string"
                  },
                  "to": {
                    "description": "Target type to cast to",
                    "type": "string"
                  },
                  "value": {
                    "description": "A value to match against",
                    "oneOf": [
                      {
                        "type": "string"
                      },
                      {
                        "additionalProperties": false,
                        "description": "Compare against static value",
                        "properties": {
                          "value": {
                            "type": [
                              "array",
                              "number",
                              "object",
                              "string"
                            ]
                          }
                        },
                        "required": [
                          "value"
                        ],
                        "type": "object"
                      },
                      {
                        "additionalProperties": false,
                        "description": "Compare against regular expression",
                        "properties": {
                          "regex": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "regex"
                        ],
                        "type": "object"
                      },
                      {
                        "additionalProperties": false,
                        "description": "Compare size",
                        "properties": {
                          "size": {
                            "oneOf": [
                              {
                                "additionalProperties": false,
                                "properties": {
                                  "eq": {
                                    "type": "integer"
                                  }
                                },
                                "required": [
                                  "eq"
                                ]
                              },
                              {
                                "additionalProperties": false,
                                "properties": {
                                  "lt": {
                                    "type": "integer"
                                  }
                                },
                                "required": [
                                  "lt"
                                ]
                              },
                              {
                                "additionalProperties": false,
                                "properties": {
                                  "gt": {
                                    "type": "integer"
                                  }
                                },
                                "required": [
                                  "gt"
                                ]
                              }
                            ],
                            "type": "object"
                          }
                        },
                        "type": "object"
                      }
                    ]
                  }
                },
                "required": [
                  "op",
                  "path"
                ],
                "type": "object"
              },
              "type": "array"
            }
          },
          "required": [
            "name",
            "conditions",
            "steps"
          ],
          "type": "object"
        },
        "type": "array"
      }
    },
    "self": {
      "format": "jsonschema",
      "name": "recoveries",
      "vendor": "com.snowplowanalytics.snowplow",
      "version": "3-0-0"
    },
    "type": "object"
  },
  "tests": [
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "iglu:com.snowplowanalytics.snowplow/recoveries/jsonschema/3-0-0": [
          {
            "conditions": [
              {
                "op": "Test",
                "path": "$.data",
                "value": {
                  "regex": "^\\d+$"
                }
              }
            ],
            "name": "recover-bad-row",
            "steps": [
              {
                "from": "string",
                "op": "Cast",
                "path": "$.data",
                "to": "integer"
              }
            ]
          },
          {
            "conditions": [
              {
                "op": "Test",
                "path": "$.data",
                "value": {
                  "size": {
                    "eq": 0
                  }
                }
              }
            ],
            "name": "recover-missing-field",
            "steps": [
              {
                "op": "Replace",
                "path": "$.data",
                "value": "default-value"
              }
            ]
          }
        ]
      }
    },
    {
      "description": "llama 70b generated positive",
      "valid": true,
      "data": {
        "iglu:com.snowplowanalytics.snowplow/recoveries/jsonschema/3-0-0": [
          {
            "conditions": [
              {
                "op": "Test",
                "path": "$.field1",
                "value": {
                  "regex": "^[a-zA-Z]+$"
                }
              },
              {
                "op": "Test",
                "path": "$.field2",
                "value": {
                  "size": {
                    "eq": 10
                  }
                }
              }
            ],
            "name": "recovery-flow-1",
            "steps": [
              {
                "match": "oldValue",
                "op": "Replace",
                "path": "$.field1",
                "value": "newValue"
              },
              {
                "op": "Remove",
                "path": "$.field2"
              }
            ]
          },
          {
            "conditions": [
              {
                "op": "Test",
                "path": "$.field3",
                "value": {
                  "value": 10
                }
              }
            ],
            "name": "recovery-flow-2",
            "steps": [
              {
                "from": "string",
                "op": "Cast",
                "path": "$.field3",
                "to": "integer"
              }
            ]
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on oneOf keyword",
      "valid": false,
      "rust_error": "{\"regex\":\"^[a-zA-Z]+$\",\"value\":\"string\"} is not valid under any of the schemas listed in the 'oneOf' keyword",
      "python_error": "{'regex': '^[a-zA-Z]+$', 'value': 'string'} is not valid under any of the given schemas\n\nFailed validating 'oneOf' in schema['patternProperties']['^iglu:']['items']['properties']['conditions']['items']['properties']['value']:\n    {'description': 'A value to match against',\n     'oneOf': [{'type': 'string'},\n               {'additionalProperties': False,\n                'description': 'Compare against static value',\n                'properties': {'value': {'type': ['array',\n                                                  'number',\n                                                  'object',\n                                                  'string']}},\n                'required': ['value'],\n                'type': 'object'},\n               {'additionalProperties': False,\n                'description': 'Compare against regular expression',\n                'properties': {'regex': {'type': 'string'}},\n                'required': ['regex'],\n                'type': 'object'},\n               {'additionalProperties'.. (1054 more)",
      "data": {
        "iglu:com.snowplowanalytics.snowplow/recoveries/jsonschema/3-0-0": [
          {
            "name": "recovery-flow-1",
            "conditions": [
              {
                "op": "Test",
                "path": "$.field1",
                "value": {
                  "regex": "^[a-zA-Z]+$",
                  "value": "string"
                }
              }
            ],
            "steps": [
              {
                "op": "Replace",
                "path": "$.field1",
                "match": "oldValue",
                "value": "newValue"
              }
            ]
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative; focus on minLength keyword",
      "valid": false,
      "rust_error": "\"\" is shorter than 1 character",
      "python_error": "'' should be non-empty\n\nFailed validating 'minLength' in schema['patternProperties']['^iglu:']['items']['properties']['name']:\n    {'description': 'A slug name for recovery flow',\n     'minLength': 1,\n     'pattern': '^(([a-zA-Z0-9]+)(-?))+$',\n     'type': 'string'}\n\nOn instance['iglu:com.snowplowanalytics.snowplow/recoveries/jsonschema/3-0-0'][0]['name']:\n    ''",
      "data": {
        "iglu:com.snowplowanalytics.snowplow/recoveries/jsonschema/3-0-0": [
          {
            "conditions": [
              {
                "op": "Test",
                "path": "$.field1",
                "value": {
                  "regex": "^[a-zA-Z]+$"
                }
              },
              {
                "op": "Test",
                "path": "$.field2",
                "value": {
                  "size": {
                    "eq": 10
                  }
                }
              }
            ],
            "name": "",
            "steps": [
              {
                "match": "oldValue",
                "op": "Replace",
                "path": "$.field1",
                "value": "newValue"
              },
              {
                "op": "Remove",
                "path": "$.field2"
              }
            ]
          },
          {
            "conditions": [
              {
                "op": "Test",
                "path": "$.field3",
                "value": {
                  "value": 10
                }
              }
            ],
            "name": "recovery-flow-2",
            "steps": [
              {
                "from": "string",
                "op": "Cast",
                "path": "$.field3",
                "to": "integer"
              }
            ]
          }
        ]
      }
    },
    {
      "description": "llama-70b generated negative",
      "valid": false,
      "rust_error": "{\"size\":{\"eq\":10.5}} is not valid under any of the schemas listed in the 'oneOf' keyword",
      "python_error": "None is not of type 'string'\n\nFailed validating 'type' in schema['patternProperties']['^iglu:']['items']['properties']['steps']['items']['properties']['to']:\n    {'description': 'Target type to cast to', 'type': 'string'}\n\nOn instance['iglu:com.snowplowanalytics.snowplow/recoveries/jsonschema/3-0-0'][1]['steps'][0]['to']:\n    None",
      "data": {
        "iglu:com.snowplowanalytics.snowplow/recoveries/jsonschema/3-0-0": [
          {
            "name": "recovery-flow-1",
            "conditions": [
              {
                "op": "Test",
                "path": "$.field1",
                "value": {
                  "regex": "^[a-zA-Z]+$"
                }
              },
              {
                "op": "Test",
                "path": "$.field2",
                "value": {
                  "size": {
                    "eq": 10.5
                  }
                }
              }
            ],
            "steps": [
              {
                "op": "Replace",
                "path": "$.field1",
                "match": "oldValue",
                "value": "newValue"
              },
              {
                "op": "Remove",
                "path": "$.field2"
              }
            ]
          },
          {
            "name": "recovery-flow-2",
            "conditions": [
              {
                "op": "Test",
                "path": "$.field3",
                "value": {
                  "value": 10
                }
              }
            ],
            "steps": [
              {
                "op": "Cast",
                "path": "$.field3",
                "from": "string",
                "to": null
              }
            ]
          }
        ]
      }
    }
  ]
}